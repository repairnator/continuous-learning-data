diff --git a/.travis.yml b/.travis.yml
index f214b00..13b749b 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -3,8 +3,9 @@ language: java
 before_script:
 - unset _JAVA_OPTIONS
 - cd finish
+- chmod +x ../scripts/travisTest.sh
 script:
-- mvn -q clean install
+- ../scripts/travisTest.sh
 - serverName=$(target/liberty/wlp/bin/server list | cut -d '.' -f2| tr -d '\n');
 - build=$(grep "Open Liberty" target/liberty/wlp/usr/servers/"$serverName"/logs/console.log
   | cut -d' ' -f5 | cut -d')' -f1 ); release=$( echo "$build" | cut -d'/' -f1); number=$(
diff --git a/README.adoc b/README.adoc
index 6e37557..b1ce9af 100644
--- a/README.adoc
+++ b/README.adoc
@@ -62,8 +62,12 @@ as several of the built-in constraints and a custom constraint.
 [role='command']
 include::{common-includes}/gitclone.adoc[]
 
+// =================================================================================================
+// Try what you'll build
+// =================================================================================================
+
 [role='command']
-include::{common-includes}/trywhatyoubuild-intro.adoc[]
+include::{common-includes}/twyb-intro.adoc[]
 
 Point your browser to the http://localhost:9080/openapi/ui[http://localhost:9080/openapi/ui^] URL. You see the OpenAPI
 user interface documenting the REST endpoints used in this guide. If you are interested
@@ -112,7 +116,7 @@ other combinations of values to get a feel for the constraints that will be defi
 in this guide.
 
 [role='command']
-include::{common-includes}/trywhatyoubuild-end.adoc[]
+include::{common-includes}/twyb-end.adoc[]
 
 // ==================================================================================
 // Applying constraints on the JavaBeans
@@ -121,6 +125,9 @@ include::{common-includes}/trywhatyoubuild-end.adoc[]
 
 Navigate to the `start` directory to begin.
 
+[role='command']
+include::{common-includes}/devmode-start.adoc[]
+
 First, create the JavaBeans to be constrained. 
 [role="code_command hotspot file=0", subs="quotes"] 
 ---- 
@@ -197,11 +204,11 @@ bean. Instead, because of the [hotspot=Valid file=1]`@Valid` annotation on the f
 the nested constraints on the [hotspot=Astronaut file=0]`Astronaut` bean are validated.
 
 You can also use bean validation with CDI to provide method-level validation. The
-[hotspot=launchSpacecraft file=1]`launchSpacecraft` method on the [hotspot=Spacecraft file=1]`Spacecraft` 
+[hotspot=launchSpacecraft file=1]`launchSpacecraft()` method on the [hotspot=Spacecraft file=1]`Spacecraft` 
 bean accepts a [hotspot=launchCode file=1]`launchCode` parameter, and if the [hotspot=launchCode file=1]`launchCode` 
 parameter is [hotspot=OpenLiberty file=1]`OpenLiberty`, the method returns [hotspot=true file=1]`true` 
 that the spacecraft is launched. Otherwise, the method returns [hotspot=false file=1]`false`. 
-The [hotspot=launchSpacecraft file=1]`launchSpacecraft` method uses both parameter and return value 
+The [hotspot=launchSpacecraft file=1]`launchSpacecraft()` method uses both parameter and return value 
 validation. The [hotspot=launchCode file=1]`@NotNull` constraint eliminates the need to manually 
 check within the method that the parameter is not null. Additionally, the method has the 
 [hotspot=AssertTrue file=1]`@AssertTrue` return-level constraint to enforce that the method must 
@@ -223,7 +230,7 @@ include::finish/src/main/java/io/openliberty/guides/beanvalidation/Spacecraft.ja
 
 [role='code_command hotspot file=1', subs='quotes']
 ---- 
-#Create the annotation.#
+#Replace the annotation.#
 `src/main/java/io/openliberty/guides/beanvalidation/SerialNumber.java`
 ---- 
 
@@ -253,7 +260,7 @@ constraint.
 
 [role='code_command hotspot file=2', subs='quotes']
 ---- 
-#Create the `SerialNumberValidator` class.#
+#Replace the `SerialNumberValidator` class.#
 `src/main/java/io/openliberty/guides/beanvalidation/SerialNumberValidator.java`
 ---- 
 
@@ -266,7 +273,7 @@ include::finish/src/main/java/io/openliberty/guides/beanvalidation/SerialNumberV
 The [hotspot=SerialNumberValidator file=2]`SerialNumberValidator` class has one method, [hotspot=isValid file=2]`isValid()`, 
 which contains the custom validation logic. In this case, the serial number must start 
 with [hotspot=Liberty file=2]`Liberty` followed by 4 numbers, such as `Liberty0001`. If the 
-supplied serial number matches the constraint, [hotspot=isValid file=2]`isValid` returns 
+supplied serial number matches the constraint, [hotspot=isValid file=2]`isValid()` returns 
 `true`. If the serial number does not match, it returns `false`.
 
 // ==================================================================================
@@ -307,25 +314,25 @@ injection. However, you can also obtain the default validator with resource inje
 or a JNDI lookup. The [hotspot=Spacecraft file=0]`Spacecraft` JavaBean is injected so that the 
 method-level constraints can be validated.
 
-The programmatic validation takes place in the [hotspot=validate-Spacecraft file=2]`validateSpacecraft` 
-method. To validate the data, the [hotspot=validate file=2]`validate` method is called on the 
+The programmatic validation takes place in the [hotspot=validate-Spacecraft file=2]`validateSpacecraft()` 
+method. To validate the data, the [hotspot=validate file=2]`validate()` method is called on the 
 [hotspot=Spacecraft file=0]`Spacecraft` bean. Because the [hotspot=Spacecraft file=0]`Spacecraft` 
 bean contains the [hotspot=Valid file=0]`@Valid` constraint on the [hotspot=Astronaut file=1]`Astronaut` 
 bean, both JavaBeans are validated. Any constraint violations found during the call to 
-the [hotspot=validate file=2]`validate` method are returned as a set of [hotspot=ConstraintViolation file=2]`ConstraintViolation` 
+the [hotspot=validate file=2]`validate()` method are returned as a set of [hotspot=ConstraintViolation file=2]`ConstraintViolation` 
 objects.
 
-The method level validation occurs in the [hotspot=launchSpacecraft file=2]`launchSpacecraft` method. 
-A call is then made to the [hotspot=launchSpacecraft file=0]`launchSpacecraft` method on the 
+The method level validation occurs in the [hotspot=launchSpacecraft file=2]`launchSpacecraft()` method. 
+A call is then made to the [hotspot=launchSpacecraft file=0]`launchSpacecraft()` method on the 
 [hotspot=Spacecraft file=0]`Spacecraft` bean, which throws a `ConstraintViolationException` 
 exception if either of the method-level constraints is violated.
 
 // ==================================================================================
-// Building and running the application
+// Running the application
 // ==================================================================================
 
 [role='command']
-include::{common-includes}/mvnbuild.adoc[]
+include::{common-includes}/devmode-build.adoc[]
 
 Navigate to the http://localhost:9080/openapi/ui[http://localhost:9080/openapi/ui^] URL. Expand the
 `/beanvalidation/validatespacecraft POST request to validate your spacecraft bean`
@@ -372,11 +379,9 @@ Constraint Violation Found: must be a well-formed email address
 To try the method-level validation expand the `/beanvalidation/launchspacecraft
 POST request to specify a launch code` section.  Enter `OpenLiberty` in the text box
 to note that `launched` is returned because the launch code passes the defined
-constraints. Replace OpenLiberty with anything else to note that a constraint
+constraints. Replace `OpenLiberty` with anything else to note that a constraint
 violation is returned.
 
-[role='command']
-include::{common-includes}/mvncompile.adoc[]
 
 // ==================================================================================
 // Testing the constraints
@@ -387,26 +392,26 @@ Now, write automated tests to drive the previously created service.
 
 [role='code_command hotspot', subs='quotes']
 ---- 
-#Create `BeanValidationTest` class.#
-`src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationTest.java`
+#Create `BeanValidationIT` class.#
+`src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationIT.java`
 ---- 
 
-BeanValidationTest.java
+BeanValidationIT.java
 [source, java, linenums, role='code_column hide_tags=copyright']
 ----
-include::finish/src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationTest.java[]
+include::finish/src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationIT.java[]
 ----
 
-The [hotspot=Before file=0]`@Before` annotation causes the [hotspot=setup file=0]`setup` method 
-to execute before the test cases. The [hotspot=setup file=0]`setup` method retrieves the 
+The [hotspot=BeforeEach file=0]`@BeforeEach` annotation causes the [hotspot=setup file=0]`setup()` method 
+to execute before the test cases. The [hotspot=setup file=0]`setup()` method retrieves the 
 port number for the Open Liberty server and creates a [hotspot=Client file=0]`Client` that is 
 used throughout the tests, which are described as follows:
 
-* The [hotspot=testNoFieldLevelConstraintViolations file=0]`testNoFieldLevelConstraintViolations` test case verifies that 
+* The [hotspot=testNoFieldLevelConstraintViolations file=0]`testNoFieldLevelConstraintViolations()` test case verifies that 
 constraint violations do not occur when valid data is supplied to the [hotspot=Astronaut file=0]`Astronaut` 
 and [hotspot=Spacecraft file=0]`Spacecraft` bean attributes.
 
-* The [hotspot=testFieldLevelConstraintViolation file=0]`testFieldLevelConstraintViolation` test case verifies that 
+* The [hotspot=testFieldLevelConstraintViolation file=0]`testFieldLevelConstraintViolation()` test case verifies that 
 the appropriate constraint violations occur when data that is supplied to the 
 `Astronaut` and `Spacecraft` attributes violates 
 the defined constraints. Because 3 constraint violations are defined, 3 `ConstraintViolation` 
@@ -416,17 +421,17 @@ in the destination map, [hotspot=expectedEmailResponse file=0]`"must be a well-f
 incorrect email address, and the custom [hotspot=expectedSerialNumberResponse file=0]`"serial number is not valid"` 
 message for the serial number.
 
-* The [hotspot=testNoMethodLevelConstraintViolations file=0]`testNoMethodLevelConstraintViolations` test case verifies 
-that the method-level constraints that are specified on the [hotspot=launchSpacecraft file=1]`launchSpacecraft` 
+* The [hotspot=testNoMethodLevelConstraintViolations file=0]`testNoMethodLevelConstraintViolations()` test case verifies 
+that the method-level constraints that are specified on the [hotspot=launchSpacecraft file=1]`launchSpacecraft()` 
 method of the [hotspot=Spacecraft file=1]`Spacecraft` bean are validated when the method is 
-called with no violations. In this test, the call to the [hotspot=launchSpacecraft file=0]`launchSpacecraft` 
+called with no violations. In this test, the call to the [hotspot=launchSpacecraft file=0]`launchSpacecraft()` 
 method is made with the [hotspot=OpenLiberty file=0]`OpenLiberty` argument. A value of `true` is 
 returned, which passes the specified constraints.
 
-* The [hotspot=testMethodLevelConstraintViolation file=0]`testMethodLevelConstraintViolation` test case verifies 
+* The [hotspot=testMethodLevelConstraintViolation file=0]`testMethodLevelConstraintViolation()` test case verifies 
 that a `ConstraintViolationException` exception is thrown when one of the method-level 
 constraints is violated. A call with an incorrect parameter, [hotspot=incorrectCode file=0]`incorrectCode`, 
-is made to the [hotspot=launchSpacecraft file=1]`launchSpacecraft` method of the [hotspot=Spacecraft file=1]`Spacecraft` 
+is made to the [hotspot=launchSpacecraft file=1]`launchSpacecraft()` method of the [hotspot=Spacecraft file=1]`Spacecraft` 
 bean. The method returns `false`, which violates the defined constraint, and a `ConstraintViolationException` 
 exception is thrown. The exception includes the constraint violation message, which is 
 [hotspot=actualResponse file=0]`must be true` in this example.
@@ -438,22 +443,25 @@ include::finish/src/main/java/io/openliberty/guides/beanvalidation/Spacecraft.ja
 ----
 
 [role='command']
-include::{common-includes}/mvnverify.adoc[]
+include::{common-includes}/devmode-test.adoc[]
 
 [source, role="no_copy"]
 ----
 -------------------------------------------------------
  T E S T S
 -------------------------------------------------------
-Running it.io.openliberty.guides.beanvalidation.BeanValidationTest
+Running it.io.openliberty.guides.beanvalidation.BeanValidationIT
 Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.493 sec - in
-it.io.openliberty.guides.beanvalidation.BeanValidationTest
+it.io.openliberty.guides.beanvalidation.BeanValidationIT
 
 Results :
 
 Tests run: 4, Failures: 0, Errors: 0, Skipped: 0
 ----
 
+[role='command']
+include::{common-includes}/devmode-quit.adoc[]
+
 == Great work! You're done!
 
 You developed and tested a Java microservice by using bean validation and Open 
diff --git a/finish/pom.xml b/finish/pom.xml
index bc1e13e..b6accbe 100644
--- a/finish/pom.xml
+++ b/finish/pom.xml
@@ -1,11 +1,6 @@
 <?xml version='1.0' encoding='utf-8'?>
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>net.wasdev.wlp.maven.parent</groupId>
-        <artifactId>liberty-maven-app-parent</artifactId>
-        <version>RELEASE</version>
-    </parent>
 
     <groupId>io.openliberty.guides</groupId>
     <artifactId>guide-bean-validation</artifactId>
@@ -17,57 +12,38 @@
         <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
         <maven.compiler.source>1.8</maven.compiler.source>
         <maven.compiler.target>1.8</maven.compiler.target>
-        <app.name>Spacecraft</app.name>
-        <testServerHttpPort>9080</testServerHttpPort>
-        <testServerHttpsPort>9443</testServerHttpsPort>
-        <warContext>${app.name}</warContext>
-        <package.file>${project.build.directory}/${app.name}.zip</package.file>
-        <packaging.type>usr</packaging.type>
+        <failOnMissingWebXml>false</failOnMissingWebXml>
+        <!-- Plugin versions -->
+        <version.liberty-maven-plugin>3.1</version.liberty-maven-plugin>
+        <version.maven-failsafe-plugin>2.22.2</version.maven-failsafe-plugin>
+        <version.maven-war-plugin>3.2.3</version.maven-war-plugin>
+        <version.maven-surefire-plugin>2.22.2</version.maven-surefire-plugin>
+        <!-- Liberty configuration -->
+        <liberty.var.default.http.port>9080</liberty.var.default.http.port>
+        <liberty.var.default.https.port>9443</liberty.var.default.https.port>
+        <liberty.var.app.context.root>Spacecraft</liberty.var.app.context.root>
     </properties>
 
-    <dependencyManagement>
-        <dependencies>
-            <dependency>
-                <groupId>io.openliberty.features</groupId>
-                <artifactId>features-bom</artifactId>
-                <version>RELEASE</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-
     <dependencies>
-        <!-- Open Liberty features -->
-        <dependency>
-            <groupId>io.openliberty.features</groupId>
-            <artifactId>beanValidation-2.0</artifactId>
-            <type>esa</type>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>io.openliberty.features</groupId>
-            <artifactId>cdi-2.0</artifactId>
-            <type>esa</type>
-            <scope>provided</scope>
-        </dependency>
+        <!-- Provided dependencies -->
         <dependency>
-            <groupId>io.openliberty.features</groupId>
-            <artifactId>jaxrs-2.1</artifactId>
-            <type>esa</type>
+            <groupId>jakarta.platform</groupId>
+            <artifactId>jakarta.jakartaee-web-api</artifactId>
+            <version>8.0.0</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
-            <groupId>io.openliberty.features</groupId>
-            <artifactId>mpOpenAPI-1.1</artifactId>
-            <type>esa</type>
+            <groupId>org.eclipse.microprofile</groupId>
+            <artifactId>microprofile</artifactId>
+            <version>3.0</version>
+            <type>pom</type>
             <scope>provided</scope>
         </dependency>
         <!-- For tests -->
         <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.12</version>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter-engine</artifactId>
+            <version>5.5.2</version>
             <scope>test</scope>
         </dependency>
         <dependency>
@@ -76,12 +52,6 @@
             <version>3.2.6</version>
             <scope>test</scope>
         </dependency>
-        <dependency>
-            <groupId>javax.json.bind</groupId>
-            <artifactId>javax.json.bind-api</artifactId>
-            <version>1.0</version>
-            <scope>provided</scope>
-        </dependency>
         <dependency>
             <groupId>org.eclipse</groupId>
             <artifactId>yasson</artifactId>
@@ -101,135 +71,38 @@
             <version>2.3.1</version>
             <scope>test</scope>
         </dependency>
-        <dependency>
-            <groupId>com.sun.xml.bind</groupId>
-            <artifactId>jaxb-core</artifactId>
-            <version>2.3.0.1</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>com.sun.xml.bind</groupId>
-            <artifactId>jaxb-impl</artifactId>
-            <version>2.3.2</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>javax.activation</groupId>
-            <artifactId>activation</artifactId>
-            <version>1.1.1</version>
-            <scope>test</scope>
-        </dependency>
     </dependencies>
 
     <build>
+        <finalName>${project.artifactId}</finalName>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-war-plugin</artifactId>
-                <version>3.2.2</version>
-                <configuration>
-                    <failOnMissingWebXml>false</failOnMissingWebXml>
-                    <packagingExcludes>pom.xml</packagingExcludes>
-                </configuration>
+                <version>${version.maven-war-plugin}</version>
             </plugin>
             <!-- Plugin to run unit tests -->
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-plugin</artifactId>
-                <version>3.0.0-M1</version>
-                <executions>
-                    <execution>
-                        <phase>test</phase>
-                        <id>default-test</id>
-                        <configuration>
-                            <excludes>
-                                <exclude>**/it/**</exclude>
-                            </excludes>
-                            <reportsDirectory>
-                                ${project.build.directory}/test-reports/unit
-                            </reportsDirectory>
-                        </configuration>
-                    </execution>
-                </executions>
+                <version>${version.maven-surefire-plugin}</version>
             </plugin>
             <!-- Enable liberty-maven plugin -->
             <plugin>
-                <groupId>net.wasdev.wlp.maven.plugins</groupId>
+                <groupId>io.openliberty.tools</groupId>
                 <artifactId>liberty-maven-plugin</artifactId>
-                <configuration>
-                    <assemblyArtifact>
-                         <groupId>io.openliberty</groupId>
-                         <artifactId>openliberty-runtime</artifactId>
-                         <version>RELEASE</version>
-                        <type>zip</type>
-                    </assemblyArtifact>
-                    <configFile>src/main/liberty/config/server.xml</configFile>
-                    <packageFile>${package.file}</packageFile>
-                    <include>${packaging.type}</include>
-                    <bootstrapProperties>
-                        <default.http.port>${testServerHttpPort}</default.http.port>
-                        <default.https.port>${testServerHttpsPort}</default.https.port>
-                        <app.context.root>${warContext}</app.context.root>
-                    </bootstrapProperties>
-                </configuration>
-                <executions>
-                    <execution>
-                        <id>install-apps</id>
-                        <configuration>
-                            <looseApplication>true</looseApplication>
-                            <stripVersion>true</stripVersion>
-                            <installAppPackages>project</installAppPackages>
-                        </configuration>
-                    </execution>
-                    <execution>
-                        <id>package-server</id>
-                        <configuration>
-                            <outputDirectory>target/wlp-package</outputDirectory>
-                        </configuration>
-                    </execution>
-                </executions>
+                <version>${version.liberty-maven-plugin}</version>
             </plugin>
             <!-- Plugin to run functional tests -->
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-failsafe-plugin</artifactId>
-                <version>3.0.0-M1</version>
-                <executions>
-                    <execution>
-                        <phase>integration-test</phase>
-                        <id>integration-test</id>
-                        <goals>
-                            <goal>integration-test</goal>
-                        </goals>
-                        <configuration>
-                            <includes>
-                                <include>**/it/**</include>
-                            </includes>
-                            <excludes>
-                                <exclude>**/**.gitkeep</exclude>
-                            </excludes>
-                            <systemPropertyVariables>
-                                <liberty.test.port>
-                                    ${testServerHttpPort}
-                                </liberty.test.port>
-                                <war.name>${warContext}</war.name>
-                            </systemPropertyVariables>
-                        </configuration>
-                    </execution>
-                    <execution>
-                        <id>verify-results</id>
-                        <goals>
-                            <goal>verify</goal>
-                        </goals>
-                    </execution>
-                </executions>
+                <version>${version.maven-failsafe-plugin}</version>
                 <configuration>
-                    <summaryFile>
-                        ${project.build.directory}/test-reports/it/failsafe-summary.xml
-                    </summaryFile>
-                    <reportsDirectory>
-                        ${project.build.directory}/test-reports/it
-                    </reportsDirectory>
+                    <systemPropertyVariables>
+                        <http.port>${liberty.var.default.http.port}</http.port>
+                        <war.name>${liberty.var.app.context.root}</war.name>
+                    </systemPropertyVariables>
                 </configuration>
             </plugin>
         </plugins>
diff --git a/finish/src/main/java/io/openliberty/guides/beanvalidation/Astronaut.java b/finish/src/main/java/io/openliberty/guides/beanvalidation/Astronaut.java
index 5a56a06..630f30c 100644
--- a/finish/src/main/java/io/openliberty/guides/beanvalidation/Astronaut.java
+++ b/finish/src/main/java/io/openliberty/guides/beanvalidation/Astronaut.java
@@ -1,6 +1,6 @@
 // tag::copyright[]
 /*******************************************************************************
- * Copyright (c) 2018 IBM Corporation and others.
+ * Copyright (c) 2018, 2019 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -17,8 +17,6 @@
 import javax.validation.constraints.Min;
 import javax.validation.constraints.NotBlank;
 import javax.validation.constraints.Email;
-import javax.inject.Named;
-import javax.enterprise.context.RequestScoped;
 
 // tag::Astronaut[]
 public class Astronaut implements Serializable {
diff --git a/finish/src/main/java/io/openliberty/guides/beanvalidation/SerialNumberValidator.java b/finish/src/main/java/io/openliberty/guides/beanvalidation/SerialNumberValidator.java
index 2cdf4aa..088d66d 100644
--- a/finish/src/main/java/io/openliberty/guides/beanvalidation/SerialNumberValidator.java
+++ b/finish/src/main/java/io/openliberty/guides/beanvalidation/SerialNumberValidator.java
@@ -16,8 +16,8 @@
 import javax.validation.ConstraintValidatorContext;
 
 // tag::SerialNumberValidator[]
-public class SerialNumberValidator implements ConstraintValidator<SerialNumber,
-                                                                  Object> {
+public class SerialNumberValidator 
+    implements ConstraintValidator<SerialNumber,Object> {
 
     @Override
     // tag::isValid[]
diff --git a/finish/src/main/liberty/config/server.xml b/finish/src/main/liberty/config/server.xml
index 6ebe765..1a3bd1d 100644
--- a/finish/src/main/liberty/config/server.xml
+++ b/finish/src/main/liberty/config/server.xml
@@ -7,6 +7,10 @@
         <feature>mpOpenAPI-1.1</feature>
     </featureManager>
 
+    <variable name="default.http.port" defaultValue="9080"/>
+    <variable name="default.https.port" defaultValue="9443"/>
+    <variable name="app.context.root" defaultValue="Spacecraft"/>
+
     <httpEndpoint httpPort="${default.http.port}" httpsPort="${default.https.port}"
         id="defaultHttpEndpoint" host="*" />
 
diff --git a/finish/src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationTest.java b/finish/src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationIT.java
similarity index 81%
rename from finish/src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationTest.java
rename to finish/src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationIT.java
index 896ba55..93f41cd 100644
--- a/finish/src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationTest.java
+++ b/finish/src/test/java/it/io/openliberty/guides/beanvalidation/BeanValidationIT.java
@@ -12,13 +12,12 @@
  // end::copyright[]
 package it.io.openliberty.guides.beanvalidation;
 
-import org.junit.Test;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
 
 import io.openliberty.guides.beanvalidation.Astronaut;
 import io.openliberty.guides.beanvalidation.Spacecraft;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
 import java.util.HashMap;
 
 import javax.json.bind.Jsonb;
@@ -29,27 +28,28 @@
 import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.Response;
 
-import org.junit.After;
-import org.junit.Before;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
 
-public class BeanValidationTest {
+public class BeanValidationIT {
 
     private Client client;
     private static String port;
 
-    // tag::Before[]
-    @Before
-    // end::Before[]
+    // tag::BeforeEach[]
+    @BeforeEach
+    // end::BeforeEach[]
     // tag::setup[]
     public void setup() {
         // tag::Client[]
         client = ClientBuilder.newClient();
         // end::Client[]
-        port = System.getProperty("liberty.test.port");
+        port = System.getProperty("http.port");
     }
     // end::setup[]
 
-    @After
+    @AfterEach
     public void teardown() {
         client.close();
     }
@@ -80,8 +80,8 @@ public void testNoFieldLevelConstraintViolations() throws Exception {
         String actualResponse = response.readEntity(String.class);
         String expectedResponse = "No Constraint Violations";
         
-        assertEquals("Unexpected response when validating beans.", 
-                expectedResponse, actualResponse);
+        assertEquals(expectedResponse, actualResponse,
+                "Unexpected response when validating beans.");
     }
     // end::testNoFieldLevelConstraintViolations[]
 
@@ -111,18 +111,18 @@ public void testFieldLevelConstraintViolation() throws Exception {
         // tag::expectedDestinationResponse[]
         String expectedDestinationResponse = "must be greater than 0";
         // end::expectedDestinationResponse[]
-        assertTrue("Expected response to contain: " + expectedDestinationResponse,
-                actualResponse.contains(expectedDestinationResponse));
+        assertTrue(actualResponse.contains(expectedDestinationResponse),
+                "Expected response to contain: " + expectedDestinationResponse);
         // tag::expectedEmailResponse[]
         String expectedEmailResponse = "must be a well-formed email address";
         // end::expectedEmailResponse[]
-        assertTrue("Expected response to contain: " + expectedEmailResponse,
-                actualResponse.contains(expectedEmailResponse));
+        assertTrue(actualResponse.contains(expectedEmailResponse),
+                "Expected response to contain: " + expectedEmailResponse);
         // tag::expectedSerialNumberResponse[]
         String expectedSerialNumberResponse = "serial number is not valid";
         // end::expectedSerialNumberResponse[]
-        assertTrue("Expected response to contain: " + expectedSerialNumberResponse,
-                actualResponse.contains(expectedSerialNumberResponse));
+        assertTrue(actualResponse.contains(expectedSerialNumberResponse),
+                "Expected response to contain: " + expectedSerialNumberResponse);
     }
     // end::testFieldLevelConstraintViolation[]
 
@@ -140,8 +140,8 @@ public void testNoMethodLevelConstraintViolations() throws Exception {
         String actualResponse = response.readEntity(String.class);
         String expectedResponse = "launched";
         
-        assertEquals("Unexpected response from call to launchSpacecraft", 
-                expectedResponse, actualResponse);
+        assertEquals(expectedResponse, actualResponse,
+                "Unexpected response from call to launchSpacecraft");
        
     }
     // end::testNoMethodLevelConstraintViolations[]
@@ -156,10 +156,11 @@ public void testMethodLevelConstraintViolation() throws Exception {
                 launchCode, true);
         
         String actualResponse = response.readEntity(String.class);
-        assertTrue("Unexpected response from call to launchSpacecraft",
-        // tag::actualResponse[]
-        actualResponse.contains("must be true"));
-        // end::actualResponse[]
+        assertTrue(
+                // tag::actualResponse[]
+                actualResponse.contains("must be true"),
+                // end::actualResponse[]
+                "Unexpected response from call to launchSpacecraft");
     }
     // end::testMethodLevelConstraintViolation[]
     
diff --git a/scripts/travisTest.sh b/scripts/travisTest.sh
new file mode 100644
index 0000000..81b26f0
--- /dev/null
+++ b/scripts/travisTest.sh
@@ -0,0 +1,29 @@
+#!/bin/bash
+set -euxo pipefail
+
+##############################################################################
+##
+##  Travis CI test script
+##
+##############################################################################
+
+# LMP 3.0+ goals are listed here: https://github.com/OpenLiberty/ci.maven#goals
+
+## Rebuild the application
+#       package                   - Take the compiled code and package it in its distributable format.
+#       liberty:create            - Create a Liberty server.
+#       liberty:install-feature   - Install a feature packaged as a Subsystem Archive (esa) to the Liberty runtime.
+#       liberty:deploy            - Copy applications to the Liberty server's dropins or apps directory. 
+mvn -q clean package liberty:create liberty:install-feature liberty:deploy
+
+
+## Run the tests
+# These commands are separated because if one of the commands fail, the test script will fail and exit. 
+# e.g if liberty:start fails, then there is no need to run the failsafe commands. 
+#       liberty:start             - Start a Liberty server in the background.
+#       failsafe:integration-test - Runs the integration tests of an application.
+#       liberty:stop              - Stop a Liberty server.
+#       failsafe:verify           - Verifies that the integration tests of an application passed.
+mvn liberty:start
+mvn failsafe:integration-test liberty:stop
+mvn failsafe:verify
\ No newline at end of file
diff --git a/start/pom.xml b/start/pom.xml
index bc1e13e..b6accbe 100644
--- a/start/pom.xml
+++ b/start/pom.xml
@@ -1,11 +1,6 @@
 <?xml version='1.0' encoding='utf-8'?>
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>net.wasdev.wlp.maven.parent</groupId>
-        <artifactId>liberty-maven-app-parent</artifactId>
-        <version>RELEASE</version>
-    </parent>
 
     <groupId>io.openliberty.guides</groupId>
     <artifactId>guide-bean-validation</artifactId>
@@ -17,57 +12,38 @@
         <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
         <maven.compiler.source>1.8</maven.compiler.source>
         <maven.compiler.target>1.8</maven.compiler.target>
-        <app.name>Spacecraft</app.name>
-        <testServerHttpPort>9080</testServerHttpPort>
-        <testServerHttpsPort>9443</testServerHttpsPort>
-        <warContext>${app.name}</warContext>
-        <package.file>${project.build.directory}/${app.name}.zip</package.file>
-        <packaging.type>usr</packaging.type>
+        <failOnMissingWebXml>false</failOnMissingWebXml>
+        <!-- Plugin versions -->
+        <version.liberty-maven-plugin>3.1</version.liberty-maven-plugin>
+        <version.maven-failsafe-plugin>2.22.2</version.maven-failsafe-plugin>
+        <version.maven-war-plugin>3.2.3</version.maven-war-plugin>
+        <version.maven-surefire-plugin>2.22.2</version.maven-surefire-plugin>
+        <!-- Liberty configuration -->
+        <liberty.var.default.http.port>9080</liberty.var.default.http.port>
+        <liberty.var.default.https.port>9443</liberty.var.default.https.port>
+        <liberty.var.app.context.root>Spacecraft</liberty.var.app.context.root>
     </properties>
 
-    <dependencyManagement>
-        <dependencies>
-            <dependency>
-                <groupId>io.openliberty.features</groupId>
-                <artifactId>features-bom</artifactId>
-                <version>RELEASE</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-
     <dependencies>
-        <!-- Open Liberty features -->
-        <dependency>
-            <groupId>io.openliberty.features</groupId>
-            <artifactId>beanValidation-2.0</artifactId>
-            <type>esa</type>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>io.openliberty.features</groupId>
-            <artifactId>cdi-2.0</artifactId>
-            <type>esa</type>
-            <scope>provided</scope>
-        </dependency>
+        <!-- Provided dependencies -->
         <dependency>
-            <groupId>io.openliberty.features</groupId>
-            <artifactId>jaxrs-2.1</artifactId>
-            <type>esa</type>
+            <groupId>jakarta.platform</groupId>
+            <artifactId>jakarta.jakartaee-web-api</artifactId>
+            <version>8.0.0</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
-            <groupId>io.openliberty.features</groupId>
-            <artifactId>mpOpenAPI-1.1</artifactId>
-            <type>esa</type>
+            <groupId>org.eclipse.microprofile</groupId>
+            <artifactId>microprofile</artifactId>
+            <version>3.0</version>
+            <type>pom</type>
             <scope>provided</scope>
         </dependency>
         <!-- For tests -->
         <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.12</version>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter-engine</artifactId>
+            <version>5.5.2</version>
             <scope>test</scope>
         </dependency>
         <dependency>
@@ -76,12 +52,6 @@
             <version>3.2.6</version>
             <scope>test</scope>
         </dependency>
-        <dependency>
-            <groupId>javax.json.bind</groupId>
-            <artifactId>javax.json.bind-api</artifactId>
-            <version>1.0</version>
-            <scope>provided</scope>
-        </dependency>
         <dependency>
             <groupId>org.eclipse</groupId>
             <artifactId>yasson</artifactId>
@@ -101,135 +71,38 @@
             <version>2.3.1</version>
             <scope>test</scope>
         </dependency>
-        <dependency>
-            <groupId>com.sun.xml.bind</groupId>
-            <artifactId>jaxb-core</artifactId>
-            <version>2.3.0.1</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>com.sun.xml.bind</groupId>
-            <artifactId>jaxb-impl</artifactId>
-            <version>2.3.2</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>javax.activation</groupId>
-            <artifactId>activation</artifactId>
-            <version>1.1.1</version>
-            <scope>test</scope>
-        </dependency>
     </dependencies>
 
     <build>
+        <finalName>${project.artifactId}</finalName>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-war-plugin</artifactId>
-                <version>3.2.2</version>
-                <configuration>
-                    <failOnMissingWebXml>false</failOnMissingWebXml>
-                    <packagingExcludes>pom.xml</packagingExcludes>
-                </configuration>
+                <version>${version.maven-war-plugin}</version>
             </plugin>
             <!-- Plugin to run unit tests -->
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-plugin</artifactId>
-                <version>3.0.0-M1</version>
-                <executions>
-                    <execution>
-                        <phase>test</phase>
-                        <id>default-test</id>
-                        <configuration>
-                            <excludes>
-                                <exclude>**/it/**</exclude>
-                            </excludes>
-                            <reportsDirectory>
-                                ${project.build.directory}/test-reports/unit
-                            </reportsDirectory>
-                        </configuration>
-                    </execution>
-                </executions>
+                <version>${version.maven-surefire-plugin}</version>
             </plugin>
             <!-- Enable liberty-maven plugin -->
             <plugin>
-                <groupId>net.wasdev.wlp.maven.plugins</groupId>
+                <groupId>io.openliberty.tools</groupId>
                 <artifactId>liberty-maven-plugin</artifactId>
-                <configuration>
-                    <assemblyArtifact>
-                         <groupId>io.openliberty</groupId>
-                         <artifactId>openliberty-runtime</artifactId>
-                         <version>RELEASE</version>
-                        <type>zip</type>
-                    </assemblyArtifact>
-                    <configFile>src/main/liberty/config/server.xml</configFile>
-                    <packageFile>${package.file}</packageFile>
-                    <include>${packaging.type}</include>
-                    <bootstrapProperties>
-                        <default.http.port>${testServerHttpPort}</default.http.port>
-                        <default.https.port>${testServerHttpsPort}</default.https.port>
-                        <app.context.root>${warContext}</app.context.root>
-                    </bootstrapProperties>
-                </configuration>
-                <executions>
-                    <execution>
-                        <id>install-apps</id>
-                        <configuration>
-                            <looseApplication>true</looseApplication>
-                            <stripVersion>true</stripVersion>
-                            <installAppPackages>project</installAppPackages>
-                        </configuration>
-                    </execution>
-                    <execution>
-                        <id>package-server</id>
-                        <configuration>
-                            <outputDirectory>target/wlp-package</outputDirectory>
-                        </configuration>
-                    </execution>
-                </executions>
+                <version>${version.liberty-maven-plugin}</version>
             </plugin>
             <!-- Plugin to run functional tests -->
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-failsafe-plugin</artifactId>
-                <version>3.0.0-M1</version>
-                <executions>
-                    <execution>
-                        <phase>integration-test</phase>
-                        <id>integration-test</id>
-                        <goals>
-                            <goal>integration-test</goal>
-                        </goals>
-                        <configuration>
-                            <includes>
-                                <include>**/it/**</include>
-                            </includes>
-                            <excludes>
-                                <exclude>**/**.gitkeep</exclude>
-                            </excludes>
-                            <systemPropertyVariables>
-                                <liberty.test.port>
-                                    ${testServerHttpPort}
-                                </liberty.test.port>
-                                <war.name>${warContext}</war.name>
-                            </systemPropertyVariables>
-                        </configuration>
-                    </execution>
-                    <execution>
-                        <id>verify-results</id>
-                        <goals>
-                            <goal>verify</goal>
-                        </goals>
-                    </execution>
-                </executions>
+                <version>${version.maven-failsafe-plugin}</version>
                 <configuration>
-                    <summaryFile>
-                        ${project.build.directory}/test-reports/it/failsafe-summary.xml
-                    </summaryFile>
-                    <reportsDirectory>
-                        ${project.build.directory}/test-reports/it
-                    </reportsDirectory>
+                    <systemPropertyVariables>
+                        <http.port>${liberty.var.default.http.port}</http.port>
+                        <war.name>${liberty.var.app.context.root}</war.name>
+                    </systemPropertyVariables>
                 </configuration>
             </plugin>
         </plugins>
diff --git a/start/src/main/java/io/openliberty/guides/beanvalidation/SerialNumber.java b/start/src/main/java/io/openliberty/guides/beanvalidation/SerialNumber.java
new file mode 100644
index 0000000..3d753e3
--- /dev/null
+++ b/start/src/main/java/io/openliberty/guides/beanvalidation/SerialNumber.java
@@ -0,0 +1,9 @@
+package io.openliberty.guides.beanvalidation;
+
+import java.lang.annotation.Retention;
+import static java.lang.annotation.RetentionPolicy.RUNTIME;
+
+@Retention(RUNTIME)
+public @interface SerialNumber {
+
+}
\ No newline at end of file
diff --git a/start/src/main/java/io/openliberty/guides/beanvalidation/SerialNumberValidator.java b/start/src/main/java/io/openliberty/guides/beanvalidation/SerialNumberValidator.java
new file mode 100644
index 0000000..a5d3f80
--- /dev/null
+++ b/start/src/main/java/io/openliberty/guides/beanvalidation/SerialNumberValidator.java
@@ -0,0 +1,14 @@
+package io.openliberty.guides.beanvalidation;
+
+import javax.validation.ConstraintValidator;
+import javax.validation.ConstraintValidatorContext;
+
+public class SerialNumberValidator 
+    implements ConstraintValidator<SerialNumber,Object> {
+
+    @Override
+    public boolean isValid(Object arg0, ConstraintValidatorContext arg1) {
+        boolean isValid = true;
+        return isValid;
+    }
+}
diff --git a/start/src/main/liberty/config/server.xml b/start/src/main/liberty/config/server.xml
index 6ebe765..1a3bd1d 100644
--- a/start/src/main/liberty/config/server.xml
+++ b/start/src/main/liberty/config/server.xml
@@ -7,6 +7,10 @@
         <feature>mpOpenAPI-1.1</feature>
     </featureManager>
 
+    <variable name="default.http.port" defaultValue="9080"/>
+    <variable name="default.https.port" defaultValue="9443"/>
+    <variable name="app.context.root" defaultValue="Spacecraft"/>
+
     <httpEndpoint httpPort="${default.http.port}" httpsPort="${default.https.port}"
         id="defaultHttpEndpoint" host="*" />
 
