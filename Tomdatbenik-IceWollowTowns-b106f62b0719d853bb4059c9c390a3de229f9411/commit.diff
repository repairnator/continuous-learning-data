diff --git a/IceWollowTownsAPI/.idea/workspace.xml b/IceWollowTownsAPI/.idea/workspace.xml
index 71935e8..c30237d 100644
--- a/IceWollowTownsAPI/.idea/workspace.xml
+++ b/IceWollowTownsAPI/.idea/workspace.xml
@@ -294,7 +294,7 @@
       <workItem from="1578903135770" duration="81000" />
       <workItem from="1578910921876" duration="1566000" />
       <workItem from="1578991763066" duration="338000" />
-      <workItem from="1578992109428" duration="6511000" />
+      <workItem from="1578992109428" duration="10097000" />
     </task>
     <servers />
   </component>
@@ -380,46 +380,46 @@
     </state>
     <state x="-1180" y="294" key="FileChooserDialogImpl/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578137653131" />
     <state x="740" y="294" key="FileChooserDialogImpl/0.0.1920.1080@0.0.1920.1080" timestamp="1578903214003" />
-    <state width="1877" height="291" key="GridCell.Tab.0.bottom" timestamp="1578993625149">
+    <state width="1877" height="291" key="GridCell.Tab.0.bottom" timestamp="1579000375853">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
     <state width="1877" height="283" key="GridCell.Tab.0.bottom/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578147195495" />
-    <state width="1877" height="291" key="GridCell.Tab.0.bottom/0.0.1920.1080@0.0.1920.1080" timestamp="1578993625149" />
-    <state width="1877" height="291" key="GridCell.Tab.0.center" timestamp="1578993625149">
+    <state width="1877" height="291" key="GridCell.Tab.0.bottom/0.0.1920.1080@0.0.1920.1080" timestamp="1579000375853" />
+    <state width="1877" height="291" key="GridCell.Tab.0.center" timestamp="1579000375853">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
     <state width="1877" height="283" key="GridCell.Tab.0.center/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578147195494" />
-    <state width="1877" height="291" key="GridCell.Tab.0.center/0.0.1920.1080@0.0.1920.1080" timestamp="1578993625149" />
-    <state width="1877" height="291" key="GridCell.Tab.0.left" timestamp="1578993625149">
+    <state width="1877" height="291" key="GridCell.Tab.0.center/0.0.1920.1080@0.0.1920.1080" timestamp="1579000375853" />
+    <state width="1877" height="291" key="GridCell.Tab.0.left" timestamp="1579000375853">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
     <state width="1877" height="283" key="GridCell.Tab.0.left/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578147195494" />
-    <state width="1877" height="291" key="GridCell.Tab.0.left/0.0.1920.1080@0.0.1920.1080" timestamp="1578993625149" />
-    <state width="1877" height="291" key="GridCell.Tab.0.right" timestamp="1578993625149">
+    <state width="1877" height="291" key="GridCell.Tab.0.left/0.0.1920.1080@0.0.1920.1080" timestamp="1579000375853" />
+    <state width="1877" height="291" key="GridCell.Tab.0.right" timestamp="1579000375853">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
     <state width="1877" height="283" key="GridCell.Tab.0.right/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578147195495" />
-    <state width="1877" height="291" key="GridCell.Tab.0.right/0.0.1920.1080@0.0.1920.1080" timestamp="1578993625149" />
-    <state width="1877" height="291" key="GridCell.Tab.1.bottom" timestamp="1578993625150">
+    <state width="1877" height="291" key="GridCell.Tab.0.right/0.0.1920.1080@0.0.1920.1080" timestamp="1579000375853" />
+    <state width="1877" height="291" key="GridCell.Tab.1.bottom" timestamp="1579000375854">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
     <state width="1877" height="283" key="GridCell.Tab.1.bottom/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578147195495" />
-    <state width="1877" height="291" key="GridCell.Tab.1.bottom/0.0.1920.1080@0.0.1920.1080" timestamp="1578993625150" />
-    <state width="1877" height="291" key="GridCell.Tab.1.center" timestamp="1578993625150">
+    <state width="1877" height="291" key="GridCell.Tab.1.bottom/0.0.1920.1080@0.0.1920.1080" timestamp="1579000375854" />
+    <state width="1877" height="291" key="GridCell.Tab.1.center" timestamp="1579000375853">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
     <state width="1877" height="283" key="GridCell.Tab.1.center/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578147195495" />
-    <state width="1877" height="291" key="GridCell.Tab.1.center/0.0.1920.1080@0.0.1920.1080" timestamp="1578993625150" />
-    <state width="1877" height="291" key="GridCell.Tab.1.left" timestamp="1578993625150">
+    <state width="1877" height="291" key="GridCell.Tab.1.center/0.0.1920.1080@0.0.1920.1080" timestamp="1579000375853" />
+    <state width="1877" height="291" key="GridCell.Tab.1.left" timestamp="1579000375853">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
     <state width="1877" height="283" key="GridCell.Tab.1.left/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578147195495" />
-    <state width="1877" height="291" key="GridCell.Tab.1.left/0.0.1920.1080@0.0.1920.1080" timestamp="1578993625150" />
-    <state width="1877" height="291" key="GridCell.Tab.1.right" timestamp="1578993625150">
+    <state width="1877" height="291" key="GridCell.Tab.1.left/0.0.1920.1080@0.0.1920.1080" timestamp="1579000375853" />
+    <state width="1877" height="291" key="GridCell.Tab.1.right" timestamp="1579000375853">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
     <state width="1877" height="283" key="GridCell.Tab.1.right/0.0.1920.1080/-1920.0.1920.1080@-1920.0.1920.1080" timestamp="1578147195495" />
-    <state width="1877" height="291" key="GridCell.Tab.1.right/0.0.1920.1080@0.0.1920.1080" timestamp="1578993625150" />
+    <state width="1877" height="291" key="GridCell.Tab.1.right/0.0.1920.1080@0.0.1920.1080" timestamp="1579000375853" />
     <state width="1877" height="283" key="GridCell.Tab.2.bottom" timestamp="1578993586896">
       <screen x="0" y="0" width="1920" height="1080" />
     </state>
@@ -540,11 +540,6 @@
           <line>54</line>
           <option name="timeStamp" value="180" />
         </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/Settlement/src/main/java/settlementcomponent/controllers/SettlementController.java</url>
-          <line>21</line>
-          <option name="timeStamp" value="184" />
-        </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/MerchantGuild/src/main/java/merchantguild/dal/database/context/MerchantGuildContextSql.java</url>
           <line>21</line>
diff --git a/IceWollowTownsAPI/Database/src/main/java/stockpileserver/dal/models/abstractClasses/mySql/MySqlDatabase.java b/IceWollowTownsAPI/Database/src/main/java/stockpileserver/dal/models/abstractClasses/mySql/MySqlDatabase.java
index 6a12f07..3f410bd 100644
--- a/IceWollowTownsAPI/Database/src/main/java/stockpileserver/dal/models/abstractClasses/mySql/MySqlDatabase.java
+++ b/IceWollowTownsAPI/Database/src/main/java/stockpileserver/dal/models/abstractClasses/mySql/MySqlDatabase.java
@@ -176,27 +176,28 @@ public DataCollection excecuteQuery(String query, List<Parameter> parameters) {
 
     @Override
     public boolean executeStatusQuery(String query) {
+        boolean state = false;
         Connection connection = getConnection();
 
         try (PreparedStatement cst = connection.prepareStatement(query)) {
             cst.executeUpdate();
         } catch (SQLException e) {
             Logger.getLogger(MySqlDatabase.class.getName()).log(Level.SEVERE, e.getMessage(), e);
-            return false;
         } finally {
             try {
                 connection.close();
+                state = true;
             } catch (SQLException e) {
                 Logger.getLogger(MySqlDatabase.class.getName()).log(Level.SEVERE, e.getMessage(), e);
-                return false;
             }
         }
 
-        return true;
+        return state;
     }
 
     @Override
     public boolean executeStatusQuery(String query, List<Parameter> parameters) {
+        boolean state = false;
         Connection connection = getConnection();
 
         try (PreparedStatement cst = connection.prepareStatement(query)) {
@@ -208,17 +209,18 @@ public boolean executeStatusQuery(String query, List<Parameter> parameters) {
         } finally {
             try {
                 connection.close();
+                state = true;
             } catch (SQLException e) {
                 Logger.getLogger(MySqlDatabase.class.getName()).log(Level.SEVERE, e.getMessage(), e);
-                return false;
             }
         }
 
-        return true;
+        return state;
     }
 
     @Override
     public boolean executeStatusQuery(String query, Parameter parameter) {
+        boolean state = false;
         Connection connection = getConnection();
 
         try (PreparedStatement cst = connection.prepareStatement(query)) {
@@ -230,12 +232,12 @@ public boolean executeStatusQuery(String query, Parameter parameter) {
         } finally {
             try {
                 connection.close();
+                state = true;
             } catch (SQLException e) {
                 Logger.getLogger(MySqlDatabase.class.getName()).log(Level.SEVERE, e.getMessage(), e);
-                return false;
             }
         }
 
-        return true;
+        return state;
     }
 }
diff --git a/IceWollowTownsAPI/Database/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/IceWollowTownsAPI/Database/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
index 6fe0ba0..5e88d2d 100644
--- a/IceWollowTownsAPI/Database/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
+++ b/IceWollowTownsAPI/Database/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
@@ -5,6 +5,7 @@ stockpileserver\dal\models\TestDatabase.class
 stockpileserver\dal\models\data\DataCollection.class
 stockpileserver\dal\models\data\DataRow.class
 stockpileserver\dal\models\abstractClasses\Database.class
+stockpileserver\dal\models\TomdatbenikDatabase.class
 stockpileserver\dal\models\abstractClasses\Parameter.class
 stockpileserver\dal\models\abstractClasses\mySql\MySqlParameter.class
 stockpileserver\dal\models\data\Data.class
diff --git a/IceWollowTownsAPI/Database/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/IceWollowTownsAPI/Database/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
index 82ca9cb..5934748 100644
--- a/IceWollowTownsAPI/Database/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
+++ b/IceWollowTownsAPI/Database/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
@@ -2,6 +2,7 @@ C:\Development\School\Semester_3\Github_Projects\IceWollowTowns\IceWollowTownsAP
 C:\Development\School\Semester_3\Github_Projects\IceWollowTowns\IceWollowTownsAPI\Database\src\main\java\stockpileserver\dal\models\data\DataRow.java
 C:\Development\School\Semester_3\Github_Projects\IceWollowTowns\IceWollowTownsAPI\Database\src\main\java\stockpileserver\dal\models\abstractClasses\Database.java
 C:\Development\School\Semester_3\Github_Projects\IceWollowTowns\IceWollowTownsAPI\Database\src\main\java\stockpileserver\dal\models\TestDatabase.java
+C:\Development\School\Semester_3\Github_Projects\IceWollowTowns\IceWollowTownsAPI\Database\src\main\java\stockpileserver\dal\models\TomdatbenikDatabase.java
 C:\Development\School\Semester_3\Github_Projects\IceWollowTowns\IceWollowTownsAPI\Database\src\main\java\stockpileserver\dal\models\abstractClasses\mySql\MySqlDatabase.java
 C:\Development\School\Semester_3\Github_Projects\IceWollowTowns\IceWollowTownsAPI\Database\src\main\java\stockpileserver\dal\models\data\DataCollection.java
 C:\Development\School\Semester_3\Github_Projects\IceWollowTowns\IceWollowTownsAPI\Database\src\main\java\stockpileserver\dal\models\FontysDatabase.java
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/Factories/BuildingFactory.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/Factories/BuildingFactory.java
index cd99b15..bc0d428 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/Factories/BuildingFactory.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/Factories/BuildingFactory.java
@@ -1,16 +1,13 @@
-package settlementcomponent.Factories;
+package settlementcomponent.factories;
 
 import settlementcomponent.dal.context.BuildingContextSql;
-import settlementcomponent.dal.context.SettlementContextSql;
-import settlementcomponent.dal.context.SettlementContextTestDB;
 import settlementcomponent.dal.repo.BuildingRepo;
-import settlementcomponent.dal.repo.SettlementRepo;
 import settlementcomponent.interfaces.IBuildingCollectionRepo;
 import settlementcomponent.interfaces.IBuildingRepo;
-import settlementcomponent.interfaces.ISettlementCollectionRepo;
-import settlementcomponent.interfaces.ISettlementRepo;
 
 public class BuildingFactory {
+    private BuildingFactory(){}
+
     public static IBuildingRepo createBuildingRepo() { return new BuildingRepo(new BuildingContextSql()) {
     }; }
 
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/Factories/SettlementFactory.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/Factories/SettlementFactory.java
index 1cc01e1..86a7b12 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/Factories/SettlementFactory.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/Factories/SettlementFactory.java
@@ -1,4 +1,4 @@
-package settlementcomponent.Factories;
+package settlementcomponent.factories;
 
 import settlementcomponent.dal.context.SettlementContextSql;
 import settlementcomponent.dal.context.SettlementContextTestDB;
@@ -8,6 +8,8 @@
 
 public class SettlementFactory {
 
+    private SettlementFactory(){}
+
     public static ISettlementRepo createSettlementRepo() { return new SettlementRepo(new SettlementContextSql()); }
 
     public static ISettlementCollectionRepo createSettlementCollectionRepo() { return new SettlementRepo(new SettlementContextSql()); }
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/dal/repo/SettlementRepo.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/dal/repo/SettlementRepo.java
index 0eee6ef..349134d 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/dal/repo/SettlementRepo.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/dal/repo/SettlementRepo.java
@@ -24,11 +24,6 @@ public Settlement getSettlementByUserId(Integer user_id) {
         return context.getSettlementByUserId(user_id);
     }
 
-    @Override
-    public Settlement getSettlementById(Integer settlement_id) {
-        return context.getSettlementById(settlement_id);
-    }
-
     @Override
     public Settlement deleteSettlement(Integer settlement_id) {
         return context.deleteSettlement(settlement_id);
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/interfaces/IBuildingContext.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/interfaces/IBuildingContext.java
index b307eac..d8e6953 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/interfaces/IBuildingContext.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/interfaces/IBuildingContext.java
@@ -1,5 +1,16 @@
 package settlementcomponent.interfaces;
 
-public interface IBuildingContext extends IBuildingRepo, IBuildingCollectionRepo {
+import settlementcomponent.models.Construction;
+import settlementcomponent.models.Settlement;
+import settlementcomponent.models.buildings.Building;
+import settlementcomponent.models.buildings.BuildingType;
 
+public interface IBuildingContext {
+    void setBuildings(Settlement settlement);
+
+    boolean tryBuildBuilding(BuildingType type, Construction construction, Settlement settlement, Building building);
+
+    Building getBuildingById(Integer building_id);
+
+    boolean upgradeBuilding(Building building, Settlement settlement);
 }
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/interfaces/ISettlementCollectionRepo.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/interfaces/ISettlementCollectionRepo.java
index fca4ce4..ef5214c 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/interfaces/ISettlementCollectionRepo.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/interfaces/ISettlementCollectionRepo.java
@@ -8,8 +8,6 @@
 
     Settlement getSettlementByUserId(Integer user_id);
 
-    Settlement getSettlementById(Integer settlement_id);
-
     Settlement deleteSettlement(Integer settlement_id);
 
 }
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/BuildingCollectionLogic.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/BuildingCollectionLogic.java
index 3b353bf..fbcd23f 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/BuildingCollectionLogic.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/BuildingCollectionLogic.java
@@ -1,7 +1,7 @@
 package settlementcomponent.logic;
 
 import org.springframework.lang.Nullable;
-import settlementcomponent.Factories.BuildingFactory;
+import settlementcomponent.factories.BuildingFactory;
 import settlementcomponent.interfaces.IBuildingCollectionRepo;
 import settlementcomponent.models.Construction;
 import settlementcomponent.models.Settlement;
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/BuildingLogic.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/BuildingLogic.java
index 3ef1391..c32316f 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/BuildingLogic.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/BuildingLogic.java
@@ -1,7 +1,7 @@
 package settlementcomponent.logic;
 
 import org.springframework.lang.Nullable;
-import settlementcomponent.Factories.BuildingFactory;
+import settlementcomponent.factories.BuildingFactory;
 import settlementcomponent.interfaces.IBuildingRepo;
 import settlementcomponent.models.Settlement;
 import settlementcomponent.models.buildings.Building;
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/SettlementCollectionLogic.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/SettlementCollectionLogic.java
index 4cd60c2..c90bfb0 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/SettlementCollectionLogic.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/SettlementCollectionLogic.java
@@ -1,7 +1,7 @@
 package settlementcomponent.logic;
 
 import org.springframework.lang.Nullable;
-import settlementcomponent.Factories.SettlementFactory;
+import settlementcomponent.factories.SettlementFactory;
 import settlementcomponent.interfaces.ISettlementCollectionRepo;
 import settlementcomponent.models.Settlement;
 
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/SettlementLogic.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/SettlementLogic.java
index 2dea1bb..0624f05 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/SettlementLogic.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/logic/SettlementLogic.java
@@ -1,7 +1,7 @@
 package settlementcomponent.logic;
 
 import org.springframework.lang.Nullable;
-import settlementcomponent.Factories.SettlementFactory;
+import settlementcomponent.factories.SettlementFactory;
 import settlementcomponent.interfaces.ISettlementRepo;
 import settlementcomponent.models.Construction;
 import settlementcomponent.models.Settlement;
diff --git a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/models/buildings/House.java b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/models/buildings/House.java
index fef441f..ef5a4aa 100644
--- a/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/models/buildings/House.java
+++ b/IceWollowTownsAPI/Settlement/src/main/java/settlementcomponent/models/buildings/House.java
@@ -5,8 +5,9 @@
 
 import java.util.Random;
 
-public class House extends Building{
+public class House extends Building {
 
+    private final Random rand = new Random();
     private int maxPopulation;
 
     public House() {
@@ -22,26 +23,25 @@ public House(Integer id, Integer level) {
         this.level = level;
         setup();
 
-        switch (level)
-        {
+        switch (level) {
             case 1:
-                this.maxPopulation=Integer.parseInt(Application.getProperties().getProperty("House.Level1.population"));
+                this.maxPopulation = Integer.parseInt(Application.getProperties().getProperty("House.Level1.population"));
                 this.resource.setAmount(Integer.parseInt(Application.getProperties().getProperty("House.Level1.population")));
                 break;
             case 2:
-                this.maxPopulation=Integer.parseInt(Application.getProperties().getProperty("House.Level2.population"));
+                this.maxPopulation = Integer.parseInt(Application.getProperties().getProperty("House.Level2.population"));
                 this.resource.setAmount(Integer.parseInt(Application.getProperties().getProperty("House.Level2.population")));
                 break;
             case 3:
-                this.maxPopulation=Integer.parseInt(Application.getProperties().getProperty("House.Level3.population"));
+                this.maxPopulation = Integer.parseInt(Application.getProperties().getProperty("House.Level3.population"));
                 this.resource.setAmount(Integer.parseInt(Application.getProperties().getProperty("House.Level3.population")));
                 break;
             case 4:
-                this.maxPopulation=Integer.parseInt(Application.getProperties().getProperty("House.Level4.population"));
+                this.maxPopulation = Integer.parseInt(Application.getProperties().getProperty("House.Level4.population"));
                 this.resource.setAmount(Integer.parseInt(Application.getProperties().getProperty("House.Level4.population")));
                 break;
             case 5:
-                this.maxPopulation=Integer.parseInt(Application.getProperties().getProperty("House.Level5.population"));
+                this.maxPopulation = Integer.parseInt(Application.getProperties().getProperty("House.Level5.population"));
                 this.resource.setAmount(Integer.parseInt(Application.getProperties().getProperty("House.Level5.population")));
                 break;
             default:
@@ -61,15 +61,11 @@ protected void setup() {
 
     @Override
     public int getIncome() {
-        Random rand = new Random();
         int random = rand.nextInt(101);
 
-        if(random > 50)
-        {
+        if (random > 50) {
             return 1;
-        }
-        else
-        {
+        } else {
             return 0;
         }
     }
diff --git a/IceWollowTownsAPI/SocialHub/target/SocialHub-1.0-SNAPSHOT.jar.original b/IceWollowTownsAPI/SocialHub/target/SocialHub-1.0-SNAPSHOT.jar.original
index ffb8ae0..073dc2a 100644
Binary files a/IceWollowTownsAPI/SocialHub/target/SocialHub-1.0-SNAPSHOT.jar.original and b/IceWollowTownsAPI/SocialHub/target/SocialHub-1.0-SNAPSHOT.jar.original differ
diff --git a/IceWollowTownsAPI/target/sonar/.sonar_lock b/IceWollowTownsAPI/target/sonar/.sonar_lock
new file mode 100644
index 0000000..e69de29
diff --git a/IceWollowTownsAPI/target/sonar/report-task.txt b/IceWollowTownsAPI/target/sonar/report-task.txt
new file mode 100644
index 0000000..1a8ae23
--- /dev/null
+++ b/IceWollowTownsAPI/target/sonar/report-task.txt
@@ -0,0 +1,6 @@
+projectKey=com.IceWollowTowns:IceWollowTownsAPI
+serverUrl=http://localhost:9000
+serverVersion=8.0.0.29455
+dashboardUrl=http://localhost:9000/dashboard?id=com.IceWollowTowns%3AIceWollowTownsAPI
+ceTaskId=AW-jyKkwSmmtZ7j0IbkP
+ceTaskUrl=http://localhost:9000/api/ce/task?id=AW-jyKkwSmmtZ7j0IbkP
