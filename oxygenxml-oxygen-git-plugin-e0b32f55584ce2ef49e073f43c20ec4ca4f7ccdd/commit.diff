diff --git a/i18n/translation.xml b/i18n/translation.xml
index 5797377..17da259 100644
--- a/i18n/translation.xml
+++ b/i18n/translation.xml
@@ -4,6 +4,14 @@
         <language description="English" lang="en_US" />
         <language description="German" lang="de_DE" />
     </languageList>
+    <key value="Nothing_to_commit">
+        <comment>Information message when there is nothing to commit.</comment>
+        <val lang="en_US">There are no changes to commit.</val>
+        <val lang="de_DE">There are no changes to commit.</val>
+        <val lang="fr_FR">There are no changes to commit.</val>
+        <val lang="ja_JP">There are no changes to commit.</val>
+        <val lang="nl_NL">There are no changes to commit.</val>
+    </key>
     <key value="Open_previous_version">
         <comment>Contextual action in the History view, to open the previous version of a file.</comment>
         <val lang="en_US">Open previous version</val>
diff --git a/src/main/java/com/oxygenxml/git/GitMenuActionsProvider.java b/src/main/java/com/oxygenxml/git/GitMenuActionsProvider.java
index e77166c..3cbb67e 100644
--- a/src/main/java/com/oxygenxml/git/GitMenuActionsProvider.java
+++ b/src/main/java/com/oxygenxml/git/GitMenuActionsProvider.java
@@ -8,6 +8,7 @@
 import java.util.Set;
 
 import javax.swing.AbstractAction;
+import javax.swing.SwingUtilities;
 
 import org.apache.log4j.Logger;
 
@@ -19,6 +20,7 @@
 import com.oxygenxml.git.translator.Tags;
 import com.oxygenxml.git.translator.Translator;
 import com.oxygenxml.git.utils.FileHelper;
+import com.oxygenxml.git.utils.GitOperationScheduler;
 import com.oxygenxml.git.view.DiffPresenter;
 import com.oxygenxml.git.view.event.GitController;
 
@@ -37,7 +39,7 @@
   /**
    * Plug-in workspace access.
    */
-  private StandalonePluginWorkspace pluginWorkspaceAccess;
+  private StandalonePluginWorkspace pluginWS;
   /**
    * Translator.
    */
@@ -68,7 +70,7 @@
    *          The staging panel.
    */
   public GitMenuActionsProvider(StandalonePluginWorkspace pluginWorkspaceAccess, GitController stageCtrl) {
-    this.pluginWorkspaceAccess = pluginWorkspaceAccess;
+    this.pluginWS = pluginWorkspaceAccess;
     this.stageCtrl = stageCtrl;
   }
 
@@ -79,95 +81,122 @@ public GitMenuActionsProvider(StandalonePluginWorkspace pluginWorkspaceAccess, G
     List<AbstractAction> actions = new ArrayList<>();
     
     // Create the Git actions, if not already created
-    if (commitAction == null) {
-      createCommitAction();
-    }
     if (gitDiffAction == null) {
-      createGitDiffAction();
+      gitDiffAction = new AbstractAction(translator.getTranslation(Tags.GIT_DIFF)) {
+        @Override
+        public void actionPerformed(ActionEvent e) {
+          GitOperationScheduler.getInstance().schedule(GitMenuActionsProvider.this::doGitDiff);
+        }
+      };
     }
+    if (commitAction == null) {
+      commitAction = new AbstractAction(translator.getTranslation(Tags.COMMIT)) {
+        @Override
+        public void actionPerformed(ActionEvent e) {
+          GitOperationScheduler.getInstance().schedule(GitMenuActionsProvider.this::doPrepareCommit);
+        } 
+      };
+    }
+  
     
     // Enable/disable
     commitAction.setEnabled(true);
     gitDiffAction.setEnabled(shouldEnableGitDiffAction());
     
     // Add the Git actions to the list
-    actions.add(commitAction);
     actions.add(gitDiffAction);
+    actions.add(commitAction);
 
     return actions;
   }
 
   /**
-   * Create the "Git Diff" action.
+   * Do Git Diff.
    */
-  private void createGitDiffAction() {
-    gitDiffAction = new AbstractAction(translator.getTranslation(Tags.GIT_DIFF)) {
-      @Override
-      public void actionPerformed(ActionEvent e) {
-        File[] selectedFiles = ProjectViewManager.getSelectedFilesAndDirsShallow(pluginWorkspaceAccess);
-        // The diff action is enabled only for one file
-        String repository = getRepositoryForFiles(selectedFiles);
-        if (repository != null) {
-          try {
-            String previousRepository = OptionsManager.getInstance().getSelectedRepository();
-            if (!repository.equals(previousRepository)) {
-              GitAccess.getInstance().setRepositorySynchronously(repository);
-            }
-            
-            List<FileStatus> gitFiles = new ArrayList<>();
-            GitStatus status = GitAccess.getInstance().getStatus();
-            gitFiles.addAll(status.getUnstagedFiles());
-            gitFiles.addAll(status.getStagedFiles());
-            
-            String selectedFilePath = FileHelper.rewriteSeparator(selectedFiles[0].getAbsolutePath());
-            if (!gitFiles.isEmpty()) {
-              for (FileStatus fileStatus : gitFiles) {
-                if (selectedFilePath.endsWith(fileStatus.getFileLocation())) {
-                DiffPresenter.showDiff(fileStatus, stageCtrl);
-                  break;
-                }
-              }
-            } else {
-              pluginWorkspaceAccess.showInformationMessage(translator.getTranslation(Tags.NO_CHANGES));
-            }
-          } catch (Exception e1) {
-            if (logger.isDebugEnabled()) {
-              logger.debug(e1, e1);
+  private void doGitDiff() {
+    File selFile = ProjectViewManager.getSelectedFilesAndDirsShallow(pluginWS)[0];
+    String repository = getRepositoryForFile(selFile);
+    if (repository != null) {
+      try {
+        String previousRepository = OptionsManager.getInstance().getSelectedRepository();
+        if (!repository.equals(previousRepository)) {
+          GitAccess.getInstance().setRepositorySynchronously(repository);
+        }
+        
+        List<FileStatus> gitFiles = getStagedAndUnstagedFiles();
+        boolean wasDiffShown = false;
+        if (!gitFiles.isEmpty()) {
+          String selectedFilePath = FileHelper.rewriteSeparator(selFile.getAbsolutePath());
+          for (FileStatus fileStatus : gitFiles) {
+            if (selectedFilePath.endsWith(fileStatus.getFileLocation())) {
+              SwingUtilities.invokeLater(() -> DiffPresenter.showDiff(fileStatus, stageCtrl));
+              wasDiffShown = true;
+              break;
             }
           }
         }
+        if (!wasDiffShown) {
+          SwingUtilities.invokeLater(
+              () -> pluginWS.showInformationMessage(translator.getTranslation(Tags.NO_CHANGES)));
+        }
+      } catch (Exception e1) {
+        if (logger.isDebugEnabled()) {
+          logger.debug(e1, e1);
+        }
       }
-    };
+    }
   }
 
   /**
-   * Create the "Commit" action.
+   * Prepare commit.
    */
-  private void createCommitAction() {
-    commitAction = new AbstractAction(translator.getTranslation(Tags.COMMIT)) {
-      @Override
-      public void actionPerformed(ActionEvent e) {
-        pluginWorkspaceAccess.showView(OxygenGitPluginExtension.GIT_STAGING_VIEW, true);
+  private void doPrepareCommit() {
+    File[] selectedFiles = ProjectViewManager.getSelectedFilesAndDirsShallow(pluginWS);
+    String repository = getRepositoryForFile(selectedFiles[0]);
+    if (repository != null) {
+      try {
+        String previousRepository = OptionsManager.getInstance().getSelectedRepository();
+        if (!repository.equals(previousRepository)) {
+          GitAccess.getInstance().setRepositorySynchronously(repository);
+        }
         
-        // Use the repository from the project view
-        File[] selectedFiles = ProjectViewManager.getSelectedFilesAndDirsShallow(pluginWorkspaceAccess);
-        String repository = getRepositoryForFiles(selectedFiles);
-        if (repository != null) {
-          try {
-            String previousRepository = OptionsManager.getInstance().getSelectedRepository();
-            if (!repository.equals(previousRepository)) {
-              GitAccess.getInstance().setRepositorySynchronously(repository);
-            }
-            
-            stageFiles(repository);
-          } catch (IOException e1) {
-            if (logger.isDebugEnabled()) {
-              logger.debug(e1, e1);
+        List<FileStatus> gitFiles = getStagedAndUnstagedFiles();
+        boolean canCommit = false;
+        for (File selFile : selectedFiles) {
+          String selectedFilePath = FileHelper.rewriteSeparator(selFile.getAbsolutePath());
+          for (FileStatus fileStatus : gitFiles) {
+            if (selectedFilePath.endsWith(fileStatus.getFileLocation())) {
+              canCommit = true;
+              break;
             }
           }
         }
+        
+        if (canCommit) {
+          SwingUtilities.invokeLater(
+              () -> pluginWS.showView(OxygenGitPluginExtension.GIT_STAGING_VIEW, true));
+          stageFiles(repository);
+        } else {
+          SwingUtilities.invokeLater(
+              () -> pluginWS.showInformationMessage(translator.getTranslation(Tags.NOTHING_TO_COMMIT)));
+        }
+      } catch (IOException e1) {
+        if (logger.isDebugEnabled()) {
+          logger.debug(e1, e1);
+        }
       }
-    };
+    }
+  }
+  
+  /**
+   * @return The staged and the unstaged files.
+   */
+  private List<FileStatus> getStagedAndUnstagedFiles() {
+    List<FileStatus> gitFiles = new ArrayList<>();
+    GitStatus status = GitAccess.getInstance().getStatus();
+    gitFiles.addAll(status.getUnstagedFiles());
+    gitFiles.addAll(status.getStagedFiles());
+    return gitFiles;
   }
   
   /**
@@ -181,7 +210,7 @@ private void stageFiles(String repository) {
     repository = FileHelper.rewriteSeparator(repository);
     
     List<FileStatus> unstagedFiles = GitAccess.getInstance().getUnstagedFiles();
-    Set<String> allSelectedFiles = ProjectViewManager.getSelectedFilesDeep(pluginWorkspaceAccess);
+    Set<String> allSelectedFiles = ProjectViewManager.getSelectedFilesDeep(pluginWS);
     List<FileStatus> stagedFiles = new ArrayList<>();
     for (FileStatus unstagedFileStatus : unstagedFiles) {
       if (allSelectedFiles.contains(repository + "/" + unstagedFileStatus.getFileLocation())
@@ -199,7 +228,7 @@ private void stageFiles(String repository) {
    */
   private boolean shouldEnableGitDiffAction() {
     boolean shouldEnable = true;
-    File[] selectedFiles = ProjectViewManager.getSelectedFilesAndDirsShallow(pluginWorkspaceAccess);
+    File[] selectedFiles = ProjectViewManager.getSelectedFilesAndDirsShallow(pluginWS);
     if (selectedFiles != null) {
       if (selectedFiles.length > 1 || selectedFiles.length == 1 && selectedFiles[0].isDirectory()) {
         // disable the diff action if there are 2 or more files selected or if
@@ -211,17 +240,16 @@ private boolean shouldEnableGitDiffAction() {
   }
 
   /**
-   * Get the repository corresponding to the given files.
+   * Get the repository corresponding to the given file.
+   * We search for only one file because in oXygen all files from the Project view
+   * are in the same project/repository.
    * 
-   * @param files The files.
+   * @param file The file.
    * 
    * @return the repository, or <code>null</code> if couldn't be detected.
    */
-  private String getRepositoryForFiles(File[] files) {
+  private String getRepositoryForFile(File file) {
     String repository = null;
-    // Search for first file. In oXygen all files from the Project view
-    // are in the same project/repository.
-    File file = new File(files[0].getAbsolutePath());
     while (repository == null && file.getParent() != null) {
       if (FileHelper.isGitRepository(file.getPath())) {
         repository = file.getAbsolutePath();
diff --git a/src/main/java/com/oxygenxml/git/ProjectViewManager.java b/src/main/java/com/oxygenxml/git/ProjectViewManager.java
index 9a15215..bd96494 100644
--- a/src/main/java/com/oxygenxml/git/ProjectViewManager.java
+++ b/src/main/java/com/oxygenxml/git/ProjectViewManager.java
@@ -90,7 +90,7 @@ public static void addPopUpMenuCustomizer(
 	 * 
 	 * @param pluginWorkspaceAccess  Plug-in workspace access.
 	 * 
-	 * @return the selected files.
+	 * @return the selected files or an empty array. Never null.
 	 */
 	public static File[] getSelectedFilesAndDirsShallow(StandalonePluginWorkspace pluginWorkspaceAccess) {
 	  File[] toReturn = null;
@@ -116,7 +116,7 @@ public static void addPopUpMenuCustomizer(
       }
     } 
 		
-		return toReturn;
+		return toReturn == null ? new File[0] : toReturn;
 	}
 	
 	/**
diff --git a/src/main/java/com/oxygenxml/git/translator/Tags.java b/src/main/java/com/oxygenxml/git/translator/Tags.java
index 2cfe66d..2be648b 100644
--- a/src/main/java/com/oxygenxml/git/translator/Tags.java
+++ b/src/main/java/com/oxygenxml/git/translator/Tags.java
@@ -17,6 +17,10 @@ private Tags() {
    * Message shown when invoking the diff on an unchanged file.
    */
   public static final String NO_CHANGES = "No_changes";
+  /**
+   * There are no changes to commit. 
+   */
+  public static final String NOTHING_TO_COMMIT = "Nothing_to_commit";
   /**
    * Message shown when trying to clone from an invalid remote.
    * 
