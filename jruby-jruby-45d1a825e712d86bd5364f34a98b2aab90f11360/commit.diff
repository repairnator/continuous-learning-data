diff --git a/VERSION b/VERSION
index 7b6f9e43854..b8f1c5bb3b2 100644
--- a/VERSION
+++ b/VERSION
@@ -1 +1 @@
-9.2.10.0-SNAPSHOT
+9.3.0.0-SNAPSHOT
diff --git a/core/pom.xml b/core/pom.xml
index 41fb08d8f43..9d6ef598bf0 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -12,7 +12,7 @@ DO NOT MODIFIY - GENERATED CODE
   <parent>
     <groupId>org.jruby</groupId>
     <artifactId>jruby-parent</artifactId>
-    <version>9.2.10.0-SNAPSHOT</version>
+    <version>9.3.0.0-SNAPSHOT</version>
   </parent>
   <artifactId>jruby-core</artifactId>
   <name>JRuby Core</name>
@@ -61,10 +61,10 @@ DO NOT MODIFIY - GENERATED CODE
     <test.results.dir>${build.dir}/test-results</test.results.dir>
     <tzdata.scope>provided</tzdata.scope>
     <tzdata.version>2019c</tzdata.version>
-    <version.ruby>2.5.7</version.ruby>
-    <version.ruby.major>2.5</version.ruby.major>
-    <version.ruby.minor>7</version.ruby.minor>
-    <version.ruby.revision>67816</version.ruby.revision>
+    <version.ruby>2.6.0</version.ruby>
+    <version.ruby.major>2.6</version.ruby.major>
+    <version.ruby.minor>0</version.ruby.minor>
+    <version.ruby.revision>65578</version.ruby.revision>
   </properties>
   <dependencies>
     <dependency>
diff --git a/core/src/main/java/org/jruby/Ruby.java b/core/src/main/java/org/jruby/Ruby.java
index db8465f1d60..1bfe611e585 100644
--- a/core/src/main/java/org/jruby/Ruby.java
+++ b/core/src/main/java/org/jruby/Ruby.java
@@ -458,10 +458,12 @@ private Ruby(RubyInstanceConfig config) {
             enumeratorClass = RubyEnumerator.defineEnumerator(this, enumerableModule);
             generatorClass = RubyGenerator.createGeneratorClass(this, enumeratorClass);
             yielderClass = RubyYielder.createYielderClass(this);
+            chainClass = RubyChain.createChainClass(this, enumeratorClass);
         } else {
             enumeratorClass = null;
             generatorClass = null;
             yielderClass = null;
+            chainClass = null;
         }
 
         continuationClass = initContinuation();
@@ -1940,6 +1942,10 @@ public RubyClass getGenerator() {
         return generatorClass;
     }
 
+    public RubyClass getChain() {
+        return chainClass;
+    }
+
     public RubyClass getFiber() {
         return fiberClass;
     }
@@ -5113,6 +5119,7 @@ void setException(RubyClass exceptionClass) {
     private final RubyClass yielderClass;
     private final RubyClass fiberClass;
     private final RubyClass generatorClass;
+    private final RubyClass chainClass;
     private final RubyClass arrayClass;
     private final RubyClass hashClass;
     private final RubyClass rangeClass;
diff --git a/core/src/main/java/org/jruby/RubyArray.java b/core/src/main/java/org/jruby/RubyArray.java
index 4b3eb72279b..5ae2991b6ea 100644
--- a/core/src/main/java/org/jruby/RubyArray.java
+++ b/core/src/main/java/org/jruby/RubyArray.java
@@ -2041,8 +2041,13 @@ public IRubyObject to_ary() {
     	return this;
     }
 
-    @JRubyMethod(name = "to_h")
+    @Deprecated
     public IRubyObject to_h(ThreadContext context) {
+        return to_h(context, Block.NULL_BLOCK);
+    }
+
+    @JRubyMethod(name = "to_h")
+    public IRubyObject to_h(ThreadContext context, Block block) {
         Ruby runtime = context.runtime;
         int realLength = this.realLength;
 
@@ -2051,12 +2056,15 @@ public IRubyObject to_h(ThreadContext context) {
         RubyHash hash = useSmallHash ? RubyHash.newSmallHash(runtime) : RubyHash.newHash(runtime);
 
         for (int i = 0; i < realLength; i++) {
-            IRubyObject elt = eltInternal(i).checkArrayType();
-            if (elt == context.nil) {
-                throw context.runtime.newTypeError("wrong element type " + eltInternal(i).getMetaClass().getRealClass() + " at " + i + " (expected array)");
+            IRubyObject e = eltInternal(i);
+            IRubyObject elt = block.isGiven() ? block.yield(context, e) : e;
+            IRubyObject key_value_pair = elt.checkArrayType();
+
+            if (key_value_pair == context.nil) {
+                throw context.runtime.newTypeError("wrong element type " + elt.getMetaClass().getRealClass() + " at " + i + " (expected array)");
             }
 
-            RubyArray ary = (RubyArray)elt;
+            RubyArray ary = (RubyArray)key_value_pair;
             if (ary.getLength() != 2) {
                 throw context.runtime.newArgumentError("wrong array length at " + i + " (expected 2, was " + ary.getLength() + ")");
             }
@@ -2651,12 +2659,12 @@ public IRubyObject selectCommon(ThreadContext context, Block block) {
         return result;
     }
 
-    @JRubyMethod
+    @JRubyMethod(name = "select", alias = "filter")
     public IRubyObject select(ThreadContext context, Block block) {
         return block.isGiven() ? selectCommon(context, block) : enumeratorizeWithSize(context, this, "select", enumLengthFn());
     }
 
-    @JRubyMethod(name = "select!")
+    @JRubyMethod(name = "select!", alias = "filter!")
     public IRubyObject select_bang(ThreadContext context, Block block) {
         if (!block.isGiven()) return enumeratorizeWithSize(context, this, "select!", enumLengthFn());
 
@@ -3493,6 +3501,39 @@ public IRubyObject op_diff(IRubyObject other) {
         return res;
     }
 
+    /** rb_ary_difference_multi
+     *
+     */
+    @JRubyMethod(name = "difference", rest = true)
+    public IRubyObject difference(ThreadContext context, IRubyObject[] args) {
+        boolean[] isHash = new boolean[args.length];
+        RubyArray[] arrays = new RubyArray[args.length];
+        RubyHash[] hashes = new RubyHash[args.length];
+
+        RubyArray diff = newArray(context.runtime);
+
+        for (int i = 0; i < args.length; i++) {
+            arrays[i] = args[i].convertToArray();
+            isHash[i] = (realLength > ARRAY_DEFAULT_SIZE && arrays[i].realLength > ARRAY_DEFAULT_SIZE);
+            if (isHash[i]) hashes[i] = arrays[i].makeHash(context.runtime);
+        }
+
+        for (int i = 0; i < realLength; i++) {
+            IRubyObject elt = elt(i);
+            int j;
+            for (j = 0; j < args.length; j++) {
+                if (isHash[j]) {
+                    if (hashes[j].fastARef(elt) != null) break;
+                } else {
+                    if (arrays[j].includes(context, elt)) break;
+                }
+            }
+            if (j == args.length) diff.append(elt);
+        }
+
+        return diff;
+    }
+
     /** rb_ary_and
      *
      */
@@ -3557,6 +3598,56 @@ public IRubyObject op_or(IRubyObject other) {
         return res;
     }
 
+    /** rb_ary_union_multi
+     *
+     */
+    @JRubyMethod(name = "union", rest = true)
+    public IRubyObject union(ThreadContext context, IRubyObject[] args) {
+        Ruby runtime = context.runtime;
+        RubyArray[] arrays = new RubyArray[args.length];
+        RubyArray result;
+
+        int maxSize = realLength;
+        for (int i = 0; i < args.length; i++) {
+            arrays[i] = args[i].convertToArray();
+            maxSize += arrays[i].realLength;
+        }
+        if (maxSize == 0) return newEmptyArray(runtime);
+
+        if (maxSize <= ARRAY_DEFAULT_SIZE) {
+            result = newArray(runtime);
+
+            result.unionInternal(context, this);
+            result.unionInternal(context, arrays);
+
+            return result;
+        }
+
+        RubyHash set = makeHash(runtime);
+
+        for (int i = 0; i < arrays.length; i++) {
+            for (int j = 0; j < arrays[i].realLength; j++) {
+                set.fastASet(arrays[i].elt(j), NEVER);
+            }
+        }
+
+        result = set.keys();
+        return result;
+    }
+
+    /** rb_ary_union
+     *
+     */
+    private void unionInternal(ThreadContext context, RubyArray... args) {
+        for (int i = 0; i < args.length; i++) {
+            for (int j = 0; j < args[i].realLength; j++) {
+                IRubyObject elt = args[i].elt(j);
+                if (includes(context, elt)) continue;
+                append(elt);
+            }
+        }
+    }
+
     /** rb_ary_sort
      *
      */
diff --git a/core/src/main/java/org/jruby/RubyBinding.java b/core/src/main/java/org/jruby/RubyBinding.java
index d15b16bf76d..4655c853e38 100644
--- a/core/src/main/java/org/jruby/RubyBinding.java
+++ b/core/src/main/java/org/jruby/RubyBinding.java
@@ -179,4 +179,12 @@ public IRubyObject local_variables(ThreadContext context) {
     public IRubyObject receiver(ThreadContext context) {
         return binding.getSelf();
     }
+
+    @JRubyMethod
+    public IRubyObject source_location(ThreadContext context) {
+        Ruby runtime = context.runtime;
+        IRubyObject filename = runtime.newString(binding.getFile()).freeze(context);
+        RubyFixnum line = runtime.newFixnum(binding.getLine() + 1); /* zero-based */
+        return runtime.newArray(filename, line);
+    }
 }
diff --git a/core/src/main/java/org/jruby/RubyChain.java b/core/src/main/java/org/jruby/RubyChain.java
new file mode 100644
index 00000000000..87019086a61
--- /dev/null
+++ b/core/src/main/java/org/jruby/RubyChain.java
@@ -0,0 +1,191 @@
+/***** BEGIN LICENSE BLOCK *****
+ * Version: EPL 2.0/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Eclipse Public
+ * License Version 2.0 (the "License"); you may not use this file
+ * except in compliance with the License. You may obtain a copy of
+ * the License at http://www.eclipse.org/legal/epl-v20.html
+ *
+ * Software distributed under the License is distributed on an "AS
+ * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
+ * implied. See the License for the specific language governing
+ * rights and limitations under the License.
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either of the GNU General Public License Version 2 or later (the "GPL"),
+ * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the EPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the EPL, the GPL or the LGPL.
+ ***** END LICENSE BLOCK *****/
+
+package org.jruby;
+
+import org.jruby.anno.JRubyClass;
+import org.jruby.anno.JRubyMethod;
+
+import org.jruby.runtime.Block;
+import org.jruby.RubyFixnum;
+
+import org.jruby.runtime.Helpers;
+import org.jruby.runtime.ObjectAllocator;
+import org.jruby.runtime.ThreadContext;
+import org.jruby.runtime.builtin.IRubyObject;
+
+import org.jruby.util.ByteList;
+
+import static org.jruby.RubyEnumerator.enumeratorizeWithSize;
+import static org.jruby.RubyEnumerator.SizeFn;
+
+/**
+ * Implements Enumerator::Chain
+ */
+@JRubyClass(name = "Enumerator::Chain")
+public class RubyChain extends RubyObject {
+
+    private IRubyObject[] enums;
+    private int pos = -1;
+
+    public static RubyClass createChainClass(Ruby runtime, RubyClass enumeratorModule) {
+        RubyClass chainc = runtime.defineClassUnder("Chain", runtime.getObject(), new ObjectAllocator() {
+            @Override
+            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {
+                return new RubyChain(runtime, klazz);
+            }
+        }, enumeratorModule);
+
+        chainc.includeModule(runtime.getEnumerable());
+        chainc.defineAnnotatedMethods(RubyChain.class);
+
+        return chainc;
+    }
+
+    public RubyChain(Ruby runtime, RubyClass klass) {
+        super(runtime, klass);
+    }
+
+    public RubyChain(Ruby runtime, RubyClass klass, IRubyObject[] enums) {
+        super(runtime, klass);
+        this.enums = enums;
+    }
+
+    //
+    @JRubyMethod(name = "initialize", rest = true)
+    public IRubyObject initialize(ThreadContext context, IRubyObject[] args) {
+        enums = new IRubyObject[args.length];
+        System.arraycopy(args, 0, enums, 0, args.length);
+
+        return this;
+    }
+
+    public static RubyChain newChain(ThreadContext context, IRubyObject[] enums) {
+        return new RubyChain(context.runtime, context.runtime.getChain(), enums);
+    }
+
+    // enum_chain_each
+    @JRubyMethod(rest = true)
+    public IRubyObject each(ThreadContext context, IRubyObject[] args, Block block) {
+        if (!block.isGiven()) {
+            return RubyEnumerator.enumeratorizeWithSize(context, this, "each", args, enumSizeFn(context));
+        }
+
+        for (int i = 0; i < enums.length; i++) {
+            pos = i;
+            Helpers.invoke(context, enums[i], "each", args, block);
+        }
+
+        return this;
+    }
+
+    private SizeFn enumSizeFn(final ThreadContext context) {
+        final RubyChain self = this;
+        return new SizeFn() {
+            @Override
+            public IRubyObject size(ThreadContext context, IRubyObject[] args) {
+                return self.size(context);
+            }
+        };
+    }
+
+    // enum_chain_rewind
+    @JRubyMethod
+    public IRubyObject rewind(ThreadContext context) {
+        for (int i = pos; 0 <= i && pos < enums.length; i--) {
+            Helpers.invokeChecked(context, enums[i], "rewind");
+            pos -= 1;
+        }
+
+        return this;
+    }
+
+    @Override
+    public final IRubyObject inspect() {
+        return inspect(getRuntime().getCurrentContext());
+    }
+
+    @JRubyMethod
+    public RubyString inspect(ThreadContext context) {
+
+        ByteList str = new ByteList();
+        str.append('#').append('<');
+        str.append(getMetaClass().getRealClass().getName().getBytes());
+        str.append(':').append(' ').append('[');
+        for (int i = 0; i < enums.length - 1; i++) {
+            str.append(RubyObject.inspect(context, enums[i]).getByteList());
+            str.append(',').append(' ');
+        }
+        if (enums.length > 0) {
+            str.append(RubyObject.inspect(context, enums[enums.length - 1]).getByteList());
+        }
+        str.append(']').append('>');
+
+        return RubyString.newStringLight(context.runtime, str);
+    }
+
+    // enum_chain_size
+    @JRubyMethod
+    public IRubyObject size(ThreadContext context) {
+        return enumChainTotalSize(context, enums);
+    }
+
+    // enum_chain_total_size
+    private static IRubyObject enumChainTotalSize(ThreadContext context, IRubyObject[] args) {
+
+        RubyFixnum total = RubyFixnum.zero(context.runtime);
+        for (int i = 0; i < args.length; i++) {
+            IRubyObject size = args[i].respondsTo("size") ? args[i].callMethod(context, "size") : context.nil;
+
+            if (size.isNil() || (size instanceof RubyFloat) && size.equals(context.runtime.getFloat().getConstant("INFINITY"))) {
+                return size;
+            }
+
+            if (!(size instanceof RubyInteger)) {
+                return context.nil;
+            }
+
+            total = (RubyFixnum)total.callMethod("+", size);
+        }
+
+        return total;
+    }
+
+    @JRubyMethod(name = "+", required = 1)
+    public IRubyObject op_plus(ThreadContext context, IRubyObject obj) {
+        return RubyChain.newChain(context, new IRubyObject[] {this, obj});
+    }
+    
+    @JRubyMethod(name = "dup")
+    @Override
+    public IRubyObject dup() {
+        RubyChain copy = (RubyChain) super.dup();
+        copy.enums = this.enums;
+        copy.pos = this.pos;
+
+        return copy;
+    }
+}
\ No newline at end of file
diff --git a/core/src/main/java/org/jruby/RubyDir.java b/core/src/main/java/org/jruby/RubyDir.java
index e2a89c2d268..6224ae38bc1 100644
--- a/core/src/main/java/org/jruby/RubyDir.java
+++ b/core/src/main/java/org/jruby/RubyDir.java
@@ -462,6 +462,11 @@ public static IRubyObject chroot(IRubyObject recv, IRubyObject path) {
     /**
      * Returns an array containing all of the filenames except for "." and ".." in the given directory.
      */
+    @JRubyMethod(name = "children")
+    public IRubyObject children(ThreadContext context) {
+        return children(context, this, path, context.nil);
+    }
+    
     @JRubyMethod(name = "children", meta = true)
     public static RubyArray children(ThreadContext context, IRubyObject recv, IRubyObject arg) {
         return children(context, recv, arg, context.nil);
@@ -794,6 +799,16 @@ public IRubyObject each_child(ThreadContext context, Block block) {
         return each_child(context, encoding, block);
     }
 
+    @JRubyMethod(name = "each_child")
+    public IRubyObject rb_each_child(ThreadContext context, Block block) {
+        if (block.isGiven()) {
+            each_child(context, block);
+            return context.nil;
+        }
+
+        return enumeratorize(context.runtime, children(context), "each");
+    }
+
     @Override
     @JRubyMethod
     public IRubyObject inspect() {
diff --git a/core/src/main/java/org/jruby/RubyEnumerable.java b/core/src/main/java/org/jruby/RubyEnumerable.java
index 3d10490a4a9..0a7f6dabb09 100644
--- a/core/src/main/java/org/jruby/RubyEnumerable.java
+++ b/core/src/main/java/org/jruby/RubyEnumerable.java
@@ -505,12 +505,17 @@ public static IRubyObject to_a(ThreadContext context, IRubyObject self, IRubyObj
         return result;
     }
 
-    @JRubyMethod(name = "to_h", rest = true)
+    @Deprecated
     public static IRubyObject to_h(ThreadContext context, IRubyObject self, IRubyObject[] args) {
+        return to_h(context, self, args, Block.NULL_BLOCK);
+    }
+
+    @JRubyMethod(name = "to_h", rest = true)
+    public static IRubyObject to_h(ThreadContext context, IRubyObject self, IRubyObject[] args, Block block) {
         final Ruby runtime = context.runtime;
         final RubyHash result = RubyHash.newHash(runtime);
         Helpers.invoke(context, self, "each", args,
-                CallBlock.newCallClosure(context, self, Signature.OPTIONAL, new PutKeyValueCallback(result)));
+                CallBlock.newCallClosure(context, self, Signature.OPTIONAL, new PutKeyValueCallback(result, block)));
         result.infectBy(self);
         return result;
     }
@@ -837,7 +842,7 @@ public static IRubyObject select(ThreadContext context, IRubyObject self, final
         return selectCommon(context, self, block, "select");
     }
 
-    @JRubyMethod
+    @JRubyMethod(alias = "filter")
     public static IRubyObject find_all(ThreadContext context, IRubyObject self, final Block block) {
         return selectCommon(context, self, block, "find_all");
     }
@@ -861,6 +866,13 @@ public IRubyObject call(ThreadContext ctx, IRubyObject larg, Block blk) {
                 }
                 return ctx.nil;
             }
+            @Override
+            public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                if ( ! block.yield(ctx, larg).isTrue() ) {
+                    synchronized (result) { result.append(larg); }
+                }
+                return ctx.nil;
+            }
         });
 
         return result;
@@ -1145,6 +1157,11 @@ public IRubyObject call(ThreadContext ctx, IRubyObject larg, Block blk) {
                 result[0] = result[0] == null ? larg : site.call(ctx, self, result[0], larg);
                 return ctx.nil;
             }
+            @Override
+            public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                result[0] = result[0] == null ? larg : site.call(ctx, self, result[0], larg);
+                return ctx.nil;
+            }
         });
         return result[0] == null ? context.nil : result[0];
     }
@@ -1677,6 +1694,12 @@ public IRubyObject call(ThreadContext ctx, IRubyObject[] largs, Block blk) {
                         if (block.yield(ctx, larg).isTrue()) throw JumpException.SPECIAL_JUMP;
                         return ctx.nil;
                     }
+                    @Override
+                    public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                        checkContext(context, ctx, "none?");
+                        if (block.yield(ctx, larg).isTrue()) throw JumpException.SPECIAL_JUMP;
+                        return ctx.nil;
+                    }
                 });
             } else {
                 callEach(context, self, Signature.ONE_REQUIRED, new BlockCallback() {
@@ -1686,6 +1709,12 @@ public IRubyObject call(ThreadContext ctx, IRubyObject[] largs, Block blk) {
                         if (larg.isTrue()) throw JumpException.SPECIAL_JUMP;
                         return ctx.nil;
                     }
+                    @Override
+                    public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                        checkContext(context, ctx, "none?");
+                        if (larg.isTrue()) throw JumpException.SPECIAL_JUMP;
+                        return ctx.nil;
+                    }
                 });
             }
         } catch (JumpException.SpecialJump sj) {
@@ -1781,6 +1810,18 @@ public IRubyObject call(ThreadContext ctx, IRubyObject[] largs, Block blk) {
                         }
                         return ctx.nil;
                     }
+                    @Override
+                    public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                        checkContext(context, ctx, "one?");
+                        if (block.yield(ctx, larg).isTrue()) {
+                            if (result[0]) {
+                                throw JumpException.SPECIAL_JUMP;
+                            } else {
+                                result[0] = true;
+                            }
+                        }
+                        return ctx.nil;
+                    }
                 });
             } else {
                 callEach(context, self, Signature.ONE_REQUIRED, new BlockCallback() {
@@ -1796,6 +1837,18 @@ public IRubyObject call(ThreadContext ctx, IRubyObject[] largs, Block blk) {
                         }
                         return ctx.nil;
                     }
+                    @Override
+                    public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                        checkContext(context, ctx, "one?");
+                        if (larg.isTrue()) {
+                            if (result[0]) {
+                                throw JumpException.SPECIAL_JUMP;
+                            } else {
+                                result[0] = true;
+                            }
+                        }
+                        return ctx.nil;
+                    }
                 });
             }
         } catch (JumpException.SpecialJump sj) {
@@ -1847,6 +1900,14 @@ public IRubyObject call(ThreadContext context, IRubyObject[] largs, Block blk) {
                             }
                             return context.nil;
                         }
+                        @Override
+                        public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                            checkContext(localContext, context, "all?");
+                            if (!pattern.callMethod(context, "===", larg).isTrue()) {
+                                throw JumpException.SPECIAL_JUMP;
+                            }
+                            return context.nil;
+                        }
                     });
                 } else {
                     callEach(context, self, Signature.ONE_REQUIRED, new BlockCallback() {
@@ -1858,6 +1919,14 @@ public IRubyObject call(ThreadContext context, IRubyObject[] largs, Block blk) {
                             }
                             return context.nil;
                         }
+                        @Override
+                        public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                            checkContext(localContext, context, "all?");
+                            if (!larg.isTrue()) {
+                                throw JumpException.SPECIAL_JUMP;
+                            }
+                            return context.nil;
+                        }
                     });
 		}
             }
@@ -1900,6 +1969,12 @@ public IRubyObject call(ThreadContext context, IRubyObject[] largs, Block blk) {
                             if (pattern.callMethod(context, "===", larg).isTrue()) throw JumpException.SPECIAL_JUMP;
                             return context.nil;
                         }
+                        @Override
+                        public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                            checkContext(localContext, context, "any?");
+                            if (pattern.callMethod(context, "===", larg).isTrue()) throw JumpException.SPECIAL_JUMP;
+                            return context.nil;
+                        }
                     });
                 } else {
                     callEach(context, self, Signature.ONE_REQUIRED, new BlockCallback() {
@@ -1909,6 +1984,12 @@ public IRubyObject call(ThreadContext context, IRubyObject[] largs, Block blk) {
                             if (larg.isTrue()) throw JumpException.SPECIAL_JUMP;
                             return context.nil;
                         }
+                        @Override
+                        public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                            checkContext(localContext, context, "any?");
+                            if (larg.isTrue()) throw JumpException.SPECIAL_JUMP;
+                            return context.nil;
+                        }
                     });
                 }
             }
@@ -2088,6 +2169,11 @@ public IRubyObject call(ThreadContext ctx, IRubyObject larg, Block blk) {
                     array.append(larg);
                     return larg;
                 }
+                @Override
+                public IRubyObject call(ThreadContext ctx, IRubyObject larg) {
+                    array.append(larg);
+                    return larg;
+                }
             });
         }
 
@@ -2138,6 +2224,15 @@ public IRubyObject call(ThreadContext ctx, IRubyObject[] largs, Block blk) {
         return result;
     }
 
+    @JRubyMethod(rest = true)
+    public static IRubyObject chain(ThreadContext context, IRubyObject self, final IRubyObject[] args) {
+        IRubyObject [] enums = new IRubyObject[args.length + 1];
+        enums[0] = self;
+        System.arraycopy(args, 0, enums, 1, args.length);
+        
+        return RubyChain.newChain(context, enums);
+    }
+
     @Deprecated
     public static IRubyObject chunk(ThreadContext context, IRubyObject self, final IRubyObject[] args, final Block block) {
         switch (Arity.checkArgumentCount(context.runtime, args, 0, 1)) {
@@ -2325,31 +2420,49 @@ public IRubyObject call(ThreadContext context, IRubyObject arg, Block block) {
     public static final class PutKeyValueCallback implements BlockCallback {
 
         private final RubyHash result;
+        private final Block block;
 
         @Deprecated
         public PutKeyValueCallback(Ruby runtime, RubyHash result) {
             this.result = result;
+            this.block = Block.NULL_BLOCK;
+        }
+
+        @Deprecated
+        public PutKeyValueCallback(Ruby runtime, RubyHash result, Block block) {
+            this.result = result;
+            this.block = block;
         }
 
         PutKeyValueCallback(RubyHash result) {
             this.result = result;
+            this.block = Block.NULL_BLOCK;
+        }
+
+        PutKeyValueCallback(RubyHash result, Block block) {
+            this.result = result;
+            this.block = block;
         }
 
         public IRubyObject call(ThreadContext context, IRubyObject[] largs, Block blk) {
+            final Ruby runtime = context.runtime;
+            final boolean blockGiven = block.isGiven();
+
             IRubyObject value;
             switch (largs.length) {
                 case 0:
-                    value = context.nil;
+                    value = blockGiven ? block.yield(context, context.nil) : context.nil;
                     break;
                 case 1:
-                    value = largs[0];
+                    value = blockGiven ? block.yield(context, largs[0]) : largs[0];
                     break;
                 default:
-                    value = RubyArray.newArrayMayCopy(context.runtime, largs);
+                    IRubyObject v = RubyArray.newArrayMayCopy(runtime, largs);
+                    value = blockGiven ? block.yield(context, v) : v;
                     break;
             }
 
-            callImpl(context.runtime, value);
+            callImpl(runtime, value);
             return context.nil;
         }
 
diff --git a/core/src/main/java/org/jruby/RubyEnumerator.java b/core/src/main/java/org/jruby/RubyEnumerator.java
index e3d07fa14b9..b0a88961f08 100644
--- a/core/src/main/java/org/jruby/RubyEnumerator.java
+++ b/core/src/main/java/org/jruby/RubyEnumerator.java
@@ -662,4 +662,9 @@ public void remove() {
     private static JavaSites.FiberSites sites(ThreadContext context) {
         return context.sites.Fiber;
     }
+
+    @JRubyMethod(name = "+", required = 1)
+    public IRubyObject op_plus(ThreadContext context, IRubyObject obj) {
+        return RubyChain.newChain(context, new IRubyObject[] {this, obj});
+    }
 }
diff --git a/core/src/main/java/org/jruby/RubyGlobal.java b/core/src/main/java/org/jruby/RubyGlobal.java
index 6e482d1b6ab..a3fffd90ca9 100644
--- a/core/src/main/java/org/jruby/RubyGlobal.java
+++ b/core/src/main/java/org/jruby/RubyGlobal.java
@@ -49,6 +49,7 @@
 import org.jruby.javasupport.JavaUtil;
 import org.jruby.runtime.Helpers;
 import org.jruby.platform.Platform;
+import org.jruby.runtime.Block;
 import org.jruby.runtime.Constants;
 import org.jruby.runtime.GlobalVariable;
 import org.jruby.runtime.IAccessor;
@@ -442,9 +443,15 @@ public IRubyObject to_s() {
             return RubyString.newStringShared(getRuntime(), ENV);
         }
 
+        @Deprecated
+        public RubyHash to_h() {
+            return to_h(getRuntime().getCurrentContext(), Block.NULL_BLOCK);
+        }
+
         @JRubyMethod
-        public RubyHash to_h(){
-            return to_hash();
+        public RubyHash to_h(ThreadContext context, Block block){
+            RubyHash h = to_hash();
+            return block.isGiven() ? h.to_h_block(context, block) : h;
         }
 
     }
diff --git a/core/src/main/java/org/jruby/RubyHash.java b/core/src/main/java/org/jruby/RubyHash.java
index d6658775be4..e4ed1dfad77 100644
--- a/core/src/main/java/org/jruby/RubyHash.java
+++ b/core/src/main/java/org/jruby/RubyHash.java
@@ -994,12 +994,49 @@ public RubyHash to_hash(ThreadContext context) {
         return this;
     }
 
-    @JRubyMethod
+    @Deprecated
     public RubyHash to_h(ThreadContext context) {
+        return to_h(context, Block.NULL_BLOCK);
+    }
+
+    @JRubyMethod
+    public RubyHash to_h(ThreadContext context, Block block) {
         final Ruby runtime = context.runtime;
+        if (block.isGiven()) return to_h_block(context, block);
         return getType() == runtime.getHash() ? this : newHash(runtime).replace(context, this);
     }
 
+    private static class TransformKeysAndValuesVisitor extends VisitorWithState<RubyHash> {
+        private final Block block;
+
+        public TransformKeysAndValuesVisitor(Block block) {
+            this.block = block;
+        }
+
+        @Override
+        public void visit(ThreadContext context, RubyHash self, IRubyObject key, IRubyObject value, int index, RubyHash result) {
+            IRubyObject elt = block.yieldArray(context, context.runtime.newArray(key, value), null);
+            IRubyObject key_value_pair = elt.checkArrayType();
+
+            if (key_value_pair == context.nil) {
+                throw context.runtime.newTypeError("wrong element type " + elt.getMetaClass().getRealClass() + " (expected array)");
+            }
+
+            RubyArray ary = (RubyArray)key_value_pair;
+            if (ary.getLength() != 2) {
+                throw context.runtime.newArgumentError("element has wrong array length " + "(expected 2, was " + ary.getLength() + ")");
+            }
+
+            result.fastASet(ary.eltInternal(0), ary.eltInternal(1));
+        }
+    }
+
+    protected RubyHash to_h_block(ThreadContext context, Block block) {
+        RubyHash result = newHash(context.runtime);
+        visitAll(context, new TransformKeysAndValuesVisitor(block), result);
+        return result;
+    }
+
     @Override
     public RubyHash convertToHash() {
         return this;
@@ -1545,7 +1582,7 @@ public void visit(ThreadContext context, RubyHash self, IRubyObject key, IRubyOb
         }
     }
 
-    @JRubyMethod(name = "select!")
+    @JRubyMethod(name = "select!", alias = "filter!")
     public IRubyObject select_bang(final ThreadContext context, final Block block) {
         if (block.isGiven()) return keep_ifCommon(context, block) ? this : context.nil;
 
@@ -1741,7 +1778,7 @@ public IRubyObject delete(ThreadContext context, IRubyObject key) {
     /** rb_hash_select
      *
      */
-    @JRubyMethod(name = "select")
+    @JRubyMethod(name = "select", alias = "filter")
     public IRubyObject select(final ThreadContext context, final Block block) {
         final Ruby runtime = context.runtime;
         if (!block.isGiven()) return enumeratorizeWithSize(context, this, "select", enumSizeFn());
@@ -1893,17 +1930,25 @@ public void visit(ThreadContext context, RubyHash self, IRubyObject key, IRubyOb
         }
     };
 
+    @Deprecated
+    public RubyHash merge_bang(ThreadContext context, IRubyObject other, Block block) {
+        return merge_bang(context, new IRubyObject[]{other}, block);
+    }
+
     /** rb_hash_update
      *
      */
-    @JRubyMethod(name = {"merge!", "update"}, required = 1)
-    public RubyHash merge_bang(ThreadContext context, IRubyObject other, Block block) {
+    @JRubyMethod(name = {"merge!", "update"}, rest = true)
+    public RubyHash merge_bang(ThreadContext context, IRubyObject[] others, Block block) {
         modify();
-        final RubyHash otherHash = other.convertToHash();
 
-        if (otherHash.empty_p(context).isTrue()) return this;
+        if (others.length == 0) return this;
 
-        otherHash.visitAll(context, new MergeVisitor(this), block);
+        for (int i = 0; i < others.length; i++) {
+            final RubyHash otherHash = others[i].convertToHash();
+            if (otherHash.empty_p().isTrue()) continue;
+            otherHash.visitAll(context, new MergeVisitor(this), block);
+        }
 
         return this;
     }
@@ -1930,12 +1975,17 @@ public RubyHash merge_bang19(ThreadContext context, IRubyObject other, Block blo
         return merge_bang(context, other, block);
     }
 
+    @Deprecated
+    public RubyHash merge(ThreadContext context, IRubyObject other, Block block) {
+        return merge(context, new IRubyObject[]{other}, block);
+    }
+
     /** rb_hash_merge
      *
      */
-    @JRubyMethod
-    public RubyHash merge(ThreadContext context, IRubyObject other, Block block) {
-        return ((RubyHash)dup()).merge_bang(context, other, block);
+    @JRubyMethod(rest = true)
+    public RubyHash merge(ThreadContext context, IRubyObject[] others, Block block) {
+        return ((RubyHash)dup()).merge_bang(context, others, block);
     }
 
     @JRubyMethod(name = "initialize_copy", required = 1, visibility = PRIVATE)
diff --git a/core/src/main/java/org/jruby/RubyInteger.java b/core/src/main/java/org/jruby/RubyInteger.java
index 807c8dbdd33..7ac14c613b0 100644
--- a/core/src/main/java/org/jruby/RubyInteger.java
+++ b/core/src/main/java/org/jruby/RubyInteger.java
@@ -237,7 +237,7 @@ static void fixnumUpto(ThreadContext context, long from, long to, Block block) {
         }
     }
 
-    private static void duckUpto(ThreadContext context, IRubyObject from, IRubyObject to, Block block) {
+    static void duckUpto(ThreadContext context, IRubyObject from, IRubyObject to, Block block) {
         Ruby runtime = context.runtime;
         IRubyObject i = from;
         RubyFixnum one = RubyFixnum.one(runtime);
diff --git a/core/src/main/java/org/jruby/RubyKernel.java b/core/src/main/java/org/jruby/RubyKernel.java
index b3f0f8e533a..19bb0216780 100644
--- a/core/src/main/java/org/jruby/RubyKernel.java
+++ b/core/src/main/java/org/jruby/RubyKernel.java
@@ -1320,7 +1320,7 @@ private static RubyString buildWarnMessage(ThreadContext context, final int uple
         return (RubyString) message.op_plus19(context, arg.asString());
     }
 
-    @JRubyMethod(module = true)
+    @JRubyMethod(module = true, alias = "then")
     public static IRubyObject yield_self(ThreadContext context, IRubyObject recv, Block block) {
         if (block.isGiven()) {
             return block.yield(context, recv);
@@ -1705,7 +1705,7 @@ public static IRubyObject system(ThreadContext context, IRubyObject recv, IRubyO
 
         // else old JDK logic
         if (args[0] instanceof RubyHash) {
-            runtime.getENV().merge_bang(context, (RubyHash) args[0], Block.NULL_BLOCK);
+            runtime.getENV().merge_bang(context, new IRubyObject[]{args[0]}, Block.NULL_BLOCK);
             // drop the first element for calling systemCommon()
             args = ArraySupport.newCopy(args, 1, args.length - 1);
         }
@@ -1797,7 +1797,7 @@ private static IRubyObject execCommon(ThreadContext context, IRubyObject env, IR
         if (env != null && env != context.nil) {
             RubyHash envMap = env.convertToHash();
             if (envMap != null) {
-                runtime.getENV().merge_bang(context, envMap, Block.NULL_BLOCK);
+                runtime.getENV().merge_bang(context, new IRubyObject[]{envMap}, Block.NULL_BLOCK);
             }
         }
 
@@ -2219,19 +2219,22 @@ public static IRubyObject send19(ThreadContext context, IRubyObject self, IRubyO
 
     @JRubyMethod(name = "nil?")
     public static IRubyObject nil_p(ThreadContext context, IRubyObject self) {
-        return ((RubyBasicObject)self).nil_p(context);
+        return ((RubyBasicObject) self).nil_p(context);
     }
 
     // Reads and writes backref due to decendant calls ending up in Regexp#=~
     @JRubyMethod(name = "=~", reads = FrameField.BACKREF, writes = FrameField.BACKREF)
     public static IRubyObject op_match(ThreadContext context, IRubyObject self, IRubyObject arg) {
-        return ((RubyBasicObject)self).op_match(context, arg);
+        context.runtime.getWarnings().warn(ID.DEPRECATED_METHOD,
+            "deprecated Object#=~ is called on " + ((RubyBasicObject) self).type() +
+                "; it always returns nil");
+        return ((RubyBasicObject) self).op_match(context, arg);
     }
 
     // Reads and writes backref due to decendant calls ending up in Regexp#=~
     @JRubyMethod(name = "!~", reads = FrameField.BACKREF, writes = FrameField.BACKREF)
     public static IRubyObject op_not_match(ThreadContext context, IRubyObject self, IRubyObject arg) {
-        return ((RubyBasicObject)self).op_not_match(context, arg);
+        return ((RubyBasicObject) self).op_not_match(context, arg);
     }
 
     @JRubyMethod(name = "instance_variable_defined?", required = 1)
diff --git a/core/src/main/java/org/jruby/RubyNil.java b/core/src/main/java/org/jruby/RubyNil.java
index 07e00f67913..590b693e29e 100644
--- a/core/src/main/java/org/jruby/RubyNil.java
+++ b/core/src/main/java/org/jruby/RubyNil.java
@@ -176,6 +176,12 @@ static RubyString inspect(Ruby runtime) {
         return RubyString.newStringShared(runtime, runtime.getString(), nil);
     }
 
+    @Override
+    @JRubyMethod(name = "=~", required = 1)
+    public IRubyObject op_match(ThreadContext context, IRubyObject arg) {
+        return this; // nil
+    }
+
     /** nil_and
      *
      */
@@ -200,6 +206,7 @@ public static RubyBoolean op_xor(ThreadContext context, IRubyObject recv, IRubyO
         return RubyBoolean.newBoolean(context, obj.isTrue());
     }
 
+    @Override
     @JRubyMethod(name = "nil?")
     public RubyBoolean nil_p(ThreadContext context) {
         return context.tru;
diff --git a/core/src/main/java/org/jruby/RubyNumeric.java b/core/src/main/java/org/jruby/RubyNumeric.java
index d57f0db369e..879baa8de2d 100644
--- a/core/src/main/java/org/jruby/RubyNumeric.java
+++ b/core/src/main/java/org/jruby/RubyNumeric.java
@@ -1052,7 +1052,7 @@ private IRubyObject stepCommon(ThreadContext context, IRubyObject to, IRubyObjec
                     desc,
                     block);
         } else if (this instanceof RubyFloat || to instanceof RubyFloat || step instanceof RubyFloat) {
-            floatStep(context, runtime, this, to, step, false, block);
+            floatStep(context, runtime, this, to, step, false, false, block);
         } else {
             duckStep(context, this, to, step, inf, desc, block);
         }
@@ -1092,9 +1092,9 @@ private static void fixnumStep(ThreadContext context, Ruby runtime, RubyFixnum f
         }
     }
 
-    static void floatStep(ThreadContext context, Ruby runtime, IRubyObject from, IRubyObject to, IRubyObject step, boolean excl, Block block) {
+    static void floatStep(ThreadContext context, Ruby runtime, IRubyObject from, IRubyObject to, IRubyObject step, boolean excl, boolean allowEndless, Block block) {
         double beg = num2dbl(context, from);
-        double end = num2dbl(context, to);
+        double end = allowEndless && to.isNil() ? RubyFloat.INFINITY : num2dbl(context, to);
         double unit = num2dbl(context, step);
 
         double n = floatStepSize(beg, end, unit, excl);
diff --git a/core/src/main/java/org/jruby/RubyRandom.java b/core/src/main/java/org/jruby/RubyRandom.java
index 305977b7884..099951114c3 100644
--- a/core/src/main/java/org/jruby/RubyRandom.java
+++ b/core/src/main/java/org/jruby/RubyRandom.java
@@ -682,9 +682,19 @@ public IRubyObject marshal_load(ThreadContext context, IRubyObject arg) {
         return this;
     }
 
+    // c: random_s_bytes
+    @JRubyMethod(meta = true)
+    public static IRubyObject bytes(ThreadContext context, IRubyObject recv, IRubyObject arg) {
+        return bytesCommon(context, getDefaultRand(context), arg);
+    }
+
     // c: rb_random_bytes
     @JRubyMethod(name = "bytes")
     public IRubyObject bytes(ThreadContext context, IRubyObject arg) {
+        return bytesCommon(context, random, arg);
+    }
+
+    private static IRubyObject bytesCommon(ThreadContext context, RandomType random, IRubyObject arg) {
         int n = RubyNumeric.num2int(arg);
         byte[] bytes = new byte[n];
         int idx = 0;
diff --git a/core/src/main/java/org/jruby/RubyRange.java b/core/src/main/java/org/jruby/RubyRange.java
index a4500b20c3b..24effbdfe0c 100644
--- a/core/src/main/java/org/jruby/RubyRange.java
+++ b/core/src/main/java/org/jruby/RubyRange.java
@@ -86,6 +86,7 @@
     private IRubyObject begin;
     private IRubyObject end;
     private boolean isExclusive;
+    private boolean isEndless;
     private boolean isInited = false;
 
     public static RubyClass createRangeClass(Ruby runtime) {
@@ -153,7 +154,7 @@ final boolean checkBegin(long length) {
 
     final long[] begLen(long len, int err) {
         long beg = RubyNumeric.num2long(this.begin);
-        long end = RubyNumeric.num2long(this.end);
+        long end = isEndless ? -1: RubyNumeric.num2long(this.end);
 
         if (beg < 0) {
             beg += len;
@@ -204,8 +205,8 @@ final long begLen0(long len) {
         return beg;
     }
 
-    final long begLen1(long len, int beg) {
-        long end = RubyNumeric.num2long(this.end);
+    final long begLen1(long len, long beg) {
+        long end = isEndless ? -1 : RubyNumeric.num2long(this.end);
 
         if (end < 0) {
             end += len;
@@ -223,7 +224,7 @@ final long begLen1(long len, int beg) {
 
     final int[] begLenInt(int len, final int err) {
         int beg = RubyNumeric.num2int(this.begin);
-        int end = RubyNumeric.num2int(this.end);
+        int end = isEndless ? -1 : RubyNumeric.num2int(this.end);
 
         if (beg < 0) {
             beg += len;
@@ -250,7 +251,7 @@ final long begLen1(long len, int beg) {
         if (end < 0) {
             end += len;
         }
-        if (!isExclusive) {
+        if (!isExclusive || isEndless) {
             end++;
         }
         len = end - beg;
@@ -262,7 +263,7 @@ final long begLen1(long len, int beg) {
     }
 
     private void init(ThreadContext context, IRubyObject begin, IRubyObject end, boolean isExclusive) {
-        if (!(begin instanceof RubyFixnum && end instanceof RubyFixnum)) {
+        if (!(begin instanceof RubyFixnum && end instanceof RubyFixnum) && !end.isNil()) {
             IRubyObject result = invokedynamic(context, begin, MethodNames.OP_CMP, end);
             if (result.isNil()) {
                 throw context.runtime.newArgumentError("bad value for range");
@@ -272,6 +273,8 @@ private void init(ThreadContext context, IRubyObject begin, IRubyObject end, boo
         this.begin = begin;
         this.end = end;
         this.isExclusive = isExclusive;
+        this.isEndless = end.isNil();
+        this.isInited = true;
     }
 
     @JRubyMethod(required = 2, optional = 1, visibility = PRIVATE)
@@ -347,7 +350,7 @@ public IRubyObject inspect() {
     @JRubyMethod(name = "inspect")
     public RubyString inspect(final ThreadContext context) {
         RubyString i1 = inspectValue(context, begin).strDup(context.runtime);
-        RubyString i2 = inspectValue(context, end);
+        RubyString i2 = isEndless ? RubyString.newEmptyString(context.runtime): inspectValue(context, end);
         i1.cat(DOTDOTDOT, 0, isExclusive ? 3 : 2);
         i1.append(i2);
         i1.infectBy(i2);
@@ -401,13 +404,11 @@ private IRubyObject equalityInner(ThreadContext context, IRubyObject other, Meth
                 invokedynamic(context, this.end, equalityCheck, otherRange.end).isTrue());
     }
 
-    private static abstract class RangeCallBack {
-
-        abstract void call(ThreadContext context, IRubyObject arg);
-
+    private interface RangeCallBack {
+        void doCall(ThreadContext context, IRubyObject arg);
     }
 
-    private static final class StepBlockCallBack extends RangeCallBack implements BlockCallback {
+    private static final class StepBlockCallBack implements RangeCallBack, BlockCallback {
 
         final Block block;
         IRubyObject iter;
@@ -431,11 +432,13 @@ public IRubyObject call(ThreadContext context, IRubyObject arg, Block originalBl
         }
 
         @Override
-        void call(ThreadContext context, IRubyObject arg) {
-            if (iter instanceof RubyInteger) {
+        public void doCall(ThreadContext context, IRubyObject arg) {
+            if (iter instanceof RubyFixnum) {
+                iter = RubyFixnum.newFixnum(context.runtime, ((RubyFixnum) iter).getLongValue() - 1);
+            } else if (iter instanceof RubyInteger) {
                 iter = ((RubyInteger) iter).op_minus(context, 1);
             } else {
-                iter = iter.callMethod(context, "-", RubyFixnum.one(context.runtime));
+                iter = iter.callMethod(context, "-", one(context));
             }
             IRubyObject i = this.iter;
             if ((i instanceof RubyInteger) && ((RubyInteger) i).isZero()) {
@@ -443,6 +446,21 @@ void call(ThreadContext context, IRubyObject arg) {
                 iter = step;
             }
         }
+
+        transient RubyFixnum one;
+
+        private RubyFixnum one(ThreadContext context) {
+            RubyFixnum one = this.one;
+            if (one == null) {
+                one = this.one = RubyFixnum.one(context.runtime);
+            }
+            return one;
+        }
+
+    }
+
+    private static boolean isZero(IRubyObject num) {
+        return num instanceof RubyFixnum && ((RubyNumeric) num).isZero();
     }
 
     private static IRubyObject rangeLt(ThreadContext context, IRubyObject a, IRubyObject b) {
@@ -469,14 +487,14 @@ private void rangeEach(ThreadContext context, RangeCallBack callback) {
         IRubyObject v = begin;
         if (isExclusive) {
             while (rangeLt(context, v, end) != null) {
-                callback.call(context, v);
+                callback.doCall(context, v);
                 v = v.callMethod(context, "succ");
             }
         } else {
             IRubyObject c;
             while ((c = rangeLe(context, v, end)) != null && c.isTrue()) {
-                callback.call(context, v);
-                if (c == RubyFixnum.zero(context.runtime)) {
+                callback.doCall(context, v);
+                if (isZero(c)) {
                     break;
                 }
                 v = v.callMethod(context, "succ");
@@ -488,6 +506,8 @@ private void rangeEach(ThreadContext context, RangeCallBack callback) {
     public IRubyObject to_a(ThreadContext context, final Block block) {
         final Ruby runtime = context.runtime;
 
+        if (isEndless) throw runtime.newRangeError("cannot convert endless range to an array");
+
         if (begin instanceof RubyFixnum && end instanceof RubyFixnum) {
             long lim = ((RubyFixnum) end).getLongValue();
             if (!isExclusive) {
@@ -522,24 +542,25 @@ public IRubyObject each(final ThreadContext context, final Block block) {
         if (!block.isGiven()) {
             return enumeratorizeWithSize(context, this, "each", enumSizeFn());
         }
-        if (begin instanceof RubyFixnum && end instanceof RubyFixnum) {
+        if (begin instanceof RubyFixnum && isEndless) {
+            ((RubyFixnum) begin).step(context, IRubyObject.NULL_ARRAY, block);
+        } else if (begin instanceof RubyFixnum && end instanceof RubyFixnum) {
             fixnumEach(context, block);
         } else if (begin instanceof RubySymbol && end instanceof RubySymbol) {
             ((RubySymbol) begin).asString().uptoCommon(context, ((RubySymbol) end).asString(), isExclusive, block, true);
         } else {
             IRubyObject tmp = begin.checkStringType();
             if (!tmp.isNil()) {
-                ((RubyString) tmp).uptoCommon(context, end, isExclusive, block);
+                if (isEndless) {
+                    ((RubyString) tmp).uptoEndless(context, block);
+                } else {
+                    ((RubyString) tmp).uptoCommon(context, end, isExclusive, block);
+                }
             } else {
                 if (!discreteObject(context, begin)) {
                     throw context.runtime.newTypeError("can't iterate from " + begin.getMetaClass().getName());
                 }
-                rangeEach(context, new RangeCallBack() {
-                    @Override
-                    void call(ThreadContext context, IRubyObject arg) {
-                        block.yield(context, arg);
-                    }
-                });
+                rangeEach(context, (ThreadContext ctx, IRubyObject arg) -> block.yield(ctx, arg));
             }
         }
         return this;
@@ -574,7 +595,6 @@ public IRubyObject step(final ThreadContext context, final Block block) {
 
     @JRubyMethod(name = "step")
     public IRubyObject step(final ThreadContext context, IRubyObject step, final Block block) {
-        Ruby runtime = context.runtime;
         if (!block.isGiven()) {
             return enumeratorizeWithSize(context, this, "step", new IRubyObject[]{step}, stepSizeFn());
         }
@@ -582,22 +602,23 @@ public IRubyObject step(final ThreadContext context, IRubyObject step, final Blo
         if (!(step instanceof RubyNumeric)) {
             step = step.convertToInteger("to_int");
         }
-        IRubyObject zero = RubyFixnum.zero(runtime);
-        if (step.callMethod(context, "<", zero).isTrue()) {
-            throw runtime.newArgumentError("step can't be negative");
+        if (((RubyNumeric) step).isNegative()) {
+            throw context.runtime.newArgumentError("step can't be negative");
         }
-        if (!step.callMethod(context, ">", zero).isTrue()) {
-            throw runtime.newArgumentError("step can't be 0");
+        if (((RubyNumeric) step).isZero()) {
+            throw context.runtime.newArgumentError("step can't be 0");
         }
         return stepCommon(context, step, block);
     }
 
     private IRubyObject stepCommon(ThreadContext context, IRubyObject step, Block block) {
         Ruby runtime = context.runtime;
-        if (begin instanceof RubyFixnum && end instanceof RubyFixnum && step instanceof RubyFixnum) {
+        if (begin instanceof RubyFixnum && isEndless && step instanceof RubyFixnum) {
+            ((RubyFixnum) begin).step(context, new IRubyObject[]{end, step}, block);
+        } else if (begin instanceof RubyFixnum && end instanceof RubyFixnum && step instanceof RubyFixnum) {
             fixnumStep(context, runtime, ((RubyFixnum) step).getLongValue(), block);
         } else if (begin instanceof RubyFloat || end instanceof RubyFloat || step instanceof RubyFloat) {
-            RubyNumeric.floatStep(context, runtime, begin, end, step, isExclusive, block);
+            RubyNumeric.floatStep(context, runtime, begin, end, step, isExclusive, isEndless, block);
         } else if (begin instanceof RubyNumeric
                 || !TypeConverter.checkIntegerType(runtime, begin, "to_int").isNil()
                 || !TypeConverter.checkIntegerType(runtime, end, "to_int").isNil()) {
@@ -607,7 +628,11 @@ private IRubyObject stepCommon(ThreadContext context, IRubyObject step, Block bl
             if (!tmp.isNil()) {
                 StepBlockCallBack callback = new StepBlockCallBack(block, RubyFixnum.one(runtime), step);
                 Block blockCallback = CallBlock.newCallClosure(context, this, Signature.ONE_ARGUMENT, callback);
-                ((RubyString) tmp).uptoCommon(context, end, isExclusive, blockCallback);
+                if (isEndless) {
+                    ((RubyString) tmp).uptoEndless(context, blockCallback);
+                } else {
+                    ((RubyString) tmp).uptoCommon(context, end, isExclusive, blockCallback);
+                }
             } else {
                 if (!begin.respondsTo("succ")) {
                     throw runtime.newTypeError("can't iterate from " + begin.getMetaClass().getName());
@@ -695,6 +720,12 @@ public IRubyObject include_p19(ThreadContext context, IRubyObject obj) {
     // framed for invokeSuper
     @JRubyMethod(name = {"include?", "member?"}, frame = true)
     public IRubyObject include_p(ThreadContext context, final IRubyObject obj) {
+        IRubyObject result = includeCommon(context, obj);
+        if (result != UNDEF) return result;
+        return Helpers.invokeSuper(context, this, obj, Block.NULL_BLOCK);
+    }
+
+    private IRubyObject includeCommon(ThreadContext context, final IRubyObject obj) {
         final Ruby runtime = context.runtime;
 
         boolean iterable = begin instanceof RubyNumeric || end instanceof RubyNumeric ||
@@ -727,7 +758,7 @@ public IRubyObject include_p(ThreadContext context, final IRubyObject obj) {
             }
         }
 
-        return Helpers.invokeSuper(context, this, obj, Block.NULL_BLOCK);
+        return UNDEF;
     }
 
     private static boolean discreteObject(ThreadContext context, IRubyObject obj) {
@@ -746,7 +777,9 @@ private static boolean linearObject(ThreadContext context, IRubyObject obj) {
 
     @JRubyMethod(name = "===")
     public IRubyObject eqq_p(ThreadContext context, IRubyObject obj) {
-        return callMethod(context, "include?", obj);
+        IRubyObject result = includeCommon(context, obj);
+        if (result != UNDEF) return result;
+        return callMethod(context, "cover?", obj);
     }
 
     @JRubyMethod(name = "cover?")
@@ -754,6 +787,7 @@ public RubyBoolean cover_p(ThreadContext context, IRubyObject obj) {
         if (rangeLe(context, begin, obj) == null) {
             return context.fals; // obj < start...end
         }
+        if (isEndless) return context.tru;
         return RubyBoolean.newBoolean(context, isExclusive
                 ? // begin <= obj < end || begin <= obj <= end
                 rangeLt(context, obj, end) != null : rangeLe(context, obj, end) != null);
@@ -765,7 +799,7 @@ public IRubyObject min(ThreadContext context, Block block) {
             return Helpers.invokeSuper(context, this, block);
         }
 
-        int cmp = RubyComparable.cmpint(context, invokedynamic(context, begin, MethodNames.OP_CMP, end), begin, end);
+        int cmp = isEndless ? -1 : RubyComparable.cmpint(context, invokedynamic(context, begin, MethodNames.OP_CMP, end), begin, end);
         if (cmp > 0 || (cmp == 0 && isExclusive)) {
             return context.nil;
         }
@@ -777,6 +811,8 @@ public IRubyObject min(ThreadContext context, Block block) {
     public IRubyObject max(ThreadContext context, Block block) {
         boolean isNumeric = end instanceof RubyNumeric;
 
+        if (isEndless) throw context.runtime.newRangeError("cannot get the maximum element of endless range");
+
         if (block.isGiven() || (isExclusive && !isNumeric)) {
             return Helpers.invokeSuper(context, this, block);
         }
@@ -809,11 +845,14 @@ public IRubyObject max(ThreadContext context, Block block) {
 
     @JRubyMethod(frame = true)
     public IRubyObject min(ThreadContext context, IRubyObject arg, Block block) {
+        if (isEndless && block.isGiven()) throw context.runtime.newRangeError("cannot get the minimum of endless range with custom comparison method");
+        if (isEndless) return first(context, arg);
         return Helpers.invokeSuper(context, this, arg, block);
     }
 
     @JRubyMethod(frame = true)
     public IRubyObject max(ThreadContext context, IRubyObject arg, Block block) {
+        if (isEndless) throw context.runtime.newRangeError("cannot get the maximum element of endless range");
         return Helpers.invokeSuper(context, this, arg, block);
     }
 
@@ -841,13 +880,18 @@ public IRubyObject first(ThreadContext context, IRubyObject arg) {
                 int n = num;
 
                 public IRubyObject call(ThreadContext ctx, IRubyObject[] largs, Block blk) {
-                    return call(ctx, largs[0], blk);
+                    if (n-- <= 0) {
+                        throw JumpException.SPECIAL_JUMP;
+                    }
+                    result.append(largs[0]);
+                    return ctx.nil;
                 }
                 @Override
                 public IRubyObject call(ThreadContext ctx, IRubyObject larg, Block blk) {
-                    if (n-- <= 0) throw JumpException.SPECIAL_JUMP;
-                    result.append(larg);
-                    return ctx.nil;
+                    if (n-- <= 0) {
+                        throw JumpException.SPECIAL_JUMP;
+                    }
+                    return call(ctx, larg, blk);
                 }
             });
         } catch (JumpException.SpecialJump sj) {
@@ -857,6 +901,7 @@ public IRubyObject call(ThreadContext ctx, IRubyObject larg, Block blk) {
 
     @JRubyMethod
     public IRubyObject last(ThreadContext context) {
+        if (isEndless) throw context.runtime.newRangeError("cannot get the last element of endless range");
         return end;
     }
 
@@ -867,6 +912,7 @@ public IRubyObject end(ThreadContext context) {
 
     @JRubyMethod
     public IRubyObject last(ThreadContext context, IRubyObject arg) {
+        if (isEndless) throw context.runtime.newRangeError("cannot get the last element of endless range");
         return ((RubyArray) RubyKernel.new_array(context, this, this)).last(arg);
     }
 
@@ -875,6 +921,9 @@ public IRubyObject size(ThreadContext context) {
         if (begin instanceof RubyNumeric && end instanceof RubyNumeric) {
             return RubyNumeric.intervalStepSize(context, begin, end, RubyFixnum.one(context.runtime), isExclusive);
         }
+
+        if (isEndless) return RubyFloat.newFloat(context.runtime, RubyFloat.INFINITY);
+
         return context.nil;
     }
 
diff --git a/core/src/main/java/org/jruby/RubyString.java b/core/src/main/java/org/jruby/RubyString.java
index 3d0ba964346..0974dbd4d49 100644
--- a/core/src/main/java/org/jruby/RubyString.java
+++ b/core/src/main/java/org/jruby/RubyString.java
@@ -4058,6 +4058,49 @@ private IRubyObject uptoCommonNoDigits(ThreadContext context, RubyString end, bo
         return this;
     }
 
+    final IRubyObject uptoEndless(ThreadContext context, Block block) {
+        Ruby runtime = context.runtime;
+        StringSites sites = sites(context);
+        CallSite succ = sites.succ;
+
+        boolean isAscii = scanForCodeRange() == CR_7BIT;
+        RubyString current = strDup(context.runtime);
+
+        if (isAscii && ASCII.isDigit(value.getUnsafeBytes()[value.getBegin()])) {
+            IRubyObject b = stringToInum(10);
+            RubyArray argsArr = RubyArray.newArray(runtime, RubyFixnum.newFixnum(runtime, value.length()), context.nil);
+            ByteList to;
+
+            if (b instanceof RubyFixnum) {
+                long bl = RubyNumeric.fix2long(b);
+
+                while (bl < RubyFixnum.MAX) {
+                    argsArr.eltSetOk(1, RubyFixnum.newFixnum(runtime, bl));
+                    to = new ByteList(value.length() + 5);
+                    Sprintf.sprintf(to, "%.*d", argsArr);
+                    current = RubyString.newStringNoCopy(runtime, to, USASCIIEncoding.INSTANCE, CR_7BIT);
+                    block.yield(context, current);
+                    bl++;
+                }
+
+                argsArr.eltSetOk(1, RubyFixnum.newFixnum(runtime, bl));
+                to = new ByteList(value.length() + 5);
+                Sprintf.sprintf(to, "%.*d", argsArr);
+                current = RubyString.newStringNoCopy(runtime, to, USASCIIEncoding.INSTANCE, CR_7BIT);
+            }
+        }
+
+        while (true) {
+            IRubyObject next = succ.call(context, current, current);
+            block.yield(context, current);
+            if (next == null) break;
+            current = next.convertToString();
+            if (current.getByteList().length() == 0) break;
+        }
+
+        return this;
+    }
+
     @Deprecated
     public final RubyBoolean include_p19(ThreadContext context, IRubyObject obj) {
         return include_p(context, obj);
@@ -4208,28 +4251,60 @@ private void populateCapturesForSplit(Ruby runtime, RubyArray result, RubyMatchD
         }
     }
 
-    @JRubyMethod(name = "split", writes = BACKREF)
     public RubyArray split(ThreadContext context) {
         return split(context, context.nil);
     }
 
-    @JRubyMethod(name = "split", writes = BACKREF)
     public RubyArray split(ThreadContext context, IRubyObject arg0) {
         return splitCommon(context, arg0, false, 0, 0, true);
     }
 
     @JRubyMethod(name = "split", writes = BACKREF)
+    public IRubyObject splitWithBlock(ThreadContext context, Block block) {
+        return splitWithBlock(context, context.nil, block);
+    }
+
+    @JRubyMethod(name = "split", writes = BACKREF)
+    public IRubyObject splitWithBlock(ThreadContext context, IRubyObject arg0, Block block) {
+        RubyArray array = split(context, arg0);
+        if (!block.isGiven()) {
+            return array;
+        }
+
+        for (int i = 0; i < array.getLength(); i++) {
+            block.yield(context, array.eltOk(i));
+        }
+
+        return this;
+    }
+
     public RubyArray split(ThreadContext context, IRubyObject arg0, IRubyObject arg1) {
         final int lim = RubyNumeric.num2int(arg1);
+        RubyArray array = null;
         if (lim <= 0) {
-            return splitCommon(context, arg0, false, lim, 1, true);
+            array = splitCommon(context, arg0, false, lim, 1, true);
+        } else if (lim == 1) {
+            Ruby runtime = context.runtime;
+            array = value.getRealSize() == 0 ? runtime.newArray() : runtime.newArray(this.strDup(runtime));
         } else {
-            if (lim == 1) {
-                Ruby runtime = context.runtime;
-                return value.getRealSize() == 0 ? runtime.newArray() : runtime.newArray(this.strDup(runtime));
-            }
-            return splitCommon(context, arg0, true, lim, 1, true);
+            array = splitCommon(context, arg0, true, lim, 1, true);
+        }
+
+        return array;
+    }
+
+    @JRubyMethod(name = "split", writes = BACKREF)
+    public IRubyObject splitWithBlock(ThreadContext context, IRubyObject arg0, IRubyObject arg1, Block block) {
+        RubyArray array = split(context, arg0, arg1);
+        if (!block.isGiven()) {
+            return array;
+        }
+
+        for (int i = 0; i < array.getLength(); i++) {
+            block.yield(context, array.eltOk(i));
         }
+
+        return this;
     }
 
     @Deprecated
diff --git a/core/src/main/java/org/jruby/RubyStruct.java b/core/src/main/java/org/jruby/RubyStruct.java
index c2e57bfbf36..0f69967d7dc 100644
--- a/core/src/main/java/org/jruby/RubyStruct.java
+++ b/core/src/main/java/org/jruby/RubyStruct.java
@@ -626,13 +626,37 @@ public RubyArray to_a(ThreadContext context) {
         return context.runtime.newArray(values);
     }
 
-    @JRubyMethod
+    @Deprecated
     public RubyHash to_h(ThreadContext context) {
+        return to_h(context, Block.NULL_BLOCK);
+    }
+
+    @JRubyMethod
+    public RubyHash to_h(ThreadContext context, Block block) {
         RubyHash hash = RubyHash.newHash(context.runtime);
         RubyArray members = __member__();
 
-        for (int i = 0; i < values.length; i++) {
-            hash.op_aset(context, members.eltOk(i), values[i]);
+        if (block.isGiven()) {
+            for (int i = 0; i < values.length; i++) {
+                IRubyObject elt = block.yieldValues(context, new IRubyObject[]{members.eltOk(i), values[i]});
+                IRubyObject key_value_pair = elt.checkArrayType();
+
+                if (key_value_pair == context.nil) {
+                    throw context.runtime.newTypeError("wrong element type " + elt.getMetaClass().getRealClass() + " at " + i + " (expected array)");
+                }
+
+                RubyArray ary = (RubyArray)key_value_pair;
+
+                if (ary.getLength() != 2) {
+                    throw context.runtime.newArgumentError("wrong array length at " + i + " (expected 2, was " + ary.getLength() + ")");
+                }
+
+                hash.op_aset(context, ary.eltInternal(0), ary.eltInternal(1));
+            }
+        } else {
+            for (int i = 0; i < values.length; i++) {
+                hash.op_aset(context, members.eltOk(i), values[i]);
+            }
         }
 
         return hash;
diff --git a/core/src/main/java/org/jruby/ext/ffi/Enums.java b/core/src/main/java/org/jruby/ext/ffi/Enums.java
index c8161823032..17d6bc76917 100644
--- a/core/src/main/java/org/jruby/ext/ffi/Enums.java
+++ b/core/src/main/java/org/jruby/ext/ffi/Enums.java
@@ -97,7 +97,7 @@ public IRubyObject append(final ThreadContext context, IRubyObject item){
             if (tag != null && !tag.isNil())
                 taggedEnums.fastASet(tag, item);
         }
-        symbolMap.merge_bang(context, ((Enum)item).symbol_map(context), Block.NULL_BLOCK);
+        symbolMap.merge_bang(context, new IRubyObject[]{((Enum)item).symbol_map(context)}, Block.NULL_BLOCK);
         return item;
     }
 
diff --git a/core/src/main/java/org/jruby/ext/ripper/RipperParser.java b/core/src/main/java/org/jruby/ext/ripper/RipperParser.java
index d6db7e949c8..2fc34c6e379 100644
--- a/core/src/main/java/org/jruby/ext/ripper/RipperParser.java
+++ b/core/src/main/java/org/jruby/ext/ripper/RipperParser.java
@@ -203,7 +203,7 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
       Order is mandated by <i>jay</i>.
     */
   protected static final short[] yyLhs = {
-//yyLhs 649
+//yyLhs 651
     -1,   151,     0,   139,   140,   140,   140,   140,   141,   154,
    141,    37,    36,    38,    38,    38,    38,    44,   155,    44,
    156,    39,    39,    39,    39,    39,    39,    39,    39,    39,
@@ -230,47 +230,48 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
     41,    41,    41,    41,    41,    41,    41,    41,    41,    41,
     41,    41,    41,    41,    41,    41,    41,    41,    41,    41,
     41,    41,    41,    41,    41,    41,    41,    41,    41,    41,
-    41,   136,   136,   136,   136,    51,    51,    76,    79,    79,
-    79,    79,    62,    62,    54,    58,    58,   130,   130,   130,
-   130,   130,    52,    52,    52,    52,    52,   160,    56,   107,
-   106,   106,    82,    82,    82,    82,    35,    35,    73,    73,
-    73,    42,    42,    42,    42,    42,    42,    42,    42,    42,
-    42,    42,   161,    42,   162,    42,   163,   164,    42,    42,
+    41,    41,    41,   136,   136,   136,   136,    51,    51,    76,
+    79,    79,    79,    79,    62,    62,    54,    58,    58,   130,
+   130,   130,   130,   130,    52,    52,    52,    52,    52,   160,
+    56,   107,   106,   106,    82,    82,    82,    82,    35,    35,
+    73,    73,    73,    42,    42,    42,    42,    42,    42,    42,
+    42,    42,    42,    42,   161,    42,   162,    42,   163,   164,
     42,    42,    42,    42,    42,    42,    42,    42,    42,    42,
-    42,    42,    42,    42,    42,    42,    42,   165,   166,    42,
-   167,   168,    42,    42,    42,   169,   170,    42,   171,    42,
-   173,    42,   174,    42,   175,    42,   176,   177,    42,    42,
-    42,    42,    42,    46,   150,   150,   150,   149,   149,    49,
-    49,    47,    47,   129,   129,   131,   131,    87,    87,   132,
-   132,   132,   132,   132,   132,   132,   132,   132,    94,    94,
-    94,    94,    93,    93,    69,    69,    69,    69,    69,    69,
-    69,    69,    69,    69,    69,    69,    69,    69,    69,    71,
-    71,    70,    70,    70,   124,   124,   123,   123,   133,   133,
-   178,   179,   126,    68,    68,   125,   125,   112,    59,    59,
-    59,    59,    22,    22,    22,    22,    22,    22,    22,    22,
-    22,   111,   180,   111,   181,   114,   182,   115,    77,    48,
-    48,   118,   118,    78,    78,    78,    50,    50,    53,    53,
-    28,    28,    28,    15,    16,    16,    16,    17,    18,    19,
-    25,    84,    84,    27,    27,    90,    88,    88,    26,    91,
-    83,    83,    89,    89,    20,    20,    21,    21,    24,    24,
-    23,   183,    23,   184,   185,   186,   187,   188,    23,    65,
-    65,    65,    65,     2,     1,     1,     1,     1,    29,    33,
-    33,    34,    34,    34,    34,    57,    57,    57,    57,    57,
-    57,    57,    57,    57,    57,    57,    57,   119,   119,   119,
-   119,   119,   119,   119,   119,   119,   119,   119,   119,    66,
-    66,   189,    55,    55,    72,   190,    72,    95,    95,    95,
-    95,    92,    92,    67,    67,    67,    67,    67,    67,    67,
-    67,    67,    67,    67,    67,    67,    67,    67,   135,   135,
-   135,   135,     9,     9,   147,   122,   122,    85,    85,   144,
-    96,    96,    97,    97,    98,    98,    99,    99,   142,   142,
-   143,   143,    63,   128,   105,   105,    86,    86,    10,    10,
-    13,    13,    12,    12,   110,   109,   109,    14,   191,    14,
-   100,   100,   101,   101,   102,   102,   102,   102,     3,     3,
-     3,     4,     4,     4,     4,     5,     5,     5,    11,    11,
-   145,   145,   146,   146,   152,   152,   157,   157,   137,   138,
-   159,   159,   159,   172,   172,   153,   153,    81,   108,
+    42,    42,    42,    42,    42,    42,    42,    42,    42,   165,
+   166,    42,   167,   168,    42,    42,    42,   169,   170,    42,
+   171,    42,   173,    42,   174,    42,   175,    42,   176,   177,
+    42,    42,    42,    42,    42,    46,   150,   150,   150,   149,
+   149,    49,    49,    47,    47,   129,   129,   131,   131,    87,
+    87,   132,   132,   132,   132,   132,   132,   132,   132,   132,
+    94,    94,    94,    94,    93,    93,    69,    69,    69,    69,
+    69,    69,    69,    69,    69,    69,    69,    69,    69,    69,
+    69,    71,    71,    70,    70,    70,   124,   124,   123,   123,
+   133,   133,   178,   179,   126,    68,    68,   125,   125,   112,
+    59,    59,    59,    59,    22,    22,    22,    22,    22,    22,
+    22,    22,    22,   111,   180,   111,   181,   114,   182,   115,
+    77,    48,    48,   118,   118,    78,    78,    78,    50,    50,
+    53,    53,    28,    28,    28,    15,    16,    16,    16,    17,
+    18,    19,    25,    84,    84,    27,    27,    90,    88,    88,
+    26,    91,    83,    83,    89,    89,    20,    20,    21,    21,
+    24,    24,    23,   183,    23,   184,   185,   186,   187,   188,
+    23,    65,    65,    65,    65,     2,     1,     1,     1,     1,
+    29,    33,    33,    34,    34,    34,    34,    57,    57,    57,
+    57,    57,    57,    57,    57,    57,    57,    57,    57,   119,
+   119,   119,   119,   119,   119,   119,   119,   119,   119,   119,
+   119,    66,    66,   189,    55,    55,    72,   190,    72,    95,
+    95,    95,    95,    92,    92,    67,    67,    67,    67,    67,
+    67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
+   135,   135,   135,   135,     9,     9,   147,   122,   122,    85,
+    85,   144,    96,    96,    97,    97,    98,    98,    99,    99,
+   142,   142,   143,   143,    63,   128,   105,   105,    86,    86,
+    10,    10,    13,    13,    12,    12,   110,   109,   109,    14,
+   191,    14,   100,   100,   101,   101,   102,   102,   102,   102,
+     3,     3,     3,     4,     4,     4,     4,     5,     5,     5,
+    11,    11,   145,   145,   146,   146,   152,   152,   157,   157,
+   137,   138,   159,   159,   159,   172,   172,   153,   153,    81,
+   108,
     }, yyLen = {
-//yyLen 649
+//yyLen 651
      2,     0,     2,     2,     1,     1,     3,     2,     1,     0,
      5,     4,     2,     1,     1,     3,     2,     1,     0,     5,
      0,     4,     3,     3,     3,     2,     3,     3,     3,     3,
@@ -294,161 +295,162 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
      1,     1,     3,     3,     6,     5,     5,     5,     5,     4,
-     3,     3,     3,     3,     3,     3,     3,     3,     3,     4,
-     2,     2,     3,     3,     3,     3,     1,     3,     3,     3,
-     3,     3,     2,     2,     3,     3,     3,     3,     3,     6,
-     1,     1,     1,     1,     1,     3,     3,     1,     1,     2,
-     4,     2,     1,     3,     3,     1,     1,     1,     1,     2,
-     4,     2,     1,     2,     2,     4,     1,     0,     2,     2,
-     2,     1,     1,     2,     3,     4,     1,     1,     3,     4,
-     2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
-     1,     1,     0,     4,     0,     3,     0,     0,     5,     3,
-     3,     2,     3,     3,     1,     4,     3,     1,     5,     4,
-     3,     2,     1,     2,     2,     6,     6,     0,     0,     7,
-     0,     0,     7,     5,     4,     0,     0,     9,     0,     6,
-     0,     7,     0,     5,     0,     6,     0,     0,     9,     1,
-     1,     1,     1,     1,     1,     1,     2,     1,     1,     1,
-     5,     1,     2,     1,     1,     1,     3,     1,     3,     1,
-     4,     6,     3,     5,     2,     4,     1,     3,     4,     2,
-     2,     1,     2,     0,     6,     8,     4,     6,     4,     2,
-     6,     2,     4,     6,     2,     4,     2,     4,     1,     1,
-     1,     3,     1,     4,     1,     4,     1,     3,     1,     1,
-     0,     0,     4,     4,     1,     3,     3,     3,     2,     4,
-     5,     5,     2,     4,     4,     3,     3,     3,     2,     1,
-     4,     3,     0,     5,     0,     3,     0,     3,     5,     1,
-     1,     6,     0,     1,     1,     1,     2,     1,     2,     1,
-     1,     1,     1,     1,     1,     1,     2,     3,     3,     3,
-     4,     0,     3,     1,     2,     4,     0,     3,     4,     4,
-     0,     3,     0,     3,     0,     2,     0,     2,     0,     2,
-     1,     0,     3,     0,     0,     0,     0,     0,     8,     1,
-     1,     1,     1,     2,     1,     1,     1,     1,     3,     1,
-     2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
+     3,     3,     3,     2,     2,     3,     3,     3,     3,     3,
+     3,     4,     2,     2,     3,     3,     3,     3,     1,     3,
+     3,     3,     3,     3,     2,     2,     3,     3,     3,     3,
+     3,     6,     1,     1,     1,     1,     1,     3,     3,     1,
+     1,     2,     4,     2,     1,     3,     3,     1,     1,     1,
+     1,     2,     4,     2,     1,     2,     2,     4,     1,     0,
+     2,     2,     2,     1,     1,     2,     3,     4,     1,     1,
+     3,     4,     2,     1,     1,     1,     1,     1,     1,     1,
+     1,     1,     1,     1,     0,     4,     0,     3,     0,     0,
+     5,     3,     3,     2,     3,     3,     1,     4,     3,     1,
+     5,     4,     3,     2,     1,     2,     2,     6,     6,     0,
+     0,     7,     0,     0,     7,     5,     4,     0,     0,     9,
+     0,     6,     0,     7,     0,     5,     0,     6,     0,     0,
+     9,     1,     1,     1,     1,     1,     1,     1,     2,     1,
+     1,     1,     5,     1,     2,     1,     1,     1,     3,     1,
+     3,     1,     4,     6,     3,     5,     2,     4,     1,     3,
+     4,     2,     2,     1,     2,     0,     6,     8,     4,     6,
+     4,     2,     6,     2,     4,     6,     2,     4,     2,     4,
+     1,     1,     1,     3,     1,     4,     1,     4,     1,     3,
+     1,     1,     0,     0,     4,     4,     1,     3,     3,     3,
+     2,     4,     5,     5,     2,     4,     4,     3,     3,     3,
+     2,     1,     4,     3,     0,     5,     0,     3,     0,     3,
+     5,     1,     1,     6,     0,     1,     1,     1,     2,     1,
+     2,     1,     1,     1,     1,     1,     1,     1,     2,     3,
+     3,     3,     4,     0,     3,     1,     2,     4,     0,     3,
+     4,     4,     0,     3,     0,     3,     0,     2,     0,     2,
+     0,     2,     1,     0,     3,     0,     0,     0,     0,     0,
+     8,     1,     1,     1,     1,     2,     1,     1,     1,     1,
+     3,     1,     2,     1,     1,     1,     1,     1,     1,     1,
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
-     1,     0,     4,     0,     3,     0,     3,     4,     2,     2,
-     1,     2,     0,     6,     8,     4,     6,     4,     6,     2,
-     4,     6,     2,     4,     2,     4,     1,     0,     1,     1,
-     1,     1,     1,     1,     1,     1,     3,     1,     3,     1,
-     2,     1,     2,     1,     1,     3,     1,     3,     1,     1,
-     2,     1,     3,     3,     1,     3,     1,     3,     1,     1,
-     2,     1,     1,     1,     2,     2,     0,     1,     0,     4,
-     1,     2,     1,     3,     3,     2,     4,     2,     1,     1,
+     1,     1,     1,     0,     4,     0,     3,     0,     3,     4,
+     2,     2,     1,     2,     0,     6,     8,     4,     6,     4,
+     6,     2,     4,     6,     2,     4,     2,     4,     1,     0,
+     1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
+     3,     1,     2,     1,     2,     1,     1,     3,     1,     3,
+     1,     1,     2,     1,     3,     3,     1,     3,     1,     3,
+     1,     1,     2,     1,     1,     1,     2,     2,     0,     1,
+     0,     4,     1,     2,     1,     3,     3,     2,     4,     2,
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
-     1,     1,     1,     1,     0,     1,     0,     1,     2,     2,
-     0,     1,     1,     1,     1,     1,     2,     0,     0,
+     1,     1,     1,     1,     1,     1,     0,     1,     0,     1,
+     2,     2,     0,     1,     1,     1,     1,     1,     2,     0,
+     0,
     }, yyDefRed = {
 //yyDefRed 1107
-     1,     0,     0,     0,     0,     0,     0,     0,   312,     0,
-     0,     0,   337,   340,     0,     0,     0,   361,   362,     0,
+     1,     0,     0,     0,     0,     0,     0,     0,   314,     0,
+     0,     0,   339,   342,     0,     0,     0,   363,   364,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     9,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-   464,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,   484,   486,   488,     0,     0,   420,   539,
-   540,   511,   514,   512,   513,     0,     0,   461,    60,   302,
-     0,   465,   303,   304,     0,   305,   306,   301,   462,    32,
-    48,   460,   509,     0,     0,     0,     0,     0,     0,     0,
-   309,     0,    56,     0,     0,    86,     0,     4,   307,   308,
-     0,     0,    72,     0,     2,     0,     5,     0,     7,   359,
-   360,   324,     0,     0,   521,   520,   522,   523,     0,     0,
-   525,   524,   526,     0,   517,   516,     0,   519,     0,     0,
-     0,     0,   133,     0,   363,     0,   310,     0,   352,   186,
+   466,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,   486,   488,   490,     0,     0,   422,   541,
+   542,   513,   516,   514,   515,     0,     0,   463,    60,   304,
+     0,   467,   305,   306,     0,   307,   308,   303,   464,    32,
+    48,   462,   511,     0,     0,     0,     0,     0,     0,     0,
+   311,     0,    56,     0,     0,    86,     0,     4,   309,   310,
+     0,     0,    72,     0,     2,     0,     5,     0,     7,   361,
+   362,   326,     0,     0,   523,   522,   524,   525,     0,     0,
+   527,   526,   528,     0,   519,   518,     0,   521,     0,     0,
+     0,     0,   133,     0,   365,     0,   312,     0,   354,   186,
    197,   187,   210,   183,   203,   193,   192,   213,   214,   208,
    191,   190,   185,   211,   215,   216,   195,   184,   198,   202,
    204,   196,   189,   205,   212,   207,     0,     0,     0,     0,
    182,   201,   200,   217,   218,   219,   220,   221,   181,   188,
    179,   180,     0,     0,     0,     0,   137,     0,   171,   172,
    168,   150,   151,   152,   159,   156,   158,   153,   154,   173,
-   174,   160,   161,   608,   165,   164,   149,   170,   167,   166,
-   162,   163,   157,   155,   147,   169,   148,   175,   138,   354,
-     0,   607,   139,   206,   199,   209,   194,   176,   177,   178,
+   174,   160,   161,   610,   165,   164,   149,   170,   167,   166,
+   162,   163,   157,   155,   147,   169,   148,   175,   138,   356,
+     0,   609,   139,   206,   199,   209,   194,   176,   177,   178,
    135,   136,   141,   140,   143,     0,   142,   144,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,     0,     0,   643,
-   644,     0,     0,     0,   645,     0,     0,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,     0,     0,   645,
+   646,     0,     0,     0,   647,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,   373,   374,     0,     0,     0,     0,     0,   484,
-     0,     0,   282,    70,     0,     0,     0,   612,   286,    71,
-    69,     0,    68,     0,     0,   438,    67,     0,   637,     0,
-     0,    20,     0,     0,     0,   240,     0,     0,     0,     0,
+     0,     0,   375,   376,     0,     0,     0,     0,     0,   486,
+     0,     0,   284,    70,     0,     0,     0,   614,   288,    71,
+    69,     0,    68,     0,     0,   440,    67,     0,   639,     0,
+     0,    20,     0,     0,     0,   242,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,    14,    13,     0,     0,
-     0,     0,     0,   268,     0,     0,     0,   610,     0,     0,
+     0,     0,     0,   270,     0,     0,     0,   612,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,   253,    52,   252,
-   506,   505,   507,   503,   504,     0,     0,     0,     0,   471,
-   480,   334,     0,   476,   482,   466,   442,   444,   333,     0,
+     0,     0,     0,     0,     0,     0,     0,   255,    52,   254,
+   508,   507,   509,   505,   506,     0,     0,     0,     0,   473,
+   482,   336,     0,   478,   484,   468,   444,   446,   335,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,   263,   264,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,   262,   261,     0,
-     0,     0,     0,   446,   428,   630,   631,     0,     0,     0,
-     0,   633,   632,     0,     0,    88,     0,     0,     0,     0,
-     0,     0,     3,     0,   432,     0,   331,     0,   510,     0,
-   130,     0,   132,   541,   348,     0,     0,     0,     0,     0,
-     0,   628,   629,   356,   145,     0,     0,     0,   365,     0,
+     0,   265,   266,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,   264,   263,     0,
+     0,     0,     0,   448,   430,   632,   633,     0,     0,     0,
+     0,   635,   634,     0,     0,    88,     0,     0,     0,     0,
+     0,     0,     3,     0,   434,     0,   333,     0,   512,     0,
+   130,     0,   132,   543,   350,     0,     0,     0,     0,     0,
+     0,   630,   631,   358,   145,     0,     0,     0,   367,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,   646,     0,     0,     0,     0,     0,     0,   345,   615,
-   293,   289,     0,   617,     0,     0,   283,   291,     0,   284,
-     0,   326,     0,   288,   278,   277,     0,     0,     0,     0,
-   330,    51,    22,    24,    23,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,   319,    12,     0,
-     0,   315,     0,   322,     0,   641,   269,     0,   271,   323,
-   611,     0,    90,     0,     0,     0,     0,     0,   493,   491,
-   508,   490,   487,   467,   485,   468,   469,   489,     0,     0,
-   573,   570,   569,   568,   571,   579,   588,     0,     0,   599,
-   598,   603,   602,   589,   574,     0,     0,     0,   596,   424,
-   421,     0,     0,   566,   586,     0,   550,   577,   572,     0,
+     0,   648,     0,     0,     0,     0,     0,     0,   347,   617,
+   295,   291,     0,   619,     0,     0,   285,   293,     0,   286,
+     0,   328,     0,   290,   280,   279,     0,     0,     0,     0,
+   332,    51,    22,    24,    23,     0,     0,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,   321,    12,     0,
+     0,   317,     0,   324,     0,   643,   271,     0,   273,   325,
+   613,     0,    90,     0,     0,     0,     0,     0,   495,   493,
+   510,   492,   489,   469,   487,   470,   471,   491,     0,     0,
+   575,   572,   571,   570,   573,   581,   590,     0,     0,   601,
+   600,   605,   604,   591,   576,     0,     0,     0,   598,   426,
+   423,     0,     0,   568,   588,     0,   552,   579,   574,     0,
      0,     0,     0,     0,     0,     0,     0,     0,    26,    27,
     28,    29,    30,    49,    50,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,   435,     0,   437,     0,     0,   623,
-     0,     0,   624,   436,     0,   621,   622,     0,    47,     0,
+     0,     0,     0,     0,   437,     0,   439,     0,     0,   625,
+     0,     0,   626,   438,     0,   623,   624,     0,    47,     0,
      0,     0,    44,   230,     0,     0,     0,     0,    37,   222,
-    34,   292,     0,     0,     0,     0,    89,    33,    35,   296,
-     0,    38,   223,     6,   444,    62,     0,     0,     0,     0,
+    34,   294,     0,     0,     0,     0,    89,    33,    35,   298,
+     0,    38,   223,     6,   446,    62,     0,     0,     0,     0,
      0,     0,   134,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,   313,     0,   366,     0,     0,     0,
-     0,     0,     0,     0,     0,   344,   368,   338,   367,   341,
-     0,     0,     0,     0,     0,     0,     0,   614,     0,     0,
-     0,   290,   613,   325,   638,     0,     0,   274,   329,    21,
+     0,     0,     0,     0,   315,     0,   368,     0,     0,     0,
+     0,     0,     0,     0,     0,   346,   370,   340,   369,   343,
+     0,     0,     0,     0,     0,     0,     0,   616,     0,     0,
+     0,   292,   615,   327,   640,     0,     0,   276,   331,    21,
      0,     0,    31,     0,   229,     0,     0,    15,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,   494,     0,   470,
-   473,     0,   478,     0,     0,     0,   375,     0,   377,     0,
-     0,   600,   604,     0,   564,     0,     0,   559,     0,   562,
-     0,   548,   590,     0,   549,   580,     0,   475,     0,   479,
-     0,   412,     0,   410,     0,   409,   441,     0,     0,   427,
-     0,     0,     0,   434,     0,     0,     0,     0,     0,   276,
-     0,   433,   275,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,   496,     0,   472,
+   475,     0,   480,     0,     0,     0,   377,     0,   379,     0,
+     0,   602,   606,     0,   566,     0,     0,   561,     0,   564,
+     0,   550,   592,     0,   551,   582,     0,   477,     0,   481,
+     0,   414,     0,   412,     0,   411,   443,     0,     0,   429,
+     0,     0,     0,   436,     0,     0,     0,     0,     0,   278,
+     0,   435,   277,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,    87,     0,     0,     0,     0,     0,     0,
-   440,   353,   609,     0,     0,     0,   357,   146,   454,     0,
-     0,   455,     0,     0,   371,     0,   369,     0,     0,     0,
-     0,     0,     0,     0,   343,     0,     0,     0,     0,     0,
-     0,   616,   295,   285,     0,   328,    10,     0,   318,   270,
-    91,     0,   495,   499,   500,   501,   492,   502,   472,   474,
-   481,     0,     0,     0,     0,   576,     0,     0,     0,   551,
-   575,     0,     0,   422,     0,     0,   578,     0,   597,     0,
-   587,   605,     0,   592,   477,   483,     0,     0,     0,   408,
-   584,     0,     0,   391,     0,   594,     0,     0,     0,     0,
-   445,     0,   447,    43,   227,    42,   228,    66,     0,   639,
-    40,   225,    41,   226,    64,   431,   430,    46,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,    59,     0,   542,
-   349,   544,   355,   546,     0,     0,     0,   457,   372,     0,
-    11,   459,     0,   335,     0,   336,   294,     0,     0,     0,
-   346,     0,    19,   496,   376,     0,     0,     0,   378,   423,
-     0,     0,   565,     0,     0,     0,   557,     0,   555,     0,
-   560,   563,   547,     0,   406,     0,     0,   401,     0,   389,
-     0,   404,   411,   390,     0,     0,     0,     0,     0,   443,
-     0,     0,    39,     0,     0,   351,     0,     0,     0,     0,
+   442,   355,   611,     0,     0,     0,   359,   146,   456,     0,
+     0,   457,     0,     0,   373,     0,   371,     0,     0,     0,
+     0,     0,     0,     0,   345,     0,     0,     0,     0,     0,
+     0,   618,   297,   287,     0,   330,    10,     0,   320,   272,
+    91,     0,   497,   501,   502,   503,   494,   504,   474,   476,
+   483,     0,     0,     0,     0,   578,     0,     0,     0,   553,
+   577,     0,     0,   424,     0,     0,   580,     0,   599,     0,
+   589,   607,     0,   594,   479,   485,     0,     0,     0,   410,
+   586,     0,     0,   393,     0,   596,     0,     0,     0,     0,
+   447,     0,   449,    43,   227,    42,   228,    66,     0,   641,
+    40,   225,    41,   226,    64,   433,   432,    46,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,    59,     0,   544,
+   351,   546,   357,   548,     0,     0,     0,   459,   374,     0,
+    11,   461,     0,   337,     0,   338,   296,     0,     0,     0,
+   348,     0,    19,   498,   378,     0,     0,     0,   380,   425,
+     0,     0,   567,     0,     0,     0,   559,     0,   557,     0,
+   562,   565,   549,     0,   408,     0,     0,   403,     0,   391,
+     0,   406,   413,   392,     0,     0,     0,     0,     0,   445,
+     0,     0,    39,     0,     0,   353,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,   456,     0,   458,     0,   449,   448,   450,   339,
-   342,     0,   497,     0,     0,     0,     0,   418,     0,   416,
-   419,   426,   425,     0,     0,     0,     0,     0,   392,   413,
-     0,     0,   585,     0,     0,     0,   595,   321,     0,     0,
+     0,     0,   458,     0,   460,     0,   451,   450,   452,   341,
+   344,     0,   499,     0,     0,     0,     0,   420,     0,   418,
+   421,   428,   427,     0,     0,     0,     0,     0,   394,   415,
+     0,     0,   587,     0,     0,     0,   597,   323,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,   415,   558,     0,   553,   556,   561,     0,   407,
-     0,   398,     0,   396,   388,     0,   402,   405,     0,     0,
-   358,     0,     0,     0,     0,     0,   451,   370,   347,     0,
-     0,   417,     0,     0,     0,     0,     0,     0,   498,   554,
-   400,     0,   394,   397,   403,     0,   395,
+     0,     0,   417,   560,     0,   555,   558,   563,     0,   409,
+     0,   400,     0,   398,   390,     0,   404,   407,     0,     0,
+   360,     0,     0,     0,     0,     0,   453,   372,   349,     0,
+     0,   419,     0,     0,     0,     0,     0,     0,   500,   556,
+   402,     0,   396,   399,   405,     0,   397,
     }, yyDgoto = {
 //yyDgoto 192
      1,   363,    67,    68,   671,   624,   625,   233,   132,   564,
@@ -473,20 +475,20 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
    679,   449,
     }, yySindex = {
 //yySindex 1107
-     0,     0, 19376, 20673, 22350, 22737, 23479, 23370,     0, 21834,
- 21834, 18592,     0,     0, 22479, 19763, 19763,     0,     0, 19763,
-  -181,  -178,     0,     0,     0,     0,    46, 23261,   166,     0,
+     0,     0, 19727, 21024, 22701, 23088, 23830, 23721,     0, 22185,
+ 22185, 18943,     0,     0, 22830, 20114, 20114,     0,     0, 20114,
+  -181,  -178,     0,     0,     0,     0,    46, 23612,   166,     0,
   -175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0, 21963, 21963,   765,  -120, 19505,     0, 20153, 20543, 18860,
- 21963, 22092, 23587,     0,     0,     0,   211,   267,     0,     0,
+     0, 22314, 22314,   765,  -120, 19856,     0, 20504, 20894, 19211,
+ 22314, 22443, 23938,     0,     0,     0,   211,   267,     0,     0,
      0,     0,     0,     0,     0,   294,   330,     0,     0,     0,
   -108,     0,     0,     0,  -141,     0,     0,     0,     0,     0,
      0,     0,     0,  1686,    48,  4624,     0,   -83,   456,   320,
      0,   -16,     0,   201,   321,     0,   482,     0,     0,     0,
- 22608,   517,     0,   272,     0,   135,     0,   -78,     0,     0,
+ 22959,   517,     0,   272,     0,   135,     0,   -78,     0,     0,
      0,     0,  -181,  -178,     0,     0,     0,     0,   282,   166,
-     0,     0,     0,     0,     0,     0,     0,     0,   765, 21834,
-    42, 19634,     0,   271,     0,   745,     0,   -78,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,     0,   765, 22185,
+    42, 19985,     0,   271,     0,   745,     0,   -78,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
@@ -496,89 +498,89 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    406,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,   608,     0,     0, 19634,     0,
+     0,     0,     0,     0,     0,   608,     0,     0, 19985,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,   349,    48,   105,   762,   323,   611,   343,   105,     0,
-     0,   135,   416,   633,     0, 21834, 21834,     0,     0,     0,
+     0,   135,   416,   633,     0, 22185, 22185,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,   389,
-   854,     0,     0,     0,   424, 21963, 21963, 21963, 21963,     0,
- 21963,  4624,     0,     0,   379,   676,   679,     0,     0,     0,
-     0, 16804,     0, 19763, 19763,     0,     0, 18721,     0, 21834,
-  -154,     0, 20931,   383, 19634,     0,  1094,   430,   436,   418,
- 20802,     0, 19505,   428,   135,  1686,     0,     0,     0,   166,
-   166, 20802,   421,     0,   262,   291,   379,     0,   409,   291,
+   854,     0,     0,     0,   424, 22314, 22314, 22314, 22314,     0,
+ 22314,  4624,     0,     0,   379,   676,   679,     0,     0,     0,
+     0, 17155,     0, 20114, 20114,     0,     0, 19072,     0, 22185,
+  -154,     0, 21282,   383, 19985,     0,  1094,   430,   436,   418,
+ 21153,     0, 19856,   428,   135,  1686,     0,     0,     0,   166,
+   166, 21153,   421,     0,   262,   291,   379,     0,   409,   291,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,   464, 22866,  1167,     0,   733,     0,     0,     0,
+     0,     0,   464, 23217,  1167,     0,   733,     0,     0,     0,
      0,     0,     0,     0,     0,   590,   600,  1256,   442,     0,
-     0,     0,  2585,     0,     0,     0,     0,     0,     0, 21834,
- 21834, 21834, 21834, 20802, 21834, 21834, 21963, 21963, 21963, 21963,
- 21963,     0,     0, 21963, 21963, 21963, 21963, 21963, 21963, 21963,
- 21963, 21963, 21963, 21963, 21963, 21963, 21963,     0,     0, 21963,
- 21963, 21963, 21963,     0,     0,     0,     0,  5973, 19763,  6485,
- 21963,     0,     0,  5119, 22092,     0, 21060, 19505, 18989,   735,
- 21060, 22092,     0, 19118,     0,   433,     0,   446,     0,    48,
-     0,     0,     0,     0,     0,  6621, 19763,  6997, 19634, 21834,
-   459,     0,     0,     0,     0,   541,   540,   418,     0, 19634,
-   542,  7133, 19763, 10005, 21963, 21963, 21963, 19634,   416, 21189,
-   543,     0,    97,    97,     0, 12430, 19763, 12954,     0,     0,
-     0,     0,   268,     0, 21963, 19893,     0,     0, 20283,     0,
+     0,     0,  2585,     0,     0,     0,     0,     0,     0, 22185,
+ 22185, 22185, 22185, 21153, 22185, 22185, 22314, 22314, 22314, 22314,
+ 22314,     0,     0, 22314, 22314, 22314, 22314, 22314, 22314, 22314,
+ 22314, 22314, 22314, 22314, 22314, 22314, 22314,     0,     0, 22314,
+ 22314, 22314, 22314,     0,     0,     0,     0,  5973, 20114,  6485,
+ 22314,     0,     0,  5119, 22443,     0, 21411, 19856, 19340,   735,
+ 21411, 22443,     0, 19469,     0,   433,     0,   446,     0,    48,
+     0,     0,     0,     0,     0,  6621, 20114,  6997, 19985, 22185,
+   459,     0,     0,     0,     0,   541,   540,   418,     0, 19985,
+   542,  7133, 20114, 10005, 22314, 22314, 22314, 19985,   416, 21540,
+   543,     0,    97,    97,     0, 13016, 20114, 14396,     0,     0,
+     0,     0,   268,     0, 22314, 20244,     0,     0, 20634,     0,
    166,     0,   463,     0,     0,     0,   767,   771,   166,   334,
-     0,     0,     0,     0,     0, 23370, 21834,  4624, 19376,   454,
-  7133, 10005, 21963, 21963,  1686,   457,   166,     0,     0, 19247,
-     0,     0,  1686,     0, 20413,     0,     0, 20543,     0,     0,
-     0,     0,     0,   774, 23751, 19763, 23807, 22866,     0,     0,
+     0,     0,     0,     0,     0, 23721, 22185,  4624, 19727,   454,
+  7133, 10005, 22314, 22314,  1686,   457,   166,     0,     0, 19598,
+     0,     0,  1686,     0, 20764,     0,     0, 20894,     0,     0,
+     0,     0,     0,   774, 24102, 20114, 24158, 23217,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,  1388,   -84,
      0,     0,     0,     0,     0,     0,     0,  1573,  4958,     0,
      0,     0,     0,     0,     0,   524,   526,   791,     0,     0,
      0,   796,   800,     0,     0,   804,     0,     0,     0,   544,
-   810, 21963,   795,  1402,   -49,   301,   497,   301,     0,     0,
+   810, 22314,   795,  1402,   -49,   301,   497,   301,     0,     0,
      0,     0,     0,     0,     0,   430,  3444,  3444,  3444,  3444,
   4075,  3563,  3444,  3444,  3060,  3060,  1880,  1880,   430,  2377,
    430,   430,    -4,    -4,  2552,  2552,  2488,  2926,   601,   301,
    528,     0,   529,  -178,     0,     0,     0,   166,   531,     0,
    536,  -178,     0,     0,  2926,     0,     0,  -178,     0,   585,
-  4516,  1177,     0,     0,   201,   815, 21963,  4516,     0,     0,
-     0,     0,   845,   166, 22866,   846,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,   135, 21834, 19634,     0,
-     0,  -178,     0,   166,  -178,   629,   334,  4958, 19634,  4958,
- 23695, 23370, 21318,   631,     0,   380,     0,   565,   568,   166,
+  4516,  1177,     0,     0,   201,   815, 22314,  4516,     0,     0,
+     0,     0,   845,   166, 23217,   846,     0,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,   135, 22185, 19985,     0,
+     0,  -178,     0,   166,  -178,   629,   334,  4958, 19985,  4958,
+ 24046, 23721, 21669,   631,     0,   380,     0,   565,   568,   166,
    569,   570,   631,   648,    90,     0,     0,     0,     0,     0,
-     0,     0,   166,     0,     0, 21834, 21963,     0, 21963,   379,
-   679,     0,     0,     0,     0, 19893, 20283,     0,     0,     0,
-   334,   551,     0,   430,     0, 19376,     0,     0,   166,   291,
- 22866,     0,     0,   166,     0,     0,   774,     0,   -13,     0,
+     0,     0,   166,     0,     0, 22185, 22314,     0, 22314,   379,
+   679,     0,     0,     0,     0, 20244, 20634,     0,     0,     0,
+   334,   551,     0,   430,     0, 19727,     0,     0,   166,   291,
+ 23217,     0,     0,   166,     0,     0,   774,     0,   -13,     0,
      0,    52,     0,   883,  1573,   720,     0,   873,     0,   166,
    166,     0,     0,  2440,     0,  -121,  4958,     0,  4958,     0,
-  -119,     0,     0,   351,     0,     0, 21963,     0,   186,     0,
-   887,     0,   925,     0, 19634,     0,     0, 19634,   862,     0,
- 19634, 22092, 22092,     0,   433,   586,   576, 22092, 22092,     0,
-   433,     0,     0,   -83,  -141, 20802, 21963, 23863, 19763, 23919,
- 22092,     0, 21447,     0,   774, 22866,   564, 19634,   135,   666,
+  -119,     0,     0,   351,     0,     0, 22314,     0,   186,     0,
+   887,     0,   925,     0, 19985,     0,     0, 19985,   862,     0,
+ 19985, 22443, 22443,     0,   433,   586,   576, 22443, 22443,     0,
+   433,     0,     0,   -83,  -141, 21153, 22314, 24214, 20114, 24270,
+ 22443,     0, 21798,     0,   774, 23217,   564, 19985,   135,   666,
      0,     0,     0,   166,   673,   135,     0,     0,     0,     0,
-   603,     0, 19634,   684,     0, 21834,     0,   686, 21963, 21963,
-   614, 21963, 21963,   692,     0, 21576, 19634, 19634, 19634,     0,
+   603,     0, 19985,   684,     0, 22185,     0,   686, 22314, 22314,
+   614, 22314, 22314,   692,     0, 21927, 19985, 19985, 19985,     0,
     97,     0,     0,     0,   913,     0,     0,   613,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,   166,  1401,   922,  1697,     0,   640,   929,   948,     0,
-     0, 19634, 19634,     0,   951,   952,     0,   956,     0,   948,
+     0, 19985, 19985,     0,   951,   952,     0,   956,     0,   948,
      0,     0,   810,     0,     0,     0,   960,   166,   961,     0,
-     0,   975,   976,     0,   662,     0,   810, 22995,   966,   768,
-     0, 21963,     0,     0,     0,     0,     0,     0, 22092,     0,
+     0,   975,   976,     0,   662,     0,   810, 23346,   966,   768,
+     0, 22314,     0,     0,     0,     0,     0,     0, 22443,     0,
      0,     0,     0,     0,     0,     0,     0,     0,  4624,   528,
-   529,   166,   531,   536, 21963,     0,   774,     0,   769,     0,
-     0,     0,     0,     0,   459, 23124,   105,     0,     0, 19634,
-     0,     0,   105,     0, 21963,     0,     0,   204,   770,   772,
-     0, 20283,     0,     0,     0,   993,  1401,   758,     0,     0,
+   529,   166,   531,   536, 22314,     0,   774,     0,   769,     0,
+     0,     0,     0,     0,   459, 23475,   105,     0,     0, 19985,
+     0,     0,   105,     0, 22314,     0,     0,   204,   770,   772,
+     0, 20634,     0,     0,     0,   993,  1401,   758,     0,     0,
   1632,  2440,     0,   783,   675,  2440,     0,  4958,     0,  2440,
      0,     0,     0,  2440,     0,   689,  4958,     0,  -119,     0,
-  4958,     0,     0,     0,     0,     0,   740,  1259, 22995,     0,
-  4624,  4624,     0,   586,     0,     0, 19634,     0,     0,     0,
+  4958,     0,     0,     0,     0,     0,   740,  1259, 23346,     0,
+  4624,  4624,     0,   586,     0,     0, 19985,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,   742,
-  1290,     0,     0, 19634,     0, 19634,     0,     0,     0,     0,
-     0, 19634,     0,  1401,   993,  1401,  1009,     0,   656,     0,
+  1290,     0,     0, 19985,     0, 19985,     0,     0,     0,     0,
+     0, 19985,     0,  1401,   993,  1401,  1009,     0,   656,     0,
      0,     0,     0,   948,  1012,   948,   948,  1016,     0,     0,
-  1019,  1021,     0,   810,  1028,  1016,     0,     0, 23975,  1259,
-   814,     0, 24031, 19763, 24087,   541,   380,   819, 19634,   993,
+  1019,  1021,     0,   810,  1028,  1016,     0,     0, 24326,  1259,
+   814,     0, 24382, 20114, 24438,   541,   380,   819, 19985,   993,
   1401,  1632,     0,     0,  2440,     0,     0,     0,  2440,     0,
   2440,     0,  4958,     0,     0,  2440,     0,     0,     0,     0,
      0,     0,     0,   166,     0,     0,     0,     0,     0,   690,
@@ -588,18 +590,18 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
 //yyRindex 1107
      0,     0,   151,     0,     0,     0,     0,     0,     0,     0,
      0,   818,     0,     0,     0, 10673, 10776,     0,     0, 10888,
-  4868,  4356, 12152, 12255, 12363, 12556, 22221,     0, 21705,     0,
-     0, 12664, 12767, 12887,  5230,  3332, 13068, 13188,  5369, 13291,
-     0,     0,     0,     0,     0,    69, 18463,   746,   731,   226,
+  4868,  4356, 12433, 12589, 12734, 12837, 22572,     0, 22056,     0,
+     0, 12949, 13138, 13250,  5230,  3332, 13353, 13490,  5369, 13654,
+     0,     0,     0,     0,     0,    69, 18814,   746,   731,   226,
      0,     0,  1488,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   9938,     0,     0,     0, 10127,     0,     0,     0,     0,     0,
-     0,     0,     0,    49, 11896,  1522, 10244,  1988,     0, 13428,
-     0,  8783,     0, 13592,     0,     0,     0,     0,     0,     0,
-   276,     0,     0,     0,     0,    89,     0, 20023,     0,     0,
+     0,     0,     0,    49, 13600,  1522, 10244,  1988,     0, 13796,
+     0,  8783,     0, 13955,     0,     0,     0,     0,     0,     0,
+   276,     0,     0,     0,     0,    89,     0, 20374,     0,     0,
      0,     0, 10367,  7994,     0,     0,     0,     0,     0,   754,
-     0,     0,     0, 16944,     0,     0, 17084,     0,     0,     0,
-     0,    69,     0, 17924,     0,     0,     0,     0,     0,     0,
+     0,     0,     0, 17295,     0,     0, 17435,     0,     0,     0,
+     0,    69,     0, 18275,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,  1459,  2387,  2922,  3009,
@@ -609,30 +611,30 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0, 16705,     0,     0,  1344,  8117,
+     0,     0,     0,     0,     0, 17056,     0,     0,  1344,  8117,
   8234,  8423,  8540,  8663,  8846,  8969,  2167,  9086,  9275,  2308,
   9392,     0,  2032,     0,     0,  9698,     0,     0,     0,     0,
      0,   818,     0,   832,     0,     0,     0,   858,  1128,  1173,
   1311,  1639,  1705,  1798,   879,  1824,  2009,  1969,  2019,     0,
      0,  2496,     0,     0,     0,     0,     0,     0,     0,     0,
-     0, 16284,     0,     0,  1733, 16498, 16498,     0,     0,     0,
+     0, 16601,     0,     0,  1733, 16828, 16828,     0,     0,     0,
      0,   776,     0,     0,    71,     0,     0,   776,     0,     0,
-     0,     0,     0,     0,    47,     0,     0, 11082, 10550, 13727,
-     0, 17784,    69,     0,  2514,  1228,     0,     0,   164,   776,
+     0,     0,     0,     0,    47,     0,     0, 11322, 10550, 14095,
+     0, 18135,    69,     0,  2514,  1228,     0,     0,   164,   776,
    776,     0,     0,     0,   759,   759,     0,     0,     0,   744,
   1118,  1313,  1846,  1848,  1926,  7281,  8334,  1052,  8605,  8756,
   1096,  9186,     0,     0,     0,  9457,   308,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,   -92,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,     0, 11082, 11219,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,   113,     0,
      0,     0,     0,     0,     0,     0,     0,    69,   312,   552,
-     0,     0,     0,    91,     0, 16586,     0,     0,     0,   138,
-     0, 17504,     0,     0,     0,     0,   113,     0,  1344,     0,
+     0,     0,     0,    91,     0, 13899,     0,     0,     0,   138,
+     0, 17855,     0,     0,     0,     0,   113,     0,  1344,     0,
   4545,     0,     0,     0,     0,   499,     0,  9821,     0,   959,
- 17644,     0,   113,     0,     0,     0,     0,   110,     0,     0,
+ 17995,     0,   113,     0,     0,     0,     0,   110,     0,     0,
      0,     0,     0,     0,  2595,     0,   113,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    776,     0,     0,     0,     0,     0,    26,    26,   776,   776,
@@ -644,28 +646,28 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
      0,     0,     0,     0,     0,     0,     0,     0,   119,     0,
      0,     0,     0,     0,     0,   538,     0,   179,     0,     0,
      0,   179,   179,     0,     0,   190,     0,     0,     0,   563,
-   190,   160,   171,     0,     0, 18194,     0, 18333,     0,     0,
-     0,     0,     0,     0,     0, 11219, 15137, 15234, 15322, 15410,
- 15507, 15780, 15595, 15683, 15868, 15956, 14248, 14365, 11322, 14521,
- 11459, 11595, 13833, 13942, 14638, 14747,  1054, 14864,     0, 18064,
-  5742,  3705,  7278, 20023,     0,  3844,     0,   777,  5881,     0,
-  6254,  4729,     0,     0, 15020,     0,     0,  7640,     0, 11025,
- 16375,     0,     0,     0, 14139,     0,     0, 11977,     0,     0,
+   190,   160,   171,     0,     0, 18545,     0, 18684,     0,     0,
+     0,     0,     0,     0,     0, 11459, 15432, 15549, 15658, 15745,
+ 15848, 16125, 15935, 16022, 16212, 16299, 14623, 14726, 11595, 14844,
+ 11704, 11821, 14198, 14317, 14966, 15088,  1054, 15206,     0, 18415,
+  5742,  3705,  7278, 20374,     0,  3844,     0,   777,  5881,     0,
+  6254,  4729,     0,     0, 15309,     0,     0,  7640,     0, 11025,
+ 16692,     0,     0,     0, 14504,     0,     0, 17006,     0,     0,
      0,     0,     0,   776,     0,   606,     0,     0,     0,     0,
- 14089,     0,     0,     0,     0,     0,     0,     0,  1344, 17224,
- 17364,     0,     0,   777,  9515,     0,   776,   202,  1344,   167,
+ 17020,     0,     0,     0,     0,     0,     0,     0,  1344, 17575,
+ 17715,     0,     0,   777,  9515,     0,   776,   202,  1344,   167,
      0,     0,    99,   480,     0,   857,     0,  2681,  4217,   777,
   2820,  3193,   857,     0,     0,     0,     0,     0,     0,     0,
-  2968,   820,   777,  3480,  3992,     0,     0,     0,     0, 16461,
- 16498,     0,     0,     0,     0,    58,   103,     0,     0,     0,
-   776,     0,     0, 11704,     0,    47,   246,     0,   776,   759,
+  2968,   820,   777,  3480,  3992,     0,     0,     0,     0, 16731,
+ 16828,     0,     0,     0,     0,    58,   103,     0,     0,     0,
+   776,     0,     0, 11977,     0,    47,   246,     0,   776,   759,
      0,  1356,   835,   777,  1570,  1804,   622,     0,     0,     0,
      0,     0,     0,     0,     0,   218,     0,   227,     0,   776,
     59,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,    36,     0,   132,     0,     0,    47,     0,     0,
-  1344,     0,     0,     0, 16648, 11821,     0,     0,     0,     0,
- 16689,     0,     0,  9635,  1115,     0,     0,     0,   113,     0,
+  1344,     0,     0,     0, 16866, 12127,     0,     0,     0,     0,
+ 16931,     0,     0,  9635,  1115,     0,     0,     0,   113,     0,
      0,  1282,     0,     0,   625,     0,     0,  1344,     0,     0,
      0,     0,     0,   776,     0,     0,     0,     0,     0,   345,
    579,     0,   287,   857,     0,     0,     0,     0,     0,     0,
@@ -677,7 +679,7 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
      0,     0,   190,     0,     0,     0,    43,    36,    43,     0,
      0,    78,    43,     0,     0,     0,    78,    67,   100,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,     0, 16045,  6393,
+     0,     0,     0,     0,     0,     0,     0,     0, 16390,  6393,
   7417,   777,  6766,  6905,     0, 10487,   664,     0,     0,     0,
      0,     0,     0,     0,  4545,     0,     0,     0,     0,   132,
      0,     0,     0,     0,     0,     0,     0,   857,     0,     0,
@@ -685,7 +687,7 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,    87,     0,     0,     0,
      0,     0,     0,     0,  1281,  1844,     0,   157,     0,     0,
- 16134, 16196,     0, 12032, 13669,     0,  1344,  1092,  1106,  1269,
+ 16452, 16539,     0, 12283, 16970,     0,  1344,  1092,  1106,  1269,
   1863,  2045,  2072,  3061,  5559,  3573,  4085,  6071,  4597,     0,
      0,  5610,     0,  1344,     0,   959,     0,     0,     0,     0,
      0,   132,     0,     0,   243,     0,   258,     0,  -163,     0,
@@ -1012,6 +1014,8 @@ public RipperParser(ThreadContext context, IRubyObject ripper, LexerSource sourc
     "arg : backref tOP_ASGN arg_rhs",
     "arg : arg tDOT2 arg",
     "arg : arg tDOT3 arg",
+    "arg : arg tDOT2",
+    "arg : arg tDOT3",
     "arg : arg tPLUS arg",
     "arg : arg tMINUS arg",
     "arg : arg tSTAR2 arg",
@@ -1625,7 +1629,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     }
   }
 
-static RipperParserState[] states = new RipperParserState[649];
+static RipperParserState[] states = new RipperParserState[651];
 static {
 states[1] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
@@ -2570,41 +2574,53 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
 };
 states[233] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("+"), ((IRubyObject)yyVals[0+yyTop]));
+                    yyVal = p.dispatch("on_dot2", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
 states[234] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("-"), ((IRubyObject)yyVals[0+yyTop]));
+                    yyVal = p.dispatch("on_dot3", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
 states[235] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("*"), ((IRubyObject)yyVals[0+yyTop]));
+                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("+"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
 states[236] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("/"), ((IRubyObject)yyVals[0+yyTop]));
+                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("-"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
 states[237] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("%"), ((IRubyObject)yyVals[0+yyTop]));
+                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("*"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
 states[238] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("**"), ((IRubyObject)yyVals[0+yyTop]));
+                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("/"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
 states[239] = new RipperParserState() {
+  @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
+                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("%"), ((IRubyObject)yyVals[0+yyTop]));
+    return yyVal;
+  }
+};
+states[240] = new RipperParserState() {
+  @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
+                    yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("**"), ((IRubyObject)yyVals[0+yyTop]));
+    return yyVal;
+  }
+};
+states[241] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unary", 
                                     p.intern("-@"), 
@@ -2612,183 +2628,183 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[240] = new RipperParserState() {
+states[242] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unary", p.intern("+@"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[241] = new RipperParserState() {
+states[243] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unary", p.intern("-@"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[242] = new RipperParserState() {
+states[244] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("|"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[243] = new RipperParserState() {
+states[245] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("^"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[244] = new RipperParserState() {
+states[246] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("&"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[245] = new RipperParserState() {
+states[247] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("<=>"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[246] = new RipperParserState() {
+states[248] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[247] = new RipperParserState() {
+states[249] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("=="), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[248] = new RipperParserState() {
+states[250] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("==="), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[249] = new RipperParserState() {
+states[251] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("!="), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[250] = new RipperParserState() {
+states[252] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("=~"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[251] = new RipperParserState() {
+states[253] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("!~"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[252] = new RipperParserState() {
+states[254] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unary", p.intern("!"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[253] = new RipperParserState() {
+states[255] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unary", p.intern("~"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[254] = new RipperParserState() {
+states[256] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("<<"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[255] = new RipperParserState() {
+states[257] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern(">>"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[256] = new RipperParserState() {
+states[258] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("&&"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[257] = new RipperParserState() {
+states[259] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern("||"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[258] = new RipperParserState() {
+states[260] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_defined", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[259] = new RipperParserState() {
+states[261] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_ifop", ((IRubyObject)yyVals[-5+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[260] = new RipperParserState() {
+states[262] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[261] = new RipperParserState() {
+states[263] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[262] = new RipperParserState() {
+states[264] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[263] = new RipperParserState() {
+states[265] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[264] = new RipperParserState() {
+states[266] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[265] = new RipperParserState() {
+states[267] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern(">"), ((IRubyObject)yyVals[0+yyTop]));
 
     return yyVal;
   }
 };
-states[266] = new RipperParserState() {
+states[268] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      p.warning("comparison '" + ((IRubyObject)yyVals[-1+yyTop]) + "' after comparison");
                      yyVal = p.dispatch("on_binary", ((IRubyObject)yyVals[-2+yyTop]), p.intern(">"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[267] = new RipperParserState() {
+states[269] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[269] = new RipperParserState() {
+states[271] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[270] = new RipperParserState() {
+states[272] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add", 
                                     ((IRubyObject)yyVals[-3+yyTop]),
@@ -2796,7 +2812,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[271] = new RipperParserState() {
+states[273] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add", 
                                     p.dispatch("on_args_new"),
@@ -2804,37 +2820,37 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[272] = new RipperParserState() {
+states[274] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[273] = new RipperParserState() {
+states[275] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_rescue_mod", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[274] = new RipperParserState() {
+states[276] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_arg_paren", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[279] = new RipperParserState() {
+states[281] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[280] = new RipperParserState() {
+states[282] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add", ((IRubyObject)yyVals[-3+yyTop]), p.dispatch("on_bare_assoc_hash", ((RubyArray)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[281] = new RipperParserState() {
+states[283] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add", 
                                     p.dispatch("on_args_new"),
@@ -2842,19 +2858,19 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[282] = new RipperParserState() {
+states[284] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add", p.dispatch("on_args_new"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[283] = new RipperParserState() {
+states[285] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.arg_add_optblock(((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[284] = new RipperParserState() {
+states[286] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal =  p.arg_add_optblock(p.dispatch("on_args_add", 
                                                         p.dispatch("on_args_new"),
@@ -2863,7 +2879,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[285] = new RipperParserState() {
+states[287] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.arg_add_optblock(p.dispatch("on_args_add", 
                                             ((IRubyObject)yyVals[-3+yyTop]),
@@ -2872,75 +2888,75 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[286] = new RipperParserState() {
+states[288] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add_block", p.dispatch("on_args_new"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[287] = new RipperParserState() {
+states[289] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = Long.valueOf(p.getCmdArgumentState().getStack());
                     p.getCmdArgumentState().begin();
     return yyVal;
   }
 };
-states[288] = new RipperParserState() {
+states[290] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.getCmdArgumentState().reset(((Long)yyVals[-1+yyTop]).longValue());
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[289] = new RipperParserState() {
+states[291] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[290] = new RipperParserState() {
+states[292] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[292] = new RipperParserState() {
+states[294] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add", p.dispatch("on_args_new"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[293] = new RipperParserState() {
+states[295] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add_star", p.dispatch("on_args_new"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[294] = new RipperParserState() {
+states[296] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[295] = new RipperParserState() {
+states[297] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_args_add_star", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[296] = new RipperParserState() {
+states[298] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[297] = new RipperParserState() {
+states[299] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[298] = new RipperParserState() {
+states[300] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mrhs_add", 
                                     p.dispatch("on_mrhs_new_from_args", ((IRubyObject)yyVals[-2+yyTop])), 
@@ -2948,7 +2964,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[299] = new RipperParserState() {
+states[301] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mrhs_add_star",
                                     p.dispatch("on_mrhs_new_from_args", ((IRubyObject)yyVals[-3+yyTop])),
@@ -2956,70 +2972,70 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[300] = new RipperParserState() {
+states[302] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mrhs_add_star", p.dispatch("on_mrhs_new"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[307] = new RipperParserState() {
+states[309] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((IRubyObject)yyVals[0+yyTop]); /* FIXME: Why complaining without $$ = $1;*/
     return yyVal;
   }
 };
-states[308] = new RipperParserState() {
+states[310] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((IRubyObject)yyVals[0+yyTop]); /* FIXME: Why complaining without $$ = $1;*/
     return yyVal;
   }
 };
-states[311] = new RipperParserState() {
+states[313] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_method_add_arg", p.dispatch("on_fcall", ((IRubyObject)yyVals[0+yyTop])), p.dispatch("on_args_new"));
     return yyVal;
   }
 };
-states[312] = new RipperParserState() {
+states[314] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.getCmdArgumentState().getStack();
                     p.getCmdArgumentState().reset();
     return yyVal;
   }
 };
-states[313] = new RipperParserState() {
+states[315] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.getCmdArgumentState().reset(((Long)yyVals[-2+yyTop]).longValue());
                     yyVal = p.dispatch("on_begin", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[314] = new RipperParserState() {
+states[316] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setState(EXPR_ENDARG);
     return yyVal;
   }
 };
-states[315] = new RipperParserState() {
+states[317] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_paren", null);
     return yyVal;
   }
 };
-states[316] = new RipperParserState() {
+states[318] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.getCmdArgumentState().getStack();
                     p.getCmdArgumentState().reset();
     return yyVal;
   }
 };
-states[317] = new RipperParserState() {
+states[319] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setState(EXPR_ENDARG); 
     return yyVal;
   }
 };
-states[318] = new RipperParserState() {
+states[320] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.getCmdArgumentState().reset(((Long)yyVals[-3+yyTop]).longValue());
                     p.warning("(...) interpreted as grouped expression");
@@ -3027,79 +3043,79 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[319] = new RipperParserState() {
+states[321] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_paren", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[320] = new RipperParserState() {
+states[322] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_const_path_ref", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[321] = new RipperParserState() {
+states[323] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_top_const_ref", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[322] = new RipperParserState() {
+states[324] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_array", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[323] = new RipperParserState() {
+states[325] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_hash", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[324] = new RipperParserState() {
+states[326] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_return0");
     return yyVal;
   }
 };
-states[325] = new RipperParserState() {
+states[327] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_yield", p.dispatch("on_paren", ((IRubyObject)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[326] = new RipperParserState() {
+states[328] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_yield", p.dispatch("on_paren", p.dispatch("on_args_new")));
     return yyVal;
   }
 };
-states[327] = new RipperParserState() {
+states[329] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_yield0");
     return yyVal;
   }
 };
-states[328] = new RipperParserState() {
+states[330] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_defined", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[329] = new RipperParserState() {
+states[331] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unary", p.intern("not"), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[330] = new RipperParserState() {
+states[332] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unary", p.intern("not"), null);
     return yyVal;
   }
 };
-states[331] = new RipperParserState() {
+states[333] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_method_add_block",
                                     p.dispatch("on_method_add_arg", 
@@ -3109,97 +3125,97 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[333] = new RipperParserState() {
+states[335] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_method_add_block", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[334] = new RipperParserState() {
+states[336] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[335] = new RipperParserState() {
+states[337] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_if", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[336] = new RipperParserState() {
+states[338] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unless", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[337] = new RipperParserState() {
+states[339] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.getConditionState().begin();
     return yyVal;
   }
 };
-states[338] = new RipperParserState() {
+states[340] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.getConditionState().end();
     return yyVal;
   }
 };
-states[339] = new RipperParserState() {
+states[341] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_while", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[340] = new RipperParserState() {
+states[342] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                   p.getConditionState().begin();
     return yyVal;
   }
 };
-states[341] = new RipperParserState() {
+states[343] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                   p.getConditionState().end();
     return yyVal;
   }
 };
-states[342] = new RipperParserState() {
+states[344] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_until", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[343] = new RipperParserState() {
+states[345] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_case", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[344] = new RipperParserState() {
+states[346] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_case", null, ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[345] = new RipperParserState() {
+states[347] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.getConditionState().begin();
     return yyVal;
   }
 };
-states[346] = new RipperParserState() {
+states[348] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.getConditionState().end();
     return yyVal;
   }
 };
-states[347] = new RipperParserState() {
+states[349] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_for", ((IRubyObject)yyVals[-7+yyTop]), ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[348] = new RipperParserState() {
+states[350] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     if (p.isInDef()) {
                         p.yyerror("class definition in method body");
@@ -3210,7 +3226,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[349] = new RipperParserState() {
+states[351] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_class", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
                     p.popCurrentScope();
@@ -3218,7 +3234,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[350] = new RipperParserState() {
+states[352] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new Integer((p.isInClass() ? 2 : 0) & (p.isInDef() ? 1 : 0));
                     p.setInDef(false);
@@ -3227,7 +3243,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[351] = new RipperParserState() {
+states[353] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_sclass", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
 
@@ -3237,7 +3253,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[352] = new RipperParserState() {
+states[354] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     if (p.isInDef()) { 
                         p.yyerror("module definition in method body");
@@ -3248,14 +3264,14 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[353] = new RipperParserState() {
+states[355] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_module", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
                     p.popCurrentScope();
     return yyVal;
   }
 };
-states[354] = new RipperParserState() {
+states[356] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setInDef(true);
                     p.pushLocalScope();
@@ -3264,7 +3280,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[355] = new RipperParserState() {
+states[357] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_def", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
 
@@ -3274,7 +3290,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[356] = new RipperParserState() {
+states[358] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setState(EXPR_FNAME);
                     yyVal = p.isInDef();
@@ -3282,7 +3298,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[357] = new RipperParserState() {
+states[359] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.pushLocalScope();
                     p.setState(EXPR_ENDFN|EXPR_LABEL); /* force for args */
@@ -3291,7 +3307,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[358] = new RipperParserState() {
+states[360] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_defs", ((IRubyObject)yyVals[-7+yyTop]), ((IRubyObject)yyVals[-6+yyTop]), ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
 
@@ -3301,108 +3317,108 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[359] = new RipperParserState() {
+states[361] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_break", p.dispatch("on_args_new"));
     return yyVal;
   }
 };
-states[360] = new RipperParserState() {
+states[362] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_next", p.dispatch("on_args_new"));
     return yyVal;
   }
 };
-states[361] = new RipperParserState() {
+states[363] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_redo");
     return yyVal;
   }
 };
-states[362] = new RipperParserState() {
+states[364] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_retry");
     return yyVal;
   }
 };
-states[363] = new RipperParserState() {
+states[365] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[364] = new RipperParserState() {
+states[366] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[366] = new RipperParserState() {
+states[368] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[367] = new RipperParserState() {
+states[369] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[370] = new RipperParserState() {
+states[372] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_elsif", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[372] = new RipperParserState() {
+states[374] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_else", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[374] = new RipperParserState() {
+states[376] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
     return yyVal;
   }
 };
-states[375] = new RipperParserState() {
+states[377] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[376] = new RipperParserState() {
+states[378] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_paren", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[377] = new RipperParserState() {
+states[379] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add", p.dispatch("on_mlhs_new"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[378] = new RipperParserState() {
+states[380] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[379] = new RipperParserState() {
+states[381] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[380] = new RipperParserState() {
+states[382] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add_star", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[381] = new RipperParserState() {
+states[383] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add_post", 
                                     p.dispatch("on_mlhs_add_star", ((IRubyObject)yyVals[-5+yyTop]), ((IRubyObject)yyVals[-2+yyTop])),
@@ -3410,13 +3426,13 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[382] = new RipperParserState() {
+states[384] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add_star", ((IRubyObject)yyVals[-2+yyTop]), null);
     return yyVal;
   }
 };
-states[383] = new RipperParserState() {
+states[385] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add_post", 
                                     p.dispatch("on_mlhs_add_star", ((IRubyObject)yyVals[-4+yyTop]), null),
@@ -3424,7 +3440,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[384] = new RipperParserState() {
+states[386] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add_star",
                                     p.dispatch("on_mlhs_new"),
@@ -3432,7 +3448,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[385] = new RipperParserState() {
+states[387] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add_post", 
                                     p.dispatch("on_mlhs_add_star",
@@ -3442,7 +3458,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[386] = new RipperParserState() {
+states[388] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add_star",
                                     p.dispatch("on_mlhs_new"),
@@ -3450,7 +3466,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[387] = new RipperParserState() {
+states[389] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_add_post", 
                                     p.dispatch("on_mlhs_add_star",
@@ -3460,140 +3476,140 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[388] = new RipperParserState() {
+states[390] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(((RubyArray)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[389] = new RipperParserState() {
+states[391] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(((RubyArray)yyVals[-1+yyTop]), null, ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[390] = new RipperParserState() {
+states[392] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(null, ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[391] = new RipperParserState() {
+states[393] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(null, null, ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[392] = new RipperParserState() {
+states[394] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ArgsTailHolder)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[393] = new RipperParserState() {
+states[395] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(null, null, null);
     return yyVal;
   }
 };
-states[394] = new RipperParserState() {
+states[396] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-5+yyTop]), ((RubyArray)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[395] = new RipperParserState() {
+states[397] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-7+yyTop]), ((RubyArray)yyVals[-5+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[396] = new RipperParserState() {
+states[398] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[397] = new RipperParserState() {
+states[399] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-5+yyTop]), ((RubyArray)yyVals[-3+yyTop]), null, ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[398] = new RipperParserState() {
+states[400] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-3+yyTop]), null, ((IRubyObject)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[399] = new RipperParserState() {
+states[401] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_excessed_comma", 
                                     p.new_args(((RubyArray)yyVals[-1+yyTop]), null, null, null, null));
     return yyVal;
   }
 };
-states[400] = new RipperParserState() {
+states[402] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-5+yyTop]), null, ((IRubyObject)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[401] = new RipperParserState() {
+states[403] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-1+yyTop]), null, null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[402] = new RipperParserState() {
+states[404] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, ((RubyArray)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[403] = new RipperParserState() {
+states[405] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, ((RubyArray)yyVals[-5+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[404] = new RipperParserState() {
+states[406] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, ((RubyArray)yyVals[-1+yyTop]), null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[405] = new RipperParserState() {
+states[407] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, ((RubyArray)yyVals[-3+yyTop]), null, ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[406] = new RipperParserState() {
+states[408] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, null, ((IRubyObject)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));     
     return yyVal;
   }
 };
-states[407] = new RipperParserState() {
+states[409] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, null, ((IRubyObject)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[408] = new RipperParserState() {
+states[410] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, null, null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[410] = new RipperParserState() {
+states[412] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCommandStart(true);
     return yyVal;
   }
 };
-states[411] = new RipperParserState() {
+states[413] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCurrentArg(null);  
                     yyVal = p.dispatch("on_block_var", 
@@ -3602,7 +3618,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[412] = new RipperParserState() {
+states[414] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_block_var", 
                                     p.new_args(null, null, null, null, null), 
@@ -3610,51 +3626,51 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[413] = new RipperParserState() {
+states[415] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCurrentArg(null);
                     yyVal = p.dispatch("on_block_var", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[414] = new RipperParserState() {
+states[416] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.getContext().getRuntime().getFalse();
     return yyVal;
   }
 };
-states[415] = new RipperParserState() {
+states[417] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((RubyArray)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[416] = new RipperParserState() {
+states[418] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_array(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[417] = new RipperParserState() {
+states[419] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((RubyArray)yyVals[-2+yyTop]).append(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[418] = new RipperParserState() {
+states[420] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_bv(((IRubyObject)yyVals[0+yyTop]));
 
     return yyVal;
   }
 };
-states[419] = new RipperParserState() {
+states[421] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[420] = new RipperParserState() {
+states[422] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.pushBlockScope();
                     yyVal = p.getLeftParenBegin();
@@ -3662,14 +3678,14 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[421] = new RipperParserState() {
+states[423] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = Long.valueOf(p.getCmdArgumentState().getStack());
                     p.getCmdArgumentState().reset();
     return yyVal;
   }
 };
-states[422] = new RipperParserState() {
+states[424] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.getCmdArgumentState().reset(((Long)yyVals[-1+yyTop]).longValue());
                     p.getCmdArgumentState().restart();
@@ -3679,121 +3695,121 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[423] = new RipperParserState() {
+states[425] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_paren", ((IRubyObject)yyVals[-2+yyTop]));
     return yyVal;
   }
 };
-states[424] = new RipperParserState() {
+states[426] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[425] = new RipperParserState() {
+states[427] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[426] = new RipperParserState() {
+states[428] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[427] = new RipperParserState() {
+states[429] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[-1+yyTop]);  
     return yyVal;
   }
 };
-states[428] = new RipperParserState() {
+states[430] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_method_add_block", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[429] = new RipperParserState() {
+states[431] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.method_optarg(p.dispatch("on_call", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop])), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[430] = new RipperParserState() {
+states[432] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.method_add_block(p.dispatch("on_command_call", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop])), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[431] = new RipperParserState() {
+states[433] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.method_add_block(p.dispatch("on_command_call", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop])), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[432] = new RipperParserState() {
+states[434] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_method_add_arg", p.dispatch("on_fcall", ((IRubyObject)yyVals[-1+yyTop])), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[433] = new RipperParserState() {
+states[435] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.method_optarg(p.dispatch("on_call", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop])), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[434] = new RipperParserState() {
+states[436] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.method_optarg(p.dispatch("on_call", ((IRubyObject)yyVals[-3+yyTop]), p.intern("::"), ((IRubyObject)yyVals[-1+yyTop])), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[435] = new RipperParserState() {
+states[437] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_call", ((IRubyObject)yyVals[-2+yyTop]), p.intern("::"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[436] = new RipperParserState() {
+states[438] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.method_optarg(p.dispatch("on_call", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), p.intern("call")), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[437] = new RipperParserState() {
+states[439] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.method_optarg(p.dispatch("on_call", ((IRubyObject)yyVals[-2+yyTop]), p.intern("::"), p.intern("call")), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[438] = new RipperParserState() {
+states[440] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_super", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[439] = new RipperParserState() {
+states[441] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_zsuper");
     return yyVal;
   }
 };
-states[440] = new RipperParserState() {
+states[442] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_aref", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[441] = new RipperParserState() {
+states[443] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[442] = new RipperParserState() {
+states[444] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.pushBlockScope();
                     yyVal = Long.valueOf(p.getCmdArgumentState().getStack());
@@ -3801,7 +3817,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[443] = new RipperParserState() {
+states[445] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_do_block", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
                     p.getCmdArgumentState().reset(((Long)yyVals[-3+yyTop]).longValue());
@@ -3809,7 +3825,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[444] = new RipperParserState() {
+states[446] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.pushBlockScope();
                     yyVal = Long.valueOf(p.getCmdArgumentState().getStack()) >> 1;
@@ -3817,7 +3833,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[445] = new RipperParserState() {
+states[447] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_brace_block", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
                     p.getCmdArgumentState().reset(((Long)yyVals[-2+yyTop]).longValue());
@@ -3825,7 +3841,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[446] = new RipperParserState() {
+states[448] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.pushBlockScope();
                     yyVal = Long.valueOf(p.getCmdArgumentState().getStack());
@@ -3833,7 +3849,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[447] = new RipperParserState() {
+states[449] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_do_block", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
                     p.getCmdArgumentState().reset(((Long)yyVals[-2+yyTop]).longValue());
@@ -3841,80 +3857,80 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[448] = new RipperParserState() {
+states[450] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_when", ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
 
     return yyVal;
   }
 };
-states[451] = new RipperParserState() {
+states[453] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_rescue", ((IRubyObject)yyVals[-4+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[452] = new RipperParserState() {
+states[454] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[453] = new RipperParserState() {
+states[455] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_array(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[454] = new RipperParserState() {
+states[456] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[456] = new RipperParserState() {
+states[458] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[458] = new RipperParserState() {
+states[460] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_ensure", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[461] = new RipperParserState() {
+states[463] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_symbol_literal", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[463] = new RipperParserState() {
+states[465] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[464] = new RipperParserState() {
+states[466] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[465] = new RipperParserState() {
+states[467] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[466] = new RipperParserState() {
+states[468] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_string_concat", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[467] = new RipperParserState() {
+states[469] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.heredoc_dedent(((IRubyObject)yyVals[-1+yyTop]));
                     p.setHeredocIndent(0);
@@ -3922,7 +3938,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[468] = new RipperParserState() {
+states[470] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.heredoc_dedent(((IRubyObject)yyVals[-1+yyTop]));
                     p.setHeredocIndent(0);
@@ -3930,133 +3946,133 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[469] = new RipperParserState() {
+states[471] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_regexp_literal", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[470] = new RipperParserState() {
+states[472] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_array", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[471] = new RipperParserState() {
+states[473] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_words_new");
     return yyVal;
   }
 };
-states[472] = new RipperParserState() {
+states[474] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_words_add", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[473] = new RipperParserState() {
+states[475] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_word_add", p.dispatch("on_word_new"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[474] = new RipperParserState() {
+states[476] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_word_add", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[475] = new RipperParserState() {
+states[477] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_array", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[476] = new RipperParserState() {
+states[478] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_symbols_new");
     return yyVal;
   }
 };
-states[477] = new RipperParserState() {
+states[479] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_symbols_add", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[478] = new RipperParserState() {
+states[480] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_array", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[479] = new RipperParserState() {
+states[481] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_array", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[480] = new RipperParserState() {
+states[482] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_qwords_new");
     return yyVal;
   }
 };
-states[481] = new RipperParserState() {
+states[483] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_qwords_add", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[482] = new RipperParserState() {
+states[484] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_qsymbols_new");
     return yyVal;
   }
 };
-states[483] = new RipperParserState() {
+states[485] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_qsymbols_add", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[484] = new RipperParserState() {
+states[486] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_string_content");
     return yyVal;
   }
 };
-states[485] = new RipperParserState() {
+states[487] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_string_add", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[486] = new RipperParserState() {
+states[488] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_xstring_new");
     return yyVal;
   }
 };
-states[487] = new RipperParserState() {
+states[489] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_xstring_add", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[488] = new RipperParserState() {
+states[490] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_regexp_new");
     return yyVal;
   }
 };
-states[489] = new RipperParserState() {
+states[491] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_regexp_add", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[491] = new RipperParserState() {
+states[493] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.getStrTerm();
                     p.setStrTerm(null);
@@ -4064,14 +4080,14 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[492] = new RipperParserState() {
+states[494] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setStrTerm(((StrTerm)yyVals[-1+yyTop]));
                     yyVal = p.dispatch("on_string_dvar", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[493] = new RipperParserState() {
+states[495] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.getStrTerm();
                    p.setStrTerm(null);
@@ -4079,35 +4095,35 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[494] = new RipperParserState() {
+states[496] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.getCmdArgumentState().getStack();
                    p.getCmdArgumentState().reset();
     return yyVal;
   }
 };
-states[495] = new RipperParserState() {
+states[497] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.getState();
                    p.setState(EXPR_BEG);
     return yyVal;
   }
 };
-states[496] = new RipperParserState() {
+states[498] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.getBraceNest();
                    p.setBraceNest(0);
     return yyVal;
   }
 };
-states[497] = new RipperParserState() {
+states[499] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.getHeredocIndent();
                    p.setHeredocIndent(0);
     return yyVal;
   }
 };
-states[498] = new RipperParserState() {
+states[500] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    p.getConditionState().restart();
                    p.setStrTerm(((StrTerm)yyVals[-6+yyTop]));
@@ -4119,75 +4135,75 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[499] = new RipperParserState() {
+states[501] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[500] = new RipperParserState() {
+states[502] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[501] = new RipperParserState() {
+states[503] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[503] = new RipperParserState() {
+states[505] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      p.setState(EXPR_END|EXPR_ENDARG);
                      yyVal = p.dispatch("on_symbol", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[508] = new RipperParserState() {
+states[510] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      p.setState(EXPR_END|EXPR_ENDARG);
                      yyVal = p.dispatch("on_dyna_symbol", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[509] = new RipperParserState() {
+states[511] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[510] = new RipperParserState() {
+states[512] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_unary", p.intern("-@"), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[511] = new RipperParserState() {
+states[513] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[512] = new RipperParserState() {
+states[514] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[513] = new RipperParserState() {
+states[515] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[514] = new RipperParserState() {
+states[516] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[515] = new RipperParserState() {
+states[517] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     if (p.is_id_var()) {
                         yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
@@ -4197,18 +4213,6 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[516] = new RipperParserState() {
-  @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
-    return yyVal;
-  }
-};
-states[517] = new RipperParserState() {
-  @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
-    return yyVal;
-  }
-};
 states[518] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
@@ -4265,25 +4269,25 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
 };
 states[527] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_var_field", p.assignableIdentifier(((IRubyObject)yyVals[0+yyTop])));
+                    yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
 states[528] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_var_field", ((IRubyObject)yyVals[0+yyTop]));
+                    yyVal = p.dispatch("on_var_ref", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
 states[529] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.dispatch("on_var_field", ((IRubyObject)yyVals[0+yyTop]));
+                    yyVal = p.dispatch("on_var_field", p.assignableIdentifier(((IRubyObject)yyVals[0+yyTop])));
     return yyVal;
   }
 };
 states[530] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = p.assignableConstant(p.dispatch("on_var_field", ((IRubyObject)yyVals[0+yyTop])));
+                    yyVal = p.dispatch("on_var_field", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
@@ -4295,66 +4299,78 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
 };
 states[532] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    p.yyerror("Can't assign to nil");
+                    yyVal = p.assignableConstant(p.dispatch("on_var_field", ((IRubyObject)yyVals[0+yyTop])));
     return yyVal;
   }
 };
 states[533] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    p.yyerror("Can't change the value of self");
+                    yyVal = p.dispatch("on_var_field", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
 states[534] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    p.yyerror("Can't assign to true");
+                    p.yyerror("Can't assign to nil");
     return yyVal;
   }
 };
 states[535] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    p.yyerror("Can't assign to false");
+                    p.yyerror("Can't change the value of self");
     return yyVal;
   }
 };
 states[536] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    p.yyerror("Can't assign to __FILE__");
+                    p.yyerror("Can't assign to true");
     return yyVal;
   }
 };
 states[537] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
-                    p.yyerror("Can't assign to __LINE__");
+                    p.yyerror("Can't assign to false");
     return yyVal;
   }
 };
 states[538] = new RipperParserState() {
+  @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
+                    p.yyerror("Can't assign to __FILE__");
+    return yyVal;
+  }
+};
+states[539] = new RipperParserState() {
+  @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
+                    p.yyerror("Can't assign to __LINE__");
+    return yyVal;
+  }
+};
+states[540] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.yyerror("Can't assign to __ENCODING__");
     return yyVal;
   }
 };
-states[541] = new RipperParserState() {
+states[543] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    p.setState(EXPR_BEG);
                    p.setCommandStart(true);
     return yyVal;
   }
 };
-states[542] = new RipperParserState() {
+states[544] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[543] = new RipperParserState() {
+states[545] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = null;
     return yyVal;
   }
 };
-states[544] = new RipperParserState() {
+states[546] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setState(EXPR_BEG);
                     p.setCommandStart(true);
@@ -4362,7 +4378,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[545] = new RipperParserState() {
+states[547] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
   /* $$ = lexer.inKwarg;*/
                    /*                   p.inKwarg = true;*/
@@ -4370,7 +4386,7 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[546] = new RipperParserState() {
+states[548] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
   /* p.inKwarg = $<Boolean>1;*/
                     yyVal = ((IRubyObject)yyVals[-1+yyTop]);
@@ -4379,199 +4395,199 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[547] = new RipperParserState() {
+states[549] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(((RubyArray)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[548] = new RipperParserState() {
+states[550] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(((RubyArray)yyVals[-1+yyTop]), null, ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[549] = new RipperParserState() {
+states[551] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(null, ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[550] = new RipperParserState() {
+states[552] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(null, null, ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[551] = new RipperParserState() {
+states[553] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ArgsTailHolder)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[552] = new RipperParserState() {
+states[554] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args_tail(null, null, null);
     return yyVal;
   }
 };
-states[553] = new RipperParserState() {
+states[555] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-5+yyTop]), ((RubyArray)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[554] = new RipperParserState() {
+states[556] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-7+yyTop]), ((RubyArray)yyVals[-5+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[555] = new RipperParserState() {
+states[557] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[556] = new RipperParserState() {
+states[558] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-5+yyTop]), ((RubyArray)yyVals[-3+yyTop]), null, ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[557] = new RipperParserState() {
+states[559] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-3+yyTop]), null, ((IRubyObject)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[558] = new RipperParserState() {
+states[560] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-5+yyTop]), null, ((IRubyObject)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[559] = new RipperParserState() {
+states[561] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(((RubyArray)yyVals[-1+yyTop]), null, null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[560] = new RipperParserState() {
+states[562] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, ((RubyArray)yyVals[-3+yyTop]), ((IRubyObject)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[561] = new RipperParserState() {
+states[563] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, ((RubyArray)yyVals[-5+yyTop]), ((IRubyObject)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[562] = new RipperParserState() {
+states[564] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, ((RubyArray)yyVals[-1+yyTop]), null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[563] = new RipperParserState() {
+states[565] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, ((RubyArray)yyVals[-3+yyTop]), null, ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[564] = new RipperParserState() {
+states[566] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, null, ((IRubyObject)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[565] = new RipperParserState() {
+states[567] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, null, ((IRubyObject)yyVals[-3+yyTop]), ((RubyArray)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[566] = new RipperParserState() {
+states[568] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, null, null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[567] = new RipperParserState() {
+states[569] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_args(null, null, null, null, null);
     return yyVal;
   }
 };
-states[568] = new RipperParserState() {
+states[570] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_param_error", ((IRubyObject)yyVals[0+yyTop]));
                     p.error();
     return yyVal;
   }
 };
-states[569] = new RipperParserState() {
+states[571] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_param_error", ((IRubyObject)yyVals[0+yyTop]));
                     p.error();
     return yyVal;
   }
 };
-states[570] = new RipperParserState() {
+states[572] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_param_error", ((IRubyObject)yyVals[0+yyTop]));
                     p.error();
     return yyVal;
   }
 };
-states[571] = new RipperParserState() {
+states[573] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_param_error", ((IRubyObject)yyVals[0+yyTop]));
                     p.error();
     return yyVal;
   }
 };
-states[573] = new RipperParserState() {
+states[575] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.arg_var(p.formal_argument(((IRubyObject)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[574] = new RipperParserState() {
+states[576] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCurrentArg(((IRubyObject)yyVals[0+yyTop]));
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[575] = new RipperParserState() {
+states[577] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCurrentArg(null);
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[576] = new RipperParserState() {
+states[578] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_mlhs_paren", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[577] = new RipperParserState() {
+states[579] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_array(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[578] = new RipperParserState() {
+states[580] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((RubyArray)yyVals[-2+yyTop]).append(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[579] = new RipperParserState() {
+states[581] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.arg_var(p.formal_argument(((IRubyObject)yyVals[0+yyTop])));
                     p.setCurrentArg(((IRubyObject)yyVals[0+yyTop]));
@@ -4579,82 +4595,82 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[580] = new RipperParserState() {
+states[582] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCurrentArg(null);
                     yyVal = p.keyword_arg(((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[581] = new RipperParserState() {
+states[583] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCurrentArg(null);
                     yyVal = p.keyword_arg(((IRubyObject)yyVals[0+yyTop]), p.getContext().getRuntime().getFalse());
     return yyVal;
   }
 };
-states[582] = new RipperParserState() {
+states[584] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.keyword_arg(((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[583] = new RipperParserState() {
+states[585] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.keyword_arg(((IRubyObject)yyVals[0+yyTop]), p.getContext().getRuntime().getFalse());
     return yyVal;
   }
 };
-states[584] = new RipperParserState() {
+states[586] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_array(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[585] = new RipperParserState() {
+states[587] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((RubyArray)yyVals[-2+yyTop]).append(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[586] = new RipperParserState() {
+states[588] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_array(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[587] = new RipperParserState() {
+states[589] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((RubyArray)yyVals[-2+yyTop]).append(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[588] = new RipperParserState() {
+states[590] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[589] = new RipperParserState() {
+states[591] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[590] = new RipperParserState() {
+states[592] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.shadowing_lvar(((IRubyObject)yyVals[0+yyTop]));
                     yyVal = p.dispatch("on_kwrest_param", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[591] = new RipperParserState() {
+states[593] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_kwrest_param", null);
     return yyVal;
   }
 };
-states[592] = new RipperParserState() {
+states[594] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCurrentArg(null);
                     yyVal = p.new_assoc(((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
@@ -4662,190 +4678,190 @@ public Object yyparse (RipperLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[593] = new RipperParserState() {
+states[595] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setCurrentArg(null);
                     yyVal = p.new_assoc(((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[594] = new RipperParserState() {
+states[596] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_array(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[595] = new RipperParserState() {
+states[597] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((RubyArray)yyVals[-2+yyTop]).append(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[596] = new RipperParserState() {
+states[598] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_array(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[597] = new RipperParserState() {
+states[599] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((RubyArray)yyVals[-2+yyTop]).append(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[600] = new RipperParserState() {
+states[602] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.arg_var(p.shadowing_lvar(((IRubyObject)yyVals[0+yyTop])));
                     yyVal = p.dispatch("on_rest_param", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[601] = new RipperParserState() {
+states[603] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_rest_param", null);
     return yyVal;
   }
 };
-states[604] = new RipperParserState() {
+states[606] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.arg_var(p.shadowing_lvar(((IRubyObject)yyVals[0+yyTop])));
                     yyVal = p.dispatch("on_blockarg", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[605] = new RipperParserState() {
+states[607] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[606] = new RipperParserState() {
+states[608] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[607] = new RipperParserState() {
+states[609] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[608] = new RipperParserState() {
+states[610] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     p.setState(EXPR_BEG);
     return yyVal;
   }
 };
-states[609] = new RipperParserState() {
+states[611] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_paren", ((IRubyObject)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[611] = new RipperParserState() {
+states[613] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_assoclist_from_args", ((RubyArray)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[612] = new RipperParserState() {
+states[614] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.new_array(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[613] = new RipperParserState() {
+states[615] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((RubyArray)yyVals[-2+yyTop]).append(((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[614] = new RipperParserState() {
+states[616] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_assoc_new", ((IRubyObject)yyVals[-2+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[615] = new RipperParserState() {
+states[617] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_assoc_new", ((IRubyObject)yyVals[-1+yyTop]), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[616] = new RipperParserState() {
+states[618] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_assoc_new", p.dispatch("on_dyna_symbol", ((IRubyObject)yyVals[-2+yyTop])), ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[617] = new RipperParserState() {
+states[619] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.dispatch("on_assoc_splat", ((IRubyObject)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[628] = new RipperParserState() {
+states[630] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[629] = new RipperParserState() {
+states[631] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[630] = new RipperParserState() {
+states[632] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.intern(".");
     return yyVal;
   }
 };
-states[631] = new RipperParserState() {
+states[633] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = p.intern("&.");
     return yyVal;
   }
 };
-states[632] = new RipperParserState() {
+states[634] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[633] = new RipperParserState() {
+states[635] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = p.intern("::");
     return yyVal;
   }
 };
-states[638] = new RipperParserState() {
+states[640] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[639] = new RipperParserState() {
+states[641] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IRubyObject)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[647] = new RipperParserState() {
+states[649] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                       yyVal = null;
     return yyVal;
   }
 };
-states[648] = new RipperParserState() {
+states[650] = new RipperParserState() {
   @Override public Object execute(RipperParser p, Object yyVal, Object[] yyVals, int yyTop) {
                   yyVal = null;
     return yyVal;
   }
 };
 }
-					// line 2192 "RipperParser.y"
+					// line 2198 "RipperParser.y"
 }
-					// line 9749 "-"
+					// line 9835 "-"
diff --git a/core/src/main/java/org/jruby/ext/ripper/RipperParser.y b/core/src/main/java/org/jruby/ext/ripper/RipperParser.y
index 8fc9af2b527..eb2083e3c76 100644
--- a/core/src/main/java/org/jruby/ext/ripper/RipperParser.y
+++ b/core/src/main/java/org/jruby/ext/ripper/RipperParser.y
@@ -813,6 +813,12 @@ arg             : lhs '=' arg_rhs {
                 | arg tDOT3 arg {
                     $$ = p.dispatch("on_dot3", $1, $3);
                 }
+                | arg tDOT2 {
+                    $$ = p.dispatch("on_dot2", $1);
+                }
+                | arg tDOT3 {
+                    $$ = p.dispatch("on_dot3", $1);
+                }
                 | arg tPLUS arg {
                     $$ = p.dispatch("on_binary", $1, p.intern("+"), $3);
                 }
diff --git a/core/src/main/java/org/jruby/ext/ripper/YyTables.java b/core/src/main/java/org/jruby/ext/ripper/YyTables.java
index 94dbf0f36ee..f6871d7d248 100644
--- a/core/src/main/java/org/jruby/ext/ripper/YyTables.java
+++ b/core/src/main/java/org/jruby/ext/ripper/YyTables.java
@@ -56,1987 +56,1996 @@
           309,  378,  312,   88,   88,  135,  135,  429,  219,  693, 
           254,  254,  254,  108,  232,  280,  254,  254,  358,  489, 
           254,  311,  419,  218,  218,  422,  356,  721,  296,  296, 
-          264,  467,  296,  647,  232,  675,  648,  258,  261,  292, 
+          264,  467,  296,  649,  232,  675,  650,  258,  261,  292, 
           292,  712,  234,  292,  218,  764,   88,  699,  711,    8, 
-          354,  711,  254,  393,  364,  305,  308,  647,  642,    8, 
-          335,  339,  234,  528,  544,  661,  547,  530,  279,  218, 
-           83,   83,  295,  295,  328,  627,  295,  583,  659,  647, 
-          712,  647,  647,  810,  858,  582,  134,  134,  606,  634, 
-          433,  635,  623,  437,  631,  636,  134,  399,  637,  830, 
-          260,  354,  393,  673,  334,  442,  647,  260,    8,  647, 
-          575,  583,  839,  281,  958,  260,  647,  306,  636,  689, 
-          647,  432,  674,  647,  264,  894,  583,  878,  647,  567, 
-          254,  134,   88,  702,  835, 1046,  623,  606,  631,  376, 
-         1030,  434,  647,  851,  575,  260,  399,  305,  350,  259, 
-          500,  647,  674,  823,  502,  750,  259,  516,  647,  575, 
-          301,  647,  833,  304,  259,  647,  318,  582,  414,  647, 
-          581,  434,  520,  521,   74,  593,  308,  567,  567,  636, 
-          544,  575,  134,  280,  871,  414,  674,  314,  463,  552, 
-          319,  647,  733,  555,  259,  317,  636,  350,  556,  413, 
-          606,  582,  376,  435,  581,   93,   93,  136,  136,  593, 
-          647,  674,  567,  567,  477,  575,  582,  281,  884,  581, 
-          489,  377,  503,  504,  593,   72,  567, 1046,  386,  777, 
-          575,  561,  562,  252,  252,  252,   84,  379,  552,   88, 
-          975, 1030,  384,  369,  847,  387,  740,  382,   93,  606, 
-          511,  438,  355,  385,  872,  809,   75,  638,   53,  638, 
-          532,  780,  653,  304,  638,  814,  254,  254,  380,  712, 
-          383,  582,  525,  958,  813,  563,  815,  468,  711,  711, 
-          264,  740,  642,  567,  377,  381,   76,   84,  536,  742, 
-           87,  746,  472,  473,  743,  853,  854,  647,  855,  370, 
-          642,  525,  254,  355,  254,  254,  524,   73,  254,  519, 
+          354,  711,  254,  395,  364,  305,  308,  649,  642,    8, 
+          335,  339,  234,  528,  544,  661,  547,  530,  281,  218, 
+           83,   83,  295,  295,  328,  627,  295,  585,  659,  649, 
+          712,  649,  649,  810,  858,  582,  134,  134,  608,  636, 
+          433,  637,  623,  437,  631,  638,  134,  401,  637,  830, 
+          260,  354,  395,  673,  334,  442,  649,  260,    8,  649, 
+          577,  585,  839,  283,  958,  260,  649,  306,  638,  689, 
+          649,  432,  674,  649,  264,  894,  585,  878,  649,  569, 
+          254,  134,   88,  702,  835, 1046,  623,  608,  631,  376, 
+         1030,  434,  649,  851,  577,  260,  401,  305,  352,  259, 
+          500,  649,  674,  823,  502,  750,  259,  516,  649,  577, 
+          301,  649,  833,  304,  259,  649,  318,  584,  416,  649, 
+          583,  434,  520,  521,   74,  595,  308,  569,  569,  638, 
+          544,  577,  134,  282,  871,  416,  674,  314,  463,  554, 
+          319,  649,  733,  555,  259,  319,  638,  352,  556,  413, 
+          608,  584,  376,  435,  583,   93,   93,  136,  136,  595, 
+          649,  674,  569,  569,  477,  577,  584,  281,  884,  583, 
+          489,  377,  503,  504,  595,   72,  569, 1046,  388,  777, 
+          577,  561,  562,  252,  252,  252,   84,  381,  554,   88, 
+          975, 1030,  386,  369,  847,  389,  740,  384,   93,  608, 
+          511,  438,  355,  387,  872,  809,   75,  638,   53,  638, 
+          532,  780,  653,  304,  638,  814,  254,  254,  382,  712, 
+          385,  582,  525,  958,  813,  563,  815,  468,  711,  711, 
+          264,  740,  644,  569,  377,  383,   76,   84,  536,  742, 
+           87,  746,  472,  473,  743,  853,  854,  649,  855,  370, 
+          644,  525,  254,  355,  254,  254,  524,   73,  254,  519, 
           254,  907,  415,  386,  296,   88,  296,  914,   82,  416, 
           421,   88,   80,   88,  769,  292,  373,  292,  292,  770, 
           818,  993,   88,  713,   93,  527,  878,   76,  384,  385, 
-          518,  717,  718,  264,  308,  401,  647,  972,  440,  403, 
-          404,  328,  441,  439,  354,  453,  979,  458,  295,  726, 
-          295,  983,  374,   59,   60,  425,  647,  902,  648,   82, 
-          647,  648,  458,   80,  647,  647,  323,  647,  696,  647, 
-          254,  254,  254,  254,   88,  254,  254,  307,  514,  292, 
-          582,  639,  582,  639,  928,  636,  647,  657,  639,  522, 
-          279,  636,  393,  279,  453,  655,  588,  589,  590,  591, 
-          647,  647,    8,  647,  950,  903,  905, 1016,  647,  254, 
-          672,  910,  912,  538,  539,  641,  583,  641,   88,  354, 
-          541,  254,  641,  843,   88,  134,  632,  606,  647,  859, 
-          632,   93,  292,  663,  532,  281,  399,  254,  281,   88, 
-          254,  592,  634,  633,  635,  921,  328,  849,  647,  575, 
-           88,  567,  323,  254,  632,  581,  859,  836,   88,  582, 
-          292,  582,  623,  822,  631,  469,  575,  254,  746,  863, 
-          632,  633,  736,  652,  552,  898,  292,  652, 1018,  252, 
-          252,  698,  698, 1097,  632,  606,  803,  633,  710,  719, 
-          292,   83,  581,  123,  712,   84,   74,  254, 1074,   88, 
-          134,  633,  232,  575,  711,  280,  582,   93,  280,  812, 
-           88,  552,  218,   93,  593,   93,  694,  317,  632,   96, 
-           96,  499,  606,  501,   93,  581,  254,  729,  354,  424, 
-          234,  282,  992,  426,  567,  633,  575,  418,  601,   97, 
-          647,  647,  123,  632,  552,   76,  355,  538,  539,  292, 
-          386,  532,   77,  845,  541,  606,  876,  843,   84,  379, 
-          633,  848,   96,  591,  384,  799,   83,  387,  430,  382, 
-          757,  759,  601, 1050,  440,  385,   93,   82,   75,  647, 
-          778,   80,  865,   85,  333,  337,  746,  601,  746,  804, 
-          380,  786,  383,  252,  252,  252,  252,  591,  593,  594, 
-          431,  573,  453,   77,  638,  638,   78,  381,   76,  134, 
-          638,  638,  591,  307,  384,  385,  771,  644,  443,  644, 
-           93,  355,   83,  638,  644,   81,   93,  850,  647,  538, 
+          518,  717,  718,  264,  308,  401,  649,  972,  440,  403, 
+          404,  328,  441,  439,  354,  455,  979,  458,  295,  726, 
+          295,  983,  374,   59,   60,  425,  649,  902,  650,   82, 
+          649,  650,  458,   80,  649,  649,  323,  649,  696,  649, 
+          254,  254,  254,  254,   88,  254,  254,  307,  514,  294, 
+          582,  639,  582,  639,  928,  638,  649,  657,  639,  522, 
+          281,  638,  395,  281,  455,  655,  588,  589,  590,  591, 
+          649,  649,    8,  649,  950,  903,  905, 1016,  649,  254, 
+          672,  910,  912,  538,  539,  641,  585,  641,   88,  354, 
+          541,  254,  641,  843,   88,  134,  632,  608,  649,  859, 
+          632,   93,  292,  663,  532,  283,  401,  254,  283,   88, 
+          254,  592,  636,  633,  637,  921,  328,  849,  649,  577, 
+           88,  569,  323,  254,  632,  583,  859,  836,   88,  582, 
+          292,  582,  623,  822,  631,  469,  577,  254,  746,  863, 
+          632,  633,  736,  652,  554,  898,  292,  652, 1018,  252, 
+          252,  698,  698, 1097,  632,  608,  803,  633,  710,  719, 
+          292,   83,  583,  123,  712,   84,   74,  254, 1074,   88, 
+          134,  633,  232,  577,  711,  282,  584,   93,  282,  812, 
+           88,  554,  218,   93,  595,   93,  694,  319,  632,   96, 
+           96,  499,  608,  501,   93,  583,  254,  729,  354,  424, 
+          234,  282,  992,  426,  569,  633,  577,  418,  603,   97, 
+          649,  649,  123,  632,  554,   76,  355,  538,  539,  292, 
+          388,  532,   77,  845,  541,  608,  876,  843,   84,  381, 
+          633,  848,   96,  593,  386,  799,   83,  389,  430,  384, 
+          757,  759,  603, 1050,  442,  387,   93,   82,   75,  649, 
+          778,   80,  865,   85,  333,  337,  746,  603,  746,  804, 
+          382,  786,  385,  252,  252,  252,  252,  593,  593,  594, 
+          431,  573,  455,   77,  638,  638,   78,  383,   76,  134, 
+          638,  638,  593,  307,  384,  385,  771,  644,  443,  644, 
+           93,  355,   83,  638,  644,   81,   93,  850,  649,  538, 
           539,  543,  391,  392,   85,  509,  541,  786,  825,  822, 
            82,   93,  454,  323,   80,  354,  931,  783,   96,  457, 
           772,  464,   93,  786,  706,  789,  308,   78,  254,   88, 
            93,  789,  465,  676,   79,  817,  786,  407,  408,   88, 
-          582,  466,  816,   83,  453,  807,   81,  469,  232,  898, 
+          582,  466,  816,   83,  455,  807,   81,  469,  232,  898, 
           746, 1026,  471,  898,  808,  103,  103,  218,  218,  474, 
          1061,  561,  562,  478,  954,  783,  254,  786,  789, 1013, 
          1083,   93,  532,  293,  299, 1015,  234,  300,  484,  784, 
           485,  916,   93,  488,  867,   79,   88,  790,  844,  674, 
           720,  354,  840,  793,  451,  874,  134,  877,  103,  652, 
-          355,  638,  452,  647,  647,  508,  867,  386,  639,  639, 
+          355,  638,  452,  649,  649,  508,  867,  386,  639,  639, 
           926,  886,   87,  512,  639,  639,  513,  746,  323,  746, 
-          123,  320,  452,  452,  862,   96,  523,  639,  452,   73, 
-          517,  876,  529,  440,  531,   88,  955,  537,   88,  656, 
+          123,  322,  454,  454,  862,   96,  523,  639,  454,   73, 
+          517,  876,  529,  442,  531,   88,  955,  537,   88,  656, 
           664,   88,  641,  641,  415,  898,  876,  506,  641,  641, 
-          685,  416,  417,   83,  746,  320,   88,  573,  692,  254, 
+          685,  416,  417,   83,  746,  322,   88,  573,  692,  254, 
           677,  641, 1025,  682,  684,  714,  354,  695,   88,  686, 
-          320,  715,  134,  538,  539,  716,  632,  722,  730,  725, 
-          541,  440,  292,   88,  103,  546,  254,  929,  440,  440, 
+          322,  715,  134,  538,  539,  716,  632,  722,  730,  725, 
+          541,  442,  292,   88,  103,  546,  254,  929,  442,  442, 
           751,   77,  752,  633,  933,  753,  446,   88,   88,   88, 
-          756,   96,  320,  601,  758,  108,  647,   96,  760,   96, 
-          762,  495,  942,  462,  763,  440,  766,  355,   96,  698, 
-          776,  867,   85,  917,  108,  779,  781,  782,  591,  787, 
+          756,   96,  322,  603,  758,  108,  649,   96,  760,   96, 
+          762,  495,  942,  462,  763,  442,  766,  355,   96,  698, 
+          776,  867,   85,  917,  108,  779,  781,  782,  593,  787, 
          1024,   93,   88,   88,  788,  639,  800,  962,  876,  108, 
-          601,   93,  795,  966,  968,   78,  970,  134,  971,  802, 
-          805,  252,  643,  811,   77,  786,  108,  601,  987,  662, 
-          822,   83,   98,  828,   81,  591,  829,  831,  832,  641, 
-           96,  320,  834,  601,  846,  860,  573,  864,  573,  885, 
-          901,  909,  591,   92,  908,   85,  320,  927,   93,  252, 
-          930,  103,  643,  355,  662,  308, 1010,  932,  591, 1059, 
-           88,  857,  935,   79, 1054,  476, 1034,  939,   78,  521, 
+          603,   93,  795,  966,  968,   78,  970,  134,  971,  802, 
+          805,  252,  643,  811,   77,  786,  108,  603,  987,  662, 
+          822,   83,   98,  828,   81,  593,  829,  831,  832,  641, 
+           96,  322,  834,  603,  846,  860,  573,  864,  573,  885, 
+          901,  909,  593,   92,  908,   85,  322,  927,   93,  252, 
+          930,  103,  643,  355,  662,  308, 1010,  932,  593, 1059, 
+           88,  857,  935,   79, 1054,  476, 1034,  939,   78,  523, 
           943,  645,  944,  645,   96, 1040,  945,  951,  645, 1044, 
-           96,  538,  539,  540,   83,  495,  956,   81,  541,  647, 
-          515,  538,  539,  543, 1090,   96,  952,   93,  541,  134, 
+           96,  538,  539,  540,   83,  495,  956,   81,  541,  649, 
+          517,  538,  539,  543, 1090,   96,  952,   93,  541,  134, 
            93,  724,  959,   93,  644,  644,   96,   73,  960, 1049, 
           644,  644,  961,  495,   96,  965,  967,   88,   93,  490, 
           969,  493, 1062,  644,  973,  976,   79,  103,  355,  495, 
-           93,  104,  127,  103,   88,  103,   88,  134,  647,  978, 
+           93,  104,  127,  103,   88,  103,   88,  134,  649,  978, 
           980,  982,   88,  495,  103,   93,  550,  988,  551,  552, 
           553,  554,  989,  995, 1019,   96, 1020, 1023, 1032,   93, 
            93,   93, 1063, 1065, 1066, 1067,   96, 1031, 1039,  252, 
-         1047, 1094, 1051, 1060,  254,   97, 1064,  786,  440,   88, 
+         1047, 1094, 1051, 1060,  254,   97, 1064,  786,  442,   88, 
          1068,  127,   92, 1070,  550, 1072,  551,  552,  553,  554, 
-          134,  632, 1075,  415,   93,   93,  103,  292, 1080,  320, 
-          416,  445,  495, 1088, 1101, 1098,  320,  320,  633,  634, 
-          415,  647,  622,  320,  647,  636,   92,  416,  461,  127, 
-          136, 1099,  117,  635,  640,  899,   95,  640,  900,  642, 
-          320,  644,  636,   92,  108,  429,  116,  103,  636,  103, 
-          103,  647,  636,  375,  103,  429,  103,  482,   98,  367, 
+          134,  632, 1075,  415,   93,   93,  103,  292, 1080,  322, 
+          416,  445,  495, 1088, 1101, 1098,  322,  322,  633,  636, 
+          415,  649,  624,  322,  649,  638,   92,  416,  461,  127, 
+          136, 1099,  117,  637,  642,  899,   95,  642,  900,  644, 
+          322,  644,  638,   92,  108,  431,  116,  103,  638,  103, 
+          103,  649,  638,  375,  103,  431,  103,  482,   98,  367, 
           138,  768,  775, 1087,  775,  727,  221,  117, 1011,  794, 
-           95,  103,   93,  515,   61,   62,   63,   64,  320,  996, 
-          875,  117,  103,  938,  889,  320,  320,   95,  111,  618, 
-          103,  622,   98,  320,  880,  116,  775,  947,  948,  949, 
-          320,  320,   97, 1042,  429, 1041,  622,  108,  792,   98, 
-          915, 1086,  415,  521,  792,  462,  521,  518,  283,  416, 
-          475,  136,  861,  521,  521,   96,  806,  520, 1091,   93, 
-          420,  103,  963,  964,    0,   96,    0,  515,    0,  521, 
-            0,    0,  103,    0,  515,  515,   93,   99,   93,  520, 
-          618,  792,    0,  647,   93,    0,    0,  647,  647,  821, 
+           95,  103,   93,  517,   61,   62,   63,   64,  322,  996, 
+          875,  117,  103,  938,  889,  322,  322,   95,  111,  620, 
+          103,  624,   98,  322,  880,  116,  775,  947,  948,  949, 
+          322,  322,   97, 1042,  431, 1041,  624,  108,  792,   98, 
+          915, 1086,  415,  523,  792,  462,  523,  520,  283,  416, 
+          475,  136,  861,  523,  523,   96,  806,  522, 1091,   93, 
+          420,  103,  963,  964,    0,   96,    0,  517,    0,  523, 
+            0,    0,  103,    0,  517,  517,   93,   99,   93,  522, 
+          620,  792,    0,  649,   93,    0,    0,  649,  649,  821, 
           824,  550,  824,  551,  552,  553,  554,  555,   17,  824, 
-            0,  618,  556,    0,    0,    0,  123,  440,    0,  904, 
+            0,  620,  556,    0,    0,    0,  123,  442,    0,  904, 
           906,    0,   96,    0,    0,  911,  913,    0,  535,    0, 
-            0,   93,    0,    0,  522,  557,    0,   16,  798,  127, 
+            0,   93,    0,    0,  524,  557,    0,   16,  798,  127, 
          1014,    0,   97,  559,  560,  561,  562,    0,    0,  118, 
-            0,    0,  300,    0,    0,  291,  291,   17,    0,  291, 
-            0,  515,  300,    0,    0,  440,  904,  906,    0,  911, 
-          913,   96,  440,  440,   96,    0,    0,   96,  645,  645, 
+            0,    0,  302,    0,    0,  291,  291,   17,    0,  291, 
+            0,  517,  302,    0,    0,  442,  904,  906,    0,  911, 
+          913,   96,  442,  442,   96,    0,    0,   96,  645,  645, 
             0,  315,  317,    0,  645,  645,   16,  291,  291,  563, 
-          357,  359,   96,   97,    0,  515,  293,  645,  118,  440, 
-          320,   92,  618,    0,   96,    0,    0,  320,  320,    0, 
-          515,  300,    0,  622, 1055,  495, 1056,    0,    0,   96, 
-          446,    0, 1057,    0,  647,  100,    0,   97,    0,  117, 
-          522,  103,    0,   96,   96,   96,  106,  937,    0,    0, 
-          941,  103,  515,  116,   97,   95,  619,  429,  429,  429, 
-          515, 1053,  429,  429,  429,    0,  429,  515,  515, 1089, 
-            0,    0,    0,  618,   92,    0,  429,   98,   96,   96, 
-          106,    0,  523,  647,  520,  429,  429,  116,  429,  429, 
-          429,  429,  429,    0,  618,    0,    0,  106,  103,    0, 
-          521,    0,  415,    0,  518,    0,    0,  521,  521,  416, 
-          510,  518,  518,    0,  520,  645,    0,  619,   95,  137, 
-          137,  520,  520,  429,    0,    0,  521,  625,    0,  137, 
-          429,  429,  118,  521,  521,    0,  520,  429,  619,    0, 
-           98,    0, 1012,  520,  520,    0,   96,  103,    0,  206, 
-          103,    0,    0,  103,  103,  103,  137,  137,  429,    0, 
+          357,  359,   96,   97,    0,  517,  295,  645,  118,  442, 
+          322,   92,  620,    0,   96,    0,    0,  322,  322,    0, 
+          517,  302,    0,  624, 1055,  495, 1056,    0,    0,   96, 
+          446,    0, 1057,    0,  649,  100,    0,   97,    0,  117, 
+          524,  103,    0,   96,   96,   96,  106,  937,    0,    0, 
+          941,  103,  517,  116,   97,   95,  621,  431,  431,  431, 
+          517, 1053,  431,  431,  431,    0,  431,  517,  517, 1089, 
+            0,    0,    0,  620,   92,    0,  431,   98,   96,   96, 
+          106,    0,  525,  649,  522,  431,  431,  116,  431,  431, 
+          431,  431,  431,    0,  620,    0,    0,  106,  103,    0, 
+          523,    0,  415,    0,  520,    0,    0,  523,  523,  416, 
+          510,  520,  520,    0,  522,  645,    0,  621,   95,  137, 
+          137,  522,  522,  431,    0,    0,  523,  627,    0,  137, 
+          431,  431,  118,  523,  523,    0,  522,  431,  621,    0, 
+           98,    0, 1012,  522,  522,    0,   96,  103,    0,  206, 
+          103,    0,    0,  103,  103,  103,  137,  137,  431,    0, 
           103,  103,  137,  137,  137,  137,    0,    0,  103,  336, 
            17,   17,   17,  103,  824,  415,   17,   17,    0,   17, 
-          103,  522,  416,  534,    0,  415,    0,    0,  522,  522, 
-          429,    0,  416,  797,    0,  103,    0,    0,  206,   16, 
+          103,  524,  416,  534,    0,  415,    0,    0,  524,  524, 
+          431,    0,  416,  797,    0,  103,    0,    0,  206,   16, 
            16,   16,   53,   96,    0,   16,   16,    0,   16,  103, 
           103,  103,   53,    0,    0,  137,  118,    0,    0,    0, 
-           96,    0,   96,    0,  300,  300,  300,    0,   96,  300, 
-          300,  300,    0,  300,    0,  291,  291,  291,  359,    0, 
-          291,  618,    0,    0,  103,  103,    0,    0,    0,    0, 
-           17,  291,    0,  291,  291,  300,  300,  300,  300,  300, 
+           96,    0,   96,    0,  302,  302,  302,    0,   96,  302, 
+          302,  302,    0,  302,    0,  291,  291,  291,  359,    0, 
+          291,  620,    0,    0,  103,  103,    0,    0,    0,    0, 
+           17,  291,    0,  291,  291,  302,  302,  302,  302,  302, 
           105,   53,  507,    0,    0,   96,    0,  415,    0,    0, 
-          119,   17,   97,    0,  416, 1048,    0,  522,    0,   16, 
-          495,  103,    0,  824,  522,  522,  647,  647,  647,  515, 
-            0,    0,    0,  647,  105,    0,  515,  515,  415,    0, 
-           16,  300,  618,   17,  300,  416, 1052,  538,  539,  545, 
-            0,  105,  103,    0,  541,  106,  625,    0,    0,  523, 
-          515,  520,    0,  618,    0,  300,  523,  523,  520,  520, 
+          119,   17,   97,    0,  416, 1048,    0,  524,    0,   16, 
+          495,  103,    0,  824,  524,  524,  649,  649,  649,  517, 
+            0,    0,    0,  649,  105,    0,  517,  517,  415,    0, 
+           16,  302,  620,   17,  302,  416, 1052,  538,  539,  545, 
+            0,  105,  103,    0,  541,  106,  627,    0,    0,  525, 
+          517,  522,    0,  620,    0,  302,  525,  525,  522,  522, 
             0,    0,   16,    0,    0,   97,  595,  596,  597,  598, 
-          599,  621,    0,  600,  601,  602,  603,  604,  605,  606, 
-          607,  608,  609,  610,  611,  612,  613,  300,    0,  614, 
-          615,  616,  617,  102,  625,    0,    0,    0,  291,  103, 
-          634,  625,  625,    0,  640,    0,  647,  621,  106,    0, 
+          599,  623,    0,  600,  601,  602,  603,  604,  605,  606, 
+          607,  608,  609,  610,  611,  612,  613,  302,    0,  614, 
+          615,  616,  617,  102,  627,    0,    0,    0,  291,  103, 
+          634,  627,  627,    0,  640,    0,  647,  623,  106,    0, 
           291,  640,    0,    0,    0,    0,  103,  550,  103,  551, 
-          552,  553,  554,    0,  103,    0,  291,    0,  625,    0, 
+          552,  553,  554,    0,  103,    0,  291,    0,  627,    0, 
           137,  137,  137,  137,    0,  137,  479,  480,  481,    0, 
-          525,  483,  291,  292,  640,  640,  640,  868,    0,  291, 
-            0,  744,  879,  292,    0,    0,  291,  137,    0,  101, 
+          527,  483,  291,  294,  640,  640,  640,  868,    0,  291, 
+            0,  744,  879,  294,    0,    0,  291,  137,    0,  101, 
             0,  103,    0,    0,  291,  291,  888,    0,  291,  538, 
           539,  739,    0,    0,    0,  206,  541,  206,  206,  206, 
-          206,  206,    0,  538,  539,  767,  206,  292,    0,    0, 
-          541,    0,  723,  640,   53,   53,   53,  521,  137,   53, 
-           53,   53,  292,   53,  291,  521,  524,  291,    0,  206, 
+          206,  206,    0,  538,  539,  767,  206,  294,    0,    0, 
+          541,    0,  723,  640,   53,   53,   53,  523,  137,   53, 
+           53,   53,  294,   53,  291,  523,  526,  291,    0,  206, 
           206,    0,    0,   53,    0,  291,    0,  206,  206,  206, 
           206,    0,   53,   53,  107,   53,   53,   53,   53,   53, 
             0,  137,  137,  137,  137,  137,    0,    0,  137,  137, 
           137,  137,  137,  137,  137,  137,  137,  137,  137,  137, 
           137,  137,  103,  104,  137,  137,  137,  137,  107,  105, 
-          621,  291,    0,  206,  518,  137,   99,    0,  100,  486, 
-          486,  486,    0,  137,   53,  107,  486,  651,   94,    0, 
+          623,  291,    0,  206,  520,  137,   99,    0,  100,  488, 
+          488,  488,    0,  137,   53,  107,  488,  651,   94,    0, 
             0,  660,    0,  119,    0,    0,    0,  104,    0,  550, 
-            0,  551,  552,  553,  554,   53,    0,    0,  518,  526, 
-           99,    0,  100,    0,  104,  622,    0,    0,  621,  137, 
-          137,  137,    0,  518,  137,  621,  621,   99,    0,  100, 
-          651,  621,  105,  744,    0,  517,  291,   53,  121,  137, 
-          137,  745,  119,  137,  440,  707,  709,    0,    0,  336, 
-            0,    0,  621,    0,    0,  518,  102,  522, 1027,  523, 
+            0,  551,  552,  553,  554,   53,    0,    0,  520,  528, 
+           99,    0,  100,    0,  104,  624,    0,    0,  623,  137, 
+          137,  137,    0,  520,  137,  623,  623,   99,    0,  100, 
+          651,  623,  105,  744,    0,  519,  291,   53,  121,  137, 
+          137,  745,  119,  137,  442,  707,  709,    0,    0,  336, 
+            0,    0,  623,    0,    0,  520,  102,  524, 1027,  525, 
           551,  552,  553,  554,    0,    0,    0,  137,  137, 1033, 
-            0, 1035,  291, 1036,  523,    0,    0, 1037,    0,  137, 
-            0,    0,  137,    0, 1045,  709,    0,  525,  336,    0, 
-          102,    0,  137,    0,  525,  525,  291,    0,  291,  379, 
+            0, 1035,  291, 1036,  525,    0,    0, 1037,    0,  137, 
+            0,    0,  137,    0, 1045,  709,    0,  527,  336,    0, 
+          102,    0,  137,    0,  527,  527,  291,    0,  291,  379, 
           380,  381,  382,  383,  120,  291,  291,  102,   55,    0, 
-            0,    0,    0,    0,    0,  292,  292,  292,   55,  882, 
-          292,  292,  292,  550,  292,  551,  552,  553,  554,    0, 
-            0,  896,    0,   95,  292,  292,  137,  525,    0,    0, 
-            0,    0,  765,  292,  292,    0,  292,  292,  292,  292, 
-          292,    0,   54,  524,    0,    0,  291,  744,    0,    0, 
-          524,  524,   54,    0,    0,  957,    0,   55, 1092,    0, 
+            0,    0,    0,    0,    0,  294,  294,  294,   55,  882, 
+          294,  294,  294,  550,  294,  551,  552,  553,  554,    0, 
+            0,  896,    0,   95,  294,  294,  137,  527,    0,    0, 
+            0,    0,  765,  294,  294,    0,  294,  294,  294,  294, 
+          294,    0,   54,  526,    0,    0,  291,  744,    0,    0, 
+          526,  526,   54,    0,    0,  957,    0,   55, 1092,    0, 
             0,  640,  640,   93, 1093,  121, 1095,  640,  640, 1096, 
-          518,    0,    0,   96,    0,    0,  918,    0,  291,    0, 
-          640,    0,  291,    0,    0,  292,    0,  122,  292,    0, 
-          292,  137,  120,  107,  622, 1105,    0,  801,    0,  137, 
-            0,   54,    0,    0,    0,    0,  292,    0,  640,  640, 
-          516,  640,  640,  113,  121,  291,    0,    0,    0,    0, 
-          519,    0,  104,  440,    0,    0,    0,  137,    0,    0, 
-            0,    0,    0,  819,  619,   99,  526,  100,  292,    0, 
-          119,  120,  622,  526,  526,    0,  525,    0,    0,  622, 
-          622,  137,    0,  137,    0,  622,  107,  841,    0,  842, 
-          137,  137,  517,    0,    0,    0,  709,  336,    0,  517, 
-          517,  440,    0,  524,    0,  137,  622,  515,  440,  440, 
-            0,  990,  518,    0,  522,  104,  523,  515,  991,  518, 
-          518,  522,  522,  523,  523,  619,    0,    0,   99,    0, 
-          100,  523,    0,    0,  291,  440,    0,  386,  523,  523, 
-            0,  137,    0,  518,  977,  102,  619,  883,  981,    0, 
-            0,  515,  896,    0,  991,  896,    0, 1043,    0,  896, 
-            0,  291,    0,    0,    0,  515,  515,    0,  111,  401, 
-          515,  137,    0,  403,  404,  405,  406,  137,    0,    0, 
-          137,    0,    0,  925,    0,    0,    0,    0,  114,  619, 
-           55,   55,   55,    0,  525,   55,   55,   55,  515,   55, 
-            0,  525,  525,  137,  137,    0,  137,  137,  102,   55, 
+          520,    0,    0,   96,    0,    0,  918,    0,  291,    0, 
+          640,    0,  291,    0,    0,  294,    0,  122,  294,    0, 
+          294,  137,  120,  107,  624, 1105,    0,  801,    0,  137, 
+            0,   54,    0,    0,    0,    0,  294,    0,  640,  640, 
+          518,  640,  640,  113,  121,  291,    0,    0,    0,    0, 
+          521,    0,  104,  442,    0,    0,    0,  137,    0,    0, 
+            0,    0,    0,  819,  621,   99,  528,  100,  294,    0, 
+          119,  120,  624,  528,  528,    0,  527,    0,    0,  624, 
+          624,  137,    0,  137,    0,  624,  107,  841,    0,  842, 
+          137,  137,  519,    0,    0,    0,  709,  336,    0,  519, 
+          519,  442,    0,  526,    0,  137,  624,  517,  442,  442, 
+            0,  990,  520,    0,  524,  104,  525,  517,  991,  520, 
+          520,  524,  524,  525,  525,  621,    0,    0,   99,    0, 
+          100,  525,    0,    0,  291,  442,    0,  386,  525,  525, 
+            0,  137,    0,  520,  977,  102,  621,  883,  981,    0, 
+            0,  517,  896,    0,  991,  896,    0, 1043,    0,  896, 
+            0,  291,    0,    0,    0,  517,  517,    0,  111,  401, 
+          517,  137,    0,  403,  404,  405,  406,  137,    0,    0, 
+          137,    0,    0,  925,    0,    0,    0,    0,  114,  621, 
+           55,   55,   55,    0,  527,   55,   55,   55,  517,   55, 
+            0,  527,  527,  137,  137,    0,  137,  137,  102,   55, 
           137,    0,    0,    0,    0,    0,  946,    0,   55,   55, 
             0,   55,   55,   55,   55,   55,    0,    0,  112,    0, 
-            0,    0,    0,    0,   54,   54,   54,  518,  115,   54, 
-           54,   54,    0,   54,  518,  518,    0,  896,  518,  896, 
-          619,  896,  121,   54,  896,    0,    0,    0,  518,    0, 
+            0,    0,    0,    0,   54,   54,   54,  520,  115,   54, 
+           54,   54,    0,   54,  520,  520,    0,  896,  520,  896, 
+          621,  896,  121,   54,  896,    0,    0,    0,  520,    0, 
             0,    0,    0,  291,    0,   54,   54,   54,   54,   54, 
-           55,  619,  137,    0,    0,    0,  137,  516,    0,  120, 
-          896,    0,    0,    0,  516,  516,    0,  519,    0,    0, 
-            0,   55,  518, 1069,  519,  519, 1071, 1073,    0,  137, 
-         1076, 1077,    0,    0,    0,  994,  518,  518,    0,  114, 
-          137,  518,    0,  525,   54,    0,    0,    0,    0,  137, 
-          525,  525,    0,   55,    0,    0,  137,    0,    0,    0, 
-            0,    0,  336,    0,    0,   54,    0,  199,    0,  518, 
-          524,    0,    0,    0,    0,    0,    0,  524,  524, 1100, 
+           55,  621,  137,    0,    0,    0,  137,  518,    0,  120, 
+          896,    0,    0,    0,  518,  518,    0,  521,    0,    0, 
+            0,   55,  520, 1069,  521,  521, 1071, 1073,    0,  137, 
+         1076, 1077,    0,    0,    0,  994,  520,  520,    0,  114, 
+          137,  520,    0,  527,   54,    0,    0,    0,    0,  137, 
+          527,  527,    0,   55,    0,    0,  137,    0,    0,    0, 
+            0,    0,  336,    0,    0,   54,    0,  199,    0,  520, 
+          526,    0,    0,    0,    0,    0,    0,  526,  526, 1100, 
          1102, 1103, 1104,    0,    0,    0,    0,    0,    0,    0, 
-            0, 1106,    0,  137,  618,  618,  618,   54,  618,  515, 
-          515,  515,  618,  618,  515,  515,  515,  618,  515,  618, 
-          618,  618,  618,  618,  618,  618,  199,  618,  515,  515, 
-          618,  618,  618,  618,  618,  618,  618,  515,  515,  618, 
-          515,  515,  515,  515,  515,    0,  618,    0,    0,  618, 
-          618,  618,  515,  618,  618,  618,  618,  618,  618,  618, 
-          618,  618,  618,  618,  515,  515,  515,  515,  515,  515, 
-          515,  515,  515,  515,  515,  515,  515,  515,  308,    0, 
-          515,  515,  515,  515,  618,  527,  515,  618,  618,  515, 
-          618,  618,  515,  618,  515,  618,  515,  618,  515,  618, 
-          515,  515,  515,  515,  515,  515,  515,  618,  515,  618, 
-          515,    0,  618,  618,  618,  618,  618,  618,    0,    0, 
-          110,  618,  515,  618,  618,    0,  618,  618,  618,  618, 
-            0,  411,    0,    0,    0,  897,    0,    0,    0,  618, 
-          618,  618,  515,    0,    0,  619,  619,  619,    0,  619, 
-          518,  518,  518,  619,  619,  518,  518,  518,  619,  518, 
-          619,  619,  619,  619,  619,  619,  619,  310,  619,  518, 
-          518,  619,  619,  619,  619,  619,  619,  619,  518,  518, 
-          619,  518,  518,  518,  518,  518,    0,  619,    0,    0, 
-          619,  619,  619,  518,  619,  619,  619,  619,  619,  619, 
-          619,  619,  619,  619,  619,  518,  518,  518,  518,  518, 
-          518,  518,  518,  518,  518,  518,  518,  518,  518,  109, 
-            0,  518,  518,  518,  518,  619,  530,  518,  619,  619, 
-          518,  619,  619,  518,  619,  518,  619,  518,  619,  518, 
-          619,  518,  518,  518,  518,  518,  518,  518,  619,  518, 
-          619,  518,    0,  619,  619,  619,  619,  619,  619,    0, 
-            0,  625,  619,  518,  619,  619,  321,  619,  619,  619, 
-          619,  625,    0,  199,  386,  199,  199,  199,  199,  199, 
-          619,  619,  619,  518,  199,    0,    0,    0,    0,    0, 
-          399,  400,    0,    0,    0,  520,    0,    0,    0,    0, 
-            0,    0,    0,  520,    0,  625,  401,  199,  199,    0, 
-          403,  404,  405,  406,    0,  199,  199,  199,  199,  625, 
-          625,    0,  125,    0,  625,    0,  550,    0,  551,  552, 
+            0, 1106,    0,  137,  620,  620,  620,   54,  620,  517, 
+          517,  517,  620,  620,  517,  517,  517,  620,  517,  620, 
+          620,  620,  620,  620,  620,  620,  199,  620,  517,  517, 
+          620,  620,  620,  620,  620,  620,  620,  517,  517,  620, 
+          517,  517,  517,  517,  517,    0,  620,    0,    0,  620, 
+          620,  620,  517,  620,  620,  620,  620,  620,  620,  620, 
+          620,  620,  620,  620,  517,  517,  517,  517,  517,  517, 
+          517,  517,  517,  517,  517,  517,  517,  517,  308,    0, 
+          517,  517,  517,  517,  620,  529,  517,  620,  620,  517, 
+          620,  620,  517,  620,  517,  620,  517,  620,  517,  620, 
+          517,  517,  517,  517,  517,  517,  517,  620,  517,  620, 
+          517,    0,  620,  620,  620,  620,  620,  620,    0,    0, 
+          110,  620,  517,  620,  620,    0,  620,  620,  620,  620, 
+            0,  411,    0,    0,    0,  897,    0,    0,    0,  620, 
+          620,  620,  517,    0,    0,  621,  621,  621,    0,  621, 
+          520,  520,  520,  621,  621,  520,  520,  520,  621,  520, 
+          621,  621,  621,  621,  621,  621,  621,  312,  621,  520, 
+          520,  621,  621,  621,  621,  621,  621,  621,  520,  520, 
+          621,  520,  520,  520,  520,  520,    0,  621,    0,    0, 
+          621,  621,  621,  520,  621,  621,  621,  621,  621,  621, 
+          621,  621,  621,  621,  621,  520,  520,  520,  520,  520, 
+          520,  520,  520,  520,  520,  520,  520,  520,  520,  109, 
+            0,  520,  520,  520,  520,  621,  532,  520,  621,  621, 
+          520,  621,  621,  520,  621,  520,  621,  520,  621,  520, 
+          621,  520,  520,  520,  520,  520,  520,  520,  621,  520, 
+          621,  520,    0,  621,  621,  621,  621,  621,  621,    0, 
+            0,  627,  621,  520,  621,  621,  323,  621,  621,  621, 
+          621,  627,    0,  199,  386,  199,  199,  199,  199,  199, 
+          621,  621,  621,  520,  199,    0,    0,    0,    0,    0, 
+          399,  400,    0,    0,    0,  522,    0,    0,    0,    0, 
+            0,    0,    0,  522,    0,  627,  401,  199,  199,    0, 
+          403,  404,  405,  406,    0,  199,  199,  199,  199,  627, 
+          627,    0,  125,    0,  627,    0,  550,    0,  551,  552, 
           553,  554,  555,    0,    0,    0,  897,  556,    0,  897, 
             0,  897,    0,  897,    0,    0,    0,    0,    0,    0, 
-            0,    0,  625,    0,    0,  129,  634,  634,  634,    0, 
-          557,  199,  634,  634,    0,  634,  635,  635,  635,    0, 
-          561,  562,  635,  635,    0,  635,    0,    0,    0,    0, 
+            0,    0,  627,    0,    0,  129,  636,  636,  636,    0, 
+          557,  199,  636,  636,    0,  636,  637,  637,  637,    0, 
+          561,  562,  637,  637,    0,  637,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,  386,  387,  388,  389,  390, 
           391,  392,  393,  394,  395,  396,    0,  397,  398,    0, 
-          621,  399,  400,    0,  310,    0,    0,    0,    0,    0, 
-          621,  310,  310,    0,  563,    0,    0,  401,    0,  402, 
+          623,  399,  400,    0,  312,    0,    0,    0,    0,    0, 
+          623,  312,  312,    0,  563,    0,    0,  401,    0,  402, 
             0,  403,  404,  405,  406,  407,  408,  409,    0,  410, 
-            0,  897,    0,  897,    0,  897,  634,    0,  897,    0, 
-            0,    0,    0,    0,  621,    0,  635,    0,    0,  386, 
-            0,    0,    0,    0,  128,    0,    0,  634,  621,  621, 
-            0,  124,    0,  621,  897,  399,  400,  635,    0,    0, 
+            0,  897,    0,  897,    0,  897,  636,    0,  897,    0, 
+            0,    0,    0,    0,  623,    0,  637,    0,    0,  386, 
+            0,    0,    0,    0,  128,    0,    0,  636,  623,  623, 
+            0,  124,    0,  623,  897,  399,  400,  637,    0,    0, 
             0,  550,    0,  551,  552,  553,  554,  555,    0,    0, 
-            0,  401,  556,  402,    0,  403,  404,  405,  406,  634, 
-            0,  621,    0,    0,    0,    0,    0,    0,    0,  635, 
-            0,    0,    0,  321,    0,  557,  558,    0,    0,    0, 
-          321,  321,  209,  559,  560,  561,  562,    0,  621,  621, 
-          621,    0,  621,  625,  625,  625,  621,  621,  625,  625, 
-          625,  621,  625,  621,  621,  621,  621,  621,  621,  621, 
-            0,  625,  625,  625,  621,  621,  621,  621,  621,  621, 
-          621,  625,  625,  621,  625,  625,  625,  625,  625,  563, 
-          621,  209,    0,  621,  621,  621,  625,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  625,  625, 
-          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
-          625,  625,  106,    0,  625,  625,  625,  625,  621,  194, 
-          625,  621,  621,  625,  621,  621,  625,  621,  625,  621, 
-          625,  621,  625,  621,  625,  625,  625,  625,  625,  625, 
-          625,  621,  625,  625,  625,    0,  621,  621,  621,  621, 
-          621,  621,    0,    0,    0,  621,  625,  621,  621,  625, 
-          621,  621,  621,  621,    0,    0,    0,    0,  194,    0, 
-            0,  122,    0,  621,  621,  621,  625,  621,  621,  621, 
-            0,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,    0, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,    0,  621, 
-          122,    0,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,    0,  526,  621,  621,  621,  621,  621,    0,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,    0,  621,  621,  621,  621,  621, 
-          621,    0,    0,  622,  621,  621,  621,  621,    0,  621, 
-          621,  621,  621,  622,    0,    0,    0,    0,    0,    0, 
-            0,    0,  621,  621,  621,  621,    0,    0,    0,    0, 
+            0,  401,  556,  402,    0,  403,  404,  405,  406,  636, 
+            0,  623,    0,    0,    0,    0,    0,    0,    0,  637, 
+            0,    0,    0,  323,    0,  557,  558,    0,    0,    0, 
+          323,  323,  209,  559,  560,  561,  562,    0,  623,  623, 
+          623,    0,  623,  627,  627,  627,  623,  623,  627,  627, 
+          627,  623,  627,  623,  623,  623,  623,  623,  623,  623, 
+            0,  627,  627,  627,  623,  623,  623,  623,  623,  623, 
+          623,  627,  627,  623,  627,  627,  627,  627,  627,  563, 
+          623,  209,    0,  623,  623,  623,  627,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  627,  627, 
+          627,  627,  627,  627,  627,  627,  627,  627,  627,  627, 
+          627,  627,  106,    0,  627,  627,  627,  627,  623,  194, 
+          627,  623,  623,  627,  623,  623,  627,  623,  627,  623, 
+          627,  623,  627,  623,  627,  627,  627,  627,  627,  627, 
+          627,  623,  627,  627,  627,    0,  623,  623,  623,  623, 
+          623,  623,    0,    0,    0,  623,  627,  623,  623,  627, 
+          623,  623,  623,  623,    0,    0,    0,    0,  194,    0, 
+            0,  122,    0,  623,  623,  623,  627,  623,  623,  623, 
+            0,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,    0, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,    0,  623, 
+          122,    0,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,    0,  528,  623,  623,  623,  623,  623,    0,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,    0,  623,  623,  623,  623,  623, 
+          623,    0,    0,  624,  623,  623,  623,  623,    0,  623, 
+          623,  623,  623,  624,    0,    0,    0,    0,    0,    0, 
+            0,    0,  623,  623,  623,  623,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,  209,    0, 
-          209,  209,  209,  209,  209,    0,    0,  622,    0,  209, 
-            0,    0,    0,  386,    0,    0,    0,  125,  625,    0, 
-          522,  622,  622,    0,  126,    0,  622,    0,  522,  399, 
+          209,  209,  209,  209,  209,    0,    0,  624,    0,  209, 
+            0,    0,    0,  386,    0,    0,    0,  125,  627,    0, 
+          524,  624,  624,    0,  126,    0,  624,    0,  524,  399, 
           400,    0,  209,  209,    0,    0,    0,    0,    0,    0, 
           209,  209,  209,  209,    0,  401,    0,  402,    0,  403, 
-          404,  405,  406,    0,  622,  409,    0,  410,    0,    0, 
-            0,    0,    0,    0,    0,    0,  625,    0,    0,    0, 
-            0,    0,    0,  625,  625,    0,    0,    0,    0,  621, 
+          404,  405,  406,    0,  624,  409,    0,  410,    0,    0, 
+            0,    0,    0,    0,    0,    0,  627,    0,    0,    0, 
+            0,    0,    0,  627,  627,    0,    0,    0,    0,  623, 
             0,    0,    0,    0,    0,  194,  209,  194,  194,  194, 
           194,  194,    0,    0,    0,    0,  194,    0,  122,    0, 
-          625,    0,  311,    0,    0,    0,    0,  523,    0,    0, 
-            0,    0,  311,    0,    0,  523,    0,    0,    0,  194, 
+          627,    0,  313,    0,    0,    0,    0,  525,    0,    0, 
+            0,    0,  313,    0,    0,  525,    0,    0,    0,  194, 
           194,    0,    0,    0,    0,    0,    0,  194,  194,  194, 
           194,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  311,  386,  387,  388, 
-          389,  390,  391,  392,  393,  394,  395,  396,    0,  526, 
-          311,  311,    0,  399,  400,  311,  526,  526,    0,    0, 
+            0,    0,    0,    0,    0,    0,  313,  386,  387,  388, 
+          389,  390,  391,  392,  393,  394,  395,  396,    0,  528, 
+          313,  313,    0,  399,  400,  313,  528,  528,    0,    0, 
             0,    0,    0,  194,    0,    0,    0,    0,    0,  401, 
             0,  402,    0,  403,  404,  405,  406,  407,  408,  409, 
-            0,  410,    0,  311,    0,    0,    0,    0,    0,    0, 
+            0,  410,    0,  313,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,  176,    0,    0,    0,    0,    0, 
-          622,  622,  622,    0,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,    0,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,    0,  622,  176,    0,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  105,    0,  622,  622,  622,  622, 
-          622,  177,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,    0,  622,  622, 
-          622,  622,  622,  622,    0,    0,    0,  622,  622,  622, 
-          622,  621,  622,  622,  622,  622,    0,    0,    0,    0, 
-          177,    0,    0,  113,    0,  622,  622,  622,  622,  620, 
-          620,  620,    0,  620,  311,  311,  311,  620,  620,  311, 
-          311,  311,  620,  311,  620,  620,  620,  620,  620,  620, 
-          620,    0,  620,  311,  311,  620,  620,  620,  620,  620, 
-          620,  620,  311,  311,  620,  311,  311,  311,  311,  311, 
-            0,  620,  113,    0,  620,  620,  620,  311,  620,  620, 
-          620,  620,  620,  620,  620,  620,  620,  620,  620,  311, 
-          311,  311,  311,  311,  311,  311,  311,  311,  311,  311, 
-          311,  311,  311,    0,  517,  311,  311,  311,  311,  620, 
-            0,  311,  620,  620,  311,  620,  620,  311,  620,  311, 
-          620,  311,  620,  311,  620,  311,  311,  311,  311,  311, 
-          311,  311,  620,  311,  620,  311,    0,  620,  620,  620, 
-          620,  620,  620,    0,    0,  626,  620,  311,  620,  620, 
-            0,  620,  620,  620,  620,  626,    0,    0,    0,    0, 
-            0,    0,    0,    0,  620,  620,  620,  311,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          176,    0,  176,  176,  176,  176,  176,    0,    0,  626, 
+          624,  624,  624,    0,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,    0,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,    0,  624,  176,    0,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  105,    0,  624,  624,  624,  624, 
+          624,  177,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,    0,  624,  624, 
+          624,  624,  624,  624,    0,    0,    0,  624,  624,  624, 
+          624,  623,  624,  624,  624,  624,    0,    0,    0,    0, 
+          177,    0,    0,  113,    0,  624,  624,  624,  624,  622, 
+          622,  622,    0,  622,  313,  313,  313,  622,  622,  313, 
+          313,  313,  622,  313,  622,  622,  622,  622,  622,  622, 
+          622,    0,  622,  313,  313,  622,  622,  622,  622,  622, 
+          622,  622,  313,  313,  622,  313,  313,  313,  313,  313, 
+            0,  622,  113,    0,  622,  622,  622,  313,  622,  622, 
+          622,  622,  622,  622,  622,  622,  622,  622,  622,  313, 
+          313,  313,  313,  313,  313,  313,  313,  313,  313,  313, 
+          313,  313,  313,    0,  519,  313,  313,  313,  313,  622, 
+            0,  313,  622,  622,  313,  622,  622,  313,  622,  313, 
+          622,  313,  622,  313,  622,  313,  313,  313,  313,  313, 
+          313,  313,  622,  313,  622,  313,    0,  622,  622,  622, 
+          622,  622,  622,    0,    0,  628,  622,  313,  622,  622, 
+            0,  622,  622,  622,  622,  628,    0,    0,    0,    0, 
+            0,    0,    0,    0,  622,  622,  622,  313,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          176,    0,  176,  176,  176,  176,  176,    0,    0,  628, 
             0,  176,    0,    0,    0,    0,    0,    0,    0,  124, 
-          621,  386,  525,  626,  626,    0,  391,  392,  626,    0, 
-          525,    0,    0,    0,  176,  176,    0,  399,  400,    0, 
+          623,  386,  527,  628,  628,    0,  391,  392,  628,    0, 
+          527,    0,    0,    0,  176,  176,    0,  399,  400,    0, 
             0,    0,  176,  176,  176,  176,    0,    0,    0,    0, 
-            0,    0,    0,  401,    0,  402,  626,  403,  404,  405, 
-          406,  407,  408,  409,    0,  410,    0,    0,  621,    0, 
-            0,    0,    0,    0,    0,  621,  621,    0,    0,    0, 
-            0,  621,    0,    0,    0,    0,    0,  177,  176,  177, 
+            0,    0,    0,  401,    0,  402,  628,  403,  404,  405, 
+          406,  407,  408,  409,    0,  410,    0,    0,  623,    0, 
+            0,    0,    0,    0,    0,  623,  623,    0,    0,    0, 
+            0,  623,    0,    0,    0,    0,    0,  177,  176,  177, 
           177,  177,  177,  177,    0,    0,    0,    0,  177,    0, 
-          113,    0,  621,    0,  627,    0,    0,    0,    0,  524, 
-            0,    0,    0,    0,  627,    0,    0,  524,    0,    0, 
+          113,    0,  623,    0,  629,    0,    0,    0,    0,  526, 
+            0,    0,    0,    0,  629,    0,    0,  526,    0,    0, 
             0,  177,  177,    0,    0,    0,    0,    0,    0,  177, 
           177,  177,  177,    0,    0,    0,    0,    0,    0,    0, 
-          386,  387,  388,  389,  390,  391,  392,  393,  627,  395, 
+          386,  387,  388,  389,  390,  391,  392,  393,  629,  395, 
           396,    0,    0,    0,    0,    0,  399,  400,    0,    0, 
-            0,  517,  627,  627,    0,    0,    0,  627,  517,  517, 
+            0,  519,  629,  629,    0,    0,    0,  629,  519,  519, 
             0,    0,  401,    0,  402,  177,  403,  404,  405,  406, 
           407,  408,  409,    0,  410,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  627,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  629,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,  178,    0,    0,    0, 
-            0,    0,  623,  623,  623,    0,  623,  626,  626,  626, 
-          623,  623,  626,  626,  626,  623,  626,  623,  623,  623, 
-          623,  623,  623,  623,    0,  626,  626,  626,  623,  623, 
-          623,  623,  623,  623,  623,  626,  626,  623,  626,  626, 
-          626,  626,  626,    0,  623,  178,    0,  623,  623,  623, 
-          626,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  626,  626,  626,  626,  626,  626,  626,  626, 
-          626,  626,  626,  626,  626,  626,  107,    0,  626,  626, 
-          626,  626,  623,  135,  626,  623,  623,  626,  623,  623, 
-          626,  623,  626,  623,  626,  623,  626,  623,  626,  626, 
-          626,  626,  626,  626,  626,  623,  626,  626,  626,    0, 
-          623,  623,  623,  623,  623,  623,    0,    0,    0,  623, 
-          626,  623,  623,  622,  623,  623,  623,  623,    0,    0, 
-            0,    0,  135,    0,    0,  112,    0,  623,  623,  623, 
-          626,  624,  624,  624,    0,  624,  627,  627,  627,  624, 
-          624,  627,  627,  627,  624,  627,  624,  624,  624,  624, 
-          624,  624,  624,    0,  627,  627,  627,  624,  624,  624, 
-          624,  624,  624,  624,  627,  627,  624,  627,  627,  627, 
-          627,  627,    0,  624,  112,    0,  624,  624,  624,  627, 
-          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
-          624,  627,  627,  627,  627,  627,  627,  627,  627,  627, 
-          627,  627,  627,  627,  627,    0,  516,  627,  627,  627, 
-          627,  624,    0,  627,  624,  624,  627,  624,  624,  627, 
-          624,  627,  624,  627,  624,  627,  624,  627,  627,  627, 
-          627,  627,  627,  627,  624,  627,  627,  627,    0,  624, 
-          624,  624,  624,  624,  624,    0,    0,  320,  624,  627, 
-          624,  624,    0,  624,  624,  624,  624,  320,    0,    0, 
-            0,    0,    0,    0,    0,    0,  624,  624,  624,  627, 
+            0,    0,  625,  625,  625,    0,  625,  628,  628,  628, 
+          625,  625,  628,  628,  628,  625,  628,  625,  625,  625, 
+          625,  625,  625,  625,    0,  628,  628,  628,  625,  625, 
+          625,  625,  625,  625,  625,  628,  628,  625,  628,  628, 
+          628,  628,  628,    0,  625,  178,    0,  625,  625,  625, 
+          628,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  628,  628,  628,  628,  628,  628,  628,  628, 
+          628,  628,  628,  628,  628,  628,  107,    0,  628,  628, 
+          628,  628,  625,  135,  628,  625,  625,  628,  625,  625, 
+          628,  625,  628,  625,  628,  625,  628,  625,  628,  628, 
+          628,  628,  628,  628,  628,  625,  628,  628,  628,    0, 
+          625,  625,  625,  625,  625,  625,    0,    0,    0,  625, 
+          628,  625,  625,  624,  625,  625,  625,  625,    0,    0, 
+            0,    0,  135,    0,    0,  112,    0,  625,  625,  625, 
+          628,  626,  626,  626,    0,  626,  629,  629,  629,  626, 
+          626,  629,  629,  629,  626,  629,  626,  626,  626,  626, 
+          626,  626,  626,    0,  629,  629,  629,  626,  626,  626, 
+          626,  626,  626,  626,  629,  629,  626,  629,  629,  629, 
+          629,  629,    0,  626,  112,    0,  626,  626,  626,  629, 
+          626,  626,  626,  626,  626,  626,  626,  626,  626,  626, 
+          626,  629,  629,  629,  629,  629,  629,  629,  629,  629, 
+          629,  629,  629,  629,  629,    0,  518,  629,  629,  629, 
+          629,  626,    0,  629,  626,  626,  629,  626,  626,  629, 
+          626,  629,  626,  629,  626,  629,  626,  629,  629,  629, 
+          629,  629,  629,  629,  626,  629,  629,  629,    0,  626, 
+          626,  626,  626,  626,  626,    0,    0,  322,  626,  629, 
+          626,  626,    0,  626,  626,  626,  626,  322,    0,    0, 
+            0,    0,    0,    0,    0,    0,  626,  626,  626,  629, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,  178,    0,  178,  178,  178,  178,  178,    0, 
-            0,  320,    0,  178,    0,    0,    0,    0,    0,    0, 
-            0,  126,  622,    0,  526,  320,  320,    0,  127,    0, 
-          320,    0,  526,    0,    0,    0,  178,  178,    0,    0, 
+            0,  322,    0,  178,    0,    0,    0,    0,    0,    0, 
+            0,  126,  624,    0,  528,  322,  322,    0,  127,    0, 
+          322,    0,  528,    0,    0,    0,  178,  178,    0,    0, 
             0,    0,    0,    0,  178,  178,  178,  178,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  320,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  322,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          622,    0,    0,    0,    0,    0,    0,  622,  622,    0, 
-            0,    0,    0,  622,    0,    0,    0,    0,    0,  135, 
+          624,    0,    0,    0,    0,    0,    0,  624,  624,    0, 
+            0,    0,    0,  624,    0,    0,    0,    0,    0,  135, 
           178,  135,  135,  135,  135,  135,    0,    0,    0,    0, 
-          135,    0,  112,    0,  622,    0,  439,    0,    0,    0, 
-            0,  515,    0,    0,    0,    0,  439,    0,    0,  515, 
+          135,    0,  112,    0,  624,    0,  441,    0,    0,    0, 
+            0,  517,    0,    0,    0,    0,  441,    0,    0,  517, 
             0,    0,    0,  135,  135,    0,    0,    0,    0,    0, 
             0,  135,  135,  135,  135,    0,    0,    0,    0,    0, 
             0,    0,  386,  387,  388,  389,  390,  391,  392,    0, 
-          439,  395,  396,    0,    0,    0,    0,    0,  399,  400, 
-            0,    0,    0,  516,    0,  439,    0,    0,    0,  439, 
-          516,  516,    0,    0,  401,    0,  402,  135,  403,  404, 
+          441,  395,  396,    0,    0,    0,    0,    0,  399,  400, 
+            0,    0,    0,  518,    0,  441,    0,    0,    0,  441, 
+          518,  518,    0,    0,  401,    0,  402,  135,  403,  404, 
           405,  406,  407,  408,  409,    0,  410,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  439,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  441,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,  136,    0, 
-            0,    0,    0,    0,  622,  622,  622,    0,  622,  320, 
-          320,  320,  622,  622,  320,  320,  320,  622,  320,  622, 
-          622,  622,  622,  622,  622,  622,    0,    0,  320,  320, 
-          622,  622,  622,  622,  622,  622,  622,  320,  320,  622, 
-          320,  320,  320,  320,  320,    0,  622,  136,    0,  622, 
-          622,  622,  320,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  320,  320,  320,  320,  320,  320, 
-          320,  320,  320,  320,  320,  320,  320,  320,    0,    0, 
-          320,  320,  320,  320,  622,  545,  320,  622,  622,  320, 
-          622,  622,  320,  622,  320,  622,  320,  622,  320,  622, 
-          320,  320,  320,  320,  320,  320,  320,  622,  320,  411, 
-          320,    0,  622,  622,  622,  622,  622,  622,    0,    0, 
-            0,  622,  320,  622,  622,    0,  622,  622,  622,  622, 
-            0,    0,    0,    0,  545,    0,    0,  115,    0,  622, 
-          622,  622,  320,  287,  287,  287,    0,  287,  439,  439, 
-          439,  287,  287,  439,  439,  439,  287,  439,  287,  287, 
-          287,  287,  287,  287,  287,    0,  439,  439,  439,  287, 
-          287,  287,  287,  287,  287,  287,  439,  439,  287,  439, 
-          439,  439,  439,  439,    0,  287,  115,    0,  287,  287, 
-          287,    0,  287,  287,  287,  287,  287,  287,  287,  287, 
-          287,  287,  287,  439,  439,  439,  439,  439,  439,  439, 
-          439,  439,  439,  439,  439,  439,  439,  411,  519,  439, 
-          439,  439,  439,  287,    0,  439,  287,    0,  439,  287, 
-          287,  439,  287,  439,  287,  439,  287,  439,  287,  439, 
-          439,  439,  439,  439,  439,  439,  287,  439,  439,  439, 
-            0,  287,  287,  287,  287,  287,  287,    0,    0,  647, 
-          287,    0,  287,  287,    0,  287,  287,  287,  287,  647, 
-            0,    0,    0,    0,    0,    0,    0,    0,  287,  287, 
-          287,  439,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  624,  624,  624,    0,  624,  322, 
+          322,  322,  624,  624,  322,  322,  322,  624,  322,  624, 
+          624,  624,  624,  624,  624,  624,    0,    0,  322,  322, 
+          624,  624,  624,  624,  624,  624,  624,  322,  322,  624, 
+          322,  322,  322,  322,  322,    0,  624,  136,    0,  624, 
+          624,  624,  322,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  322,  322,  322,  322,  322,  322, 
+          322,  322,  322,  322,  322,  322,  322,  322,    0,    0, 
+          322,  322,  322,  322,  624,  547,  322,  624,  624,  322, 
+          624,  624,  322,  624,  322,  624,  322,  624,  322,  624, 
+          322,  322,  322,  322,  322,  322,  322,  624,  322,  411, 
+          322,    0,  624,  624,  624,  624,  624,  624,    0,    0, 
+            0,  624,  322,  624,  624,    0,  624,  624,  624,  624, 
+            0,    0,    0,    0,  547,    0,    0,  115,    0,  624, 
+          624,  624,  322,  289,  289,  289,    0,  289,  441,  441, 
+          441,  289,  289,  441,  441,  441,  289,  441,  289,  289, 
+          289,  289,  289,  289,  289,    0,  441,  441,  441,  289, 
+          289,  289,  289,  289,  289,  289,  441,  441,  289,  441, 
+          441,  441,  441,  441,    0,  289,  115,    0,  289,  289, 
+          289,    0,  289,  289,  289,  289,  289,  289,  289,  289, 
+          289,  289,  289,  441,  441,  441,  441,  441,  441,  441, 
+          441,  441,  441,  441,  441,  441,  441,  411,  521,  441, 
+          441,  441,  441,  289,    0,  441,  289,    0,  441,  289, 
+          289,  441,  289,  441,  289,  441,  289,  441,  289,  441, 
+          441,  441,  441,  441,  441,  441,  289,  441,  441,  441, 
+            0,  289,  289,  289,  289,  289,  289,    0,    0,  649, 
+          289,    0,  289,  289,    0,  289,  289,  289,  289,  649, 
+            0,    0,    0,    0,    0,    0,    0,    0,  289,  289, 
+          289,  441,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,  136,    0,  136,  136,  136,  136, 
-          136,    0,    0,  647,    0,  136,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  518,    0,  647,    0, 
-            0,    0,  647,    0,  518,    0,    0,    0,  136,  136, 
+          136,    0,    0,  649,    0,  136,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  520,    0,  649,    0, 
+            0,    0,  649,    0,  520,    0,    0,    0,  136,  136, 
             0,    0,    0,    0,    0,    0,  136,  136,  136,  136, 
             0,    0,    0,  796,    0,    0,    0,    0,    0,    0, 
-          647,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          649,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,  386,  387,  388,  389,  390,  391,  392, 
           393,  394,  395,  396,    0,  397,  398,    0,    0,  399, 
-          400,  545,  136,  545,  545,  545,  545,  545,    0,    0, 
-            0,    0,  545,    0,  115,  401,    0,  402,  327,  403, 
-          404,  405,  406,  407,  408,  409,    0,  410,  327,    0, 
-            0,    0,    0,    0,    0,  545,    0,    0,    0,    0, 
-            0,    0,    0,  545,  545,  545,  545,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  327,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  519,    0,  327,    0,    0, 
-            0,  327,  519,  519,    0,    0,    0,    0,    0,  545, 
+          400,  547,  136,  547,  547,  547,  547,  547,    0,    0, 
+            0,    0,  547,    0,  115,  401,    0,  402,  329,  403, 
+          404,  405,  406,  407,  408,  409,    0,  410,  329,    0, 
+            0,    0,    0,    0,    0,  547,    0,    0,    0,    0, 
+            0,    0,    0,  547,  547,  547,  547,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  329,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  521,    0,  329,    0,    0, 
+            0,  329,  521,  521,    0,    0,    0,    0,    0,  547, 
             0,  386,  387,  388,  389,  390,  391,  392,  393,  394, 
-          395,  396,    0,  397,  398,    0,    0,  399,  400,  327, 
+          395,  396,    0,  397,  398,    0,    0,  399,  400,  329, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,  401,    0,  402,    0,  403,  404,  405, 
-          406,  407,  408,  409,    0,  410,  287,  287,  287,    0, 
-          287,  647,  647,  647,  287,  287,  647,  647,  647,  287, 
-          647,  287,  287,  287,  287,  287,  287,  287,    0,  647, 
-          647,  647,  287,  287,  287,  287,  287,  287,  287,  647, 
-          647,  287,  647,  647,  647,  647,  647,    0,  287,    0, 
-            0,  287,  287,  287,    0,  287,  287,  287,  287,  287, 
-          287,  287,  287,  287,  287,  287,  647,  647,  647,  647, 
-          647,  647,  647,  647,  647,  647,  647,  647,  647,  647, 
-          258,    0,  647,  647,  647,  647,  287,  625,  647,  287, 
-          258,  647,  287,  287,  647,  287,  647,  287,  647,  287, 
-          647,  287,  647,  647,  647,  647,  647,  647,  647,  287, 
-          647,  647,  647,    0,  287,  287,  287,  287,  287,  287, 
-            0,  625,    0,  287,  258,  287,  287,    0,  287,  287, 
-          287,  287,    0,    0,    0,    0,  625,    0,  258,  258, 
-            0,  287,  287,  287,  647,  287,  287,  287,    0,  287, 
-          327,  327,  327,  287,  287,  327,  327,  327,  287,  327, 
-          287,  287,  287,  287,  287,  287,  287,    0,  625,  327, 
-          327,  287,  287,  287,  287,  287,  287,  287,  327,  327, 
-          287,  327,  327,  327,  327,  327,    0,  287,    0,    0, 
-          287,  287,  287,    0,  287,  287,  287,  287,  287,  287, 
-          287,  287,  287,  287,  287,  327,  327,  327,  327,  327, 
-          327,  327,  327,  327,  327,  327,  327,  327,  327,    0, 
-            0,  327,  327,  327,  327,  287,    0,  327,  287,    0, 
-          327,  287,  287,  327,  287,  327,  287,  327,  287,  327, 
-          287,  327,  327,  327,  327,  327,  327,  327,  287,  327, 
-          515,  327,    0,  287,  287,  287,  287,  287,  287,    0, 
-          515,    0,  287,    0,  287,  287,    0,  287,  287,  287, 
-          287,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          287,  287,  287,  327,  550,    0,  551,  552,  553,  554, 
+          406,  407,  408,  409,    0,  410,  289,  289,  289,    0, 
+          289,  649,  649,  649,  289,  289,  649,  649,  649,  289, 
+          649,  289,  289,  289,  289,  289,  289,  289,    0,  649, 
+          649,  649,  289,  289,  289,  289,  289,  289,  289,  649, 
+          649,  289,  649,  649,  649,  649,  649,    0,  289,    0, 
+            0,  289,  289,  289,    0,  289,  289,  289,  289,  289, 
+          289,  289,  289,  289,  289,  289,  649,  649,  649,  649, 
+          649,  649,  649,  649,  649,  649,  649,  649,  649,  649, 
+          260,    0,  649,  649,  649,  649,  289,  627,  649,  289, 
+          260,  649,  289,  289,  649,  289,  649,  289,  649,  289, 
+          649,  289,  649,  649,  649,  649,  649,  649,  649,  289, 
+          649,  649,  649,    0,  289,  289,  289,  289,  289,  289, 
+            0,  627,    0,  289,  260,  289,  289,    0,  289,  289, 
+          289,  289,    0,    0,    0,    0,  627,    0,  260,  260, 
+            0,  289,  289,  289,  649,  289,  289,  289,    0,  289, 
+          329,  329,  329,  289,  289,  329,  329,  329,  289,  329, 
+          289,  289,  289,  289,  289,  289,  289,    0,  627,  329, 
+          329,  289,  289,  289,  289,  289,  289,  289,  329,  329, 
+          289,  329,  329,  329,  329,  329,    0,  289,    0,    0, 
+          289,  289,  289,    0,  289,  289,  289,  289,  289,  289, 
+          289,  289,  289,  289,  289,  329,  329,  329,  329,  329, 
+          329,  329,  329,  329,  329,  329,  329,  329,  329,    0, 
+            0,  329,  329,  329,  329,  289,    0,  329,  289,    0, 
+          329,  289,  289,  329,  289,  329,  289,  329,  289,  329, 
+          289,  329,  329,  329,  329,  329,  329,  329,  289,  329, 
+          517,  329,    0,  289,  289,  289,  289,  289,  289,    0, 
+          517,    0,  289,    0,  289,  289,    0,  289,  289,  289, 
+          289,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          289,  289,  289,  329,  550,    0,  551,  552,  553,  554, 
           555,    0,    0,    0,   92,  556,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  515, 
-            0,  111,    0,  515,    0,    0,    0,    0,  557,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  517, 
+            0,  111,    0,  517,    0,    0,    0,    0,  557,    0, 
             0,    0,    0,    0,    0,    0,  559,  560,  561,  562, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  515,  258,  258,  258,    0,    0,  258,  258,  258, 
-            0,  258,    0,    0,    0,    0,    0,  625,    0,    0, 
-            0,  258,  258,    0,    0,    0,    0,    0,    0,    0, 
-          258,  258,  563,  258,  258,  258,  258,  258,    0,    0, 
-            0,    0,    0,    0,    0,  258,    0,    0,    0,  518, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  518, 
-            0,    0,    0,    0,    0,  625,    0,    0,    0,    0, 
-            0,    0,  625,  625,    0,    0,    0,    0,  621,  258, 
-            0,    0,  258,    0,    0,  258,    0,  258,    0,    0, 
-            0,    0,    0,   95,    0,    0,  625,    0,    0,  625, 
-            0,    0,    0,  258,    0,  635,  629,    0,  518,  636, 
-          114,    0,  518,  188,  189,  258,  190,  191,  192,  193, 
+            0,  517,  260,  260,  260,    0,    0,  260,  260,  260, 
+            0,  260,    0,    0,    0,    0,    0,  627,    0,    0, 
+            0,  260,  260,    0,    0,    0,    0,    0,    0,    0, 
+          260,  260,  563,  260,  260,  260,  260,  260,    0,    0, 
+            0,    0,    0,    0,    0,  260,    0,    0,    0,  520, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  520, 
+            0,    0,    0,    0,    0,  627,    0,    0,    0,    0, 
+            0,    0,  627,  627,    0,    0,    0,    0,  623,  260, 
+            0,    0,  260,    0,    0,  260,    0,  260,    0,    0, 
+            0,    0,    0,   95,    0,    0,  627,    0,    0,  627, 
+            0,    0,    0,  260,    0,  635,  629,    0,  520,  636, 
+          114,    0,  520,  188,  189,  260,  190,  191,  192,  193, 
           194,  195,  196,    0,    0,  197,  198,    0,    0,    0, 
-          199,  200,  201,  202,    0,  258,    0,    0,    0,    0, 
-          518,    0,    0,    0,    0,    0,    0,  204,  205,    0, 
+          199,  200,  201,  202,    0,  260,    0,    0,    0,    0, 
+          520,    0,    0,    0,    0,    0,    0,  204,  205,    0, 
           206,  207,  208,  209,  210,  211,  212,  213,  214,  215, 
-          216,    0,    0,  217,    0,    0,    0,  618,  618,  618, 
-            0,  618,  515,  515,  515,  618,  618,    0,  515,  515, 
-          618,  515,  618,  618,  618,  618,  618,  618,  618,    0, 
-          618,    0,    0,  618,  618,  618,  618,  618,  618,  618, 
-          515,  515,  618,  515,  515,  515,  515,  515,    0,  618, 
-            0,    0,  618,  618,  618,    0,  618,  618,  618,  618, 
-          618,  618,  618,  618,  618,  618,  618,  515,  515,  515, 
-          515,  515,  515,  515,  515,  515,  515,  515,  515,  515, 
-          515,    0,    0,  515,  515,  515,  515,  618,  527,  111, 
-          618,  618,  515,  618,  618,    0,  618,    0,  618,  515, 
-          618,  515,  618,  515,  515,  515,  515,  515,  515,  515, 
-          618,  515,  618,  515,    0,  618,  618,  618,  618,  618, 
-          618,    0,  881,    0,  618,  881,  618,  618,    0,  618, 
-          618,  618,  618,    0,  893,    0,    0,    0,  111,    0, 
-          129,    0,  618,  618,  618,  515,  619,  619,  619,    0, 
-          619,  518,  518,  518,  619,  619,    0,  518,  518,  619, 
-          518,  619,  619,  619,  619,  619,  619,  619,    0,  619, 
-          515,    0,  619,  619,  619,  619,  619,  619,  619,  518, 
-          518,  619,  518,  518,  518,  518,  518,    0,  619,  129, 
-            0,  619,  619,  619,    0,  619,  619,  619,  619,  619, 
-          619,  619,  619,  619,  619,  619,  518,  518,  518,  518, 
-          518,  518,  518,  518,  518,  518,  518,  518,  518,  518, 
-            0,  310,  518,  518,  518,  518,  619,  530,    0,  619, 
-          619,  518,  619,  619,    0,  619,    0,  619,  518,  619, 
-          518,  619,  518,  518,  518,  518,  518,  518,  518,  619, 
-          518,  619,  518,    0,  619,  619,  619,  619,  619,  619, 
-            0,    0,  625,  619,    0,  619,  619,    0,  619,  619, 
-          619,  619,  625,    0,    0,    0,    0,    0,    0,    0, 
-            0,  619,  619,  619,  518,    0,    0,    0,    0,    0, 
+          216,    0,    0,  217,    0,    0,    0,  620,  620,  620, 
+            0,  620,  517,  517,  517,  620,  620,    0,  517,  517, 
+          620,  517,  620,  620,  620,  620,  620,  620,  620,    0, 
+          620,    0,    0,  620,  620,  620,  620,  620,  620,  620, 
+          517,  517,  620,  517,  517,  517,  517,  517,    0,  620, 
+            0,    0,  620,  620,  620,    0,  620,  620,  620,  620, 
+          620,  620,  620,  620,  620,  620,  620,  517,  517,  517, 
+          517,  517,  517,  517,  517,  517,  517,  517,  517,  517, 
+          517,    0,    0,  517,  517,  517,  517,  620,  529,  111, 
+          620,  620,  517,  620,  620,    0,  620,    0,  620,  517, 
+          620,  517,  620,  517,  517,  517,  517,  517,  517,  517, 
+          620,  517,  620,  517,    0,  620,  620,  620,  620,  620, 
+          620,    0,  881,    0,  620,  881,  620,  620,    0,  620, 
+          620,  620,  620,    0,  893,    0,    0,    0,  111,    0, 
+          129,    0,  620,  620,  620,  517,  621,  621,  621,    0, 
+          621,  520,  520,  520,  621,  621,    0,  520,  520,  621, 
+          520,  621,  621,  621,  621,  621,  621,  621,    0,  621, 
+          517,    0,  621,  621,  621,  621,  621,  621,  621,  520, 
+          520,  621,  520,  520,  520,  520,  520,    0,  621,  129, 
+            0,  621,  621,  621,    0,  621,  621,  621,  621,  621, 
+          621,  621,  621,  621,  621,  621,  520,  520,  520,  520, 
+          520,  520,  520,  520,  520,  520,  520,  520,  520,  520, 
+            0,  312,  520,  520,  520,  520,  621,  532,    0,  621, 
+          621,  520,  621,  621,    0,  621,    0,  621,  520,  621, 
+          520,  621,  520,  520,  520,  520,  520,  520,  520,  621, 
+          520,  621,  520,    0,  621,  621,  621,  621,  621,  621, 
+            0,    0,  627,  621,    0,  621,  621,    0,  621,  621, 
+          621,  621,  627,    0,    0,    0,    0,    0,    0,    0, 
+            0,  621,  621,  621,  520,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,  106,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  625,    0,  125,    0,  625,    0,    0,    0,    0, 
+            0,  627,    0,  125,    0,  627,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,  893,    0,    0,  893,    0, 
           881,    0,  893,    0,    0,    0,  111,    0,    0,    0, 
-            0,    0,    0,  625,    0,    0,    0,    0,    0,  618, 
+            0,    0,    0,  627,    0,    0,    0,    0,    0,  620, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,  129,    0,    0, 
-            0,  621,    0,    0,    0,    0,    0,  515,    0,    0, 
-            0,  621,    0,    0,  515,  515,    0,    0,    0,    0, 
-          618,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  623,    0,    0,    0,    0,    0,  517,    0,    0, 
+            0,  623,    0,    0,  517,  517,    0,    0,    0,    0, 
+          620,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
           893,    0,  893,    0,  893,    0,    0,  893,    0,    0, 
-            0,  618,    0,    0,    0,  105,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  310,    0, 
-          621,    0,  124,  893,  621,  310,  310,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  621,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  621, 
-          621,  621,    0,  621,  625,  625,  625,  621,  621,    0, 
-          625,  625,  621,  625,  621,  621,  621,  621,  621,  621, 
-          621,    0,  625,    0,    0,  621,  621,  621,  621,  621, 
-          621,  621,  625,  625,  621,  625,  625,  625,  625,  625, 
-            0,  621,    0,    0,  621,  621,  621,    0,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  625, 
-          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
-          625,  625,  625,    0,    0,  625,  625,  625,  625,  621, 
-            0,  114,  621,  621,  625,  621,  621,    0,  621,    0, 
-          621,  625,  621,  625,  621,  625,  625,  625,  625,  625, 
-          625,  625,  621,  625,  625,  625,    0,  621,  621,  621, 
-          621,  621,  621, 
+            0,  620,    0,    0,    0,  105,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  312,    0, 
+          623,    0,  124,  893,  623,  312,  312,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  623,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  623, 
+          623,  623,    0,  623,  627,  627,  627,  623,  623,    0, 
+          627,  627,  623,  627,  623,  623,  623,  623,  623,  623, 
+          623,    0,  627,    0,    0,  623,  623,  623,  623,  623, 
+          623,  623,  627,  627,  623,  627,  627,  627,  627,  627, 
+            0,  623,    0,    0,  623,  623,  623,    0,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  627, 
+          627,  627,  627,  627,  627,  627,  627,  627,  627,  627, 
+          627,  627,  627,    0,    0,  627,  627,  627,  627,  623, 
+            0,  114,  623,  623,  627,  623,  623,    0,  623,    0, 
+          623,  627,  623,  627,  623,  627,  627,  627,  627,  627, 
+          627,  627,  623,  627,  627,  627,    0,  623,  623,  623, 
+          623,  623,  623,    0,    0,    0,  623,    0,  623,  623, 
+            0,  623,  623,  623,  623,    0,    0,    0,    0,    0, 
+          114,    0,  128,    0,  623,  623,  623,  627,  623,  623, 
+          623,    0,  623,  623,  623,  623,  623,  623,    0,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+            0,  623,  520,    0,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,    0, 
+          623,  128,    0,  623,  623,  623,    0,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
       };
    }
 
    private static final short[] yyTable2() {
       return new short[] {
 
-            0,    0,    0,  621,    0,  621,  621,    0,  621,  621, 
-          621,  621,    0,    0,    0,    0,    0,  114,    0,  128, 
-            0,  621,  621,  621,  625,  621,  621,  621,    0,  621, 
-          621,  621,  621,  621,  621,    0,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,    0,  621,  518, 
-            0,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,    0,  621,  128,    0, 
-          621,  621,  621,    0,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,    0, 
-          321,  621,  621,  621,  621,  621,    0,    0,  621,  621, 
-          621,  621,  621,    0,  621,    0,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,    0,  621,  621,  621,  621,  621,  621,    0, 
-            0,  622,  621,    0,  621,  621,    0,  621,  621,  621, 
-          621,  622,    0,    0,    0,    0,    0,    0,    0,    0, 
-          621,  621,  621,  621,    0,    0,  620,  621,    0,    0, 
-          622,    0,    0,    0,  188,  189,    0,  190,  191,  192, 
-          193,  194,  195,  196,    0,  107,  197,  198,    0,    0, 
-            0,  199,  200,  201,  202,    0,    0,    0,    0,    0, 
-          622,  304,  126,    0,  622,    0,    0,    0,  204,  205, 
-            0,  206,  207,  208,  209,  210,  211,  212,  213,  214, 
-          215,  216,    0,    0,  217,  114,    0,    0,    0,    0, 
-            0,    0,  622,    0,    0,    0,    0,    0,  619,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  128,    0,    0,    0, 
-          625,    0,    0,    0,    0,    0,  518,    0,    0,    0, 
-          625,    0,    0,  518,  518,    0,    0,    0,    0,  619, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          619,    0,    0,    0,  625,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  321,    0,  625, 
-            0,  125,    0,  625,  321,  321,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  625,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  622,  622, 
-          622,    0,  622,  622,  622,  622,  622,  622,    0,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-            0,  622,    0,    0,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,    0, 
-          622,    0,    0,  622,  622,  622,    0,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,    0,    0,  622,  622,  622,  622,  622,    0, 
-          125,  622,  622,  622,  622,  622,    0,  622,    0,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,    0,  622,  622,  622,  622, 
-          622,  622,    0,    0,    0,  622,    0,  622,  622,    0, 
-          622,  622,  622,  622,    0,    0,    0,    0,    0,  125, 
-            0,    0,    0,  622,  622,  622,  622,  621,  621,  621, 
-            0,  621,  625,  625,  625,  621,  621,    0,  625,  625, 
-          621,  625,  621,  621,  621,  621,  621,  621,  621,    0, 
-          625,  625,    0,  621,  621,  621,  621,  621,  621,  621, 
-          625,  625,  621,  625,  625,  625,  625,  625,    0,  621, 
-            0,    0,  621,  621,  621,    0,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  625,  625,  625, 
-          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
-          625,    0,    0,  625,  625,  625,  625,  621,    0,    0, 
-          621,  621,  625,  621,  621,    0,  621,    0,  621,  625, 
-          621,  625,  621,  625,  625,  625,  625,  625,  625,  625, 
-          621,  625,  625,  625,    0,  621,  621,  621,  621,  621, 
-          621,    0,    0,  621,  621,    0,  621,  621,    0,  621, 
-          621,  621,  621,  621,    0,    0,    0,    0,    0,    0, 
-            0,    0,  621,  621,  621,  625,    0,    0,  628,  629, 
-            0,    0,  630,    0,    0,    0,  188,  189,    0,  190, 
-          191,  192,  193,  194,  195,  196,    0,  621,  197,  198, 
-            0,    0,    0,  199,  200,  201,  202,    0,    0,    0, 
-            0,    0,  621,  304,  124,    0,  621,    0,    0,    0, 
-          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, 
-          213,  214,  215,  216,    0,    0,  217,  125,    0,    0, 
-            0,    0,    0,    0,  621,    0,    0,    0,    0,    0, 
-          625,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,    0,  323,  623,  623,  623,  623,  623,    0, 
+            0,  623,  623,  623,  623,  623,    0,  623,    0,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,    0,  623,  623,  623,  623, 
+          623,  623,    0,    0,  624,  623,    0,  623,  623,    0, 
+          623,  623,  623,  623,  624,    0,    0,    0,    0,    0, 
+            0,    0,    0,  623,  623,  623,  623,    0,    0,  620, 
+          621,    0,    0,  622,    0,    0,    0,  188,  189,    0, 
+          190,  191,  192,  193,  194,  195,  196,    0,  107,  197, 
+          198,    0,    0,    0,  199,  200,  201,  202,    0,    0, 
+            0,    0,    0,  624,  304,  126,    0,  624,    0,    0, 
+            0,  204,  205,    0,  206,  207,  208,  209,  210,  211, 
+          212,  213,  214,  215,  216,    0,    0,  217,  114,    0, 
+            0,    0,    0,    0,    0,  624,    0,    0,    0,    0, 
+            0,  621,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  128, 
+            0,    0,    0,  627,    0,    0,    0,    0,    0,  520, 
+            0,    0,    0,  627,    0,    0,  520,  520,    0,    0, 
+            0,    0,  621,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  621,    0,    0,    0,  627,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          323,    0,  627,    0,  125,    0,  627,  323,  323,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  622,    0,    0,    0,    0,    0,  625,    0, 
-            0,    0,  622,    0,    0,  625,  625,    0,    0,    0, 
-            0,  621,    0,    0,  669,  621,    0,    0,  670,    0, 
-            0,    0,  188,  189,    0,  190,  191,  192,  193,  194, 
-          195,  196,  625,    0,  197,  198,  622,    0,    0,  199, 
-          200,  201,  202,    0,    0,    0,    0,    0,    0,  304, 
-            0,  622,    0,  126,    0,  622,  204,  205,    0,  206, 
-          207,  208,  209,  210,  211,  212,  213,  214,  215,  216, 
-            0,    0,  217,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  622,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          621,  621,  621,    0,  621,  621,  621,  621,  621,  621, 
-            0,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,    0,  621,    0,    0,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,    0,  621,    0,    0,  621,  621,  621,    0,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,    0,    0,  621,  621,  621,  621, 
-          621,    0,  124,  621,  621,  621,  621,  621,    0,  621, 
-            0,  621,  621,  621,  621,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  621,    0,  621,  621, 
-          621,  621,  621,  621,    0,    0,    0,  621,    0,  621, 
-          621,    0,  621,  621,  621,  621,    0,    0,    0,    0, 
-            0,  124,    0,    0,    0,  621,  621,  621,  621,  622, 
-          622,  622,    0,  622,  622,  622,  622,  622,  622,    0, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,    0,  622,  621,    0,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-            0,  622,    0,    0,  622,  622,  622,    0,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,    0,    0,  622,  622,  622,  622,  622, 
-            0,    0,  622,  622,  622,  622,  622,    0,  622,    0, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,    0,  622,  622,  622, 
-          622,  622,  622,    0,    0,  320,  622,    0,  622,  622, 
-            0,  622,  622,  622,  622,  320,    0,    0,  101,    0, 
-            0,    0,    0,    0,  622,  622,  622,  622,    0,    0, 
-          635,  629,    0,    0,  636,    0,    0,    0,  188,  189, 
-            0,  190,  191,  192,  193,  194,  195,  196,    0,  108, 
-          197,  198,  101,    0,    0,  199,  200,  201,  202,    0, 
-            0,    0,    0,    0,  320,  304,  127,    0,  320,  101, 
-            0,    0,  204,  205,    0,  206,  207,  208,  209,  210, 
-          211,  212,  213,  214,  215,  216,    0,    0,  217,  124, 
-            0,    0,    0,    0,    0,    0,  320,    0,    0,  524, 
-            0,    0,  621,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  627,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  320,    0,    0,    0,    0,    0, 
-          621,    0,    0,    0,  320,    0,    0,  621,  621,    0, 
-            0,    0,    0,  621,    0,    0,  687,  621,    0,    0, 
-          688,    0,    0,    0,  188,  189,    0,  190,  191,  192, 
-          193,  194,  195,  196,  621,    0,  197,  198,  320,    0, 
-            0,  199,  200,  201,  202,    0,    0,    0,    0,    0, 
-            0,  304,    0,  320,    0,  127,    0,  320,  204,  205, 
-            0,  206,  207,  208,  209,  210,  211,  212,  213,  214, 
-          215,  216,    0,    0,  217,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  320,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  622,  622,  622,    0,  622,  320,  320,  320, 
-          622,  622,    0,  320,  320,  622,  320,  622,  622,  622, 
-          622,  622,  622,  622,    0,    0,    0,  101,  622,  622, 
-          622,  622,  622,  622,  622,  320,  320,  622,  320,  320, 
-          320,  320,  320,    0,  622,    0,    0,  622,  622,  622, 
-            0,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  320,  320,  320,  320,  320,  320,  320,  320, 
-          320,  320,  320,  320,  320,  320,  524,    0,  320,  320, 
-          320,  320,  622,  524,  524,  622,  622,  320,  622,  622, 
-          101,  622,    0,  622,  320,  622,  320,  622,  320,  320, 
-          320,  320,  320,  320,  320,  622,  320,  647,  320,    0, 
-          622,  622,  622,  622,  622,  622,    0,  647,    0,  622, 
-            0,  622,  622,    0,  622,  622,  622,  622,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  622,  622,  622, 
-          320,  622,  622,  622,    0,  622,  320,  320,  320,  622, 
-          622,    0,  320,  320,  622,  320,  622,  622,  622,  622, 
-          622,  622,  622,    0,    0,    0,  647,  622,  622,  622, 
-          622,  622,  622,  622,  320,  320,  622,  320,  320,  320, 
-          320,  320,    0,  622,    0,    0,  622,  622,  622,    0, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  320,  320,  320,  320,  320,  320,  320,  320,  320, 
-          320,  320,  320,  320,  320,    0,    0,  320,  320,  320, 
-          320,  622,    0,    0,  622,  622,  320,  622,  622,    0, 
-          622,    0,  622,  320,  622,  320,  622,  320,  320,  320, 
-          320,  320,  320,  320,  622,  320,  440,  320,    0,  622, 
-          622,  622,  622,  622,  622,    0,  440,    0,  622,    0, 
-          622,  622,    0,  622,  622,  622,  622,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  622,  622,  622,  320, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          440,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  440,  440,    0,  123,    0,  440, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  440,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  126,    0,    0,    0, 
-            0,    0,    0,    0,  287,  287,  287,    0,  287,  647, 
-          647,  647,  287,  287,  647,  647,  647,  287,  647,  287, 
-          287,  287,  287,  287,  287,  287,    0,  647,  647,    0, 
-          287,  287,  287,  287,  287,  287,  287,  647,  647,  287, 
-          647,  647,  647,  647,  647,  126,  287,    0,    0,  287, 
-          287,  287,    0,  287,  287,  287,  287,  287,  287,  287, 
-          287,  287,  287,  287,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  647,    0,  622,    0,    0, 
-            0,    0,  647,  647,  287,    0,    0,  287,    0,  647, 
-          287,  287,    0,  287,    0,  287,    0,  287,    0,  287, 
-            0,  439,    0,    0,    0,    0,    0,  287,    0,  647, 
-          647,  439,  287,  287,  287,  287,  287,  287,    0,    0, 
-            0,  287,    0,  287,  287,    0,  287,  287,  287,  287, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  287, 
-          287,  287,  647,    0,    0,  439,    0,    0,  440,  440, 
-          440,    0,    0,  440,  440,  440,    0,  440,    0,  439, 
-          439,    0,    0,    0,  439,    0,  440,  440,  440,    0, 
-            0,    0,    0,    0,    0,    0,  440,  440,    0,  440, 
-          440,  440,  440,  440,    0,    0,    0,    0,    0,    0, 
-            0,  440,  439,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  440,  440,  440,  440,  440,  440,  440, 
-          440,  440,  440,  440,  440,  440,  440,    0,    0,  440, 
-          440,  440,  440,    0,  521,  440,    0,    0,  440,    0, 
-            0,  440,    0,  440,  521,  440,    0,  440,    0,  440, 
-          440,  440,  440,  440,  440,  440,    0,  440,  440,  440, 
-            0,    0,    0,  126,    0,    0,    0,    0,    0,    0, 
-            0,  440,    0,    0,    0,    0,  622,    0,  521,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  440,  521,  521,    0,  117,    0,  521,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  622,  521,    0,    0,    0,    0, 
-            0,  622,  622,    0,    0,    0,    0,  622,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  520,    0,    0,    0,    0,    0,    0,  622,    0, 
-            0,  520,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  439,  439,  439,    0,    0,  439,  439, 
-          439,    0,  439,    0,    0,    0,    0,    0,    0,    0, 
-            0,  439,  439,  439,    0,  520,    0,    0,    0,    0, 
-            0,  439,  439,    0,  439,  439,  439,  439,  439,  520, 
-          520,    0,  116,    0,  520,    0,  439,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  439,  439, 
-          439,  439,  439,  439,  439,  439,  439,  439,  439,  439, 
-          439,  439,  520,    0,  439,  439,  439,  439,    0,    0, 
-          439,    0,    0,  439,    0,    0,  439,    0,  439,    0, 
-          439,  103,  439,    0,  439,  439,  439,  439,  439,  439, 
-          439,    0,  439,  439,  439,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  439,    0,    0,    0, 
-            0,    0,    0,    0,    0,  103,  521,  521,  521,    0, 
-            0,  521,  521,  521,    0,  521,  439,    0,    0,    0, 
-            0,    0,  103,    0,    0,  521,  521,    0,    0,    0, 
-            0,    0,    0,    0,  521,  521,    0,  521,  521,  521, 
-          521,  521,    0,    0,    0,    0,    0,    0,    0,  521, 
-          522,    0,  526,    0,    0,    0,    0,    0,    0,    0, 
-          522,  521,  521,  521,  521,  521,  521,  521,  521,  521, 
-          521,  521,  521,  521,  521,    0,    0,  521,  521,  521, 
-          521,    0,  533,  521,    0,    0,  521,    0,    0,  521, 
-            0,  521,    0,  521,  522,  521,    0,  521,  521,  521, 
-          521,  521,  521,  521,    0,  521,    0,  521,  522,  522, 
-            0,  118,    0,  522,    0,    0,    0,    0,    0,  521, 
-            0,    0,    0,  520,  520,  520,    0,    0,  520,  520, 
-          520,    0,  520,    0,    0,    0,    0,    0,    0,  521, 
-            0,  522,  520,  520,    0,    0,    0,    0,    0,    0, 
-            0,  520,  520,    0,  520,  520,  520,  520,  520,    0, 
-            0,    0,    0,    0,    0,    0,  520,  523,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  523,  520,  520, 
-          520,  520,  520,  520,  520,  520,  520,  520,  520,  520, 
-          520,  520,    0,    0,  520,  520,  520,  520,    0,  532, 
-          520,    0,    0,  520,    0,    0,  520,    0,  520,    0, 
-          520,  523,  520,    0,  520,  520,  520,  520,  520,  520, 
-          520,    0,  520,    0,  520,  523,  523,    0,  119,    0, 
-          523,    0,    0,    0,    0,    0,  520,    0,    0,    0, 
-          103,    0,   94,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  520,    0,  523,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,   94,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  526, 
-          525,    0,    0,   94,    0,    0,  526,  526,    0,    0, 
-          525,    0,    0,  103,    0,    0,    0,    0,    0,    0, 
-            0,    0,  522,  522,  522,    0,    0,  522,  522,  522, 
-            0,  522,    0,  517,    0,    0,    0,    0,    0,    0, 
-            0,  522,  522,    0,  525,    0,    0,    0,    0,    0, 
-          522,  522,    0,  522,  522,  522,  522,  522,  525,  525, 
-            0,  121,    0,  525,    0,  522,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  522,  522,  522, 
-          522,  522,  522,  522,  522,  522,  522,  522,  522,  522, 
-          522,  525,    0,  522,  522,  522,  522,    0,  534,  522, 
-            0,    0,  522,   93,    0,  522,    0,  522,    0,  522, 
-            0,  522,    0,  522,  522,  522,  522,  522,  522,  522, 
-           57,  522,    0,  522,    0,    0,    0,    0,    0,    0, 
-           57,    0,    0,    0,    0,  522,    0,   93,    0,  523, 
-          523,  523,    0,    0,  523,  523,  523,    0,  523,    0, 
-            0,    0,    0,    0,   93,  522,    0,    0,  523,  523, 
+            0,  624,  624,  624,    0,  624,  624,  624,  624,  624, 
+          624,    0,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,    0,  624,    0,    0,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,    0,  624,    0,    0,  624,  624,  624,    0, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,    0,    0,  624,  624,  624, 
+          624,  624,    0,  125,  624,  624,  624,  624,  624,    0, 
+          624,    0,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,    0,  624, 
+          624,  624,  624,  624,  624,    0,    0,    0,  624,    0, 
+          624,  624,    0,  624,  624,  624,  624,    0,    0,    0, 
+            0,    0,  125,    0,    0,    0,  624,  624,  624,  624, 
+          623,  623,  623,    0,  623,  627,  627,  627,  623,  623, 
+            0,  627,  627,  623,  627,  623,  623,  623,  623,  623, 
+          623,  623,    0,  627,  627,    0,  623,  623,  623,  623, 
+          623,  623,  623,  627,  627,  623,  627,  627,  627,  627, 
+          627,    0,  623,    0,    0,  623,  623,  623,    0,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          627,  627,  627,  627,  627,  627,  627,  627,  627,  627, 
+          627,  627,  627,  627,    0,    0,  627,  627,  627,  627, 
+          623,    0,    0,  623,  623,  627,  623,  623,    0,  623, 
+            0,  623,  627,  623,  627,  623,  627,  627,  627,  627, 
+          627,  627,  627,  623,  627,  627,  627,    0,  623,  623, 
+          623,  623,  623,  623,    0,    0,  623,  623,    0,  623, 
+          623,    0,  623,  623,  623,  623,  623,    0,    0,    0, 
+            0,    0,    0,    0,    0,  623,  623,  623,  627,    0, 
+            0,  628,  629,    0,    0,  630,    0,    0,    0,  188, 
+          189,    0,  190,  191,  192,  193,  194,  195,  196,    0, 
+          623,  197,  198,    0,    0,    0,  199,  200,  201,  202, 
+            0,    0,    0,    0,    0,  623,  304,  124,    0,  623, 
+            0,    0,    0,  204,  205,    0,  206,  207,  208,  209, 
+          210,  211,  212,  213,  214,  215,  216,    0,    0,  217, 
+          125,    0,    0,    0,    0,    0,    0,  623,    0,    0, 
+            0,    0,    0,  627,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  624,    0,    0,    0,    0, 
+            0,  627,    0,    0,    0,  624,    0,    0,  627,  627, 
+            0,    0,    0,    0,  623,    0,    0,  669,  621,    0, 
+            0,  670,    0,    0,    0,  188,  189,    0,  190,  191, 
+          192,  193,  194,  195,  196,  627,    0,  197,  198,  624, 
+            0,    0,  199,  200,  201,  202,    0,    0,    0,    0, 
+            0,    0,  304,    0,  624,    0,  126,    0,  624,  204, 
+          205,    0,  206,  207,  208,  209,  210,  211,  212,  213, 
+          214,  215,  216,    0,    0,  217,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  624,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  623,  623,  623,    0,  623,  623,  623, 
+          623,  623,  623,    0,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,    0,  623,    0,    0,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,    0,  623,    0,    0,  623,  623, 
+          623,    0,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,    0,    0,  623, 
+          623,  623,  623,  623,    0,  124,  623,  623,  623,  623, 
+          623,    0,  623,    0,  623,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
+            0,  623,  623,  623,  623,  623,  623,    0,    0,    0, 
+          623,    0,  623,  623,    0,  623,  623,  623,  623,    0, 
+            0,    0,    0,    0,  124,    0,    0,    0,  623,  623, 
+          623,  623,  624,  624,  624,    0,  624,  624,  624,  624, 
+          624,  624,    0,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,    0,  624,  623,    0,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,    0,  624,    0,    0,  624,  624,  624, 
+            0,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,    0,    0,  624,  624, 
+          624,  624,  624,    0,    0,  624,  624,  624,  624,  624, 
+            0,  624,    0,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,    0, 
+          624,  624,  624,  624,  624,  624,    0,    0,  322,  624, 
+            0,  624,  624,    0,  624,  624,  624,  624,  322,    0, 
+            0,  101,    0,    0,    0,    0,    0,  624,  624,  624, 
+          624,    0,    0,  635,  629,    0,    0,  636,    0,    0, 
+            0,  188,  189,    0,  190,  191,  192,  193,  194,  195, 
+          196,    0,  108,  197,  198,  101,    0,    0,  199,  200, 
+          201,  202,    0,    0,    0,    0,    0,  322,  304,  127, 
+            0,  322,  101,    0,    0,  204,  205,    0,  206,  207, 
+          208,  209,  210,  211,  212,  213,  214,  215,  216,    0, 
+            0,  217,  124,    0,    0,    0,    0,    0,    0,  322, 
+            0,    0,  526,    0,    0,  623,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  322,    0,    0, 
+            0,    0,    0,  623,    0,    0,    0,  322,    0,    0, 
+          623,  623,    0,    0,    0,    0,  623,    0,    0,  687, 
+          621,    0,    0,  688,    0,    0,    0,  188,  189,    0, 
+          190,  191,  192,  193,  194,  195,  196,  623,    0,  197, 
+          198,  322,    0,    0,  199,  200,  201,  202,    0,    0, 
+            0,    0,    0,    0,  304,    0,  322,    0,  127,    0, 
+          322,  204,  205,    0,  206,  207,  208,  209,  210,  211, 
+          212,  213,  214,  215,  216,    0,    0,  217,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  322,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  624,  624,  624,    0,  624, 
+          322,  322,  322,  624,  624,    0,  322,  322,  624,  322, 
+          624,  624,  624,  624,  624,  624,  624,    0,    0,    0, 
+          101,  624,  624,  624,  624,  624,  624,  624,  322,  322, 
+          624,  322,  322,  322,  322,  322,    0,  624,    0,    0, 
+          624,  624,  624,    0,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  322,  322,  322,  322,  322, 
+          322,  322,  322,  322,  322,  322,  322,  322,  322,  526, 
+            0,  322,  322,  322,  322,  624,  526,  526,  624,  624, 
+          322,  624,  624,  101,  624,    0,  624,  322,  624,  322, 
+          624,  322,  322,  322,  322,  322,  322,  322,  624,  322, 
+          649,  322,    0,  624,  624,  624,  624,  624,  624,    0, 
+          649,    0,  624,    0,  624,  624,    0,  624,  624,  624, 
+          624,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          624,  624,  624,  322,  624,  624,  624,    0,  624,  322, 
+          322,  322,  624,  624,    0,  322,  322,  624,  322,  624, 
+          624,  624,  624,  624,  624,  624,    0,    0,    0,  649, 
+          624,  624,  624,  624,  624,  624,  624,  322,  322,  624, 
+          322,  322,  322,  322,  322,    0,  624,    0,    0,  624, 
+          624,  624,    0,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  322,  322,  322,  322,  322,  322, 
+          322,  322,  322,  322,  322,  322,  322,  322,    0,    0, 
+          322,  322,  322,  322,  624,    0,    0,  624,  624,  322, 
+          624,  624,    0,  624,    0,  624,  322,  624,  322,  624, 
+          322,  322,  322,  322,  322,  322,  322,  624,  322,  442, 
+          322,    0,  624,  624,  624,  624,  624,  624,    0,  442, 
+            0,  624,    0,  624,  624,    0,  624,  624,  624,  624, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  624, 
+          624,  624,  322,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  442,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  442,  442,    0, 
+          123,    0,  442,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          442,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  126, 
+            0,    0,    0,    0,    0,    0,    0,  289,  289,  289, 
+            0,  289,  649,  649,  649,  289,  289,  649,  649,  649, 
+          289,  649,  289,  289,  289,  289,  289,  289,  289,    0, 
+          649,  649,    0,  289,  289,  289,  289,  289,  289,  289, 
+          649,  649,  289,  649,  649,  649,  649,  649,  126,  289, 
+            0,    0,  289,  289,  289,    0,  289,  289,  289,  289, 
+          289,  289,  289,  289,  289,  289,  289,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  649,    0, 
+          624,    0,    0,    0,    0,  649,  649,  289,    0,    0, 
+          289,    0,  649,  289,  289,    0,  289,    0,  289,    0, 
+          289,    0,  289,    0,  441,    0,    0,    0,    0,    0, 
+          289,    0,  649,  649,  441,  289,  289,  289,  289,  289, 
+          289,    0,    0,    0,  289,    0,  289,  289,    0,  289, 
+          289,  289,  289,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  289,  289,  289,  649,    0,    0,  441,    0, 
+            0,  442,  442,  442,    0,    0,  442,  442,  442,    0, 
+          442,    0,  441,  441,    0,    0,    0,  441,    0,  442, 
+          442,  442,    0,    0,    0,    0,    0,    0,    0,  442, 
+          442,    0,  442,  442,  442,  442,  442,    0,    0,    0, 
+            0,    0,    0,    0,  442,  441,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  442,  442,  442,  442, 
+          442,  442,  442,  442,  442,  442,  442,  442,  442,  442, 
+            0,    0,  442,  442,  442,  442,    0,  523,  442,    0, 
+            0,  442,    0,    0,  442,    0,  442,  523,  442,    0, 
+          442,    0,  442,  442,  442,  442,  442,  442,  442,    0, 
+          442,  442,  442,    0,    0,    0,  126,    0,    0,    0, 
+            0,    0,    0,    0,  442,    0,    0,    0,    0,  624, 
+            0,  523,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  442,  523,  523,    0,  117,    0, 
+          523,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  624,  523,    0, 
+            0,    0,    0,    0,  624,  624,    0,    0,    0,    0, 
+          624,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  522,    0,    0,    0,    0,    0, 
+            0,  624,    0,    0,  522,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  441,  441,  441,    0, 
+            0,  441,  441,  441,    0,  441,    0,    0,    0,    0, 
+            0,    0,    0,    0,  441,  441,  441,    0,  522,    0, 
+            0,    0,    0,    0,  441,  441,    0,  441,  441,  441, 
+          441,  441,  522,  522,    0,  116,    0,  522,    0,  441, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  441,  441,  441,  441,  441,  441,  441,  441,  441, 
+          441,  441,  441,  441,  441,  522,    0,  441,  441,  441, 
+          441,    0,    0,  441,    0,    0,  441,    0,    0,  441, 
+            0,  441,    0,  441,  103,  441,    0,  441,  441,  441, 
+          441,  441,  441,  441,    0,  441,  441,  441,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  441, 
+            0,    0,    0,    0,    0,    0,    0,    0,  103,  523, 
+          523,  523,    0,    0,  523,  523,  523,    0,  523,  441, 
+            0,    0,    0,    0,    0,  103,    0,    0,  523,  523, 
             0,    0,    0,    0,    0,    0,    0,  523,  523,    0, 
-          523,  523,  523,  523,  523,    0,    0,    0,    0,   57, 
-            0,    0,  523,  524,  516,    0,    0,    0,    0,    0, 
+          523,  523,  523,  523,  523,    0,    0,    0,    0,    0, 
+            0,    0,  523,  524,    0,  528,    0,    0,    0,    0, 
             0,    0,    0,  524,  523,  523,  523,  523,  523,  523, 
           523,  523,  523,  523,  523,  523,  523,  523,    0,    0, 
           523,  523,  523,  523,    0,  535,  523,    0,    0,  523, 
-            0,   94,  523,    0,  523,    0,  523,  524,  523,    0, 
+            0,    0,  523,    0,  523,    0,  523,  524,  523,    0, 
           523,  523,  523,  523,  523,  523,  523,    0,  523,    0, 
-          523,  524,  524,    0,  120,    0,  524,    0,    0,    0, 
-            0,    0,  523,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  525,  525,  525,    0,    0,  525,  525,  525, 
-          517,  525,  523,    0,  524,    0,    0,  517,  517,    0, 
-            0,  525,  525,    0,   94,    0,    0,    0,    0,    0, 
+          523,  524,  524,    0,  118,    0,  524,    0,    0,    0, 
+            0,    0,  523,    0,    0,    0,  522,  522,  522,    0, 
+            0,  522,  522,  522,    0,  522,    0,    0,    0,    0, 
+            0,    0,  523,    0,  524,  522,  522,    0,    0,    0, 
+            0,    0,    0,    0,  522,  522,    0,  522,  522,  522, 
+          522,  522,    0,    0,    0,    0,    0,    0,    0,  522, 
+          525,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          525,  522,  522,  522,  522,  522,  522,  522,  522,  522, 
+          522,  522,  522,  522,  522,    0,    0,  522,  522,  522, 
+          522,    0,  534,  522,    0,    0,  522,    0,    0,  522, 
+            0,  522,    0,  522,  525,  522,    0,  522,  522,  522, 
+          522,  522,  522,  522,    0,  522,    0,  522,  525,  525, 
+            0,  119,    0,  525,    0,    0,    0,    0,    0,  522, 
+            0,    0,    0,  103,    0,   94,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  522, 
+            0,  525,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,   94, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  528,  527,    0,    0,   94,    0,    0,  528, 
+          528,    0,    0,  527,    0,    0,  103,    0,    0,    0, 
+            0,    0,    0,    0,    0,  524,  524,  524,    0,    0, 
+          524,  524,  524,    0,  524,    0,  519,    0,    0,    0, 
+            0,    0,    0,    0,  524,  524,    0,  527,    0,    0, 
+            0,    0,    0,  524,  524,    0,  524,  524,  524,  524, 
+          524,  527,  527,    0,  121,    0,  527,    0,  524,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          524,  524,  524,  524,  524,  524,  524,  524,  524,  524, 
+          524,  524,  524,  524,  527,    0,  524,  524,  524,  524, 
+            0,  536,  524,    0,    0,  524,   93,    0,  524,    0, 
+          524,    0,  524,    0,  524,    0,  524,  524,  524,  524, 
+          524,  524,  524,   57,  524,    0,  524,    0,    0,    0, 
+            0,    0,    0,   57,    0,    0,    0,    0,  524,    0, 
+           93,    0,  525,  525,  525,    0,    0,  525,  525,  525, 
+            0,  525,    0,    0,    0,    0,    0,   93,  524,    0, 
+            0,  525,  525,    0,    0,    0,    0,    0,    0,    0, 
           525,  525,    0,  525,  525,  525,  525,  525,    0,    0, 
-            0,    0,    0,    0,    0,  525,  526,    0,    0,    0, 
+            0,    0,   57,    0,    0,  525,  526,  518,    0,    0, 
             0,    0,    0,    0,    0,    0,  526,  525,  525,  525, 
           525,  525,  525,  525,  525,  525,  525,  525,  525,  525, 
           525,    0,    0,  525,  525,  525,  525,    0,  537,  525, 
-            0,    0,  525,    0,    0,  525,    0,  525,    0,  525, 
+            0,    0,  525,    0,   94,  525,    0,  525,    0,  525, 
           526,  525,    0,  525,  525,  525,  525,  525,  525,  525, 
-            0,  525,    0,  525,  526,  526,    0,  122,    0,  526, 
-            0,    0,   93,    0,    0,  525,    0,    0,    0,    0, 
-            0,    0,   57,   57,   57,    0,    0,   57,   57,   57, 
-            0,   57,    0,    0,    0,  525,    0,  526,    0,    0, 
-            0,   57,    0,    0,    0,    0,    0,    0,    0,    0, 
-           57,   57,    0,   57,   57,   57,   57,   57,    0,    0, 
-            0,  516,    0,  517,    0,    0,    0,    0,  516,  516, 
-            0,    0,    0,  517,    0,   93,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  524,  524,  524,    0,    0, 
-          524,  524,  524,    0,  524,    0,    0,    0,    0,    0, 
-            0,    0,   57,    0,  524,  524,    0,  517,    0,    0, 
-            0,    0,    0,  524,  524,    0,  524,  524,  524,  524, 
-          524,  517,  517,   57,  113,    0,  517,    0,  524,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          524,  524,  524,  524,  524,  524,  524,  524,  524,  524, 
-          524,  524,  524,  524,  517,   57,  524,  524,  524,  524, 
-            0,  536,  524,    0,    0,  524,    0,    0,  524,    0, 
-          524,    0,  524,   96,  524,    0,  524,  524,  524,  524, 
-          524,  524,  524,    0,  524,    0,  524,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  524,    0, 
-            0,    0,    0,    0,    0,    0,    0,   96,  526,  526, 
-          526,    0,    0,  526,  526,  526,    0,  526,  524,    0, 
-            0,    0,    0,    0,   96,    0,    0,  526,  526,    0, 
-            0,    0,    0,    0,    0,    0,  526,  526,    0,  526, 
-          526,  526,  526,  526,    0,    0,    0,    0,    0,    0, 
-            0,  526,  516,    0,  519,    0,    0,    0,    0,    0, 
-            0,    0,  516,  526,  526,  526,  526,  526,  526,  526, 
-          526,  526,  526,  526,  526,  526,  526,    0,    0,  526, 
+            0,  525,    0,  525,  526,  526,    0,  120,    0,  526, 
+            0,    0,    0,    0,    0,  525,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  527,  527,  527,    0,    0, 
+          527,  527,  527,  519,  527,  525,    0,  526,    0,    0, 
+          519,  519,    0,    0,  527,  527,    0,   94,    0,    0, 
+            0,    0,    0,  527,  527,    0,  527,  527,  527,  527, 
+          527,    0,    0,    0,    0,    0,    0,    0,  527,  528, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  528, 
+          527,  527,  527,  527,  527,  527,  527,  527,  527,  527, 
+          527,  527,  527,  527,    0,    0,  527,  527,  527,  527, 
+            0,  539,  527,    0,    0,  527,    0,    0,  527,    0, 
+          527,    0,  527,  528,  527,    0,  527,  527,  527,  527, 
+          527,  527,  527,    0,  527,    0,  527,  528,  528,    0, 
+          122,    0,  528,    0,    0,   93,    0,    0,  527,    0, 
+            0,    0,    0,    0,    0,   57,   57,   57,    0,    0, 
+           57,   57,   57,    0,   57,    0,    0,    0,  527,    0, 
+          528,    0,    0,    0,   57,    0,    0,    0,    0,    0, 
+            0,    0,    0,   57,   57,    0,   57,   57,   57,   57, 
+           57,    0,    0,    0,  518,    0,  519,    0,    0,    0, 
+            0,  518,  518,    0,    0,    0,  519,    0,   93,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  526,  526, 
+          526,    0,    0,  526,  526,  526,    0,  526,    0,    0, 
+            0,    0,    0,    0,    0,   57,    0,  526,  526,    0, 
+          519,    0,    0,    0,    0,    0,  526,  526,    0,  526, 
+          526,  526,  526,  526,  519,  519,   57,  113,    0,  519, 
+            0,  526,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  526,  526,  526,  526,  526,  526,  526, 
+          526,  526,  526,  526,  526,  526,  526,  519,   57,  526, 
           526,  526,  526,    0,  538,  526,    0,    0,  526,    0, 
-            0,  526,    0,  526,    0,  526,  516,  526,    0,  526, 
+            0,  526,    0,  526,    0,  526,   96,  526,    0,  526, 
           526,  526,  526,  526,  526,  526,    0,  526,    0,  526, 
-          516,  516,    0,  112,    0,  516,    0,    0,    0,    0, 
-            0,  526,    0,    0,    0,  517,  517,  517,    0,    0, 
-          517,  517,  517,    0,  517,    0,    0,    0,    0,    0, 
-            0,  526,    0,  516,  517,  517,    0,    0,    0,    0, 
-            0,    0,    0,  517,  517,    0,  517,  517,  517,  517, 
-          517,    0,    0,    0,    0,    0,    0,    0,  517,  519, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  519, 
-          517,  517,  517,  517,  517,  517,  517,  517,  517,  517, 
-          517,  517,  517,  517,    0,    0,  517,  517,  517,  517, 
-            0,  529,  517,    0,    0,  517,    0,    0,  517,    0, 
-          517,    0,  517,  519,  517,    0,  517,  517,  517,  517, 
-          517,  517,  517,    0,  517,    0,  517,  519,  519,    0, 
-          115,    0,  519,    0,    0,    0,    0,    0,  517,    0, 
-            0,    0,   96,    0,  110,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  517,    0, 
-          519,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  110,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  519,  647,    0,    0,  110,    0,    0,  519,  519, 
-            0,    0,  647,    0,    0,   96,    0,    0,    0,    0, 
-            0,    0,    0,    0,  516,  516,  516,    0,    0,  516, 
-          516,  516,    0,  516,    0,  310,    0,    0,    0,    0, 
-            0,    0,    0,  516,  516,    0,  647,    0,    0,    0, 
-            0,    0,  516,  516,    0,  516,  516,  516,  516,  516, 
-          647,  647,    0,    0,    0,  647,    0,  516,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  516, 
-          516,  516,  516,  516,  516,  516,  516,  516,  516,  516, 
-          516,  516,  516,  647,    0,  516,  516,  516,  516,    0, 
-          528,  516,    0,    0,  516,  109,    0,  516,    0,  516, 
-            0,  516,    0,  516,    0,  516,  516,  516,  516,  516, 
-          516,  516,   58,  516,    0,  516,    0,    0,    0,    0, 
-            0,    0,   58,    0,    0,    0,    0,  516,    0,  109, 
-            0,  519,  519,  519,    0,    0,  519,  519,  519,    0, 
-          519,    0,    0,    0,    0,    0,  109,  516,    0,    0, 
-          519,  519,    0,    0,    0,    0,    0,    0,    0,  519, 
-          519,    0,  519,  519,  519,  519,  519,    0,    0,    0, 
-            0,   58,    0,    0,  519,  310,  321,    0,    0,    0, 
-            0,    0,    0,    0,    0,  310,  519,  519,  519,  519, 
-          519,  519,  519,  519,  519,  519,  519,  519,  519,  519, 
-            0,    0,  519,  519,  519,  519,    0,  531,  519,    0, 
-            0,  519,    0,  110,  519,    0,  519,    0,  519,  310, 
-          519,    0,  519,  519,  519,  519,  519,  519,  519,    0, 
-          519,    0,  519,  310,  310,    0,  129,    0,  310,    0, 
-            0,    0,    0,    0,  519,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  647,  647,  647,    0,    0,  647, 
-          647,  647,  310,  647,  519,    0,  310,    0,    0,  310, 
-          310,    0,  647,  647,  647,    0,  110,    0,    0,    0, 
-            0,    0,  647,  647,    0,  647,  647,  647,  647,  647, 
-            0,    0,    0,    0,    0,    0,    0,  647,  321,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  321,  647, 
-          647,  647,  647,  647,  647,  647,  647,  647,  647,  647, 
-          647,  647,  647,    0,    0,  647,  647,  647,  647,    0, 
-            0,  647,    0,    0,  647,    0,    0,  647,    0,  647, 
-            0,  647,  321,  647,    0,  647,  647,  647,  647,  647, 
-          647,  647,    0,  647,  647,  647,  321,  321,    0,  128, 
-            0,  321,    0,    0,  109,    0,    0,  647,    0,    0, 
-            0,    0,    0,    0,   58,   58,   58,    0,    0,   58, 
-           58,   58,    0,   58,    0,    0,    0,  647,    0,  321, 
-            0,    0,    0,   58,    0,    0,    0,    0,    0,    0, 
-            0,    0,   58,   58,    0,   58,   58,   58,   58,   58, 
-            0,    0,    0,  321,    0,  463,    0,    0,    0,    0, 
-          321,  321,    0,    0,    0,  463,    0,  109,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  310,  310,  310, 
-            0,    0,  310,  310,  310,    0,  310,    0,    0,    0, 
-            0,    0,    0,    0,   58,    0,  310,  310,    0,  463, 
-            0,    0,    0,    0,    0,  310,  310,    0,  310,  310, 
-          310,  310,  310,  463,  463,   58,    0,    0,  463,    0, 
-          310,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  310,  310,  310,  310,  310,  310,  310,  310, 
-          310,  310,  310,  310,  310,  310,  463,   58,  310,  310, 
-          310,  310,    0,    0,  310,    0,    0,  310,    0,    0, 
-          310,    0,  310,    0,  310,    0,  310,    0,  310,  310, 
-          310,  310,  310,  310,  310,    0,  310,    0,  310,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          310,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          321,  321,  321,    0,    0,  321,  321,  321,    0,  321, 
-          310,    0,    0,    0,    0,    0,    0,    0,    0,  321, 
-          321,    0,    0,    0,    0,    0,    0,    0,  321,  321, 
-            0,  321,  321,  321,  321,  321,    0,    0,    0,    0, 
-            0,    0,    0,  321,  332,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  332,  321,  321,  321,  321,  321, 
-          321,  321,  321,  321,  321,  321,  321,  321,  321,    0, 
-            0,  321,  321,  321,  321,    0,    0,  321,    0,    0, 
-          321,    0,    0,  321,    0,  321,    0,  321,  332,  321, 
-            0,  321,  321,  321,  321,  321,  321,  321,    0,  321, 
-            0,  321,  332,  332,    0,    0,    0,  332,    0,    0, 
-            0,    0,    0,  321,    0,    0,    0,  463,  463,  463, 
-            0,    0,  463,  463,  463,    0,  463,    0,    0,    0, 
-            0,    0,    0,  321,    0,  332,  463,  463,    0,    0, 
-            0,    0,    0,    0,    0,  463,  463,    0,  463,  463, 
-          463,  463,  463,    0,    0,    0,    0,    0,    0,    0, 
-          463,  260,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  260,  463,  463,  463,  463,  463,  463,  463,  463, 
-          463,  463,  463,  463,  463,  463,    0,    0,  463,  463, 
-          463,  463,    0,    0,  463,    0,    0,  463,    0,    0, 
-          463,    0,  463,    0,  463,  260,  463,    0,  463,  463, 
-          463,  463,  463,  463,  463,    0,  463,    0,  463,  260, 
-          260,    0,    0,    0,  260,    0,    0,    0,  690,  629, 
-          463,    0,  691,    0,    0,    0,  188,  189,    0,  190, 
-          191,  192,  193,  194,  195,  196,    0,    0,  197,  198, 
-          463,    0,  363,  199,  200,  201,  202,    0,    0,    0, 
-            0,    0,    0,  304,    0,    0,    0,    0,    0,    0, 
-          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, 
-          213,  214,  215,  216,  327,    0,  217,    0,    0,    0, 
-            0,    0,    0,    0,  327,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  332,  332,  332,    0, 
-            0,  332,  332,  332,    0,  332,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  332,  332,    0,  327,    0, 
-            0,    0,    0,    0,  332,  332,    0,  332,  332,  332, 
-          332,  332,  327,  327,    0,    0,    0,  327,    0,  332, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  332,  332,  332,  332,  332,  332,  332,  332,  332, 
-          332,  332,  332,  332,  332,  327,    0,  332,  332,  332, 
-          332,    0,    0,  332,    0,    0,  332,    0,    0,  332, 
-            0,  332,    0,  332,    0,  332,    0,  332,  332,  332, 
-          332,  332,  332,  332,  298,  332,    0,  332,    0,    0, 
-            0,    0,    0,    0,  298,    0,    0,    0,    0,  332, 
-            0,    0,    0,  260,  260,  260,    0,    0,  260,  260, 
-          260,    0,  260,    0,    0,    0,    0,    0,    0,  332, 
-            0,    0,  260,  260,    0,    0,    0,    0,  294,    0, 
-            0,  260,  260,    0,  260,  260,  260,  260,  260,    0, 
-            0,    0,    0,  298,    0,    0,  260,  510,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  510,  260,  260, 
-          260,  260,  260,  260,  260,  260,  260,  260,  260,  363, 
-          260,  260,    0,    0,  260,  260,  363,  363,    0,    0, 
-          260,    0,    0,  260,    0,    0,  260,    0,  260,    0, 
-          260,  510,  260,    0,  260,  260,  260,  260,  260,  260, 
-          260,    0,  260,    0,  260,  510,  510,    0,    0,    0, 
-          510,    0,    0,    0,    0,    0,  260,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  327,  327,  327,    0, 
-            0,  327,  327,  327,    0,  327,  260,    0,  510,    0, 
-            0,    0,    0,    0,    0,  327,  327,    0,    0,    0, 
-            0,    0,    0,    0,  327,  327,    0,  327,  327,  327, 
-          327,  327,    0,    0,    0,    0,    0,    0,    0,  327, 
-          359,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          359,  327,  327,  327,  327,  327,  327,  327,  327,  327, 
-          327,  327,  327,  327,  327,    0,    0,  327,  327,  327, 
-          327,    0,    0,  327,    0,    0,  327,    0,    0,  327, 
-            0,  327,    0,  327,  359,  327,    0,  327,  327,  327, 
-          327,  327,  327,  327,    0,  327,    0,  327,    0,  359, 
-            0,    0,    0,  359,    0,    0,    0,    0,    0,  327, 
-            0,    0,    0,    0,    0,    0,  298,  298,  298,    0, 
-            0,  298,  298,  298,    0,  298,    0,    0,    0,  327, 
-            0,  359,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  360,    0,    0,    0,  298,  298,  298, 
-          298,  298,    0,  360,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  510, 
-          510,  510,    0,    0,  510,  510,  510,  360,  510,    0, 
-            0,    0,    0,  298,    0,    0,  298,    0,  510,  510, 
-            0,    0,  360,    0,    0,    0,  360,  510,  510,    0, 
-          510,  510,  510,  510,  510,    0,    0,  298,    0,    0, 
-            0,    0,  510,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  360,  510,  510,  510,  510,  510, 
-          510,  510,  510,  510,  510,  510,  510,  510,    0,  298, 
-          510,  510,  510,  510,    0,  324,  510,    0,    0,  510, 
-            0,    0,  510,    0,  510,  324,  510,    0,  510,    0, 
-          510,  510,  510,  510,  510,  510,  510,    0,  510,    0, 
-          510,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  510,    0,    0,    0,    0,    0,    0,  324, 
-            0,    0,  359,  359,  359,    0,    0,  359,  359,  359, 
-            0,  359,  510,    0,  324,    0,    0,    0,  324,    0, 
-            0,  359,  359,    0,    0,    0,    0,    0,    0,    0, 
-          359,  359,    0,  359,  359,  359,  359,  359,    0,    0, 
-            0,    0,    0,    0,    0,    0,  324,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  359,  359,  359, 
-          359,  359,  359,  359,  359,  359,  359,  359,  359,  359, 
-          359,    0,    0,  359,  359,  359,  359,    0,    0,  359, 
-            0,    0,  359,    0,    0,  359,    0,  359,    0,  359, 
-            0,  359,   45,  359,  359,  359,  359,  359,  359,  359, 
-            0,  359,   45,  359,    0,  360,  360,  360,    0,    0, 
-          360,  360,  360,    0,  360,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  360,  360,    0,    0,    0,    0, 
-            0,    0,    0,  360,  360,  359,  360,  360,  360,  360, 
-          360,    0,    0,    0,    0,    0,    0,    0,    0,  241, 
-            0,   45,    0,    0,    0,    0,    0,    0,    0,  241, 
-          360,  360,  360,  360,  360,  360,  360,  360,  360,  360, 
-          360,  360,  360,  360,    0,    0,  360,  360,  360,  360, 
-            0,    0,  360,    0,    0,  360,    0,    0,  360,    0, 
-          360,    0,  360,  241,  360,    0,  360,  360,  360,  360, 
-          360,  360,  360,    0,  360,    0,  360,  241,  241,    0, 
-            0,    0,  241,    0,    0,    0,    0,  324,  324,  324, 
-            0,    0,  324,  324,  324,    0,  324,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  324,  324,  360,    0, 
-            0,    0,    0,    0,    0,  324,  324,    0,  324,  324, 
-          324,  324,  324,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  324,  324,  324,  324,  324,  324,  324,  324, 
-          324,  324,  324,  324,  324,  324,  238,    0,  324,  324, 
-          324,  324,    0,    0,  324,    0,  238,  324,    0,    0, 
-          324,    0,  324,    0,  324,    0,  324,    0,  324,  324, 
-          324,  324,  324,  324,  324,    0,  324,    0,  324,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          238,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  238,  238,    0,    0,    0,  238, 
-          324,    0,    0,    0,   45,   45,   45,    0,    0,    0, 
-           45,   45,    0,   45,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,   45,   45,   45,   45,  235, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  235, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  241,  241,  241,    0,    0,  241,  241,  241,    0, 
-          241,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          241,  241,    0,  235,   45,    0,    0,    0,    0,  241, 
-          241,    0,  241,  241,  241,  241,  241,  235,  235,    0, 
-            0,    0,  235,    0,  241,   45,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  241,  241,  241, 
-          241,  241,  241,  241,  241,  241,  241,    0,  241,  241, 
-            0,    0,  241,  241,    0,    0,    0,   45,  241,    0, 
-            0,  241,    0,    0,  241,    0,  241,    0,  241,    0, 
-          241,    0,  241,  241,  241,  241,  241,  241,  241,    0, 
-          241,    0,  241,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  241,    0,  237,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  237,    0,    0,    0, 
-            0,    0,    0,    0,  241,    0,    0,    0,  238,  238, 
-          238,    0,    0,  238,  238,  238,    0,  238,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  238,  238,    0, 
-          237,    0,    0,    0,    0,    0,  238,  238,    0,  238, 
-          238,  238,  238,  238,  237,  237,    0,    0,    0,  237, 
-            0,  238,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  238,  238,  238,  238,  238,  238, 
-          238,  238,  238,  238,    0,  238,  238,    0,    0,  238, 
-          238,    0,    0,    0,    0,  238,    0,    0,  238,    0, 
-            0,  238,    0,  238,    0,  238,    0,  238,    0,  238, 
-          238,  238,  238,  238,  238,  238,    0,  238,    0,  238, 
-            0,  235,  235,  235,    0,    0,  235,  235,  235,    0, 
-          235,  238,  236,    0,    0,    0,    0,    0,    0,    0, 
-          235,  235,  236,    0,    0,    0,    0,    0,    0,  235, 
-          235,  238,  235,  235,  235,  235,  235,    0,    0,    0, 
-            0,    0,    0,    0,  235,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  236,  235,  235,  235, 
-          235,  235,  235,  235,  235,  235,  235,    0,  235,  235, 
-          236,  236,  235,  235,    0,  236,    0,    0,  235,    0, 
-            0,  235,    0,    0,  235,    0,  235,    0,  235,    0, 
-          235,    0,  235,  235,  235,  235,  235,  235,  235,    0, 
-          235,    0,  235,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  235,    0,    0,    0,    0,    0, 
-            0,  239,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  239,    0,    0,  235,    0,    0,    0,  237,  237, 
-          237,    0,    0,  237,  237,  237,    0,  237,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  237,  237,    0, 
-            0,    0,    0,    0,    0,  239,  237,  237,    0,  237, 
-          237,  237,  237,  237,    0,    0,    0,    0,    0,  239, 
-          239,  237,    0,    0,  239,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  237,  237,  237,  237,  237,  237, 
-          237,  237,  237,  237,    0,  237,  237,    0,    0,  237, 
-          237,    0,    0,    0,    0,  237,    0,    0,  237,    0, 
-            0,  237,    0,  237,    0,  237,    0,  237,    0,  237, 
-          237,  237,  237,  237,  237,  237,    0,  237,  440,  237, 
-            0,    0,    0,    0,    0,    0,    0,    0,  440,    0, 
-            0,  237,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  237,    0,    0,  236,  236,  236,    0,    0,  236, 
-          236,  236,  104,  236,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  236,  236,    0,    0,  440,    0,  123, 
-            0,  440,  236,  236,    0,  236,  236,  236,  236,  236, 
-            0,    0,    0,   36,    0,    0,    0,  236,    0,    0, 
-            0,    0,    0,   36,    0,    0,    0,    0,    0,  440, 
-          236,  236,  236,  236,  236,  236,  236,  236,  236,  236, 
-            0,  236,  236,    0,    0,  236,  236,    0,    0,    0, 
-            0,  236,    0,    0,  236,    0,    0,  236,    0,  236, 
-            0,  236,    0,  236,    0,  236,  236,  236,  236,  236, 
-          236,  236,   36,  236,    0,  236,    0,    0,    0,    0, 
-            0,    0,    0,  239,  239,  239,    0,  236,  239,  239, 
-          239,    0,  239,    0,  272,    0,    0,    0,    0,    0, 
-            0,    0,  239,  239,  272,    0,    0,  236,    0,    0, 
-            0,  239,  239,    0,  239,  239,  239,  239,  239,    0, 
-            0,    0,    0,    0,    0,    0,  239,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  267,  239, 
-          239,  239,  239,  239,  239,  239,  239,  239,  239,  440, 
-          239,  239,    0,  272,  239,  239,    0,    0,    0,  440, 
-          239,    0,    0,  239,    0,    0,  239,    0,  239,    0, 
-          239,    0,  239,    0,  239,  239,  239,  239,  239,  239, 
-          239,    0,  239,    0,  239,    0,    0,    0,    0,    0, 
-            0,    0,    0,  440,    0,    0,  239,    0,    0,    0, 
-          440,  440,  440,    0,    0,    0,  440,  440,  440,  440, 
-          123,    0,  440,    0,    0,    0,  239,    0,  440,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  440,  440, 
-            0,  440,  440,  440,  440,  440,    0,    0,    0,    0, 
-          440,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  440,  440,  440,  440,  440, 
-          440,  440,  440,  440,  440,  440,  440,  440,  440,  521, 
-            0,  440,  440,  440,  440,   36,   36,   36,    0,  521, 
-          440,   36,   36,    0,   36,    0,    0,  440,    0,  440, 
-            0,  440,  440,  440,  440,  440,  440,  440,    0,  440, 
-          440,  440,    0,    0,    0,    0,   36,   36,   36,   36, 
-           36,    0,    0,   98,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  521,    0, 
-          117,    0,  521,  440,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  526,    0,    0,    0,    0,    0,    0,    0,    0, 
+           96,  528,  528,  528,    0,    0,  528,  528,  528,    0, 
+          528,  526,    0,    0,    0,    0,    0,   96,    0,    0, 
+          528,  528,    0,    0,    0,    0,    0,    0,    0,  528, 
+          528,    0,  528,  528,  528,  528,  528,    0,    0,    0, 
+            0,    0,    0,    0,  528,  518,    0,  521,    0,    0, 
+            0,    0,    0,    0,    0,  518,  528,  528,  528,  528, 
+          528,  528,  528,  528,  528,  528,  528,  528,  528,  528, 
+            0,    0,  528,  528,  528,  528,    0,  540,  528,    0, 
+            0,  528,    0,    0,  528,    0,  528,    0,  528,  518, 
+          528,    0,  528,  528,  528,  528,  528,  528,  528,    0, 
+          528,    0,  528,  518,  518,    0,  112,    0,  518,    0, 
+            0,    0,    0,    0,  528,    0,    0,    0,  519,  519, 
+          519,    0,    0,  519,  519,  519,    0,  519,    0,    0, 
+            0,    0,    0,    0,  528,    0,  518,  519,  519,    0, 
+            0,    0,    0,    0,    0,    0,  519,  519,    0,  519, 
+          519,  519,  519,  519,    0,    0,    0,    0,    0,    0, 
+            0,  519,  521,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  521,  519,  519,  519,  519,  519,  519,  519, 
+          519,  519,  519,  519,  519,  519,  519,    0,    0,  519, 
+          519,  519,  519,    0,  531,  519,    0,    0,  519,    0, 
+            0,  519,    0,  519,    0,  519,  521,  519,    0,  519, 
+          519,  519,  519,  519,  519,  519,    0,  519,    0,  519, 
+          521,  521,    0,  115,    0,  521,    0,    0,    0,    0, 
+            0,  519,    0,    0,    0,   96,    0,  110,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  519,    0,  521,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  110,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  521,  649,    0,    0,  110,    0, 
+            0,  521,  521,    0,    0,  649,    0,    0,   96,    0, 
+            0,    0,    0,    0,    0,    0,    0,  518,  518,  518, 
+            0,    0,  518,  518,  518,    0,  518,    0,  312,    0, 
+            0,    0,    0,    0,    0,    0,  518,  518,    0,  649, 
+            0,    0,    0,    0,    0,  518,  518,    0,  518,  518, 
+          518,  518,  518,  649,  649,    0,    0,    0,  649,    0, 
+          518,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  518,  518,  518,  518,  518,  518,  518,  518, 
+          518,  518,  518,  518,  518,  518,  649,    0,  518,  518, 
+          518,  518,    0,  530,  518,    0,    0,  518,  109,    0, 
+          518,    0,  518,    0,  518,    0,  518,    0,  518,  518, 
+          518,  518,  518,  518,  518,   58,  518,    0,  518,    0, 
+            0,    0,    0,    0,    0,   58,    0,    0,    0,    0, 
+          518,    0,  109,    0,  521,  521,  521,    0,    0,  521, 
+          521,  521,    0,  521,    0,    0,    0,    0,    0,  109, 
+          518,    0,    0,  521,  521,    0,    0,    0,    0,    0, 
+            0,    0,  521,  521,    0,  521,  521,  521,  521,  521, 
+            0,    0,    0,    0,   58,    0,    0,  521,  312,  323, 
+            0,    0,    0,    0,    0,    0,    0,    0,  312,  521, 
+          521,  521,  521,  521,  521,  521,  521,  521,  521,  521, 
+          521,  521,  521,    0,    0,  521,  521,  521,  521,    0, 
+          533,  521,    0,    0,  521,    0,  110,  521,    0,  521, 
+            0,  521,  312,  521,    0,  521,  521,  521,  521,  521, 
+          521,  521,    0,  521,    0,  521,  312,  312,    0,  129, 
+            0,  312,    0,    0,    0,    0,    0,  521,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  649,  649,  649, 
+            0,    0,  649,  649,  649,  312,  649,  521,    0,  312, 
+            0,    0,  312,  312,    0,  649,  649,  649,    0,  110, 
+            0,    0,    0,    0,    0,  649,  649,    0,  649,  649, 
+          649,  649,  649,    0,    0,    0,    0,    0,    0,    0, 
+          649,  323,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  323,  649,  649,  649,  649,  649,  649,  649,  649, 
+          649,  649,  649,  649,  649,  649,    0,    0,  649,  649, 
+          649,  649,    0,    0,  649,    0,    0,  649,    0,    0, 
+          649,    0,  649,    0,  649,  323,  649,    0,  649,  649, 
+          649,  649,  649,  649,  649,    0,  649,  649,  649,  323, 
+          323,    0,  128,    0,  323,    0,    0,  109,    0,    0, 
+          649,    0,    0,    0,    0,    0,    0,   58,   58,   58, 
+            0,    0,   58,   58,   58,    0,   58,    0,    0,    0, 
+          649,    0,  323,    0,    0,    0,   58,    0,    0,    0, 
+            0,    0,    0,    0,    0,   58,   58,    0,   58,   58, 
+           58,   58,   58,    0,    0,    0,  323,    0,  465,    0, 
+            0,    0,    0,  323,  323,    0,    0,    0,  465,    0, 
+          109,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          312,  312,  312,    0,    0,  312,  312,  312,    0,  312, 
+            0,    0,    0,    0,    0,    0,    0,   58,    0,  312, 
+          312,    0,  465,    0,    0,    0,    0,    0,  312,  312, 
+            0,  312,  312,  312,  312,  312,  465,  465,   58,    0, 
+            0,  465,    0,  312,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  312,  312,  312,  312,  312, 
+          312,  312,  312,  312,  312,  312,  312,  312,  312,  465, 
+           58,  312,  312,  312,  312,    0,    0,  312,    0,    0, 
+          312,    0,    0,  312,    0,  312,    0,  312,    0,  312, 
+            0,  312,  312,  312,  312,  312,  312,  312,    0,  312, 
+            0,  312,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  312,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  323,  323,  323,    0,    0,  323,  323, 
+          323,    0,  323,  312,    0,    0,    0,    0,    0,    0, 
+            0,    0,  323,  323,    0,    0,    0,    0,    0,    0, 
+            0,  323,  323,    0,  323,  323,  323,  323,  323,    0, 
+            0,    0,    0,    0,    0,    0,  323,  334,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  334,  323,  323, 
+          323,  323,  323,  323,  323,  323,  323,  323,  323,  323, 
+          323,  323,    0,    0,  323,  323,  323,  323,    0,    0, 
+          323,    0,    0,  323,    0,    0,  323,    0,  323,    0, 
+          323,  334,  323,    0,  323,  323,  323,  323,  323,  323, 
+          323,    0,  323,    0,  323,  334,  334,    0,    0,    0, 
+          334,    0,    0,    0,    0,    0,  323,    0,    0,    0, 
+          465,  465,  465,    0,    0,  465,  465,  465,    0,  465, 
+            0,    0,    0,    0,    0,    0,  323,    0,  334,  465, 
+          465,    0,    0,    0,    0,    0,    0,    0,  465,  465, 
+            0,  465,  465,  465,  465,  465,    0,    0,    0,    0, 
+            0,    0,    0,  465,  262,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  262,  465,  465,  465,  465,  465, 
+          465,  465,  465,  465,  465,  465,  465,  465,  465,    0, 
+            0,  465,  465,  465,  465,    0,    0,  465,    0,    0, 
+          465,    0,    0,  465,    0,  465,    0,  465,  262,  465, 
+            0,  465,  465,  465,  465,  465,  465,  465,    0,  465, 
+            0,  465,  262,  262,    0,    0,    0,  262,    0,    0, 
+            0,  690,  629,  465,    0,  691,    0,    0,    0,  188, 
+          189,    0,  190,  191,  192,  193,  194,  195,  196,    0, 
+            0,  197,  198,  465,    0,  365,  199,  200,  201,  202, 
+            0,    0,    0,    0,    0,    0,  304,    0,    0,    0, 
+            0,    0,    0,  204,  205,    0,  206,  207,  208,  209, 
+          210,  211,  212,  213,  214,  215,  216,  329,    0,  217, 
+            0,    0,    0,    0,    0,    0,    0,  329,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  334, 
+          334,  334,    0,    0,  334,  334,  334,    0,  334,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  334,  334, 
+            0,  329,    0,    0,    0,    0,    0,  334,  334,    0, 
+          334,  334,  334,  334,  334,  329,  329,    0,    0,    0, 
+          329,    0,  334,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  334,  334,  334,  334,  334,  334, 
+          334,  334,  334,  334,  334,  334,  334,  334,  329,    0, 
+          334,  334,  334,  334,    0,    0,  334,    0,    0,  334, 
+            0,    0,  334,    0,  334,    0,  334,    0,  334,    0, 
+          334,  334,  334,  334,  334,  334,  334,  300,  334,    0, 
+          334,    0,    0,    0,    0,    0,    0,  300,    0,    0, 
+            0,    0,  334,    0,    0,    0,  262,  262,  262,    0, 
+            0,  262,  262,  262,    0,  262,    0,    0,    0,    0, 
+            0,    0,  334,    0,    0,  262,  262,    0,    0,    0, 
+            0,  296,    0,    0,  262,  262,    0,  262,  262,  262, 
+          262,  262,    0,    0,    0,    0,  300,    0,    0,  262, 
+          512,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          512,  262,  262,  262,  262,  262,  262,  262,  262,  262, 
+          262,  262,  365,  262,  262,    0,    0,  262,  262,  365, 
+          365,    0,    0,  262,    0,    0,  262,    0,    0,  262, 
+            0,  262,    0,  262,  512,  262,    0,  262,  262,  262, 
+          262,  262,  262,  262,    0,  262,    0,  262,  512,  512, 
+            0,    0,    0,  512,    0,    0,    0,    0,    0,  262, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  329, 
+          329,  329,    0,    0,  329,  329,  329,    0,  329,  262, 
+            0,  512,    0,    0,    0,    0,    0,    0,  329,  329, 
+            0,    0,    0,    0,    0,    0,    0,  329,  329,    0, 
+          329,  329,  329,  329,  329,    0,    0,    0,    0,    0, 
+            0,    0,  329,  361,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  361,  329,  329,  329,  329,  329,  329, 
+          329,  329,  329,  329,  329,  329,  329,  329,    0,    0, 
+          329,  329,  329,  329,    0,    0,  329,    0,    0,  329, 
+            0,    0,  329,    0,  329,    0,  329,  361,  329,    0, 
+          329,  329,  329,  329,  329,  329,  329,    0,  329,    0, 
+          329,    0,  361,    0,    0,    0,  361,    0,    0,    0, 
+            0,    0,  329,    0,    0,    0,    0,    0,    0,  300, 
+          300,  300,    0,    0,  300,  300,  300,    0,  300,    0, 
+            0,    0,  329,    0,  361,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  362,    0,    0,    0, 
+          300,  300,  300,  300,  300,    0,  362,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  512,  512,  512,    0,    0,  512,  512,  512, 
+          362,  512,    0,    0,    0,    0,  300,    0,    0,  300, 
+            0,  512,  512,    0,    0,  362,    0,    0,    0,  362, 
+          512,  512,    0,  512,  512,  512,  512,  512,    0,    0, 
+          300,    0,    0,    0,    0,  512,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  362,  512,  512, 
+          512,  512,  512,  512,  512,  512,  512,  512,  512,  512, 
+          512,    0,  300,  512,  512,  512,  512,    0,  326,  512, 
+            0,    0,  512,    0,    0,  512,    0,  512,  326,  512, 
+            0,  512,    0,  512,  512,  512,  512,  512,  512,  512, 
+            0,  512,    0,  512,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  512,    0,    0,    0,    0, 
+            0,    0,  326,    0,    0,  361,  361,  361,    0,    0, 
+          361,  361,  361,    0,  361,  512,    0,  326,    0,    0, 
+            0,  326,    0,    0,  361,  361,    0,    0,    0,    0, 
+            0,    0,    0,  361,  361,    0,  361,  361,  361,  361, 
+          361,    0,    0,    0,    0,    0,    0,    0,    0,  326, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          361,  361,  361,  361,  361,  361,  361,  361,  361,  361, 
+          361,  361,  361,  361,    0,    0,  361,  361,  361,  361, 
+            0,    0,  361,    0,    0,  361,    0,    0,  361,    0, 
+          361,    0,  361,    0,  361,   45,  361,  361,  361,  361, 
+          361,  361,  361,    0,  361,   45,  361,    0,  362,  362, 
+          362,    0,    0,  362,  362,  362,    0,  362,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  362,  362,    0, 
+            0,    0,    0,    0,    0,    0,  362,  362,  361,  362, 
+          362,  362,  362,  362,    0,    0,    0,    0,    0,    0, 
+            0,    0,  233,    0,   45,    0,    0,    0,    0,    0, 
+            0,    0,  233,  362,  362,  362,  362,  362,  362,  362, 
+          362,  362,  362,  362,  362,  362,  362,    0,    0,  362, 
+          362,  362,  362,    0,    0,  362,    0,    0,  362,    0, 
+            0,  362,    0,  362,    0,  362,  233,  362,    0,  362, 
+          362,  362,  362,  362,  362,  362,    0,  362,    0,  362, 
+          233,  233,    0,    0,    0,  233,    0,    0,    0,    0, 
+          326,  326,  326,    0,    0,  326,  326,  326,    0,  326, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  326, 
+          326,  362,    0,    0,    0,    0,    0,    0,  326,  326, 
+            0,  326,  326,  326,  326,  326,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  326,  326,  326,  326,  326, 
+          326,  326,  326,  326,  326,  326,  326,  326,  326,  234, 
+            0,  326,  326,  326,  326,    0,    0,  326,    0,  234, 
+          326,    0,    0,  326,    0,  326,    0,  326,    0,  326, 
+            0,  326,  326,  326,  326,  326,  326,  326,    0,  326, 
+            0,  326,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  234,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  234,  234,    0, 
+            0,    0,  234,  326,    0,    0,    0,   45,   45,   45, 
+            0,    0,    0,   45,   45,    0,   45,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,   45,   45, 
+           45,   45,  243,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  243,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  233,  233,  233,    0,    0,  233, 
+          233,  233,    0,  233,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  233,  233,    0,  243,   45,    0,    0, 
+            0,    0,  233,  233,    0,  233,  233,  233,  233,  233, 
+          243,  243,    0,    0,    0,  243,    0,  233,   45,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  233, 
+          233,  233,  233,  233,  233,  233,  233,  233,  233,  233, 
+            0,  233,  233,    0,    0,  233,  233,    0,    0,    0, 
+           45,  233,    0,    0,  233,    0,    0,  233,    0,  233, 
+            0,  233,    0,  233,    0,  233,  233,  233,  233,  233, 
+          233,  233,    0,  233,    0,  233,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  233,    0,  240, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  240, 
+            0,    0,    0,    0,    0,    0,    0,  233,    0,    0, 
+            0,  234,  234,  234,    0,    0,  234,  234,  234,    0, 
+          234,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          234,  234,    0,  240,    0,    0,    0,    0,    0,  234, 
+          234,    0,  234,  234,  234,  234,  234,  240,  240,    0, 
+            0,    0,  240,    0,  234,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  234,  234,  234,  234, 
+          234,  234,  234,  234,  234,  234,  234,    0,  234,  234, 
+            0,    0,  234,  234,    0,    0,    0,    0,  234,    0, 
+            0,  234,    0,    0,  234,    0,  234,    0,  234,    0, 
+          234,    0,  234,  234,  234,  234,  234,  234,  234,    0, 
+          234,    0,  234,    0,  243,  243,  243,    0,    0,  243, 
+          243,  243,    0,  243,  234,  237,    0,    0,    0,    0, 
+            0,    0,    0,  243,  243,  237,    0,    0,    0,    0, 
+            0,    0,  243,  243,  234,  243,  243,  243,  243,  243, 
+            0,    0,    0,    0,    0,    0,    0,  243,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  237, 
+          243,  243,  243,  243,  243,  243,  243,  243,  243,  243, 
+            0,  243,  243,  237,  237,  243,  243,    0,  237,    0, 
+            0,  243,    0,    0,  243,    0,    0,  243,    0,  243, 
+            0,  243,    0,  243,    0,  243,  243,  243,  243,  243, 
+          243,  243,    0,  243,    0,  243,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  243,    0,    0, 
+            0,    0,    0,    0,  239,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  239,    0,    0,  243,    0,    0, 
+            0,  240,  240,  240,    0,    0,  240,  240,  240,    0, 
+          240,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          240,  240,    0,    0,    0,    0,    0,    0,  239,  240, 
+          240,    0,  240,  240,  240,  240,  240,    0,    0,    0, 
+            0,    0,  239,  239,  240,    0,    0,  239,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  240,  240,  240, 
+          240,  240,  240,  240,  240,  240,  240,    0,  240,  240, 
+            0,    0,  240,  240,    0,    0,    0,    0,  240,    0, 
+            0,  240,    0,    0,  240,    0,  240,    0,  240,    0, 
+          240,    0,  240,  240,  240,  240,  240,  240,  240,    0, 
+          240,  238,  240,    0,    0,    0,    0,    0,    0,    0, 
+            0,  238,    0,    0,  240,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  240,    0,    0,  237,  237,  237, 
+            0,    0,  237,  237,  237,  238,  237,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  237,  237,    0,  238, 
+          238,    0,    0,    0,  238,  237,  237,    0,  237,  237, 
+          237,  237,  237,    0,    0,    0,    0,    0,    0,    0, 
+          237,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  237,  237,  237,  237,  237,  237,  237, 
+          237,  237,  237,    0,  237,  237,    0,    0,  237,  237, 
+            0,    0,    0,    0,  237,    0,    0,  237,    0,    0, 
+          237,    0,  237,    0,  237,    0,  237,    0,  237,  237, 
+          237,  237,  237,  237,  237,    0,  237,    0,  237,    0, 
+            0,    0,    0,    0,    0,    0,  239,  239,  239,    0, 
+          237,  239,  239,  239,    0,  239,    0,  241,    0,    0, 
+            0,    0,    0,    0,    0,  239,  239,  241,    0,    0, 
+          237,    0,    0,    0,  239,  239,    0,  239,  239,  239, 
+          239,  239,    0,    0,    0,    0,    0,    0,    0,  239, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  241,  239,  239,  239,  239,  239,  239,  239,  239, 
+          239,  239,    0,  239,  239,  241,  241,  239,  239,    0, 
+          241,    0,    0,  239,    0,    0,  239,    0,    0,  239, 
+            0,  239,    0,  239,    0,  239,    0,  239,  239,  239, 
+          239,  239,  239,  239,    0,  239,    0,  239,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  239, 
+            0,    0,    0,  238,  238,  238,    0,    0,  238,  238, 
+          238,    0,  238,    0,    0,    0,    0,    0,    0,  239, 
+            0,    0,  238,  238,    0,    0,    0,    0,    0,    0, 
+            0,  238,  238,    0,  238,  238,  238,  238,  238,    0, 
+            0,    0,    0,    0,    0,    0,  238,  442,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  442,    0,  238, 
+          238,  238,  238,  238,  238,  238,  238,  238,  238,    0, 
+          238,  238,    0,    0,  238,  238,    0,    0,    0,    0, 
+          238,    0,    0,  238,    0,    0,  238,    0,  238,    0, 
+          238,  104,  238,    0,  238,  238,  238,  238,  238,  238, 
+          238,    0,  238,    0,  238,    0,  442,    0,  123,    0, 
+          442,    0,    0,    0,    0,    0,  238,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  238,    0,  442,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  241, 
+          241,  241,    0,    0,  241,  241,  241,    0,  241,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  241,  241, 
+            0,    0,    0,    0,    0,    0,    0,  241,  241,    0, 
+          241,  241,  241,  241,  241,    0,    0,    0,    0,    0, 
+            0,    0,  241,  442,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  442,    0,  241,  241,  241,  241,  241, 
+          241,  241,  241,  241,  241,    0,  241,  241,    0,    0, 
+          241,  241,    0,    0,    0,    0,  241,    0,    0,  241, 
+            0,    0,  241,    0,  241,    0,  241,  442,  241,    0, 
+          241,  241,  241,  241,  241,  241,  241,    0,  241,    0, 
+          241,    0,  442,    0,  123,    0,  442,    0,    0,    0, 
+            0,    0,  241,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  241,    0,  442,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  442, 
+          442,  442,    0,    0,    0,  442,  442,    0,  442,    0, 
+            0, 
       };
    }
 
    private static final short[] yyTable3() {
       return new short[] {
 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,   36,  272,  272,  272,    0,  521,    0,  272, 
-          272,    0,  272,    0,    0,    0,    0,    0,    0,  520, 
-            0,    0,    0,   36,    0,    0,    0,    0,    0,  520, 
-            0,  272,  272,    0,  272,  272,  272,  272,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,   36,    0,    0,  440,  440, 
-          440,    0,    0,   97,  440,  440,    0,  440,    0,    0, 
-            0,    0,    0,    0,    0,    0,  440,    0,  520,    0, 
-          116,    0,  520,  272,    0,    0,  440,  440,    0,  440, 
-          440,  440,  440,  440,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  272,    0,    0,    0,    0,    0, 
-          520,    0,    0,  440,  440,  440,  440,  440,  440,  440, 
-          440,  440,  440,  440,  440,  440,  440,  522,    0,  440, 
-          440,  440,  440,    0,    0,    0,  272,  522,  440,    0, 
-            0,    0,    0,    0,    0,  440,    0,  440,    0,  440, 
-          440,  440,  440,  440,  440,  440,    0,  440,  440,  440, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,   99,    0,    0,    0,    0,    0,    0,  521,  521, 
-          521,    0,    0,    0,  521,  521,  522,  521,  118,    0, 
-          522,  440,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  521,  521,    0,  521, 
-          521,  521,  521,  521,    0,    0,    0,    0,  522,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  521,  521,  521,  521,  521,  521,  521, 
-          521,  521,  521,  521,  521,  521,  521,    0,    0,  521, 
-          521,  521,  521,    0,  533,    0,    0,    0,  521,    0, 
-            0,    0,    0,    0,    0,  521,    0,  521,    0,  521, 
-          521,  521,  521,  521,  521,  521,    0,  521,    0,  521, 
-            0,  520,  520,  520,    0,    0,    0,  520,  520,    0, 
-          520,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  520, 
-          520,  521,  520,  520,  520,  520,  520,    0,    0,    0, 
-          523,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          523,    0,    0,    0,    0,    0,  520,  520,  520,  520, 
-          520,  520,  520,  520,  520,  520,  520,  520,  520,  520, 
-            0,    0,  520,  520,  520,  520,    0,  532,    0,    0, 
-            0,  520,    0,    0,  100,    0,    0,    0,  520,    0, 
-          520,    0,  520,  520,  520,  520,  520,  520,  520,  523, 
-          520,  119,  520,  523,    0,    0,    0,    0,    0,  522, 
-          522,  522,    0,    0,    0,  522,  522,    0,  522,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  523,    0,    0,  520,    0,    0,  522,  522,    0, 
-          522,  522,  522,  522,  522,    0,    0,    0,  525,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  525,    0, 
-            0,    0,    0,    0,  522,  522,  522,  522,  522,  522, 
-          522,  522,  522,  522,  522,  522,  522,  522,    0,    0, 
-          522,  522,  522,  522,    0,  534,    0,    0,    0,  522, 
-            0,    0,  102,    0,    0,    0,  522,    0,  522,    0, 
-          522,  522,  522,  522,  522,  522,  522,  525,  522,  121, 
-          522,  525,    0,    0,    0,    0,    0,    0,    0,    0, 
-          700,  621,    0,    0,  701,    0,    0,    0,  188,  189, 
-            0,  190,  191,  192,  193,  194,  195,  196,    0,  525, 
-          197,  198,  522,    0,    0,  199,  200,  201,  202,    0, 
-            0,  524,    0,    0,    0,  304,    0,    0,    0,    0, 
-            0,  524,  204,  205,    0,  206,  207,  208,  209,  210, 
-          211,  212,  213,  214,  215,  216,    0,    0,  217,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  101,    0,    0,    0,    0, 
-            0,    0,  523,  523,  523,    0,    0,    0,  523,  523, 
-          524,  523,  120,    0,  524,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          523,  523,    0,  523,  523,  523,  523,  523,    0,    0, 
-            0,    0,  524,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  523,  523,  523, 
+            0,    0,    0,    0,    0,    0,  442,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  442,  442,    0,  442, 
+          442,  442,  442,  442,    0,    0,    0,    0,    0,    0, 
+            0,    0,  523,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  523,  442,  442,  442,  442,  442,  442,  442, 
+          442,  442,  442,  442,  442,  442,  442,    0,    0,  442, 
+          442,  442,  442,    0,    0,    0,    0,    0,  442,    0, 
+            0,    0,    0,    0,    0,  442,   98,  442,    0,  442, 
+          442,  442,  442,  442,  442,  442,    0,  442,  442,  442, 
+            0,  523,    0,  117,    0,  523,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  442,    0,  523,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  442,  442,  442,    0,    0,    0, 
+          442,  442,    0,  442,    0,    0,    0,    0,    0,    0, 
+            0,    0,  442,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  442,  442,    0,  442,  442,  442,  442,  442, 
+            0,    0,    0,    0,    0,    0,    0,    0,  522,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  522,  442, 
+          442,  442,  442,  442,  442,  442,  442,  442,  442,  442, 
+          442,  442,  442,    0,    0,  442,  442,  442,  442,    0, 
+            0,    0,    0,    0,  442,    0,    0,    0,    0,    0, 
+            0,  442,   97,  442,    0,  442,  442,  442,  442,  442, 
+          442,  442,    0,  442,  442,  442,    0,  522,    0,  116, 
+            0,  522,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  442,    0,  522, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  523,  523,  523,    0,    0,    0, 
+          523,  523,    0,  523,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  523,  523,    0,  523,  523,  523,  523,  523, 
+            0,    0,    0,  524,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  524,    0,    0,    0,    0,    0,  523, 
           523,  523,  523,  523,  523,  523,  523,  523,  523,  523, 
-          523,  526,    0,  523,  523,  523,  523,    0,  535,    0, 
-            0,  526,  523,    0,    0,    0,    0,    0,    0,  523, 
-            0,  523,    0,  523,  523,  523,  523,  523,  523,  523, 
-            0,  523,    0,  523,    0,    0,    0,    0,    0,    0, 
-          525,  525,  525,    0,    0,  103,  525,  525,    0,  525, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          526,    0,  122,    0,  526,  523,    0,    0,  525,  525, 
-            0,  525,  525,  525,  525,  525,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  526,    0,    0,  525,  525,  525,  525,  525, 
-          525,  525,  525,  525,  525,  525,  525,  525,  525,    0, 
-            0,  525,  525,  525,  525,    0,  537,    0,    0,    0, 
-          525,    0,    0,    0,    0,    0,    0,  525,    0,  525, 
-            0,  525,  525,  525,  525,  525,  525,  525,    0,  525, 
-            0,  525,    0,  524,  524,  524,    0,    0,    0,  524, 
-          524,    0,  524,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  524,  524,  525,  524,  524,  524,  524,  524,    0, 
-            0,    0,  517,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  517,    0,    0,    0,    0,    0,  524,  524, 
+          523,  523,  523,    0,    0,  523,  523,  523,  523,    0, 
+          535,    0,    0,    0,  523,    0,    0,   99,    0,    0, 
+            0,  523,    0,  523,    0,  523,  523,  523,  523,  523, 
+          523,  523,  524,  523,  118,  523,  524,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  524,    0,    0,  523,    0,    0, 
+            0,    0,    0,    0,    0,    0,  525,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  525,    0,    0,    0, 
+          522,  522,  522,    0,    0,    0,  522,  522,    0,  522, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  522,  522, 
+          100,  522,  522,  522,  522,  522,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  525,    0,  119,    0,  525, 
+            0,    0,    0,    0,    0,  522,  522,  522,  522,  522, 
+          522,  522,  522,  522,  522,  522,  522,  522,  522,    0, 
+            0,  522,  522,  522,  522,    0,  534,  525,    0,    0, 
+          522,    0,    0,    0,    0,    0,    0,  522,    0,  522, 
+            0,  522,  522,  522,  522,  522,  522,  522,  527,  522, 
+            0,  522,    0,    0,    0,    0,    0,    0,  527,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  522,    0,    0,    0,    0,    0,    0, 
+            0,    0,  102,    0,    0,  524,  524,  524,    0,    0, 
+            0,  524,  524,    0,  524,    0,    0,  527,    0,  121, 
+            0,  527,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  524,  524,    0,  524,  524,  524,  524, 
+          524,    0,    0,    0,    0,    0,    0,    0,    0,  527, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
           524,  524,  524,  524,  524,  524,  524,  524,  524,  524, 
-          524,  524,    0,    0,  524,  524,  524,  524,    0,  536, 
-            0,    0,    0,  524,    0,    0,   94,    0,    0,    0, 
-          524,    0,  524,    0,  524,  524,  524,  524,  524,  524, 
-          524,  517,  524,  113,  524,  517,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  526,  526,  526,    0,    0,    0,  526, 
-          526,    0,  526,  517,    0,    0,  524,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  526,  526,    0,  526,  526,  526,  526,  526,    0, 
-            0,    0,  516,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  516,    0,    0,    0,    0,    0,  526,  526, 
-          526,  526,  526,  526,  526,  526,  526,  526,  526,  526, 
-          526,  526,    0,    0,  526,  526,  526,  526,    0,  538, 
-            0,    0,    0,  526,    0,    0,   93,    0,    0,    0, 
-          526,    0,  526,    0,  526,  526,  526,  526,  526,  526, 
-          526,  516,  526,  112,  526,  516,    0,    0,    0,    0, 
-            0,    0,    0,    0,  703,  629,    0,    0,  704,    0, 
-            0,    0,  188,  189,    0,  190,  191,  192,  193,  194, 
-          195,  196,    0,  516,  197,  198,  526,    0,    0,  199, 
-          200,  201,  202,    0,    0,  519,    0,    0,    0,  304, 
-            0,    0,    0,    0,    0,  519,  204,  205,    0,  206, 
-          207,  208,  209,  210,  211,  212,  213,  214,  215,  216, 
-            0,    0,  217,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  517,  517,  517,    0,    0,   96, 
-          517,  517,    0,  517,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  519,    0,  115,    0,  519,    0, 
-            0,    0,  517,  517,    0,  517,  517,  517,  517,  517, 
+          524,  524,  524,  524,    0,    0,  524,  524,  524,  524, 
+            0,  536,    0,    0,    0,  524,    0,    0,    0,    0, 
+            0,    0,  524,    0,  524,    0,  524,  524,  524,  524, 
+          524,  524,  524,    0,  524,    0,  524,    0,  525,  525, 
+          525,    0,    0,    0,  525,  525,    0,  525,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  525,  525,  524,  525, 
+          525,  525,  525,  525,    0,    0,    0,  526,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  526,    0,    0, 
+            0,    0,    0,  525,  525,  525,  525,  525,  525,  525, 
+          525,  525,  525,  525,  525,  525,  525,    0,    0,  525, 
+          525,  525,  525,    0,  537,    0,    0,    0,  525,    0, 
+            0,  101,    0,    0,    0,  525,    0,  525,    0,  525, 
+          525,  525,  525,  525,  525,  525,  526,  525,  120,  525, 
+          526,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          527,  527,  527,    0,    0,    0,  527,  527,    0,  527, 
+            0,    0,    0,    0,    0,    0,    0,    0,  526,    0, 
+            0,  525,    0,    0,    0,    0,    0,    0,  527,  527, 
+            0,  527,  527,  527,  527,  527,    0,    0,    0,  528, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  528, 
+            0,    0,    0,    0,    0,  527,  527,  527,  527,  527, 
+          527,  527,  527,  527,  527,  527,  527,  527,  527,    0, 
+            0,  527,  527,  527,  527,    0,  539,    0,    0,    0, 
+          527,    0,    0,  103,    0,    0,    0,  527,    0,  527, 
+            0,  527,  527,  527,  527,  527,  527,  527,  528,  527, 
+          122,  527,  528,    0,    0,    0,    0,    0,    0,    0, 
+            0,  700,  621,    0,    0,  701,    0,    0,    0,  188, 
+          189,    0,  190,  191,  192,  193,  194,  195,  196,    0, 
+          528,  197,  198,  527,    0,    0,  199,  200,  201,  202, 
+            0,    0,  519,    0,    0,    0,  304,    0,    0,    0, 
+            0,    0,  519,  204,  205,    0,  206,  207,  208,  209, 
+          210,  211,  212,  213,  214,  215,  216,    0,    0,  217, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,   94,    0,    0,  526, 
+          526,  526,    0,    0,    0,  526,  526,    0,  526,    0, 
+            0,  519,    0,  113,    0,  519,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  526,  526,    0, 
+          526,  526,  526,  526,  526,    0,    0,    0,    0,    0, 
+            0,    0,    0,  519,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  526,  526,  526,  526,  526,  526, 
+          526,  526,  526,  526,  526,  526,  526,  526,    0,    0, 
+          526,  526,  526,  526,    0,  538,    0,    0,    0,  526, 
+            0,    0,    0,    0,    0,    0,  526,    0,  526,  518, 
+          526,  526,  526,  526,  526,  526,  526,    0,  526,  518, 
+          526,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  528,  528,  528,    0,    0,    0,  528,  528,    0, 
+          528,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  526,   93,    0,    0,    0,    0,    0,  528, 
+          528,    0,  528,  528,  528,  528,  528,    0,  518,    0, 
+          112,    0,  518,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  528,  528,  528,  528, 
+          528,  528,  528,  528,  528,  528,  528,  528,  528,  528, 
+          518,    0,  528,  528,  528,  528,    0,  540,    0,    0, 
+            0,  528,    0,    0,    0,    0,    0,    0,  528,   36, 
+          528,    0,  528,  528,  528,  528,  528,  528,  528,   36, 
+          528,    0,  528,    0,  519,  519,  519,    0,    0,    0, 
+          519,  519,    0,  519,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  519,  519,  528,  519,  519,  519,  519,  519, 
+            0,    0,    0,  521,    0,    0,    0,    0,   36,    0, 
+            0,    0,    0,  521,    0,    0,    0,    0,    0,  519, 
+          519,  519,  519,  519,  519,  519,  519,  519,  519,  519, 
+          519,  519,  519,    0,    0,  519,  519,  519,  519,    0, 
+          531,    0,    0,    0,  519,    0,    0,   96,    0,    0, 
+            0,  519,    0,  519,    0,  519,  519,  519,  519,  519, 
+          519,  519,  521,  519,  115,  519,  521,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  519,    0,    0,  517, 
-          517,  517,  517,  517,  517,  517,  517,  517,  517,  517, 
-          517,  517,  517,    0,    0,  517,  517,  517,  517,    0, 
-          529,    0,    0,    0,  517,    0,    0,    0,    0,    0, 
-            0,  517,    0,  517,    0,  517,  517,  517,  517,  517, 
-          517,  517,  246,  517,    0,  517,    0,    0,    0,    0, 
-            0,    0,  246,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  516,  516,  516,    0,    0,    0, 
-          516,  516,    0,  516,    0,    0,    0,  517,    0,    0, 
-            0,    0,    0,    0,    0,    0,  246,    0,    0,    0, 
-            0,    0,  516,  516,    0,  516,  516,  516,  516,  516, 
-          246,  246,    0,    0,    0,  246,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  516, 
-          516,  516,  516,  516,  516,  516,  516,  516,  516,  516, 
-          516,  516,  516,    0,    0,  516,  516,  516,  516,    0, 
-          528,    0,    0,    0,  516,    0,    0,    0,    0,    0, 
-            0,  516,    0,  516,    0,  516,  516,  516,  516,  516, 
-          516,  516,    0,  516,    0,  516,    0,  519,  519,  519, 
-            0,    0,    0,  519,  519,    0,  519,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  519,  519,  516,  519,  519, 
-          519,  519,  519,    0,    0,    0,  310,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  310,    0,    0,    0, 
-            0,    0,  519,  519,  519,  519,  519,  519,  519,  519, 
-          519,  519,  519,  519,  519,  519,    0,    0,  519,  519, 
-          519,  519,    0,  531,    0,    0,    0,  519,    0,    0, 
-          110,    0,    0,    0,  519,    0,  519,    0,  519,  519, 
-          519,  519,  519,  519,  519,  310,  519,  129,  519,  310, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  299,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  299,    0,    0,    0,  310,    0,    0, 
-          519,    0,    0,    0,  246,  246,  246,    0,    0,  246, 
-          246,  246,    0,  246,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  246,  246,    0,    0,  295,    0,    0, 
-            0,    0,  246,  246,    0,  246,  246,  246,  246,  246, 
-            0,  321,  299,    0,    0,    0,    0,  246,    0,    0, 
-            0,  321,    0,    0,    0,    0,    0,    0,    0,  246, 
-          246,  246,  246,  246,    0,    0,  246,  246,  246,  246, 
-            0,  246,  246,    0,    0,  246,  246,    0,    0,    0, 
-            0,  246,    0,    0,  246,  109,    0,  246,    0,  246, 
-            0,  246,    0,  246,    0,  246,  246,  246,  246,    0, 
-          321,  246,  128,  246,  321,  246,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  246,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  321,    0,    0,    0,    0,  246,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  233,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  233,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  310,  310, 
-          310,    0,    0,    0,  310,  310,    0,  310,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  233,    0,    0,    0,    0,  310,  310,    0,  310, 
-          310,  310,  310,  310,    0,  233,  233,    0,    0,    0, 
-          233,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  310,  310,  310,  310,  310,  310,  310, 
-          310,  310,  310,  310,  310,  310,  310,    0,    0,  310, 
-          310,  310,  310,    0,    0,  299,  299,  299,  310,    0, 
-          299,  299,  299,    0,  299,  310,  234,  310,    0,  310, 
-          310,  310,  310,  310,  310,  310,  234,  310,    0,  310, 
-            0,    0,    0,    0,    0,    0,  299,  299,  299,  299, 
-          299,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          234,  310,    0,  321,  321,  321,    0,    0,    0,  321, 
-          321,    0,  321,    0,  234,  234,    0,    0,    0,  234, 
-            0,    0,  299,    0,    0,  299,    0,    0,    0,    0, 
-            0,  321,  321,    0,  321,  321,  321,  321,  321,    0, 
-            0,    0,    0,    0,    0,    0,  299,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  321,  321, 
-          321,  321,  321,  321,  321,  321,  321,  321,  321,  321, 
-          321,  321,    0,    0,  321,  321,  321,  321,  299,    0, 
-            0,    0,    0,  321,    0,    0,    0,    0,    0,    0, 
-          321,    0,  321,    0,  321,  321,  321,  321,  321,  321, 
-          321,    0,  321,  297,  321,    0,    0,    0,    0,  233, 
-          233,  233,    0,  297,  233,  233,  233,    0,  233,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  233,  233, 
-            0,    0,    0,    0,    0,    0,  321,  233,  233,    0, 
-          233,  233,  233,  233,  233,    0,    0,  292,    0,    0, 
-            0,    0,  233,  310,    0,    0,    0,    0,    0,    0, 
-            0,    0,  297,  310,    0,  233,  233,  233,  233,  233, 
-          233,  233,  233,  233,  233,    0,  233,  233,    0,    0, 
-          233,  233,    0,    0,    0,    0,  233,    0,    0,  233, 
-            0,    0,  233,    0,  233,    0,    0,  310,  233,    0, 
-            0,    0,  233,  233,  233,  233,  233,    0,  233,    0, 
-          233,    0,  310,    0,  129,    0,  310,    0,  234,  234, 
-          234,    0,  233,  234,  234,  234,    0,  234,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  234,  234,    0, 
-            0,    0,  233,    0,  310,    0,  234,  234,    0,  234, 
-          234,  234,  234,  234,    0,    0,    0,    0,    0,    0, 
-            0,  234,  254,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  254,    0,  234,  234,  234,  234,  234,  234, 
-          234,  234,  234,  234,    0,  234,  234,    0,    0,  234, 
-          234,    0,    0,    0,    0,  234,    0,    0,  234,    0, 
-            0,  234,    0,  234,    0,    0,  254,  234,    0,    0, 
-            0,  234,  234,  234,  234,  234,    0,  234,    0,  234, 
-          254,  254,    0,    0,    0,  254,    0,    0,    0,    0, 
-            0,  234,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  234,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  297,  297,  297,    0,    0, 
-            0,  297,  297,    0,  297,    0,    0,    0,    0,  255, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  255, 
-            0,    0,    0,    0,    0,    0,  297,  297,  297,  297, 
-          297,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  310,  310,  310,    0,    0, 
-            0,  310,  310,  255,  310,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  255,  255,    0, 
-            0,    0,  255,  310,  310,  297,  310,  310,  310,  310, 
-          310,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  297,    0,    0,    0, 
-          310,  310,  310,  310,  310,  310,  310,  310,  310,  310, 
-          310,  310,  310,  310,    0,    0,  310,  310,  310,  310, 
-            0,    0,    0,    0,    0,  310,    0,    0,  297,    0, 
-            0,    0,  310,    0,  310,    0,  310,  310,  310,  310, 
-          310,  310,  310,    0,  310,    0,  310,    0,    0,    0, 
-            0,    0,    0,    0,  254,  254,  254,    0,    0,  254, 
-          254,  254,    0,  254,    0,  244,    0,    0,    0,    0, 
-            0,    0,    0,  254,  254,  244,    0,    0,  310,    0, 
-            0,    0,  254,  254,    0,  254,  254,  254,  254,  254, 
-            0,    0,    0,    0,    0,    0,    0,  254,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  244, 
-          254,  254,  254,  254,  254,  254,  254,  254,  254,  254, 
-            0,  254,  254,  244,  244,  254,  254,    0,  244,    0, 
-            0,  254,    0,    0,  254,    0,    0,  254,    0,  254, 
-            0,    0,    0,  254,    0,    0,    0,    0,    0,  254, 
-          254,  254,    0,  254,    0,  254,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  254,    0,    0, 
-            0,  255,  255,  255,    0,    0,  255,  255,  255,    0, 
-          255,    0,  242,    0,    0,    0,    0,  254,    0,    0, 
-          255,  255,  242,    0,    0,    0,    0,    0,    0,  255, 
-          255,    0,  255,  255,  255,  255,  255,    0,    0,    0, 
-            0,    0,    0,    0,  255,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  242,  255,  255,  255, 
-          255,  255,  255,  255,  255,  255,  255,    0,  255,  255, 
-          242,  242,  255,  255,    0,  242,    0,    0,  255,    0, 
-            0,  255,    0,    0,  255,    0,  255,    0,    0,    0, 
-          255,    0,    0,    0,    0,    0,  255,  255,  255,    0, 
-          255,    0,  255,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  255,    0,    0,    0,    0,    0, 
-            0,  243,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  243,    0,    0,  255,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  521,    0,    0,  519,    0,    0, 
+            0,  518,  518,  518,    0,    0,    0,  518,  518,    0, 
+          518,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  518, 
+          518,    0,  518,  518,  518,  518,  518,    0,    0,    0, 
+            0,    0,    0,    0,    0,  248,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  248,  518,  518,  518,  518, 
+          518,  518,  518,  518,  518,  518,  518,  518,  518,  518, 
+            0,    0,  518,  518,  518,  518,    0,  530,    0,    0, 
+            0,  518,    0,    0,    0,    0,    0,    0,  518,  248, 
+          518,    0,  518,  518,  518,  518,  518,  518,  518,    0, 
+          518,    0,  518,  248,  248,    0,    0,    0,  248,    0, 
+            0,   36,   36,   36,    0,    0,    0,   36,   36,    0, 
+           36,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  518,    0,    0,    0,    0,    0, 
+            0,    0,   36,   36,   36,   36,   36,    0,   61,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,   61,    0, 
+            0,    0,    0,    0,    0,  521,  521,  521,    0,    0, 
+            0,  521,  521,    0,  521,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,   36,    0,  521,  521,    0,  521,  521,  521,  521, 
+          521,    0,    0,    0,  312,    0,    0,   61,    0,    0, 
+            0,    0,   36,    0,  312,    0,    0,    0,    0,    0, 
+          521,  521,  521,  521,  521,  521,  521,  521,  521,  521, 
+          521,  521,  521,  521,    0,    0,  521,  521,  521,  521, 
+            0,  533,    0,    0,   36,  521,    0,    0,  110,    0, 
+            0,    0,  521,    0,  521,    0,  521,  521,  521,  521, 
+          521,  521,  521,  312,  521,  129,  521,  312,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  312,    0,    0,  521,    0, 
+            0,    0,    0,    0,    0,    0,    0,  248,  248,  248, 
+            0,    0,  248,  248,  248,    0,  248,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  248,  248,    0,    0, 
+            0,    0,    0,    0,    0,  248,  248,    0,  248,  248, 
+          248,  248,  248,    0,  323,    0,    0,    0,    0,    0, 
+          248,    0,    0,    0,  323,    0,    0,    0,    0,    0, 
+            0,    0,  248,  248,  248,  248,  248,    0,    0,  248, 
+          248,  248,  248,    0,  248,  248,    0,    0,  248,  248, 
+            0,    0,    0,    0,  248,    0,    0,  248,  109,    0, 
+          248,    0,  248,    0,  248,    0,  248,    0,  248,  248, 
+          248,  248,    0,  323,  248,  128,  248,  323,  248,    0, 
+           61,   61,   61,    0,    0,   61,   61,   61,    0,   61, 
+          248,    0,    0,    0,    0,    0,    0,    0,    0,   61, 
+           61,    0,    0,    0,    0,  323,    0,    0,   61,   61, 
+          248,   61,   61,   61,   61,   61,    0,  235,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  235,    0,    0, 
+            0,    0,    0,    0,    0,    0,  312,  312,  312,    0, 
+            0,    0,  312,  312,    0,  312,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+           61,  235,    0,   61,  312,  312,    0,  312,  312,  312, 
+          312,  312,    0,    0,    0,  235,  235,    0,    0,    0, 
+          235,   61,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  312,  312,  312,  312,  312,  312,  312,  312,  312, 
+          312,  312,  312,  312,  312,    0,    0,  312,  312,  312, 
+          312,    0,    0,   61,    0,    0,  312,    0,    0,    0, 
+            0,    0,    0,  312,    0,  312,    0,  312,  312,  312, 
+          312,  312,  312,  312,    0,  312,  236,  312,    0,    0, 
+            0,    0,    0,    0,    0,    0,  236,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  312, 
+            0,    0,    0,    0,    0,    0,  323,  323,  323,    0, 
+          236,    0,  323,  323,    0,  323,    0,    0,    0,    0, 
+            0,    0,    0,    0,  236,  236,    0,    0,    0,  236, 
+            0,    0,    0,    0,  323,  323,    0,  323,  323,  323, 
+          323,  323,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  323,  323,  323,  323,  323,  323,  323,  323,  323, 
+          323,  323,  323,  323,  323,    0,    0,  323,  323,  323, 
+          323,    0,    0,    0,    0,    0,  323,    0,    0,    0, 
+            0,    0,    0,  323,    0,  323,    0,  323,  323,  323, 
+          323,  323,  323,  323,    0,  323,    0,  323,    0,  235, 
+          235,  235,    0,    0,  235,  235,  235,    0,  235,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  235,  235, 
+            0,    0,    0,    0,    0,    0,    0,  235,  235,  323, 
+          235,  235,  235,  235,  235,    0,    0,    0,    0,    0, 
+            0,    0,  235,  312,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  312,    0,  235,  235,  235,  235,  235, 
+          235,  235,  235,  235,  235,    0,  235,  235,    0,    0, 
+          235,  235,    0,    0,    0,    0,  235,    0,    0,  235, 
+            0,    0,  235,    0,  235,    0,    0,  312,  235,    0, 
+            0,    0,  235,  235,  235,  235,  235,    0,  235,    0, 
+          235,    0,  312,    0,  129,    0,  312,    0,    0,    0, 
+            0,    0,  235,    0,    0,    0,    0,    0,  236,  236, 
+          236,    0,    0,  236,  236,  236,    0,  236,    0,    0, 
+            0,    0,  235,    0,  312,    0,    0,  236,  236,    0, 
+            0,    0,    0,    0,    0,    0,  236,  236,    0,  236, 
+          236,  236,  236,  236,    0,    0,    0,    0,    0,    0, 
+            0,  236,  256,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  256,    0,  236,  236,  236,  236,  236,  236, 
+          236,  236,  236,  236,    0,  236,  236,    0,    0,  236, 
+          236,    0,    0,    0,    0,  236,    0,    0,  236,    0, 
+            0,  236,    0,  236,    0,    0,  256,  236,    0,    0, 
+            0,  236,  236,  236,  236,  236,    0,  236,    0,  236, 
+          256,  256,    0,    0,    0,  256,    0,    0,    0,    0, 
+            0,  236,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  703,  629,    0,    0,  704,    0,    0,    0,  188, 
+          189,  236,  190,  191,  192,  193,  194,  195,  196,    0, 
+            0,  197,  198,    0,    0,  257,  199,  200,  201,  202, 
+            0,    0,    0,    0,    0,  257,  304,    0,    0,    0, 
+            0,    0,    0,  204,  205,    0,  206,  207,  208,  209, 
+          210,  211,  212,  213,  214,  215,  216,    0,    0,  217, 
+            0,    0,    0,    0,    0,  312,  312,  312,    0,  257, 
+            0,  312,  312,    0,  312,    0,    0,    0,    0,    0, 
+            0,    0,    0,  257,  257,    0,    0,    0,  257,    0, 
+            0,    0,    0,  312,  312,    0,  312,  312,  312,  312, 
+          312,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          312,  312,  312,  312,  312,  312,  312,  312,  312,  312, 
+          312,  312,  312,  312,    0,    0,  312,  312,  312,  312, 
+            0,    0,    0,  246,    0,  312,    0,    0,    0,    0, 
+            0,    0,  312,  246,  312,    0,  312,  312,  312,  312, 
+          312,  312,  312,    0,  312,    0,  312,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  256,  256,  256,  246,    0,  256, 
+          256,  256,    0,  256,    0,    0,    0,    0,  312,    0, 
+            0,  246,  246,  256,  256,    0,  246,    0,    0,    0, 
+            0,    0,  256,  256,    0,  256,  256,  256,  256,  256, 
+            0,    0,    0,    0,    0,    0,    0,  256,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          256,  256,  256,  256,  256,  256,  256,  256,  256,  256, 
+            0,  256,  256,    0,    0,  256,  256,    0,    0,    0, 
+            0,  256,    0,    0,  256,  244,    0,  256,    0,  256, 
+            0,    0,    0,  256,    0,  244,    0,    0,    0,  256, 
+          256,  256,    0,  256,    0,  256,    0,  257,  257,  257, 
+            0,    0,  257,  257,  257,    0,  257,  256,    0,    0, 
+            0,    0,    0,    0,    0,    0,  257,  257,    0,  244, 
+            0,    0,    0,    0,    0,  257,  257,  256,  257,  257, 
+          257,  257,  257,  244,  244,    0,    0,    0,  244,    0, 
+          257,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  257,  257,  257,  257,  257,  257,  257, 
+          257,  257,  257,    0,  257,  257,    0,    0,  257,  257, 
+            0,    0,    0,    0,  257,    0,    0,  257,    0,    0, 
+          257,    0,  257,    0,    0,    0,  257,    0,    0,    0, 
+            0,    0,  257,  257,  257,    0,  257,  245,  257,    0, 
+            0,    0,    0,    0,    0,    0,    0,  245,    0,    0, 
+          257,    0,    0,    0,    0,  246,  246,  246,    0,    0, 
+          246,  246,  246,    0,  246,    0,    0,    0,    0,    0, 
+          257,    0,    0,    0,  246,  246,    0,    0,    0,    0, 
+            0,  245,    0,  246,  246,    0,  246,  246,  246,  246, 
+          246,    0,    0,    0,    0,  245,  245,    0,  246,    0, 
+          245,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  246,  246,  246,  246,  246,  246,  246,  246,  246, 
+          246,    0,  246,  246,    0,    0,    0,    0,    0,    0, 
+            0,    0,  246,    0,    0,  246,    0,    0,  246,    0, 
+          246,    0,    0,    0,  246,    0,    0,    0,    0,    0, 
+          246,  246,  246,    0,  246,  267,  246,    0,    0,    0, 
+            0,    0,    0,    0,    0,  267,    0,    0,  246,    0, 
             0,    0,    0,    0,    0,    0,    0,  244,  244,  244, 
-            0,    0,  244,  244,  244,  243,  244,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  244,  244,    0,  243, 
-          243,    0,    0,    0,  243,  244,  244,    0,  244,  244, 
-          244,  244,  244,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  244,  244,  244,    0,  244,    0,  246,    0, 
+            0,    0,    0,    0,    0,    0,  244,  244,    0,  267, 
+            0,    0,    0,    0,    0,  244,  244,    0,  244,  244, 
+          244,  244,  244,  267,  267,    0,    0,    0,  267,    0, 
           244,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,  244,  244,  244,  244,  244,  244,  244, 
           244,  244,  244,    0,  244,  244,    0,    0,    0,    0, 
-            0,    0,    0,    0,  244,    0,    0,  244,  265,    0, 
-          244,    0,  244,    0,    0,    0,  244,    0,  265,    0, 
+            0,    0,    0,    0,  244,    0,    0,  244,  268,    0, 
+          244,    0,  244,    0,    0,    0,    0,    0,  268,    0, 
             0,    0,  244,  244,  244,    0,  244,    0,  244,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          244,    0,    0,    0,  242,  242,  242,    0,    0,  242, 
-          242,  242,  265,  242,    0,    0,    0,    0,    0,    0, 
-          244,    0,    0,  242,  242,    0,  265,  265,    0,    0, 
-            0,  265,  242,  242,    0,  242,  242,  242,  242,  242, 
-            0,    0,    0,    0,    0,    0,    0,  242,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          242,  242,  242,  242,  242,  242,  242,  242,  242,  242, 
-            0,  242,  242,    0,    0,    0,    0,    0,    0,    0, 
-            0,  242,    0,    0,  242,    0,    0,  242,    0,  242, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  242, 
-          242,  242,    0,  242,    0,  242,    0,    0,    0,    0, 
-            0,    0,    0,  243,  243,  243,    0,  242,  243,  243, 
-          243,    0,  243,    0,  266,    0,    0,    0,    0,    0, 
-            0,    0,  243,  243,  266,    0,    0,  242,    0,    0, 
-            0,  243,  243,    0,  243,  243,  243,  243,  243,    0, 
-            0,    0,    0,    0,    0,    0,  243,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  266,  243, 
-          243,  243,  243,  243,  243,  243,  243,  243,  243,    0, 
-          243,  243,  266,  266,    0,    0,    0,  266,    0,    0, 
-          243,    0,    0,  243,    0,    0,  243,    0,  243,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  243,  243, 
-          243,    0,  243,    0,  243,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  243,    0,    0,    0, 
-          265,  265,  265,    0,    0,  265,  265,  265,    0,  265, 
-            0,  245,    0,    0,    0,    0,  243,    0,    0,  265, 
-          265,  245,    0,    0,    0,    0,    0,    0,  265,  265, 
-            0,  265,  265,  265,  265,  265,    0,    0,    0,    0, 
-            0,    0,    0,  265,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  245,  265,  265,  265,  265, 
-          265,  265,  265,  265,  265,  265,    0,  265,  265,  245, 
-          245,    0,    0,    0,  245,    0,    0,  265,    0,    0, 
-          265,    0,    0,  265,    0,  265,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  265,  265,    0,    0,    0, 
-            0,  265,    0,    0,    0,    0,    0,    0,  247,    0, 
-            0,    0,    0,  265,    0,    0,    0,    0,  247,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  265,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  247,    0,    0,    0,  266,  266,  266,    0, 
-            0,  266,  266,  266,    0,  266,  247,  247,    0,    0, 
-            0,  247,    0,    0,    0,  266,  266,    0,    0,    0, 
-            0,    0,    0,    0,  266,  266,    0,  266,  266,  266, 
-          266,  266,    0,    0,    0,    0,  248,    0,    0,  266, 
-            0,    0,    0,    0,    0,    0,  248,    0,    0,    0, 
-            0,    0,  266,  266,  266,  266,  266,  266,  266,  266, 
-          266,  266,    0,  266,  266,    0,    0,    0,    0,    0, 
-            0,    0,    0,  266,    0,    0,  266,    0,    0,  266, 
-          248,  266,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  266,  266,    0,  248,  248,    0,  266,    0,  248, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  266, 
-            0,    0,    0,  245,  245,  245,    0,    0,  245,  245, 
-          245,    0,  245,    0,  249,    0,    0,    0,    0,  266, 
-            0,    0,  245,  245,  249,    0,    0,    0,    0,    0, 
-            0,  245,  245,    0,  245,  245,  245,  245,  245,    0, 
-            0,    0,    0,    0,    0,    0,  245,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  249,    0, 
-            0,    0,    0,    0,    0,  245,  245,    0,    0,    0, 
-          245,  245,  249,  249,    0,    0,    0,  249,    0,    0, 
-          245,    0,    0,  245,    0,    0,  245,    0,  245,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          247,  247,  247,    0,  245,  247,  247,  247,    0,  247, 
-            0,  256,    0,    0,    0,    0,  245,    0,    0,  247, 
-          247,  256,    0,    0,    0,    0,    0,    0,  247,  247, 
-            0,  247,  247,  247,  247,  247,  245,    0,    0,    0, 
-            0,    0,    0,  247,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  256,    0,    0,    0,    0, 
-            0,    0,  247,  247,    0,    0,    0,  247,  247,  256, 
-          256,    0,    0,    0,  256,    0,    0,  247,    0,    0, 
-          247,    0,    0,  247,    0,  247,    0,    0,  248,  248, 
-          248,    0,    0,  248,  248,  248,    0,  248,    0,  250, 
-            0,  247,    0,    0,    0,    0,    0,  248,  248,  250, 
-            0,    0,    0,  247,    0,    0,  248,  248,    0,  248, 
-          248,  248,  248,  248,    0,    0,    0,    0,    0,    0, 
-            0,  248,    0,  247,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  250,    0,    0,    0,    0,    0,    0, 
-          248,  248,    0,    0,    0,  248,  248,  250,  250,    0, 
-            0,    0,  250,    0,    0,  248,    0,    0,  248,    0, 
-            0,  248,    0,  248,    0,    0,  249,  249,  249,    0, 
-            0,  249,  249,  249,    0,  249,    0,  251,    0,  248, 
-            0,    0,    0,    0,    0,  249,  249,  251,    0,    0, 
-            0,  248,    0,    0,  249,  249,    0,  249,  249,  249, 
-          249,  249,    0,    0,    0,    0,    0,    0,    0,  249, 
-            0,  248,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  251,    0,    0,    0,    0,    0,    0,  249,  249, 
-            0,    0,    0,  249,  249,  251,  251,    0,    0,    0, 
-          251,    0,    0,  249,    0,    0,  249,    0,    0,  249, 
-            0,  249,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  256,  256,  256,    0,  249,  256,  256, 
-          256,    0,  256,    0,  257,    0,    0,    0,    0,  249, 
-            0,    0,  256,  256,  257,    0,    0,    0,    0,    0, 
-            0,  256,  256,    0,  256,  256,  256,  256,  256,  249, 
-            0,    0,    0,    0,    0,    0,  256,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  257,    0, 
-            0,    0,    0,    0,    0,  256,  256,    0,    0,    0, 
-          256,  256,  257,  257,    0,    0,    0,  257,    0,    0, 
-          256,    0,    0,  256,    0,    0,  256,    0,  256,    0, 
-            0,  250,  250,  250,    0,    0,  250,  250,  250,    0, 
-          250,    0,  231,    0,  256,    0,    0,    0,    0,    0, 
-          250,  250,  231,    0,    0,    0,  256,    0,    0,  250, 
-          250,    0,  250,  250,  250,  250,  250,    0,    0,    0, 
-            0,    0,    0,    0,  250,    0,  256,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  231,    0,    0,    0, 
-            0,    0,    0,  250,  250,    0,    0,    0,  250,  250, 
-          231,  231,    0,    0,    0,  231,    0,    0,  250,    0, 
-            0,  250,    0,    0,  250,    0,  250,    0,    0,  251, 
-          251,  251,    0,    0,  251,  251,  251,    0,  251,    0, 
-          232,    0,  250,    0,    0,    0,    0,    0,  251,  251, 
-          232,    0,    0,    0,  250,    0,    0,  251,  251,    0, 
-          251,  251,  251,  251,  251,    0,    0,    0,    0,    0, 
-            0,    0,  251,    0,  250,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  232,    0,    0,    0,    0,    0, 
-            0,  251,  251,    0,    0,    0,  251,  251,  232,  232, 
-            0,    0,    0,  232,    0,    0,  251,    0,    0,  251, 
-            0,    0,  251,    0,  251,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  257,  257,  257,  273, 
-          251,  257,  257,  257,    0,  257,    0,    0,    0,  273, 
-            0,    0,  251,    0,    0,  257,  257,    0,    0,    0, 
-            0,    0,    0,    0,  257,  257,    0,  257,  257,  257, 
-          257,  257,  251,    0,    0,    0,    0,    0,    0,  257, 
-            0,    0,    0,  273,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  273,  273,  257, 
-            0,    0,    0,  257,  257,    0,    0,    0,    0,    0, 
-            0,    0,    0,  257,    0,    0,  257,    0,    0,  257, 
-            0,  257,    0,    0,  231,  231,  231,    0,  259,  231, 
-          231,  231,    0,  231,    0,    0,    0,  257,  259,    0, 
-            0,    0,    0,  231,  231,    0,    0,    0,    0,  257, 
-            0,    0,  231,  231,    0,  231,  231,  231,  231,  231, 
-            0,    0,    0,    0,    0,    0,    0,  231,    0,  257, 
-            0,    0,  259,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  259,  259,    0,    0, 
-          224,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          224,  231,    0,    0,  231,    0,    0,  231,    0,  231, 
-            0,    0,  232,  232,  232,    0,    0,  232,  232,  232, 
-            0,  232,    0,    0,    0,  231,    0,    0,    0,    0, 
-            0,  232,  232,    0,  224,    0,    0,  231,    0,    0, 
-          232,  232,    0,  232,  232,  232,  232,  232,  224,  224, 
-            0,    0,    0,    0,    0,  232,    0,  231,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  267,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  267,  232, 
-            0,    0,  232,    0,    0,  232,    0,  232,    0,    0, 
-            0,  273,  273,  273,    0,    0,  273,  273,  273,    0, 
-          273,    0,    0,  232,    0,    0,    0,    0,    0,    0, 
-          273,  273,  267,    0,    0,  232,    0,    0,    0,  273, 
-          273,    0,  273,  273,  273,  273,  273,  267,    0,    0, 
-            0,    0,    0,    0,  273,  232,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  272, 
-            0,    0,    0,    0,    0,    0,    0,    0,  273,  272, 
-            0,  273,    0,    0,  273,    0,  273,    0,    0,    0, 
-          259,  259,  259,    0,    0,  259,  259,  259,    0,  259, 
-            0,    0,  273,    0,    0,    0,    0,    0,    0,  259, 
-          259,    0,    0,  272,  273,    0,    0,    0,  259,  259, 
-            0,  259,  259,  259,  259,  259,    0,  272,  272,    0, 
-            0,    0,    0,  259,  273,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  224,  224,  224,  294,    0,  224,  224,  224, 
-            0,  224,    0,    0,    0,  294,    0,  259,    0,    0, 
-          259,  224,  224,  259,    0,  259,    0,    0,    0,    0, 
-          224,  224,    0,  224,  224,  224,  224,  224,    0,    0, 
-            0,  259,  648,    0,    0,  224,    0,    0,    0,  294, 
-            0,    0,  648,  259,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  294,    0,    0,    0,    0,    0, 
-            0,    0,    0,  259,    0,    0,    0,    0,    0,  224, 
-            0,    0,  224,    0,    0,  224,    0,  224,    0,    0, 
-          267,  267,  267,    0,    0,  267,  267,  267,    0,  267, 
-            0,  648,    0,  224,    0,    0,    0,    0,    0,  267, 
-          267,    0,    0,    0,    0,  224,    0,    0,  267,  267, 
-            0,  267,  267,  267,  267,  267,    0,    0,    0,    0, 
-           61,    0,    0,  267,    0,  224,    0,    0,    0,    0, 
-           61,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  267,    0,    0, 
-          267,    0,    0,  267,    0,  267,    0,    0,    0,    0, 
-            0,  272,  272,  272,    0,    0,  272,  272,  272,   61, 
-          272,  267,   65,    0,    0,    0,    0,    0,    0,    0, 
-          272,  272,   65,  267,    0,    0,    0,    0,    0,  272, 
-          272,    0,  272,  272,  272,  272,    0,    0,    0,    0, 
-            0,    0,    0,  267,  272,    0,    0,    0,    0,    0, 
-            0,    0,    0,   63,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,   63,    0,    0,    0,    0,    0,   25, 
-            0,   65,    0,    0,    0,    0,    0,    0,  272,   25, 
-            0,  272,    0,    0,  272,    0,  272,  294,  294,  294, 
-            0,    0,  294,  294,  294,    0,  294,    0,    0,    0, 
-            0,    0,  272,    0,    0,    0,  294,  294,    0,    0, 
-            0,    0,   63,    0,  272,  294,  294,    0,  294,  294, 
-          294,  294,  294,    0,  648,  648,  648,    0,   25,  648, 
-          648,  648,    0,  648,  272,    0,    0,    0,    0,    0, 
-            0,    0,    0,  648,  648,    0,    0,    0,    0,    0, 
-            0,    0,  648,  648,    0,  648,  648,  648,  648,  648, 
-            0,    0,    0,    0,    0,    0,    0,  294,    0,    0, 
-          294,    0,  294,    0,    0,    0,    0,    0,  308,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  294,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  648,    0,    0,  648,    0,  648, 
-            0,    0,   61,   61,   61,    0,    0,   61,   61,   61, 
-          294,   61,    0,    0,    0,  648,    0,    0,    0,    0, 
-            0,   61,   61,    0,    0,    0,    0,    0,    0,    0, 
-           61,   61,    0,   61,   61,   61,   61,   61,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  648,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,   65,   65,   65,    0,    0,   65, 
-           65,   65,    0,   65,    0,    0,    0,    0,    0,    0, 
-            0,    0,   61,   65,   65,   61,    0,    0,    0,    0, 
-            0,    0,   65,   65,    0,   65,   65,   65,   65,   65, 
-            0,    0,    0,   61,    0,   63,   63,   63,  130,    0, 
-           63,   63,   63,    0,   63,    0,    0,    0,    0,    0, 
-            0,   25,   25,   25,   63,   63,    0,   25,   25,    0, 
-           25,    0,    0,   63,   63,   61,   63,   63,   63,   63, 
-           63,    0,    0,    0,   65,    0,    0,   65,    0,    0, 
-            0,    0,   25,   25,   25,   25,   25,  130,    0,    0, 
-            0,    0,    0,    0,    0,   65,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,   63,    0,    0,   63,  515, 
-            0,    0,    0,    0,    0,    0,    0,   65,    0,    0, 
-            0,   25,    0,    0,    0,    0,   63,    0,    0,    0, 
-            0,    0,    0,    0,    0,    4,    5,    6,    0,    8, 
-            0,    0,   25,    9,   10,    0,    0,    0,   11,    0, 
-           12,   13,   14,   15,   16,   17,   18,    0,   63,    0, 
-            0,   19,   20,   21,  239,  240,  241,  242,  131,    0, 
-          118,    0,    0,    0,   25,    0,    0,   28,    0,    0, 
-          243,  244,  245,    0,  246,   35,  247,  248,  249,  250, 
-          285,   40,   41,   42,   43,    0,    0,    0,    0,    0, 
+          244,    0,    0,    0,    0,    0,    0,    0,    0,  245, 
+          245,  245,  268,    0,  245,  245,  245,    0,  245,    0, 
+          244,    0,    0,    0,    0,    0,  268,  268,  245,  245, 
+            0,  268,    0,    0,    0,    0,    0,  245,  245,    0, 
+          245,  245,  245,  245,  245,    0,    0,    0,    0,    0, 
+            0,    0,  245,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  245,  245,  245,  245,  245, 
+          245,  245,  245,  245,  245,    0,  245,  245,    0,    0, 
+            0,    0,    0,    0,    0,    0,  245,    0,    0,  245, 
+            0,  247,  245,    0,  245,    0,    0,    0,    0,    0, 
+            0,  247,    0,    0,  245,  245,  245,    0,  245,    0, 
+          245,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  245,    0,    0,    0,    0,  267,  267,  267, 
+            0,    0,  267,  267,  267,  247,  267,    0,    0,    0, 
+            0,    0,  245,    0,    0,    0,  267,  267,    0,  247, 
+          247,    0,    0,    0,  247,  267,  267,    0,  267,  267, 
+          267,  267,  267,    0,    0,    0,    0,    0,    0,    0, 
+          267,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  267,  267,  267,  267,  267,  267,  267, 
+          267,  267,  267,    0,  267,  267,    0,    0,    0,    0, 
+            0,    0,    0,    0,  267,    0,    0,  267,  249,    0, 
+          267,    0,  267,    0,    0,    0,    0,    0,  249,    0, 
+            0,    0,  267,  267,    0,    0,    0,    0,  267,    0, 
+          268,  268,  268,    0,    0,  268,  268,  268,    0,  268, 
+          267,    0,    0,    0,    0,    0,    0,    0,    0,  268, 
+          268,    0,  249,    0,    0,    0,    0,    0,  268,  268, 
+          267,  268,  268,  268,  268,  268,  249,  249,    0,    0, 
+            0,  249,    0,  268,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  268,  268,  268,  268, 
+          268,  268,  268,  268,  268,  268,    0,  268,  268,    0, 
+            0,    0,    0,    0,    0,    0,    0,  268,    0,    0, 
+          268,    0,    0,  268,    0,  268,    0,  250,    0,    0, 
+            0,    0,    0,    0,    0,  268,  268,  250,    0,    0, 
+            0,  268,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  268,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  247,  247,  247,    0,    0,  247,  247, 
+          247,  250,  247,  268,    0,    0,    0,    0,    0,    0, 
+            0,    0,  247,  247,    0,  250,  250,    0,    0,    0, 
+          250,  247,  247,    0,  247,  247,  247,  247,  247,    0, 
+            0,    0,    0,    0,    0,    0,  247,    0,    0,    0, 
+            0,    0,    0,    0,  251,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  251,  247,  247,    0,    0,    0, 
+          247,  247,    0,    0,    0,    0,    0,    0,    0,    0, 
+          247,    0,    0,  247,    0,    0,  247,    0,  247,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  251,    0, 
+            0,    0,    0,    0,  247,    0,    0,    0,    0,    0, 
+            0,    0,  251,  251,    0,    0,  247,  251,    0,    0, 
+          249,  249,  249,    0,    0,  249,  249,  249,    0,  249, 
+            0,    0,    0,    0,    0,    0,  247,    0,    0,  249, 
+          249,    0,    0,    0,    0,    0,    0,    0,  249,  249, 
+            0,  249,  249,  249,  249,  249,    0,  258,    0,    0, 
+            0,    0,    0,  249,    0,    0,    0,  258,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  249,  249,    0,    0,    0,  249,  249,    0, 
+            0,    0,    0,    0,    0,    0,    0,  249,    0,    0, 
+          249,  258,    0,  249,    0,  249,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  258,  258,    0,    0,    0, 
+          258,  249,    0,    0,    0,    0,    0,    0,    0,  250, 
+          250,  250,    0,  249,  250,  250,  250,    0,  250,    0, 
+            0,    0,    0,    0,  252,    0,    0,    0,  250,  250, 
+            0,    0,    0,  249,  252,    0,    0,  250,  250,    0, 
+          250,  250,  250,  250,  250,    0,    0,    0,    0,    0, 
+            0,    0,  250,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  252,    0, 
+            0,  250,  250,    0,    0,    0,  250,  250,    0,    0, 
+            0,    0,  252,  252,    0,    0,  250,  252,    0,  250, 
+            0,    0,  250,    0,  250,    0,  251,  251,  251,    0, 
+            0,  251,  251,  251,    0,  251,    0,    0,    0,    0, 
+          250,  253,    0,    0,    0,  251,  251,    0,    0,    0, 
+            0,  253,  250,    0,  251,  251,    0,  251,  251,  251, 
+          251,  251,    0,    0,    0,    0,    0,    0,    0,  251, 
+            0,    0,  250,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  253,    0,    0,  251,  251, 
+            0,    0,    0,  251,  251,    0,    0,    0,    0,  253, 
+          253,    0,    0,  251,  253,    0,  251,    0,    0,  251, 
+            0,  251,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  251,    0,  258, 
+          258,  258,    0,    0,  258,  258,  258,    0,  258,  251, 
+            0,    0,    0,    0,  259,    0,    0,    0,  258,  258, 
+            0,    0,    0,    0,  259,    0,    0,  258,  258,  251, 
+          258,  258,  258,  258,  258,    0,    0,    0,    0,    0, 
+            0,    0,  258,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  259,    0, 
+            0,  258,  258,    0,    0,    0,  258,  258,    0,    0, 
+            0,    0,  259,  259,    0,    0,  258,  259,    0,  258, 
+            0,    0,  258,    0,  258,    0,  252,  252,  252,    0, 
+            0,  252,  252,  252,    0,  252,    0,    0,    0,    0, 
+          258,  231,    0,    0,    0,  252,  252,    0,    0,    0, 
+            0,  231,  258,    0,  252,  252,    0,  252,  252,  252, 
+          252,  252,    0,    0,    0,    0,    0,    0,    0,  252, 
+            0,    0,  258,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  231,    0,    0,  252,  252, 
+            0,    0,    0,  252,  252,    0,    0,    0,    0,  231, 
+          231,    0,    0,  252,  231,    0,  252,    0,    0,  252, 
+            0,  252,    0,  253,  253,  253,    0,    0,  253,  253, 
+          253,    0,  253,    0,    0,    0,    0,  252,  232,    0, 
+            0,    0,  253,  253,    0,    0,    0,    0,  232,  252, 
+            0,  253,  253,    0,  253,  253,  253,  253,  253,    0, 
+            0,    0,    0,    0,    0,    0,  253,    0,    0,  252, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  232,    0,    0,  253,  253,    0,    0,    0, 
+          253,  253,    0,    0,    0,    0,  232,  232,    0,    0, 
+          253,  232,    0,  253,    0,    0,  253,    0,  253,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  253,    0,  259,  259,  259,  275, 
+            0,  259,  259,  259,    0,  259,  253,    0,    0,  275, 
+            0,    0,    0,    0,    0,  259,  259,    0,    0,    0, 
+            0,    0,    0,    0,  259,  259,  253,  259,  259,  259, 
+          259,  259,    0,    0,    0,    0,    0,    0,    0,  259, 
+            0,    0,    0,  275,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  275,  275,  259, 
+            0,  261,    0,  259,  259,    0,    0,    0,    0,    0, 
+            0,  261,    0,  259,    0,    0,  259,    0,    0,  259, 
+            0,  259,    0,  231,  231,  231,    0,    0,  231,  231, 
+          231,    0,  231,    0,    0,    0,    0,  259,    0,    0, 
+            0,    0,  231,  231,    0,  261,    0,    0,    0,  259, 
+            0,  231,  231,    0,  231,  231,  231,  231,  231,  261, 
+          261,    0,    0,    0,    0,    0,  231,    0,    0,  259, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  224,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  224,    0, 
+          231,    0,    0,  231,    0,    0,  231,    0,  231,    0, 
+          232,  232,  232,    0,    0,  232,  232,  232,    0,  232, 
+            0,    0,    0,    0,  231,    0,    0,    0,    0,  232, 
+          232,    0,  224,    0,    0,    0,  231,    0,  232,  232, 
+            0,  232,  232,  232,  232,  232,  224,  224,    0,    0, 
+          269,    0,    0,  232,    0,    0,  231,    0,    0,    0, 
+          269,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  232,    0,    0, 
+          232,    0,    0,  232,  269,  232,    0,    0,    0,    0, 
+            0,  275,  275,  275,    0,    0,  275,  275,  275,  269, 
+          275,  232,    0,    0,    0,    0,    0,    0,    0,    0, 
+          275,  275,    0,  232,    0,    0,    0,    0,    0,  275, 
+          275,    0,  275,  275,  275,  275,  275,    0,    0,    0, 
+            0,  274,    0,  232,  275,    0,    0,    0,    0,    0, 
+            0,  274,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  261,  261,  261,    0,    0,  261,  261, 
+          261,    0,  261,    0,    0,    0,    0,    0,  275,    0, 
+          296,  275,  261,  261,  275,  274,  275,    0,    0,    0, 
+          296,  261,  261,    0,  261,  261,  261,  261,  261,  274, 
+          274,    0,  275,    0,    0,    0,  261,    0,    0,    0, 
+            0,    0,    0,    0,  275,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  296,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  275,    0,    0,    0,    0,  296, 
+          261,    0,    0,  261,    0,    0,  261,    0,  261,    0, 
+          224,  224,  224,    0,    0,  224,  224,  224,    0,  224, 
+            0,    0,    0,    0,  261,    0,    0,    0,    0,  224, 
+          224,    0,    0,    0,    0,    0,  261,  650,  224,  224, 
+            0,  224,  224,  224,  224,  224,    0,  650,    0,    0, 
+            0,    0,    0,  224,    0,    0,  261,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  269,  269,  269,   65,    0,  269,  269,  269, 
+            0,  269,    0,    0,    0,   65,    0,  224,    0,    0, 
+          224,  269,  269,  224,    0,  224,  650,    0,    0,    0, 
+          269,  269,    0,  269,  269,  269,  269,  269,    0,    0, 
+            0,  224,    0,    0,    0,  269,    0,    0,    0,    0, 
+            0,    0,    0,  224,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,   65,    0,    0,    0,    0,    0, 
+           63,    0,    0,  224,    0,    0,    0,    0,    0,  269, 
+           63,    0,  269,    0,    0,  269,    0,  269,    0,    0, 
+            0,    0,    0,  274,  274,  274,    0,    0,  274,  274, 
+          274,    0,  274,  269,    0,    0,    0,    0,    0,  301, 
+            0,    0,  274,  274,    0,  269,    0,    0,    0,  301, 
+            0,  274,  274,    0,  274,  274,  274,  274,    0,   63, 
+            0,    0,  296,  296,  296,  269,  274,  296,  296,  296, 
+            0,  296,    0,    0,    0,  274,    0,    0,    0,    0, 
+            0,  296,  296,  297,    0,  274,    0,    0,    0,  299, 
+          296,  296,    0,  296,  296,  296,  296,  296,  301,  299, 
+          274,    0,    0,  274,    0,    0,  274,    0,  274,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  269, 
+            0,    0,    0,    0,  274,   25,    0,    0,    0,    0, 
+            0,    0,    0,  294,  274,   25,  274,    0,    0,    0, 
+            0,    0,  296,    0,    0,  296,    0,  296,  299,    0, 
+            0,    0,    0,    0,    0,    0,  274,    0,    0,  650, 
+          650,  650,    0,  296,  650,  650,  650,    0,  650,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  650,  650, 
+            0,    0,    0,    0,   25,    0,    0,  650,  650,    0, 
+          650,  650,  650,  650,  650,  296,    0,   65,   65,   65, 
+            0,    0,   65,   65,   65,    0,   65,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,   65,   65,    0,    0, 
+            0,    0,    0,    0,    0,   65,   65,    0,   65,   65, 
+           65,   65,   65,    0,  308,    0,    0,    0,    0,  650, 
+            0,    0,  650,    0,  650,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          650,    0,   63,   63,   63,    0,    0,   63,   63,   63, 
+            0,   63,    0,    0,    0,    0,    0,   65,    0,    0, 
+           65,   63,   63,    0,    0,    0,    0,    0,    0,    0, 
+           63,   63,  650,   63,   63,   63,   63,   63,   65,    0, 
+            0,  301,  301,  301,    0,    0,  301,  301,  301,    0, 
+          301,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+           65,    0,  301,  301,  301,  301,  301,  274,  274,  274, 
+            0,    0,   63,  274,  274,   63,  274,    0,    0,    0, 
+            0,  299,  299,  299,    0,    0,    0,  299,  299,    0, 
+          299,    0,    0,   63,    0,  274,  274,    0,  274,  274, 
+          274,  274,    0,    0,  130,    0,    0,    0,  301,    0, 
+            0,  301,  299,  299,  299,  299,  299,   25,   25,   25, 
+            0,    0,    0,   25,   25,   63,   25,    0,    0,    0, 
+            0,    0,  301,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  274,   25,   25, 
+           25,   25,   25,  130,    0,    0,    0,    0,    0,    0, 
+            0,  299,    0,    0,  301,    0,    0,    0,  274,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  299,    0,    0,  517,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,   25,    0,    0, 
+          274,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    4,    5,    6,  299,    8,    0,    0,   25,    9, 
+           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, 
+           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, 
+          239,  240,  241,  242,  131,    0,  118,    0,    0,    0, 
+           25,    0,    0,   28,    0,    0,  243,  244,  245,    0, 
+          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, 
+           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  251,    0,  131,  131,    0, 
-            0,   46,   47,    0,   48,    0,  286,    0,  287,    0, 
-           50,    0,    0,    0,    0,    0,    0,    0,  288,    0, 
-            0,    0,    0,   52,  289,   54,   55,   56,   57,  518, 
-            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
-           64,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-           65,   66,  290,    0,  130,  130,  130,  130,  130,  130, 
-          130,  130,  130,  130,  130,    0,    0,  130,  130,    0, 
-          130,  130,  130,  130,  130,  130,  130,    0,  618,    0, 
-            0,  130,  130,  130,  130,  130,  130,  130,  130,    0, 
-          130,    0,    0,    0,    0,    0,  130,  130,    0,  130, 
-          130,  130,  130,    0,  130,  130,  130,  130,  130,  130, 
-            0,  130,  130,  130,  130,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  515,    0,    0,    0, 
-            0,    0,    0,  515,  515,  130,    0,  130,  130,  618, 
-            0,  130,  130,    0,  130,    0,  130,    0,    0,    0, 
-          130,    0,    0,    0,    0,  130,    0,    0,  130,    0, 
-          618,    0,    0,  130,  130,  130,  130,  130,  130,  625, 
-            0,    0,  130,    0,  130,  130,    0,  130,  130,  130, 
+            0,  251,    0,  131,  131,    0,    0,   46,   47,    0, 
+           48,    0,  286,    0,  287,    0,   50,    0,    0,    0, 
+            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, 
+          289,   54,   55,   56,   57,  520,    0,    0,   58,    0, 
+           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,   65,   66,  290,    0, 
+          130,  130,  130,  130,  130,  130,  130,  130,  130,  130, 
+          130,    0,    0,  130,  130,    0,  130,  130,  130,  130, 
+          130,  130,  130,    0,  620,    0,    0,  130,  130,  130, 
+          130,  130,  130,  130,  130,    0,  130,    0,    0,    0, 
+            0,    0,  130,  130,    0,  130,  130,  130,  130,    0, 
+          130,  130,  130,  130,  130,  130,    0,  130,  130,  130, 
           130,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          130,  130,    0,    0,  131,  131,  131,  131,  131,  131, 
-          131,  131,  131,  131,  131,    0,    0,  131,  131,    0, 
-          131,  131,  131,  131,  131,  131,  131,    0,  619,    0, 
-            0,  131,  131,  131,  131,  131,  131,  131,  131,    0, 
-          131,    0,    0,    0,    0,    0,  131,  131,    0,  131, 
-          131,  131,  131,    0,  131,  131,  131,  131,  131,  131, 
-            0,  131,  131,  131,  131,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  518,    0,    0,    0, 
-            0,    0,    0,  518,  518,  131,    0,  131,  131,  619, 
-            0,  131,  131,    0,  131,    0,  131,    0,    0,    0, 
-          131,    0,    0,    0,    0,  131,    0,    0,  131,    0, 
-          619,    0,    0,  131,  131,  131,  131,  131,  131,  320, 
-            0,    0,  131,    0,  131,  131,    0,  131,  131,  131, 
+            0,    0,  517,    0,    0,    0,    0,    0,    0,  517, 
+          517,  130,    0,  130,  130,  620,    0,  130,  130,    0, 
+          130,    0,  130,    0,    0,    0,  130,    0,    0,    0, 
+            0,  130,    0,    0,  130,    0,  620,    0,    0,  130, 
+          130,  130,  130,  130,  130,  627,    0,    0,  130,    0, 
+          130,  130,    0,  130,  130,  130,  130,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  130,  130,    0,    0, 
+          131,  131,  131,  131,  131,  131,  131,  131,  131,  131, 
+          131,    0,    0,  131,  131,    0,  131,  131,  131,  131, 
+          131,  131,  131,    0,  621,    0,    0,  131,  131,  131, 
+          131,  131,  131,  131,  131,    0,  131,    0,    0,    0, 
+            0,    0,  131,  131,    0,  131,  131,  131,  131,    0, 
+          131,  131,  131,  131,  131,  131,    0,  131,  131,  131, 
           131,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          131,  131,    0,    0,  130,  130,  130,  130,  130,  130, 
-          130,  130,  130,  130,  130,    0,    0,  130,  130,    0, 
-          130,  130,  130,  130,  130,  130,  130,    0,  625,    0, 
-            0,  130,  130,  130,  130,  130,  130,  130,  131,    0, 
-          130,    0,    0,    0,    0,    0,  130,  130,    0,  130, 
-          130,  130,  130,    0,  130,  130,  130,  130,  130,  130, 
-            0,  130,  130,  130,  130,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  625,    0,    0,    0, 
-            0,    0,    0,  625,  625,  130,    0,  131,  130,  621, 
-            0,  130,  130,    0,  130,    0,  130,    0,    0,    0, 
-          130,    0,    0,    0,    0,  130,    0,    0,  130,    0, 
-          625,    0,    0,  130,  130,  130,  130,  130,  130,  321, 
-            0,    0,  130,    0,  130,  130,    0,  130,  130,  130, 
+            0,    0,  520,    0,    0,    0,    0,    0,    0,  520, 
+          520,  131,    0,  131,  131,  621,    0,  131,  131,    0, 
+          131,    0,  131,    0,    0,    0,  131,    0,    0,    0, 
+            0,  131,    0,    0,  131,    0,  621,    0,    0,  131, 
+          131,  131,  131,  131,  131,  322,    0,    0,  131,    0, 
+          131,  131,    0,  131,  131,  131,  131,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  131,  131,    0,    0, 
+          130,  130,  130,  130,  130,  130,  130,  130,  130,  130, 
+          130,    0,    0,  130,  130,    0,  130,  130,  130,  130, 
+          130,  130,  130,    0,  627,    0,    0,  130,  130,  130, 
+          130,  130,  130,  130,  131,    0,  130,    0,    0,    0, 
+            0,    0,  130,  130,    0,  130,  130,  130,  130,    0, 
+          130,  130,  130,  130,  130,  130,    0,  130,  130,  130, 
           130,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          130,  130,    0,    0,  131,  131,  131,  131,  131,  131, 
-          131,  131,  131,  131,  131,    0,    0,  131,  131,    0, 
-          131,  131,  131,  131,  131,  131,  131,    0,    0,    0, 
-            0,  131,  131,  131,  131,  131,  131,  131,  364,    0, 
-          131,    0,    0,    0,    0,    0,  131,  131,    0,  131, 
-          131,  131,  131,    0,  131,  131,  131,  131,  131,  131, 
-            0,  131,  131,  131,  131,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  320,    0,    0,    0, 
-            0,    0,    0,  320,  320,  131,    0,  364,  131,  622, 
-            0,  131,  131,    0,  131,    0,  131,    0,    0,    0, 
-          131,    0,    0,    0,    0,  131,    0,    0,  131,    0, 
-            0,    0,    0,  131,  131,  131,  131,  131,  131,    0, 
-            0,    0,  131,    0,  131,  131,    0,  131,  131,  131, 
+            0,    0,  627,    0,    0,    0,    0,    0,    0,  627, 
+          627,  130,    0,  131,  130,  623,    0,  130,  130,    0, 
+          130,    0,  130,    0,    0,    0,  130,    0,    0,    0, 
+            0,  130,    0,    0,  130,    0,  627,    0,    0,  130, 
+          130,  130,  130,  130,  130,  323,    0,    0,  130,    0, 
+          130,  130,    0,  130,  130,  130,  130,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  130,  130,    0,    0, 
+          131,  131,  131,  131,  131,  131,  131,  131,  131,  131, 
+          131,    0,    0,  131,  131,    0,  131,  131,  131,  131, 
+          131,  131,  131,    0,    0,    0,    0,  131,  131,  131, 
+          131,  131,  131,  131,  366,    0,  131,    0,    0,    0, 
+            0,    0,  131,  131,    0,  131,  131,  131,  131,    0, 
+          131,  131,  131,  131,  131,  131,    0,  131,  131,  131, 
           131,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          131,  131,    0,    0,  131,  131,  131,  131,  131,  131, 
-          131,  131,  131,  131,  131,    0,    0,  131,  131,    0, 
-          131,  131,  131,  131,  131,  131,  131,    0,    0,    0, 
-            0,  131,  131,  131,  131,  131,  131,  131,  312,    0, 
-          131,    0,    0,    0,    0,    0,  131,  131,    0,  131, 
-          131,  131,  131,    0,  131,  131,  131,  131,  131,  131, 
-            0,  131,  131,  131,  131,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  321,    0,    0,    0, 
-            0,    0,    0,  321,  321,  131,    0,  312,  131,    0, 
-            0,  131,  131,    0,  131,    0,  131,    0,    0,    0, 
-          131,    0,    0,    0,    0,  131,    0,    0,  131,    0, 
-            0,    0,    0,  131,  131,  131,  131,  131,  131,    0, 
-            0,    0,  131,    0,  131,  131,    0,  131,  131,  131, 
+            0,    0,  322,    0,    0,    0,    0,    0,    0,  322, 
+          322,  131,    0,  366,  131,  624,    0,  131,  131,    0, 
+          131,    0,  131,    0,    0,    0,  131,    0,    0,    0, 
+            0,  131,    0,    0,  131,    0,    0,    0,    0,  131, 
+          131,  131,  131,  131,  131,    0,    0,    0,  131,    0, 
+          131,  131,    0,  131,  131,  131,  131,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  131,  131,    0,    0, 
+          131,  131,  131,  131,  131,  131,  131,  131,  131,  131, 
+          131,    0,    0,  131,  131,    0,  131,  131,  131,  131, 
+          131,  131,  131,    0,    0,    0,    0,  131,  131,  131, 
+          131,  131,  131,  131,  314,    0,  131,    0,    0,    0, 
+            0,    0,  131,  131,    0,  131,  131,  131,  131,    0, 
+          131,  131,  131,  131,  131,  131,    0,  131,  131,  131, 
           131,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          131,  131,    0,    0,  364,  364,  364,  364,  364,  364, 
-          364,  364,  364,  364,  364,    0,  364,  364,  364,  364, 
-          364,  364,  364,  364,  364,  364,  364,    0,    0,    0, 
-            0,  364,  364,  364,  364,  364,  364,  364,  543,    0, 
-          364,    0,    0,    0,    0,    0,  364,  364,    0,  364, 
-          364,  364,  364,    0,  364,  364,  364,  364,  364,  364, 
-            0,  364,  364,  364,  364,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  364,    0,  543,  364,    0, 
-            0,  364,  364,    0,  364,    0,  364,    0,    0,    0, 
-          364,    0,    0,    0,    0,    0,    0,    0,  364,    0, 
-            0,    0,    0,  364,  364,  364,  364,  364,  364,    0, 
-            0,    0,  364,    0,  364,  364,    0,  364,  364,  364, 
-          364,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          364,  364,    0,    0,  312,  312,  312,  312,  312,  312, 
-          312,  312,  312,  312,  312,    0,    0,  312,  312,    0, 
-          312,  312,  312,  312,  312,  312,  312,    0,    0,    0, 
-            0,  312,  312,  312,  312,  312,  312,  312,  647,    0, 
-          312,    0,    0,    0,    0,    0,  312,  312,    0,  312, 
-          312,  312,  312,    0,  312,  312,  312,  312,  312,  312, 
-            0,  312,  312,  312,  312,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  312,    0,  647,  312,    0, 
-            0,  312,  312,    0,  312,    0,  312,    0,    0,    0, 
-          312,    0,    0,    0,    0,    0,    0,    0,  312,    0, 
-           18,    0,    0,  312,  312,  312,  312,  312,  312,    0, 
-            0,    0,  312,    0,  312,  312,    0,  312,  312,  312, 
-          312,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          312,  312,    0,    0,  543,  543,  543,  543,  543,  543, 
-          543,  543,  543,  543,  543,    0,    0,  543,  543,    0, 
-          543,  543,  543,  543,  543,  543,  543,    0,  647,    0, 
-            0,  543,  543,  543,  543,  543,  543,  543,    0,    0, 
-          543,    0,    0,    0,    0,    0,  543,  543,    0,  543, 
-          543,  543,  543,    0,  543,  543,  543,  543,  543,  543, 
-            0,  543,  543,  543,  543,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  647,    0,    0, 
-            0,    0,    0,    0,    0,  543,    0,    0,  543,    0, 
-            0,  543,  543,    0,  543,    0,  543,    0,    0,    0, 
-          543,    0,    0,    0,    0,    0,    0,    0,  543,    0, 
-            0,    0,    0,  543,  543,  543,  543,  543,  543,    0, 
-            0,    0,  543,    0,  543,  543,    0,  543,  543,  543, 
-          543,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          543,  543,    0,    0,  647,  647,  647,  647,  647,  647, 
-          647,  647,  647,  647,  647,    0,    0,  647,  647,    0, 
-          647,  647,  647, 
+            0,    0,  323,    0,    0,    0,    0,    0,    0,  323, 
+          323,  131,    0,  314,  131,    0,    0,  131,  131,    0, 
+          131,    0,  131,    0,    0,    0,  131,    0,    0,    0, 
+            0,  131,    0,    0,  131,    0,    0,    0,    0,  131, 
+          131,  131,  131,  131,  131,    0,    0,    0,  131,    0, 
+          131,  131,    0,  131,  131,  131,  131,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  131,  131,    0,    0, 
+          366,  366,  366,  366,  366,  366,  366,  366,  366,  366, 
+          366,    0,  366,  366,  366,  366,  366,  366,  366,  366, 
+          366,  366,  366,    0,    0,    0,    0,  366,  366,  366, 
+          366,  366,  366,  366,  545,    0,  366,    0,    0,    0, 
+            0,    0,  366,  366,    0,  366,  366,  366,  366,    0, 
+          366,  366,  366,  366,  366,  366,    0,  366,  366,  366, 
+          366,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  366,    0,  545,  366,    0,    0,  366,  366,    0, 
+          366,    0,  366,    0,    0,    0,  366,    0,    0,    0, 
+            0,    0,    0,    0,  366,    0,    0,    0,    0,  366, 
+          366,  366,  366,  366,  366,    0,    0,    0,  366,    0, 
+          366,  366,    0,  366,  366,  366,  366,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  366,  366,    0,    0, 
+          314,  314,  314,  314,  314,  314,  314,  314,  314,  314, 
+          314,    0,    0,  314,  314,    0,  314,  314,  314,  314, 
+          314,  314,  314,    0,    0,    0,    0,  314,  314,  314, 
+          314,  314,  314,  314,  649,    0,  314,    0,    0,    0, 
+            0,    0,  314,  314,    0,  314,  314,  314,  314,    0, 
+          314,  314,  314,  314,  314,  314,    0,  314,  314,  314, 
+          314,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  314,    0,  649,  314,    0,    0,  314,  314,    0, 
+          314,    0,  314,    0,    0,    0,  314,    0,    0,    0, 
+            0,    0,    0,    0,  314,    0,   18,    0,    0,  314, 
+          314,  314,  314,  314,  314,    0,    0,    0,  314,    0, 
+          314,  314,    0,  314,  314,  314,  314,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  314,  314,    0,    0, 
+          545,  545,  545,  545,  545,  545,  545,  545,  545,  545, 
+          545,    0,    0,  545,  545,    0,  545,  545,  545,  545, 
+          545,  545,  545,    0,  649,    0,    0,  545,  545,  545, 
+          545,  545,  545,  545,    0,    0,  545,    0,    0,    0, 
+            0,    0,  545,  545,    0,  545,  545,  545,  545,    0, 
+          545,  545,  545,  545,  545,  545,    0,  545,  545,  545, 
+          545,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0, 
       };
    }
 
    private static final short[] yyTable4() {
       return new short[] {
 
-          647,  647,  647,  647,  647,    0,    0,    0,  647,  647, 
-          647,  647,  647,  647,  647,    0,    0,  647,    0,    0, 
-            0,    0,    0,  647,  647,    0,  647,  647,  647,  647, 
-            0,  647,  647,  647,  647,  647,  647,    0,  647,  647, 
-          647,  647,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  647,    0,    0,    0,    0,    0,    0, 
-            0,    0,  647,    0,    0,  647,    0,    0,  647,  647, 
-            0,  647,    0,  647,    0,    0,    0,  647,    0,    0, 
-            0,    0,    0,    0,    0,  647,    0,    0,    0,    0, 
-          647,  647,  647,  647,  647,  647,    0,    0,    0,  647, 
-            0,  647,  647,    0,  647,  647,  647,  647,    0,    0, 
-            0,  647,  647,  647,  647,  647,  647,  647,  647,  647, 
-          647,  647,    0,    0,    0,  647,    0,  647,  647,  647, 
-          647,  647,  647,  647,  314,    0,    0,    0,  647,  647, 
-          647,  647,  647,  647,  647,    0,    0,  647,    0,    0, 
-            0,    0,    0,  647,  647,    0,  647,  647,  647,  647, 
-            0,  647,  647,  647,  647,  647,  647,    0,  647,  647, 
-          647,  647,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  647,    0,    0,  647,    0,    0,  647,  647, 
-            0,  647,    0,  647,    0,    0,    0,  647,    0,    0, 
-            0,    0,    0,    0,    0,  647,    0,    0,    0,    0, 
-          647,  647,  647,  647,  647,  647,    0,    0,    0,  647, 
-            0,  647,  647,    0,  647,  647,  647,  647,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  647,  647,    0, 
-          647,  647,  647,  647,  647,  647,    0,    0,    0,  647, 
-          647,    0,    0,  260,  647,    0,  647,  647,  647,  647, 
-          647,  647,  647,    0,    0,    0,    0,  647,  647,  647, 
-          647,  647,  647,  647,    0,    0,  647,    0,    0,    0, 
-            0,    0,  647,  647,    0,  647,  647,  647,  647,    0, 
-          647,  647,  647,  647,  647,  647,    0,  647,  647,  647, 
-          647,    0,  259,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  647,    0,    0,  647,    0,    0,  647,  647,    0, 
-          647,    0,  647,    0,    0,    0,  647,    0,    0,    0, 
-            0,    0,    0,    0,  647,    0,    0,  647,    0,  647, 
-          647,  647,  647,  647,  647,    0,    0,    0,  647,    0, 
-          647,  647,    0,  647,  647,  647,  647,    0,    0,    0, 
-            0,  316,  316,  316,  316,  316,  647,  647,    0,  316, 
-          316,    0,  308,    0,  316,    0,  316,  316,  316,  316, 
-          316,  316,  316,    0,    0,    0,    0,  316,  316,  316, 
-          316,  316,  316,  316,    0,    0,  316,    0,    0,    0, 
-            0,    0,  316,  316,    0,  316,  316,  316,  316,    0, 
-          316,  316,  316,  316,  316,  316,    0,  316,  316,  316, 
-          316,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  316,    0,    0,  316,    0,  314,  316,  316,    0, 
-          316,    0,  316,    0,    0,    0,  316,    0,    0,    0, 
-            0,    0,    0,    0,  316,    0,    0,    0,    0,  316, 
-          316,  316,  316,  316,  316,    0,    0,    0,  316,    0, 
-          316,  316,    0,  316,  316,  316,  316,    0,    0,    0, 
-            4,    5,    6,    0,    8,    0,  316,  316,    9,   10, 
-            0,    0,    0,   11,    0,   12,   13,   14,   15,   16, 
-           17,   18,    0,    0,    0,    0,   19,   20,   21,  239, 
-          240,  241,  242,    0,    0,   26,    0,    0,    0,    0, 
-            0,    0,   28,    0,    0,  243,  244,  245,    0,  246, 
-           35,  247,  248,  249,  250,  353,   40,   41,   42,   43, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          251,    0,    0,  131,    0,    0,   46,   47,    0,   48, 
-            0,    0,    0,    0,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,   51,    0,    0,    0,    0,   52,   53, 
-           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,    0,    0,    4, 
-            5,    6,    0,    8,    0,   65,   66,    9,   10,    0, 
-            0,    0,   11,    0,   12,   13,   14,   15,   16,   17, 
-           18,    0,    0,    0,    0,   19,   20,   21,  239,  240, 
-          241,  242,    0,    0,   26,    0,    0,    0,    0,    0, 
-            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, 
-          247,  248,  249,  250,  654,   40,   41,   42,   43,    0, 
+            0,    0,  649,    0,    0,    0,    0,    0,    0,    0, 
+          545,    0,    0,  545,    0,    0,  545,  545,    0,  545, 
+            0,  545,    0,    0,    0,  545,    0,    0,    0,    0, 
+            0,    0,    0,  545,    0,    0,    0,    0,  545,  545, 
+          545,  545,  545,  545,    0,    0,    0,  545,    0,  545, 
+          545,    0,  545,  545,  545,  545,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  545,  545,    0,    0,  649, 
+          649,  649,  649,  649,  649,  649,  649,  649,  649,  649, 
+            0,    0,  649,  649,    0,  649,  649,  649,  649,  649, 
+          649,  649,  649,    0,    0,    0,  649,  649,  649,  649, 
+          649,  649,  649,    0,    0,  649,    0,    0,    0,    0, 
+            0,  649,  649,    0,  649,  649,  649,  649,    0,  649, 
+          649,  649,  649,  649,  649,    0,  649,  649,  649,  649, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  649,    0,    0,    0,    0,    0,    0,    0,    0, 
+          649,    0,    0,  649,    0,    0,  649,  649,    0,  649, 
+            0,  649,    0,    0,    0,  649,    0,    0,    0,    0, 
+            0,    0,    0,  649,    0,    0,    0,    0,  649,  649, 
+          649,  649,  649,  649,    0,    0,    0,  649,    0,  649, 
+          649,    0,  649,  649,  649,  649,    0,    0,    0,  649, 
+          649,  649,  649,  649,  649,  649,  649,  649,  649,  649, 
+            0,    0,    0,  649,    0,  649,  649,  649,  649,  649, 
+          649,  649,  316,    0,    0,    0,  649,  649,  649,  649, 
+          649,  649,  649,    0,    0,  649,    0,    0,    0,    0, 
+            0,  649,  649,    0,  649,  649,  649,  649,    0,  649, 
+          649,  649,  649,  649,  649,    0,  649,  649,  649,  649, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          649,    0,    0,  649,    0,    0,  649,  649,    0,  649, 
+            0,  649,    0,    0,    0,  649,    0,    0,    0,    0, 
+            0,    0,    0,  649,    0,    0,    0,    0,  649,  649, 
+          649,  649,  649,  649,    0,    0,    0,  649,    0,  649, 
+          649,    0,  649,  649,  649,  649,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  649,  649,    0,  649,  649, 
+          649,  649,  649,  649,    0,    0,    0,  649,  649,    0, 
+            0,  260,  649,    0,  649,  649,  649,  649,  649,  649, 
+          649,    0,    0,    0,    0,  649,  649,  649,  649,  649, 
+          649,  649,    0,    0,  649,    0,    0,    0,    0,    0, 
+          649,  649,    0,  649,  649,  649,  649,    0,  649,  649, 
+          649,  649,  649,  649,    0,  649,  649,  649,  649,    0, 
+          259,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  649, 
+            0,    0,  649,    0,    0,  649,  649,    0,  649,    0, 
+          649,    0,    0,    0,  649,    0,    0,    0,    0,    0, 
+            0,    0,  649,    0,    0,  649,    0,  649,  649,  649, 
+          649,  649,  649,    0,    0,    0,  649,    0,  649,  649, 
+            0,  649,  649,  649,  649,    0,    0,    0,    0,  318, 
+          318,  318,  318,  318,  649,  649,    0,  318,  318,    0, 
+          308,    0,  318,    0,  318,  318,  318,  318,  318,  318, 
+          318,    0,    0,    0,    0,  318,  318,  318,  318,  318, 
+          318,  318,    0,    0,  318,    0,    0,    0,    0,    0, 
+          318,  318,    0,  318,  318,  318,  318,    0,  318,  318, 
+          318,  318,  318,  318,    0,  318,  318,  318,  318,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  318, 
+            0,    0,  318,    0,  316,  318,  318,    0,  318,    0, 
+          318,    0,    0,    0,  318,    0,    0,    0,    0,    0, 
+            0,    0,  318,    0,    0,    0,    0,  318,  318,  318, 
+          318,  318,  318,    0,    0,    0,  318,    0,  318,  318, 
+            0,  318,  318,  318,  318,    0,    0,    0,    4,    5, 
+            6,    0,    8,    0,  318,  318,    9,   10,    0,    0, 
+            0,   11,    0,   12,   13,   14,   15,   16,   17,   18, 
+            0,    0,    0,    0,   19,   20,   21,  239,  240,  241, 
+          242,    0,    0,   26,    0,    0,    0,    0,    0,    0, 
+           28,    0,    0,  243,  244,  245,    0,  246,   35,  247, 
+          248,  249,  250,  353,   40,   41,   42,   43,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, 
-            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, 
-            0,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
-            0,    0,   51,    0,    0,    0,    0,   52,   53,   54, 
-           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
-            0,   61,   62,   63,   64,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,   65,   66,    0,    0,    4,    5, 
-            6,    0,    8,    0,    0,    0,    9,   10,    0,    0, 
-            0,   11,    0,   12,   13,   14,  109,  110,   17,   18, 
-            0,    0,    0,    0,  111,  112,  113,  340,  341,  342, 
-          343,    0,    0,  118,    0,    0,    0,    0,    0,    0, 
-          119,    0,    0,  344,  345,  346,    0,  347,   35,  348, 
-          349,  350,  351,    0,   40,    0,    0,  128,  471,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  352,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  251,    0, 
             0,  131,    0,    0,   46,   47,    0,   48,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,   52,   53,   54,   55, 
+            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, 
+            0,   51,    0,    0,    0,    0,   52,   53,   54,   55, 
            56,   57,    0,    0,    0,   58,    0,   59,   60,    0, 
            61,   62,   63,   64,    0,    0,    0,    4,    5,    6, 
             0,    8,    0,   65,   66,    9,   10,    0,    0,    0, 
-           11,    0,   12,   13,   14,  109,  110,   17,   18,    0, 
-            0,    0,    0,  111,  112,  113,  340,  341,  342,  343, 
-            0,    0,  118,    0,    0,    0,    0,    0,    0,  119, 
-            0,    0,  344,  345,  346,    0,  347,   35,  348,  349, 
-          350,  351,    0,   40,    0,    0,  128,  471,    0,    0, 
+           11,    0,   12,   13,   14,   15,   16,   17,   18,    0, 
+            0,    0,    0,   19,   20,   21,  239,  240,  241,  242, 
+            0,    0,   26,    0,    0,    0,    0,    0,    0,   28, 
+            0,    0,  243,  244,  245,    0,  246,   35,  247,  248, 
+          249,  250,  654,   40,   41,   42,   43,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  352,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  251,    0,    0, 
           131,    0,    0,   46,   47,    0,   48,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
+            0,    0,   50,    0,    0,    0,    0,    0,    0,    0, 
+           51,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
            57,    0,    0,    0,   58,    0,   59,   60,    0,   61, 
-           62,   63,   64,    0,    0,    0,    4,    5,    6,    7, 
-            8,    0,   65,   66,    9,   10,    0,    0,    0,   11, 
-            0,   12,   13,   14,   15,   16,   17,   18,    0,    0, 
-            0,    0,   19,   20,   21,   22,   23,   24,   25,    0, 
-            0,   26,    0,    0,    0,    0,    0,   27,   28,   29, 
-           30,   31,   32,   33,    0,   34,   35,   36,   37,   38, 
-           39,    0,   40,   41,   42,   43,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,   44,    0,    0,   45, 
-            0,    0,   46,   47,    0,   48,    0,   49,    0,    0, 
-            0,   50,    0,    0,    0,    0,    0,    0,    0,   51, 
+           62,   63,   64,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,   65,   66,    0,    0,    4,    5,    6,    0, 
+            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
+            0,   12,   13,   14,  109,  110,   17,   18,    0,    0, 
+            0,    0,  111,  112,  113,  340,  341,  342,  343,    0, 
+            0,  118,    0,    0,    0,    0,    0,    0,  119,    0, 
+            0,  344,  345,  346,    0,  347,   35,  348,  349,  350, 
+          351,    0,   40,    0,    0,  128,  471,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  352,    0,    0,  131, 
+            0,    0,   46,   47,    0,   48,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,   52,   53,   54,   55,   56,   57, 
             0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
-           63,   64,    0,    0,    0,    4,    5,    6,    7,  321, 
+           63,   64,    0,    0,    0,    4,    5,    6,    0,    8, 
             0,   65,   66,    9,   10,    0,    0,    0,   11,    0, 
-           12,   13,   14,   15,   16,   17,   18,    0,    0,    0, 
-            0,   19,   20,   21,   22,   23,   24,   25,    0,    0, 
-           26,    0,    0,    0,    0,    0,   27,   28,    0,   30, 
-           31,   32,   33,    0,   34,   35,   36,   37,   38,   39, 
-            0,   40,   41,   42,   43,    0,    0,    0,    0,    0, 
+           12,   13,   14,  109,  110,   17,   18,    0,    0,    0, 
+            0,  111,  112,  113,  340,  341,  342,  343,    0,    0, 
+          118,    0,    0,    0,    0,    0,    0,  119,    0,    0, 
+          344,  345,  346,    0,  347,   35,  348,  349,  350,  351, 
+            0,   40,    0,    0,  128,  471,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  352,    0,    0,  131,    0, 
+            0,   46,   47,    0,   48,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,   44,    0,    0,   45,    0, 
-            0,   46,   47,    0,   48,    0,   49,    0,    0,    0, 
-           50,    0,    0,    0,    0,    0,    0,    0,   51,    0, 
             0,    0,    0,   52,   53,   54,   55,   56,   57,    0, 
             0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
-           64,    0,    0,    3,    4,    5,    6,    7,    8,    0, 
+           64,    0,    0,    0,    4,    5,    6,    7,    8,    0, 
            65,   66,    9,   10,    0,    0,    0,   11,    0,   12, 
            13,   14,   15,   16,   17,   18,    0,    0,    0,    0, 
            19,   20,   21,   22,   23,   24,   25,    0,    0,   26, 
@@ -2049,7 +2058,7 @@
             0,    0,    0,    0,    0,    0,    0,   51,    0,    0, 
             0,    0,   52,   53,   54,   55,   56,   57,    0,    0, 
             0,   58,    0,   59,   60,    0,   61,   62,   63,   64, 
-            0,    0,  320,    4,    5,    6,    7,  321,    0,   65, 
+            0,    0,    0,    4,    5,    6,    7,  321,    0,   65, 
            66,    9,   10,    0,    0,    0,   11,    0,   12,   13, 
            14,   15,   16,   17,   18,    0,    0,    0,    0,   19, 
            20,   21,   22,   23,   24,   25,    0,    0,   26,    0, 
@@ -2057,16 +2066,16 @@
            33,    0,   34,   35,   36,   37,   38,   39,    0,   40, 
            41,   42,   43,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,   44,    0,    0,  322,    0,    0,   46, 
+            0,    0,    0,   44,    0,    0,   45,    0,    0,   46, 
            47,    0,   48,    0,   49,    0,    0,    0,   50,    0, 
             0,    0,    0,    0,    0,    0,   51,    0,    0,    0, 
             0,   52,   53,   54,   55,   56,   57,    0,    0,    0, 
            58,    0,   59,   60,    0,   61,   62,   63,   64,    0, 
-            0,  320,    4,    5,    6,    7,  321,    0,   65,   66, 
+            0,    3,    4,    5,    6,    7,    8,    0,   65,   66, 
             9,   10,    0,    0,    0,   11,    0,   12,   13,   14, 
            15,   16,   17,   18,    0,    0,    0,    0,   19,   20, 
            21,   22,   23,   24,   25,    0,    0,   26,    0,    0, 
-            0,    0,    0,   27,   28,    0,   30,   31,   32,   33, 
+            0,    0,    0,   27,   28,   29,   30,   31,   32,   33, 
             0,   34,   35,   36,   37,   38,   39,    0,   40,   41, 
            42,   43,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
@@ -2075,111 +2084,20 @@
             0,    0,    0,    0,    0,   51,    0,    0,    0,    0, 
            52,   53,   54,   55,   56,   57,    0,    0,    0,   58, 
             0,   59,   60,    0,   61,   62,   63,   64,    0,    0, 
-            0,    4,    5,    6,    0,    8,    0,   65,   66,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, 
-           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, 
-          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, 
-            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, 
-          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, 
-           48,    0,  286,    0,  287,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, 
-          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
-            0,    4,    5,    6,    0,    8,   65,   66,  290,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, 
-          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, 
-          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, 
-            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, 
-          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, 
-           48,    0,  708,    0,  287,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, 
-          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
-            0,  287,  287,  287,    0,  287,   65,   66,  290,  287, 
-          287,    0,    0,    0,  287,    0,  287,  287,  287,  287, 
-          287,  287,  287,    0,    0,    0,    0,  287,  287,  287, 
-          287,  287,  287,  287,    0,    0,  287,    0,    0,    0, 
-            0,    0,    0,  287,    0,    0,  287,  287,  287,    0, 
-          287,  287,  287,  287,  287,  287,  287,  287,  287,  287, 
-          287,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  287,    0,    0,  287,    0,    0,  287,  287,    0, 
-          287,    0,  287,    0,  287,    0,  287,    0,    0,    0, 
-            0,    0,    0,    0,  287,    0,    0,    0,    0,  287, 
-          287,  287,  287,  287,  287,    0,    0,    0,  287,    0, 
-          287,  287,    0,  287,  287,  287,  287,    0,    0,    0, 
-            0,    4,    5,    6,    0,    8,  287,  287,  287,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, 
-          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, 
-          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, 
-            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, 
-          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, 
-           48,    0,  286,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, 
-          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
-            0,    4,    5,    6,    0,    8,   65,   66,  290,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, 
-          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, 
-          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, 
-            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, 
-          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, 
-           48,    0,    0,    0,  287,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, 
-          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
-            0,    4,    5,    6,    0,    8,   65,   66,  290,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, 
-          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, 
-          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, 
-            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, 
-          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, 
-           48,    0,  708,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, 
-          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
-            0,    4,    5,    6,    0,    8,   65,   66,  290,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, 
-          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, 
-          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, 
-            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, 
-          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, 
-           48,    0,    0,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, 
-          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
-            0,    4,    5,    6,    7,    8,   65,   66,  290,    9, 
+          320,    4,    5,    6,    7,  321,    0,   65,   66,    9, 
            10,    0,    0,    0,   11,    0,   12,   13,   14,   15, 
            16,   17,   18,    0,    0,    0,    0,   19,   20,   21, 
            22,   23,   24,   25,    0,    0,   26,    0,    0,    0, 
-            0,    0,   27,   28,   29,   30,   31,   32,   33,    0, 
+            0,    0,   27,   28,    0,   30,   31,   32,   33,    0, 
            34,   35,   36,   37,   38,   39,    0,   40,   41,   42, 
            43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,   44,    0,    0,   45,    0,    0,   46,   47,    0, 
+            0,   44,    0,    0,  322,    0,    0,   46,   47,    0, 
            48,    0,   49,    0,    0,    0,   50,    0,    0,    0, 
             0,    0,    0,    0,   51,    0,    0,    0,    0,   52, 
            53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
-            4,    5,    6,    7,    8,    0,   65,   66,    9,   10, 
+           59,   60,    0,   61,   62,   63,   64,    0,    0,  320, 
+            4,    5,    6,    7,  321,    0,   65,   66,    9,   10, 
             0,    0,    0,   11,    0,   12,   13,   14,   15,   16, 
            17,   18,    0,    0,    0,    0,   19,   20,   21,   22, 
            23,   24,   25,    0,    0,   26,    0,    0,    0,    0, 
@@ -2193,29 +2111,120 @@
            54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
            60,    0,   61,   62,   63,   64,    0,    0,    0,    4, 
             5,    6,    0,    8,    0,   65,   66,    9,   10,    0, 
+            0,    0,   11,    0,   12,   13,   14,   15,   16,   17, 
+           18,    0,    0,    0,    0,   19,   20,   21,  239,  240, 
+          241,  242,    0,    0,  118,    0,    0,    0,    0,    0, 
+            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, 
+          247,  248,  249,  250,  285,   40,   41,   42,   43,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, 
+            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, 
+          286,    0,  287,    0,   50,    0,    0,    0,    0,    0, 
+            0,    0,  288,    0,    0,    0,    0,   52,  289,   54, 
+           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
+            0,   61,   62,   63,   64,    0,    0,    0,    0,    4, 
+            5,    6,    0,    8,   65,   66,  290,    9,   10,    0, 
             0,    0,   11,    0,   12,   13,   14,  109,  110,   17, 
            18,    0,    0,    0,    0,  111,  112,  113,  239,  240, 
           241,  242,    0,    0,  118,    0,    0,    0,    0,    0, 
             0,   28,    0,    0,  243,  244,  245,    0,  246,   35, 
-          247,  248,  249,  250,    0,   40,   41,   42,   43,    0, 
+          247,  248,  249,  250,  285,   40,   41,   42,   43,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, 
+            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, 
+          708,    0,  287,    0,   50,    0,    0,    0,    0,    0, 
+            0,    0,  288,    0,    0,    0,    0,   52,  289,   54, 
+           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
+            0,   61,   62,   63,   64,    0,    0,    0,    0,  289, 
+          289,  289,    0,  289,   65,   66,  290,  289,  289,    0, 
+            0,    0,  289,    0,  289,  289,  289,  289,  289,  289, 
+          289,    0,    0,    0,    0,  289,  289,  289,  289,  289, 
+          289,  289,    0,    0,  289,    0,    0,    0,    0,    0, 
+            0,  289,    0,    0,  289,  289,  289,    0,  289,  289, 
+          289,  289,  289,  289,  289,  289,  289,  289,  289,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  289, 
+            0,    0,  289,    0,    0,  289,  289,    0,  289,    0, 
+          289,    0,  289,    0,  289,    0,    0,    0,    0,    0, 
+            0,    0,  289,    0,    0,    0,    0,  289,  289,  289, 
+          289,  289,  289,    0,    0,    0,  289,    0,  289,  289, 
+            0,  289,  289,  289,  289,    0,    0,    0,    0,    4, 
+            5,    6,    0,    8,  289,  289,  289,    9,   10,    0, 
+            0,    0,   11,    0,   12,   13,   14,  109,  110,   17, 
+           18,    0,    0,    0,    0,  111,  112,  113,  239,  240, 
+          241,  242,    0,    0,  118,    0,    0,    0,    0,    0, 
+            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, 
+          247,  248,  249,  250,  285,   40,   41,   42,   43,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, 
+            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, 
+          286,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
+            0,    0,  288,    0,    0,    0,    0,   52,  289,   54, 
+           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
+            0,   61,   62,   63,   64,    0,    0,    0,    0,    4, 
+            5,    6,    0,    8,   65,   66,  290,    9,   10,    0, 
+            0,    0,   11,    0,   12,   13,   14,  109,  110,   17, 
+           18,    0,    0,    0,    0,  111,  112,  113,  239,  240, 
+          241,  242,    0,    0,  118,    0,    0,    0,    0,    0, 
+            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, 
+          247,  248,  249,  250,  285,   40,   41,   42,   43,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, 
+            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, 
+            0,    0,  287,    0,   50,    0,    0,    0,    0,    0, 
+            0,    0,  288,    0,    0,    0,    0,   52,  289,   54, 
+           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
+            0,   61,   62,   63,   64,    0,    0,    0,    0,    4, 
+            5,    6,    0,    8,   65,   66,  290,    9,   10,    0, 
+            0,    0,   11,    0,   12,   13,   14,  109,  110,   17, 
+           18,    0,    0,    0,    0,  111,  112,  113,  239,  240, 
+          241,  242,    0,    0,  118,    0,    0,    0,    0,    0, 
+            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, 
+          247,  248,  249,  250,  285,   40,   41,   42,   43,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, 
+            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, 
+          708,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
+            0,    0,  288,    0,    0,    0,    0,   52,  289,   54, 
+           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
+            0,   61,   62,   63,   64,    0,    0,    0,    0,    4, 
+            5,    6,    0,    8,   65,   66,  290,    9,   10,    0, 
+            0,    0,   11,    0,   12,   13,   14,  109,  110,   17, 
+           18,    0,    0,    0,    0,  111,  112,  113,  239,  240, 
+          241,  242,    0,    0,  118,    0,    0,    0,    0,    0, 
+            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, 
+          247,  248,  249,  250,  285,   40,   41,   42,   43,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,  251, 
-            0,    0,  131,  506,    0,   46,   47,    0,   48,    0, 
+            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, 
             0,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
-            0,    0,  288,    0,    0,    0,    0,   52,   53,   54, 
+            0,    0,  288,    0,    0,    0,    0,   52,  289,   54, 
+           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
+            0,   61,   62,   63,   64,    0,    0,    0,    0,    4, 
+            5,    6,    7,    8,   65,   66,  290,    9,   10,    0, 
+            0,    0,   11,    0,   12,   13,   14,   15,   16,   17, 
+           18,    0,    0,    0,    0,   19,   20,   21,   22,   23, 
+           24,   25,    0,    0,   26,    0,    0,    0,    0,    0, 
+           27,   28,   29,   30,   31,   32,   33,    0,   34,   35, 
+           36,   37,   38,   39,    0,   40,   41,   42,   43,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,   44, 
+            0,    0,   45,    0,    0,   46,   47,    0,   48,    0, 
+           49,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
+            0,    0,   51,    0,    0,    0,    0,   52,   53,   54, 
            55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
             0,   61,   62,   63,   64,    0,    0,    0,    4,    5, 
-            6,    0,    8,    0,   65,   66,    9,   10,    0,    0, 
+            6,    7,    8,    0,   65,   66,    9,   10,    0,    0, 
             0,   11,    0,   12,   13,   14,   15,   16,   17,   18, 
-            0,    0,    0,    0,   19,   20,   21,  239,  240,  241, 
-          242,    0,    0,  118,    0,    0,    0,    0,    0,    0, 
-           28,    0,    0,  243,  244,  245,    0,  246,   35,  247, 
-          248,  249,  250,    0,   40,   41,   42,   43,    0,    0, 
+            0,    0,    0,    0,   19,   20,   21,   22,   23,   24, 
+           25,    0,    0,   26,    0,    0,    0,    0,    0,   27, 
+           28,    0,   30,   31,   32,   33,    0,   34,   35,   36, 
+           37,   38,   39,    0,   40,   41,   42,   43,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  251,    0, 
-            0,  131,    0,    0,   46,   47,    0,   48,    0,  646, 
+            0,    0,    0,    0,    0,    0,    0,    0,   44,    0, 
+            0,   45,    0,    0,   46,   47,    0,   48,    0,   49, 
             0,    0,    0,   50,    0,    0,    0,    0,    0,    0, 
-            0,  288,    0,    0,    0,    0,   52,   53,   54,   55, 
+            0,   51,    0,    0,    0,    0,   52,   53,   54,   55, 
            56,   57,    0,    0,    0,   58,    0,   59,   60,    0, 
            61,   62,   63,   64,    0,    0,    0,    4,    5,    6, 
             0,    8,    0,   65,   66,    9,   10,    0,    0,    0, 
@@ -2226,14 +2235,14 @@
           249,  250,    0,   40,   41,   42,   43,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,  251,    0,    0, 
-          131,    0,    0,   46,   47,    0,   48,    0,  286,    0, 
+          131,  506,    0,   46,   47,    0,   48,    0,    0,    0, 
             0,    0,   50,    0,    0,    0,    0,    0,    0,    0, 
           288,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
            57,    0,    0,    0,   58,    0,   59,   60,    0,   61, 
            62,   63,   64,    0,    0,    0,    4,    5,    6,    0, 
             8,    0,   65,   66,    9,   10,    0,    0,    0,   11, 
-            0,   12,   13,   14,  109,  110,   17,   18,    0,    0, 
-            0,    0,  111,  112,  113,  239,  240,  241,  242,    0, 
+            0,   12,   13,   14,   15,   16,   17,   18,    0,    0, 
+            0,    0,   19,   20,   21,  239,  240,  241,  242,    0, 
             0,  118,    0,    0,    0,    0,    0,    0,   28,    0, 
             0,  243,  244,  245,    0,  246,   35,  247,  248,  249, 
           250,    0,   40,   41,   42,   43,    0,    0,    0,    0, 
@@ -2252,7 +2261,7 @@
             0,   40,   41,   42,   43,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,  251,    0,    0,  131,    0, 
-            0,   46,   47,    0,   48,    0,  924,    0,    0,    0, 
+            0,   46,   47,    0,   48,    0,  286,    0,    0,    0, 
            50,    0,    0,    0,    0,    0,    0,    0,  288,    0, 
             0,    0,    0,   52,   53,   54,   55,   56,   57,    0, 
             0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
@@ -2265,123 +2274,123 @@
            40,   41,   42,   43,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,  251,    0,    0,  131,    0,    0, 
-           46,   47,    0,   48,    0,  708,    0,    0,    0,   50, 
+           46,   47,    0,   48,    0,  646,    0,    0,    0,   50, 
             0,    0,    0,    0,    0,    0,    0,  288,    0,    0, 
             0,    0,   52,   53,   54,   55,   56,   57,    0,    0, 
             0,   58,    0,   59,   60,    0,   61,   62,   63,   64, 
-            0,    0,    0,  636,  636,  636,    0,  636,    0,   65, 
-           66,  636,  636,    0,    0,    0,  636,    0,  636,  636, 
-          636,  636,  636,  636,  636,    0,    0,    0,    0,  636, 
-          636,  636,  636,  636,  636,  636,    0,    0,  636,    0, 
-            0,    0,    0,    0,    0,  636,    0,    0,  636,  636, 
-          636,    0,  636,  636,  636,  636,  636,  636,    0,  636, 
-          636,  636,  636,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  636,    0,    0,  636,  636,    0,  636, 
-          636,    0,  636,    0,    0,    0,    0,    0,  636,    0, 
-            0,    0,    0,    0,    0,    0,  636,    0,    0,    0, 
-            0,  636,  636,  636,  636,  636,  636,    0,    0,    0, 
-          636,    0,  636,  636,    0,  636,  636,  636,  636,    0, 
-            0,    0,    4,    5,    6,    0,    8,    0,  636,  636, 
+            0,    0,    0,    4,    5,    6,    0,    8,    0,   65, 
+           66,    9,   10,    0,    0,    0,   11,    0,   12,   13, 
+           14,  109,  110,   17,   18,    0,    0,    0,    0,  111, 
+          112,  113,  239,  240,  241,  242,    0,    0,  118,    0, 
+            0,    0,    0,    0,    0,   28,    0,    0,  243,  244, 
+          245,    0,  246,   35,  247,  248,  249,  250,    0,   40, 
+           41,   42,   43,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  251,    0,    0,  131,    0,    0,   46, 
+           47,    0,   48,    0,  924,    0,    0,    0,   50,    0, 
+            0,    0,    0,    0,    0,    0,  288,    0,    0,    0, 
+            0,   52,   53,   54,   55,   56,   57,    0,    0,    0, 
+           58,    0,   59,   60,    0,   61,   62,   63,   64,    0, 
+            0,    0,    4,    5,    6,    0,    8,    0,   65,   66, 
             9,   10,    0,    0,    0,   11,    0,   12,   13,   14, 
-           15,   16,   17,   18,    0,    0,    0,    0,   19,   20, 
-           21,  239,  240,  241,  242,    0,    0,   26,    0,    0, 
+          109,  110,   17,   18,    0,    0,    0,    0,  111,  112, 
+          113,  239,  240,  241,  242,    0,    0,  118,    0,    0, 
             0,    0,    0,    0,   28,    0,    0,  243,  244,  245, 
             0,  246,   35,  247,  248,  249,  250,    0,   40,   41, 
            42,   43,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,  251,    0,    0,  131,    0,    0,   46,   47, 
-            0,   48,    0,    0,    0,    0,    0,   50,    0,    0, 
-            0,    0,    0,    0,    0,   51,    0,    0,    0,    0, 
+            0,   48,    0,  708,    0,    0,    0,   50,    0,    0, 
+            0,    0,    0,    0,    0,  288,    0,    0,    0,    0, 
            52,   53,   54,   55,   56,   57,    0,    0,    0,   58, 
             0,   59,   60,    0,   61,   62,   63,   64,    0,    0, 
-            0,    4,    5,    6,    0,    8,    0,   65,   66,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, 
-          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, 
-          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, 
-            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, 
-          246,   35,  247,  248,  249,  250,    0,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, 
-           48,    0,    0,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, 
-           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
-            4,    5,    6,    0,    8,    0,   65,   66,    9,   10, 
+            0,  638,  638,  638,    0,  638,    0,   65,   66,  638, 
+          638,    0,    0,    0,  638,    0,  638,  638,  638,  638, 
+          638,  638,  638,    0,    0,    0,    0,  638,  638,  638, 
+          638,  638,  638,  638,    0,    0,  638,    0,    0,    0, 
+            0,    0,    0,  638,    0,    0,  638,  638,  638,    0, 
+          638,  638,  638,  638,  638,  638,    0,  638,  638,  638, 
+          638,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  638,    0,    0,  638,  638,    0,  638,  638,    0, 
+          638,    0,    0,    0,    0,    0,  638,    0,    0,    0, 
+            0,    0,    0,    0,  638,    0,    0,    0,    0,  638, 
+          638,  638,  638,  638,  638,    0,    0,    0,  638,    0, 
+          638,  638,    0,  638,  638,  638,  638,    0,    0,    0, 
+            4,    5,    6,    0,    8,    0,  638,  638,    9,   10, 
             0,    0,    0,   11,    0,   12,   13,   14,   15,   16, 
            17,   18,    0,    0,    0,    0,   19,   20,   21,  239, 
-          240,  241,  242,    0,    0,  118,    0,    0,    0,    0, 
+          240,  241,  242,    0,    0,   26,    0,    0,    0,    0, 
             0,    0,   28,    0,    0,  243,  244,  245,    0,  246, 
            35,  247,  248,  249,  250,    0,   40,   41,   42,   43, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
           251,    0,    0,  131,    0,    0,   46,   47,    0,   48, 
             0,    0,    0,    0,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,  288,    0,    0,    0,    0,   52,   53, 
+            0,    0,    0,   51,    0,    0,    0,    0,   52,   53, 
            54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,    0,    0,  636, 
-          636,  636,    0,  636,    0,   65,   66,  636,  636,    0, 
-            0,    0,  636,    0,  636,  636,  636,  636,  636,  636, 
-          636,    0,    0,    0,    0,  636,  636,  636,  636,  636, 
-          636,  636,    0,    0,  636,    0,    0,    0,    0,    0, 
-            0,  636,    0,    0,  636,  636,  636,    0,  636,  636, 
-          636,  636,  636,  636,    0,  636,  636,  636,  636,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  636, 
-            0,    0,  636,    0,    0,  636,  636,    0,  636,    0, 
-            0,    0,    0,    0,  636,    0,    0,    0,    0,    0, 
-            0,    0,  636,    0,    0,    0,    0,  636,  636,  636, 
-          636,  636,  636,    0,    0,    0,  636,    0,  636,  636, 
-            0,  636,  636,  636,  636,    0,    0,    0,    4,    5, 
-            6,    0,    8,    0,  636,  636,    9,   10,    0,    0, 
-            0,   11,    0,   12,   13,   14,  109,  110,   17,   18, 
-            0,    0,    0,    0,  111,  112,  113,  114,  115,  116, 
-          117,    0,    0,  118,    0,    0,    0,    0,    0,    0, 
-          119,    0,    0,  120,  121,  122,    0,  123,   35,  124, 
-          125,  126,  127,    0,   40,    0,    0,  128,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  129,    0,    0,    0,  130,    0, 
-            0,  131,    0,    0,   46,   47,    0,   48,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,   52,   53,   54,   55, 
-           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, 
-           61,   62,   63,   64,    0,    0,    0,    4,    5,    6, 
-            0,    8,    0,   65,   66,    9,   10,    0,    0,    0, 
-           11,    0,   12,   13,   14,  109,  110,   17,   18,    0, 
-            0,    0,    0,  111,  112,  113,  267,  268,  269,  270, 
-            0,    0,  118,    0,    0,    0,    0,    0,    0,  119, 
-            0,    0,  271,  272,  273,    0,  274,   35,  275,  276, 
-          277,  278,    0,   40,    0,    0,  128,    0,    0,    0, 
+           60,    0,   61,   62,   63,   64,    0,    0,    0,    4, 
+            5,    6,    0,    8,    0,   65,   66,    9,   10,    0, 
+            0,    0,   11,    0,   12,   13,   14,  109,  110,   17, 
+           18,    0,    0,    0,    0,  111,  112,  113,  239,  240, 
+          241,  242,    0,    0,  118,    0,    0,    0,    0,    0, 
+            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, 
+          247,  248,  249,  250,    0,   40,   41,   42,   43,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  279,    0,    0, 
-           45,    0,    0,   46,   47,    0,   48,    0,   49,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, 
+            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, 
+            0,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
+            0,    0,  288,    0,    0,    0,    0,   52,   53,   54, 
+           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
+            0,   61,   62,   63,   64,    0,    0,    0,    4,    5, 
+            6,    0,    8,    0,   65,   66,    9,   10,    0,    0, 
+            0,   11,    0,   12,   13,   14,   15,   16,   17,   18, 
+            0,    0,    0,    0,   19,   20,   21,  239,  240,  241, 
+          242,    0,    0,  118,    0,    0,    0,    0,    0,    0, 
+           28,    0,    0,  243,  244,  245,    0,  246,   35,  247, 
+          248,  249,  250,    0,   40,   41,   42,   43,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
-           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, 
-           62,   63,   64,    0,    0,    0,    4,    5,    6,    0, 
-            8,    0,   65,   66,    9,   10,    0,    0,    0,   11, 
+            0,    0,    0,    0,    0,    0,    0,    0,  251,    0, 
+            0,  131,    0,    0,   46,   47,    0,   48,    0,    0, 
+            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, 
+            0,  288,    0,    0,    0,    0,   52,   53,   54,   55, 
+           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, 
+           61,   62,   63,   64,    0,    0,    0,  638,  638,  638, 
+            0,  638,    0,   65,   66,  638,  638,    0,    0,    0, 
+          638,    0,  638,  638,  638,  638,  638,  638,  638,    0, 
+            0,    0,    0,  638,  638,  638,  638,  638,  638,  638, 
+            0,    0,  638,    0,    0,    0,    0,    0,    0,  638, 
+            0,    0,  638,  638,  638,    0,  638,  638,  638,  638, 
+          638,  638,    0,  638,  638,  638,  638,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  638,    0,    0, 
+          638,    0,    0,  638,  638,    0,  638,    0,    0,    0, 
+            0,    0,  638,    0,    0,    0,    0,    0,    0,    0, 
+          638,    0,    0,    0,    0,  638,  638,  638,  638,  638, 
+          638,    0,    0,    0,  638,    0,  638,  638,    0,  638, 
+          638,  638,  638,    0,    0,    0,    4,    5,    6,    0, 
+            8,    0,  638,  638,    9,   10,    0,    0,    0,   11, 
             0,   12,   13,   14,  109,  110,   17,   18,    0,    0, 
-            0,    0,  111,  112,  113,  340,  341,  342,  343,    0, 
+            0,    0,  111,  112,  113,  114,  115,  116,  117,    0, 
             0,  118,    0,    0,    0,    0,    0,    0,  119,    0, 
-            0,  344,  345,  346,    0,  347,   35,  348,  349,  350, 
-          351,    0,   40,    0,    0,  128,    0,    0,    0,    0, 
+            0,  120,  121,  122,    0,  123,   35,  124,  125,  126, 
+          127,    0,   40,    0,    0,  128,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  352,    0,    0,  427, 
-            0,    0,   46,   47,    0,   48,    0,  428,    0,    0, 
+            0,    0,  129,    0,    0,    0,  130,    0,    0,  131, 
+            0,    0,   46,   47,    0,   48,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,   52,   53,   54,   55,   56,   57, 
             0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
            63,   64,    0,    0,    0,    4,    5,    6,    0,    8, 
             0,   65,   66,    9,   10,    0,    0,    0,   11,    0, 
            12,   13,   14,  109,  110,   17,   18,    0,    0,    0, 
-            0,  111,  112,  113,  114,  115,  116,  117,    0,    0, 
+            0,  111,  112,  113,  267,  268,  269,  270,    0,    0, 
           118,    0,    0,    0,    0,    0,    0,  119,    0,    0, 
-          120,  121,  122,    0,  123,   35,  124,  125,  126,  127, 
+          271,  272,  273,    0,  274,   35,  275,  276,  277,  278, 
             0,   40,    0,    0,  128,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  130,    0,    0,  131,    0, 
-            0,   46,   47,    0,   48,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  279,    0,    0,   45,    0, 
+            0,   46,   47,    0,   48,    0,   49,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,   52,   53,   54,   55,   56,   57,    0, 
             0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
@@ -2394,7 +2403,7 @@
            40,    0,    0,  128,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,  352,    0,    0,  427,    0,    0, 
-           46,   47,    0,   48,    0,    0,    0,    0,    0,    0, 
+           46,   47,    0,   48,    0,  428,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,   52,   53,   54,   55,   56,   57,    0,    0, 
             0,   58,    0,   59,   60,    0,   61,   62,   63,   64, 
@@ -2403,10 +2412,10 @@
            14,  109,  110,   17,   18,    0,    0,    0,    0,  111, 
           112,  113,  114,  115,  116,  117,    0,    0,  118,    0, 
             0,    0,    0,    0,    0,  119,    0,    0,  120,  121, 
-          122,    0,  984,   35,  124,  125,  985,  127,    0,   40, 
+          122,    0,  123,   35,  124,  125,  126,  127,    0,   40, 
             0,    0,  128,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  986,    0,    0,  131,    0,    0,   46, 
+            0,    0,    0,  130,    0,    0,  131,    0,    0,   46, 
            47,    0,   48,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,   52,   53,   54,   55,   56,   57,    0,    0,    0, 
@@ -2414,58 +2423,73 @@
             0,    0,    4,    5,    6,    0,    8,    0,   65,   66, 
             9,   10,    0,    0,    0,   11,    0,   12,   13,   14, 
           109,  110,   17,   18,    0,    0,    0,    0,  111,  112, 
-          113,  997,  998,  999, 1000,    0,    0,  118,    0,    0, 
-            0,    0,    0,    0,  119,    0,    0, 1001, 1002, 1003, 
-            0, 1004,   35, 1005, 1006, 1007, 1008,    0,   40,    0, 
+          113,  340,  341,  342,  343,    0,    0,  118,    0,    0, 
+            0,    0,    0,    0,  119,    0,    0,  344,  345,  346, 
+            0,  347,   35,  348,  349,  350,  351,    0,   40,    0, 
             0,  128,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0, 1009,    0,    0,  131,    0,    0,   46,   47, 
+            0,    0,  352,    0,    0,  427,    0,    0,   46,   47, 
             0,   48,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
            52,   53,   54,   55,   56,   57,    0,    0,    0,   58, 
             0,   59,   60,    0,   61,   62,   63,   64,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,   65,   66,  139, 
-          140,  141,  142,  143,  144,  145,  146,  147,  148,  149, 
-          150,  151,  152,  153,  154,  155,  156,  157,  158,  159, 
-          160,  161,  162,    0,    0,  163,  164,  165,  223,  224, 
-          225,  226,  170,  171,  172,  173,  174,  175,  176,  177, 
-          178,  179,  180,  181,  227,  228,  229,    0,  230,  186, 
-          310,    0,  231,    0,    0,    0,  188,  189,    0,  190, 
-          191,  192,  193,  194,  195,  196,    0,    0,  197,  198, 
-            0,    0,    0,  199,  200,  201,  202,    0,    0,    0, 
+            0,    4,    5,    6,    0,    8,    0,   65,   66,    9, 
+           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, 
+          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, 
+          114,  115,  116,  117,    0,    0,  118,    0,    0,    0, 
+            0,    0,    0,  119,    0,    0,  120,  121,  122,    0, 
+          984,   35,  124,  125,  985,  127,    0,   40,    0,    0, 
+          128,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  986,    0,    0,  131,    0,    0,   46,   47,    0, 
+           48,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,   52, 
+           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
+           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, 
+            4,    5,    6,    0,    8,    0,   65,   66,    9,   10, 
+            0,    0,    0,   11,    0,   12,   13,   14,  109,  110, 
+           17,   18,    0,    0,    0,    0,  111,  112,  113,  997, 
+          998,  999, 1000,    0,    0,  118,    0,    0,    0,    0, 
+            0,    0,  119,    0,    0, 1001, 1002, 1003,    0, 1004, 
+           35, 1005, 1006, 1007, 1008,    0,   40,    0,    0,  128, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, 
-          213,  214,  215,  216,    0,    0,  217,   52,  139,  140, 
-          141,  142,  143,  144,  145,  146,  147,  148,  149,  150, 
-          151,  152,  153,  154,  155,  156,  157,  158,  159,  160, 
-          161,  162,    0,    0,  163,  164,  165,  223,  224,  225, 
-          226,  170,  171,  172,  173,  174,  175,  176,  177,  178, 
-          179,  180,  181,  227,  228,  229,    0,  230,  186,    0, 
-            0,  231,    0,    0,    0,  188,  189,    0,  190,  191, 
-          192,  193,  194,  195,  196,    0,    0,  197,  198,    0, 
-            0,    0,  199,  200,  201,  202,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  204, 
-          205,    0,  206,  207,  208,  209,  210,  211,  212,  213, 
-          214,  215,  216,    0,    0,  217,   52,  139,  140,  141, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+         1009,    0,    0,  131,    0,    0,   46,   47,    0,   48, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,   52,   53, 
+           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
+           60,    0,   61,   62,   63,   64,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,   65,   66,  139,  140,  141, 
           142,  143,  144,  145,  146,  147,  148,  149,  150,  151, 
           152,  153,  154,  155,  156,  157,  158,  159,  160,  161, 
-          162,    0,    0,  163,  164,  165,  166,  167,  168,  169, 
+          162,    0,    0,  163,  164,  165,  223,  224,  225,  226, 
           170,  171,  172,  173,  174,  175,  176,  177,  178,  179, 
-          180,  181,  182,  183,  184,    0,  185,  186,  124,  125, 
-          187,  127,    0,    0,  188,  189,    0,  190,  191,  192, 
+          180,  181,  227,  228,  229,    0,  230,  186,  310,    0, 
+          231,    0,    0,    0,  188,  189,    0,  190,  191,  192, 
           193,  194,  195,  196,    0,    0,  197,  198,    0,    0, 
             0,  199,  200,  201,  202,    0,    0,    0,    0,    0, 
-            0,  203,    0,    0,    0,    0,    0,    0,  204,  205, 
+            0,    0,    0,    0,    0,    0,    0,    0,  204,  205, 
             0,  206,  207,  208,  209,  210,  211,  212,  213,  214, 
-          215,  216,    0,    0,  217,  139,  140,  141,  142,  143, 
+          215,  216,    0,    0,  217,   52,  139,  140,  141,  142, 
+          143,  144,  145,  146,  147,  148,  149,  150,  151,  152, 
+          153,  154,  155,  156,  157,  158,  159,  160,  161,  162, 
+            0,    0,  163,  164,  165,  223,  224,  225,  226,  170, 
+          171,  172,  173,  174,  175,  176,  177,  178,  179,  180, 
+          181,  227,  228,  229,    0,  230,  186,    0,    0,  231, 
+            0,    0,    0,  188,  189,    0,  190,  191,  192,  193, 
+          194,  195,  196,    0,    0,  197,  198,    0,    0,    0, 
+          199,  200,  201,  202,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  204,  205,    0, 
+          206,  207,  208,  209,  210,  211,  212,  213,  214,  215, 
+          216,    0,    0,  217,   52,  139,  140,  141,  142,  143, 
           144,  145,  146,  147,  148,  149,  150,  151,  152,  153, 
           154,  155,  156,  157,  158,  159,  160,  161,  162,    0, 
-            0,  163,  164,  165,  223,  224,  225,  226,  170,  171, 
+            0,  163,  164,  165,  166,  167,  168,  169,  170,  171, 
           172,  173,  174,  175,  176,  177,  178,  179,  180,  181, 
-          227,  228,  229,    0,  230,  186,  360,  361,  231,  362, 
+          182,  183,  184,    0,  185,  186,  124,  125,  187,  127, 
             0,    0,  188,  189,    0,  190,  191,  192,  193,  194, 
           195,  196,    0,    0,  197,  198,    0,    0,    0,  199, 
-          200,  201,  202,    0,    0,    0,    0,    0,    0,    0, 
+          200,  201,  202,    0,    0,    0,    0,    0,    0,  203, 
             0,    0,    0,    0,    0,    0,  204,  205,    0,  206, 
           207,  208,  209,  210,  211,  212,  213,  214,  215,  216, 
             0,    0,  217,  139,  140,  141,  142,  143,  144,  145, 
@@ -2473,52 +2497,63 @@
           156,  157,  158,  159,  160,  161,  162,    0,    0,  163, 
           164,  165,  223,  224,  225,  226,  170,  171,  172,  173, 
           174,  175,  176,  177,  178,  179,  180,  181,  227,  228, 
-          229,    0,  230,  186,    0,    0,  231,    0,    0,    0, 
+          229,    0,  230,  186,  360,  361,  231,  362,    0,    0, 
           188,  189,    0,  190,  191,  192,  193,  194,  195,  196, 
             0,    0,  197,  198,    0,    0,    0,  199,  200,  201, 
           202,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,  204,  205,    0,  206,  207,  208, 
-          209,  210,  211,  212,  213,  214,  215,  216,  731,  621, 
-          217,    0,  732,    0,    0,    0,  188,  189,    0,  190, 
+          209,  210,  211,  212,  213,  214,  215,  216,    0,    0, 
+          217,  139,  140,  141,  142,  143,  144,  145,  146,  147, 
+          148,  149,  150,  151,  152,  153,  154,  155,  156,  157, 
+          158,  159,  160,  161,  162,    0,    0,  163,  164,  165, 
+          223,  224,  225,  226,  170,  171,  172,  173,  174,  175, 
+          176,  177,  178,  179,  180,  181,  227,  228,  229,    0, 
+          230,  186,    0,    0,  231,    0,    0,    0,  188,  189, 
+            0,  190,  191,  192,  193,  194,  195,  196,    0,    0, 
+          197,  198,    0,    0,    0,  199,  200,  201,  202,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  204,  205,    0,  206,  207,  208,  209,  210, 
+          211,  212,  213,  214,  215,  216,  731,  621,  217,    0, 
+          732,    0,    0,    0,  188,  189,    0,  190,  191,  192, 
+          193,  194,  195,  196,    0,    0,  197,  198,    0,    0, 
+            0,  199,  200,  201,  202,    0,    0,    0,    0,    0, 
+            0,  304,    0,    0,    0,    0,    0,    0,  204,  205, 
+            0,  206,  207,  208,  209,  210,  211,  212,  213,  214, 
+          215,  216,  734,  629,  217,    0,  735,    0,    0,    0, 
+          188,  189,    0,  190,  191,  192,  193,  194,  195,  196, 
+            0,    0,  197,  198,    0,    0,    0,  199,  200,  201, 
+          202,    0,    0,    0,    0,    0,    0,  304,    0,    0, 
+            0,    0,    0,    0,  204,  205,    0,  206,  207,  208, 
+          209,  210,  211,  212,  213,  214,  215,  216,  919,  621, 
+          217,    0,  920,    0,    0,    0,  188,  189,    0,  190, 
           191,  192,  193,  194,  195,  196,    0,    0,  197,  198, 
             0,    0,    0,  199,  200,  201,  202,    0,    0,    0, 
             0,    0,    0,  304,    0,    0,    0,    0,    0,    0, 
           204,  205,    0,  206,  207,  208,  209,  210,  211,  212, 
-          213,  214,  215,  216,  734,  629,  217,    0,  735,    0, 
+          213,  214,  215,  216,  922,  629,  217,    0,  923,    0, 
             0,    0,  188,  189,    0,  190,  191,  192,  193,  194, 
           195,  196,    0,    0,  197,  198,    0,    0,    0,  199, 
           200,  201,  202,    0,    0,    0,    0,    0,    0,  304, 
             0,    0,    0,    0,    0,    0,  204,  205,    0,  206, 
           207,  208,  209,  210,  211,  212,  213,  214,  215,  216, 
-          919,  621,  217,    0,  920,    0,    0,    0,  188,  189, 
+         1078,  621,  217,    0, 1079,    0,    0,    0,  188,  189, 
             0,  190,  191,  192,  193,  194,  195,  196,    0,    0, 
           197,  198,    0,    0,    0,  199,  200,  201,  202,    0, 
             0,    0,    0,    0,    0,  304,    0,    0,    0,    0, 
             0,    0,  204,  205,    0,  206,  207,  208,  209,  210, 
-          211,  212,  213,  214,  215,  216,  922,  629,  217,    0, 
-          923,    0,    0,    0,  188,  189,    0,  190,  191,  192, 
+          211,  212,  213,  214,  215,  216, 1081,  621,  217,    0, 
+         1082,    0,    0,    0,  188,  189,    0,  190,  191,  192, 
           193,  194,  195,  196,    0,    0,  197,  198,    0,    0, 
             0,  199,  200,  201,  202,    0,    0,    0,    0,    0, 
             0,  304,    0,    0,    0,    0,    0,    0,  204,  205, 
             0,  206,  207,  208,  209,  210,  211,  212,  213,  214, 
-          215,  216, 1078,  621,  217,    0, 1079,    0,    0,    0, 
+          215,  216, 1084,  629,  217,    0, 1085,    0,    0,    0, 
           188,  189,    0,  190,  191,  192,  193,  194,  195,  196, 
             0,    0,  197,  198,    0,    0,    0,  199,  200,  201, 
           202,    0,    0,    0,    0,    0,    0,  304,    0,    0, 
             0,    0,    0,    0,  204,  205,    0,  206,  207,  208, 
-          209,  210,  211,  212,  213,  214,  215,  216, 1081,  621, 
-          217,    0, 1082,    0,    0,    0,  188,  189,    0,  190, 
-          191,  192,  193,  194,  195,  196,    0,    0,  197,  198, 
-            0,    0,    0,  199,  200,  201,  202,    0,    0,    0, 
-            0,    0,    0,  304,    0,    0,    0,    0,    0,    0, 
-          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, 
-          213,  214,  215,  216, 1084,  629,  217,    0, 1085,    0, 
-            0,    0,  188,  189,    0,  190,  191,  192,  193,  194, 
-          195,  196,    0,    0,  197,  198,    0,    0,    0,  199, 
-          200,  201,  202,    0,    0,    0,    0,    0,    0,  304, 
-            0,    0,    0,    0,    0,    0,  204,  205,    0,  206, 
-          207,  208,  209,  210,  211,  212,  213,  214,  215,  216, 
-            0,    0,  217, 
+          209,  210,  211,  212,  213,  214,  215,  216,    0,    0, 
+          217, 
       };
    }
 
@@ -3136,339 +3171,296 @@
            -1,   10,  340,  341,  342,  343,  344,   -1,  346,   -1, 
           348,  349,  350,  351,  352,  353,  354,  355,  356,  357, 
           358,  359,  360,  361,  362,  363,   -1,  365,  366,  367, 
-          368,  369,  370, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,   -1, 
+           59,   -1,   10,   -1,  392,  393,  394,  395,  257,  258, 
+          259,   -1,  261,  262,  263,  264,  265,  266,   -1,  268, 
+          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, 
+           -1,  280,   91,   -1,  283,  284,  285,  286,  287,  288, 
+          289,  290,  291,  292,  293,  294,  295,  296,  297,   -1, 
+          299,   59,   -1,  302,  303,  304,   -1,  306,  307,  308, 
+          309,  310,  311,  312,  313,  314,  315,  316,  317,  318, 
       };
    }
 
    private static final short[] yyCheck2() {
       return new short[] {
 
-           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
-          381,  382,   -1,   -1,   -1,   -1,   -1,   59,   -1,   10, 
-           -1,  392,  393,  394,  395,  257,  258,  259,   -1,  261, 
-          262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, 
-          272,  273,  274,  275,  276,  277,  278,   -1,  280,   91, 
-           -1,  283,  284,  285,  286,  287,  288,  289,  290,  291, 
-          292,  293,  294,  295,  296,  297,   -1,  299,   59,   -1, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-          312,  313,  314,  315,  316,  317,  318,  319,  320,  321, 
-          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
-           91,  333,  334,  335,  336,  337,   -1,   -1,  340,  341, 
-          342,  343,  344,   -1,  346,   -1,  348,  349,  350,  351, 
-          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, 
-          362,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, 
-           -1,    0,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,  394,  395,   -1,   -1,  306,  307,   -1,   -1, 
-          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, 
-          320,  321,  322,  323,   -1,   44,  326,  327,   -1,   -1, 
-           -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, 
-           59,  341,   61,   -1,   63,   -1,   -1,   -1,  348,  349, 
-           -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, 
-          360,  361,   -1,   -1,  364,  267,   -1,   -1,   -1,   -1, 
-           -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,  280,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
+          329,  330,   -1,   91,  333,  334,  335,  336,  337,   -1, 
+           -1,  340,  341,  342,  343,  344,   -1,  346,   -1,  348, 
+          349,  350,  351,  352,  353,  354,  355,  356,  357,  358, 
+          359,  360,  361,  362,  363,   -1,  365,  366,  367,  368, 
+          369,  370,   -1,   -1,    0,  374,   -1,  376,  377,   -1, 
+          379,  380,  381,  382,   10,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  392,  393,  394,  395,   -1,   -1,  306, 
+          307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315,   -1, 
+          317,  318,  319,  320,  321,  322,  323,   -1,   44,  326, 
+          327,   -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1, 
+           -1,   -1,   -1,   59,  341,   61,   -1,   63,   -1,   -1, 
+           -1,  348,  349,   -1,  351,  352,  353,  354,  355,  356, 
+          357,  358,  359,  360,  361,   -1,   -1,  364,  267,   -1, 
+           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, 
+           -1,  280,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  267,   -1,   -1,   -1, 
-            0,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, 
-           10,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1,  341, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  267, 
+           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,  328, 
+           -1,   -1,   -1,   10,   -1,   -1,  335,  336,   -1,   -1, 
+           -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          362,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   59, 
-           -1,   61,   -1,   63,  335,  336,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  362,   -1,   -1,   -1,   44,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          328,   -1,   59,   -1,   61,   -1,   63,  335,  336,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258, 
-          259,   -1,  261,  262,  263,  264,  265,  266,   -1,  268, 
-          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, 
-           -1,  280,   -1,   -1,  283,  284,  285,  286,  287,  288, 
-          289,  290,  291,  292,  293,  294,  295,  296,  297,   -1, 
-          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, 
-          309,  310,  311,  312,  313,  314,  315,  316,  317,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
-          329,  330,   -1,   -1,  333,  334,  335,  336,  337,   -1, 
-           10,  340,  341,  342,  343,  344,   -1,  346,   -1,  348, 
-          349,  350,  351,  352,  353,  354,  355,  356,  357,  358, 
-          359,  360,  361,  362,  363,   -1,  365,  366,  367,  368, 
-          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, 
-          379,  380,  381,  382,   -1,   -1,   -1,   -1,   -1,   59, 
-           -1,   -1,   -1,  392,  393,  394,  395,  257,  258,  259, 
-           -1,  261,  262,  263,  264,  265,  266,   -1,  268,  269, 
-          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, 
-          280,   91,   -1,  283,  284,  285,  286,  287,  288,  289, 
-          290,  291,  292,  293,  294,  295,  296,  297,   -1,  299, 
-           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, 
-          310,  311,  312,  313,  314,  315,  316,  317,  318,  319, 
-          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
-          330,   -1,   -1,  333,  334,  335,  336,  337,   -1,   -1, 
-          340,  341,  342,  343,  344,   -1,  346,   -1,  348,  349, 
-          350,  351,  352,  353,  354,  355,  356,  357,  358,  359, 
-          360,  361,  362,  363,   -1,  365,  366,  367,  368,  369, 
-          370,   -1,   -1,    0,  374,   -1,  376,  377,   -1,  379, 
-          380,  381,  382,   10,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  392,  393,  394,  395,   -1,   -1,  306,  307, 
-           -1,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
-          318,  319,  320,  321,  322,  323,   -1,   44,  326,  327, 
-           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, 
-           -1,   -1,   59,  341,   61,   -1,   63,   -1,   -1,   -1, 
-          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, 
-          358,  359,  360,  361,   -1,   -1,  364,  267,   -1,   -1, 
            -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1, 
-          280,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,  328,   -1, 
-           -1,   -1,   10,   -1,   -1,  335,  336,   -1,   -1,   -1, 
-           -1,  341,   -1,   -1,  306,  307,   -1,   -1,  310,   -1, 
-           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, 
-          322,  323,  362,   -1,  326,  327,   44,   -1,   -1,  331, 
-          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, 
-           -1,   59,   -1,   61,   -1,   63,  348,  349,   -1,  351, 
-          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, 
-           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  257,  258,  259,   -1,  261,  262,  263,  264,  265, 
+          266,   -1,  268,  269,  270,  271,  272,  273,  274,  275, 
+          276,  277,  278,   -1,  280,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,  290,  291,  292,  293,  294,  295, 
+          296,  297,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
+          316,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
+          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
+          336,  337,   -1,   10,  340,  341,  342,  343,  344,   -1, 
+          346,   -1,  348,  349,  350,  351,  352,  353,  354,  355, 
+          356,  357,  358,  359,  360,  361,  362,  363,   -1,  365, 
+          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+           -1,   -1,   59,   -1,   -1,   -1,  392,  393,  394,  395, 
           257,  258,  259,   -1,  261,  262,  263,  264,  265,  266, 
            -1,  268,  269,  270,  271,  272,  273,  274,  275,  276, 
-          277,  278,   -1,  280,   -1,   -1,  283,  284,  285,  286, 
+          277,  278,   -1,  280,   91,   -1,  283,  284,  285,  286, 
           287,  288,  289,  290,  291,  292,  293,  294,  295,  296, 
           297,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
           307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
           317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
           327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, 
-          337,   -1,   10,  340,  341,  342,  343,  344,   -1,  346, 
+          337,   -1,   -1,  340,  341,  342,  343,  344,   -1,  346, 
            -1,  348,  349,  350,  351,  352,  353,  354,  355,  356, 
           357,  358,  359,  360,  361,  362,  363,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1, 
-           -1,   59,   -1,   -1,   -1,  392,  393,  394,  395,  257, 
-          258,  259,   -1,  261,  262,  263,  264,  265,  266,   -1, 
-          268,  269,  270,  271,  272,  273,  274,  275,  276,  277, 
-          278,   -1,  280,   91,   -1,  283,  284,  285,  286,  287, 
-          288,  289,  290,  291,  292,  293,  294,  295,  296,  297, 
-           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
-          308,  309,  310,  311,  312,  313,  314,  315,  316,  317, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-          328,  329,  330,   -1,   -1,  333,  334,  335,  336,  337, 
-           -1,   -1,  340,  341,  342,  343,  344,   -1,  346,   -1, 
-          348,  349,  350,  351,  352,  353,  354,  355,  356,  357, 
-          358,  359,  360,  361,  362,  363,   -1,  365,  366,  367, 
-          368,  369,  370,   -1,   -1,    0,  374,   -1,  376,  377, 
-           -1,  379,  380,  381,  382,   10,   -1,   -1,   10,   -1, 
-           -1,   -1,   -1,   -1,  392,  393,  394,  395,   -1,   -1, 
-          306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315, 
-           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   44, 
-          326,  327,   44,   -1,   -1,  331,  332,  333,  334,   -1, 
-           -1,   -1,   -1,   -1,   59,  341,   61,   -1,   63,   61, 
-           -1,   -1,  348,  349,   -1,  351,  352,  353,  354,  355, 
-          356,  357,  358,  359,  360,  361,   -1,   -1,  364,  267, 
-           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   91, 
-           -1,   -1,  280,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-          328,   -1,   -1,   -1,   10,   -1,   -1,  335,  336,   -1, 
-           -1,   -1,   -1,  341,   -1,   -1,  306,  307,   -1,   -1, 
-          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, 
-          320,  321,  322,  323,  362,   -1,  326,  327,   44,   -1, 
-           -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, 
-           -1,  341,   -1,   59,   -1,   61,   -1,   63,  348,  349, 
-           -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, 
-          360,  361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, 
+          367,  368,  369,  370,   -1,   -1,    0,  374,   -1,  376, 
+          377,   -1,  379,  380,  381,  382,   10,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  392,  393,  394,  395,   -1, 
+           -1,  306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314, 
+          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           44,  326,  327,   -1,   -1,   -1,  331,  332,  333,  334, 
+           -1,   -1,   -1,   -1,   -1,   59,  341,   61,   -1,   63, 
+           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
+          267,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1, 
+           -1,   -1,   -1,  280,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, 
+           -1,  328,   -1,   -1,   -1,   10,   -1,   -1,  335,  336, 
+           -1,   -1,   -1,   -1,  341,   -1,   -1,  306,  307,   -1, 
+           -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317,  318, 
+          319,  320,  321,  322,  323,  362,   -1,  326,  327,   44, 
+           -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1, 
+           -1,   -1,  341,   -1,   59,   -1,   61,   -1,   63,  348, 
+          349,   -1,  351,  352,  353,  354,  355,  356,  357,  358, 
+          359,  360,  361,   -1,   -1,  364,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  257,  258,  259,   -1,  261,  262,  263,  264, 
+           -1,   -1,   -1,  257,  258,  259,   -1,  261,  262,  263, 
+          264,  265,  266,   -1,  268,  269,  270,  271,  272,  273, 
+          274,  275,  276,  277,  278,   -1,  280,   -1,   -1,  283, 
+          284,  285,  286,  287,  288,  289,  290,  291,  292,  293, 
+          294,  295,  296,  297,   -1,  299,   -1,   -1,  302,  303, 
+          304,   -1,  306,  307,  308,  309,  310,  311,  312,  313, 
+          314,  315,  316,  317,  318,  319,  320,  321,  322,  323, 
+          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
+          334,  335,  336,  337,   -1,   10,  340,  341,  342,  343, 
+          344,   -1,  346,   -1,  348,  349,  350,  351,  352,  353, 
+          354,  355,  356,  357,  358,  359,  360,  361,  362,  363, 
+           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, 
+          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, 
+           -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,  392,  393, 
+          394,  395,  257,  258,  259,   -1,  261,  262,  263,  264, 
           265,  266,   -1,  268,  269,  270,  271,  272,  273,  274, 
-          275,  276,  277,  278,   -1,   -1,   -1,  279,  283,  284, 
+          275,  276,  277,  278,   -1,  280,   91,   -1,  283,  284, 
           285,  286,  287,  288,  289,  290,  291,  292,  293,  294, 
           295,  296,  297,   -1,  299,   -1,   -1,  302,  303,  304, 
            -1,  306,  307,  308,  309,  310,  311,  312,  313,  314, 
           315,  316,  317,  318,  319,  320,  321,  322,  323,  324, 
-          325,  326,  327,  328,  329,  330,  328,   -1,  333,  334, 
-          335,  336,  337,  335,  336,  340,  341,  342,  343,  344, 
-          342,  346,   -1,  348,  349,  350,  351,  352,  353,  354, 
-          355,  356,  357,  358,  359,  360,  361,    0,  363,   -1, 
-          365,  366,  367,  368,  369,  370,   -1,   10,   -1,  374, 
-           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  394, 
-          395,  257,  258,  259,   -1,  261,  262,  263,  264,  265, 
-          266,   -1,  268,  269,  270,  271,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   59,  283,  284,  285, 
-          286,  287,  288,  289,  290,  291,  292,  293,  294,  295, 
-          296,  297,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
-          316,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
-          336,  337,   -1,   -1,  340,  341,  342,  343,  344,   -1, 
-          346,   -1,  348,  349,  350,  351,  352,  353,  354,  355, 
-          356,  357,  358,  359,  360,  361,    0,  363,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   10,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  394,  395, 
+          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, 
+          335,  336,  337,   -1,   -1,  340,  341,  342,  343,  344, 
+           -1,  346,   -1,  348,  349,  350,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,  362,  363,   -1, 
+          365,  366,  367,  368,  369,  370,   -1,   -1,    0,  374, 
+           -1,  376,  377,   -1,  379,  380,  381,  382,   10,   -1, 
+           -1,   10,   -1,   -1,   -1,   -1,   -1,  392,  393,  394, 
+          395,   -1,   -1,  306,  307,   -1,   -1,  310,   -1,   -1, 
+           -1,  314,  315,   -1,  317,  318,  319,  320,  321,  322, 
+          323,   -1,   44,  326,  327,   44,   -1,   -1,  331,  332, 
+          333,  334,   -1,   -1,   -1,   -1,   -1,   59,  341,   61, 
+           -1,   63,   61,   -1,   -1,  348,  349,   -1,  351,  352, 
+          353,  354,  355,  356,  357,  358,  359,  360,  361,   -1, 
+           -1,  364,  267,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
+           -1,   -1,   91,   -1,   -1,  280,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1, 
+           -1,   -1,   -1,  328,   -1,   -1,   -1,   10,   -1,   -1, 
+          335,  336,   -1,   -1,   -1,   -1,  341,   -1,   -1,  306, 
+          307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315,   -1, 
+          317,  318,  319,  320,  321,  322,  323,  362,   -1,  326, 
+          327,   44,   -1,   -1,  331,  332,  333,  334,   -1,   -1, 
+           -1,   -1,   -1,   -1,  341,   -1,   59,   -1,   61,   -1, 
+           63,  348,  349,   -1,  351,  352,  353,  354,  355,  356, 
+          357,  358,  359,  360,  361,   -1,   -1,  364,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261,  262, 
-          263,  264,  265,  266,  267,  268,  269,  270,  271,  272, 
-          273,  274,  275,  276,  277,  278,   -1,  280,  281,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, 
+          262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, 
+          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, 
+          279,  283,  284,  285,  286,  287,  288,  289,  290,  291, 
+          292,  293,  294,  295,  296,  297,   -1,  299,   -1,   -1, 
+          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
+          312,  313,  314,  315,  316,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,  328, 
+           -1,  333,  334,  335,  336,  337,  335,  336,  340,  341, 
+          342,  343,  344,  342,  346,   -1,  348,  349,  350,  351, 
+          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, 
+            0,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, 
+           10,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
+          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          392,  393,  394,  395,  257,  258,  259,   -1,  261,  262, 
+          263,  264,  265,  266,   -1,  268,  269,  270,  271,  272, 
+          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   59, 
           283,  284,  285,  286,  287,  288,  289,  290,  291,  292, 
-          293,  294,  295,  296,  297,   59,  299,   -1,   -1,  302, 
+          293,  294,  295,  296,  297,   -1,  299,   -1,   -1,  302, 
           303,  304,   -1,  306,  307,  308,  309,  310,  311,  312, 
-          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  328,   -1,   91,   -1,   -1, 
-           -1,   -1,  335,  336,  337,   -1,   -1,  340,   -1,  342, 
-          343,  344,   -1,  346,   -1,  348,   -1,  350,   -1,  352, 
-           -1,    0,   -1,   -1,   -1,   -1,   -1,  360,   -1,  362, 
-          363,   10,  365,  366,  367,  368,  369,  370,   -1,   -1, 
+          313,  314,  315,  316,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, 
+          333,  334,  335,  336,  337,   -1,   -1,  340,  341,  342, 
+          343,  344,   -1,  346,   -1,  348,  349,  350,  351,  352, 
+          353,  354,  355,  356,  357,  358,  359,  360,  361,    0, 
+          363,   -1,  365,  366,  367,  368,  369,  370,   -1,   10, 
            -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  392, 
-          393,  394,  395,   -1,   -1,   44,   -1,   -1,  262,  263, 
-          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   58, 
-           59,   -1,   -1,   -1,   63,   -1,  280,  281,  282,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  305,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,    0,  339,   -1,   -1,  342,   -1, 
-           -1,  345,   -1,  347,   10,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   -1,  361,  362,  363, 
-           -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  375,   -1,   -1,   -1,   -1,  280,   -1,   44,   -1, 
+          393,  394,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1, 
+           61,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  395,   58,   59,   -1,   61,   -1,   63,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259, 
+           -1,  261,  262,  263,  264,  265,  266,  267,  268,  269, 
+          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, 
+          280,  281,   -1,  283,  284,  285,  286,  287,  288,  289, 
+          290,  291,  292,  293,  294,  295,  296,  297,   59,  299, 
+           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, 
+          310,  311,  312,  313,  314,  315,  316,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1, 
+           91,   -1,   -1,   -1,   -1,  335,  336,  337,   -1,   -1, 
+          340,   -1,  342,  343,  344,   -1,  346,   -1,  348,   -1, 
+          350,   -1,  352,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
+          360,   -1,  362,  363,   10,  365,  366,  367,  368,  369, 
+          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
+          380,  381,  382,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  392,  393,  394,  395,   -1,   -1,   44,   -1, 
+           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
+          271,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,  280, 
+          281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
+          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  305,   91,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320, 
+          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, 
+           -1,   -1,  333,  334,  335,  336,   -1,    0,  339,   -1, 
+           -1,  342,   -1,   -1,  345,   -1,  347,   10,  349,   -1, 
+          351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, 
+          361,  362,  363,   -1,   -1,   -1,  267,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,  280, 
+           -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  395,   58,   59,   -1,   61,   -1, 
+           63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  328,   91,   -1,   -1,   -1,   -1, 
-           -1,  335,  336,   -1,   -1,   -1,   -1,  341,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   91,   -1, 
+           -1,   -1,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1, 
+          341,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
+           -1,  362,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  280,  281,  282,   -1,   44,   -1, 
+           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   58,   59,   -1,   61,   -1,   63,   -1,  305, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,  362,   -1, 
-           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
-          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  280,  281,  282,   -1,   44,   -1,   -1,   -1,   -1, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   58, 
-           59,   -1,   61,   -1,   63,   -1,  305,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
-          329,  330,   91,   -1,  333,  334,  335,  336,   -1,   -1, 
-          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
-          349,   10,  351,   -1,  353,  354,  355,  356,  357,  358, 
-          359,   -1,  361,  362,  363,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   44,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,  395,   -1,   -1,   -1, 
-           -1,   -1,   61,   -1,   -1,  281,  282,   -1,   -1,   -1, 
+           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
+          326,  327,  328,  329,  330,   91,   -1,  333,  334,  335, 
+          336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
+           -1,  347,   -1,  349,   10,  351,   -1,  353,  354,  355, 
+          356,  357,  358,  359,   -1,  361,  362,  363,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  262, 
+          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,  395, 
+           -1,   -1,   -1,   -1,   -1,   61,   -1,   -1,  281,  282, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  305,    0,   -1,   91,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   10,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, 
+          333,  334,  335,  336,   -1,  338,  339,   -1,   -1,  342, 
+           -1,   -1,  345,   -1,  347,   -1,  349,   44,  351,   -1, 
+          353,  354,  355,  356,  357,  358,  359,   -1,  361,   -1, 
+          363,   58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1, 
+           -1,   -1,  375,   -1,   -1,   -1,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
+           -1,   -1,  395,   -1,   91,  281,  282,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
           296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
-            0,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            10,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
           326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
           336,   -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345, 
            -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, 
           356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, 
            -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, 
-           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
-          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,  395, 
-           -1,   91,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
-          329,  330,   -1,   -1,  333,  334,  335,  336,   -1,  338, 
-          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
-          349,   44,  351,   -1,  353,  354,  355,  356,  357,  358, 
-          359,   -1,  361,   -1,  363,   58,   59,   -1,   61,   -1, 
-           63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, 
-          279,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   91,   -1, 
+           -1,   -1,   -1,  279,   -1,   10,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  395, 
+           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328, 
-            0,   -1,   -1,   61,   -1,   -1,  335,  336,   -1,   -1, 
-           10,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  281,  282,   -1,   44,   -1,   -1,   -1,   -1,   -1, 
-          290,  291,   -1,  293,  294,  295,  296,  297,   58,   59, 
-           -1,   61,   -1,   63,   -1,  305,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319, 
-          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
-          330,   91,   -1,  333,  334,  335,  336,   -1,  338,  339, 
-           -1,   -1,  342,   10,   -1,  345,   -1,  347,   -1,  349, 
-           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
-            0,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, 
-           10,   -1,   -1,   -1,   -1,  375,   -1,   44,   -1,  262, 
-          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, 
-           -1,   -1,   -1,   -1,   61,  395,   -1,   -1,  281,  282, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
-          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   59, 
-           -1,   -1,  305,    0,   91,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   10,  317,  318,  319,  320,  321,  322, 
-          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, 
-          333,  334,  335,  336,   -1,  338,  339,   -1,   -1,  342, 
-           -1,  279,  345,   -1,  347,   -1,  349,   44,  351,   -1, 
-          353,  354,  355,  356,  357,  358,  359,   -1,  361,   -1, 
-          363,   58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1, 
-           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-          328,  271,  395,   -1,   91,   -1,   -1,  335,  336,   -1, 
-           -1,  281,  282,   -1,  342,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  328,    0,   -1,   -1,   61,   -1,   -1,  335, 
+          336,   -1,   -1,   10,   -1,   -1,  342,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
+          267,  268,  269,   -1,  271,   -1,   91,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  281,  282,   -1,   44,   -1,   -1, 
+           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
+          297,   58,   59,   -1,   61,   -1,   63,   -1,  305,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
+          327,  328,  329,  330,   91,   -1,  333,  334,  335,  336, 
+           -1,  338,  339,   -1,   -1,  342,   10,   -1,  345,   -1, 
+          347,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, 
+          357,  358,  359,    0,  361,   -1,  363,   -1,   -1,   -1, 
+           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,  375,   -1, 
+           44,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
+           -1,  271,   -1,   -1,   -1,   -1,   -1,   61,  395,   -1, 
+           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1,   -1, 
+           -1,   -1,   59,   -1,   -1,  305,    0,   91,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319, 
           320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
           330,   -1,   -1,  333,  334,  335,  336,   -1,  338,  339, 
-           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, 
+           -1,   -1,  342,   -1,  279,  345,   -1,  347,   -1,  349, 
            44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
            -1,  361,   -1,  363,   58,   59,   -1,   61,   -1,   63, 
-           -1,   -1,  279,   -1,   -1,  375,   -1,   -1,   -1,   -1, 
-           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,   -1,   -1,   -1,  395,   -1,   91,   -1,   -1, 
-           -1,  281,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,  328,   -1,    0,   -1,   -1,   -1,   -1,  335,  336, 
-           -1,   -1,   -1,   10,   -1,  342,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
-          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  342,   -1,  281,  282,   -1,   44,   -1,   -1, 
-           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
-          297,   58,   59,  363,   61,   -1,   63,   -1,  305,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
-          327,  328,  329,  330,   91,  395,  333,  334,  335,  336, 
-           -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, 
-          347,   -1,  349,   10,  351,   -1,  353,  354,  355,  356, 
-          357,  358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  262,  263, 
-          264,   -1,   -1,  267,  268,  269,   -1,  271,  395,   -1, 
-           -1,   -1,   -1,   -1,   61,   -1,   -1,  281,  282,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  305,    0,   -1,   91,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, 
-           -1,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
-           58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1, 
-           -1,  375,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
-          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
-           -1,  395,   -1,   91,  281,  282,   -1,   -1,   -1,   -1, 
+          267,  268,  269,  328,  271,  395,   -1,   91,   -1,   -1, 
+          335,  336,   -1,   -1,  281,  282,   -1,  342,   -1,   -1, 
            -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
           297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
@@ -3477,83 +3469,83 @@
            -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, 
           347,   -1,  349,   44,  351,   -1,  353,  354,  355,  356, 
           357,  358,  359,   -1,  361,   -1,  363,   58,   59,   -1, 
-           61,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1, 
-           -1,   -1,  279,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  395,   -1, 
-           91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
+           61,   -1,   63,   -1,   -1,  279,   -1,   -1,  375,   -1, 
+           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
+          267,  268,  269,   -1,  271,   -1,   -1,   -1,  395,   -1, 
+           91,   -1,   -1,   -1,  281,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
+          297,   -1,   -1,   -1,  328,   -1,    0,   -1,   -1,   -1, 
+           -1,  335,  336,   -1,   -1,   -1,   10,   -1,  342,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
+          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  342,   -1,  281,  282,   -1, 
+           44,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
+          294,  295,  296,  297,   58,   59,  363,   61,   -1,   63, 
+           -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
+          324,  325,  326,  327,  328,  329,  330,   91,  395,  333, 
+          334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, 
+           -1,  345,   -1,  347,   -1,  349,   10,  351,   -1,  353, 
+          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  328,    0,   -1,   -1,   61,   -1,   -1,  335,  336, 
-           -1,   -1,   10,   -1,   -1,  342,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   -1,  271,   -1,   91,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  281,  282,   -1,   44,   -1,   -1,   -1, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           58,   59,   -1,   -1,   -1,   63,   -1,  305,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-          328,  329,  330,   91,   -1,  333,  334,  335,  336,   -1, 
-          338,  339,   -1,   -1,  342,   10,   -1,  345,   -1,  347, 
-           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,    0,  361,   -1,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,   -1,   -1,   -1,   -1,  375,   -1,   44, 
-           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
-          271,   -1,   -1,   -1,   -1,   -1,   61,  395,   -1,   -1, 
+           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           44,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
+          271,  395,   -1,   -1,   -1,   -1,   -1,   61,   -1,   -1, 
           281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
           291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
-           -1,   59,   -1,   -1,  305,    0,   91,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  305,    0,   -1,   91,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319,  320, 
           321,  322,  323,  324,  325,  326,  327,  328,  329,  330, 
            -1,   -1,  333,  334,  335,  336,   -1,  338,  339,   -1, 
-           -1,  342,   -1,  279,  345,   -1,  347,   -1,  349,   44, 
+           -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349,   44, 
           351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, 
           361,   -1,  363,   58,   59,   -1,   61,   -1,   63,   -1, 
-           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,  328,  271,  395,   -1,   91,   -1,   -1,  335, 
-          336,   -1,  280,  281,  282,   -1,  342,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,  262,  263, 
+          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
+           -1,   -1,   -1,   -1,  395,   -1,   91,  281,  282,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
+          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, 
+          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
+          334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, 
+           -1,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, 
+          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
+           58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1, 
+           -1,  375,   -1,   -1,   -1,  279,   -1,   10,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  395,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  328,    0,   -1,   -1,   61,   -1, 
+           -1,  335,  336,   -1,   -1,   10,   -1,   -1,  342,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   -1,  271,   -1,   91,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   44, 
+           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   58,   59,   -1,   -1,   -1,   63,   -1, 
+          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, 
+          325,  326,  327,  328,  329,  330,   91,   -1,  333,  334, 
+          335,  336,   -1,  338,  339,   -1,   -1,  342,   10,   -1, 
+          345,   -1,  347,   -1,  349,   -1,  351,   -1,  353,  354, 
+          355,  356,  357,  358,  359,    0,  361,   -1,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1, 
+          375,   -1,   44,   -1,  262,  263,  264,   -1,   -1,  267, 
+          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   61, 
+          395,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1, 
+           -1,   -1,   -1,   -1,   59,   -1,   -1,  305,    0,   91, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, 
           318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
           328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
-           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
+          338,  339,   -1,   -1,  342,   -1,  279,  345,   -1,  347, 
            -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,   -1,  361,  362,  363,   58,   59,   -1,   61, 
-           -1,   63,   -1,   -1,  279,   -1,   -1,  375,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   -1,  271,   -1,   -1,   -1,  395,   -1,   91, 
-           -1,   -1,   -1,  281,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,  328,   -1,    0,   -1,   -1,   -1,   -1, 
-          335,  336,   -1,   -1,   -1,   10,   -1,  342,   -1,   -1, 
+          358,  359,   -1,  361,   -1,  363,   58,   59,   -1,   61, 
+           -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
-           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  342,   -1,  281,  282,   -1,   44, 
-           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
-          295,  296,  297,   58,   59,  363,   -1,   -1,   63,   -1, 
-          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, 
-          325,  326,  327,  328,  329,  330,   91,  395,  333,  334, 
-          335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, 
-          345,   -1,  347,   -1,  349,   -1,  351,   -1,  353,  354, 
-          355,  356,  357,  358,  359,   -1,  361,   -1,  363,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
-          395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
-          282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
-           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, 
-          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
-           -1,  333,  334,  335,  336,   -1,   -1,  339,   -1,   -1, 
-          342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, 
-           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
-           -1,  363,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
-           -1,   -1,   -1,  375,   -1,   -1,   -1,  262,  263,  264, 
-           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
-           -1,   -1,   -1,  395,   -1,   91,  281,  282,   -1,   -1, 
+           -1,   -1,  267,  268,  269,  328,  271,  395,   -1,   91, 
+           -1,   -1,  335,  336,   -1,  280,  281,  282,   -1,  342, 
            -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
           295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
@@ -3561,32 +3553,32 @@
           325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, 
           335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, 
           345,   -1,  347,   -1,  349,   44,  351,   -1,  353,  354, 
-          355,  356,  357,  358,  359,   -1,  361,   -1,  363,   58, 
-           59,   -1,   -1,   -1,   63,   -1,   -1,   -1,  306,  307, 
-          375,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
-          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, 
-          395,   -1,   91,  331,  332,  333,  334,   -1,   -1,   -1, 
-           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1, 
-          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, 
-          358,  359,  360,  361,    0,   -1,  364,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   44,   -1, 
-           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   58,   59,   -1,   -1,   -1,   63,   -1,  305, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,  328,  329,  330,   91,   -1,  333,  334,  335, 
-          336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
-           -1,  347,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
-          356,  357,  358,  359,    0,  361,   -1,  363,   -1,   -1, 
-           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,  375, 
+          355,  356,  357,  358,  359,   -1,  361,  362,  363,   58, 
+           59,   -1,   61,   -1,   63,   -1,   -1,  279,   -1,   -1, 
+          375,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
+          395,   -1,   91,   -1,   -1,   -1,  281,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   -1,   -1,   -1,  328,   -1,    0,   -1, 
+           -1,   -1,   -1,  335,  336,   -1,   -1,   -1,   10,   -1, 
+          342,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  342,   -1,  281, 
+          282,   -1,   44,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   58,   59,  363,   -1, 
+           -1,   63,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,   91, 
+          395,  333,  334,  335,  336,   -1,   -1,  339,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
+           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
-          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,  395, 
-           -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   44,   -1, 
+          269,   -1,  271,  395,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,   -1,   -1,   59,   -1,   -1,  305,    0,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318, 
           319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
           329,  330,   -1,   -1,  333,  334,  335,  336,   -1,   -1, 
@@ -3594,374 +3586,454 @@
           349,   44,  351,   -1,  353,  354,  355,  356,  357,  358, 
           359,   -1,  361,   -1,  363,   58,   59,   -1,   -1,   -1, 
            63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,  395,   -1,   91,   -1, 
-           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   91,  281, 
+          282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
+           -1,  333,  334,  335,  336,   -1,   -1,  339,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
+           -1,  363,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
+           -1,  306,  307,  375,   -1,  310,   -1,   -1,   -1,  314, 
+          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           -1,  326,  327,  395,   -1,   91,  331,  332,  333,  334, 
+           -1,   -1,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1, 
+           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,    0,   -1,  364, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, 
+           -1,   44,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   58,   59,   -1,   -1,   -1, 
+           63,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,  328,  329,  330,   91,   -1, 
+          333,  334,  335,  336,   -1,   -1,  339,   -1,   -1,  342, 
+           -1,   -1,  345,   -1,  347,   -1,  349,   -1,  351,   -1, 
+          353,  354,  355,  356,  357,  358,  359,    0,  361,   -1, 
+          363,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, 
+           -1,   -1,  375,   -1,   -1,   -1,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
+           -1,   -1,  395,   -1,   -1,  281,  282,   -1,   -1,   -1, 
+           -1,   44,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   -1,   59,   -1,   -1,  305, 
             0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            10,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
           326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
           336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
            -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, 
-          356,  357,  358,  359,   -1,  361,   -1,  363,   -1,   59, 
+          356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, 
            -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, 
-           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,  395, 
-           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,    0,   -1,   -1,   -1,  293,  294,  295, 
-          296,  297,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
-          263,  264,   -1,   -1,  267,  268,  269,   44,  271,   -1, 
-           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,  281,  282, 
-           -1,   -1,   59,   -1,   -1,   -1,   63,  290,  291,   -1, 
-          293,  294,  295,  296,  297,   -1,   -1,  363,   -1,   -1, 
-           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   91,  318,  319,  320,  321,  322, 
-          323,  324,  325,  326,  327,  328,  329,  330,   -1,  395, 
-          333,  334,  335,  336,   -1,    0,  339,   -1,   -1,  342, 
-           -1,   -1,  345,   -1,  347,   10,  349,   -1,  351,   -1, 
+          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,  395, 
+           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   10,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, 
+          333,  334,  335,  336,   -1,   -1,  339,   -1,   -1,  342, 
+           -1,   -1,  345,   -1,  347,   -1,  349,   44,  351,   -1, 
           353,  354,  355,  356,  357,  358,  359,   -1,  361,   -1, 
-          363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
+          363,   -1,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1, 
+           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, 
+           -1,   -1,  395,   -1,   91,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
+          293,  294,  295,  296,  297,   -1,   10,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,  395,   -1,   59,   -1,   -1,   -1,   63,   -1, 
-           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           44,  271,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, 
+           -1,  281,  282,   -1,   -1,   59,   -1,   -1,   -1,   63, 
           290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319, 
+          363,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,  318,  319, 
           320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
-          330,   -1,   -1,  333,  334,  335,  336,   -1,   -1,  339, 
-           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, 
-           -1,  351,    0,  353,  354,  355,  356,  357,  358,  359, 
-           -1,  361,   10,  363,   -1,  262,  263,  264,   -1,   -1, 
-          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  290,  291,  395,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0, 
-           -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
+          330,   -1,  395,  333,  334,  335,  336,   -1,    0,  339, 
+           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   10,  349, 
+           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
+           -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,   -1,  262,  263,  264,   -1,   -1, 
+          267,  268,  269,   -1,  271,  395,   -1,   59,   -1,   -1, 
+           -1,   63,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
+          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
           327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, 
            -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, 
-          347,   -1,  349,   44,  351,   -1,  353,  354,  355,  356, 
-          357,  358,  359,   -1,  361,   -1,  363,   58,   59,   -1, 
-           -1,   -1,   63,   -1,   -1,   -1,   -1,  262,  263,  264, 
-           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  395,   -1, 
-           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
-          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          347,   -1,  349,   -1,  351,    0,  353,  354,  355,  356, 
+          357,  358,  359,   -1,  361,   10,  363,   -1,  262,  263, 
+          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  395,  293, 
+          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,    0,   -1,   59,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, 
+          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
+          334,  335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1, 
+           -1,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, 
+          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
+           58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
+          282,  395,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, 
-          325,  326,  327,  328,  329,  330,    0,   -1,  333,  334, 
-          335,  336,   -1,   -1,  339,   -1,   10,  342,   -1,   -1, 
-          345,   -1,  347,   -1,  349,   -1,  351,   -1,  353,  354, 
-          355,  356,  357,  358,  359,   -1,  361,   -1,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,    0, 
+           -1,  333,  334,  335,  336,   -1,   -1,  339,   -1,   10, 
+          342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
+           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1, 
+           -1,   -1,   63,  395,   -1,   -1,   -1,  262,  263,  264, 
+           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   63, 
-          395,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  293,  294, 
+          295,  296,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
           268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  293,  294,  295,  296,    0, 
+           -1,   -1,   -1,  281,  282,   -1,   44,  342,   -1,   -1, 
+           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
+           58,   59,   -1,   -1,   -1,   63,   -1,  305,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317, 
+          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
+           -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1, 
+          395,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
+           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
+          358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,    0, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   -1, 
            -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
           271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          281,  282,   -1,   44,  342,   -1,   -1,   -1,   -1,  290, 
+          281,  282,   -1,   44,   -1,   -1,   -1,   -1,   -1,  290, 
           291,   -1,  293,  294,  295,  296,  297,   58,   59,   -1, 
-           -1,   -1,   63,   -1,  305,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320, 
+           -1,   -1,   63,   -1,  305,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320, 
           321,  322,  323,  324,  325,  326,  327,   -1,  329,  330, 
-           -1,   -1,  333,  334,   -1,   -1,   -1,  395,  339,   -1, 
+           -1,   -1,  333,  334,   -1,   -1,   -1,   -1,  339,   -1, 
            -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1, 
           351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, 
-          361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  375,   -1,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  395,   -1,   -1,   -1,  262,  263, 
-          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, 
-           44,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   58,   59,   -1,   -1,   -1,   63, 
-           -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,   -1,  329,  330,   -1,   -1,  333, 
-          334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1, 
-           -1,  345,   -1,  347,   -1,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
+          361,   -1,  363,   -1,  262,  263,  264,   -1,   -1,  267, 
+          268,  269,   -1,  271,  375,    0,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  281,  282,   10,   -1,   -1,   -1,   -1, 
+           -1,   -1,  290,  291,  395,  293,  294,  295,  296,  297, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
+          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
+           -1,  329,  330,   58,   59,  333,  334,   -1,   63,   -1, 
+           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
+           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
+          358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, 
+           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   10,   -1,   -1,  395,   -1,   -1, 
            -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
-          271,  375,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          281,  282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
-          291,  395,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   44,  318,  319,  320, 
+          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   44,  290, 
+          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
+           -1,   -1,   58,   59,  305,   -1,   -1,   63,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320, 
           321,  322,  323,  324,  325,  326,  327,   -1,  329,  330, 
-           58,   59,  333,  334,   -1,   63,   -1,   -1,  339,   -1, 
+           -1,   -1,  333,  334,   -1,   -1,   -1,   -1,  339,   -1, 
            -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1, 
           351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, 
-          361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1, 
-           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   10,   -1,   -1,  395,   -1,   -1,   -1,  262,  263, 
-          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, 
-           -1,   -1,   -1,   -1,   -1,   44,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   58, 
-           59,  305,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,   -1,  329,  330,   -1,   -1,  333, 
-          334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1, 
-           -1,  345,   -1,  347,   -1,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   -1,  361,    0,  363, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
-           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          361,    0,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   10,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  395,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   44,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  281,  282,   -1,   -1,   59,   -1,   61, 
-           -1,   63,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,    0,   -1,   -1,   -1,  305,   -1,   -1, 
-           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   91, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-           -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1, 
-           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
-           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,   59,  361,   -1,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  262,  263,  264,   -1,  375,  267,  268, 
-          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  281,  282,   10,   -1,   -1,  395,   -1,   -1, 
+           -1,   -1,   -1,   -1,  395,   -1,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   44,  271,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   58, 
+           59,   -1,   -1,   -1,   63,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  318,  319,  320,  321,  322,  323,  324, 
+          325,  326,  327,   -1,  329,  330,   -1,   -1,  333,  334, 
+           -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, 
+          345,   -1,  347,   -1,  349,   -1,  351,   -1,  353,  354, 
+          355,  356,  357,  358,  359,   -1,  361,   -1,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
+          375,  267,  268,  269,   -1,  271,   -1,    0,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  281,  282,   10,   -1,   -1, 
+          395,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   44,  318,  319,  320,  321,  322,  323,  324,  325, 
+          326,  327,   -1,  329,  330,   58,   59,  333,  334,   -1, 
+           63,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
+           -1,  347,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
+          356,  357,  358,  359,   -1,  361,   -1,  363,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375, 
+           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,  395, 
+           -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,    0, 
-          329,  330,   -1,   59,  333,  334,   -1,   -1,   -1,   10, 
+           -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,  318, 
+          319,  320,  321,  322,  323,  324,  325,  326,  327,   -1, 
+          329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1,   -1, 
           339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
-          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, 
-          359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   44,   -1,   -1,  375,   -1,   -1,   -1, 
-          262,  263,  264,   -1,   -1,   -1,  268,  269,   59,  271, 
-           61,   -1,   63,   -1,   -1,   -1,  395,   -1,  280,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
-           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
-           91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
-          322,  323,  324,  325,  326,  327,  328,  329,  330,    0, 
-           -1,  333,  334,  335,  336,  262,  263,  264,   -1,   10, 
-          342,  268,  269,   -1,  271,   -1,   -1,  349,   -1,  351, 
-           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
-          362,  363,   -1,   -1,   -1,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1, 
-           61,   -1,   63,  395,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1, 
-      };
-   }
-
-   private static final short[] yyCheck3() {
-      return new short[] {
-
+          349,   44,  351,   -1,  353,  354,  355,  356,  357,  358, 
+          359,   -1,  361,   -1,  363,   -1,   59,   -1,   61,   -1, 
+           63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   91,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  342,  262,  263,  264,   -1,   91,   -1,  268, 
-          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,    0, 
-           -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   10, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   10,   -1,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, 
+          333,  334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, 
+           -1,   -1,  345,   -1,  347,   -1,  349,   44,  351,   -1, 
+          353,  354,  355,  356,  357,  358,  359,   -1,  361,   -1, 
+          363,   -1,   59,   -1,   61,   -1,   63,   -1,   -1,   -1, 
+           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  395,   -1,   -1,  262,  263, 
-          264,   -1,   -1,   44,  268,  269,   -1,  271,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  280,   -1,   59,   -1, 
-           61,   -1,   63,  342,   -1,   -1,  290,  291,   -1,  293, 
+           -1,   -1,  395,   -1,   91,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1, 
+           -1, 
+      };
+   }
+
+   private static final short[] yyCheck3() {
+      return new short[] {
+
+           -1,   -1,   -1,   -1,   -1,   -1,  280,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
           294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1, 
-           91,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,  328,  329,  330,    0,   -1,  333, 
-          334,  335,  336,   -1,   -1,   -1,  395,   10,  342,   -1, 
-           -1,   -1,   -1,   -1,   -1,  349,   -1,  351,   -1,  353, 
+           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, 
+          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
+          334,  335,  336,   -1,   -1,   -1,   -1,   -1,  342,   -1, 
+           -1,   -1,   -1,   -1,   -1,  349,   44,  351,   -1,  353, 
           354,  355,  356,  357,  358,  359,   -1,  361,  362,  363, 
+           -1,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
-          264,   -1,   -1,   -1,  268,  269,   59,  271,   61,   -1, 
-           63,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   91,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1, 
-           -1,   -1,   -1,   -1,   -1,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
-           -1,  262,  263,  264,   -1,   -1,   -1,  268,  269,   -1, 
-          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
-          291,  395,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
-            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           10,   -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320, 
-          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, 
-           -1,   -1,  333,  334,  335,  336,   -1,  338,   -1,   -1, 
-           -1,  342,   -1,   -1,   44,   -1,   -1,   -1,  349,   -1, 
-          351,   -1,  353,  354,  355,  356,  357,  358,  359,   59, 
-          361,   61,  363,   63,   -1,   -1,   -1,   -1,   -1,  262, 
-          263,  264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1, 
+           -1,  395,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   91,   -1,   -1,  395,   -1,   -1,  290,  291,   -1, 
-          293,  294,  295,  296,  297,   -1,   -1,   -1,    0,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
-           -1,   -1,   -1,   -1,  317,  318,  319,  320,  321,  322, 
-          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, 
-          333,  334,  335,  336,   -1,  338,   -1,   -1,   -1,  342, 
-           -1,   -1,   44,   -1,   -1,   -1,  349,   -1,  351,   -1, 
-          353,  354,  355,  356,  357,  358,  359,   59,  361,   61, 
-          363,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315, 
-           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   91, 
-          326,  327,  395,   -1,   -1,  331,  332,  333,  334,   -1, 
-           -1,    0,   -1,   -1,   -1,  341,   -1,   -1,   -1,   -1, 
-           -1,   10,  348,  349,   -1,  351,  352,  353,  354,  355, 
-          356,  357,  358,  359,  360,  361,   -1,   -1,  364,   -1, 
+           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1, 
+          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  280,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, 
+          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
+          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
+           -1,   -1,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1, 
+           -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, 
+          358,  359,   -1,  361,  362,  363,   -1,   59,   -1,   61, 
+           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1, 
-           -1,   -1,  262,  263,  264,   -1,   -1,   -1,  268,  269, 
-           59,  271,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   91, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319, 
-          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
-          330,    0,   -1,  333,  334,  335,  336,   -1,  338,   -1, 
-           -1,   10,  342,   -1,   -1,   -1,   -1,   -1,   -1,  349, 
-           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
-           -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, 
-          262,  263,  264,   -1,   -1,   44,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1, 
+          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           59,   -1,   61,   -1,   63,  395,   -1,   -1,  290,  291, 
-           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
+           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
+           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,  317, 
+          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
+          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
+          338,   -1,   -1,   -1,  342,   -1,   -1,   44,   -1,   -1, 
+           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
+          358,  359,   59,  361,   61,  363,   63,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   91,   -1,   -1,  317,  318,  319,  320,  321, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   91,   -1,   -1,  395,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,   -1,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           44,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   59,   -1,   61,   -1,   63, 
+           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
           322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
-           -1,  333,  334,  335,  336,   -1,  338,   -1,   -1,   -1, 
+           -1,  333,  334,  335,  336,   -1,  338,   91,   -1,   -1, 
           342,   -1,   -1,   -1,   -1,   -1,   -1,  349,   -1,  351, 
-           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
-           -1,  363,   -1,  262,  263,  264,   -1,   -1,   -1,  268, 
-          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  353,  354,  355,  356,  357,  358,  359,    0,  361, 
+           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  290,  291,  395,  293,  294,  295,  296,  297,   -1, 
-           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,  317,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
-          329,  330,   -1,   -1,  333,  334,  335,  336,   -1,  338, 
-           -1,   -1,   -1,  342,   -1,   -1,   44,   -1,   -1,   -1, 
-          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, 
-          359,   59,  361,   61,  363,   63,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,  268, 
-          269,   -1,  271,   91,   -1,   -1,  395,   -1,   -1,   -1, 
+           -1,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,   -1,  262,  263,  264,   -1,   -1, 
+           -1,  268,  269,   -1,  271,   -1,   -1,   59,   -1,   61, 
+           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
+          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,  317,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
-          329,  330,   -1,   -1,  333,  334,  335,  336,   -1,  338, 
-           -1,   -1,   -1,  342,   -1,   -1,   44,   -1,   -1,   -1, 
-          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, 
-          359,   59,  361,   61,  363,   63,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  306,  307,   -1,   -1,  310,   -1, 
-           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, 
-          322,  323,   -1,   91,  326,  327,  395,   -1,   -1,  331, 
-          332,  333,  334,   -1,   -1,    0,   -1,   -1,   -1,  341, 
-           -1,   -1,   -1,   -1,   -1,   10,  348,  349,   -1,  351, 
-          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, 
-           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   44, 
+          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
+          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, 
+           -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   -1,   -1, 
+           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, 
+          357,  358,  359,   -1,  361,   -1,  363,   -1,  262,  263, 
+          264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  395,  293, 
+          294,  295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, 
+           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
+          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
+          334,  335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1, 
+           -1,   44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353, 
+          354,  355,  356,  357,  358,  359,   59,  361,   61,  363, 
+           63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,   -1,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1, 
+           -1,  395,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,    0, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
+           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
+           -1,  333,  334,  335,  336,   -1,  338,   -1,   -1,   -1, 
+          342,   -1,   -1,   44,   -1,   -1,   -1,  349,   -1,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   59,  361, 
+           61,  363,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314, 
+          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           91,  326,  327,  395,   -1,   -1,  331,  332,  333,  334, 
+           -1,   -1,    0,   -1,   -1,   -1,  341,   -1,   -1,   -1, 
+           -1,   -1,   10,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,  262, 
+          263,  264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1, 
+           -1,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, 
+          333,  334,  335,  336,   -1,  338,   -1,   -1,   -1,  342, 
+           -1,   -1,   -1,   -1,   -1,   -1,  349,   -1,  351,    0, 
+          353,  354,  355,  356,  357,  358,  359,   -1,  361,   10, 
+          363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  262,  263,  264,   -1,   -1,   -1,  268,  269,   -1, 
+          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  395,   44,   -1,   -1,   -1,   -1,   -1,  290, 
+          291,   -1,  293,  294,  295,  296,  297,   -1,   59,   -1, 
+           61,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320, 
+          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, 
+           91,   -1,  333,  334,  335,  336,   -1,  338,   -1,   -1, 
+           -1,  342,   -1,   -1,   -1,   -1,   -1,   -1,  349,    0, 
+          351,   -1,  353,  354,  355,  356,  357,  358,  359,   10, 
+          361,   -1,  363,   -1,  262,  263,  264,   -1,   -1,   -1, 
           268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   59,   -1,   61,   -1,   63,   -1, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  317, 
+           -1,   -1,  290,  291,  395,  293,  294,  295,  296,  297, 
+           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   59,   -1, 
+           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,  317, 
           318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
           328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
-          338,   -1,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1, 
+          338,   -1,   -1,   -1,  342,   -1,   -1,   44,   -1,   -1, 
            -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,    0,  361,   -1,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1, 
-          268,  269,   -1,  271,   -1,   -1,   -1,  395,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
-          338,   -1,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1, 
-           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,   -1,  361,   -1,  363,   -1,  262,  263,  264, 
-           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, 
+          358,  359,   59,  361,   61,  363,   63,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  290,  291,  395,  293,  294, 
-          295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
-           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, 
-          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, 
-          335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1, 
-           44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354, 
-          355,  356,  357,  358,  359,   59,  361,   61,  363,   63, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   10,   -1,   -1,   -1,   91,   -1,   -1, 
-          395,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  281,  282,   -1,   -1,   44,   -1,   -1, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,    0,   59,   -1,   -1,   -1,   -1,  305,   -1,   -1, 
-           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317, 
-          318,  319,  320,  321,   -1,   -1,  324,  325,  326,  327, 
-           -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1, 
-           -1,  339,   -1,   -1,  342,   44,   -1,  345,   -1,  347, 
-           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,   -1, 
-           59,  359,   61,  361,   63,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, 
+           -1,   -1,   -1,   -1,   91,   -1,   -1,  395,   -1,   -1, 
+           -1,  262,  263,  264,   -1,   -1,   -1,  268,  269,   -1, 
+          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
+          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319,  320, 
+          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, 
+           -1,   -1,  333,  334,  335,  336,   -1,  338,   -1,   -1, 
+           -1,  342,   -1,   -1,   -1,   -1,   -1,   -1,  349,   44, 
+          351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, 
+          361,   -1,  363,   58,   59,   -1,   -1,   -1,   63,   -1, 
+           -1,  262,  263,  264,   -1,   -1,   -1,  268,  269,   -1, 
+          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  293,  294,  295,  296,  297,   -1,    0,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
+           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
+           -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   91,   -1,   -1,   -1,   -1,  395,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1, 
+           -1,  342,   -1,  290,  291,   -1,  293,  294,  295,  296, 
+          297,   -1,   -1,   -1,    0,   -1,   -1,   59,   -1,   -1, 
+           -1,   -1,  363,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
+          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
+          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, 
+           -1,  338,   -1,   -1,  395,  342,   -1,   -1,   44,   -1, 
+           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, 
+          357,  358,  359,   59,  361,   61,  363,   63,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  395,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
+          305,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  317,  318,  319,  320,  321,   -1,   -1,  324, 
+          325,  326,  327,   -1,  329,  330,   -1,   -1,  333,  334, 
+           -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   44,   -1, 
+          345,   -1,  347,   -1,  349,   -1,  351,   -1,  353,  354, 
+          355,  356,   -1,   59,  359,   61,  361,   63,  363,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+          375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
+          282,   -1,   -1,   -1,   -1,   91,   -1,   -1,  290,  291, 
+          395,  293,  294,  295,  296,  297,   -1,    0,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
-          264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
+           -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   44,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   58,   59,   -1,   -1,   -1, 
-           63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,   -1,  262,  263,  264,  342,   -1, 
-          267,  268,  269,   -1,  271,  349,    0,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   10,  361,   -1,  363, 
-           -1,   -1,   -1,   -1,   -1,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          342,   44,   -1,  345,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1, 
+           63,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
+          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
+          336,   -1,   -1,  395,   -1,   -1,  342,   -1,   -1,   -1, 
+           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
+          356,  357,  358,  359,   -1,  361,    0,  363,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           44,  395,   -1,  262,  263,  264,   -1,   -1,   -1,  268, 
-          269,   -1,  271,   -1,   58,   59,   -1,   -1,   -1,   63, 
-           -1,   -1,  339,   -1,   -1,  342,   -1,   -1,   -1,   -1, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
-          329,  330,   -1,   -1,  333,  334,  335,  336,  395,   -1, 
-           -1,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1,   -1, 
-          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, 
-          359,   -1,  361,    0,  363,   -1,   -1,   -1,   -1,  262, 
-          263,  264,   -1,   10,  267,  268,  269,   -1,  271,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  395, 
+           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
+           44,   -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   63, 
+           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
+          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
+          336,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,   -1, 
+           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
+          356,  357,  358,  359,   -1,  361,   -1,  363,   -1,  262, 
+          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, 
-           -1,   -1,   -1,   -1,   -1,   -1,  395,  290,  291,   -1, 
-          293,  294,  295,  296,  297,   -1,   -1,   44,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  395, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   59,   10,   -1,  318,  319,  320,  321,  322, 
+           -1,   -1,   -1,   10,   -1,  318,  319,  320,  321,  322, 
           323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, 
           333,  334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, 
            -1,   -1,  345,   -1,  347,   -1,   -1,   44,  351,   -1, 
            -1,   -1,  355,  356,  357,  358,  359,   -1,  361,   -1, 
-          363,   -1,   59,   -1,   61,   -1,   63,   -1,  262,  263, 
-          264,   -1,  375,  267,  268,  269,   -1,  271,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, 
-           -1,   -1,  395,   -1,   91,   -1,  290,  291,   -1,  293, 
+          363,   -1,   59,   -1,   61,   -1,   63,   -1,   -1,   -1, 
+           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,  262,  263, 
+          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
+           -1,   -1,  395,   -1,   91,   -1,   -1,  281,  282,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
           294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   10,   -1,  318,  319,  320,  321,  322,  323, 
@@ -3971,503 +4043,474 @@
            -1,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
            58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, 
            -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
-           -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,    0, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
-           -1,   -1,   -1,   -1,   -1,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
-           -1,  268,  269,   44,  271,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1, 
-           -1,   -1,   63,  290,  291,  342,  293,  294,  295,  296, 
+           -1,  306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314, 
+          315,  395,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           -1,  326,  327,   -1,   -1,    0,  331,  332,  333,  334, 
+           -1,   -1,   -1,   -1,   -1,   10,  341,   -1,   -1,   -1, 
+           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
+           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   44, 
+           -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1, 
+           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
           297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
           327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, 
-           -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,  395,   -1, 
-           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, 
+           -1,   -1,   -1,    0,   -1,  342,   -1,   -1,   -1,   -1, 
+           -1,   -1,  349,   10,  351,   -1,  353,  354,  355,  356, 
           357,  358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  281,  282,   10,   -1,   -1,  395,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  262,  263,  264,   44,   -1,  267, 
+          268,  269,   -1,  271,   -1,   -1,   -1,   -1,  395,   -1, 
+           -1,   58,   59,  281,  282,   -1,   63,   -1,   -1,   -1, 
            -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-           -1,  329,  330,   58,   59,  333,  334,   -1,   63,   -1, 
-           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
-           -1,   -1,   -1,  351,   -1,   -1,   -1,   -1,   -1,  357, 
-          358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, 
-           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
-          271,   -1,    0,   -1,   -1,   -1,   -1,  395,   -1,   -1, 
-          281,  282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
-          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   44,  318,  319,  320, 
-          321,  322,  323,  324,  325,  326,  327,   -1,  329,  330, 
-           58,   59,  333,  334,   -1,   63,   -1,   -1,  339,   -1, 
-           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1, 
-          351,   -1,   -1,   -1,   -1,   -1,  357,  358,  359,   -1, 
-          361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1, 
-           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   10,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
+           -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1, 
+           -1,  339,   -1,   -1,  342,    0,   -1,  345,   -1,  347, 
+           -1,   -1,   -1,  351,   -1,   10,   -1,   -1,   -1,  357, 
+          358,  359,   -1,  361,   -1,  363,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   -1,  271,  375,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   44, 
+           -1,   -1,   -1,   -1,   -1,  290,  291,  395,  293,  294, 
+          295,  296,  297,   58,   59,   -1,   -1,   -1,   63,   -1, 
+          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  318,  319,  320,  321,  322,  323,  324, 
+          325,  326,  327,   -1,  329,  330,   -1,   -1,  333,  334, 
+           -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, 
+          345,   -1,  347,   -1,   -1,   -1,  351,   -1,   -1,   -1, 
+           -1,   -1,  357,  358,  359,   -1,  361,    0,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, 
+          375,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
+          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
+          395,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1, 
+           -1,   44,   -1,  290,  291,   -1,  293,  294,  295,  296, 
+          297,   -1,   -1,   -1,   -1,   58,   59,   -1,  305,   -1, 
+           63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
+          327,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, 
+          347,   -1,   -1,   -1,  351,   -1,   -1,   -1,   -1,   -1, 
+          357,  358,  359,   -1,  361,    0,  363,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,  375,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   -1,  271,   -1,  395,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   44, 
+           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   58,   59,   -1,   -1,   -1,   63,   -1, 
+          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  318,  319,  320,  321,  322,  323,  324, 
+          325,  326,  327,   -1,  329,  330,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  339,   -1,   -1,  342,    0,   -1, 
+          345,   -1,  347,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
+           -1,   -1,  357,  358,  359,   -1,  361,   -1,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   44,   -1,  267,  268,  269,   -1,  271,   -1, 
+          395,   -1,   -1,   -1,   -1,   -1,   58,   59,  281,  282, 
+           -1,   63,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, 
+           -1,    0,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, 
+           -1,   10,   -1,   -1,  357,  358,  359,   -1,  361,   -1, 
+          363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  375,   -1,   -1,   -1,   -1,  262,  263,  264, 
            -1,   -1,  267,  268,  269,   44,  271,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   58, 
+           -1,   -1,  395,   -1,   -1,   -1,  281,  282,   -1,   58, 
            59,   -1,   -1,   -1,   63,  290,  291,   -1,  293,  294, 
           295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  318,  319,  320,  321,  322,  323,  324, 
           325,  326,  327,   -1,  329,  330,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  339,   -1,   -1,  342,    0,   -1, 
-          345,   -1,  347,   -1,   -1,   -1,  351,   -1,   10,   -1, 
-           -1,   -1,  357,  358,  359,   -1,  361,   -1,  363,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          375,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   44,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
-          395,   -1,   -1,  281,  282,   -1,   58,   59,   -1,   -1, 
-           -1,   63,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-           -1,  329,  330,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  357, 
-          358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  262,  263,  264,   -1,  375,  267,  268, 
-          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  281,  282,   10,   -1,   -1,  395,   -1,   -1, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,   -1, 
-          329,  330,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
-          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  357,  358, 
-          359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, 
+          345,   -1,  347,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
+           -1,   -1,  357,  358,   -1,   -1,   -1,   -1,  363,   -1, 
           262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
-           -1,    0,   -1,   -1,   -1,   -1,  395,   -1,   -1,  281, 
-          282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
-           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   44,  318,  319,  320,  321, 
-          322,  323,  324,  325,  326,  327,   -1,  329,  330,   58, 
-           59,   -1,   -1,   -1,   63,   -1,   -1,  339,   -1,   -1, 
-          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  357,  358,   -1,   -1,   -1, 
-           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1, 
-           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   10,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   44,   -1,   -1,   -1,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,   58,   59,   -1,   -1, 
-           -1,   63,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,   -1,    0,   -1,   -1,  305, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
-           -1,   -1,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
-           44,  347,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  357,  358,   -1,   58,   59,   -1,  363,   -1,   63, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375, 
+          375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
+          282,   -1,   44,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+          395,  293,  294,  295,  296,  297,   58,   59,   -1,   -1, 
+           -1,   63,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,   -1,  329,  330,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,   -1,    0,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  357,  358,   10,   -1,   -1, 
+           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
-          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,  395, 
-           -1,   -1,  281,  282,   10,   -1,   -1,   -1,   -1,   -1, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
+          269,   44,  271,  395,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  281,  282,   -1,   58,   59,   -1,   -1,   -1, 
+           63,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
-           -1,   -1,   -1,   -1,   -1,  324,  325,   -1,   -1,   -1, 
-          329,  330,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
+           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   10,  324,  325,   -1,   -1,   -1, 
+          329,  330,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          262,  263,  264,   -1,  363,  267,  268,  269,   -1,  271, 
-           -1,    0,   -1,   -1,   -1,   -1,  375,   -1,   -1,  281, 
-          282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
-           -1,  293,  294,  295,  296,  297,  395,   -1,   -1,   -1, 
-           -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1, 
-           -1,   -1,  324,  325,   -1,   -1,   -1,  329,  330,   58, 
-           59,   -1,   -1,   -1,   63,   -1,   -1,  339,   -1,   -1, 
-          342,   -1,   -1,  345,   -1,  347,   -1,   -1,  262,  263, 
-          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,    0, 
-           -1,  363,   -1,   -1,   -1,   -1,   -1,  281,  282,   10, 
-           -1,   -1,   -1,  375,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  305,   -1,  395,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, 
-          324,  325,   -1,   -1,   -1,  329,  330,   58,   59,   -1, 
-           -1,   -1,   63,   -1,   -1,  339,   -1,   -1,  342,   -1, 
-           -1,  345,   -1,  347,   -1,   -1,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,   -1,    0,   -1,  363, 
-           -1,   -1,   -1,   -1,   -1,  281,  282,   10,   -1,   -1, 
-           -1,  375,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
-           -1,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,  324,  325, 
-           -1,   -1,   -1,  329,  330,   58,   59,   -1,   -1,   -1, 
-           63,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
-           -1,  347,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  262,  263,  264,   -1,  363,  267,  268, 
-          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,  375, 
-           -1,   -1,  281,  282,   10,   -1,   -1,   -1,   -1,   -1, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,  297,  395, 
-           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
-           -1,   -1,   -1,   -1,   -1,  324,  325,   -1,   -1,   -1, 
-          329,  330,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
-          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
-           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
-          271,   -1,    0,   -1,  363,   -1,   -1,   -1,   -1,   -1, 
-          281,  282,   10,   -1,   -1,   -1,  375,   -1,   -1,  290, 
-          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  305,   -1,  395,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, 
-           -1,   -1,   -1,  324,  325,   -1,   -1,   -1,  329,  330, 
-           58,   59,   -1,   -1,   -1,   63,   -1,   -1,  339,   -1, 
-           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,  262, 
-          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, 
-            0,   -1,  363,   -1,   -1,   -1,   -1,   -1,  281,  282, 
-           10,   -1,   -1,   -1,  375,   -1,   -1,  290,  291,   -1, 
+           -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   58,   59,   -1,   -1,  375,   63,   -1,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   -1,  281, 
+          282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,    0,   -1,   -1, 
+           -1,   -1,   -1,  305,   -1,   -1,   -1,   10,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  324,  325,   -1,   -1,   -1,  329,  330,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, 
+          342,   44,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1, 
+           63,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   -1,  375,  267,  268,  269,   -1,  271,   -1, 
+           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,  281,  282, 
+           -1,   -1,   -1,  395,   10,   -1,   -1,  290,  291,   -1, 
           293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  305,   -1,  395,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1, 
-           -1,  324,  325,   -1,   -1,   -1,  329,  330,   58,   59, 
-           -1,   -1,   -1,   63,   -1,   -1,  339,   -1,   -1,  342, 
-           -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,    0, 
-          363,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   10, 
-           -1,   -1,  375,   -1,   -1,  281,  282,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,  395,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
+           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
+           -1,  324,  325,   -1,   -1,   -1,  329,  330,   -1,   -1, 
+           -1,   -1,   58,   59,   -1,   -1,  339,   63,   -1,  342, 
+           -1,   -1,  345,   -1,  347,   -1,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
+          363,    0,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, 
+           -1,   10,  375,   -1,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
+           -1,   -1,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,  324,  325, 
+           -1,   -1,   -1,  329,  330,   -1,   -1,   -1,   -1,   58, 
+           59,   -1,   -1,  339,   63,   -1,  342,   -1,   -1,  345, 
+           -1,  347,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,  262, 
+          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,  375, 
+           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,  281,  282, 
+           -1,   -1,   -1,   -1,   10,   -1,   -1,  290,  291,  395, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
+           -1,  324,  325,   -1,   -1,   -1,  329,  330,   -1,   -1, 
+           -1,   -1,   58,   59,   -1,   -1,  339,   63,   -1,  342, 
+           -1,   -1,  345,   -1,  347,   -1,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
+          363,    0,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, 
+           -1,   10,  375,   -1,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
+           -1,   -1,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,  324,  325, 
+           -1,   -1,   -1,  329,  330,   -1,   -1,   -1,   -1,   58, 
+           59,   -1,   -1,  339,   63,   -1,  342,   -1,   -1,  345, 
+           -1,  347,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,   -1,   -1,   -1,   -1,  363,    0,   -1, 
+           -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   10,  375, 
+           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,  395, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,   -1,  324,  325,   -1,   -1,   -1, 
+          329,  330,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1, 
+          339,   63,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  363,   -1,  262,  263,  264,    0, 
+           -1,  267,  268,  269,   -1,  271,  375,   -1,   -1,   10, 
+           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  290,  291,  395,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
            -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,  325, 
-           -1,   -1,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
-           -1,  347,   -1,   -1,  262,  263,  264,   -1,    0,  267, 
-          268,  269,   -1,  271,   -1,   -1,   -1,  363,   10,   -1, 
-           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,  375, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,  395, 
-           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1, 
-            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           10,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
-           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, 
-           -1,  281,  282,   -1,   44,   -1,   -1,  375,   -1,   -1, 
-          290,  291,   -1,  293,  294,  295,  296,  297,   58,   59, 
-           -1,   -1,   -1,   -1,   -1,  305,   -1,  395,   -1,   -1, 
+           -1,    0,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1, 
+           -1,   10,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
+           -1,  347,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,   -1,   -1,   -1,   -1,  363,   -1,   -1, 
+           -1,   -1,  281,  282,   -1,   44,   -1,   -1,   -1,  375, 
+           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   58, 
+           59,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,  395, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  339, 
-           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1, 
-           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
-          271,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, 
-          281,  282,   44,   -1,   -1,  375,   -1,   -1,   -1,  290, 
-          291,   -1,  293,  294,  295,  296,  297,   59,   -1,   -1, 
-           -1,   -1,   -1,   -1,  305,  395,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   10, 
-           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1, 
-          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
-           -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
-          282,   -1,   -1,   44,  375,   -1,   -1,   -1,  290,  291, 
-           -1,  293,  294,  295,  296,  297,   -1,   58,   59,   -1, 
-           -1,   -1,   -1,  305,  395,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  262,  263,  264,    0,   -1,  267,  268,  269, 
-           -1,  271,   -1,   -1,   -1,   10,   -1,  339,   -1,   -1, 
-          342,  281,  282,  345,   -1,  347,   -1,   -1,   -1,   -1, 
-          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,  363,    0,   -1,   -1,  305,   -1,   -1,   -1,   44, 
-           -1,   -1,   10,  375,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1,  339, 
-           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
+          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
           262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
-           -1,   59,   -1,  363,   -1,   -1,   -1,   -1,   -1,  281, 
-          282,   -1,   -1,   -1,   -1,  375,   -1,   -1,  290,  291, 
-           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
-            0,   -1,   -1,  305,   -1,  395,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,  281, 
+          282,   -1,   44,   -1,   -1,   -1,  375,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   58,   59,   -1,   -1, 
+            0,   -1,   -1,  305,   -1,   -1,  395,   -1,   -1,   -1, 
            10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, 
-          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, 
+          342,   -1,   -1,  345,   44,  347,   -1,   -1,   -1,   -1, 
            -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   59, 
-          271,  363,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          281,  282,   10,  375,   -1,   -1,   -1,   -1,   -1,  290, 
-          291,   -1,  293,  294,  295,  296,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  395,  305,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,    0, 
-           -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,  339,   10, 
-           -1,  342,   -1,   -1,  345,   -1,  347,  262,  263,  264, 
-           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
-           -1,   -1,  363,   -1,   -1,   -1,  281,  282,   -1,   -1, 
-           -1,   -1,   59,   -1,  375,  290,  291,   -1,  293,  294, 
-          295,  296,  297,   -1,  262,  263,  264,   -1,   59,  267, 
-          268,  269,   -1,  271,  395,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1, 
-          345,   -1,  347,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,   -1, 
+          271,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          281,  282,   -1,  375,   -1,   -1,   -1,   -1,   -1,  290, 
+          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
+           -1,    0,   -1,  395,  305,   -1,   -1,   -1,   -1,   -1, 
+           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,  339,   -1, 
+            0,  342,  281,  282,  345,   44,  347,   -1,   -1,   -1, 
+           10,  290,  291,   -1,  293,  294,  295,  296,  297,   58, 
+           59,   -1,  363,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  395,   -1,   -1,   -1,   -1,   59, 
+          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,  281, 
+          282,   -1,   -1,   -1,   -1,   -1,  375,    0,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   10,   -1,   -1, 
+           -1,   -1,   -1,  305,   -1,   -1,  395,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
-           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-          395,  271,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, 
-           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  262,  263,  264,    0,   -1,  267,  268,  269, 
+           -1,  271,   -1,   -1,   -1,   10,   -1,  339,   -1,   -1, 
+          342,  281,  282,  345,   -1,  347,   59,   -1,   -1,   -1, 
           290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  342,  281,  282,  345,   -1,   -1,   -1,   -1, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,  363,   -1,  262,  263,  264,   10,   -1, 
-          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
-           -1,  262,  263,  264,  281,  282,   -1,  268,  269,   -1, 
-          271,   -1,   -1,  290,  291,  395,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,  342,   -1,   -1,  345,   -1,   -1, 
-           -1,   -1,  293,  294,  295,  296,  297,   59,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,  345,   91, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   -1, 
-           -1,  342,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, 
-           -1,   -1,  363,  265,  266,   -1,   -1,   -1,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,  395,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, 
-          292,   -1,   -1,   -1,  395,   -1,   -1,  299,   -1,   -1, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-          312,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  337,   -1,   59,  340,   -1, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,  350,   -1, 
-          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, 
-           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   91, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,  394,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,  280,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, 
-           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,  341, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, 
-          362,   -1,   -1,  365,  366,  367,  368,  369,  370,   91, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,  280,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, 
-           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,  341, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, 
-          362,   -1,   -1,  365,  366,  367,  368,  369,  370,   91, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,  280,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, 
-           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,  341, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, 
-          362,   -1,   -1,  365,  366,  367,  368,  369,  370,   91, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, 
-           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,  341, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, 
-           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, 
-           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,   -1, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, 
-           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, 
-          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
+           -1,  363,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1, 
+            0,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1,  339, 
+           10,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1, 
+           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,  363,   -1,   -1,   -1,   -1,   -1,    0, 
+           -1,   -1,  281,  282,   -1,  375,   -1,   -1,   -1,   10, 
+           -1,  290,  291,   -1,  293,  294,  295,  296,   -1,   59, 
+           -1,   -1,  262,  263,  264,  395,  305,  267,  268,  269, 
+           -1,  271,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, 
+           -1,  281,  282,   44,   -1,   10,   -1,   -1,   -1,    0, 
+          290,  291,   -1,  293,  294,  295,  296,  297,   59,   10, 
+          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
+           -1,   -1,   -1,   -1,  363,    0,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   44,   59,   10,  375,   -1,   -1,   -1, 
+           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   59,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   -1,  262, 
+          263,  264,   -1,  363,  267,  268,  269,   -1,  271,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, 
+           -1,   -1,   -1,   -1,   59,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,  395,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   -1,   10,   -1,   -1,   -1,   -1,  342, 
+           -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  337,   -1,   59,  340,   -1, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, 
-           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
+          363,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
+           -1,  271,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1, 
+          345,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          290,  291,  395,  293,  294,  295,  296,  297,  363,   -1, 
+           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
+          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  337,   -1,   59,  340,   -1, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, 
-          362,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,   10,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, 
-           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274, 
-      };
-   }
-
-   private static final short[] yyCheck4() {
-      return new short[] {
-
-          275,  276,  277,  278,   10,   -1,   -1,   -1,  283,  284, 
-          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, 
-           -1,   -1,   -1,  298,  299,   -1,  301,  302,  303,  304, 
-           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, 
-          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, 
-           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, 
-          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
-           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, 
-           -1,  256,  257,  258,  259,  260,  261,  392,  393,  264, 
-          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, 
-          275,  276,  277,  278,   10,   -1,   -1,   -1,  283,  284, 
-          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, 
-           -1,   -1,   -1,  298,  299,   -1,  301,  302,  303,  304, 
-           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, 
-          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          395,   -1,  293,  294,  295,  296,  297,  262,  263,  264, 
+           -1,   -1,  342,  268,  269,  345,  271,   -1,   -1,   -1, 
+           -1,  262,  263,  264,   -1,   -1,   -1,  268,  269,   -1, 
+          271,   -1,   -1,  363,   -1,  290,  291,   -1,  293,  294, 
+          295,  296,   -1,   -1,   10,   -1,   -1,   -1,  339,   -1, 
+           -1,  342,  293,  294,  295,  296,  297,  262,  263,  264, 
+           -1,   -1,   -1,  268,  269,  395,  271,   -1,   -1,   -1, 
+           -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  342,  293,  294, 
+          295,  296,  297,   59,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  342,   -1,   -1,  395,   -1,   -1,   -1,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  363,   -1,   -1,   91,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1, 
+          395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  257,  258,  259,  395,  261,   -1,   -1,  363,  265, 
+          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
+          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   10,   -1,  292,   -1,   -1,   -1, 
+          395,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, 
-           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, 
-          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
-           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1, 
-          256,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265, 
-          266,   -1,   -1,   10,  270,   -1,  272,  273,  274,  275, 
+           -1,  337,   -1,   59,  340,   -1,   -1,  343,  344,   -1, 
+          346,   -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
+          366,  367,  368,  369,  370,   91,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  394,   -1, 
+          256,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,   -1,   -1,  269,  270,   -1,  272,  273,  274,  275, 
+          276,  277,  278,   -1,  280,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   10,   -1,  292,   -1,   -1,   -1, 
+           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,  335, 
+          336,  337,   -1,   59,  340,  341,   -1,  343,  344,   -1, 
+          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
+           -1,  357,   -1,   -1,  360,   -1,  362,   -1,   -1,  365, 
+          366,  367,  368,  369,  370,   91,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1,   -1, 
+          256,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,   -1,   -1,  269,  270,   -1,  272,  273,  274,  275, 
+          276,  277,  278,   -1,  280,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   10,   -1,  292,   -1,   -1,   -1, 
+           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,  335, 
+          336,  337,   -1,   59,  340,  341,   -1,  343,  344,   -1, 
+          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
+           -1,  357,   -1,   -1,  360,   -1,  362,   -1,   -1,  365, 
+          366,  367,  368,  369,  370,   91,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1,   -1, 
+          256,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,   -1,   -1,  269,  270,   -1,  272,  273,  274,  275, 
+          276,  277,  278,   -1,  280,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   10,   -1,  292,   -1,   -1,   -1, 
+           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,  335, 
+          336,  337,   -1,   59,  340,  341,   -1,  343,  344,   -1, 
+          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
+           -1,  357,   -1,   -1,  360,   -1,  362,   -1,   -1,  365, 
+          366,  367,  368,  369,  370,   91,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1,   -1, 
+          256,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,   -1,   -1,  269,  270,   -1,  272,  273,  274,  275, 
           276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
+          286,  287,  288,  289,   10,   -1,  292,   -1,   -1,   -1, 
            -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
           306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
-          316,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,  335, 
+          336,  337,   -1,   59,  340,  341,   -1,  343,  344,   -1, 
           346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,  363,   -1,  365, 
+           -1,  357,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
           366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
           376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,  257,  258,  259,  260,  261,  392,  393,   -1,  265, 
-          266,   -1,   10,   -1,  270,   -1,  272,  273,  274,  275, 
+           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1,   -1, 
+          256,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,   -1,   -1,  269,  270,   -1,  272,  273,  274,  275, 
           276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
+          286,  287,  288,  289,   10,   -1,  292,   -1,   -1,   -1, 
+           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,  335, 
+          336,  337,   -1,   59,  340,   -1,   -1,  343,  344,   -1, 
+          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
+           -1,  357,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
+          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1,   -1, 
+          256,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,   -1,  268,  269,  270,  271,  272,  273,  274,  275, 
+          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   10,   -1,  292,   -1,   -1,   -1, 
            -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
           306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
           316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,  342,  343,  344,   -1, 
+           -1,  337,   -1,   59,  340,   -1,   -1,  343,  344,   -1, 
           346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
           366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
           376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-          257,  258,  259,   -1,  261,   -1,  392,  393,  265,  266, 
+           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1,   -1, 
+          256,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,   -1,   -1,  269,  270,   -1,  272,  273,  274,  275, 
+          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   10,   -1,  292,   -1,   -1,   -1, 
+           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  337,   -1,   59,  340,   -1,   -1,  343,  344,   -1, 
+          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  360,   -1,  362,   -1,   -1,  365, 
+          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1,   -1, 
+          256,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,   -1,   -1,  269,  270,   -1,  272,  273,  274,  275, 
+          276,  277,  278,   -1,   10,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
+           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1, 
+      };
+   }
+
+   private static final short[] yyCheck4() {
+      return new short[] {
+
+           -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
+           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
+          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
+          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  392,  393,   -1,   -1,  256, 
+          257,  258,  259,  260,  261,  262,  263,  264,  265,  266, 
+           -1,   -1,  269,  270,   -1,  272,  273,  274,  275,  276, 
+          277,  278,   10,   -1,   -1,   -1,  283,  284,  285,  286, 
+          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
+           -1,  298,  299,   -1,  301,  302,  303,  304,   -1,  306, 
+          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
+           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
+          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
+          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,  256, 
+          257,  258,  259,  260,  261,  392,  393,  264,  265,  266, 
            -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
+          277,  278,   10,   -1,   -1,   -1,  283,  284,  285,  286, 
           287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,   44,  313,  314,  315,  316, 
+           -1,  298,  299,   -1,  301,  302,  303,  304,   -1,  306, 
+          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
+           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
           367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,  257, 
-          258,  259,   -1,  261,   -1,  392,  393,  265,  266,   -1, 
-           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  392,  393,   -1,  256,  257, 
+          258,  259,  260,  261,   -1,   -1,   -1,  265,  266,   -1, 
+           -1,   10,  270,   -1,  272,  273,  274,  275,  276,  277, 
           278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
           288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
-           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
-          308,  309,  310,  311,   44,  313,  314,  315,  316,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          298,  299,   -1,  301,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, 
+           59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
            -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
-           -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,  363,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,  257, 
+          258,  259,  260,  261,  392,  393,   -1,  265,  266,   -1, 
+           10,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+          298,  299,   -1,  301,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,  342,  343,  344,   -1,  346,   -1, 
+          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
           368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
-           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  392,  393,   -1,   -1,  257,  258, 
-          259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,  257,  258, 
+          259,   -1,  261,   -1,  392,  393,  265,  266,   -1,   -1, 
            -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, 
            -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, 
           289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, 
           299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, 
-          309,  310,  311,   -1,  313,   -1,   -1,  316,   59,   -1, 
+          309,  310,  311,   44,  313,  314,  315,  316,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, 
            -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
+           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
           369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, 
           379,  380,  381,  382,   -1,   -1,   -1,  257,  258,  259, 
            -1,  261,   -1,  392,  393,  265,  266,   -1,   -1,   -1, 
@@ -4475,40 +4518,41 @@
            -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
            -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, 
            -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, 
-          310,  311,   -1,  313,   -1,   -1,  316,   59,   -1,   -1, 
+          310,  311,   44,  313,  314,  315,  316,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
           340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
+           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
           370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
-          380,  381,  382,   -1,   -1,   -1,  257,  258,  259,  260, 
-          261,   -1,  392,  393,  265,  266,   -1,   -1,   -1,  270, 
+          380,  381,  382,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  392,  393,   -1,   -1,  257,  258,  259,   -1, 
+          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
            -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
            -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
-           -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,  300, 
-          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
-          311,   -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
+           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,   -1,  313,   -1,   -1,  316,   59,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
-           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, 
-           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
+           -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
            -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
-          381,  382,   -1,   -1,   -1,  257,  258,  259,  260,  261, 
+          381,  382,   -1,   -1,   -1,  257,  258,  259,   -1,  261, 
            -1,  392,  393,  265,  266,   -1,   -1,   -1,  270,   -1, 
           272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, 
            -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
+          292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, 
           302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
+           -1,  313,   -1,   -1,  316,   59,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, 
+           -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
            -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,   -1,  256,  257,  258,  259,  260,  261,   -1, 
+          382,   -1,   -1,   -1,  257,  258,  259,  260,  261,   -1, 
           392,  393,  265,  266,   -1,   -1,   -1,  270,   -1,  272, 
           273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   -1, 
           283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, 
@@ -4521,7 +4565,7 @@
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1, 
            -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, 
            -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
-           -1,   -1,  256,  257,  258,  259,  260,  261,   -1,  392, 
+           -1,   -1,   -1,  257,  258,  259,  260,  261,   -1,  392, 
           393,  265,  266,   -1,   -1,   -1,  270,   -1,  272,  273, 
           274,  275,  276,  277,  278,   -1,   -1,   -1,   -1,  283, 
           284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, 
@@ -4538,7 +4582,7 @@
           265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, 
           275,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284, 
           285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, 
-           -1,   -1,   -1,  298,  299,   -1,  301,  302,  303,  304, 
+           -1,   -1,   -1,  298,  299,  300,  301,  302,  303,  304, 
            -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, 
           315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
@@ -4547,102 +4591,11 @@
            -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, 
           365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
            -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, 
-           -1,  257,  258,  259,   -1,  261,   -1,  392,  393,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,   -1,   -1,  350,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
-           -1,  257,  258,  259,  260,  261,  392,  393,  394,  265, 
+          256,  257,  258,  259,  260,  261,   -1,  392,  393,  265, 
           266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
           276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
           286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,  298,  299,  300,  301,  302,  303,  304,   -1, 
+           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
           306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
           316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
@@ -4650,7 +4603,7 @@
           346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
           366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,  256, 
           257,  258,  259,  260,  261,   -1,  392,  393,  265,  266, 
            -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
           277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
@@ -4669,19 +4622,110 @@
           278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
           288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
            -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
-          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, 
+          308,  309,  310,  311,  312,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
+          348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,  257, 
+          258,  259,   -1,  261,  392,  393,  394,  265,  266,   -1, 
+           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,  312,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
+          348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,  257, 
+          258,  259,   -1,  261,  392,  393,  394,  265,  266,   -1, 
+           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,  312,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
+          348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,  257, 
+          258,  259,   -1,  261,  392,  393,  394,  265,  266,   -1, 
+           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,  312,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
+          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,  257, 
+          258,  259,   -1,  261,  392,  393,  394,  265,  266,   -1, 
+           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,  312,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
+           -1,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,  257, 
+          258,  259,   -1,  261,  392,  393,  394,  265,  266,   -1, 
+           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,  312,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
+          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,  257, 
+          258,  259,   -1,  261,  392,  393,  394,  265,  266,   -1, 
+           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,  312,  313,  314,  315,  316,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
-           -1,   -1,  340,  341,   -1,  343,  344,   -1,  346,   -1, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
            -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,  257, 
+          258,  259,  260,  261,  392,  393,  394,  265,  266,   -1, 
+           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+          298,  299,  300,  301,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
+          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
           368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
            -1,  379,  380,  381,  382,   -1,   -1,   -1,  257,  258, 
-          259,   -1,  261,   -1,  392,  393,  265,  266,   -1,   -1, 
+          259,  260,  261,   -1,  392,  393,  265,  266,   -1,   -1, 
            -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, 
            -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, 
-          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, 
-          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, 
+          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298, 
+          299,   -1,  301,  302,  303,  304,   -1,  306,  307,  308, 
           309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, 
@@ -4698,7 +4742,7 @@
           310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
-          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, 
+          340,  341,   -1,  343,  344,   -1,  346,   -1,   -1,   -1, 
            -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
           370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
@@ -4749,8 +4793,8 @@
           304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, 
           314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  337,   -1,   -1,  340,  341,   -1,  343, 
-          344,   -1,  346,   -1,   -1,   -1,   -1,   -1,  352,   -1, 
+           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, 
+          344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1, 
            -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, 
           374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, 
@@ -4763,7 +4807,7 @@
           315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, 
-           -1,  346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1, 
+           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, 
           365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
            -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, 
@@ -4775,7 +4819,7 @@
           306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
           316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
+           -1,  337,   -1,   -1,  340,  341,   -1,  343,  344,   -1, 
           346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
           366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
@@ -4811,12 +4855,12 @@
            -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, 
           289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, 
           299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, 
-          309,  310,  311,   -1,  313,   -1,   -1,  316,   -1,   -1, 
+          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  333,   -1,   -1,   -1,  337,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, 
            -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
+           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
           369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, 
           379,  380,  381,  382,   -1,   -1,   -1,  257,  258,  259, 
            -1,  261,   -1,  392,  393,  265,  266,   -1,   -1,   -1, 
@@ -4824,12 +4868,12 @@
            -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
            -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, 
            -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, 
-          310,  311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1, 
+          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
-          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
+          340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1, 
+           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
           370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
           380,  381,  382,   -1,   -1,   -1,  257,  258,  259,   -1, 
           261,   -1,  392,  393,  265,  266,   -1,   -1,   -1,  270, 
@@ -4839,8 +4883,8 @@
            -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
           311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
-           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, 
+           -1,   -1,  333,   -1,   -1,   -1,  337,   -1,   -1,  340, 
+           -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
            -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
@@ -4853,7 +4897,7 @@
            -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, 
-           -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1, 
+           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
            -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
@@ -4866,7 +4910,7 @@
           313,   -1,   -1,  316,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, 
-          343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1,   -1, 
+          343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, 
            -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
@@ -4896,40 +4940,55 @@
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
            -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  257, 
-          258,  259,  260,  261,  262,  263,  264,  265,  266,  267, 
-          268,  269,  270,  271,  272,  273,  274,  275,  276,  277, 
-          278,  279,  280,   -1,   -1,  283,  284,  285,  286,  287, 
-          288,  289,  290,  291,  292,  293,  294,  295,  296,  297, 
-          298,  299,  300,  301,  302,  303,  304,   -1,  306,  307, 
-          308,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
-          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, 
-           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, 
+           -1,  257,  258,  259,   -1,  261,   -1,  392,  393,  265, 
+          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
+          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
+           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,   -1,  313,   -1,   -1, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, 
-          358,  359,  360,  361,   -1,   -1,  364,  365,  257,  258, 
-          259,  260,  261,  262,  263,  264,  265,  266,  267,  268, 
-          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, 
-          279,  280,   -1,   -1,  283,  284,  285,  286,  287,  288, 
-          289,  290,  291,  292,  293,  294,  295,  296,  297,  298, 
-          299,  300,  301,  302,  303,  304,   -1,  306,  307,   -1, 
-           -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317,  318, 
-          319,  320,  321,  322,  323,   -1,   -1,  326,  327,   -1, 
-           -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  348, 
-          349,   -1,  351,  352,  353,  354,  355,  356,  357,  358, 
-          359,  360,  361,   -1,   -1,  364,  365,  257,  258,  259, 
+           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
+          346,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  365, 
+          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, 
+          257,  258,  259,   -1,  261,   -1,  392,  393,  265,  266, 
+           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
+          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
+          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
+           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
+          307,  308,  309,  310,  311,   -1,  313,   -1,   -1,  316, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  365,  366, 
+          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
+          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  392,  393,  257,  258,  259, 
           260,  261,  262,  263,  264,  265,  266,  267,  268,  269, 
           270,  271,  272,  273,  274,  275,  276,  277,  278,  279, 
           280,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
           290,  291,  292,  293,  294,  295,  296,  297,  298,  299, 
-          300,  301,  302,  303,  304,   -1,  306,  307,  308,  309, 
-          310,  311,   -1,   -1,  314,  315,   -1,  317,  318,  319, 
+          300,  301,  302,  303,  304,   -1,  306,  307,  308,   -1, 
+          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, 
           320,  321,  322,  323,   -1,   -1,  326,  327,   -1,   -1, 
            -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, 
-           -1,  341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349, 
            -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, 
-          360,  361,   -1,   -1,  364,  257,  258,  259,  260,  261, 
+          360,  361,   -1,   -1,  364,  365,  257,  258,  259,  260, 
+          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, 
+          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, 
+           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, 
+          291,  292,  293,  294,  295,  296,  297,  298,  299,  300, 
+          301,  302,  303,  304,   -1,  306,  307,   -1,   -1,  310, 
+           -1,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, 
+          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, 
+          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, 
+          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, 
+          361,   -1,   -1,  364,  365,  257,  258,  259,  260,  261, 
           262,  263,  264,  265,  266,  267,  268,  269,  270,  271, 
           272,  273,  274,  275,  276,  277,  278,  279,  280,   -1, 
            -1,  283,  284,  285,  286,  287,  288,  289,  290,  291, 
@@ -4937,7 +4996,7 @@
           302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
            -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, 
           322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1,  331, 
-          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, 
            -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1,  351, 
           352,  353,  354,  355,  356,  357,  358,  359,  360,  361, 
            -1,   -1,  364,  257,  258,  259,  260,  261,  262,  263, 
@@ -4945,11 +5004,33 @@
           274,  275,  276,  277,  278,  279,  280,   -1,   -1,  283, 
           284,  285,  286,  287,  288,  289,  290,  291,  292,  293, 
           294,  295,  296,  297,  298,  299,  300,  301,  302,  303, 
-          304,   -1,  306,  307,   -1,   -1,  310,   -1,   -1,   -1, 
+          304,   -1,  306,  307,  308,  309,  310,  311,   -1,   -1, 
           314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, 
            -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,  333, 
           334,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, 
+          354,  355,  356,  357,  358,  359,  360,  361,   -1,   -1, 
+          364,  257,  258,  259,  260,  261,  262,  263,  264,  265, 
+          266,  267,  268,  269,  270,  271,  272,  273,  274,  275, 
+          276,  277,  278,  279,  280,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,  290,  291,  292,  293,  294,  295, 
+          296,  297,  298,  299,  300,  301,  302,  303,  304,   -1, 
+          306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315, 
+           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   -1, 
+          326,  327,   -1,   -1,   -1,  331,  332,  333,  334,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  348,  349,   -1,  351,  352,  353,  354,  355, 
+          356,  357,  358,  359,  360,  361,  306,  307,  364,   -1, 
+          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, 
+          320,  321,  322,  323,   -1,   -1,  326,  327,   -1,   -1, 
+           -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, 
+           -1,  341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349, 
+           -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, 
+          360,  361,  306,  307,  364,   -1,  310,   -1,   -1,   -1, 
+          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, 
+           -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,  333, 
+          334,   -1,   -1,   -1,   -1,   -1,   -1,  341,   -1,   -1, 
+           -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, 
           354,  355,  356,  357,  358,  359,  360,  361,  306,  307, 
           364,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
           318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, 
@@ -4978,19 +5059,8 @@
            -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,  333, 
           334,   -1,   -1,   -1,   -1,   -1,   -1,  341,   -1,   -1, 
            -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, 
-          354,  355,  356,  357,  358,  359,  360,  361,  306,  307, 
-          364,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
-          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, 
-           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, 
-           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1, 
-          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, 
-          358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, 
-           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, 
-          322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1,  331, 
-          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, 
-           -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1,  351, 
-          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, 
-           -1,   -1,  364, 
+          354,  355,  356,  357,  358,  359,  360,  361,   -1,   -1, 
+          364, 
       };
    }
 
diff --git a/core/src/main/java/org/jruby/ext/set/RubySet.java b/core/src/main/java/org/jruby/ext/set/RubySet.java
index 0db99dcc7c7..2e4336884da 100644
--- a/core/src/main/java/org/jruby/ext/set/RubySet.java
+++ b/core/src/main/java/org/jruby/ext/set/RubySet.java
@@ -622,7 +622,7 @@ protected void addImpl(final Ruby runtime, final IRubyObject obj) {
 
     protected void addImplSet(final ThreadContext context, final RubySet set) {
         // NOTE: MRI cheats - does not call Set#add thus we do not care ...
-        hash.merge_bang(context, set.hash, Block.NULL_BLOCK);
+        hash.merge_bang(context, new IRubyObject[]{set.hash}, Block.NULL_BLOCK);
     }
 
     /**
@@ -719,7 +719,7 @@ public IRubyObject reject_bang(final ThreadContext context, Block block) {
     }
 
     // Equivalent to Set#keep_if, but returns nil if no changes were made.
-    @JRubyMethod(name = "select!")
+    @JRubyMethod(name = "select!", alias = "filter!")
     public IRubyObject select_bang(final ThreadContext context, Block block) {
         if ( ! block.isGiven() ) {
             return enumeratorizeWithSize(context, this, "select!", enumSize());
diff --git a/core/src/main/java/org/jruby/ext/tempfile/Tempfile.java b/core/src/main/java/org/jruby/ext/tempfile/Tempfile.java
index abaf6b1f405..8868acc747a 100644
--- a/core/src/main/java/org/jruby/ext/tempfile/Tempfile.java
+++ b/core/src/main/java/org/jruby/ext/tempfile/Tempfile.java
@@ -46,13 +46,7 @@
 import org.jruby.anno.JRubyMethod;
 import org.jruby.exceptions.RaiseException;
 import org.jruby.platform.Platform;
-import org.jruby.runtime.Block;
-import org.jruby.runtime.BlockCallback;
-import org.jruby.runtime.CallBlock19;
-import org.jruby.runtime.ObjectAllocator;
-import org.jruby.runtime.Signature;
-import org.jruby.runtime.ThreadContext;
-import org.jruby.runtime.Visibility;
+import org.jruby.runtime.*;
 import org.jruby.runtime.builtin.IRubyObject;
 
 import java.io.File;
@@ -91,20 +85,15 @@ public Tempfile(Ruby runtime, RubyClass type) {
 
     @JRubyMethod(optional = 4, visibility = Visibility.PRIVATE)
     @Override
-    public IRubyObject initialize(ThreadContext context, IRubyObject[] args, Block block) {
+    public IRubyObject initialize(ThreadContext context, IRubyObject[] args, Block unused) {
         if (args.length == 0) {
-            args = new IRubyObject[] {RubyString.newEmptyString(context.runtime)};
+            args = new IRubyObject[] { RubyString.newEmptyString(context.runtime) };
         }
-        return initializeCommon(context, args);
-    }
-    
-    private IRubyObject initializeCommon(ThreadContext context, IRubyObject[] args) {
-        BlockCallback body = new TempfileCallback();
-        
-        // #create and #make_tmpname come from Dir::Tmpname, included into
-        // tempfile in lib/ruby/stdlib/tempfile.rb. We use create here to
-        // match filename algorithm and allow them to be overridden.
-        callMethod(context, "create", args, CallBlock19.newCallClosure(this, getMetaClass(), Signature.OPTIONAL, body, context));
+
+        IRubyObject Tmpname = context.runtime.getDir().getConstant("Tmpname", false);
+        Block block = CallBlock19.newCallClosure(this, getMetaClass(), Signature.OPTIONAL, new TempfileCallback(), context);
+        context.sites.Tempfile.create.call(context, Tmpname, Tmpname, args, block);
+        // ::Dir::Tmpname.create(basename, tmpdir=nil, **options) { |tmpname, n, opts| ... }
 
         // GH#1905: don't use JDK's deleteOnExit because it grows a set without bounds
         context.runtime.addInternalFinalizer(Tempfile.this);
@@ -151,7 +140,7 @@ public IRubyObject call(ThreadContext context, IRubyObject[] args, Block block)
             // Logic from tempfile.rb starts again here
 
             // let RubyFile do its init logic to open the channel
-            Tempfile.super.initialize(context, new IRubyObject[]{tmpname, runtime.newFixnum(mode), opts}, Block.NULL_BLOCK);
+            Tempfile.super.initialize(context, new IRubyObject[] { tmpname, runtime.newFixnum(mode), opts }, Block.NULL_BLOCK);
             Tempfile.this.tmpname = tmpname;
 
             Tempfile.this.mode = runtime.newFixnum(mode & ~(OpenFlags.O_CREAT.intValue() | OpenFlags.O_EXCL.intValue()));
@@ -280,13 +269,4 @@ public void finalize() throws Throwable {
         }
     }
 
-    @Deprecated
-    public IRubyObject initialize19(IRubyObject[] args, Block block) {
-        return initialize(getRuntime().getCurrentContext(), args, block);
-    }
-
-    @Deprecated
-    public IRubyObject size19(ThreadContext context) {
-        return size(context);
-    }
 }
diff --git a/core/src/main/java/org/jruby/java/proxies/MapJavaProxy.java b/core/src/main/java/org/jruby/java/proxies/MapJavaProxy.java
index 9dad20d5989..9754ea55dd9 100644
--- a/core/src/main/java/org/jruby/java/proxies/MapJavaProxy.java
+++ b/core/src/main/java/org/jruby/java/proxies/MapJavaProxy.java
@@ -729,20 +729,30 @@ public RubyHash invert(final ThreadContext context) {
         return getOrCreateRubyHashMap(context.runtime).invert(context);
     }
 
+    @Deprecated
+    public RubyHash merge_bang(final ThreadContext context, final IRubyObject other, final Block block) {
+        return merge_bang(context, new IRubyObject[]{other}, block);
+    }
+
     /** rb_hash_merge_bang
      *
      */
-    @JRubyMethod(name = { "merge!", "update" }, required = 1)
-    public RubyHash merge_bang(final ThreadContext context, final IRubyObject other, final Block block) {
-        return getOrCreateRubyHashMap(context.runtime).merge_bang(context, other, block);
+    @JRubyMethod(name = { "merge!", "update" }, rest = true)
+    public RubyHash merge_bang(final ThreadContext context, final IRubyObject[] others, final Block block) {
+        return getOrCreateRubyHashMap(context.runtime).merge_bang(context, others, block);
+    }
+
+    @Deprecated
+    public RubyHash merge(ThreadContext context, IRubyObject other, Block block) {
+        return merge(context, new IRubyObject[]{other}, block);
     }
 
     /** rb_hash_merge
      *
      */
-    @JRubyMethod(name = { "merge", "ruby_merge" }) // collision with java.util.Map#merge on Java 8+
-    public RubyHash merge(ThreadContext context, IRubyObject other, Block block) {
-        return getOrCreateRubyHashMap(context.runtime).merge(context, other, block);
+    @JRubyMethod(name = { "merge", "ruby_merge" }, rest = true) // collision with java.util.Map#merge on Java 8+
+    public RubyHash merge(ThreadContext context, IRubyObject[] others, Block block) {
+        return getOrCreateRubyHashMap(context.runtime).merge(context, others, block);
     }
 
     /** rb_hash_initialize_copy
diff --git a/core/src/main/java/org/jruby/parser/RubyParser.java b/core/src/main/java/org/jruby/parser/RubyParser.java
index faec6528936..1346544b34e 100644
--- a/core/src/main/java/org/jruby/parser/RubyParser.java
+++ b/core/src/main/java/org/jruby/parser/RubyParser.java
@@ -308,7 +308,7 @@ public void setWarnings(IRubyWarnings warnings) {
       Order is mandated by <i>jay</i>.
     */
   protected static final short[] yyLhs = {
-//yyLhs 650
+//yyLhs 652
     -1,   152,     0,   139,   140,   140,   140,   140,   141,   141,
     37,    36,    38,    38,    38,    38,    44,   155,    44,   156,
     39,    39,    39,    39,    39,    39,    39,    39,    39,    39,
@@ -334,48 +334,49 @@ public void setWarnings(IRubyWarnings warnings) {
     41,    41,    41,    41,    41,    41,    41,    41,    41,    41,
     41,    41,    41,    41,    41,    41,    41,    41,    41,    41,
     41,    41,    41,    41,    41,    41,    41,    41,    41,    41,
-    41,    41,    41,    41,    41,    41,    41,   136,   136,   136,
-   136,    51,    51,    76,    79,    79,    79,    79,    62,    62,
-    54,    58,    58,   130,   130,   130,   130,   130,    52,    52,
-    52,    52,    52,   160,    56,   107,   106,   106,    82,    82,
-    82,    82,    35,    35,    73,    73,    73,    42,    42,    42,
-    42,    42,    42,    42,    42,    42,    42,    42,   161,    42,
-   162,    42,   163,   164,    42,    42,    42,    42,    42,    42,
+    41,    41,    41,    41,    41,    41,    41,    41,    41,   136,
+   136,   136,   136,    51,    51,    76,    79,    79,    79,    79,
+    62,    62,    54,    58,    58,   130,   130,   130,   130,   130,
+    52,    52,    52,    52,    52,   160,    56,   107,   106,   106,
+    82,    82,    82,    82,    35,    35,    73,    73,    73,    42,
     42,    42,    42,    42,    42,    42,    42,    42,    42,    42,
-    42,    42,    42,   166,   168,    42,   169,   170,    42,    42,
-    42,   171,   172,    42,   173,    42,   175,    42,   176,    42,
-   177,   178,    42,   179,   180,    42,    42,    42,    42,    42,
-    46,   150,   151,   149,   165,   165,   165,   167,   167,    49,
-    49,    47,    47,   129,   129,   131,   131,    87,    87,   132,
-   132,   132,   132,   132,   132,   132,   132,   132,    94,    94,
-    94,    94,    93,    93,    69,    69,    69,    69,    69,    69,
-    69,    69,    69,    69,    69,    69,    69,    69,    69,    71,
-    71,    70,    70,    70,   124,   124,   123,   123,   133,   133,
-   181,   182,   126,    68,    68,   125,   125,   112,    59,    59,
-    59,    59,    22,    22,    22,    22,    22,    22,    22,    22,
-    22,   111,   111,   183,   184,   114,   185,   186,   115,    77,
-    48,    48,   118,   118,    78,    78,    78,    50,    50,    53,
-    53,    28,    28,    28,    15,    16,    16,    16,    17,    18,
-    19,    25,    84,    84,    27,    27,    90,    88,    88,    26,
-    91,    83,    83,    89,    89,    20,    20,    21,    21,    24,
-    24,    23,   187,    23,   188,   189,   190,   191,   192,    23,
-    65,    65,    65,    65,     2,     1,     1,     1,     1,    29,
-    33,    33,    34,    34,    34,    34,    57,    57,    57,    57,
-    57,    57,    57,    57,    57,    57,    57,    57,   119,   119,
+   161,    42,   162,    42,   163,   164,    42,    42,    42,    42,
+    42,    42,    42,    42,    42,    42,    42,    42,    42,    42,
+    42,    42,    42,    42,    42,   166,   168,    42,   169,   170,
+    42,    42,    42,   171,   172,    42,   173,    42,   175,    42,
+   176,    42,   177,   178,    42,   179,   180,    42,    42,    42,
+    42,    42,    46,   150,   151,   149,   165,   165,   165,   167,
+   167,    49,    49,    47,    47,   129,   129,   131,   131,    87,
+    87,   132,   132,   132,   132,   132,   132,   132,   132,   132,
+    94,    94,    94,    94,    93,    93,    69,    69,    69,    69,
+    69,    69,    69,    69,    69,    69,    69,    69,    69,    69,
+    69,    71,    71,    70,    70,    70,   124,   124,   123,   123,
+   133,   133,   181,   182,   126,    68,    68,   125,   125,   112,
+    59,    59,    59,    59,    22,    22,    22,    22,    22,    22,
+    22,    22,    22,   111,   111,   183,   184,   114,   185,   186,
+   115,    77,    48,    48,   118,   118,    78,    78,    78,    50,
+    50,    53,    53,    28,    28,    28,    15,    16,    16,    16,
+    17,    18,    19,    25,    84,    84,    27,    27,    90,    88,
+    88,    26,    91,    83,    83,    89,    89,    20,    20,    21,
+    21,    24,    24,    23,   187,    23,   188,   189,   190,   191,
+   192,    23,    65,    65,    65,    65,     2,     1,     1,     1,
+     1,    29,    33,    33,    34,    34,    34,    34,    57,    57,
+    57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
    119,   119,   119,   119,   119,   119,   119,   119,   119,   119,
-    66,    66,   193,    55,    55,    72,   194,    72,    95,    95,
-    95,    95,    92,    92,    67,    67,    67,    67,    67,    67,
-    67,    67,    67,    67,    67,    67,    67,    67,    67,   135,
-   135,   135,   135,     9,     9,   147,   122,   122,    85,    85,
-   144,    96,    96,    97,    97,    98,    98,    99,    99,   142,
-   142,   143,   143,    63,   128,   105,   105,    86,    86,    10,
-    10,    13,    13,    12,    12,   110,   109,   109,    14,   195,
-    14,   100,   100,   101,   101,   102,   102,   102,   102,     3,
-     3,     3,     4,     4,     4,     4,     5,     5,     5,    11,
-    11,   145,   145,   146,   146,   153,   153,   157,   157,   137,
-   138,   159,   159,   159,   174,   174,   154,   154,    81,   108,
+   119,   119,    66,    66,   193,    55,    55,    72,   194,    72,
+    95,    95,    95,    95,    92,    92,    67,    67,    67,    67,
+    67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
+    67,   135,   135,   135,   135,     9,     9,   147,   122,   122,
+    85,    85,   144,    96,    96,    97,    97,    98,    98,    99,
+    99,   142,   142,   143,   143,    63,   128,   105,   105,    86,
+    86,    10,    10,    13,    13,    12,    12,   110,   109,   109,
+    14,   195,    14,   100,   100,   101,   101,   102,   102,   102,
+   102,     3,     3,     3,     4,     4,     4,     4,     5,     5,
+     5,    11,    11,   145,   145,   146,   146,   153,   153,   157,
+   157,   137,   138,   159,   159,   159,   174,   174,   154,   154,
+    81,   108,
     }, yyLen = {
-//yyLen 650
+//yyLen 652
      2,     0,     2,     2,     1,     1,     3,     2,     1,     4,
      4,     2,     1,     1,     3,     2,     1,     0,     5,     0,
      4,     3,     3,     3,     2,     3,     3,     3,     3,     3,
@@ -398,162 +399,163 @@ public void setWarnings(IRubyWarnings warnings) {
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
      1,     1,     1,     1,     1,     1,     1,     1,     3,     3,
-     6,     5,     5,     5,     5,     4,     3,     3,     3,     3,
-     3,     3,     3,     3,     3,     4,     2,     2,     3,     3,
-     3,     3,     1,     3,     3,     3,     3,     3,     2,     2,
-     3,     3,     3,     3,     3,     6,     1,     1,     1,     1,
-     1,     3,     3,     1,     1,     2,     4,     2,     1,     3,
-     3,     1,     1,     1,     1,     2,     4,     2,     1,     2,
-     2,     4,     1,     0,     2,     2,     2,     1,     1,     2,
-     3,     4,     1,     1,     3,     4,     2,     1,     1,     1,
-     1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
-     0,     3,     0,     0,     5,     3,     3,     2,     3,     3,
-     1,     4,     3,     1,     5,     4,     3,     2,     1,     2,
-     2,     6,     6,     0,     0,     7,     0,     0,     7,     5,
-     4,     0,     0,     9,     0,     6,     0,     7,     0,     5,
-     0,     0,     7,     0,     0,     9,     1,     1,     1,     1,
-     1,     1,     1,     1,     1,     1,     2,     1,     1,     1,
-     5,     1,     2,     1,     1,     1,     3,     1,     3,     1,
-     4,     6,     3,     5,     2,     4,     1,     3,     4,     2,
-     2,     1,     2,     0,     6,     8,     4,     6,     4,     2,
-     6,     2,     4,     6,     2,     4,     2,     4,     1,     1,
-     1,     3,     1,     4,     1,     4,     1,     3,     1,     1,
-     0,     0,     4,     4,     1,     3,     3,     3,     2,     4,
-     5,     5,     2,     4,     4,     3,     3,     3,     2,     1,
-     4,     3,     3,     0,     0,     4,     0,     0,     4,     5,
-     1,     1,     6,     0,     1,     1,     1,     2,     1,     2,
-     1,     1,     1,     1,     1,     1,     1,     2,     3,     3,
-     3,     4,     0,     3,     1,     2,     4,     0,     3,     4,
-     4,     0,     3,     0,     3,     0,     2,     0,     2,     0,
-     2,     1,     0,     3,     0,     0,     0,     0,     0,     8,
-     1,     1,     1,     1,     2,     1,     1,     1,     1,     3,
-     1,     2,     1,     1,     1,     1,     1,     1,     1,     1,
+     6,     5,     5,     5,     5,     4,     3,     3,     3,     2,
+     2,     3,     3,     3,     3,     3,     3,     4,     2,     2,
+     3,     3,     3,     3,     1,     3,     3,     3,     3,     3,
+     2,     2,     3,     3,     3,     3,     3,     6,     1,     1,
+     1,     1,     1,     3,     3,     1,     1,     2,     4,     2,
+     1,     3,     3,     1,     1,     1,     1,     2,     4,     2,
+     1,     2,     2,     4,     1,     0,     2,     2,     2,     1,
+     1,     2,     3,     4,     1,     1,     3,     4,     2,     1,
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
+     0,     4,     0,     3,     0,     0,     5,     3,     3,     2,
+     3,     3,     1,     4,     3,     1,     5,     4,     3,     2,
+     1,     2,     2,     6,     6,     0,     0,     7,     0,     0,
+     7,     5,     4,     0,     0,     9,     0,     6,     0,     7,
+     0,     5,     0,     0,     7,     0,     0,     9,     1,     1,
+     1,     1,     1,     1,     1,     1,     1,     1,     2,     1,
+     1,     1,     5,     1,     2,     1,     1,     1,     3,     1,
+     3,     1,     4,     6,     3,     5,     2,     4,     1,     3,
+     4,     2,     2,     1,     2,     0,     6,     8,     4,     6,
+     4,     2,     6,     2,     4,     6,     2,     4,     2,     4,
+     1,     1,     1,     3,     1,     4,     1,     4,     1,     3,
+     1,     1,     0,     0,     4,     4,     1,     3,     3,     3,
+     2,     4,     5,     5,     2,     4,     4,     3,     3,     3,
+     2,     1,     4,     3,     3,     0,     0,     4,     0,     0,
+     4,     5,     1,     1,     6,     0,     1,     1,     1,     2,
+     1,     2,     1,     1,     1,     1,     1,     1,     1,     2,
+     3,     3,     3,     4,     0,     3,     1,     2,     4,     0,
+     3,     4,     4,     0,     3,     0,     3,     0,     2,     0,
+     2,     0,     2,     1,     0,     3,     0,     0,     0,     0,
+     0,     8,     1,     1,     1,     1,     2,     1,     1,     1,
+     1,     3,     1,     2,     1,     1,     1,     1,     1,     1,
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
-     1,     1,     0,     4,     0,     3,     0,     3,     4,     2,
-     2,     1,     2,     0,     6,     8,     4,     6,     4,     6,
-     2,     4,     6,     2,     4,     2,     4,     1,     0,     1,
-     1,     1,     1,     1,     1,     1,     1,     3,     1,     3,
-     1,     2,     1,     2,     1,     1,     3,     1,     3,     1,
-     1,     2,     1,     3,     3,     1,     3,     1,     3,     1,
-     1,     2,     1,     1,     1,     2,     2,     0,     1,     0,
-     4,     1,     2,     1,     3,     3,     2,     4,     2,     1,
      1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
-     1,     1,     1,     1,     1,     0,     1,     0,     1,     2,
-     2,     0,     1,     1,     1,     1,     1,     2,     0,     0,
+     1,     1,     1,     1,     0,     4,     0,     3,     0,     3,
+     4,     2,     2,     1,     2,     0,     6,     8,     4,     6,
+     4,     6,     2,     4,     6,     2,     4,     2,     4,     1,
+     0,     1,     1,     1,     1,     1,     1,     1,     1,     3,
+     1,     3,     1,     2,     1,     2,     1,     1,     3,     1,
+     3,     1,     1,     2,     1,     3,     3,     1,     3,     1,
+     3,     1,     1,     2,     1,     1,     1,     2,     2,     0,
+     1,     0,     4,     1,     2,     1,     3,     3,     2,     4,
+     2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
+     1,     1,     1,     1,     1,     1,     1,     0,     1,     0,
+     1,     2,     2,     0,     1,     1,     1,     1,     1,     2,
+     0,     0,
     }, yyDefRed = {
 //yyDefRed 1107
-     1,     0,     0,     0,   361,   362,     0,     0,   308,     0,
-     0,     0,   333,   336,     0,     0,     0,   358,   359,   363,
+     1,     0,     0,     0,   363,   364,     0,     0,   310,     0,
+     0,     0,   335,   338,     0,     0,     0,   360,   361,   365,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-   465,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,   485,   487,   489,     0,     0,   420,   540,
-   541,   512,   515,   513,   514,     0,     0,   462,    59,   298,
-     0,   466,   299,   300,     0,   301,   302,   297,   463,    31,
-    47,   461,   510,     0,     0,     0,     0,     0,     0,     0,
-   305,     0,    55,     0,     0,    85,     0,     4,   303,   304,
+   467,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,   487,   489,   491,     0,     0,   422,   542,
+   543,   514,   517,   515,   516,     0,     0,   464,    59,   300,
+     0,   468,   301,   302,     0,   303,   304,   299,   465,    31,
+    47,   463,   512,     0,     0,     0,     0,     0,     0,     0,
+   307,     0,    55,     0,     0,    85,     0,     4,   305,   306,
      0,     0,    71,     0,     2,     0,     5,     0,     0,     0,
      0,     7,   186,   197,   187,   210,   183,   203,   193,   192,
    213,   214,   208,   191,   190,   185,   211,   215,   216,   195,
    184,   198,   202,   204,   196,   189,   205,   212,   207,     0,
      0,     0,     0,   182,   201,   200,   217,   181,   188,   179,
-   180,     0,     0,     0,     0,   136,   518,   517,     0,   520,
+   180,     0,     0,     0,     0,   136,   520,   519,     0,   522,
    171,   172,   168,   149,   150,   151,   158,   155,   157,   152,
-   153,   173,   174,   159,   160,   609,   165,   164,   148,   170,
+   153,   173,   174,   159,   160,   611,   165,   164,   148,   170,
    167,   166,   162,   163,   156,   154,   146,   169,   147,   175,
-   161,   137,   350,     0,   608,   138,   206,   199,   209,   194,
+   161,   137,   352,     0,   610,   138,   206,   199,   209,   194,
    176,   177,   178,   134,   135,   140,   139,   142,     0,   141,
    143,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,   644,   645,     0,     0,     0,   646,     0,
-     0,   356,   357,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,   646,   647,     0,     0,     0,   648,     0,
+     0,   358,   359,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,   360,     0,     0,   373,   374,     0,     0,   320,     0,
-     0,     0,     0,   485,     0,     0,   278,    69,     0,     0,
-     0,   613,   282,    70,     0,    67,     0,     0,   438,    66,
-     0,   638,     0,     0,    19,     0,     0,     0,   236,     0,
+     0,   362,     0,     0,   375,   376,     0,     0,   322,     0,
+     0,     0,     0,   487,     0,     0,   280,    69,     0,     0,
+     0,   615,   284,    70,     0,    67,     0,     0,   440,    66,
+     0,   640,     0,     0,    19,     0,     0,     0,   238,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
-    12,     0,     0,     0,     0,     0,   264,     0,     0,     0,
-   611,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+    12,     0,     0,     0,     0,     0,   266,     0,     0,     0,
+   613,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-   249,    51,   248,   507,   506,   508,   504,   505,     0,     0,
-     0,     0,   472,   481,   330,     0,   477,   483,   467,   446,
-   443,   329,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,   259,   260,     0,     0,     0,     0,
+   251,    51,   250,   509,   508,   510,   506,   507,     0,     0,
+     0,     0,   474,   483,   332,     0,   479,   485,   469,   448,
+   445,   331,     0,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,     0,   261,   262,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-   258,   257,     0,     0,     0,     0,   446,   428,   631,   632,
-     0,     0,     0,     0,   634,   633,     0,     0,    87,     0,
-     0,     0,     0,     0,     0,     3,     0,   432,     0,   327,
-    68,   522,   521,   523,   524,   526,   525,   527,     0,     0,
-     0,     0,   132,     0,     0,   306,   348,     0,   351,   629,
-   630,   353,   144,     0,     0,     0,   365,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,     0,     0,   647,
-     0,     0,     0,   511,     0,     0,     0,     0,   341,   616,
-   289,   285,     0,   618,     0,     0,   279,   287,     0,   280,
-     0,   322,     0,   284,   274,   273,     0,     0,     0,     0,
-   326,    50,    21,    23,    22,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,   315,    11,     0,
-     0,   311,     0,   318,     0,   642,   265,     0,   267,   319,
-   612,     0,    89,     0,     0,     0,     0,     0,   494,   492,
-   509,   491,   488,   468,   486,   469,   470,   490,     0,     0,
-   574,   571,   570,   569,   572,   580,   589,     0,     0,   600,
-   599,   604,   603,   590,   575,     0,     0,     0,   597,   424,
-   421,     0,     0,   567,   587,     0,   551,   578,   573,     0,
-     0,     0,     0,     0,     0,     0,   447,     0,   444,    25,
+   260,   259,     0,     0,     0,     0,   448,   430,   633,   634,
+     0,     0,     0,     0,   636,   635,     0,     0,    87,     0,
+     0,     0,     0,     0,     0,     3,     0,   434,     0,   329,
+    68,   524,   523,   525,   526,   528,   527,   529,     0,     0,
+     0,     0,   132,     0,     0,   308,   350,     0,   353,   631,
+   632,   355,   144,     0,     0,     0,   367,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,     0,     0,   649,
+     0,     0,     0,   513,     0,     0,     0,     0,   343,   618,
+   291,   287,     0,   620,     0,     0,   281,   289,     0,   282,
+     0,   324,     0,   286,   276,   275,     0,     0,     0,     0,
+   328,    50,    21,    23,    22,     0,     0,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,   317,    11,     0,
+     0,   313,     0,   320,     0,   644,   267,     0,   269,   321,
+   614,     0,    89,     0,     0,     0,     0,     0,   496,   494,
+   511,   493,   490,   470,   488,   471,   472,   492,     0,     0,
+   576,   573,   572,   571,   574,   582,   591,     0,     0,   602,
+   601,   606,   605,   592,   577,     0,     0,     0,   599,   426,
+   423,     0,     0,   569,   589,     0,   553,   580,   575,     0,
+     0,     0,     0,     0,     0,     0,   449,     0,   446,    25,
     26,    27,    28,    29,    48,    49,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,   435,     0,   437,     0,     0,   624,
-     0,     0,   625,   436,     0,   622,   623,     0,    46,     0,
+     0,     0,     0,     0,   437,     0,   439,     0,     0,   626,
+     0,     0,   627,   438,     0,   624,   625,     0,    46,     0,
      0,     0,    43,   226,     0,     0,     0,     0,    36,   218,
-    33,   288,     0,     0,     0,     0,    88,    32,    34,   292,
-     0,    37,   219,     6,   443,    61,     0,   129,     0,   131,
-   542,   344,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,   309,     0,   366,     0,     0,     0,     0,     0,
-     0,     0,     0,   340,   368,   334,   367,   337,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,   615,     0,     0,
-     0,   286,   614,   321,   639,     0,     0,   270,   325,    20,
+    33,   290,     0,     0,     0,     0,    88,    32,    34,   294,
+     0,    37,   219,     6,   445,    61,     0,   129,     0,   131,
+   544,   346,     0,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,   311,     0,   368,     0,     0,     0,     0,     0,
+     0,     0,     0,   342,   370,   336,   369,   339,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,   617,     0,     0,
+     0,   288,   616,   323,   641,     0,     0,   272,   327,    20,
      0,     9,    30,     0,   225,     0,     0,    14,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,   495,     0,   471,
-   474,     0,   479,     0,     0,     0,   375,     0,   377,     0,
-     0,   601,   605,     0,   565,     0,     0,   560,     0,   563,
-     0,   549,   591,     0,   550,   581,     0,   476,     0,   480,
-     0,   442,     0,   441,     0,     0,   427,     0,     0,   434,
-     0,     0,     0,     0,     0,   272,     0,   433,   271,     0,
+     0,     0,     0,     0,     0,     0,     0,   497,     0,   473,
+   476,     0,   481,     0,     0,     0,   377,     0,   379,     0,
+     0,   603,   607,     0,   567,     0,     0,   562,     0,   565,
+     0,   551,   593,     0,   552,   583,     0,   478,     0,   482,
+     0,   444,     0,   443,     0,     0,   429,     0,     0,   436,
+     0,     0,     0,     0,     0,   274,     0,   435,   273,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,    86,
      0,     0,     0,     0,     0,     0,     0,     0,   133,     0,
-     0,   610,     0,     0,     0,   354,   145,   455,     0,     0,
-   456,     0,     0,   371,     0,   369,     0,     0,     0,     0,
-     0,     0,     0,   339,     0,     0,     0,     0,     0,     0,
-   617,   291,   281,     0,   324,     0,   314,   266,    90,     0,
-   496,   500,   501,   502,   493,   503,   473,   475,   482,     0,
-     0,     0,     0,   577,     0,     0,     0,   552,   576,     0,
-     0,   422,     0,     0,   579,     0,   598,     0,   588,   606,
-     0,   593,   478,   484,   412,     0,   410,     0,   409,     0,
-     0,    42,   223,    41,   224,    65,     0,   640,    39,   221,
-    40,   222,    63,   431,   430,    45,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,    58,     0,     0,     0,   440,
-   349,     0,     0,     0,     0,     0,     0,   458,   372,     0,
-    10,   460,     0,   331,     0,   332,   290,     0,     0,     0,
-   342,     0,    18,   497,   376,     0,     0,     0,   378,   423,
-     0,     0,   566,     0,     0,     0,   558,     0,   556,     0,
-   561,   564,   548,     0,     0,     0,   408,   585,     0,     0,
-   391,     0,   595,     0,     0,     0,   448,   445,     0,     0,
-    38,     0,     0,     0,   543,   345,   545,   352,   547,     0,
+     0,   612,     0,     0,     0,   356,   145,   457,     0,     0,
+   458,     0,     0,   373,     0,   371,     0,     0,     0,     0,
+     0,     0,     0,   341,     0,     0,     0,     0,     0,     0,
+   619,   293,   283,     0,   326,     0,   316,   268,    90,     0,
+   498,   502,   503,   504,   495,   505,   475,   477,   484,     0,
+     0,     0,     0,   579,     0,     0,     0,   554,   578,     0,
+     0,   424,     0,     0,   581,     0,   600,     0,   590,   608,
+     0,   595,   480,   486,   414,     0,   412,     0,   411,     0,
+     0,    42,   223,    41,   224,    65,     0,   642,    39,   221,
+    40,   222,    63,   433,   432,    45,     0,     0,     0,     0,
+     0,     0,     0,     0,     0,    58,     0,     0,     0,   442,
+   351,     0,     0,     0,     0,     0,     0,   460,   374,     0,
+    10,   462,     0,   333,     0,   334,   292,     0,     0,     0,
+   344,     0,    18,   499,   378,     0,     0,     0,   380,   425,
+     0,     0,   568,     0,     0,     0,   560,     0,   558,     0,
+   563,   566,   550,     0,     0,     0,   410,   587,     0,     0,
+   393,     0,   597,     0,     0,     0,   450,   447,     0,     0,
+    38,     0,     0,     0,   545,   347,   547,   354,   549,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,   457,     0,   459,     0,   450,
-   449,   451,   335,   338,     0,   498,     0,     0,     0,     0,
-   418,     0,   416,   419,   426,   425,     0,     0,     0,     0,
-     0,   406,     0,     0,   401,     0,   389,     0,   404,   411,
-   390,     0,     0,     0,     0,     0,   347,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,     0,     0,   415,
-   559,     0,   554,   557,   562,     0,   392,   413,     0,     0,
-   586,     0,     0,     0,   596,   317,     0,     0,   355,     0,
-     0,     0,     0,     0,   452,   370,   343,     0,     0,   417,
-     0,     0,   407,     0,   398,     0,   396,   388,     0,   402,
-   405,     0,     0,     0,   499,   555,     0,     0,     0,     0,
-   400,     0,   394,   397,   403,     0,   395,
+     0,     0,     0,     0,     0,   459,     0,   461,     0,   452,
+   451,   453,   337,   340,     0,   500,     0,     0,     0,     0,
+   420,     0,   418,   421,   428,   427,     0,     0,     0,     0,
+     0,   408,     0,     0,   403,     0,   391,     0,   406,   413,
+   392,     0,     0,     0,     0,     0,   349,     0,     0,     0,
+     0,     0,     0,     0,     0,     0,     0,     0,     0,   417,
+   561,     0,   556,   559,   564,     0,   394,   415,     0,     0,
+   588,     0,     0,     0,   598,   319,     0,     0,   357,     0,
+     0,     0,     0,     0,   454,   372,   345,     0,     0,   419,
+     0,     0,   409,     0,   400,     0,   398,   390,     0,   404,
+   407,     0,     0,     0,   501,   557,     0,     0,     0,     0,
+   402,     0,   396,   399,   405,     0,   397,
     }, yyDgoto = {
 //yyDgoto 196
      1,   346,    67,    68,   690,   614,   615,   206,   432,   554,
@@ -578,18 +580,18 @@ public void setWarnings(IRubyWarnings warnings) {
    933,  1005,  1045,   794,   804,   437,
     }, yySindex = {
 //yySindex 1107
-     0,     0, 19947, 21246,     0,     0, 19312, 19702,     0, 22407,
- 22407, 18524,     0,     0,  3368, 20336, 20336,     0,     0,     0,
-  -235,  -198,     0,     0,     0,     0,    84, 19572,   157,  -124,
+     0,     0, 20171, 21470,     0,     0, 19536, 19926,     0, 22631,
+ 22631, 18748,     0,     0,  3368, 20560, 20560,     0,     0,     0,
+  -235,  -198,     0,     0,     0,     0,    84, 19796,   157,  -124,
   -111,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0, 22536, 22536,  -228,  -136, 20077,     0, 20726, 21116, 18792,
- 22536, 22665, 19442,     0,     0,     0,   233,   248,     0,     0,
+     0, 22760, 22760,  -228,  -136, 20301,     0, 20950, 21340, 19016,
+ 22760, 22889, 19666,     0,     0,     0,   233,   248,     0,     0,
      0,     0,     0,     0,     0,   284,   300,     0,     0,     0,
   -168,     0,     0,     0,  -178,     0,     0,     0,     0,     0,
      0,     0,     0,  1597,   -72,  4863,     0,    79,   565,   419,
      0,   547,     0,   112,   430,     0,   312,     0,     0,     0,
-  3872,   416,     0,   158,     0,   134,     0,  -212, 20336, 22923,
- 23052,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+  3872,   416,     0,   158,     0,   134,     0,  -212, 20560, 23147,
+ 23276,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
@@ -599,92 +601,92 @@ public void setWarnings(IRubyWarnings warnings) {
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,  -206,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,   443,     0,
-     0, 20207,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,   207, 20207,   -72,   319,   604,   220,
-   515,   276,   319,     0,     0,   134,   260,   558,     0, 22407,
- 22407,     0,     0,  -235,  -198,     0,     0,     0,     0,   283,
+     0, 20431,     0,     0,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,     0,   207, 20431,   -72,   319,   604,   220,
+   515,   276,   319,     0,     0,   134,   260,   558,     0, 22631,
+ 22631,     0,     0,  -235,  -198,     0,     0,     0,     0,   283,
    157,     0,     0,     0,     0,     0,     0,     0,     0,  -228,
-   367,     0,  1126,     0,     0,     0,   350,  -212,     0, 22536,
- 22536, 22536, 22536,     0, 22536,  4863,     0,     0,   348,   595,
-   664,     0,     0,     0, 16905,     0, 20336, 20336,     0,     0,
- 18657,     0, 22407,   361,     0, 21504, 19947, 20207,     0,  1300,
-   393,   405,   390, 21375,     0, 20077,   387,   134,  1597,     0,
-     0,     0,   157,   157, 21375,   388,     0,   195,   268,   348,
+   367,     0,  1126,     0,     0,     0,   350,  -212,     0, 22760,
+ 22760, 22760, 22760,     0, 22760,  4863,     0,     0,   348,   595,
+   664,     0,     0,     0, 17129,     0, 20560, 20560,     0,     0,
+ 18881,     0, 22631,   361,     0, 21728, 20171, 20431,     0,  1300,
+   393,   405,   390, 21599,     0, 20301,   387,   134,  1597,     0,
+     0,     0,   157,   157, 21599,   388,     0,   195,   268,   348,
      0,   384,   268,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,   440, 23181,  1425,     0,   709,
+     0,     0,     0,     0,     0,   440, 23405,  1425,     0,   709,
      0,     0,     0,     0,     0,     0,     0,     0,   848,   977,
   1006,   592,     0,     0,     0,  2872,     0,     0,     0,     0,
-     0,     0, 22407, 22407, 22407, 22407, 21375, 22407, 22407, 22536,
- 22536, 22536, 22536, 22536,     0,     0, 22536, 22536, 22536, 22536,
- 22536, 22536, 22536, 22536, 22536, 22536, 22536, 22536, 22536, 22536,
-     0,     0, 22536, 22536, 22536, 22536,     0,     0,     0,     0,
-  6249, 20336,  6668, 22536,     0,     0, 23911, 22665,     0, 21633,
- 20077, 18925,   711, 21633, 22665,     0, 19054,     0,   425,     0,
+     0,     0, 22631, 22631, 22631, 22631, 21599, 22631, 22631, 22760,
+ 22760, 22760, 22760, 22760,     0,     0, 22760, 22760, 22760, 22760,
+ 22760, 22760, 22760, 22760, 22760, 22760, 22760, 22760, 22760, 22760,
+     0,     0, 22760, 22760, 22760, 22760,     0,     0,     0,     0,
+  6249, 20560,  6668, 22760,     0,     0, 24135, 22889,     0, 21857,
+ 20301, 19149,   711, 21857, 22889,     0, 19278,     0,   425,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
- 22407,   -48,     0,   424,  1430,     0,     0, 22407,     0,     0,
-     0,     0,     0,   527,   530,   390,     0, 20207,   532,  6746,
- 20336,  6802, 22536, 22536, 22536, 20207,   260, 21762,   533,     0,
-    81,    81,   462,     0,     0,  7172, 20336,  7250,     0,     0,
-     0,     0,   947,     0, 22536, 20466,     0,     0, 20856,     0,
+ 22631,   -48,     0,   424,  1430,     0,     0, 22631,     0,     0,
+     0,     0,     0,   527,   530,   390,     0, 20431,   532,  6746,
+ 20560,  6802, 22760, 22760, 22760, 20431,   260, 21986,   533,     0,
+    81,    81,   462,     0,     0,  7172, 20560,  7250,     0,     0,
+     0,     0,   947,     0, 22760, 20690,     0,     0, 21080,     0,
    157,     0,   465,     0,     0,     0,   766,   777,   157,   470,
-     0,     0,     0,     0,     0, 19702, 22407,  4863,   442,   460,
-  6746,  6802, 22536, 22536,  1597,   469,   157,     0,     0, 19183,
-     0,     0,  1597,     0, 20986,     0,     0, 21116,     0,     0,
-     0,     0,     0,   789,  7306, 20336, 11463, 23181,     0,     0,
+     0,     0,     0,     0,     0, 19926, 22631,  4863,   442,   460,
+  6746,  6802, 22760, 22760,  1597,   469,   157,     0,     0, 19407,
+     0,     0,  1597,     0, 21210,     0,     0, 21340,     0,     0,
+     0,     0,     0,   789,  7306, 20560, 13697, 23405,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,  1251,   131,
      0,     0,     0,     0,     0,     0,     0,  1657,  2897,     0,
      0,     0,     0,     0,     0,   528,   534,   798,     0,     0,
      0,   800,   802,     0,     0,   810,     0,     0,     0,   549,
-   813, 22536,   801,  1448,   230,   601,     0,   506,     0,     0,
+   813, 22760,   801,  1448,   230,   601,     0,   506,     0,     0,
      0,     0,     0,     0,     0,     0,   393,  3370,  3370,  3370,
   3370,  3761,  5302,  3370,  3370,  4295,  4295,   906,   906,   393,
-  2885,   393,   393,   844,   844,  2799,  2799, 16644,  3874,   608,
+  2885,   393,   393,   844,   844,  2799,  2799, 13208,  3874,   608,
    543,     0,   554,  -198,     0,     0,     0,   157,   556,     0,
    557,  -198,     0,     0,  3874,     0,     0,  -198,     0,   602,
-  4378,  1523,     0,     0,   112,   841, 22536,  4378,     0,     0,
-     0,     0,   859,   157, 23181,   861,     0,     0,     0,     0,
+  4378,  1523,     0,     0,   112,   841, 22760,  4378,     0,     0,
+     0,     0,   859,   157, 23405,   861,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,   -72,     0,     0,     0,
-     0,     0, 23519, 20336, 23575, 20207,   470,   570, 19832, 19702,
- 21891,   643,     0,    21,     0,   575,   579,   157,   584,   586,
+     0,     0, 23743, 20560, 23799, 20431,   470,   570, 20056, 19926,
+ 22115,   643,     0,    21,     0,   575,   579,   157,   584,   586,
    643,   666,   749,     0,     0,     0,     0,     0,     0,     0,
-  -198,   157,     0,     0,  -198, 22407, 22536,     0, 22536,   348,
-   664,     0,     0,     0,     0, 20466, 20856,     0,     0,     0,
-   470,     0,     0,   393,     0, 19947,     0,     0,   157,   268,
- 23181,     0,     0,   157,     0,     0,   789,     0,  1484,     0,
+  -198,   157,     0,     0,  -198, 22631, 22760,     0, 22760,   348,
+   664,     0,     0,     0,     0, 20690, 21080,     0,     0,     0,
+   470,     0,     0,   393,     0, 20171,     0,     0,   157,   268,
+ 23405,     0,     0,   157,     0,     0,   789,     0,  1484,     0,
      0,   282,     0,   901,  1657,   826,     0,   892,     0,   157,
    157,     0,     0,  3224,     0,  -185,  2897,     0,  2897,     0,
-  -120,     0,     0,   234,     0,     0, 22536,     0,   320,     0,
-   909,     0,   236,     0,   236,   887,     0, 22665, 22665,     0,
-   425,   609,   606, 22665, 22665,     0,   425,     0,     0,    79,
-  -178, 21375, 22536, 23631, 20336, 23687, 22665,     0, 22020,     0,
-   789, 23181,   593,   134, 22407, 20207,     0,     0,     0,   157,
-   693,     0,  2897, 20207,  2897,     0,     0,     0,     0,   620,
-     0, 20207,   704,     0, 22407,     0,   710, 22536, 22536,   635,
- 22536, 22536,   712,     0, 22149, 20207, 20207, 20207,     0,    81,
+  -120,     0,     0,   234,     0,     0, 22760,     0,   320,     0,
+   909,     0,   236,     0,   236,   887,     0, 22889, 22889,     0,
+   425,   609,   606, 22889, 22889,     0,   425,     0,     0,    79,
+  -178, 21599, 22760, 23855, 20560, 23911, 22889,     0, 22244,     0,
+   789, 23405,   593,   134, 22631, 20431,     0,     0,     0,   157,
+   693,     0,  2897, 20431,  2897,     0,     0,     0,     0,   620,
+     0, 20431,   704,     0, 22631,     0,   710, 22760, 22760,   635,
+ 22760, 22760,   712,     0, 22373, 20431, 20431, 20431,     0,    81,
      0,     0,     0,   935,     0,   626,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
-  2197,   952,  1802,     0,   656,   954,   967,     0,     0, 20207,
- 20207,     0,   970,   987,     0,   988,     0,   967,     0,     0,
-   813,     0,     0,     0,     0,  2021,     0, 20207,     0, 20207,
- 22536,     0,     0,     0,     0,     0, 22665,     0,     0,     0,
+  2197,   952,  1802,     0,   656,   954,   967,     0,     0, 20431,
+ 20431,     0,   970,   987,     0,   988,     0,   967,     0,     0,
+   813,     0,     0,     0,     0,  2021,     0, 20431,     0, 20431,
+ 22760,     0,     0,     0,     0,     0, 22889,     0,     0,     0,
      0,     0,     0,     0,     0,     0,  4863,   543,   554,   157,
-   556,   557, 22536,     0,   789,     0, 20207,   134,   773,     0,
-     0,   157,   776,   134,   570, 23310,   319,     0,     0, 20207,
-     0,     0,   319,     0, 22536,     0,     0,   412,   790,   803,
-     0, 20856,     0,     0,     0,  1031,  2197,   871,     0,     0,
+   556,   557, 22760,     0,   789,     0, 20431,   134,   773,     0,
+     0,   157,   776,   134,   570, 23534,   319,     0,     0, 20431,
+     0,     0,   319,     0, 22760,     0,     0,   412,   790,   803,
+     0, 21080,     0,     0,     0,  1031,  2197,   871,     0,     0,
   1260,  3224,     0,   815,   721,  3224,     0,  2897,     0,  3224,
      0,     0,     0,  1041,   157,  1045,     0,     0,  1049,  1050,
-     0,   739,     0,   813, 23439,  1038,     0,     0,  4863,  4863,
-     0,   609,     0,   837,     0,     0,     0,     0,     0, 20207,
+     0,   739,     0,   813, 23663,  1038,     0,     0,  4863,  4863,
+     0,   609,     0,   837,     0,     0,     0,     0,     0, 20431,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,   793,  1576,     0,     0, 20207,     0, 20207,     0,
-     0,     0,     0,     0, 20207,     0,  2197,  1031,  2197,  1060,
+     0,     0,   793,  1576,     0,     0, 20431,     0, 20431,     0,
+     0,     0,     0,     0, 20431,     0,  2197,  1031,  2197,  1060,
      0,   623,     0,     0,     0,     0,   967,  1065,   967,   967,
   3224,     0,   751,  2897,     0,  -120,     0,  2897,     0,     0,
-     0,     0,     0,   805,  1588, 23439,     0,   866,     0, 23743,
- 20336, 23799,   527,    21,   867, 20207,  1031,  2197,  1260,     0,
+     0,     0,     0,   805,  1588, 23663,     0,   866,     0, 23967,
+ 20560, 24023,   527,    21,   867, 20431,  1031,  2197,  1260,     0,
      0,  3224,     0,     0,     0,  1102,     0,     0,  1109,  1111,
-     0,   813,  1120,  1102,     0,     0, 23855,  1588,     0,     0,
+     0,   813,  1120,  1102,     0,     0, 24079,  1588,     0,     0,
      0,   157,     0,     0,     0,     0,     0,   778,  1031,     0,
    967,  3224,     0,  3224,     0,  2897,     0,     0,  3224,     0,
      0,     0,     0,     0,     0,     0,  1102,  1131,  1102,  1102,
@@ -693,15 +695,15 @@ public void setWarnings(IRubyWarnings warnings) {
 //yyRindex 1107
      0,     0,   272,     0,     0,     0,     0,     0,     0,     0,
      0,   914,     0,     0,     0, 11052, 11156,     0,     0,     0,
-  5109,  4647, 12302, 12414, 12603, 12715, 22794,     0, 22278,     0,
-     0, 12792, 12904, 13093,  5440,  3639, 13205, 13282,  5571, 13394,
-     0,     0,     0,     0,     0,   237, 18388,   850,   833,    74,
+  5109,  4647, 12529, 12638, 12830, 12939, 23018,     0, 22502,     0,
+     0, 13016, 13131, 13317,  5440,  3639, 13432, 13509,  5571, 13618,
+     0,     0,     0,     0,     0,   237, 18612,   850,   833,    74,
      0,     0,  1463,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
  10318,     0,     0,     0, 10440,     0,     0,     0,     0,     0,
-     0,     0,     0,    59,   876, 13016, 10624, 16544,     0,  1380,
-     0, 16594,     0, 13583,     0,     0,     0,     0,     0,     0,
-   194,     0,     0,     0,     0,    25,     0, 20596, 11268,     0,
+     0,     0,     0,    59,   876, 16743, 10624, 16793,     0,  1380,
+     0, 16869,     0, 13810,     0,     0,     0,     0,     0,     0,
+   194,     0,     0,     0,     0,    25,     0, 20820, 11268,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,  2315,
@@ -718,10 +720,10 @@ public void setWarnings(IRubyWarnings warnings) {
      0,     0,     0, 10746,  9706,   687,   699,  1097,  1682,     0,
    874,  1808,  1869,  1957,  2382,  2016,  2189,  4803,  2257,     0,
      0,     0,     0,  2311,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0, 16090,     0,     0, 16278, 16404,
- 16404,     0,     0,     0,   858,     0,     0,    64,     0,     0,
+     0,     0,     0,     0,     0, 16305,     0,     0, 16432, 16560,
+ 16560,     0,     0,     0,   858,     0,     0,    64,     0,     0,
    858,     0,     0,     0,     0,     0,    28,    28,     0,     0,
- 11404, 10930, 13695,     0, 17850,   237,     0,  2760,  1324,     0,
+ 11710, 10930, 13919,     0, 18074,   237,     0,  2760,  1324,     0,
      0,   153,   858,   858,     0,     0,     0,   863,   863,     0,
      0,     0,   864,  2212,  2214,  5631,  6078,  6582,  7086,  7590,
   1536,  8699,  8999,  1647,  9311,     0,     0,     0,  9432,   298,
@@ -729,13 +731,13 @@ public void setWarnings(IRubyWarnings warnings) {
      0,     0,     0,     0,     0,  -173,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+ 11404, 11574,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,    60,     0,     0,     0,     0,     0,     0,     0,     0,
-   237,   310,   336,     0,     0,     0,    37,     0, 13508,     0,
-     0,     0,     0,     0,     0,     0,     0,     0, 17036, 17175,
-     0,     0,     0, 17986,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,   550,     0, 10134,     0,   984, 17717,     0,
+   237,   310,   336,     0,     0,     0,    37,     0, 12774,     0,
+     0,     0,     0,     0,     0,     0,     0,     0, 17260, 17399,
+     0,     0,     0, 18210,     0,     0,     0,     0,     0,     0,
+     0,     0,     0,   550,     0, 10134,     0,   984, 17941,     0,
     60,     0,     0,     0,     0,   761,     0,     0,     0,     0,
      0,     0,     0,     0,  2418,     0,    60,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
@@ -749,28 +751,28 @@ public void setWarnings(IRubyWarnings warnings) {
      0,     0,     0,     0,     0,   224,     0,    65,     0,     0,
      0,    65,    65,     0,     0,   118,     0,     0,     0,   259,
    118,   200,   330,     0,     0,     0,     0,     0,     0,     0,
-     0,     0,     0,     0,     0,     0, 11574,  1759, 15057, 15171,
- 15286, 15412, 15690, 15515, 15604, 15788, 15877, 14241, 14343, 11677,
- 14470, 11803, 11950, 13797, 13935, 14587, 14713,  1171, 14816,     0,
-  5944,  4012,  7456, 20596,     0,  4143,     0,   885,  6075,     0,
-  6448,  4978,     0,     0, 14942,     0,     0,  7829,     0,  8712,
- 16176,     0,     0,     0, 14103,     0,     0,   942,     0,     0,
+     0,     0,     0,     0,     0,     0, 11819,  1759, 15243, 15358,
+ 15484, 15587, 15860, 15676, 15762, 15949, 16035, 14386, 14512, 11936,
+ 14659, 12062, 12179, 14026, 14141, 14785, 14888,  1171, 15014,     0,
+  5944,  4012,  7456, 20820,     0,  4143,     0,   885,  6075,     0,
+  6448,  4978,     0,     0, 15129,     0,     0,  7829,     0,  8712,
+ 16393,     0,     0,     0, 14271,     0,     0,   942,     0,     0,
      0,     0,     0,   858,     0,   627,     0,     0,     0,     0,
-  8406,     0,     0,     0,     0,     0,   184,     0, 17580,     0,
+  8406,     0,     0,     0,     0,     0,   184,     0, 17804,     0,
      0,     0,     0,    60,     0,   849,   858,  1439,     0,     0,
    724,   398,     0,   978,     0,  3004,  4516,   885,  3135,  3508,
    978,     0,     0,     0,     0,     0,     0,     0,  5265,   421,
-     0,   885,  5827,  6200,  9828,     0,     0,     0,     0, 16316,
- 16404,     0,     0,     0,     0,   171,   173,     0,     0,     0,
-   858,     0,     0, 12076,     0,    28,   103,     0,   858,   863,
+     0,   885,  5827,  6200,  9828,     0,     0,     0,     0, 16519,
+ 16560,     0,     0,     0,     0,   171,   173,     0,     0,     0,
+   858,     0,     0, 12288,     0,    28,   103,     0,   858,   863,
      0,  2191,  1123,   885,  7992,  8392,   648,     0,     0,     0,
      0,     0,     0,     0,     0,    88,     0,   121,     0,   858,
    -20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     0,     0, 18119,     0, 18255,     0,     0,     0,     0,     0,
- 16442,  2095,     0,     0,     0,     0, 16507,     0,     0, 16633,
- 12522,     0,     0,     0,    60,     0,     0, 16649,     0,     0,
-   675,     0,     0,     0,     0,   849, 17308, 17447,     0,   885,
+     0,     0, 18343,     0, 18479,     0,     0,     0,     0,     0,
+ 16622,  2095,     0,     0,     0,     0, 16706,     0,     0, 16922,
+ 11518,     0,     0,     0,    60,     0,     0, 16972,     0,     0,
+   675,     0,     0,     0,     0,   849, 17532, 17671,     0,   885,
      0,     0,   149,   849,   235,     0,     0,     0,   720,   741,
      0,   993,   978,     0,     0,     0,     0,     0,     0,  7960,
      0,     0,     0,     0,     0,   689,   621,   621,  1254,     0,
@@ -781,14 +783,14 @@ public void setWarnings(IRubyWarnings warnings) {
    118,     0,     0,     0,     0,    -1,     0,   849,     0,    28,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,     0,     0,     0,  1949,  6579,  7587,   885,
-  6952,  7083,     0, 16755,   702,     0,   849,     0,     0,     0,
+  6952,  7083,     0, 16983,   702,     0,   849,     0,     0,     0,
      0,   858,     0,     0,  1439,     0,     0,     0,     0,   621,
      0,     0,     0,     0,     0,     0,     0,   978,     0,     0,
      0,   193,     0,     0,     0,   226,     0,   227,     0,     0,
      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      0,     0,     0,    68,    -1,    68,     0,     0,   161,    68,
-     0,     0,     0,   161,    44,    90,     0,     0, 15916, 16003,
-     0, 12191, 16809,     0,     0,     0,     0,     0,     0,   849,
+     0,     0,     0,   161,    44,    90,     0,     0, 16133, 16219,
+     0, 12424, 17035,     0,     0,     0,     0,     0,     0,   849,
    725,  1023,  1095,  1711,  2070,  2141,  2160,  1354,  2352,  8383,
   1450,  8431,     0,     0,  8703,     0,   849,     0,   984,     0,
      0,     0,     0,     0,   621,     0,     0,   232,     0,   238,
@@ -1111,6 +1113,8 @@ public void setWarnings(IRubyWarnings warnings) {
     "arg : backref tOP_ASGN arg_rhs",
     "arg : arg tDOT2 arg",
     "arg : arg tDOT3 arg",
+    "arg : arg tDOT2",
+    "arg : arg tDOT3",
     "arg : arg tPLUS arg",
     "arg : arg tMINUS arg",
     "arg : arg tSTAR2 arg",
@@ -1729,7 +1733,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     }
   }
 
-static ParserState[] states = new ParserState[650];
+static ParserState[] states = new ParserState[652];
 static {
 states[1] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
@@ -3170,13 +3174,19 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
 };
 states[229] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
+                    value_expr(lexer, ((Node)yyVals[-1+yyTop]));
+
+                    boolean isLiteral = ((Node)yyVals[-1+yyTop]) instanceof FixnumNode;
+                    yyVal = new DotNode(support.getPosition(((Node)yyVals[-1+yyTop])), support.makeNullNil(((Node)yyVals[-1+yyTop])), NilImplicitNode.NIL, false, isLiteral);
     return yyVal;
   }
 };
 states[230] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
+                    value_expr(lexer, ((Node)yyVals[-1+yyTop]));
+
+                    boolean isLiteral = ((Node)yyVals[-1+yyTop]) instanceof FixnumNode;
+                    yyVal = new DotNode(support.getPosition(((Node)yyVals[-1+yyTop])), support.makeNullNil(((Node)yyVals[-1+yyTop])), NilImplicitNode.NIL, true, isLiteral);
     return yyVal;
   }
 };
@@ -3206,31 +3216,31 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
 };
 states[235] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.getOperatorCallNode(support.getOperatorCallNode(((NumericNode)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition()), ((ByteList)yyVals[-3+yyTop]));
+                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
     return yyVal;
   }
 };
 states[236] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.getOperatorCallNode(((Node)yyVals[0+yyTop]), ((ByteList)yyVals[-1+yyTop]));
+                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
     return yyVal;
   }
 };
 states[237] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.getOperatorCallNode(((Node)yyVals[0+yyTop]), ((ByteList)yyVals[-1+yyTop]));
+                    yyVal = support.getOperatorCallNode(support.getOperatorCallNode(((NumericNode)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition()), ((ByteList)yyVals[-3+yyTop]));
     return yyVal;
   }
 };
 states[238] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
+                    yyVal = support.getOperatorCallNode(((Node)yyVals[0+yyTop]), ((ByteList)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
 states[239] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
+                    yyVal = support.getOperatorCallNode(((Node)yyVals[0+yyTop]), ((ByteList)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
@@ -3248,7 +3258,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
 };
 states[242] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = ((Node)yyVals[0+yyTop]);
+                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
     return yyVal;
   }
 };
@@ -3260,7 +3270,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
 };
 states[244] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
+                    yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
@@ -3271,6 +3281,18 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
   }
 };
 states[246] = new ParserState() {
+  @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
+                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
+    return yyVal;
+  }
+};
+states[247] = new ParserState() {
+  @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
+                    yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
+    return yyVal;
+  }
+};
+states[248] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.getMatchNode(((Node)yyVals[-2+yyTop]), ((Node)yyVals[0+yyTop]));
                   /* ENEBO
@@ -3282,240 +3304,240 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[247] = new ParserState() {
+states[249] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
     return yyVal;
   }
 };
-states[248] = new ParserState() {
+states[250] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.getOperatorCallNode(support.getConditionNode(((Node)yyVals[0+yyTop])), ((ByteList)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[249] = new ParserState() {
+states[251] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.getOperatorCallNode(((Node)yyVals[0+yyTop]), ((ByteList)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[250] = new ParserState() {
+states[252] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
     return yyVal;
   }
 };
-states[251] = new ParserState() {
+states[253] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
     return yyVal;
   }
 };
-states[252] = new ParserState() {
+states[254] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newAndNode(((Node)yyVals[-2+yyTop]).getPosition(), ((Node)yyVals[-2+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[253] = new ParserState() {
+states[255] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newOrNode(((Node)yyVals[-2+yyTop]).getPosition(), ((Node)yyVals[-2+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[254] = new ParserState() {
+states[256] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_defined(((ISourcePosition)yyVals[-2+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[255] = new ParserState() {
+states[257] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     value_expr(lexer, ((Node)yyVals[-5+yyTop]));
                     yyVal = new IfNode(support.getPosition(((Node)yyVals[-5+yyTop])), support.getConditionNode(((Node)yyVals[-5+yyTop])), ((Node)yyVals[-3+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[256] = new ParserState() {
+states[258] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[257] = new ParserState() {
+states[259] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[258] = new ParserState() {
+states[260] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[259] = new ParserState() {
+states[261] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[260] = new ParserState() {
+states[262] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[261] = new ParserState() {
+states[263] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
     return yyVal;
   }
 };
-states[262] = new ParserState() {
+states[264] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      support.warning(ID.MISCELLANEOUS, lexer.getPosition(), "comparison '" + ((ByteList)yyVals[-1+yyTop]) + "' after comparison");
                      yyVal = support.getOperatorCallNode(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), lexer.getPosition());
     return yyVal;
   }
 };
-states[263] = new ParserState() {
+states[265] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     value_expr(lexer, ((Node)yyVals[0+yyTop]));
                     yyVal = support.makeNullNil(((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[265] = new ParserState() {
+states[267] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[266] = new ParserState() {
+states[268] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.arg_append(((Node)yyVals[-3+yyTop]), support.remove_duplicate_keys(((HashNode)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[267] = new ParserState() {
+states[269] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newArrayNode(((HashNode)yyVals[-1+yyTop]).getPosition(), support.remove_duplicate_keys(((HashNode)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[268] = new ParserState() {
+states[270] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     value_expr(lexer, ((Node)yyVals[0+yyTop]));
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[269] = new ParserState() {
+states[271] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     value_expr(lexer, ((Node)yyVals[-2+yyTop]));
                     yyVal = support.newRescueModNode(((Node)yyVals[-2+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[270] = new ParserState() {
+states[272] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[-1+yyTop]);
                     if (yyVal != null) ((Node)yyVal).setPosition(((ISourcePosition)yyVals[-2+yyTop]));
     return yyVal;
   }
 };
-states[275] = new ParserState() {
+states[277] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[276] = new ParserState() {
+states[278] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.arg_append(((Node)yyVals[-3+yyTop]), support.remove_duplicate_keys(((HashNode)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[277] = new ParserState() {
+states[279] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newArrayNode(((HashNode)yyVals[-1+yyTop]).getPosition(), support.remove_duplicate_keys(((HashNode)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[278] = new ParserState() {
+states[280] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     value_expr(lexer, ((Node)yyVals[0+yyTop]));
                     yyVal = support.newArrayNode(support.getPosition(((Node)yyVals[0+yyTop])), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[279] = new ParserState() {
+states[281] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.arg_blk_pass(((Node)yyVals[-1+yyTop]), ((BlockPassNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[280] = new ParserState() {
+states[282] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newArrayNode(((HashNode)yyVals[-1+yyTop]).getPosition(), support.remove_duplicate_keys(((HashNode)yyVals[-1+yyTop])));
                     yyVal = support.arg_blk_pass((Node)yyVal, ((BlockPassNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[281] = new ParserState() {
+states[283] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.arg_append(((Node)yyVals[-3+yyTop]), support.remove_duplicate_keys(((HashNode)yyVals[-1+yyTop])));
                     yyVal = support.arg_blk_pass((Node)yyVal, ((BlockPassNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[282] = new ParserState() {
+states[284] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
     return yyVal;
   }
 };
-states[283] = new ParserState() {
+states[285] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = Long.valueOf(lexer.getCmdArgumentState().getStack());
                     lexer.getCmdArgumentState().begin();
     return yyVal;
   }
 };
-states[284] = new ParserState() {
+states[286] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.getCmdArgumentState().reset(((Long)yyVals[-1+yyTop]).longValue());
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[285] = new ParserState() {
+states[287] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new BlockPassNode(support.getPosition(((Node)yyVals[0+yyTop])), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[286] = new ParserState() {
+states[288] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((BlockPassNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[288] = new ParserState() {
+states[290] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     ISourcePosition pos = ((Node)yyVals[0+yyTop]) == null ? lexer.getPosition() : ((Node)yyVals[0+yyTop]).getPosition();
                     yyVal = support.newArrayNode(pos, ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[289] = new ParserState() {
+states[291] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newSplatNode(support.getPosition(((Node)yyVals[0+yyTop])), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[290] = new ParserState() {
+states[292] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node node = support.splat_array(((Node)yyVals[-2+yyTop]));
 
@@ -3527,7 +3549,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[291] = new ParserState() {
+states[293] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node node = null;
 
@@ -3541,19 +3563,19 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[292] = new ParserState() {
+states[294] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[293] = new ParserState() {
+states[295] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[294] = new ParserState() {
+states[296] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node node = support.splat_array(((Node)yyVals[-2+yyTop]));
 
@@ -3565,7 +3587,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[295] = new ParserState() {
+states[297] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node node = null;
 
@@ -3578,77 +3600,77 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[296] = new ParserState() {
+states[298] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = support.newSplatNode(support.getPosition(((Node)yyVals[0+yyTop])), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[303] = new ParserState() {
+states[305] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((ListNode)yyVals[0+yyTop]); /* FIXME: Why complaining without $$ = $1;*/
     return yyVal;
   }
 };
-states[304] = new ParserState() {
+states[306] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((ListNode)yyVals[0+yyTop]); /* FIXME: Why complaining without $$ = $1;*/
     return yyVal;
   }
 };
-states[307] = new ParserState() {
+states[309] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = support.new_fcall(((ByteList)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[308] = new ParserState() {
+states[310] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = lexer.getCmdArgumentState().getStack();
                     lexer.getCmdArgumentState().reset();
     return yyVal;
   }
 };
-states[309] = new ParserState() {
+states[311] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.getCmdArgumentState().reset(((Long)yyVals[-2+yyTop]).longValue());
                     yyVal = new BeginNode(((ISourcePosition)yyVals[-3+yyTop]), support.makeNullNil(((Node)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[310] = new ParserState() {
+states[312] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setState(EXPR_ENDARG);
     return yyVal;
   }
 };
-states[311] = new ParserState() {
+states[313] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null; /*FIXME: Should be implicit nil?*/
     return yyVal;
   }
 };
-states[312] = new ParserState() {
+states[314] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = lexer.getCmdArgumentState().getStack();
                     lexer.getCmdArgumentState().reset();
     return yyVal;
   }
 };
-states[313] = new ParserState() {
+states[315] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setState(EXPR_ENDARG); 
     return yyVal;
   }
 };
-states[314] = new ParserState() {
+states[316] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.getCmdArgumentState().reset(((Long)yyVals[-3+yyTop]).longValue());
                     yyVal = ((Node)yyVals[-2+yyTop]);
     return yyVal;
   }
 };
-states[315] = new ParserState() {
+states[317] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (((Node)yyVals[-1+yyTop]) != null) {
                         /* compstmt position includes both parens around it*/
@@ -3660,19 +3682,19 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[316] = new ParserState() {
+states[318] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_colon2(support.getPosition(((Node)yyVals[-2+yyTop])), ((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[317] = new ParserState() {
+states[319] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_colon3(lexer.tokline, ((ByteList)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[318] = new ParserState() {
+states[320] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     ISourcePosition position = support.getPosition(((Node)yyVals[-1+yyTop]));
                     if (((Node)yyVals[-1+yyTop]) == null) {
@@ -3683,62 +3705,62 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[319] = new ParserState() {
+states[321] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((HashNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[320] = new ParserState() {
+states[322] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ReturnNode(((ISourcePosition)yyVals[0+yyTop]), NilImplicitNode.NIL);
     return yyVal;
   }
 };
-states[321] = new ParserState() {
+states[323] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_yield(((ISourcePosition)yyVals[-3+yyTop]), ((Node)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[322] = new ParserState() {
+states[324] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new YieldNode(((ISourcePosition)yyVals[-2+yyTop]), null);
     return yyVal;
   }
 };
-states[323] = new ParserState() {
+states[325] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new YieldNode(((ISourcePosition)yyVals[0+yyTop]), null);
     return yyVal;
   }
 };
-states[324] = new ParserState() {
+states[326] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_defined(((ISourcePosition)yyVals[-4+yyTop]), ((Node)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[325] = new ParserState() {
+states[327] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.getOperatorCallNode(support.getConditionNode(((Node)yyVals[-1+yyTop])), lexer.BANG);
     return yyVal;
   }
 };
-states[326] = new ParserState() {
+states[328] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.getOperatorCallNode(NilImplicitNode.NIL, lexer.BANG);
     return yyVal;
   }
 };
-states[327] = new ParserState() {
+states[329] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.frobnicate_fcall_args(((FCallNode)yyVals[-1+yyTop]), null, ((IterNode)yyVals[0+yyTop]));
                     yyVal = ((FCallNode)yyVals[-1+yyTop]);                    
     return yyVal;
   }
 };
-states[329] = new ParserState() {
+states[331] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (((Node)yyVals[-1+yyTop]) != null && 
                           ((BlockAcceptingNode)yyVals[-1+yyTop]).getIterNode() instanceof BlockPassNode) {
@@ -3749,94 +3771,94 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[330] = new ParserState() {
+states[332] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((LambdaNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[331] = new ParserState() {
+states[333] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new IfNode(((ISourcePosition)yyVals[-5+yyTop]), support.getConditionNode(((Node)yyVals[-4+yyTop])), ((Node)yyVals[-2+yyTop]), ((Node)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[332] = new ParserState() {
+states[334] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new IfNode(((ISourcePosition)yyVals[-5+yyTop]), support.getConditionNode(((Node)yyVals[-4+yyTop])), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[-2+yyTop]));
     return yyVal;
   }
 };
-states[333] = new ParserState() {
+states[335] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.getConditionState().begin();
     return yyVal;
   }
 };
-states[334] = new ParserState() {
+states[336] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.getConditionState().end();
     return yyVal;
   }
 };
-states[335] = new ParserState() {
+states[337] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node body = support.makeNullNil(((Node)yyVals[-1+yyTop]));
                     yyVal = new WhileNode(((ISourcePosition)yyVals[-6+yyTop]), support.getConditionNode(((Node)yyVals[-4+yyTop])), body);
     return yyVal;
   }
 };
-states[336] = new ParserState() {
+states[338] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                   lexer.getConditionState().begin();
     return yyVal;
   }
 };
-states[337] = new ParserState() {
+states[339] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                   lexer.getConditionState().end();
     return yyVal;
   }
 };
-states[338] = new ParserState() {
+states[340] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node body = support.makeNullNil(((Node)yyVals[-1+yyTop]));
                     yyVal = new UntilNode(((ISourcePosition)yyVals[-6+yyTop]), support.getConditionNode(((Node)yyVals[-4+yyTop])), body);
     return yyVal;
   }
 };
-states[339] = new ParserState() {
+states[341] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newCaseNode(((ISourcePosition)yyVals[-4+yyTop]), ((Node)yyVals[-3+yyTop]), ((Node)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[340] = new ParserState() {
+states[342] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newCaseNode(((ISourcePosition)yyVals[-3+yyTop]), null, ((Node)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[341] = new ParserState() {
+states[343] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.getConditionState().begin();
     return yyVal;
   }
 };
-states[342] = new ParserState() {
+states[344] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.getConditionState().end();
     return yyVal;
   }
 };
-states[343] = new ParserState() {
+states[345] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                       /* ENEBO: Lots of optz in 1.9 parser here*/
                     yyVal = new ForNode(((ISourcePosition)yyVals[-8+yyTop]), ((Node)yyVals[-7+yyTop]), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[-4+yyTop]), support.getCurrentScope(), lexer.getRubySourceline());
     return yyVal;
   }
 };
-states[344] = new ParserState() {
+states[346] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (support.isInDef()) {
                         support.yyerror("class definition in method body");
@@ -3847,7 +3869,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[345] = new ParserState() {
+states[347] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node body = support.makeNullNil(((Node)yyVals[-1+yyTop]));
 
@@ -3857,7 +3879,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[346] = new ParserState() {
+states[348] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new Integer((support.isInClass() ? 2 : 0) & (support.isInDef() ? 1 : 0));
                     support.setInDef(false);
@@ -3866,7 +3888,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[347] = new ParserState() {
+states[349] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node body = support.makeNullNil(((Node)yyVals[-1+yyTop]));
 
@@ -3877,7 +3899,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[348] = new ParserState() {
+states[350] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (support.isInDef()) { 
                         support.yyerror("module definition in method body");
@@ -3888,7 +3910,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[349] = new ParserState() {
+states[351] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node body = support.makeNullNil(((Node)yyVals[-1+yyTop]));
 
@@ -3898,7 +3920,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[350] = new ParserState() {
+states[352] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.pushLocalScope();
                     yyVal = lexer.getCurrentArg();
@@ -3906,14 +3928,14 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[351] = new ParserState() {
+states[353] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.isInDef();
                     support.setInDef(true);
     return yyVal;
   }
 };
-states[352] = new ParserState() {
+states[354] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node body = support.makeNullNil(((Node)yyVals[-1+yyTop]));
 
@@ -3924,7 +3946,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[353] = new ParserState() {
+states[355] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setState(EXPR_FNAME); 
                     yyVal = support.isInDef();
@@ -3932,7 +3954,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[354] = new ParserState() {
+states[356] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.pushLocalScope();
                     lexer.setState(EXPR_ENDFN|EXPR_LABEL); /* force for args */
@@ -3941,7 +3963,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[355] = new ParserState() {
+states[357] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node body = ((Node)yyVals[-1+yyTop]);
                     if (body == null) body = NilImplicitNode.NIL;
@@ -3953,31 +3975,31 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[356] = new ParserState() {
+states[358] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new BreakNode(((ISourcePosition)yyVals[0+yyTop]), NilImplicitNode.NIL);
     return yyVal;
   }
 };
-states[357] = new ParserState() {
+states[359] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new NextNode(((ISourcePosition)yyVals[0+yyTop]), NilImplicitNode.NIL);
     return yyVal;
   }
 };
-states[358] = new ParserState() {
+states[360] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new RedoNode(((ISourcePosition)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[359] = new ParserState() {
+states[361] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new RetryNode(((ISourcePosition)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[360] = new ParserState() {
+states[362] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     value_expr(lexer, ((Node)yyVals[0+yyTop]));
                     yyVal = ((Node)yyVals[0+yyTop]);
@@ -3985,19 +4007,19 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[361] = new ParserState() {
+states[363] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ISourcePosition)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[362] = new ParserState() {
+states[364] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ISourcePosition)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[363] = new ParserState() {
+states[365] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (support.isInClass() && !support.isInDef() && !support.getCurrentScope().isBlockScope()) {
                         lexer.compile_error(PID.TOP_LEVEL_RETURN, "Invalid return in class/module body");
@@ -4006,299 +4028,299 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[370] = new ParserState() {
+states[372] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new IfNode(((ISourcePosition)yyVals[-4+yyTop]), support.getConditionNode(((Node)yyVals[-3+yyTop])), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[372] = new ParserState() {
+states[374] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[374] = new ParserState() {
+states[376] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
     return yyVal;
   }
 };
-states[375] = new ParserState() {
+states[377] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = support.assignableInCurr(((ByteList)yyVals[0+yyTop]), NilImplicitNode.NIL);
     return yyVal;
   }
 };
-states[376] = new ParserState() {
+states[378] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[377] = new ParserState() {
+states[379] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newArrayNode(((Node)yyVals[0+yyTop]).getPosition(), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[378] = new ParserState() {
+states[380] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-2+yyTop]).add(((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[379] = new ParserState() {
+states[381] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(((ListNode)yyVals[0+yyTop]).getPosition(), ((ListNode)yyVals[0+yyTop]), null, null);
     return yyVal;
   }
 };
-states[380] = new ParserState() {
+states[382] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(((ListNode)yyVals[-3+yyTop]).getPosition(), ((ListNode)yyVals[-3+yyTop]), support.assignableInCurr(((ByteList)yyVals[0+yyTop]), null), null);
     return yyVal;
   }
 };
-states[381] = new ParserState() {
+states[383] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(((ListNode)yyVals[-5+yyTop]).getPosition(), ((ListNode)yyVals[-5+yyTop]), support.assignableInCurr(((ByteList)yyVals[-2+yyTop]), null), ((ListNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[382] = new ParserState() {
+states[384] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(((ListNode)yyVals[-2+yyTop]).getPosition(), ((ListNode)yyVals[-2+yyTop]), new StarNode(lexer.getPosition()), null);
     return yyVal;
   }
 };
-states[383] = new ParserState() {
+states[385] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(((ListNode)yyVals[-4+yyTop]).getPosition(), ((ListNode)yyVals[-4+yyTop]), new StarNode(lexer.getPosition()), ((ListNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[384] = new ParserState() {
+states[386] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(lexer.getPosition(), null, support.assignableInCurr(((ByteList)yyVals[0+yyTop]), null), null);
     return yyVal;
   }
 };
-states[385] = new ParserState() {
+states[387] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(lexer.getPosition(), null, support.assignableInCurr(((ByteList)yyVals[-2+yyTop]), null), ((ListNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[386] = new ParserState() {
+states[388] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(lexer.getPosition(), null, new StarNode(lexer.getPosition()), null);
     return yyVal;
   }
 };
-states[387] = new ParserState() {
+states[389] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new MultipleAsgnNode(support.getPosition(((ListNode)yyVals[0+yyTop])), null, null, ((ListNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[388] = new ParserState() {
+states[390] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(((ListNode)yyVals[-3+yyTop]).getPosition(), ((ListNode)yyVals[-3+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((BlockArgNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[389] = new ParserState() {
+states[391] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(((ListNode)yyVals[-1+yyTop]).getPosition(), ((ListNode)yyVals[-1+yyTop]), (ByteList) null, ((BlockArgNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[390] = new ParserState() {
+states[392] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(lexer.getPosition(), null, ((ByteList)yyVals[-1+yyTop]), ((BlockArgNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[391] = new ParserState() {
+states[393] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(((BlockArgNode)yyVals[0+yyTop]).getPosition(), null, (ByteList) null, ((BlockArgNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[392] = new ParserState() {
+states[394] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ArgsTailHolder)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[393] = new ParserState() {
+states[395] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(lexer.getPosition(), null, (ByteList) null, null);
     return yyVal;
   }
 };
-states[394] = new ParserState() {
+states[396] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-5+yyTop]).getPosition(), ((ListNode)yyVals[-5+yyTop]), ((ListNode)yyVals[-3+yyTop]), ((RestArgNode)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[395] = new ParserState() {
+states[397] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-7+yyTop]).getPosition(), ((ListNode)yyVals[-7+yyTop]), ((ListNode)yyVals[-5+yyTop]), ((RestArgNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[396] = new ParserState() {
+states[398] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-3+yyTop]).getPosition(), ((ListNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[397] = new ParserState() {
+states[399] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-5+yyTop]).getPosition(), ((ListNode)yyVals[-5+yyTop]), ((ListNode)yyVals[-3+yyTop]), null, ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[398] = new ParserState() {
+states[400] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-3+yyTop]).getPosition(), ((ListNode)yyVals[-3+yyTop]), null, ((RestArgNode)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[399] = new ParserState() {
+states[401] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     RestArgNode rest = new UnnamedRestArgNode(((ListNode)yyVals[-1+yyTop]).getPosition(), null, support.getCurrentScope().addVariable("*"));
                     yyVal = support.new_args(((ListNode)yyVals[-1+yyTop]).getPosition(), ((ListNode)yyVals[-1+yyTop]), null, rest, null, (ArgsTailHolder) null);
     return yyVal;
   }
 };
-states[400] = new ParserState() {
+states[402] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-5+yyTop]).getPosition(), ((ListNode)yyVals[-5+yyTop]), null, ((RestArgNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[401] = new ParserState() {
+states[403] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-1+yyTop]).getPosition(), ((ListNode)yyVals[-1+yyTop]), null, null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[402] = new ParserState() {
+states[404] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(support.getPosition(((ListNode)yyVals[-3+yyTop])), null, ((ListNode)yyVals[-3+yyTop]), ((RestArgNode)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[403] = new ParserState() {
+states[405] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(support.getPosition(((ListNode)yyVals[-5+yyTop])), null, ((ListNode)yyVals[-5+yyTop]), ((RestArgNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[404] = new ParserState() {
+states[406] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(support.getPosition(((ListNode)yyVals[-1+yyTop])), null, ((ListNode)yyVals[-1+yyTop]), null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[405] = new ParserState() {
+states[407] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-3+yyTop]).getPosition(), null, ((ListNode)yyVals[-3+yyTop]), null, ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[406] = new ParserState() {
+states[408] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((RestArgNode)yyVals[-1+yyTop]).getPosition(), null, null, ((RestArgNode)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[407] = new ParserState() {
+states[409] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((RestArgNode)yyVals[-3+yyTop]).getPosition(), null, null, ((RestArgNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[408] = new ParserState() {
+states[410] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ArgsTailHolder)yyVals[0+yyTop]).getPosition(), null, null, null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[409] = new ParserState() {
+states[411] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
     /* was $$ = null;*/
                     yyVal = support.new_args(lexer.getPosition(), null, null, null, null, (ArgsTailHolder) null);
     return yyVal;
   }
 };
-states[410] = new ParserState() {
+states[412] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.commandStart = true;
                     yyVal = ((ArgsNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[411] = new ParserState() {
+states[413] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setCurrentArg(null);
                     yyVal = support.new_args(lexer.getPosition(), null, null, null, null, (ArgsTailHolder) null);
     return yyVal;
   }
 };
-states[412] = new ParserState() {
+states[414] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(lexer.getPosition(), null, null, null, null, (ArgsTailHolder) null);
     return yyVal;
   }
 };
-states[413] = new ParserState() {
+states[415] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setCurrentArg(null);
                     yyVal = ((ArgsNode)yyVals[-2+yyTop]);
     return yyVal;
   }
 };
-states[414] = new ParserState() {
+states[416] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[415] = new ParserState() {
+states[417] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[416] = new ParserState() {
+states[418] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[417] = new ParserState() {
+states[419] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[418] = new ParserState() {
+states[420] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.new_bv(((ByteList)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[419] = new ParserState() {
+states[421] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[420] = new ParserState() {
+states[422] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.pushBlockScope();
                     yyVal = lexer.getLeftParenBegin();
@@ -4306,14 +4328,14 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[421] = new ParserState() {
+states[423] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = Long.valueOf(lexer.getCmdArgumentState().getStack());
                     lexer.getCmdArgumentState().reset();
     return yyVal;
   }
 };
-states[422] = new ParserState() {
+states[424] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.getCmdArgumentState().reset(((Long)yyVals[-1+yyTop]).longValue());
                     lexer.getCmdArgumentState().restart();
@@ -4323,37 +4345,37 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[423] = new ParserState() {
+states[425] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ArgsNode)yyVals[-2+yyTop]);
     return yyVal;
   }
 };
-states[424] = new ParserState() {
+states[426] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ArgsNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[425] = new ParserState() {
+states[427] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[426] = new ParserState() {
+states[428] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[427] = new ParserState() {
+states[429] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IterNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[428] = new ParserState() {
+states[430] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     /* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/
                     if (((Node)yyVals[-1+yyTop]) instanceof YieldNode) {
@@ -4372,74 +4394,74 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[429] = new ParserState() {
+states[431] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_call(((Node)yyVals[-3+yyTop]), ((ByteList)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), null);
     return yyVal;
   }
 };
-states[430] = new ParserState() {
+states[432] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_call(((Node)yyVals[-4+yyTop]), ((ByteList)yyVals[-3+yyTop]), ((ByteList)yyVals[-2+yyTop]), ((Node)yyVals[-1+yyTop]), ((IterNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[431] = new ParserState() {
+states[433] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_call(((Node)yyVals[-4+yyTop]), ((ByteList)yyVals[-3+yyTop]), ((ByteList)yyVals[-2+yyTop]), ((Node)yyVals[-1+yyTop]), ((IterNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[432] = new ParserState() {
+states[434] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.frobnicate_fcall_args(((FCallNode)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), null);
                     yyVal = ((FCallNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[433] = new ParserState() {
+states[435] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_call(((Node)yyVals[-3+yyTop]), ((ByteList)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), null);
     return yyVal;
   }
 };
-states[434] = new ParserState() {
+states[436] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_call(((Node)yyVals[-3+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), null);
     return yyVal;
   }
 };
-states[435] = new ParserState() {
+states[437] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_call(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[0+yyTop]), null, null);
     return yyVal;
   }
 };
-states[436] = new ParserState() {
+states[438] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_call(((Node)yyVals[-2+yyTop]), ((ByteList)yyVals[-1+yyTop]), LexingCommon.CALL, ((Node)yyVals[0+yyTop]), null);
     return yyVal;
   }
 };
-states[437] = new ParserState() {
+states[439] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_call(((Node)yyVals[-2+yyTop]), LexingCommon.CALL, ((Node)yyVals[0+yyTop]), null);
     return yyVal;
   }
 };
-states[438] = new ParserState() {
+states[440] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_super(((ISourcePosition)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[439] = new ParserState() {
+states[441] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ZSuperNode(((ISourcePosition)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[440] = new ParserState() {
+states[442] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (((Node)yyVals[-3+yyTop]) instanceof SelfNode) {
                         yyVal = support.new_fcall(LexingCommon.LBRACKET_RBRACKET);
@@ -4450,25 +4472,25 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[441] = new ParserState() {
+states[443] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IterNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[442] = new ParserState() {
+states[444] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((IterNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[443] = new ParserState() {
+states[445] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = lexer.getPosition();
     return yyVal;
   }
 };
-states[444] = new ParserState() {
+states[446] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.pushBlockScope();
                     yyVal = Long.valueOf(lexer.getCmdArgumentState().getStack()) >> 1;
@@ -4476,7 +4498,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[445] = new ParserState() {
+states[447] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new IterNode(((ISourcePosition)yyVals[-3+yyTop]), ((ArgsNode)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), support.getCurrentScope(), lexer.getRubySourceline());
                     support.popCurrentScope();
@@ -4484,13 +4506,13 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[446] = new ParserState() {
+states[448] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = lexer.getPosition();
     return yyVal;
   }
 };
-states[447] = new ParserState() {
+states[449] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.pushBlockScope();
                     yyVal = Long.valueOf(lexer.getCmdArgumentState().getStack());
@@ -4498,7 +4520,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[448] = new ParserState() {
+states[450] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new IterNode(((ISourcePosition)yyVals[-3+yyTop]), ((ArgsNode)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]), support.getCurrentScope(), lexer.getRubySourceline());
                     support.popCurrentScope();
@@ -4506,13 +4528,13 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[449] = new ParserState() {
+states[451] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newWhenNode(((ISourcePosition)yyVals[-4+yyTop]), ((Node)yyVals[-3+yyTop]), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[452] = new ParserState() {
+states[454] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node node;
                     if (((Node)yyVals[-3+yyTop]) != null) {
@@ -4528,50 +4550,50 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[453] = new ParserState() {
+states[455] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null; 
     return yyVal;
   }
 };
-states[454] = new ParserState() {
+states[456] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newArrayNode(((Node)yyVals[0+yyTop]).getPosition(), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[455] = new ParserState() {
+states[457] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.splat_array(((Node)yyVals[0+yyTop]));
                     if (yyVal == null) yyVal = ((Node)yyVals[0+yyTop]); /* ArgsCat or ArgsPush*/
     return yyVal;
   }
 };
-states[457] = new ParserState() {
+states[459] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[459] = new ParserState() {
+states[461] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[461] = new ParserState() {
+states[463] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((NumericNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[462] = new ParserState() {
+states[464] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.asSymbol(lexer.getPosition(), ((ByteList)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[464] = new ParserState() {
+states[466] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]) instanceof EvStrNode ? new DStrNode(((Node)yyVals[0+yyTop]).getPosition(), lexer.getEncoding()).add(((Node)yyVals[0+yyTop])) : ((Node)yyVals[0+yyTop]);
                     /*
@@ -4586,25 +4608,25 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[465] = new ParserState() {
+states[467] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((StrNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[466] = new ParserState() {
+states[468] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[467] = new ParserState() {
+states[469] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.literal_concat(((Node)yyVals[-1+yyTop]).getPosition(), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[468] = new ParserState() {
+states[470] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.heredoc_dedent(((Node)yyVals[-1+yyTop]));
 		    lexer.setHeredocIndent(0);
@@ -4612,7 +4634,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[469] = new ParserState() {
+states[471] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     ISourcePosition position = support.getPosition(((Node)yyVals[-1+yyTop]));
 
@@ -4633,97 +4655,97 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[470] = new ParserState() {
+states[472] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.newRegexpNode(support.getPosition(((Node)yyVals[-1+yyTop])), ((Node)yyVals[-1+yyTop]), (RegexpNode) ((RegexpNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[471] = new ParserState() {
+states[473] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[472] = new ParserState() {
+states[474] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ArrayNode(lexer.getPosition());
     return yyVal;
   }
 };
-states[473] = new ParserState() {
+states[475] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((ListNode)yyVals[-2+yyTop]).add(((Node)yyVals[-1+yyTop]) instanceof EvStrNode ? new DStrNode(((ListNode)yyVals[-2+yyTop]).getPosition(), lexer.getEncoding()).add(((Node)yyVals[-1+yyTop])) : ((Node)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[474] = new ParserState() {
+states[476] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[475] = new ParserState() {
+states[477] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = support.literal_concat(support.getPosition(((Node)yyVals[-1+yyTop])), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[476] = new ParserState() {
+states[478] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[477] = new ParserState() {
+states[479] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ArrayNode(lexer.getPosition());
     return yyVal;
   }
 };
-states[478] = new ParserState() {
+states[480] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-2+yyTop]).add(((Node)yyVals[-1+yyTop]) instanceof EvStrNode ? new DSymbolNode(((ListNode)yyVals[-2+yyTop]).getPosition()).add(((Node)yyVals[-1+yyTop])) : support.asSymbol(((ListNode)yyVals[-2+yyTop]).getPosition(), ((Node)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[479] = new ParserState() {
+states[481] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[480] = new ParserState() {
+states[482] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[481] = new ParserState() {
+states[483] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ArrayNode(lexer.getPosition());
     return yyVal;
   }
 };
-states[482] = new ParserState() {
+states[484] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-2+yyTop]).add(((Node)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[483] = new ParserState() {
+states[485] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ArrayNode(lexer.getPosition());
     return yyVal;
   }
 };
-states[484] = new ParserState() {
+states[486] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-2+yyTop]).add(support.asSymbol(((ListNode)yyVals[-2+yyTop]).getPosition(), ((Node)yyVals[-1+yyTop])));
     return yyVal;
   }
 };
-states[485] = new ParserState() {
+states[487] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     ByteList aChar = ByteList.create("");
                     aChar.setEncoding(lexer.getEncoding());
@@ -4731,44 +4753,44 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[486] = new ParserState() {
+states[488] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.literal_concat(((Node)yyVals[-1+yyTop]).getPosition(), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[487] = new ParserState() {
+states[489] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[488] = new ParserState() {
+states[490] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.literal_concat(support.getPosition(((Node)yyVals[-1+yyTop])), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[489] = new ParserState() {
+states[491] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[490] = new ParserState() {
+states[492] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
     /* FIXME: mri is different here.*/
                     yyVal = support.literal_concat(support.getPosition(((Node)yyVals[-1+yyTop])), ((Node)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[491] = new ParserState() {
+states[493] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[492] = new ParserState() {
+states[494] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = lexer.getStrTerm();
                     lexer.setStrTerm(null);
@@ -4776,14 +4798,14 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[493] = new ParserState() {
+states[495] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setStrTerm(((StrTerm)yyVals[-1+yyTop]));
                     yyVal = new EvStrNode(support.getPosition(((Node)yyVals[0+yyTop])), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[494] = new ParserState() {
+states[496] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = lexer.getStrTerm();
                    lexer.setStrTerm(null);
@@ -4791,35 +4813,35 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[495] = new ParserState() {
+states[497] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = lexer.getCmdArgumentState().getStack();
                    lexer.getCmdArgumentState().reset();
     return yyVal;
   }
 };
-states[496] = new ParserState() {
+states[498] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = lexer.getState();
                    lexer.setState(EXPR_BEG);
     return yyVal;
   }
 };
-states[497] = new ParserState() {
+states[499] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = lexer.getBraceNest();
                    lexer.setBraceNest(0);
     return yyVal;
   }
 };
-states[498] = new ParserState() {
+states[500] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = lexer.getHeredocIndent();
                    lexer.setHeredocIndent(0);
     return yyVal;
   }
 };
-states[499] = new ParserState() {
+states[501] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    lexer.getConditionState().restart();
                    lexer.setStrTerm(((StrTerm)yyVals[-6+yyTop]));
@@ -4833,50 +4855,50 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[500] = new ParserState() {
+states[502] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = new GlobalVarNode(lexer.getPosition(), support.symbolID(((ByteList)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[501] = new ParserState() {
+states[503] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = new InstVarNode(lexer.getPosition(), support.symbolID(((ByteList)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[502] = new ParserState() {
+states[504] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = new ClassVarNode(lexer.getPosition(), support.symbolID(((ByteList)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[504] = new ParserState() {
+states[506] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      lexer.setState(EXPR_END|EXPR_ENDARG);
                      yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[506] = new ParserState() {
+states[508] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[507] = new ParserState() {
+states[509] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[508] = new ParserState() {
+states[510] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[509] = new ParserState() {
+states[511] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      lexer.setState(EXPR_END|EXPR_ENDARG);
 
@@ -4897,134 +4919,134 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[510] = new ParserState() {
+states[512] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((NumericNode)yyVals[0+yyTop]);  
     return yyVal;
   }
 };
-states[511] = new ParserState() {
+states[513] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = support.negateNumeric(((NumericNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[512] = new ParserState() {
+states[514] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[513] = new ParserState() {
+states[515] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((FloatNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[514] = new ParserState() {
+states[516] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((RationalNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[515] = new ParserState() {
+states[517] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                      yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[516] = new ParserState() {
+states[518] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.declareIdentifier(((ByteList)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[517] = new ParserState() {
+states[519] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new InstVarNode(lexer.tokline, support.symbolID(((ByteList)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[518] = new ParserState() {
+states[520] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new GlobalVarNode(lexer.tokline, support.symbolID(((ByteList)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[519] = new ParserState() {
+states[521] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ConstNode(lexer.tokline, support.symbolID(((ByteList)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[520] = new ParserState() {
+states[522] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ClassVarNode(lexer.tokline, support.symbolID(((ByteList)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[521] = new ParserState() {
+states[523] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new NilNode(lexer.tokline);
     return yyVal;
   }
 };
-states[522] = new ParserState() {
+states[524] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new SelfNode(lexer.tokline);
     return yyVal;
   }
 };
-states[523] = new ParserState() {
+states[525] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new TrueNode(lexer.tokline);
     return yyVal;
   }
 };
-states[524] = new ParserState() {
+states[526] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new FalseNode(lexer.tokline);
     return yyVal;
   }
 };
-states[525] = new ParserState() {
+states[527] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new FileNode(lexer.tokline, new ByteList(lexer.getFile().getBytes(),
                     support.getConfiguration().getRuntime().getEncodingService().getLocaleEncoding()));
     return yyVal;
   }
 };
-states[526] = new ParserState() {
+states[528] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new FixnumNode(lexer.tokline, lexer.tokline.getLine()+1);
     return yyVal;
   }
 };
-states[527] = new ParserState() {
+states[529] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new EncodingNode(lexer.tokline, lexer.getEncoding());
     return yyVal;
   }
 };
-states[528] = new ParserState() {
+states[530] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.assignableLabelOrIdentifier(((ByteList)yyVals[0+yyTop]), null);
     return yyVal;
   }
 };
-states[529] = new ParserState() {
+states[531] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new InstAsgnNode(lexer.tokline, support.symbolID(((ByteList)yyVals[0+yyTop])), NilImplicitNode.NIL);
     return yyVal;
   }
 };
-states[530] = new ParserState() {
+states[532] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new GlobalAsgnNode(lexer.tokline, support.symbolID(((ByteList)yyVals[0+yyTop])), NilImplicitNode.NIL);
     return yyVal;
   }
 };
-states[531] = new ParserState() {
+states[533] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (support.isInDef()) support.compile_error("dynamic constant assignment");
 
@@ -5032,93 +5054,93 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[532] = new ParserState() {
+states[534] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ClassVarAsgnNode(lexer.tokline, support.symbolID(((ByteList)yyVals[0+yyTop])), NilImplicitNode.NIL);
     return yyVal;
   }
 };
-states[533] = new ParserState() {
+states[535] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.compile_error("Can't assign to nil");
                     yyVal = null;
     return yyVal;
   }
 };
-states[534] = new ParserState() {
+states[536] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.compile_error("Can't change the value of self");
                     yyVal = null;
     return yyVal;
   }
 };
-states[535] = new ParserState() {
+states[537] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.compile_error("Can't assign to true");
                     yyVal = null;
     return yyVal;
   }
 };
-states[536] = new ParserState() {
+states[538] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.compile_error("Can't assign to false");
                     yyVal = null;
     return yyVal;
   }
 };
-states[537] = new ParserState() {
+states[539] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.compile_error("Can't assign to __FILE__");
                     yyVal = null;
     return yyVal;
   }
 };
-states[538] = new ParserState() {
+states[540] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.compile_error("Can't assign to __LINE__");
                     yyVal = null;
     return yyVal;
   }
 };
-states[539] = new ParserState() {
+states[541] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.compile_error("Can't assign to __ENCODING__");
                     yyVal = null;
     return yyVal;
   }
 };
-states[540] = new ParserState() {
+states[542] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[541] = new ParserState() {
+states[543] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[542] = new ParserState() {
+states[544] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    lexer.setState(EXPR_BEG);
                    lexer.commandStart = true;
     return yyVal;
   }
 };
-states[543] = new ParserState() {
+states[545] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[-1+yyTop]);
     return yyVal;
   }
 };
-states[544] = new ParserState() {
+states[546] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = null;
     return yyVal;
   }
 };
-states[545] = new ParserState() {
+states[547] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ArgsNode)yyVals[-1+yyTop]);
                     lexer.setState(EXPR_BEG);
@@ -5126,7 +5148,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[546] = new ParserState() {
+states[548] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    yyVal = lexer.inKwarg;
                    lexer.inKwarg = true;
@@ -5134,7 +5156,7 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[547] = new ParserState() {
+states[549] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                    lexer.inKwarg = ((Boolean)yyVals[-2+yyTop]);
                     yyVal = ((ArgsNode)yyVals[-1+yyTop]);
@@ -5143,183 +5165,183 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[548] = new ParserState() {
+states[550] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(((ListNode)yyVals[-3+yyTop]).getPosition(), ((ListNode)yyVals[-3+yyTop]), ((ByteList)yyVals[-1+yyTop]), ((BlockArgNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[549] = new ParserState() {
+states[551] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(((ListNode)yyVals[-1+yyTop]).getPosition(), ((ListNode)yyVals[-1+yyTop]), (ByteList) null, ((BlockArgNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[550] = new ParserState() {
+states[552] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(lexer.getPosition(), null, ((ByteList)yyVals[-1+yyTop]), ((BlockArgNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[551] = new ParserState() {
+states[553] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(((BlockArgNode)yyVals[0+yyTop]).getPosition(), null, (ByteList) null, ((BlockArgNode)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[552] = new ParserState() {
+states[554] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ArgsTailHolder)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[553] = new ParserState() {
+states[555] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args_tail(lexer.getPosition(), null, (ByteList) null, null);
     return yyVal;
   }
 };
-states[554] = new ParserState() {
+states[556] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-5+yyTop]).getPosition(), ((ListNode)yyVals[-5+yyTop]), ((ListNode)yyVals[-3+yyTop]), ((RestArgNode)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[555] = new ParserState() {
+states[557] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-7+yyTop]).getPosition(), ((ListNode)yyVals[-7+yyTop]), ((ListNode)yyVals[-5+yyTop]), ((RestArgNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[556] = new ParserState() {
+states[558] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-3+yyTop]).getPosition(), ((ListNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[557] = new ParserState() {
+states[559] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-5+yyTop]).getPosition(), ((ListNode)yyVals[-5+yyTop]), ((ListNode)yyVals[-3+yyTop]), null, ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[558] = new ParserState() {
+states[560] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-3+yyTop]).getPosition(), ((ListNode)yyVals[-3+yyTop]), null, ((RestArgNode)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[559] = new ParserState() {
+states[561] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-5+yyTop]).getPosition(), ((ListNode)yyVals[-5+yyTop]), null, ((RestArgNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[560] = new ParserState() {
+states[562] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-1+yyTop]).getPosition(), ((ListNode)yyVals[-1+yyTop]), null, null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[561] = new ParserState() {
+states[563] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-3+yyTop]).getPosition(), null, ((ListNode)yyVals[-3+yyTop]), ((RestArgNode)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[562] = new ParserState() {
+states[564] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-5+yyTop]).getPosition(), null, ((ListNode)yyVals[-5+yyTop]), ((RestArgNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[563] = new ParserState() {
+states[565] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-1+yyTop]).getPosition(), null, ((ListNode)yyVals[-1+yyTop]), null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[564] = new ParserState() {
+states[566] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ListNode)yyVals[-3+yyTop]).getPosition(), null, ((ListNode)yyVals[-3+yyTop]), null, ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[565] = new ParserState() {
+states[567] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((RestArgNode)yyVals[-1+yyTop]).getPosition(), null, null, ((RestArgNode)yyVals[-1+yyTop]), null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[566] = new ParserState() {
+states[568] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((RestArgNode)yyVals[-3+yyTop]).getPosition(), null, null, ((RestArgNode)yyVals[-3+yyTop]), ((ListNode)yyVals[-1+yyTop]), ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[567] = new ParserState() {
+states[569] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(((ArgsTailHolder)yyVals[0+yyTop]).getPosition(), null, null, null, null, ((ArgsTailHolder)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[568] = new ParserState() {
+states[570] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.new_args(lexer.getPosition(), null, null, null, null, (ArgsTailHolder) null);
     return yyVal;
   }
 };
-states[569] = new ParserState() {
+states[571] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.yyerror("formal argument cannot be a constant");
     return yyVal;
   }
 };
-states[570] = new ParserState() {
+states[572] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.yyerror("formal argument cannot be an instance variable");
     return yyVal;
   }
 };
-states[571] = new ParserState() {
+states[573] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.yyerror("formal argument cannot be a global variable");
     return yyVal;
   }
 };
-states[572] = new ParserState() {
+states[574] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.yyerror("formal argument cannot be a class variable");
     return yyVal;
   }
 };
-states[573] = new ParserState() {
+states[575] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]); /* Not really reached*/
     return yyVal;
   }
 };
-states[574] = new ParserState() {
+states[576] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.formal_argument(((ByteList)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[575] = new ParserState() {
+states[577] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setCurrentArg(((ByteList)yyVals[0+yyTop]));
                     yyVal = support.arg_var(((ByteList)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[576] = new ParserState() {
+states[578] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setCurrentArg(null);
                     yyVal = ((ArgumentNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[577] = new ParserState() {
+states[579] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((Node)yyVals[-1+yyTop]);
                     /*            {
@@ -5336,20 +5358,20 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[578] = new ParserState() {
+states[580] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ArrayNode(lexer.getPosition(), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[579] = new ParserState() {
+states[581] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     ((ListNode)yyVals[-2+yyTop]).add(((Node)yyVals[0+yyTop]));
                     yyVal = ((ListNode)yyVals[-2+yyTop]);
     return yyVal;
   }
 };
-states[580] = new ParserState() {
+states[582] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.arg_var(support.formal_argument(((ByteList)yyVals[0+yyTop])));
                     lexer.setCurrentArg(((ByteList)yyVals[0+yyTop]));
@@ -5357,132 +5379,132 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[581] = new ParserState() {
+states[583] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setCurrentArg(null);
                     yyVal = support.keyword_arg(((Node)yyVals[0+yyTop]).getPosition(), support.assignableKeyword(((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[582] = new ParserState() {
+states[584] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setCurrentArg(null);
                     yyVal = support.keyword_arg(lexer.getPosition(), support.assignableKeyword(((ByteList)yyVals[0+yyTop]), new RequiredKeywordArgumentValueNode()));
     return yyVal;
   }
 };
-states[583] = new ParserState() {
+states[585] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.keyword_arg(support.getPosition(((Node)yyVals[0+yyTop])), support.assignableKeyword(((ByteList)yyVals[-1+yyTop]), ((Node)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[584] = new ParserState() {
+states[586] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.keyword_arg(lexer.getPosition(), support.assignableKeyword(((ByteList)yyVals[0+yyTop]), new RequiredKeywordArgumentValueNode()));
     return yyVal;
   }
 };
-states[585] = new ParserState() {
+states[587] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ArrayNode(((Node)yyVals[0+yyTop]).getPosition(), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[586] = new ParserState() {
+states[588] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-2+yyTop]).add(((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[587] = new ParserState() {
+states[589] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new ArrayNode(((Node)yyVals[0+yyTop]).getPosition(), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[588] = new ParserState() {
+states[590] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ListNode)yyVals[-2+yyTop]).add(((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[589] = new ParserState() {
+states[591] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[590] = new ParserState() {
+states[592] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[591] = new ParserState() {
+states[593] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     support.shadowing_lvar(((ByteList)yyVals[0+yyTop]));
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[592] = new ParserState() {
+states[594] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.INTERNAL_ID;
     return yyVal;
   }
 };
-states[593] = new ParserState() {
+states[595] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setCurrentArg(null);
                     yyVal = new OptArgNode(support.getPosition(((Node)yyVals[0+yyTop])), support.assignableLabelOrIdentifier(((ArgumentNode)yyVals[-2+yyTop]).getName().getBytes(), ((Node)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[594] = new ParserState() {
+states[596] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setCurrentArg(null);
                     yyVal = new OptArgNode(support.getPosition(((Node)yyVals[0+yyTop])), support.assignableLabelOrIdentifier(((ArgumentNode)yyVals[-2+yyTop]).getName().getBytes(), ((Node)yyVals[0+yyTop])));
     return yyVal;
   }
 };
-states[595] = new ParserState() {
+states[597] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new BlockNode(((Node)yyVals[0+yyTop]).getPosition()).add(((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[596] = new ParserState() {
+states[598] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.appendToBlock(((ListNode)yyVals[-2+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[597] = new ParserState() {
+states[599] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new BlockNode(((Node)yyVals[0+yyTop]).getPosition()).add(((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[598] = new ParserState() {
+states[600] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.appendToBlock(((ListNode)yyVals[-2+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[599] = new ParserState() {
+states[601] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[600] = new ParserState() {
+states[602] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[601] = new ParserState() {
+states[603] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (!support.is_local_id(((ByteList)yyVals[0+yyTop]))) {
                         support.yyerror("rest argument must be local variable");
@@ -5492,26 +5514,26 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[602] = new ParserState() {
+states[604] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
   /* FIXME: bytelist_love: somewhat silly to remake the empty bytelist over and over but this type should change (using null vs "" is a strange distinction).*/
   yyVal = new UnnamedRestArgNode(lexer.getPosition(), support.symbolID(CommonByteLists.EMPTY), support.getCurrentScope().addVariable("*"));
     return yyVal;
   }
 };
-states[603] = new ParserState() {
+states[605] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[604] = new ParserState() {
+states[606] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[605] = new ParserState() {
+states[607] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (!support.is_local_id(((ByteList)yyVals[0+yyTop]))) {
                         support.yyerror("block argument must be local variable");
@@ -5521,32 +5543,32 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[606] = new ParserState() {
+states[608] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((BlockArgNode)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[607] = new ParserState() {
+states[609] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = null;
     return yyVal;
   }
 };
-states[608] = new ParserState() {
+states[610] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     value_expr(lexer, ((Node)yyVals[0+yyTop]));
                     yyVal = ((Node)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[609] = new ParserState() {
+states[611] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     lexer.setState(EXPR_BEG);
     return yyVal;
   }
 };
-states[610] = new ParserState() {
+states[612] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (((Node)yyVals[-1+yyTop]) == null) {
                         support.yyerror("can't define single method for ().");
@@ -5558,44 +5580,44 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[611] = new ParserState() {
+states[613] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new HashNode(lexer.getPosition());
     return yyVal;
   }
 };
-states[612] = new ParserState() {
+states[614] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.remove_duplicate_keys(((HashNode)yyVals[-1+yyTop]));
     return yyVal;
   }
 };
-states[613] = new ParserState() {
+states[615] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = new HashNode(lexer.getPosition(), ((KeyValuePair)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[614] = new ParserState() {
+states[616] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((HashNode)yyVals[-2+yyTop]).add(((KeyValuePair)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[615] = new ParserState() {
+states[617] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = support.createKeyValue(((Node)yyVals[-2+yyTop]), ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[616] = new ParserState() {
+states[618] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     Node label = support.asSymbol(support.getPosition(((Node)yyVals[0+yyTop])), ((ByteList)yyVals[-1+yyTop]));
                     yyVal = support.createKeyValue(label, ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
-states[617] = new ParserState() {
+states[619] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     if (((Node)yyVals[-2+yyTop]) instanceof StrNode) {
                         DStrNode dnode = new DStrNode(support.getPosition(((Node)yyVals[-2+yyTop])), lexer.getEncoding());
@@ -5610,21 +5632,9 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
-states[618] = new ParserState() {
-  @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = support.createKeyValue(null, ((Node)yyVals[0+yyTop]));
-    return yyVal;
-  }
-};
-states[619] = new ParserState() {
-  @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = ((ByteList)yyVals[0+yyTop]);
-    return yyVal;
-  }
-};
 states[620] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
-                    yyVal = ((ByteList)yyVals[0+yyTop]);
+                    yyVal = support.createKeyValue(null, ((Node)yyVals[0+yyTop]));
     return yyVal;
   }
 };
@@ -5700,38 +5710,50 @@ public Object yyparse (RubyLexer yyLex) throws java.io.IOException {
     return yyVal;
   }
 };
+states[633] = new ParserState() {
+  @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
+                    yyVal = ((ByteList)yyVals[0+yyTop]);
+    return yyVal;
+  }
+};
 states[634] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[639] = new ParserState() {
+states[636] = new ParserState() {
+  @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
+                    yyVal = ((ByteList)yyVals[0+yyTop]);
+    return yyVal;
+  }
+};
+states[641] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[640] = new ParserState() {
+states[642] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                     yyVal = ((ByteList)yyVals[0+yyTop]);
     return yyVal;
   }
 };
-states[648] = new ParserState() {
+states[650] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                       yyVal = null;
     return yyVal;
   }
 };
-states[649] = new ParserState() {
+states[651] = new ParserState() {
   @Override public Object execute(ParserSupport support, RubyLexer lexer, Object yyVal, Object[] yyVals, int yyTop) {
                   yyVal = null;
     return yyVal;
   }
 };
 }
-					// line 2769 "RubyParser.y"
+					// line 2778 "RubyParser.y"
 
     /** The parse method use an lexer stream and parse it to an AST node 
      * structure
@@ -5746,4 +5768,4 @@ public RubyParserResult parse(ParserConfiguration configuration) throws IOExcept
         return support.getResult();
     }
 }
-					// line 10615 "-"
+					// line 10682 "-"
diff --git a/core/src/main/java/org/jruby/parser/RubyParser.y b/core/src/main/java/org/jruby/parser/RubyParser.y
index 181d287efbc..30ccfca62ba 100644
--- a/core/src/main/java/org/jruby/parser/RubyParser.y
+++ b/core/src/main/java/org/jruby/parser/RubyParser.y
@@ -1179,6 +1179,18 @@ arg             : lhs '=' arg_rhs {
                     boolean isLiteral = $1 instanceof FixnumNode && $3 instanceof FixnumNode;
                     $$ = new DotNode(support.getPosition($1), support.makeNullNil($1), support.makeNullNil($3), true, isLiteral);
                 }
+                | arg tDOT2 {
+                    value_expr(lexer, $1);
+
+                    boolean isLiteral = $1 instanceof FixnumNode;
+                    $$ = new DotNode(support.getPosition($1), support.makeNullNil($1), NilImplicitNode.NIL, false, isLiteral);
+                }
+                | arg tDOT3 {
+                    value_expr(lexer, $1);
+
+                    boolean isLiteral = $1 instanceof FixnumNode;
+                    $$ = new DotNode(support.getPosition($1), support.makeNullNil($1), NilImplicitNode.NIL, true, isLiteral);
+                }
                 | arg tPLUS arg {
                     $$ = support.getOperatorCallNode($1, $2, $3, lexer.getPosition());
                 }
diff --git a/core/src/main/java/org/jruby/parser/YyTables.java b/core/src/main/java/org/jruby/parser/YyTables.java
index 36cfa2f113f..016f4470ed7 100644
--- a/core/src/main/java/org/jruby/parser/YyTables.java
+++ b/core/src/main/java/org/jruby/parser/YyTables.java
@@ -55,2249 +55,2219 @@
 
           292,  479,  295,   88,   88,  402,  288,  687,  405,  361, 
           228,  228,  228,  294,  205,  262,  228,  228,  702,  701, 
-          192,  681,  701,  341,  498,  635,  111,  412,  518,  238, 
-          289,  207,  520,  455,  205,  563,  648,  636,  648,  637, 
-          226,  226,  226,  747,  749,  649,   88,  339,  277,  283, 
-          337,  207,  228,  819,  584,  276,  276,  702,  637,    8, 
+          192,  681,  701,  341,  498,  637,  111,  412,  518,  238, 
+          289,  207,  520,  455,  205,  563,  650,  638,  650,  639, 
+          226,  226,  226,  747,  749,  651,   88,  339,  277,  283, 
+          337,  207,  228,  819,  586,  276,  276,  702,  639,    8, 
           261,  938,  191,  191,  280,  280,  347,  828,  359,    8, 
-          648,  415,  279,  279,  648,  553,  754,  866,  393,  311, 
-          232,  235,  416,  191,   83,  648,  313,  648,  584,   83, 
-           83,  234,  417,  617,  291,  261,  318,  322,  386,  839, 
-          576,  337,  359,  584,  317, 1013,  284,  864,  191,  228, 
+          650,  415,  279,  279,  650,  555,  754,  866,  395,  311, 
+          232,  235,  416,  191,   83,  650,  315,  650,  586,   83, 
+           83,  234,  417,  617,  291,  261,  318,  322,  388,  839, 
+          578,  337,  359,  586,  317, 1013,  284,  864,  191,  228, 
           434,  434,  534,   74,  537,  649,  418,  506,    8,  659, 
-          859,  961,  439,  238,  553,   93,   93,  393,  607,  287, 
-          440,  379,  568, 1064,  576,   83,  583,  263,  301,  594, 
-          233,  420,  677,  287,  234,  451,  261,   86,  276,  576, 
-          360,   61,   62,   63,   64,  261,  261,  280,  691,  568, 
+          859,  961,  439,  238,  555,   93,   93,  395,  609,  287, 
+          440,  381,  570, 1064,  578,   83,  585,  263,  301,  596, 
+          233,  420,  677,  287,  234,  451,  261,   86,  276,  578, 
+          360,   61,   62,   63,   64,  261,  261,  280,  691,  570, 
           613,   97,  621,   73,   72,  279,  627,  291,   93,   86, 
-          583,  607,  338,  594,  302,  909,  399,  607,  414,  467, 
-          628,  275,  628,  277,  360,  583,   72,  628,  594,  632, 
-          860, 1064,  545,  233,  346,  414,  651,  546,   53,  572, 
-         1022,  456,  568,  276,   75,  515,  316,  320,  479,  613, 
-          582,  621,   88, 1013,   71,  938,  501,  723,  367,  368, 
-          607,  384,  643,  338,  462,  399,   88,  694,  563,  288, 
-          551,  552,  435,  435,  602,  534,  387,  382,  296,  514, 
-          228,  228,  385,  346,  582,  568,  702,  648,  380,  701, 
-          701,  297,  417,  238,  526,   75,  383,  637,  657,  582, 
-          633,  694,  658,  522,  381,  352,  553,  652,  602,  592, 
-          226,  226,  648,  508,  637,  971,  866,  643,  515,  316, 
-          353,  568,  648,  602,  509,  228,  694,  228,  228,  814, 
-          811,  228,  306,  228,  568,  643,  648,   88,   88,   96, 
-           96,  730,  864,  592,   88,  633,   88,  652,   81,  460, 
-          461,  264,  517,  316,  846,   88,  356,  480,  592,  483, 
-           79,  489,  637,  491,  276,  238,  276,  276,  316,  234, 
-          568,  648,  357,  280,   93,  280,  730,  337,  942,  311, 
-          576,  279,   96,  279,  946,  948,   76,  950,   93,  951, 
-          798,  885,  872,   83,  463,  799,  714,  892,  637,   81, 
-          316,  396,  684,  228,  228,  228,  228,   88,  228,  228, 
-          553,   79,  807,  409,  576,  930,  952,  649,  233,  629, 
-          649,  629,  261,   83,  864,  647,  629,  623,  635,  576, 
-          504,  648,  572,  226,  226,  226,  226,   76,  584,  585, 
-          636,  512,  228,  584,   72,  648,  648,  553,  631,  645, 
-          631,   88,  337,  648,  228,  631,   83,   88,  313,   93, 
-           93,  832,    8,  607,  694,  290,   93,  393,   93,  837, 
-          386,  228,  579,  580,  581,  582,  623,   93,  228,  653, 
-          553,  276,  864,  835,  311,   74,  485, 1093,   88,  576, 
+          585,  609,  338,  596,  302,  909,  401,  609,  416,  467, 
+          628,  277,  628,  279,  360,  585,   72,  628,  596,  632, 
+          860, 1064,  545,  233,  348,  416,  651,  546,   53,  572, 
+         1022,  456,  570,  278,   75,  515,  316,  320,  479,  613, 
+          584,  621,   88, 1013,   71,  938,  501,  723,  367,  368, 
+          609,  386,  643,  338,  462,  401,   88,  694,  563,  288, 
+          551,  552,  435,  435,  604,  534,  389,  384,  296,  514, 
+          228,  228,  387,  348,  584,  570,  702,  650,  382,  701, 
+          701,  297,  417,  238,  526,   75,  385,  639,  657,  584, 
+          633,  694,  658,  522,  383,  352,  553,  652,  604,  594, 
+          226,  226,  650,  508,  639,  971,  866,  645,  515,  318, 
+          353,  570,  650,  604,  509,  228,  694,  228,  228,  814, 
+          811,  228,  306,  228,  570,  645,  650,   88,   88,   96, 
+           96,  730,  864,  594,   88,  633,   88,  652,   81,  460, 
+          461,  264,  517,  318,  846,   88,  356,  480,  594,  483, 
+           79,  489,  639,  491,  276,  238,  276,  276,  318,  234, 
+          570,  650,  357,  280,   93,  280,  730,  337,  942,  311, 
+          578,  279,   96,  279,  946,  948,   76,  950,   93,  951, 
+          798,  885,  872,   83,  463,  799,  714,  892,  639,   81, 
+          318,  396,  684,  228,  228,  228,  228,   88,  228,  228, 
+          555,   79,  807,  409,  578,  930,  952,  651,  233,  629, 
+          651,  629,  261,   83,  864,  647,  629,  623,  637,  578, 
+          504,  650,  572,  226,  226,  226,  226,   76,  584,  585, 
+          638,  512,  228,  586,   72,  650,  650,  555,  631,  645, 
+          631,   88,  337,  650,  228,  631,   83,   88,  315,   93, 
+           93,  832,    8,  609,  694,  290,   93,  395,   93,  837, 
+          388,  228,  579,  580,  581,  582,  623,   93,  228,  653, 
+          555,  276,  864,  835,  311,   74,  485, 1093,   88,  578, 
           407,  228,  623,  583,  522,   97,   88,  261,  622,  338, 
-          607,  656,  622,  379, 1026,  107,  642,  228,  666, 1030, 
+          609,  656,  622,  381, 1026,  107,  642,  228,  666, 1030, 
           642,  702,  306,   75,  408,  701,  899,  413,  686,  686, 
-          291,  709,  563,  825,  563,  583,  623,  442,  594,   93, 
-          276,  568, 1001,  607,  847,   73,  414,  228, 1050, 1052, 
-         1053, 1054,  205,   83,  732,  582,  276,  622,   96,  733, 
-           88,  623,  316,  275,  682,  277,  275,  445,  277,  207, 
-          607,  847,   96,  622,  700,  399,  228,  710,  337,  602, 
-          634,  457,  634,   93,  338,  276,   75,  634,  276,   93, 
-          628,  628,  582,  613,  499,  621,  628,  628,  785,  881, 
-          883,  191,  306,  384,  832,  888,  890,  622,  452,  628, 
-          485,  874, 1095,  719,  592,  276,  602, 1087,  387,  382, 
-           93,  522,  726,  261,  385,  582,  453,   81,   93,  648, 
-          380,  765,  622,  602,  551,  552,  446,   84,  383,   79, 
-          572,  772,  572,   96,   96,  875,  381,  316,  769,  602, 
-           96,  592,   96,  759,  316,  316,  775,  812,  760,  485, 
-          623,   96,  775,  568,  454,   76,  822,  459,  592,  490, 
-          882,  884,  770,  740,  290,  485,  889,  891,  316,  468, 
-          776,  648,   93,  291,  592,  576,  779,   77,   84,  475, 
+          291,  709,  563,  825,  563,  585,  623,  442,  596,   93, 
+          276,  570, 1001,  609,  847,   73,  414,  228, 1050, 1052, 
+         1053, 1054,  205,   83,  732,  584,  276,  622,   96,  733, 
+           88,  623,  318,  277,  682,  279,  277,  445,  279,  207, 
+          609,  847,   96,  622,  700,  401,  228,  710,  337,  604, 
+          634,  457,  634,   93,  338,  278,   75,  634,  278,   93, 
+          628,  628,  584,  613,  499,  621,  628,  628,  785,  881, 
+          883,  191,  306,  386,  832,  888,  890,  622,  452,  628, 
+          485,  874, 1095,  719,  594,  276,  604, 1087,  389,  384, 
+           93,  522,  726,  261,  387,  584,  453,   81,   93,  650, 
+          382,  765,  622,  604,  551,  552,  446,   84,  385,   79, 
+          572,  772,  572,   96,   96,  875,  383,  318,  769,  604, 
+           96,  594,   96,  759,  318,  318,  775,  812,  760,  485, 
+          625,   96,  775,  570,  454,   76,  822,  459,  594,  490, 
+          882,  884,  770,  740,  290,  485,  889,  891,  318,  468, 
+          776,  650,   93,  291,  594,  578,  779,   77,   84,  475, 
            81,  510,  511,  103,  103,  337,  572,  838,  572,  623, 
           338,  772,   79,  528,  529,  806,  401,  306,   82,  628, 
-          531,  648,  648,   96,  228,  772,   88, 1048,  970,  492, 
-          882,  884,  576,  889,  891,  769,  205,  464,   76,  775, 
-          648,  811,  805,  457,  485,   80,  103,  474,   77,  790, 
-          261,  528,  529,  207,  673,  450,  228,  772,  531,  648, 
-          126,  736,  680,  276,  635,  576,  635,   96,  478,   82, 
+          531,  650,  650,   96,  228,  772,   88, 1048,  970,  492, 
+          882,  884,  578,  889,  891,  769,  205,  464,   76,  775, 
+          650,  811,  805,  457,  485,   80,  103,  474,   77,  790, 
+          261,  528,  529,  207,  673,  450,  228,  772,  531,  650, 
+          126,  736,  680,  276,  635,  578,  635,   96,  478,   82, 
           369,  635,   78,   96,  855,  894,   88,  996,  522,  965, 
           622,  337,  502,  998,  191,  191,  226,  642,  503,  507, 
-          454,   97, 1071,  513,  648,  116,   80,  493,  494,  629, 
-          629,  374,  375,   96,   96,  629,  629,  519,  648,  316, 
-          521,  648,   96,  527,  833,  646,  316,  316,  629,  234, 
-          367,  368,  623,   78,  288,  829,  261,  338,  631,  631, 
-          623,  648,  654,  772,  631,  631,  390,  391,  522,  454, 
-          778,  660,   88,  648,  116,  228,  778,  631,   93,  670, 
-          521,  572,  337,  824,  672,  228,   88,  683,  319,  674, 
-          648,  694,   83,  496,   88,  711,   96,  704,  233,  703, 
-          705,  906,   88,  453,  453,  228,  522,  707,  708,  453, 
-          648,  706,  485,  712,  276,  226,   88,   88,   88,  810, 
+          456,   97, 1071,  513,  650,  116,   80,  493,  494,  629, 
+          629,  374,  375,   96,   96,  629,  629,  519,  650,  318, 
+          521,  650,   96,  527,  833,  646,  318,  318,  629,  234, 
+          367,  368,  625,   78,  290,  829,  261,  338,  631,  631, 
+          623,  650,  654,  772,  631,  631,  390,  391,  524,  456, 
+          778,  660,   88,  650,  116,  228,  778,  631,   93,  670, 
+          523,  572,  337,  824,  672,  228,   88,  683,  319,  674, 
+          650,  694,   83,  496,   88,  711,   96,  704,  233,  703, 
+          705,  906,   88,  455,  455,  228,  524,  707,  708,  455, 
+          650,  706,  485,  712,  276,  226,   88,   88,   88,  810, 
           813,  715,  813,  720,  741,  716,  904,  261,   93,  813, 
           742,  622,  743,  338,  746,  226,  748,  686,  862,  855, 
-          865,  845,  103,  778,  750,  752,   84,  753,  629,  648, 
+          865,  845,  103,  778,  750,  752,   84,  753,  629,  650, 
            88,   88,  756,  999,  907,  761,  103,  965,  895,  763, 
           850,  965,  766,  772,   97,  398,   35,  911,   88,  913, 
-           88,  767,  399,  404,  922,  648,   35,  631,  736,  851, 
+           88,  767,  399,  404,  922,  650,   35,  631,  736,  851, 
           634,  634,  768,  398,  773,  774,  634,  634,  935,  781, 
-          399,  400,  786,  788,   93,  791,   77,   88,  648,  634, 
+          399,  400,  786,  788,   93,  791,   77,   88,  650,  634, 
          1041,  802,  811,  817,  338, 1008,  993,  818,   93,   84, 
            88,  878,  820,  878,  821,  974,   93,   82,  855,  965, 
           823,  978,  398,  848,   93,   35,  852,  103,  103,  399, 
-          449,  873,  268,  485,  103,  880,  103,  886,   93,   93, 
-           93,  887,  268,  648,   80,  103,  905,  910,  648,  915, 
-          648,  261,   96,  528,  529, 1034,  116,  919,  917,   77, 
+          449,  873,  270,  485,  103,  880,  103,  886,   93,   93, 
+           93,  887,  270,  650,   80,  103,  905,  910,  650,  915, 
+          650,  261,   96,  528,  529, 1034,  116,  919,  917,   77, 
           531,  921,  789,  924,  923,  536,  925,  953,  115,  931, 
-           88,   78,   93,   93, 1007, 1049,  263,  454,  856,  932, 
-           82,  648,  116,  867,  648,  801,  936,   88,  939,   88, 
-           93,  268,   93,  648,  736,   88,  736,  103,  648,  634, 
-          261,  941,   96,  940,  945,  522,  446,   80,  254,  469, 
-          470,  471,  522,  522,  473,  648,  623,  521,  254,   93, 
-          648,  947,  949,  115,  521,  521, 1067,  975,  994,  834, 
-          977,  228,   93,  648,   78,  772,   88,  836,  103, 1017, 
-          103,  103,  648,  522, 1002,  103, 1046,  103,  918,  454, 
-          522,  522,  254,  648,  635,  635,  869, 1003,  853,  869, 
-          635,  635,  927,  928,  929, 1006,  254,  254,   96, 1014, 
+           88,   78,   93,   93, 1007, 1049,  265,  456,  856,  932, 
+           82,  650,  116,  867,  650,  801,  936,   88,  939,   88, 
+           93,  270,   93,  650,  736,   88,  736,  103,  650,  634, 
+          261,  941,   96,  940,  945,  524,  446,   80,  256,  469, 
+          470,  471,  524,  524,  473,  650,  623,  523,  256,   93, 
+          650,  947,  949,  115,  523,  523, 1067,  975,  994,  834, 
+          977,  228,   93,  650,   78,  772,   88,  836,  103, 1017, 
+          103,  103,  650,  524, 1002,  103, 1046,  103,  918,  456, 
+          524,  524,  256,  650,  635,  635,  869, 1003,  853,  869, 
+          635,  635,  927,  928,  929, 1006,  256,  256,   96, 1014, 
           276,  261,  115,  635, 1015, 1020,  813,  435,  103, 1023, 
           736, 1009,   96, 1025, 1027, 1078,  103,  622, 1029, 1035, 
            96, 1036,   93, 1038, 1047,  117,  943,  944,   96, 1051, 
-         1057,  648,  648,  648,  521, 1065,  275,  275,  648,   93, 
+         1057,  650,  650,  650,  523, 1065,  275,  275,  650,   93, 
           955,   93,   96,   96,   96, 1058,  967,   93,  800, 1062, 
          1068, 1076,  540,  107,  541,  542,  543,  544,   35,   35, 
            35,   98,  298,  300,   35,   35, 1081,   35,  275,  275, 
           103,  340,  342, 1083,  117, 1085,   96,   96,  435,  641, 
           736,  369,  736,  650, 1088, 1094,  997,  107,   93,   35, 
            35,   35,   35,   35,   96, 1101,   96,  540,  934,  541, 
-          542,  543,  544,  635,  107,  635,  523, 1097,  523,  636, 
-         1016,  960, 1018,  384, 1019,  648,  648,  386,  387,  485, 
-          637,  736,  813,   96,  268,  268,  268,  641,  641,  275, 
-          268,  268,  995,  268,  316,  637,   96,  466,   35,  528, 
-          529,  530,  643,  369,  697,  699,  531,  641,  319,  637, 
-          637,  358,  268,  268,  472,  268,  268,  268,  268,   35, 
-          976,  350,  648, 1042,  758, 1043,  436,  717,  648, 1075, 
-          194, 1044,  648,  648,  879,  384,  648,  648,  908,  386, 
+          542,  543,  544,  635,  107,  637,  525, 1097,  525,  638, 
+         1016,  960, 1018,  384, 1019,  650,  650,  386,  387,  485, 
+          639,  736,  813,   96,  270,  270,  270,  641,  643,  275, 
+          270,  270,  995,  270,  318,  639,   96,  466,   35,  528, 
+          529,  530,  645,  369,  697,  699,  531,  643,  319,  639, 
+          639,  358,  270,  270,  472,  270,  270,  270,  270,   35, 
+          976,  350,  650, 1042,  758, 1043,  436,  717,  650, 1075, 
+          194, 1044,  650,  650,  879,  384,  650,  650,  908,  386, 
           387,  388,  389,   35,  699, 1055,  912,  319,   53,  780, 
           979,  863, 1063,  103,  956, 1060,   96,  893,   53,  868, 
-          254,  254,  254,  792,  268,  254,  254,  254, 1059,  254, 
-          115,  609, 1077,   96,  265,   96, 1080, 1074,  103,  254, 
-          254,   96,  849,  403, 1079,  268,  103,  103,  254,  254, 
-            0,  254,  254,  254,  254,  254,    0,    0,  528,  529, 
-          533,  755,    0,  254,  103,  531,    0,   53, 1096,  268, 
+          256,  256,  256,  792,  270,  256,  256,  256, 1059,  256, 
+          115,  609, 1077,   96,  265,   96, 1080, 1074,  103,  256, 
+          256,   96,  849,  403, 1079,  270,  103,  103,  256,  256, 
+            0,  256,  256,  256,  256,  256,    0,    0,  528,  529, 
+          533,  755,    0,  256,  103,  531,    0,   53, 1096,  270, 
          1098,    0,    0, 1099,   16,  696,  960,    0,    0,  960, 
-          966,  869,   96,  960,    0,  440, 1105,    0,  528,  529, 
-          533,  521,    0,    0,  440,  531,  103,  254,  521,  521, 
-          254,    0,  117,  254,  110,  254,    0,    0,    0,  973, 
+          966,  869,   96,  960,    0,  442, 1105,    0,  528,  529, 
+          533,  523,    0,    0,  442,  531,  103,  256,  523,  523, 
+          256,    0,  117,  256,  110,  256,    0,    0,    0,  973, 
           275,  275,  275,  342,    0,  275,  117,  528,  529,  535, 
-          242,  254,    0,   16,  531,  275,  787,  275,  275,    0, 
-          242,  450,    0,  254,    0,    0,  497,  960,    0,  960, 
-            0,  960,  107,    0,  960,  254,    0,    0,  103,  103, 
+          244,  256,    0,   16,  531,  275,  787,  275,  275,    0, 
+          244,  450,    0,  256,    0,    0,  497,  960,    0,  960, 
+            0,  960,  107,    0,  960,  256,    0,    0,  103,  103, 
             0,    0,    0,  110,  103,  103,    0,  960,    0,    0, 
-          808,    0,  103,  523,  242,  523,    0,  103,    0,    0, 
-          523,  523,  523,  523,    0,    0,  103,    0,  242,  242, 
-            0,    0, 1037,  242,  103,  516,  830,    0,  831,  546, 
-            0,  316,  103,    0,  398,  699,  319,    0,  316,  316, 
-          113,  399,  465,    0,  623,  107,  103,  103,  103,    0, 
+          808,    0,  103,  525,  244,  525,    0,  103,    0,    0, 
+          525,  525,  525,  525,    0,    0,  103,    0,  244,  244, 
+            0,    0, 1037,  244,  103,  518,  830,    0,  831,  548, 
+            0,  318,  103,    0,  398,  699,  319,    0,  318,  318, 
+          113,  399,  465,    0,  625,  107,  103,  103,  103,    0, 
           586,  587,  588,  589,  590,    0,    0,  591,  592,  593, 
           594,  595,  596,  597,  598,  599,  600,  601,  602,  603, 
-          604,    0,    0,  605,  606,  607,  608,    0,  546,    0, 
+          604,    0,    0,  605,  606,  607,  608,    0,  548,    0, 
           103,  103,  275,    0,  624,    0,  871,    0,  630,  113, 
           637,    0,    0,    0,  275,  630,  525,    0,  103,    0, 
           103,  663,    0,   15,    0,    0,    0,  103,    0,    0, 
-           53,   53,   53,  122,  440,   53,   53,   53,  903,   53, 
-            0,  519,  103,  440,    0,    0,   91,  103,    0,   53, 
+           53,   53,   53,  122,  442,   53,   53,   53,  903,   53, 
+            0,  521,  103,  442,    0,    0,   91,  103,    0,   53, 
             0,  275,    0,  630,  630,  630,    0,    0,  275,    0, 
           103,   53,   53,   53,   53,   53, 1010,  275,  541,  542, 
           543,  544,   15,  267,  926,  275,  275,    0,    0,  275, 
-           91,    0,  440,  126,    0,    0,   16,   16,   16,  440, 
-          440,  440,   16,   16,    0,   16,    0,   91,  440,  440, 
+           91,    0,  442,  126,    0,    0,   16,   16,   16,  442, 
+          442,  442,   16,   16,    0,   16,    0,   91,  442,  442, 
           267,  267,    0,  713,  630,  103,  267,  267,  267,  267, 
-           53,    0,    0,    0,  784,  275,  440,    0,  275,    0, 
-          103,  110,  528,  529,  729,  440,  275,  516,  398,  531, 
-            0,   53,  126,    0,  619,  399,  500,  103,    0,  103, 
-            0,    0,  242,  242,  242,  103,    0,  242,  242,  242, 
-            0,  242,  972,    0,    0,   53,    0,   94,    0,  267, 
-            0,  242,  242,    0,  316,    0,   16, 1040,  267,  267, 
-          242,  242,  275,  242,  242,  242,  242,  242,    0,  663, 
-            0,  319,  516,    0,    0,  242,  103,   16,    0,  516, 
-          516,   94,    0,    0,    0,  619,    0,  242,  242,  242, 
-          242,  242,    0,    0,  242,  242,  242,  242,   94,  242, 
-          242,   16,    0,  242,  242,    0,  619,  113,    0,  242, 
-            0,  118,  242,    0,    0,  242,   99,  242,    0,  242, 
-          620,  242,    0,  242,  242,  242,  242,  275,  519,  242, 
-            0,  242,    0,  242,    0,  546,    0,  546,  546,  546, 
-          546,  546,    0,  398,    0,  242,  546,    0,  398,  241, 
-          399,  524,    0,    0,  275,  399,  662,  242,    0,  241, 
-          118,  275,    0,  524,    0,   15,   15,   15,  519,  546, 
-            0,   15,   15,    0,   15,  519,  519,  546,  546,  546, 
-          546,  620,  841,  842,    0,  843,    0,  275,    0,  275, 
-            0,  122,  524,  241,    0,    0,  275,  275,    0,    0, 
-          268,    0,  620,    0,    0,   91,  619,  241,  241,  528, 
-          529,  757,  241,    0,    0,  546,  531,    0,  267,  267, 
-          267,  267,    0,  267,  487,  487,  487,  268,  268,    0, 
-          126,  487,    0,  268,  268,  268,  268,    0,    0,    0, 
+           53,    0,    0,    0,  784,  275,  442,    0,  275,    0, 
+          103,  110,  528,  529,  729,  442,  275,  518,  398,  531, 
+            0,   53,  126,    0,  621,  399,  500,  103,    0,  103, 
+            0,    0,  244,  244,  244,  103,    0,  244,  244,  244, 
+            0,  244,  972,    0,    0,   53,    0,   94,    0,  267, 
+            0,  244,  244,    0,  318,    0,   16, 1040,  267,  267, 
+          244,  244,  275,  244,  244,  244,  244,  244,    0,  663, 
+            0,  319,  518,    0,    0,  244,  103,   16,    0,  518, 
+          518,   94,    0,    0,    0,  621,    0,  244,  244,  244, 
+          244,  244,    0,    0,  244,  244,  244,  244,   94,  244, 
+          244,   16,    0,  244,  244,    0,  621,  113,    0,  244, 
+            0,  118,  244,    0,    0,  244,   99,  244,    0,  244, 
+          622,  244,    0,  244,  244,  244,  244,  275,  521,  244, 
+            0,  244,    0,  244,    0,  548,    0,  548,  548,  548, 
+          548,  548,    0,  398,    0,  244,  548,    0,  398,  243, 
+          399,  524,    0,    0,  275,  399,  662,  244,    0,  243, 
+          118,  275,    0,  526,    0,   15,   15,   15,  521,  548, 
+            0,   15,   15,    0,   15,  521,  521,  548,  548,  548, 
+          548,  622,  841,  842,    0,  843,    0,  275,    0,  275, 
+            0,  122,  526,  243,    0,    0,  275,  275,    0,    0, 
+          268,    0,  622,    0,    0,   91,  621,  243,  243,  528, 
+          529,  757,  243,    0,    0,  548,  531,    0,  267,  267, 
+          267,  267,    0,  267,  489,  489,  489,  268,  268,    0, 
+          126,  489,    0,  268,  268,  268,  268,    0,    0,    0, 
           122,  398,  101,    0,  267,   15,    0,  275,  399,  783, 
-           59,   60,    0,    0,  516,    0,    0,    0,  630,  630, 
-            0,  516,  516,    0,  630,  630,   15,  619,   91,    0, 
-            0,    0,  440,  896,    0,  275,    0,  630,    0,  275, 
-          362,  363,  364,  365,  366,  267,  268,    0,  619,  526, 
-           15,  316,    0,    0,  398,  268,  268,    0,  316,  316, 
-            0,  399, 1039,  100,  623,    0,  398,    0,  630,  630, 
-            0,  630,  630,  399, 1066,  275,   94,  620,  267,  267, 
+           59,   60,    0,    0,  518,    0,    0,    0,  630,  630, 
+            0,  518,  518,    0,  630,  630,   15,  621,   91,    0, 
+            0,    0,  442,  896,    0,  275,    0,  630,    0,  275, 
+          362,  363,  364,  365,  366,  267,  268,    0,  621,  528, 
+           15,  318,    0,    0,  398,  268,  268,    0,  318,  318, 
+            0,  399, 1039,  100,  625,    0,  398,    0,  630,  630, 
+            0,  630,  630,  399, 1066,  275,   94,  622,  267,  267, 
           267,  267,  267,    0,    0,  267,  267,  267,  267,  267, 
-          267,  267,  267,  267,  267,  267,  267,  267,  267,  269, 
-            0,  267,  267,  267,  267,    0,    0,    0,    0,  269, 
-          525,  118,  267,  540,    0,  541,  542,  543,  544,    0, 
-          267,    0,    0,    0,    0,  519,    0,    0,  118,    0, 
-            0,  968,  519,  519,    0,    0,    0,  969,  620,   94, 
-            0,    0,    0,  269,    0,    0,    0,  734,    0,    0, 
-            0,  102,    0,  275,    0,  735,    0,  269,  269,  620, 
-          524,  267,  267,  267,    0,    0,  267,  524,  524,    0, 
-            0,  241,  241,  241,    0,  969,  241,  241,  241,    0, 
-          241,  291,  275,  267,  267,    0,    0,  267,    0,  524, 
-          241,  241,    0,    0,    0,    0,  524,  524,  527,  241, 
-          241,    0,  241,  241,  241,  241,  241,    0,  122,    0, 
-           93,  267,  267,    0,  241,  268,  268,  268,  268,    0, 
-          268,  440,    0,  267,    0,    0,  267,    0,    0,    0, 
-          120,    0,    0,  241,  241,    0,  267,  120,  241,  241, 
-            0,  268,    0,    0,    0,  440,    0,    0,  241,    0, 
-            0,  241,    0,    0,  241,  440,  241,  518,  540,    0, 
-          541,  542,  543,  544,    0,    0,    0,    0,    0,  440, 
-            0,    0,  241,    0,    0,    0,  440,  440,    0,  120, 
-          267,    0,  268,    0,  241,    0,  526,    0,    0,  103, 
-            0,  275,  734,  526,  526,    0,  241,    0,  119,    0, 
-          937,  119,    0,  440,  440,    0,  122,    0,  440,    0, 
-            0,  526,    0,    0,    0,  268,  268,  268,  268,  268, 
+          267,  267,  267,  267,  267,  267,  267,  267,  267,  271, 
+            0,  267,  267,  267,  267,    0,    0,    0,    0,  271, 
+          527,  118,  267,  540,    0,  541,  542,  543,  544,    0, 
+          267,    0,    0,    0,    0,  521,    0,    0,  118,    0, 
+            0,  968,  521,  521,    0,    0,    0,  969,  622,   94, 
+            0,    0,    0,  271,    0,    0,    0,  734,    0,    0, 
+            0,  102,    0,  275,    0,  735,    0,  271,  271,  622, 
+          526,  267,  267,  267,    0,    0,  267,  526,  526,    0, 
+            0,  243,  243,  243,    0,  969,  243,  243,  243,    0, 
+          243,  291,  275,  267,  267,    0,    0,  267,    0,  526, 
+          243,  243,    0,    0,    0,    0,  526,  526,  529,  243, 
+          243,    0,  243,  243,  243,  243,  243,    0,  122,    0, 
+           93,  267,  267,    0,  243,  268,  268,  268,  268,    0, 
+          268,  442,    0,  267,    0,    0,  267,    0,    0,    0, 
+          120,    0,    0,  243,  243,    0,  267,  120,  243,  243, 
+            0,  268,    0,    0,    0,  442,    0,    0,  243,    0, 
+            0,  243,    0,    0,  243,  442,  243,  520,  540,    0, 
+          541,  542,  543,  544,    0,    0,    0,    0,    0,  442, 
+            0,    0,  243,    0,    0,    0,  442,  442,    0,  120, 
+          267,    0,  268,    0,  243,    0,  528,    0,    0,  103, 
+            0,  275,  734,  528,  528,    0,  243,    0,  119,    0, 
+          937,  119,    0,  442,  442,    0,  122,    0,  442,    0, 
+            0,  528,    0,    0,    0,  268,  268,  268,  268,  268, 
           121,    0,  268,  268,  268,  268,  268,  268,  268,  268, 
-          268,  268,  268,  268,  268,  268,  440,    0,  268,  268, 
-          268,  268,    0,    0,    0,  267,    0,  525,    0,  268, 
-          119,  105,    0,  267,  525,  525,    0,  268,    0,    0, 
-            0,  269,  269,  269,    0,    0,  269,  269,  269,  121, 
-          269,    0,   97,    0,   96,    0,    0,    0,    0,  267, 
-          269,  269,  525,   92,    0,  105,  121,    0,    0,  269, 
-          269,    0,  269,  269,  269,  269,  269,    0,  268,  268, 
-          268,  527,  105,  268,  269,  267,   97,  267,   96,    0, 
+          268,  268,  268,  268,  268,  268,  442,    0,  268,  268, 
+          268,  268,    0,    0,    0,  267,    0,  527,    0,  268, 
+          119,  105,    0,  267,  527,  527,    0,  268,    0,    0, 
+            0,  271,  271,  271,    0,    0,  271,  271,  271,  121, 
+          271,    0,   97,    0,   96,    0,    0,    0,    0,  267, 
+          271,  271,  527,   92,    0,  105,  121,    0,    0,  271, 
+          271,    0,  271,  271,  271,  271,  271,    0,  268,  268, 
+          268,  529,  105,  268,  271,  267,   97,  267,   96,    0, 
             0,    0,    0,    0,  267,  267,    0,    0,    0,    0, 
           268,  268,    0,   97,  268,   96,    0,    0,    0,  267, 
-          517,    0,  626,    0,    0,  527,    0,    0,  269,    0, 
-            0,  269,  527,  527,  269,  112,  269,    0,  268,  268, 
-            0,   95,    0,  522,    0,  521,   24,    0,    0,    0, 
-          268,    0,  269,  268,    0,  267,   24,    0,    0,  516, 
-            0,    0,    0,  268,  269,  206,    0,  540,    0,  541, 
-          542,  543,  544,  545,    0,    0,  269,  120,  546,    0, 
-            0,  267,    0,    0,  518,    0,    0,  267,  520,    0, 
-          267,  518,  518,  516,    0,  109,    0,  440,  440,  440, 
-          519,  547,  112,  440,  440,   24,  440,  268,  516,  549, 
-          550,  551,  552,    0,  206,  440,  267,  267,    0,  267, 
-          267,    0,    0,  267,    0,  440,  440,    0,  440,  440, 
-          440,  440,  440,    0,  519,    0,    0,    0,  526,    0, 
-          516,    0,  306,    0,  870,  526,  526,  553,  119,  519, 
-            0,  112,  440,  440,  440,  440,  440,  440,  440,  440, 
-          440,  440,  440,  440,  440,  440,   91,  121,  440,  440, 
-          440,  440,  268,    0,    0,    0,    0,  440,    0,  267, 
-          268,  519,    0,  518,  440,    0,  440,    0,  440,  440, 
-          440,  440,  440,  440,  440,    0,  440,  440,  440,    0, 
-            0,  267,  108,    0,    0,    0,  268,    0,  111,  525, 
-          105,  626,    0,  516,  267,    0,  525,  525,    0,    0, 
-            0,    0,  440,  267,    0,    0,    0,    0,  527,    0, 
-          267,   97,  268,   96,  268,  527,  527,    0,    0,    0, 
-          516,  268,  268,  540,    0,  541,  542,  543,  544,  317, 
-          516,    0,    0,    0,    0,    0,  268,  517,    0,  626, 
-            0,    0,    0,  267,  517,  517,  626,  626,    0,  963, 
-            0,    0,  622,  105,    0,    0,  114,  734,    0,    0, 
-          522,    0,  521,    0,  516,    0,    0,  522,  522,  521, 
-          521,    0,  268,  626,   97,    0,   96,    0,  516,  516, 
-            0,  110,    0,  516,    0,    0,    0,    0,   24,   24, 
+          519,    0,  628,    0,    0,  529,    0,    0,  271,    0, 
+            0,  271,  529,  529,  271,  112,  271,    0,  268,  268, 
+            0,   95,    0,  524,    0,  523,   24,    0,    0,    0, 
+          268,    0,  271,  268,    0,  267,   24,    0,    0,  518, 
+            0,    0,    0,  268,  271,  206,    0,  540,    0,  541, 
+          542,  543,  544,  545,    0,    0,  271,  120,  546,    0, 
+            0,  267,    0,    0,  520,    0,    0,  267,  522,    0, 
+          267,  520,  520,  518,    0,  109,    0,  442,  442,  442, 
+          521,  547,  112,  442,  442,   24,  442,  268,  518,  549, 
+          550,  551,  552,    0,  206,  442,  267,  267,    0,  267, 
+          267,    0,    0,  267,    0,  442,  442,    0,  442,  442, 
+          442,  442,  442,    0,  521,    0,    0,    0,  528,    0, 
+          518,    0,  308,    0,  870,  528,  528,  553,  119,  521, 
+            0,  112,  442,  442,  442,  442,  442,  442,  442,  442, 
+          442,  442,  442,  442,  442,  442,   91,  121,  442,  442, 
+          442,  442,  268,    0,    0,    0,    0,  442,    0,  267, 
+          268,  521,    0,  520,  442,    0,  442,    0,  442,  442, 
+          442,  442,  442,  442,  442,    0,  442,  442,  442,    0, 
+            0,  267,  108,    0,    0,    0,  268,    0,  111,  527, 
+          105,  628,    0,  518,  267,    0,  527,  527,    0,    0, 
+            0,    0,  442,  267,    0,    0,    0,    0,  529,    0, 
+          267,   97,  268,   96,  268,  529,  529,    0,    0,    0, 
+          518,  268,  268,  540,    0,  541,  542,  543,  544,  319, 
+          518,    0,    0,    0,    0,    0,  268,  519,    0,  628, 
+            0,    0,    0,  267,  519,  519,  628,  628,    0,  963, 
+            0,    0,  624,  105,    0,    0,  114,  734,    0,    0, 
+          524,    0,  523,    0,  518,    0,    0,  524,  524,  523, 
+          523,    0,  268,  628,   97,    0,   96,    0,  518,  518, 
+            0,  110,    0,  518,    0,    0,    0,    0,   24,   24, 
            24,    0,    0,    0,   24,   24,    0,   24,  268,    0, 
-            0,    0,    0,    0,  268,  520,    0,  268,    0,  619, 
-          128,  516,  520,  520,  267,    0,    0,    0,    0,   24, 
+            0,    0,    0,    0,  268,  522,    0,  268,    0,  621, 
+          128,  518,  522,  522,  267,    0,    0,    0,    0,   24, 
            24,   24,   24,   24,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,  268,  268,    0,  268,  268,    0,  112, 
           268,  206,    0,  206,  206,  206,  206,  206,    0,    0, 
-          620,  519,  206,    0,    0,    0,    0,  516,    0,  306, 
-            0,  519,    0,  522,  516,  516,  306,  306,   24,    0, 
-          619,  522,    0,    0,    0,  206,  206,    0,    0,    0, 
-            0,  110,  619,  206,  206,  206,  206,    0,  516,   24, 
-            0,  619,    0,    0,  963,  519,  268,  963,  519, 1061, 
-          518,  963,    0,    0,    0,  519,  519,  518,  518,  519, 
-          519,  620,  113,   24,  519,    0,    0,  127,  268,    0, 
-            0,  206,    0,    0,    0,    0,    0,    0,    0,  519, 
-          516,  268,  620,    0,    0,    0,    0,  516,  516,    0, 
-          268,    0,  519,  619,    0,    0,    0,  268,    0,    0, 
+          622,  521,  206,    0,    0,    0,    0,  518,    0,  308, 
+            0,  521,    0,  524,  518,  518,  308,  308,   24,    0, 
+          621,  524,    0,    0,    0,  206,  206,    0,    0,    0, 
+            0,  110,  621,  206,  206,  206,  206,    0,  518,   24, 
+            0,  621,    0,    0,  963,  521,  268,  963,  521, 1061, 
+          520,  963,    0,    0,    0,  521,  521,  520,  520,  521, 
+          521,  622,  113,   24,  521,    0,    0,  127,  268,    0, 
+            0,  206,    0,    0,    0,    0,    0,    0,    0,  521, 
+          518,  268,  622,    0,    0,    0,    0,  518,  518,    0, 
+          268,    0,  521,  621,    0,    0,    0,  268,    0,    0, 
             0,    0,    0,    0,    0,  963,    0,  963,    0,  963, 
-            0,    0,  963,    0,  619,    0,  317,    0,    0,    0, 
-            0,  199,    0,  317,  317,  963,    0,  619,  619,  619, 
-          268,  619,  516,  516,  516,  619,  619,  516,  516,  516, 
-          619,  516,  619,  619,  619,  619,  619,  619,  619,    0, 
-          619,  516,  516,  619,  619,  619,  619,  619,  619,  619, 
-          516,  516,  619,  516,  516,  516,  516,  516,    0,  619, 
-          199,    0,  619,  619,  619,  516,  619,  619,  619,  619, 
-          619,  619,  619,  619,  619,  619,  619,  516,  516,  516, 
-          516,  516,  516,  516,  516,  516,  516,  516,  516,  516, 
-          516,  268,    0,  516,  516,  516,  516,  619,  528,  516, 
-          619,  619,  516,  619,  619,  516,  619,  516,  619,  516, 
-          619,  516,  619,  516,  516,  516,  516,  516,  516,  516, 
-          619,  516,  619,  516,    0,  619,  619,  619,  619,  619, 
-          619,    0,    0,    0,  619,  516,  619,  619,    0,  619, 
-          619,  619,  619,    0,  619,  619,  619,  516,  620,  620, 
-          620,    0,  620,  519,  519,  519,  620,  620,  519,  519, 
-          519,  620,  519,  620,  620,  620,  620,  620,  620,  620, 
-            0,  620,  519,  519,  620,  620,  620,  620,  620,  620, 
-          620,  519,  519,  620,  519,  519,  519,  519,  519,    0, 
-          620,    0,    0,  620,  620,  620,  519,  620,  620,  620, 
-          620,  620,  620,  620,  620,  620,  620,  620,  519,  519, 
-          519,  519,  519,  519,  519,  519,  519,  519,  519,  519, 
-          519,  519,  964,    0,  519,  519,  519,  519,  620,  531, 
-          519,  620,  620,  519,  620,  620,  519,  620,  519,  620, 
-          519,  620,  519,  620,  519,  519,  519,  519,  519,  519, 
-          519,  620,  519,  620,  519,    0,  620,  620,  620,  620, 
-          620,  620,    0,    0,  626,  620,  519,  620,  620,    0, 
-          620,  620,  620,  620,  626,  620,  620,  620,  519,    0, 
-            0, 1024,  635,  635,  635, 1028,    0,    0,  635,  635, 
-            0,  635,    0,  636,  636,  636,    0,    0,    0,  636, 
-          636,    0,  636,    0,    0,    0,    0,  199,  626,  199, 
+            0,    0,  963,    0,  621,    0,  319,    0,    0,    0, 
+            0,  199,    0,  319,  319,  963,    0,  621,  621,  621, 
+          268,  621,  518,  518,  518,  621,  621,  518,  518,  518, 
+          621,  518,  621,  621,  621,  621,  621,  621,  621,    0, 
+          621,  518,  518,  621,  621,  621,  621,  621,  621,  621, 
+          518,  518,  621,  518,  518,  518,  518,  518,    0,  621, 
+          199,    0,  621,  621,  621,  518,  621,  621,  621,  621, 
+          621,  621,  621,  621,  621,  621,  621,  518,  518,  518, 
+          518,  518,  518,  518,  518,  518,  518,  518,  518,  518, 
+          518,  268,    0,  518,  518,  518,  518,  621,  530,  518, 
+          621,  621,  518,  621,  621,  518,  621,  518,  621,  518, 
+          621,  518,  621,  518,  518,  518,  518,  518,  518,  518, 
+          621,  518,  621,  518,    0,  621,  621,  621,  621,  621, 
+          621,    0,    0,    0,  621,  518,  621,  621,    0,  621, 
+          621,  621,  621,    0,  621,  621,  621,  518,  622,  622, 
+          622,    0,  622,  521,  521,  521,  622,  622,  521,  521, 
+          521,  622,  521,  622,  622,  622,  622,  622,  622,  622, 
+            0,  622,  521,  521,  622,  622,  622,  622,  622,  622, 
+          622,  521,  521,  622,  521,  521,  521,  521,  521,    0, 
+          622,    0,    0,  622,  622,  622,  521,  622,  622,  622, 
+          622,  622,  622,  622,  622,  622,  622,  622,  521,  521, 
+          521,  521,  521,  521,  521,  521,  521,  521,  521,  521, 
+          521,  521,  964,    0,  521,  521,  521,  521,  622,  533, 
+          521,  622,  622,  521,  622,  622,  521,  622,  521,  622, 
+          521,  622,  521,  622,  521,  521,  521,  521,  521,  521, 
+          521,  622,  521,  622,  521,    0,  622,  622,  622,  622, 
+          622,  622,    0,    0,  628,  622,  521,  622,  622,    0, 
+          622,  622,  622,  622,  628,  622,  622,  622,  521,    0, 
+            0, 1024,  637,  637,  637, 1028,    0,    0,  637,  637, 
+            0,  637,    0,  638,  638,  638,    0,    0,    0,  638, 
+          638,    0,  638,    0,    0,    0,    0,  199,  628,  199, 
           199,  199,  199,  199,    0,    0,    0,    0,  199,    0, 
-            0,    0,  626,  626,    0,  124,    0,  626,    0,  521, 
-            0,    0,    0,    0,    0,    0,    0,  521,    0,    0, 
+            0,    0,  628,  628,    0,  124,    0,  628,    0,  523, 
+            0,    0,    0,    0,    0,    0,    0,  523,    0,    0, 
             0,  199,  199,    0,    0,    0,    0,    0,    0,  199, 
-          199,  199,  199,    0,    0,  626,    0,    0,    0,    0, 
-            0,    0,  635,    0,    0,    0,    0,  964,    0,    0, 
-          964,    0,  964,  636,  964,    0,  369,    0,    0,    0, 
-            0, 1082,    0,  635, 1084, 1086,    0,  199, 1089, 1090, 
-            0,    0,  382,  383,  636,  622,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  622,    0,  635,  384,    0, 
-          385,    0,  386,  387,  388,  389,    0,    0,  636,    0, 
+          199,  199,  199,    0,    0,  628,    0,    0,    0,    0, 
+            0,    0,  637,    0,    0,    0,    0,  964,    0,    0, 
+          964,    0,  964,  638,  964,    0,  369,    0,    0,    0, 
+            0, 1082,    0,  637, 1084, 1086,    0,  199, 1089, 1090, 
+            0,    0,  382,  383,  638,  624,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  624,    0,  637,  384,    0, 
+          385,    0,  386,  387,  388,  389,    0,    0,  638,    0, 
             0,    0, 1100, 1102, 1103, 1104,    0,    0,  964,    0, 
-          964, 1106,  964,    0,    0,  964,    0,    0,  540,  622, 
+          964, 1106,  964,    0,    0,  964,    0,    0,  540,  624, 
           541,  542,  543,  544,  545,    0,    0,    0,  964,  546, 
-            0,    0,    0,  622,  622,    0,  123,    0,  622,    0, 
+            0,    0,    0,  624,  624,    0,  123,    0,  624,    0, 
             0,    0,  369,  540,    0,  541,  542,  543,  544,  545, 
             0,    0,  547,  548,  546,    0,    0,    0,  382,  383, 
-          549,  550,  551,  552,    0,    0,  622,    0,    0,    0, 
+          549,  550,  551,  552,    0,    0,  624,    0,    0,    0, 
             0,    0,    0,    0,  384,    0,    0,  547,  386,  387, 
           388,  389,    0,    0,    0,  549,  550,  551,  552,    0, 
             0,    0,    0,    0,    0,  209,    0,    0,  553,    0, 
-            0,  622,  622,  622,    0,  622,  626,  626,  626,  622, 
-          622,  626,  626,  626,  622,  626,  622,  622,  622,  622, 
-          622,  622,  622,  553,  626,  626,  626,  622,  622,  622, 
-          622,  622,  622,  622,  626,  626,  622,  626,  626,  626, 
-          626,  626,    0,  622,  209,    0,  622,  622,  622,  626, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  626,  626,  626,  626,  626,  626,  626,  626,  626, 
-          626,  626,  626,  626,  626,    0,    0,  626,  626,  626, 
-          626,  622,    0,  626,  622,  622,  626,  622,  622,  626, 
-          622,  626,  622,  626,  622,  626,  622,  626,  626,  626, 
-          626,  626,  626,  626,  622,  626,  626,  626,    0,  622, 
-          622,  622,  622,  622,  622,    0,    0,    0,  622,  626, 
-          622,  622,    0,  622,  622,  622,  622,    0,  622,  622, 
-          622,  626,  622,  622,  622,    0,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,    0,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,    0,  622,    0,    0,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,    0,    0,  622,  622, 
-          622,  622,  622,    0,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,    0, 
-          622,  622,  622,  622,  622,  622,    0,    0,  623,  622, 
-          622,  622,  622,    0,  622,  622,  622,  622,  623,  622, 
-          622,  622,  622,    0,    0,    0,    0,    0,    0,    0, 
+            0,  624,  624,  624,    0,  624,  628,  628,  628,  624, 
+          624,  628,  628,  628,  624,  628,  624,  624,  624,  624, 
+          624,  624,  624,  553,  628,  628,  628,  624,  624,  624, 
+          624,  624,  624,  624,  628,  628,  624,  628,  628,  628, 
+          628,  628,    0,  624,  209,    0,  624,  624,  624,  628, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  628,  628,  628,  628,  628,  628,  628,  628,  628, 
+          628,  628,  628,  628,  628,    0,    0,  628,  628,  628, 
+          628,  624,    0,  628,  624,  624,  628,  624,  624,  628, 
+          624,  628,  624,  628,  624,  628,  624,  628,  628,  628, 
+          628,  628,  628,  628,  624,  628,  628,  628,    0,  624, 
+          624,  624,  624,  624,  624,    0,    0,    0,  624,  628, 
+          624,  624,    0,  624,  624,  624,  624,    0,  624,  624, 
+          624,  628,  624,  624,  624,    0,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,    0,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,    0,  624,    0,    0,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,    0,    0,  624,  624, 
+          624,  624,  624,    0,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,    0, 
+          624,  624,  624,  624,  624,  624,    0,    0,  625,  624, 
+          624,  624,  624,    0,  624,  624,  624,  624,  625,  624, 
+          624,  624,  624,    0,    0,    0,    0,    0,    0,    0, 
           540,    0,  541,  542,  543,  544,  545,    0,    0,    0, 
             0,  546,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  209,  623,  209,  209,  209,  209,  209,    0,    0, 
-            0,    0,  209,    0,  547,    0,  623,  623,    0,  125, 
-            0,  623,    0,  523,  551,  552,    0,    0,    0,    0, 
-            0,  523,    0,    0,    0,  209,  209,    0,    0,    0, 
-            0,    0,    0,  209,  209,  209,  209,    0,    0,  623, 
+            0,  209,  625,  209,  209,  209,  209,  209,    0,    0, 
+            0,    0,  209,    0,  547,    0,  625,  625,    0,  125, 
+            0,  625,    0,  525,  551,  552,    0,    0,    0,    0, 
+            0,  525,    0,    0,    0,  209,  209,    0,    0,    0, 
+            0,    0,    0,  209,  209,  209,  209,    0,    0,  625, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
           553,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    4,    5,    6,    0,    8, 
-            0,  209,    0,    9,   10,    0,    0,    0,   11,  307, 
-           12,   13,   14,  241,  242,   17,   18,    0,    0,  307, 
+            0,  209,    0,    9,   10,    0,    0,    0,   11,  309, 
+           12,   13,   14,  241,  242,   17,   18,    0,    0,  309, 
             0,   19,  243,  244,  245,  246,  247,  248,    0,    0, 
           249,    0,    0,    0,    0,    0,    0,  250,    0,    0, 
           251,  252,  253,    0,  254,   35,  255,  256,  257,  258, 
-            0,   40,    0,  307,  259,    0,    0,  369,    0,    0, 
-            0,    0,  374,  375,    0,    0,    0,  307,  307,    0, 
-            0,    0,  307,  382,  383,  260,    0,    0,   45,    0, 
+            0,   40,    0,  309,  259,    0,    0,  369,    0,    0, 
+            0,    0,  374,  375,    0,    0,    0,  309,  309,    0, 
+            0,    0,  309,  382,  383,  260,    0,    0,   45,    0, 
             0,   46,   47,    0,   48,    0,   49,    0,    0,  384, 
             0,  385,    0,  386,  387,  388,  389,  390,  391,  392, 
-          307,  393,    0,   52,   53,   54,   55,   56,   57,    0, 
+          309,  393,    0,   52,   53,   54,   55,   56,   57,    0, 
             0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
            64,    0,   65,   66,    0,    0,    0,    0,    0,  194, 
-            0,    0,    0,    0,    0,  623,  623,  623,    0,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,    0,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,    0,  623,  194,    0, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,    0, 
-            0,  623,  623,  623,  623,  623,    0,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,    0,  623,  623,  623,  623,  623,  623,    0, 
-            0,    0,  623,  623,  623,  623,    0,  623,  623,  623, 
-          623,    0,  623,  623,  623,  623,  621,  621,  621,    0, 
-          621,  307,  307,  307,  621,  621,  307,  307,  307,  621, 
-          307,  621,  621,  621,  621,  621,  621,  621,    0,  621, 
-          307,  307,  621,  621,  621,  621,  621,  621,  621,  307, 
-          307,  621,  307,  307,  307,  307,  307,    0,  621,    0, 
-            0,  621,  621,  621,  307,  621,  621,  621,  621,  621, 
-          621,  621,  621,  621,  621,  621,  307,  307,  307,  307, 
-          307,  307,  307,  307,  307,  307,  307,  307,  307,  307, 
-            0,    0,  307,  307,  307,  307,  621,    0,  307,  621, 
-          621,  307,  621,  621,  307,  621,  307,  621,  307,  621, 
-          307,  621,  307,  307,  307,  307,  307,  307,  307,  621, 
-          307,  621,  307,    0,  621,  621,  621,  621,  621,  621, 
-            0,    0,  627,  621,  307,  621,  621,    0,  621,  621, 
-          621,  621,  627,  621,  621,  621,  307,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  194,  627,  194,  194,  194, 
+            0,    0,    0,    0,    0,  625,  625,  625,    0,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,    0,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,    0,  625,  194,    0, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,    0, 
+            0,  625,  625,  625,  625,  625,    0,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,    0,  625,  625,  625,  625,  625,  625,    0, 
+            0,    0,  625,  625,  625,  625,    0,  625,  625,  625, 
+          625,    0,  625,  625,  625,  625,  623,  623,  623,    0, 
+          623,  309,  309,  309,  623,  623,  309,  309,  309,  623, 
+          309,  623,  623,  623,  623,  623,  623,  623,    0,  623, 
+          309,  309,  623,  623,  623,  623,  623,  623,  623,  309, 
+          309,  623,  309,  309,  309,  309,  309,    0,  623,    0, 
+            0,  623,  623,  623,  309,  623,  623,  623,  623,  623, 
+          623,  623,  623,  623,  623,  623,  309,  309,  309,  309, 
+          309,  309,  309,  309,  309,  309,  309,  309,  309,  309, 
+            0,    0,  309,  309,  309,  309,  623,    0,  309,  623, 
+          623,  309,  623,  623,  309,  623,  309,  623,  309,  623, 
+          309,  623,  309,  309,  309,  309,  309,  309,  309,  623, 
+          309,  623,  309,    0,  623,  623,  623,  623,  623,  623, 
+            0,    0,  629,  623,  309,  623,  623,    0,  623,  623, 
+          623,  623,  629,  623,  623,  623,  309,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  194,  629,  194,  194,  194, 
           194,  194,    0,    0,    0,    0,  194,    0,    0,    0, 
-          627,  627,    0,    0,    0,  627,    0,  524,  369,  370, 
-          371,  372,  373,  374,  375,  524,    0,  378,  379,  194, 
+          629,  629,    0,    0,    0,  629,    0,  526,  369,  370, 
+          371,  372,  373,  374,  375,  526,    0,  378,  379,  194, 
           194,    0,    0,    0,  382,  383,    0,  194,  194,  194, 
-          194,    0,    0,  627,    0,    0,    0,    0,    0,    0, 
+          194,    0,    0,  629,    0,    0,    0,    0,    0,    0, 
           384,    0,  385,    0,  386,  387,  388,  389,  390,  391, 
           392,    0,  393,    0,    0,    0,    0,    0,    0,    4, 
             5,    6,    0,    8,    0,  194,    0,    9,   10,    0, 
-            0,    0,   11,  628,   12,   13,   14,  241,  242,   17, 
-           18,    0,    0,  628,    0,   19,  243,  244,  323,  324, 
+            0,    0,   11,  630,   12,   13,   14,  241,  242,   17, 
+           18,    0,    0,  630,    0,   19,  243,  244,  323,  324, 
           325,  326,    0,    0,  249,    0,    0,    0,    0,    0, 
             0,  250,    0,    0,  327,  328,  329,    0,  330,   35, 
-          331,  332,  333,  334,    0,   40,    0,  628,  259,    0, 
+          331,  332,  333,  334,    0,   40,    0,  630,  259,    0, 
             0,  369,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  628,  628,    0,    0,    0,  628,  382,  383,  335, 
+            0,  630,  630,    0,    0,    0,  630,  382,  383,  335, 
             0,    0,  410,    0,    0,   46,   47,    0,   48,    0, 
           411,    0,    0,  384,    0,  385,    0,  386,  387,  388, 
-          389,    0,    0,  392,  628,  393,    0,   52,   53,   54, 
+          389,    0,    0,  392,  630,  393,    0,   52,   53,   54, 
            55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
             0,   61,   62,   63,   64,    0,   65,   66,    0,    0, 
-            0,    0,    0,  176,    0,    0,    0,    0,    0,  624, 
-          624,  624,    0,  624,  627,  627,  627,  624,  624,  627, 
-          627,  627,  624,  627,  624,  624,  624,  624,  624,  624, 
-          624,    0,  627,  627,  627,  624,  624,  624,  624,  624, 
-          624,  624,  627,  627,  624,  627,  627,  627,  627,  627, 
-            0,  624,  176,    0,  624,  624,  624,  627,  624,  624, 
-          624,  624,  624,  624,  624,  624,  624,  624,  624,  627, 
+            0,    0,    0,  176,    0,    0,    0,    0,    0,  626, 
+          626,  626,    0,  626,  629,  629,  629,  626,  626,  629, 
+          629,  629,  626,  629,  626,  626,  626,  626,  626,  626, 
+          626,    0,  629,  629,  629,  626,  626,  626,  626,  626, 
+          626,  626,  629,  629,  626,  629,  629,  629,  629,  629, 
+            0,  626,  176,    0,  626,  626,  626,  629,  626,  626, 
+          626,  626,  626,  626,  626,  626,  626,  626,  626,  629, 
+          629,  629,  629,  629,  629,  629,  629,  629,  629,  629, 
+          629,  629,  629,    0,    0,  629,  629,  629,  629,  626, 
+            0,  629,  626,  626,  629,  626,  626,  629,  626,  629, 
+          626,  629,  626,  629,  626,  629,  629,  629,  629,  629, 
+          629,  629,  626,  629,  629,  629,    0,  626,  626,  626, 
+          626,  626,  626,    0,    0,    0,  626,  629,  626,  626, 
+            0,  626,  626,  626,  626,    0,  626,  626,  626,  629, 
+          627,  627,  627,    0,  627,  630,  630,  630,  627,  627, 
+          630,  630,  630,  627,  630,  627,  627,  627,  627,  627, 
+          627,  627,    0,  630,  630,  630,  627,  627,  627,  627, 
+          627,  627,  627,  630,  630,  627,  630,  630,  630,  630, 
+          630,  394,  627,    0,    0,  627,  627,  627,  630,  627, 
           627,  627,  627,  627,  627,  627,  627,  627,  627,  627, 
-          627,  627,  627,    0,    0,  627,  627,  627,  627,  624, 
-            0,  627,  624,  624,  627,  624,  624,  627,  624,  627, 
-          624,  627,  624,  627,  624,  627,  627,  627,  627,  627, 
-          627,  627,  624,  627,  627,  627,    0,  624,  624,  624, 
-          624,  624,  624,    0,    0,    0,  624,  627,  624,  624, 
-            0,  624,  624,  624,  624,    0,  624,  624,  624,  627, 
-          625,  625,  625,    0,  625,  628,  628,  628,  625,  625, 
-          628,  628,  628,  625,  628,  625,  625,  625,  625,  625, 
-          625,  625,    0,  628,  628,  628,  625,  625,  625,  625, 
-          625,  625,  625,  628,  628,  625,  628,  628,  628,  628, 
-          628,  394,  625,    0,    0,  625,  625,  625,  628,  625, 
-          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
-          628,  628,  628,  628,  628,  628,  628,  628,  628,  628, 
-          628,  628,  628,  628,    0,    0,  628,  628,  628,  628, 
-          625,    0,  628,  625,  625,  628,  625,  625,  628,  625, 
-          628,  625,  628,  625,  628,  625,  628,  628,  628,  628, 
-          628,  628,  628,  625,  628,  628,  628,    0,  625,  625, 
-          625,  625,  625,  625,    0,    0,  316,  625,  628,  625, 
-          625,    0,  625,  625,  625,  625,  316,  625,  625,  625, 
-          628,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          630,  630,  630,  630,  630,  630,  630,  630,  630,  630, 
+          630,  630,  630,  630,    0,    0,  630,  630,  630,  630, 
+          627,    0,  630,  627,  627,  630,  627,  627,  630,  627, 
+          630,  627,  630,  627,  630,  627,  630,  630,  630,  630, 
+          630,  630,  630,  627,  630,  630,  630,    0,  627,  627, 
+          627,  627,  627,  627,    0,    0,  318,  627,  630,  627, 
+          627,    0,  627,  627,  627,  627,  318,  627,  627,  627, 
+          630,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,  176, 
-          316,  176,  176,  176,  176,  176,    0,    0,    0,    0, 
-          176,    0,    0,    0,  316,  316,    0,  126,    0,  316, 
-            0,  526,    0,    0,    0,    0,    0,    0,    0,  526, 
+          318,  176,  176,  176,  176,  176,    0,    0,    0,    0, 
+          176,    0,    0,    0,  318,  318,    0,  126,    0,  318, 
+            0,  528,    0,    0,    0,    0,    0,    0,    0,  528, 
             0,    0,    0,  176,  176,    0,    0,    0,    0,    0, 
-            0,  176,  176,  176,  176,    0,    0,  316,    0,    0, 
+            0,  176,  176,  176,  176,    0,    0,  318,    0,    0, 
             0,    0,  369,  370,  371,  372,  373,  374,  375,  376, 
           377,  378,  379,    0,    0,    0,    0,    0,  382,  383, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,  176, 
-            0,    0,    0,    0,  384,    0,  385,  439,  386,  387, 
-          388,  389,  390,  391,  392,    0,  393,  439,    0,    0, 
+            0,    0,    0,    0,  384,    0,  385,  441,  386,  387, 
+          388,  389,  390,  391,  392,    0,  393,  441,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,  782,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  439,    0,    0,    0,  369,  370,  371,  372,  373, 
-          374,  375,  376,  377,  378,  379,  439,  380,  381,    0, 
-          439,  382,  383,    0,    0,    0,    0,    0,    0,    0, 
+            0,  441,    0,    0,    0,  369,  370,  371,  372,  373, 
+          374,  375,  376,  377,  378,  379,  441,  380,  381,    0, 
+          441,  382,  383,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,  384,    0,  385, 
-            0,  386,  387,  388,  389,  390,  391,  392,  439,  393, 
+            0,  386,  387,  388,  389,  390,  391,  392,  441,  393, 
             0,    0,    0,    0,    0,    0,  177,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  623,  623,  623,    0,  623,  316,  316, 
-          316,  623,  623,  316,  316,  316,  623,  316,  623,  623, 
-          623,  623,  623,  623,  623,  177,    0,  316,  316,  623, 
-          623,  623,  623,  623,  623,  623,  316,  316,  623,  316, 
-          316,  316,  316,  316,    0,  623,    0,    0,  623,  623, 
-          623,  316,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  316,  316,  316,  316,  316,  316,  316, 
-          316,  316,  316,  316,  316,  316,  316,   94,    0,  316, 
-          316,  316,  316,  623,    0,  316,  623,  623,  316,  623, 
-          623,  316,  623,  316,  623,  316,  623,  316,  623,  316, 
-          316,  316,  316,  316,  316,  316,  623,  316,    0,  316, 
-            0,  623,  623,  623,  623,  623,  623,    0,    0,    0, 
-          623,  316,  623,  623,  519,  623,  623,  623,  623,    0, 
-          623,  623,  623,  316,  283,  283,  283,    0,  283,  439, 
-          439,  439,  283,  283,  439,  439,  439,  283,  439,  283, 
-          283,  283,  283,  283,  283,  283,  394,  439,  439,  439, 
-          283,  283,  283,  283,  283,  283,  283,  439,  439,  283, 
-          439,  439,  439,  439,  439,    0,  283,    0,    0,  283, 
-          283,  283,    0,  283,  283,  283,  283,  283,  283,  283, 
-          283,  283,  283,  283,  439,  439,  439,  439,  439,  439, 
-          439,  439,  439,  439,  439,  439,  439,  439,  648,    0, 
-          439,  439,  439,  439,  283,    0,  439,  283,  648,  439, 
-          283,  283,  439,  283,  439,  283,  439,  283,  439,  283, 
-          439,  439,  439,  439,  439,  439,  439,  283,  439,  439, 
-          439,    0,  283,  283,  283,  283,  283,  283,    0,    0, 
-            0,  283,  648,  283,  283,    0,  283,  283,  283,  283, 
-            0,  283,  283,  283,  439,    0,    0,  648,    0,    0, 
-            0,  648,  177,    0,  177,  177,  177,  177,  177,    0, 
+            0,    0,    0,  625,  625,  625,    0,  625,  318,  318, 
+          318,  625,  625,  318,  318,  318,  625,  318,  625,  625, 
+          625,  625,  625,  625,  625,  177,    0,  318,  318,  625, 
+          625,  625,  625,  625,  625,  625,  318,  318,  625,  318, 
+          318,  318,  318,  318,    0,  625,    0,    0,  625,  625, 
+          625,  318,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  318,  318,  318,  318,  318,  318,  318, 
+          318,  318,  318,  318,  318,  318,  318,   94,    0,  318, 
+          318,  318,  318,  625,    0,  318,  625,  625,  318,  625, 
+          625,  318,  625,  318,  625,  318,  625,  318,  625,  318, 
+          318,  318,  318,  318,  318,  318,  625,  318,    0,  318, 
+            0,  625,  625,  625,  625,  625,  625,    0,    0,    0, 
+          625,  318,  625,  625,  521,  625,  625,  625,  625,    0, 
+          625,  625,  625,  318,  285,  285,  285,    0,  285,  441, 
+          441,  441,  285,  285,  441,  441,  441,  285,  441,  285, 
+          285,  285,  285,  285,  285,  285,  394,  441,  441,  441, 
+          285,  285,  285,  285,  285,  285,  285,  441,  441,  285, 
+          441,  441,  441,  441,  441,    0,  285,    0,    0,  285, 
+          285,  285,    0,  285,  285,  285,  285,  285,  285,  285, 
+          285,  285,  285,  285,  441,  441,  441,  441,  441,  441, 
+          441,  441,  441,  441,  441,  441,  441,  441,  650,    0, 
+          441,  441,  441,  441,  285,    0,  441,  285,  650,  441, 
+          285,  285,  441,  285,  441,  285,  441,  285,  441,  285, 
+          441,  441,  441,  441,  441,  441,  441,  285,  441,  441, 
+          441,    0,  285,  285,  285,  285,  285,  285,    0,    0, 
+            0,  285,  650,  285,  285,    0,  285,  285,  285,  285, 
+            0,  285,  285,  285,  441,    0,    0,  650,    0,    0, 
+            0,  650,  177,    0,  177,  177,  177,  177,  177,    0, 
             0,    0,    0,  177,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  525,    0,    0,    0,    0,  648, 
-            0,    0,  525,    0,    0,    0,  177,  177,    0,    0, 
-            0,    0,  113,  620,  177,  177,  177,  177,    0,    0, 
+            0,    0,    0,    0,  527,    0,    0,    0,    0,  650, 
+            0,    0,  527,    0,    0,    0,  177,  177,    0,    0, 
+            0,    0,  113,  622,  177,  177,  177,  177,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  323, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  323, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  325, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  325, 
             0,    0,  177,    0,    0,    0,    0,    0,    0,    0, 
-            0,  519,    0,    0,    0,    0,    0,    0,  519,  519, 
-            0,    0,    0,    0,  620,    0,    0,    0,    0,    0, 
-            0,    0,    0,  323,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  620,    0,    0,  323,    0, 
-            0,    0,  323,    0,    0,    0,    0,    0,    0,    0, 
+            0,  521,    0,    0,    0,    0,    0,    0,  521,  521, 
+            0,    0,    0,    0,  622,    0,    0,    0,    0,    0, 
+            0,    0,    0,  325,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  622,    0,    0,  325,    0, 
+            0,    0,  325,    0,    0,    0,    0,    0,    0,    0, 
           369,  370,  371,  372,  373,  374,  375,  376,  377,  378, 
           379,    0,  380,  381,    0,    0,  382,  383,    0,    0, 
-          323,    0,    0,    0,    0,    0,    0,    0,  178,    0, 
+          325,    0,    0,    0,    0,    0,    0,    0,  178,    0, 
             0,    0,  384,    0,  385,    0,  386,  387,  388,  389, 
           390,  391,  392,    0,  393,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  283,  283,  283,    0,  283, 
-          648,  648,  648,  283,  283,  648,  648,  648,  283,  648, 
-          283,  283,  283,  283,  283,  283,  283,  178,  648,  648, 
-          648,  283,  283,  283,  283,  283,  283,  283,  648,  648, 
-          283,  648,  648,  648,  648,  648,    0,  283,    0,    0, 
-          283,  283,  283,    0,  283,  283,  283,  283,  283,  283, 
-          283,  283,  283,  283,  283,  648,  648,  648,  648,  648, 
-          648,  648,  648,  648,  648,  648,  648,  648,  648,  105, 
-            0,  648,  648,  648,  648,  283,    0,  648,  283,    0, 
-          648,  283,  283,  648,  283,  648,  283,  648,  283,  648, 
-          283,  648,  648,  648,  648,  648,  648,  648,  283,  648, 
-          648,  648,    0,  283,  283,  283,  283,  283,  283,    0, 
-            0,    0,  283,    0,  283,  283,  626,  283,  283,  283, 
-          283,    0,  283,  283,  283,  648,  283,  283,  283,    0, 
-          283,  323,  323,  323,  283,  283,  323,  323,  323,  283, 
-          323,  283,  283,  283,  283,  283,  283,  283,    0,    0, 
-          323,  323,  283,  283,  283,  283,  283,  283,  283,  323, 
-          323,  283,  323,  323,  323,  323,  323,    0,  283,    0, 
-            0,  283,  283,  283,    0,  283,  283,  283,  283,  283, 
-          283,  283,  283,  283,  283,  283,  323,  323,  323,  323, 
-          323,  323,  323,  323,  323,  323,  323,  323,  323,  323, 
-          516,    0,  323,  323,  323,  323,  283,    0,  323,  283, 
-          516,  323,  283,  283,  323,  283,  323,  283,  323,  283, 
-          323,  283,  323,  323,  323,  323,  323,  323,  323,  283, 
-          323,    0,  323,    0,  283,  283,  283,  283,  283,  283, 
-            0,    0,    0,  283,   91,  283,  283,    0,  283,  283, 
-          283,  283,    0,  283,  283,  283,  323,    0,    0,  516, 
-            0,  110,    0,  516,  178,    0,  178,  178,  178,  178, 
+            0,    0,    0,    0,    0,  285,  285,  285,    0,  285, 
+          650,  650,  650,  285,  285,  650,  650,  650,  285,  650, 
+          285,  285,  285,  285,  285,  285,  285,  178,  650,  650, 
+          650,  285,  285,  285,  285,  285,  285,  285,  650,  650, 
+          285,  650,  650,  650,  650,  650,    0,  285,    0,    0, 
+          285,  285,  285,    0,  285,  285,  285,  285,  285,  285, 
+          285,  285,  285,  285,  285,  650,  650,  650,  650,  650, 
+          650,  650,  650,  650,  650,  650,  650,  650,  650,  105, 
+            0,  650,  650,  650,  650,  285,    0,  650,  285,    0, 
+          650,  285,  285,  650,  285,  650,  285,  650,  285,  650, 
+          285,  650,  650,  650,  650,  650,  650,  650,  285,  650, 
+          650,  650,    0,  285,  285,  285,  285,  285,  285,    0, 
+            0,    0,  285,    0,  285,  285,  628,  285,  285,  285, 
+          285,    0,  285,  285,  285,  650,  285,  285,  285,    0, 
+          285,  325,  325,  325,  285,  285,  325,  325,  325,  285, 
+          325,  285,  285,  285,  285,  285,  285,  285,    0,    0, 
+          325,  325,  285,  285,  285,  285,  285,  285,  285,  325, 
+          325,  285,  325,  325,  325,  325,  325,    0,  285,    0, 
+            0,  285,  285,  285,    0,  285,  285,  285,  285,  285, 
+          285,  285,  285,  285,  285,  285,  325,  325,  325,  325, 
+          325,  325,  325,  325,  325,  325,  325,  325,  325,  325, 
+          518,    0,  325,  325,  325,  325,  285,    0,  325,  285, 
+          518,  325,  285,  285,  325,  285,  325,  285,  325,  285, 
+          325,  285,  325,  325,  325,  325,  325,  325,  325,  285, 
+          325,    0,  325,    0,  285,  285,  285,  285,  285,  285, 
+            0,    0,    0,  285,   91,  285,  285,    0,  285,  285, 
+          285,  285,    0,  285,  285,  285,  325,    0,    0,  518, 
+            0,  110,    0,  518,  178,    0,  178,  178,  178,  178, 
           178,    0,    0,    0,    0,  178,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  527,    0,    0,    0, 
-            0,  516,    0,    0,  527,    0,    0,    0,  178,  178, 
-            0,    0,    0,    0,  124,  626,  178,  178,  178,  178, 
+            0,    0,    0,    0,    0,    0,  529,    0,    0,    0, 
+            0,  518,    0,    0,  529,    0,    0,    0,  178,  178, 
+            0,    0,    0,    0,  124,  628,  178,  178,  178,  178, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  519,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  519,    0,    0,  178,    0,    0,    0,    0,    0, 
-            0,    0,    0,  626,    0,    0,    0,    0,    0,    0, 
-          626,  626,    0,    0,    0,    0,  622,    0,    0,    0, 
+            0,  521,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  521,    0,    0,  178,    0,    0,    0,    0,    0, 
+            0,    0,    0,  628,    0,    0,    0,    0,    0,    0, 
+          628,  628,    0,    0,    0,    0,  624,    0,    0,    0, 
             0,    0,    0,    0,    0,   94,    0,    0,    0,  369, 
-          370,  371,  372,  373,  374,  375,  376,  626,  378,  379, 
-          519,    0,  113,    0,  519,  382,  383,    0,    0,    0, 
+          370,  371,  372,  373,  374,  375,  376,  628,  378,  379, 
+          521,    0,  113,    0,  521,  382,  383,    0,    0,    0, 
             0,   98,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,  384,    0,  385,    0,  386,  387,  388,  389,  390, 
-          391,  392,  519,  393,    0,    0,    0,    0,    0,    0, 
+          391,  392,  521,  393,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,   98,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  134,   98,    0,    0,    0,    0,  619,  619,  619, 
-            0,  619,  516,  516,  516,  619,  619,    0,  516,  516, 
-          619,  516,  619,  619,  619,  619,  619,  619,  619,    0, 
-          619,    0,  523,  619,  619,  619,  619,  619,  619,  619, 
-          516,  516,  619,  516,  516,  516,  516,  516,  135,  619, 
-          134,    0,  619,  619,  619,    0,  619,  619,  619,  619, 
-          619,  619,  619,  619,  619,  619,  619,  516,  516,  516, 
-          516,  516,  516,  516,  516,  516,  516,  516,  516,  516, 
-          516,    0,    0,  516,  516,  516,  516,  619,  528,    0, 
-          619,  619,  516,  619,  619,    0,  619,  135,  619,  516, 
-          619,  516,  619,  516,  516,  516,  516,  516,  516,  516, 
-          619,  516,  619,  516,    0,  619,  619,  619,  619,  619, 
-          619,    0,    0,    0,  619,    0,  619,  619,    0,  619, 
-          619,  619,  619,    0,  619,  619,  619,  516,  620,  620, 
-          620,    0,  620,  519,  519,  519,  620,  620,    0,  519, 
-          519,  620,  519,  620,  620,  620,  620,  620,  620,  620, 
-            0,  620,    0,    0,  620,  620,  620,  620,  620,  620, 
-          620,  519,  519,  620,  519,  519,  519,  519,  519,    0, 
-          620,  104,    0,  620,  620,  620,    0,  620,  620,  620, 
-          620,  620,  620,  620,  620,  620,  620,  620,  519,  519, 
-          519,  519,  519,  519,  519,  519,  519,  519,  519,  519, 
-          519,  519,    0,    0,  519,  519,  519,  519,  620,  531, 
-           98,  620,  620,  519,  620,  620,    0,  620,  622,  620, 
-          519,  620,  519,  620,  519,  519,  519,  519,  519,  519, 
-          519,  620,  519,  620,  519,    0,  620,  620,  620,  620, 
-          620,  620,    0,    0,  626,  620,    0,  620,  620,    0, 
-          620,  620,  620,  620,  626,  620,  620,  620,  519,  523, 
-            0,    0,    0,    0,    0,    0,  523,  523,    0,    0, 
+            0,  134,   98,    0,    0,    0,    0,  621,  621,  621, 
+            0,  621,  518,  518,  518,  621,  621,    0,  518,  518, 
+          621,  518,  621,  621,  621,  621,  621,  621,  621,    0, 
+          621,    0,  525,  621,  621,  621,  621,  621,  621,  621, 
+          518,  518,  621,  518,  518,  518,  518,  518,  135,  621, 
+          134,    0,  621,  621,  621,    0,  621,  621,  621,  621, 
+          621,  621,  621,  621,  621,  621,  621,  518,  518,  518, 
+          518,  518,  518,  518,  518,  518,  518,  518,  518,  518, 
+          518,    0,    0,  518,  518,  518,  518,  621,  530,    0, 
+          621,  621,  518,  621,  621,    0,  621,  135,  621,  518, 
+          621,  518,  621,  518,  518,  518,  518,  518,  518,  518, 
+          621,  518,  621,  518,    0,  621,  621,  621,  621,  621, 
+          621,    0,    0,    0,  621,    0,  621,  621,    0,  621, 
+          621,  621,  621,    0,  621,  621,  621,  518,  622,  622, 
+          622,    0,  622,  521,  521,  521,  622,  622,    0,  521, 
+          521,  622,  521,  622,  622,  622,  622,  622,  622,  622, 
+            0,  622,    0,    0,  622,  622,  622,  622,  622,  622, 
+          622,  521,  521,  622,  521,  521,  521,  521,  521,    0, 
+          622,  104,    0,  622,  622,  622,    0,  622,  622,  622, 
+          622,  622,  622,  622,  622,  622,  622,  622,  521,  521, 
+          521,  521,  521,  521,  521,  521,  521,  521,  521,  521, 
+          521,  521,    0,    0,  521,  521,  521,  521,  622,  533, 
+           98,  622,  622,  521,  622,  622,    0,  622,  624,  622, 
+          521,  622,  521,  622,  521,  521,  521,  521,  521,  521, 
+          521,  622,  521,  622,  521,    0,  622,  622,  622,  622, 
+          622,  622,    0,    0,  628,  622,    0,  622,  622,    0, 
+          622,  622,  622,  622,  628,  622,  622,  622,  521,  525, 
+            0,    0,    0,    0,    0,    0,  525,  525,    0,    0, 
             0,    0,    0,   98,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,  134,  105,  134, 
           134,  134,  134,  134,    0,    0,    0,    0,  134,    0, 
-            0,    0,    0,  626,    0,  124,    0,  626,    0,  516, 
-            0,    0,    0,    0,    0,    0,    0,  516,    0,    0, 
+            0,    0,    0,  628,    0,  124,    0,  628,    0,  518, 
+            0,    0,    0,    0,    0,    0,    0,  518,    0,    0, 
             0,  134,  134,    0,    0,    0,    0,    0,    0,  134, 
-          134,  134,  134,    0,  135,  626,  135,  135,  135,  135, 
+          134,  134,  134,    0,  135,  628,  135,  135,  135,  135, 
           135,    0,    0,    0,    0,  135,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  519,    0,    0,    0, 
-            0,    0,    0,    0,  519,    0,    0,  134,  135,  135, 
-            0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  521,    0,    0,    0, 
+            0,    0,    0,    0,  521,    0,    0,  134,  135,  135, 
+            0,    0,    0,    0,    0,  624,  135,  135,  135,  135, 
+            0,    0,    0,    0,    0,  624,    0,    0,   99,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  123,  624,    0,    0, 
+            0,    0,    0,    0,  135,    0,    0,    0,    0,  104, 
+            0,    0,   99,    0,    0,    0,    0,    0,    0,    0, 
       };
    }
 
    private static final short[] yyTable2() {
       return new short[] {
 
-            0,  622,  135,  135,  135,  135,    0,    0,    0,    0, 
-            0,  622,    0,    0,   99,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  123,  622,    0,    0,    0,    0,    0,    0, 
-          135,    0,    0,    0,    0,  104,    0,    0,   99,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          622,    0,  123,    0,  622,   99,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  622,    0,    0,    0,    0,    0,    0,  622,  622, 
-            0,    0,  622,    0,  622,  524,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  622,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  622,  622,  622, 
-            0,  622,  626,  626,  626,  622,  622,    0,  626,  626, 
-          622,  626,  622,  622,  622,  622,  622,  622,  622,    0, 
-          626,    0,    0,  622,  622,  622,  622,  622,  622,  622, 
-          626,  626,  622,  626,  626,  626,  626,  626,    0,  622, 
-          106,    0,  622,  622,  622,    0,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  626,  626,  626, 
-          626,  626,  626,  626,  626,  626,  626,  626,  626,  626, 
-          626,    0,    0,  626,  626,  626,  626,  622,    0,    0, 
-          622,  622,  626,  622,  622,    0,  622,  623,  622,  626, 
-          622,  626,  622,  626,  626,  626,  626,  626,  626,  626, 
-          622,  626,  626,  626,    0,  622,  622,  622,  622,  622, 
-          622,    0,    0,    0,  622,    0,  622,  622,    0,  622, 
-          622,  622,  622,    0,  622,  622,  622,  626,  622,  622, 
-          622,    0,  622,  622,  622,  622,  622,  622,    0,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-            0,  622,    0,   99,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,    0, 
-          622,    0,    0,  622,  622,  622,    0,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  524,    0,  622,  622,  622,  622,  622,  524, 
-          524,  622,  622,  622,  622,  622,   99,  622,    0,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,    0,  622,  622,  622,  622, 
-          622,  622,    0,    0,  623,  622,    0,  622,  622,    0, 
-          622,  622,  622,  622,  623,  622,  622,  622,  622,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  125,  623,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  106,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  623,    0,  125,    0,  623,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  623,    0,    0,    0,    0,    0, 
-            0,  623,  623,    0,    0,  623,    0,  623,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  610,  611,    0,    0,  612,    0,    0,  623,  160, 
-          161,    0,  162,  163,  164,  165,  166,  167,  168,    0, 
-            0,  169,  170,    0,    0,  626,  171,  172,  173,  174, 
-            0,    0,    0,    0,    0,  626,  287,    0,  101,    0, 
-            0,    0,    0,  176,  177,    0,  178,  179,  180,  181, 
-          182,  183,  184,  185,  186,  187,  188,    0,    0,  189, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  626, 
-            0,    0,  101,    0,    0,    0,    0,    0,    0,    0, 
-            0,  190,    0,    0,  626,    0,  124,    0,  626,  101, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  626,    0,    0,  526, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  623,  623,  623,    0,  623,  623,  623,  623,  623, 
-          623,    0,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,    0,  623,    0,    0,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,    0,  623,    0,    0,  623,  623,  623,    0, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,    0,    0,  623,  623,  623, 
-          623,  623,    0,    0,  623,  623,  623,  623,  623,    0, 
-          623,    0,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,    0,  623, 
-          623,  623,  623,  623,  623,    0,    0,    0,  623,    0, 
-          623,  623,    0,  623,  623,  623,  623,    0,  623,  623, 
-          623,  623,  622,  622,  622,    0,  622,  626,  626,  626, 
-          622,  622,    0,  626,  626,  622,  626,  622,  622,  622, 
-          622,  622,  622,  622,    0,  626,    0,  101,  622,  622, 
-          622,  622,  622,  622,  622,  626,  626,  622,  626,  626, 
-          626,  626,  626,    0,  622,    0,    0,  622,  622,  622, 
-            0,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  626,  626,  626,  626,  626,  626,  626,  626, 
-          626,  626,  626,  626,  626,  626,  526,    0,  626,  626, 
-          626,  626,  622,  526,  526,  622,  622,  626,  622,  622, 
-          101,  622,    0,  622,  626,  622,  626,  622,  626,  626, 
-          626,  626,  626,  626,  626,  622,  626,  626,  626,    0, 
-          622,  622,  622,  622,  622,  622,    0,    0,  622,  622, 
-            0,  622,  622,    0,  622,  622,  622,  622,  622,  622, 
-          622,  622,  626,    0,    0,    0,    0,    0,    0,    0, 
-          618,  619,    0,    0,  620,    0,    0,    0,  160,  161, 
-            0,  162,  163,  164,  165,  166,  167,  168,    0,    0, 
-          169,  170,  622,    0,    0,  171,  172,  173,  174,    0, 
-            0,    0,    0,    0,    0,  287,    0,  622,    0,  123, 
-            0,  622,  176,  177,    0,  178,  179,  180,  181,  182, 
-          183,  184,  185,  186,  187,  188,    0,    0,  189,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  622, 
-            0,    0,    0,    0,    0,    0,    0,    0,  675,  611, 
-          190,    0,  676,    0,    0,    0,  160,  161,    0,  162, 
-          163,  164,  165,  166,  167,  168,    0,    0,  169,  170, 
-            0,    0,    0,  171,  172,  173,  174,    0,    0,  623, 
-            0,    0,    0,  287,    0,    0,    0,    0,    0,  623, 
-          176,  177,  100,  178,  179,  180,  181,  182,  183,  184, 
-          185,  186,  187,  188,  678,  619,  189,    0,  679,    0, 
-            0,    0,  160,  161,    0,  162,  163,  164,  165,  166, 
-          167,  168,    0,  623,  169,  170,  100,    0,  190,  171, 
-          172,  173,  174,    0,    0,    0,    0,    0,  623,  287, 
-          125,    0,  623,  100,    0,    0,  176,  177,    0,  178, 
-          179,  180,  181,  182,  183,  184,  185,  186,  187,  188, 
-            0,    0,  189,    0,    0,    0,    0,    0,    0,    0, 
-          623,    0,    0,  525,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  190,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  622,  622,  622,    0,  622, 
-          622,  622,  622,  622,  622,    0,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,    0,  622,    0, 
-            0,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,    0,  622,    0,    0, 
-          622,  622,  622,    0,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,    0, 
-            0,  622,  622,  622,  622,  622,    0,    0,  622,  622, 
-          622,  622,  622,    0,  622,    0,  622,  622,  622,  622, 
-          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, 
-          622,  622,    0,  622,  622,  622,  622,  622,  622,    0, 
-            0,    0,  622,    0,  622,  622,    0,  622,  622,  622, 
-          622,    0,  622,  622,  622,  622,  623,  623,  623,    0, 
-          623,  623,  623,  623,  623,  623,    0,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,    0,  623, 
-            0,  100,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,    0,  623,    0, 
-            0,  623,  623,  623,    0,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          525,    0,  623,  623,  623,  623,  623,  525,  525,  623, 
-          623,  623,  623,  623,  100,  623,    0,  623,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          623,  623,  623,    0,  623,  623,  623,  623,  623,  623, 
-            0,    0,  316,  623,    0,  623,  623,    0,  623,  623, 
-          623,  623,  316,  623,  623,  623,  623,    0,    0,    0, 
-            0,    0,    0,    0,  688,  611,    0,    0,  689,    0, 
+            0,    0,    0,    0,  624,    0,  123,    0,  624,   99, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  624,    0,    0,    0,    0, 
+            0,    0,  624,  624,    0,    0,  624,    0,  624,  526, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  624, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  624,  624,  624,    0,  624,  628,  628,  628,  624, 
+          624,    0,  628,  628,  624,  628,  624,  624,  624,  624, 
+          624,  624,  624,    0,  628,    0,    0,  624,  624,  624, 
+          624,  624,  624,  624,  628,  628,  624,  628,  628,  628, 
+          628,  628,    0,  624,  106,    0,  624,  624,  624,    0, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  628,  628,  628,  628,  628,  628,  628,  628,  628, 
+          628,  628,  628,  628,  628,    0,    0,  628,  628,  628, 
+          628,  624,    0,    0,  624,  624,  628,  624,  624,    0, 
+          624,  625,  624,  628,  624,  628,  624,  628,  628,  628, 
+          628,  628,  628,  628,  624,  628,  628,  628,    0,  624, 
+          624,  624,  624,  624,  624,    0,    0,    0,  624,    0, 
+          624,  624,    0,  624,  624,  624,  624,    0,  624,  624, 
+          624,  628,  624,  624,  624,    0,  624,  624,  624,  624, 
+          624,  624,    0,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,    0,  624,    0,   99,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,    0,  624,    0,    0,  624,  624,  624, 
+            0,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  526,    0,  624,  624, 
+          624,  624,  624,  526,  526,  624,  624,  624,  624,  624, 
+           99,  624,    0,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,    0, 
+          624,  624,  624,  624,  624,  624,    0,    0,  625,  624, 
+            0,  624,  624,    0,  624,  624,  624,  624,  625,  624, 
+          624,  624,  624,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  125, 
+          625,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  106,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  625,    0,  125, 
+            0,  625,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  625,    0, 
+            0,    0,    0,    0,    0,  625,  625,    0,    0,  625, 
+            0,  625,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  610,  611,    0,    0,  612, 
+            0,    0,  625,  160,  161,    0,  162,  163,  164,  165, 
+          166,  167,  168,    0,    0,  169,  170,    0,    0,  628, 
+          171,  172,  173,  174,    0,    0,    0,    0,    0,  628, 
+          287,    0,  101,    0,    0,    0,    0,  176,  177,    0, 
+          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, 
+          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  628,    0,    0,  101,    0,    0,    0, 
+            0,    0,    0,    0,    0,  190,    0,    0,  628,    0, 
+          124,    0,  628,  101,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          628,    0,    0,  528,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  625,  625,  625,    0,  625, 
+          625,  625,  625,  625,  625,    0,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,    0,  625,    0, 
+            0,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,    0,  625,    0,    0, 
+          625,  625,  625,    0,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,    0, 
+            0,  625,  625,  625,  625,  625,    0,    0,  625,  625, 
+          625,  625,  625,    0,  625,    0,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,    0,  625,  625,  625,  625,  625,  625,    0, 
+            0,    0,  625,    0,  625,  625,    0,  625,  625,  625, 
+          625,    0,  625,  625,  625,  625,  624,  624,  624,    0, 
+          624,  628,  628,  628,  624,  624,    0,  628,  628,  624, 
+          628,  624,  624,  624,  624,  624,  624,  624,    0,  628, 
+            0,  101,  624,  624,  624,  624,  624,  624,  624,  628, 
+          628,  624,  628,  628,  628,  628,  628,    0,  624,    0, 
+            0,  624,  624,  624,    0,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  628,  628,  628,  628, 
+          628,  628,  628,  628,  628,  628,  628,  628,  628,  628, 
+          528,    0,  628,  628,  628,  628,  624,  528,  528,  624, 
+          624,  628,  624,  624,  101,  624,    0,  624,  628,  624, 
+          628,  624,  628,  628,  628,  628,  628,  628,  628,  624, 
+          628,  628,  628,    0,  624,  624,  624,  624,  624,  624, 
+            0,    0,  624,  624,    0,  624,  624,    0,  624,  624, 
+          624,  624,  624,  624,  624,  624,  628,    0,    0,    0, 
+            0,    0,    0,    0,  618,  619,    0,    0,  620,    0, 
             0,    0,  160,  161,    0,  162,  163,  164,  165,  166, 
-          167,  168,    0,    0,  169,  170,  107,    0,    0,  171, 
+          167,  168,    0,    0,  169,  170,  624,    0,    0,  171, 
           172,  173,  174,    0,    0,    0,    0,    0,    0,  287, 
-            0,  316,    0,  126,    0,  316,  176,  177,    0,  178, 
+            0,  624,    0,  123,    0,  624,  176,  177,    0,  178, 
           179,  180,  181,  182,  183,  184,  185,  186,  187,  188, 
             0,    0,  189,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  316,    0,    0,    0,    0,    0,    0, 
-            0,    0,  692,  619,  190,    0,  693,    0,    0,    0, 
+            0,    0,    0,  624,    0,    0,    0,    0,    0,    0, 
+            0,    0,  675,  611,  190,    0,  676,    0,    0,    0, 
           160,  161,    0,  162,  163,  164,  165,  166,  167,  168, 
             0,    0,  169,  170,    0,    0,    0,  171,  172,  173, 
-          174,    0,    0,  316,    0,    0,    0,  287,    0,    0, 
-            0,    0,    0,  316,  176,  177,  102,  178,  179,  180, 
-          181,  182,  183,  184,  185,  186,  187,  188,  721,  611, 
-          189,    0,  722,    0,    0,    0,  160,  161,    0,  162, 
-          163,  164,  165,  166,  167,  168,    0,  316,  169,  170, 
-          102,    0,  190,  171,  172,  173,  174,    0,    0,    0, 
-            0,    0,  316,  287,  126,    0,  316,  102,    0,    0, 
+          174,    0,    0,  625,    0,    0,    0,  287,    0,    0, 
+            0,    0,    0,  625,  176,  177,  100,  178,  179,  180, 
+          181,  182,  183,  184,  185,  186,  187,  188,  678,  619, 
+          189,    0,  679,    0,    0,    0,  160,  161,    0,  162, 
+          163,  164,  165,  166,  167,  168,    0,  625,  169,  170, 
+          100,    0,  190,  171,  172,  173,  174,    0,    0,    0, 
+            0,    0,  625,  287,  125,    0,  625,  100,    0,    0, 
           176,  177,    0,  178,  179,  180,  181,  182,  183,  184, 
           185,  186,  187,  188,    0,    0,  189,    0,    0,    0, 
-            0,    0,    0,    0,  316,    0,    0,  527,    0,    0, 
+            0,    0,    0,    0,  625,    0,    0,  527,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,  190,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  623, 
-          623,  623,    0,  623,  316,  316,  316,  623,  623,    0, 
-          316,  316,  623,  316,  623,  623,  623,  623,  623,  623, 
-          623,    0,    0,    0,    0,  623,  623,  623,  623,  623, 
-          623,  623,  316,  316,  623,  316,  316,  316,  316,  316, 
-            0,  623,    0,    0,  623,  623,  623,    0,  623,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  316, 
-          316,  316,  316,  316,  316,  316,  316,  316,  316,  316, 
-          316,  316,  316,    0,    0,  316,  316,  316,  316,  623, 
-            0,    0,  623,  623,  316,  623,  623,    0,  623,    0, 
-          623,  316,  623,  316,  623,  316,  316,  316,  316,  316, 
-          316,  316,  623,  316,    0,  316,    0,  623,  623,  623, 
-          623,  623,  623,    0,    0,  648,  623,    0,  623,  623, 
-            0,  623,  623,  623,  623,  648,  623,  623,  623,  316, 
-          623,  623,  623,    0,  623,  316,  316,  316,  623,  623, 
-            0,  316,  316,  623,  316,  623,  623,  623,  623,  623, 
-          623,  623,    0,    0,    0,  102,  623,  623,  623,  623, 
-          623,  623,  623,  316,  316,  623,  316,  316,  316,  316, 
-          316,    0,  623,    0,  648,  623,  623,  623,    0,  623, 
-          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, 
-          316,  316,  316,  316,  316,  316,  316,  316,  316,  316, 
-          316,  316,  316,  316,  527,    0,  316,  316,  316,  316, 
-          623,  527,  527,  623,  623,  316,  623,  623,  102,  623, 
-            0,  623,  316,  623,  316,  623,  316,  316,  316,  316, 
-          316,  316,  316,  623,  316,    0,  316,    0,  623,  623, 
-          623,  623,  623,  623,    0,    0,  440,  623,    0,  623, 
-          623,    0,  623,  623,  623,  623,  440,  623,  623,  623, 
-          316,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  104,    0, 
-          440,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  440,  440,    0,  122,    0,  440, 
-            0,    0,    0,  626,    0,    0,    0,    0,    0,    0, 
-            0,    0,  104,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  440,    0,  104, 
-            0,    0,    0,    0,    0,    0,    0,  626,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  626,    0,    0,    0,    0,    0,    0,  622, 
-            0,    0,  283,  283,  283,    0,  283,  648,  648,  648, 
-          283,  283,  648,  648,  648,  283,  648,  283,  283,  283, 
-          283,  283,  283,  283,  626,  648,  648,    0,  283,  283, 
-          283,  283,  283,  283,  283,  648,  648,  283,  648,  648, 
-          648,  648,  648,    0,  283,    0,    0,  283,  283,  283, 
-            0,  283,  283,  283,  283,  283,  283,  283,  283,  283, 
-          283,  283,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  648,    0,    0,    0,    0,    0,    0, 
-          648,  648,  283,    0,    0,  283,    0,  648,  283,  283, 
-            0,  283,  522,  283,    0,  283,    0,  283,    0,    0, 
-            0,    0,  522,    0,    0,  283,    0,  648,  648,    0, 
-          283,  283,  283,  283,  283,  283,    0,    0,    0,  283, 
-            0,  283,  283,    0,  283,  283,  283,  283,    0,  283, 
-          283,  283,  648,    0,    0,    0,  522,    0,  440,  440, 
-          440,    0,    0,  440,  440,  440,    0,  440,    0,    0, 
-          522,  522,    0,  116,    0,  522,  440,  440,  440,    0, 
-            0,    0,    0,    0,    0,    0,  440,  440,    0,  440, 
-          440,  440,  440,  440,    0,    0,    0,    0,    0,    0, 
-            0,  440,    0,  522,    0,    0,    0,  104,  622,    0, 
-            0,    0,    0,  440,  440,  440,  440,  440,  440,  440, 
-          440,  440,  440,  440,  440,  440,  440,    0,    0,  440, 
-          440,  440,  440,  626,  521,  440,    0,    0,  440,    0, 
-            0,  440,    0,  440,  521,  440,    0,  440,    0,  440, 
-          440,  440,  440,  440,  440,  440,  622,  440,  440,  440, 
-            0,    0,    0,  622,  622,    0,    0,    0,    0,  622, 
-          104,  440,    0,    0,    0,    0,    0,    0,  521,    0, 
-            0,  626,    0,  440,    0,    0,    0,    0,  626,  626, 
-          622,    0,  521,  521,  622,  115,    0,  521,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  626,    0,    0,  626,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  521,    0,    0,    0,  111, 
-            0,    0,    0,    0,    0,    0,    0,    0,  106,    0, 
-            0,    0,  293,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  293,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  106,    0,  522,  522,  522,  114,  111,  522, 
-          522,  522,    0,  522,    0,    0,  288,    0,    0,  106, 
-            0,    0,    0,  522,  522,    0,    0,    0,    0,    0, 
-            0,  293,  522,  522,    0,  522,  522,  522,  522,  522, 
-          517,    0,    0,    0,    0,    0,    0,  522,  523,  623, 
-            0,    0,    0,    0,    0,    0,  114,    0,  523,  522, 
-          522,  522,  522,  522,  522,  522,  522,  522,  522,  522, 
-          522,  522,  522,    0,    0,  522,  522,  522,  522,    0, 
-          534,  522,    0,    0,  522,    0,    0,  522,  520,  522, 
-            0,  522,  523,  522,    0,  522,  522,  522,  522,  522, 
-          522,  522,    0,  522,    0,  522,  523,  523,    0,  117, 
-            0,  523,    0,    0,    0,    0,    0,  522,    0,    0, 
-            0,    0,    0,    0,    0,    0,  521,  521,  521,  522, 
-            0,  521,  521,  521,    0,  521,    0,    0,    0,  523, 
-            0,    0,    0,    0,    0,  521,  521,    0,    0,    0, 
-            0,    0,    0,    0,  521,  521,    0,  521,  521,  521, 
-          521,  521,    0,    0,    0,    0,    0,    0,    0,  521, 
-          524,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          524,  521,  521,  521,  521,  521,  521,  521,  521,  521, 
-          521,  521,  521,  521,  521,    0,    0,  521,  521,  521, 
-          521,    0,  533,  521,    0,    0,  521,    0,    0,  521, 
-            0,  521,    0,  521,  524,  521,  111,  521,  521,  521, 
-          521,  521,  521,  521,    0,  521,    0,  521,  524,  524, 
-            0,  118,    0,  524,  293,  293,  293,  106,  623,  521, 
-          293,  293,    0,  293,    0,    0,    0,    0,    0,    0, 
-            0,  521,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  524,    0,    0,  114,  293,  293,  293,  293,  293, 
-            0,    0,    0,    0,    0,   93,    0,  517,   44,  128, 
-            0,    0,    0,    0,  517,  517,  623,    0,   44,    0, 
-            0,    0,    0,  623,  623,    0,    0,    0,    0,  623, 
-          106,    0,    0,    0,    0,    0,    0,    0,    0,   93, 
-          523,  523,  523,    0,  293,  523,  523,  523,    0,  523, 
-          623,    0,    0,    0,    0,  520,   93,    0,  128,  523, 
-          523,    0,  520,  520,    0,  293,    0,   44,  523,  523, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  624, 
+          624,  624,    0,  624,  624,  624,  624,  624,  624,    0, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,    0,  624,    0,    0,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+            0,  624,    0,    0,  624,  624,  624,    0,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,    0,    0,  624,  624,  624,  624,  624, 
+            0,    0,  624,  624,  624,  624,  624,    0,  624,    0, 
+          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, 
+          624,  624,  624,  624,  624,  624,    0,  624,  624,  624, 
+          624,  624,  624,    0,    0,    0,  624,    0,  624,  624, 
+            0,  624,  624,  624,  624,    0,  624,  624,  624,  624, 
+          625,  625,  625,    0,  625,  625,  625,  625,  625,  625, 
+            0,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,    0,  625,    0,  100,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,    0,  625,    0,    0,  625,  625,  625,    0,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  527,    0,  625,  625,  625,  625, 
+          625,  527,  527,  625,  625,  625,  625,  625,  100,  625, 
+            0,  625,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  625,  625,  625,    0,  625,  625, 
+          625,  625,  625,  625,    0,    0,  318,  625,    0,  625, 
+          625,    0,  625,  625,  625,  625,  318,  625,  625,  625, 
+          625,    0,    0,    0,    0,    0,    0,    0,  688,  611, 
+            0,    0,  689,    0,    0,    0,  160,  161,    0,  162, 
+          163,  164,  165,  166,  167,  168,    0,    0,  169,  170, 
+          107,    0,    0,  171,  172,  173,  174,    0,    0,    0, 
+            0,    0,    0,  287,    0,  318,    0,  126,    0,  318, 
+          176,  177,    0,  178,  179,  180,  181,  182,  183,  184, 
+          185,  186,  187,  188,    0,    0,  189,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  318,    0,    0, 
+            0,    0,    0,    0,    0,    0,  692,  619,  190,    0, 
+          693,    0,    0,    0,  160,  161,    0,  162,  163,  164, 
+          165,  166,  167,  168,    0,    0,  169,  170,    0,    0, 
+            0,  171,  172,  173,  174,    0,    0,  318,    0,    0, 
+            0,  287,    0,    0,    0,    0,    0,  318,  176,  177, 
+          102,  178,  179,  180,  181,  182,  183,  184,  185,  186, 
+          187,  188,  721,  611,  189,    0,  722,    0,    0,    0, 
+          160,  161,    0,  162,  163,  164,  165,  166,  167,  168, 
+            0,  318,  169,  170,  102,    0,  190,  171,  172,  173, 
+          174,    0,    0,    0,    0,    0,  318,  287,  126,    0, 
+          318,  102,    0,    0,  176,  177,    0,  178,  179,  180, 
+          181,  182,  183,  184,  185,  186,  187,  188,    0,    0, 
+          189,    0,    0,    0,    0,    0,    0,    0,  318,    0, 
+            0,  529,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  190,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  625,  625,  625,    0,  625,  318,  318, 
+          318,  625,  625,    0,  318,  318,  625,  318,  625,  625, 
+          625,  625,  625,  625,  625,    0,    0,    0,    0,  625, 
+          625,  625,  625,  625,  625,  625,  318,  318,  625,  318, 
+          318,  318,  318,  318,    0,  625,    0,    0,  625,  625, 
+          625,    0,  625,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  318,  318,  318,  318,  318,  318,  318, 
+          318,  318,  318,  318,  318,  318,  318,    0,    0,  318, 
+          318,  318,  318,  625,    0,    0,  625,  625,  318,  625, 
+          625,    0,  625,    0,  625,  318,  625,  318,  625,  318, 
+          318,  318,  318,  318,  318,  318,  625,  318,    0,  318, 
+            0,  625,  625,  625,  625,  625,  625,    0,    0,  650, 
+          625,    0,  625,  625,    0,  625,  625,  625,  625,  650, 
+          625,  625,  625,  318,  625,  625,  625,    0,  625,  318, 
+          318,  318,  625,  625,    0,  318,  318,  625,  318,  625, 
+          625,  625,  625,  625,  625,  625,    0,    0,    0,  102, 
+          625,  625,  625,  625,  625,  625,  625,  318,  318,  625, 
+          318,  318,  318,  318,  318,    0,  625,    0,  650,  625, 
+          625,  625,    0,  625,  625,  625,  625,  625,  625,  625, 
+          625,  625,  625,  625,  318,  318,  318,  318,  318,  318, 
+          318,  318,  318,  318,  318,  318,  318,  318,  529,    0, 
+          318,  318,  318,  318,  625,  529,  529,  625,  625,  318, 
+          625,  625,  102,  625,    0,  625,  318,  625,  318,  625, 
+          318,  318,  318,  318,  318,  318,  318,  625,  318,    0, 
+          318,    0,  625,  625,  625,  625,  625,  625,    0,    0, 
+          442,  625,    0,  625,  625,    0,  625,  625,  625,  625, 
+          442,  625,  625,  625,  318,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  104,    0,  442,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  442,  442, 
+            0,  122,    0,  442,    0,    0,    0,  628,    0,    0, 
+            0,    0,    0,    0,    0,    0,  104,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  442,    0,  104,    0,    0,    0,    0,    0,    0, 
+            0,  628,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  628,    0,    0,    0, 
+            0,    0,    0,  624,    0,    0,  285,  285,  285,    0, 
+          285,  650,  650,  650,  285,  285,  650,  650,  650,  285, 
+          650,  285,  285,  285,  285,  285,  285,  285,  628,  650, 
+          650,    0,  285,  285,  285,  285,  285,  285,  285,  650, 
+          650,  285,  650,  650,  650,  650,  650,    0,  285,    0, 
+            0,  285,  285,  285,    0,  285,  285,  285,  285,  285, 
+          285,  285,  285,  285,  285,  285,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  650,    0,    0, 
+            0,    0,    0,    0,  650,  650,  285,    0,    0,  285, 
+            0,  650,  285,  285,    0,  285,  524,  285,    0,  285, 
+            0,  285,    0,    0,    0,    0,  524,    0,    0,  285, 
+            0,  650,  650,    0,  285,  285,  285,  285,  285,  285, 
+            0,    0,    0,  285,    0,  285,  285,    0,  285,  285, 
+          285,  285,    0,  285,  285,  285,  650,    0,    0,    0, 
+          524,    0,  442,  442,  442,    0,    0,  442,  442,  442, 
+            0,  442,    0,    0,  524,  524,    0,  116,    0,  524, 
+          442,  442,  442,    0,    0,    0,    0,    0,    0,    0, 
+          442,  442,    0,  442,  442,  442,  442,  442,    0,    0, 
+            0,    0,    0,    0,    0,  442,    0,  524,    0,    0, 
+            0,  104,  624,    0,    0,    0,    0,  442,  442,  442, 
+          442,  442,  442,  442,  442,  442,  442,  442,  442,  442, 
+          442,    0,    0,  442,  442,  442,  442,  628,  523,  442, 
+            0,    0,  442,    0,    0,  442,    0,  442,  523,  442, 
+            0,  442,    0,  442,  442,  442,  442,  442,  442,  442, 
+          624,  442,  442,  442,    0,    0,    0,  624,  624,    0, 
+            0,    0,    0,  624,  104,  442,    0,    0,    0,    0, 
+            0,    0,  523,    0,    0,  628,    0,  442,    0,    0, 
+            0,    0,  628,  628,  624,    0,  523,  523,  624,  115, 
+            0,  523,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  628,    0,    0,  628, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  523, 
+            0,    0,    0,  111,    0,    0,    0,    0,    0,    0, 
+            0,    0,  106,    0,    0,    0,  295,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  295,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  106,    0,  524,  524, 
+          524,  114,  111,  524,  524,  524,    0,  524,    0,    0, 
+          290,    0,    0,  106,    0,    0,    0,  524,  524,    0, 
+            0,    0,    0,    0,    0,  295,  524,  524,    0,  524, 
+          524,  524,  524,  524,  519,    0,    0,    0,    0,    0, 
+            0,  524,  525,  625,    0,    0,    0,    0,    0,    0, 
+          114,    0,  525,  524,  524,  524,  524,  524,  524,  524, 
+          524,  524,  524,  524,  524,  524,  524,    0,    0,  524, 
+          524,  524,  524,    0,  536,  524,    0,    0,  524,    0, 
+            0,  524,  522,  524,    0,  524,  525,  524,    0,  524, 
+          524,  524,  524,  524,  524,  524,    0,  524,    0,  524, 
+          525,  525,    0,  117,    0,  525,    0,    0,    0,    0, 
+            0,  524,    0,    0,    0,    0,    0,    0,    0,    0, 
+          523,  523,  523,  524,    0,  523,  523,  523,    0,  523, 
+            0,    0,    0,  525,    0,    0,    0,    0,    0,  523, 
+          523,    0,    0,    0,    0,    0,    0,    0,  523,  523, 
             0,  523,  523,  523,  523,  523,    0,    0,    0,    0, 
-            0,    0,    0,  523,  526,    0,  518,    0,    0,  293, 
-          306,    0,    0,    0,  526,  523,  523,  523,  523,  523, 
+            0,    0,    0,  523,  526,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  526,  523,  523,  523,  523,  523, 
           523,  523,  523,  523,  523,  523,  523,  523,  523,    0, 
             0,  523,  523,  523,  523,    0,  535,  523,    0,    0, 
           523,    0,    0,  523,    0,  523,    0,  523,  526,  523, 
-            0,  523,  523,  523,  523,  523,  523,  523,    0,  523, 
-            0,  523,  526,  526,    0,  120,    0,  526,    0,    0, 
-            0,    0,    0,  523,    0,    0,    0,    0,    0,    0, 
-            0,    0,  524,  524,  524,  523,    0,  524,  524,  524, 
-            0,  524,    0,    0,    0,  526,    0,    0,    0,    0, 
-            0,  524,  524,    0,    0,    0,    0,    0,    0,    0, 
-          524,  524,    0,  524,  524,  524,  524,  524,    0,    0, 
-            0,    0,    0,    0,    0,  524,  525,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  525,  524,  524,  524, 
-          524,  524,  524,  524,  524,  524,  524,  524,  524,  524, 
-          524,    0,    0,  524,  524,  524,  524,    0,  536,  524, 
-            0,    0,  524,    0,    0,  524,    0,  524,    0,  524, 
-          525,  524,    0,  524,  524,  524,  524,  524,  524,  524, 
-            0,  524,  127,  524,  525,  525,  128,  119,    0,  525, 
-           44,   44,   44,    0,   93,  524,   44,   44,    0,   44, 
-          124,    0,    0,    0,    0,    0,    0,  524,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  525,    0,    0, 
-            0,   44,   44,   44,   44,   92,    0,    0,    0,    0, 
-            0,  127,    0,    0,    0,  123,    0,    0,    0,    0, 
-            0,    0,    0,  518,    0,    0,    0,  306,    0,  124, 
-          518,  518,    0,    0,  306,  306,    0,   93,    0,   92, 
-            0,    0,    0,  317,    0,    0,  526,  526,  526,    0, 
-           44,  526,  526,  526,    0,  526,   92,    0,    0,    0, 
-            0,  626,    0,    0,  123,  526,  526,    0,    0,    0, 
-            0,   44,    0,    0,  526,  526,    0,  526,  526,  526, 
-          526,  526,    0,    0,    0,    0,  517,    0,    0,  526, 
-          527,    0,    0,    0,    0,   44,  622,    0,    0,    0, 
+          111,  523,  523,  523,  523,  523,  523,  523,    0,  523, 
+            0,  523,  526,  526,    0,  118,    0,  526,  295,  295, 
+          295,  106,  625,  523,  295,  295,    0,  295,    0,    0, 
+            0,    0,    0,    0,    0,  523,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  526,    0,    0,  114,  295, 
+          295,  295,  295,  295,    0,    0,    0,    0,    0,   93, 
+            0,  519,   44,  128,    0,    0,    0,    0,  519,  519, 
+          625,    0,   44,    0,    0,    0,    0,  625,  625,    0, 
+            0,    0,    0,  625,  106,    0,    0,    0,    0,    0, 
+            0,    0,    0,   93,  525,  525,  525,    0,  295,  525, 
+          525,  525,    0,  525,  625,    0,    0,    0,    0,  522, 
+           93,    0,  128,  525,  525,    0,  522,  522,    0,  295, 
+            0,   44,  525,  525,    0,  525,  525,  525,  525,  525, 
+            0,    0,    0,    0,    0,    0,    0,  525,  528,    0, 
+          520,    0,    0,  295,  308,    0,    0,    0,  528,  525, 
+          525,  525,  525,  525,  525,  525,  525,  525,  525,  525, 
+          525,  525,  525,    0,    0,  525,  525,  525,  525,    0, 
+          537,  525,    0,    0,  525,    0,    0,  525,    0,  525, 
+            0,  525,  528,  525,    0,  525,  525,  525,  525,  525, 
+          525,  525,    0,  525,    0,  525,  528,  528,    0,  120, 
+            0,  528,    0,    0,    0,    0,    0,  525,    0,    0, 
+            0,    0,    0,    0,    0,    0,  526,  526,  526,  525, 
+            0,  526,  526,  526,    0,  526,    0,    0,    0,  528, 
+            0,    0,    0,    0,    0,  526,  526,    0,    0,    0, 
+            0,    0,    0,    0,  526,  526,    0,  526,  526,  526, 
+          526,  526,    0,    0,    0,    0,    0,    0,    0,  526, 
+          527,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
           527,  526,  526,  526,  526,  526,  526,  526,  526,  526, 
           526,  526,  526,  526,  526,    0,    0,  526,  526,  526, 
           526,    0,  538,  526,    0,    0,  526,    0,    0,  526, 
             0,  526,    0,  526,  527,  526,    0,  526,  526,  526, 
-          526,  526,  526,  526,    0,  526,    0,  526,  527,  527, 
-            0,  121,    0,  527,    0,    0,    0,    0,    0,  526, 
-            0,    0,    0,    0,    0,    0,    0,    0,  525,  525, 
-          525,  526,    0,  525,  525,  525,    0,  525,    0,    0, 
-            0,  527,    0,    0,    0,    0,    0,  525,  525,    0, 
-            0,    0,    0,    0,    0,    0,  525,  525,    0,  525, 
-          525,  525,  525,  525,    0,    0,    0,    0,    0,    0, 
-            0,  525,  518,    0,    0,    0,    0,    0,    0,  127, 
-            0,    0,  518,  525,  525,  525,  525,  525,  525,  525, 
-          525,  525,  525,  525,  525,  525,  525,  124,    0,  525, 
-          525,  525,  525,    0,  537,  525,    0,    0,  525,    0, 
-          626,  525,    0,  525,    0,  525,  518,  525,    0,  525, 
-          525,  525,  525,  525,  525,  525,    0,  525,    0,  525, 
-          518,  518,  123,  112,   92,  518,    0,    0,    0,    0, 
-          317,  525,    0,    0,    0,  622,    0,  317,  317,    0, 
-            0,    0,    0,  525,    0,    0,    0,    0,  626,    0, 
-            0,    0,    0,  518,    0,  626,  626,    0,    0,    0, 
-            0,  622,    0,    0,    0,    0,    0,   95,    0,    0, 
-            0,  125,    0,  517,    0,    0,    0,    0,    0,    0, 
-          517,  517,  626,  622,    0,    0,    0,   92,    0,    0, 
-          622,  622,    0,    0,    0,    0,  622,    0,    0,    0, 
-            0,   95,  527,  527,  527,    0,    0,  527,  527,  527, 
-            0,  527,    0,    0,    0,    0,    0,  622,   95,    0, 
-          125,  527,  527,    0,    0,    0,    0,    0,    0,    0, 
+          526,  526,  526,  526,    0,  526,  127,  526,  527,  527, 
+          128,  119,    0,  527,   44,   44,   44,    0,   93,  526, 
+           44,   44,    0,   44,  124,    0,    0,    0,    0,    0, 
+            0,  526,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  527,    0,    0,    0,   44,   44,   44,   44,   92, 
+            0,    0,    0,    0,    0,  127,    0,    0,    0,  123, 
+            0,    0,    0,    0,    0,    0,    0,  520,    0,    0, 
+            0,  308,    0,  124,  520,  520,    0,    0,  308,  308, 
+            0,   93,    0,   92,    0,    0,    0,  319,    0,    0, 
+          528,  528,  528,    0,   44,  528,  528,  528,    0,  528, 
+           92,    0,    0,    0,    0,  628,    0,    0,  123,  528, 
+          528,    0,    0,    0,    0,   44,    0,    0,  528,  528, 
+            0,  528,  528,  528,  528,  528,    0,    0,    0,    0, 
+          519,    0,    0,  528,  529,    0,    0,    0,    0,   44, 
+          624,    0,    0,    0,  529,  528,  528,  528,  528,  528, 
+          528,  528,  528,  528,  528,  528,  528,  528,  528,    0, 
+            0,  528,  528,  528,  528,    0,  540,  528,    0,    0, 
+          528,    0,    0,  528,    0,  528,    0,  528,  529,  528, 
+            0,  528,  528,  528,  528,  528,  528,  528,    0,  528, 
+            0,  528,  529,  529,    0,  121,    0,  529,    0,    0, 
+            0,    0,    0,  528,    0,    0,    0,    0,    0,    0, 
+            0,    0,  527,  527,  527,  528,    0,  527,  527,  527, 
+            0,  527,    0,    0,    0,  529,    0,    0,    0,    0, 
+            0,  527,  527,    0,    0,    0,    0,    0,    0,    0, 
           527,  527,    0,  527,  527,  527,  527,  527,    0,    0, 
-            0,    0,    0,    0,    0,  527,  517,    0,  520,    0, 
-            0,    0,  623,    0,    0,    0,  517,  527,  527,  527, 
+            0,    0,    0,    0,    0,  527,  520,    0,    0,    0, 
+            0,    0,    0,  127,    0,    0,  520,  527,  527,  527, 
           527,  527,  527,  527,  527,  527,  527,  527,  527,  527, 
-          527,    0,    0,  527,  527,  527,  527,    0,  539,  527, 
-            0,    0,  527,    0,    0,  527,    0,  527,  109,  527, 
-          517,  527,    0,  527,  527,  527,  527,  527,  527,  527, 
-            0,  527,    0,  527,  517,  517,    0,  111,    0,  517, 
-            0,    0,    0,    0,    0,  527,    0,    0,    0,    0, 
-            0,    0,  109,    0,  518,  518,  518,  527,    0,  518, 
-          518,  518,    0,  518,    0,    0,    0,  517,    0,  109, 
-            0,    0,    0,  518,  518,    0,    0,    0,    0,    0, 
-            0,    0,  518,  518,    0,  518,  518,  518,  518,  518, 
-            0,    0,    0,    0,    0,    0,    0,  518,  520,  306, 
-            0,    0,    0,    0,    0,    0,    0,    0,  520,  518, 
-          518,  518,  518,  518,  518,  518,  518,  518,  518,  518, 
-          518,  518,  518,    0,    0,  518,  518,  518,  518,    0, 
-          530,  518,    0,    0,  518,    0,    0,  518,    0,  518, 
-          108,  518,  520,  518,    0,  518,  518,  518,  518,  518, 
-          518,  518,    0,  518,    0,  518,  520,  520,  125,  114, 
-            0,  520,    0,    0,    0,    0,   95,  518,    0,    0, 
-            0,  623,    0,    0,  108,    0,    0,    0,    0,  518, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  520, 
-            0,  108,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  520,    0,    0,    0,  623, 
-            0,  317,  520,  520,    0,    0,  623,  623,    0,   95, 
-            0,    0,  623,    0,    0,    0,    0,    0,  517,  517, 
-          517,    0,    0,  517,  517,  517,    0,  517,    0,    0, 
-            0,    0,    0,  623,    0,    0,    0,  517,  517,    0, 
-            0,    0,    0,    0,    0,    0,  517,  517,    0,  517, 
-          517,  517,  517,  517,    0,    0,    0,    0,    0,    0, 
-            0,  517,  439,    0,    0,    0,    0,  109,    0,    0, 
-            0,    0,  439,  517,  517,  517,  517,  517,  517,  517, 
-          517,  517,  517,  517,  517,  517,  517,    0,    0,  517, 
-          517,  517,  517,    0,  529,  517,    0,    0,  517,    0, 
-            0,  517,    0,  517,    0,  517,  439,  517,    0,  517, 
-          517,  517,  517,  517,  517,  517,  306,  517,    0,  517, 
-          439,  439,    0,  306,  306,  439,    0,    0,    0,    0, 
-          109,  517,    0,    0,    0,    0,    0,    0,    0,    0, 
-          520,  520,  520,  517,    0,  520,  520,  520,    0,  520, 
-            0,    0,    0,  439,    0,    0,    0,    0,    0,  520, 
-          520,    0,    0,    0,    0,    0,    0,    0,  520,  520, 
-            0,  520,  520,  520,  520,  520,    0,    0,    0,    0, 
-            0,    0,    0,  520,  648,    0,    0,    0,    0,  108, 
-            0,    0,    0,    0,  648,  520,  520,  520,  520,  520, 
-          520,  520,  520,  520,  520,  520,  520,  520,  520,    0, 
-            0,  520,  520,  520,  520,    0,  532,  520,    0,    0, 
-          520,    0,    0,  520,    0,  520,    0,  520,  648,  520, 
-            0,  520,  520,  520,  520,  520,  520,  520,  317,  520, 
-            0,  520,  648,  648,    0,  317,  317,  648,    0,    0, 
-            0,    0,  108,  520,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  520,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  648,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  439,  439,  439,    0,    0,  439, 
-          439,  439,    0,  439,    0,    0,    0,    0,    0,    0, 
-            0,    0,  439,  439,  439,    0,    0,    0,    0,    0, 
-            0,    0,  439,  439,    0,  439,  439,  439,  439,  439, 
-            0,    0,    0,    0,    0,    0,    0,  439,  306,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  306,  439, 
-          439,  439,  439,  439,  439,  439,  439,  439,  439,  439, 
-          439,  439,  439,    0,    0,  439,  439,  439,  439,    0, 
-            0,  439,    0,    0,  439,    0,    0,  439,    0,  439, 
-            0,  439,  306,  439,    0,  439,  439,  439,  439,  439, 
-          439,  439,    0,  439,  439,  439,  306,  306,    0,  128, 
-            0,  306,    0,    0,    0,    0,    0,  439,    0,    0, 
-            0,    0,    0,    0,    0,    0,  648,  648,  648,  439, 
-            0,  648,  648,  648,    0,  648,    0,    0,    0,  306, 
-            0,    0,    0,    0,  648,  648,  648,    0,    0,    0, 
-            0,    0,    0,    0,  648,  648,    0,  648,  648,  648, 
-          648,  648,    0,    0,    0,    0,    0,    0,    0,  648, 
-          317,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          317,  648,  648,  648,  648,  648,  648,  648,  648,  648, 
-          648,  648,  648,  648,  648,    0,    0,  648,  648,  648, 
-          648,    0,    0,  648,    0,    0,  648,    0,    0,  648, 
-            0,  648,    0,  648,  317,  648,    0,  648,  648,  648, 
-          648,  648,  648,  648,    0,  648,  648,  648,  317,  317, 
-            0,  127,    0,  317,    0,    0,    0,    0,    0,  648, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  648,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  317,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          306,  306,  306,    0,    0,  306,  306,  306,    0,  306, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  306, 
-          306,    0,    0,    0,    0,    0,    0,    0,  306,  306, 
-            0,  306,  306,  306,  306,  306,    0,    0,    0,    0, 
-            0,    0,    0,  306,  464,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  464,  306,  306,  306,  306,  306, 
-          306,  306,  306,  306,  306,  306,  306,  306,  306,    0, 
-            0,  306,  306,  306,  306,    0,    0,  306,    0,    0, 
-          306,    0,    0,  306,    0,  306,    0,  306,  464,  306, 
-            0,  306,  306,  306,  306,  306,  306,  306,    0,  306, 
-            0,  306,  464,  464,    0,    0,    0,  464,    0,    0, 
-            0,    0,    0,  306,    0,    0,    0,    0,    0,    0, 
-            0,    0,  317,  317,  317,  306,    0,  317,  317,  317, 
-            0,  317,    0,    0,    0,  464,    0,    0,    0,    0, 
-            0,  317,  317,    0,    0,    0,    0,    0,    0,    0, 
-          317,  317,    0,  317,  317,  317,  317,  317,    0,    0, 
-            0,    0,    0,    0,    0,  317,  328,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  328,  317,  317,  317, 
-          317,  317,  317,  317,  317,  317,  317,  317,  317,  317, 
-          317,    0,    0,  317,  317,  317,  317,    0,    0,  317, 
-            0,    0,  317,    0,    0,  317,    0,  317,    0,  317, 
-          328,  317,    0,  317,  317,  317,  317,  317,  317,  317, 
-            0,  317,    0,  317,  328,  328,    0,    0,    0,  328, 
-            0,    0,    0,    0,    0,  317,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  317,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  328,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  464,  464,  464,    0, 
-            0,  464,  464,  464,    0,  464,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  464,  464,    0,    0,    0, 
-            0,    0,    0,    0,  464,  464,    0,  464,  464,  464, 
-          464,  464,    0,    0,    0,    0,    0,    0,    0,  464, 
-          256,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          256,  464,  464,  464,  464,  464,  464,  464,  464,  464, 
-          464,  464,  464,  464,  464,    0,    0,  464,  464,  464, 
-          464,    0,    0,  464,    0,    0,  464,    0,    0,  464, 
-            0,  464,    0,  464,  256,  464,    0,  464,  464,  464, 
-          464,  464,  464,  464,    0,  464,    0,  464,  256,  256, 
-            0,    0,    0,  256,    0,    0,    0,    0,    0,  464, 
-            0,    0,    0,    0,    0,    0,    0,    0,  328,  328, 
-          328,  464,    0,  328,  328,  328,    0,  328,    0,    0, 
-            0,  360,    0,    0,    0,    0,    0,  328,  328,    0, 
-            0,    0,    0,    0,    0,    0,  328,  328,    0,  328, 
-          328,  328,  328,  328,    0,    0,    0,    0,    0,    0, 
-            0,  328,  323,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  323,  328,  328,  328,  328,  328,  328,  328, 
-          328,  328,  328,  328,  328,  328,  328,    0,    0,  328, 
-          328,  328,  328,    0,    0,  328,    0,    0,  328,    0, 
-            0,  328,    0,  328,    0,  328,  323,  328,    0,  328, 
-          328,  328,  328,  328,  328,  328,    0,  328,    0,  328, 
-          323,  323,    0,    0,    0,  323,    0,    0,    0,    0, 
-            0,  328,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  328,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  323,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  256,  256,  256,    0,    0,  256,  256,  256, 
-            0,  256,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  256,  256,    0,    0,    0,    0,    0,    0,    0, 
-          256,  256,    0,  256,  256,  256,  256,  256,    0,    0, 
-            0,    0,    0,    0,    0,  256,  511,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  511,  256,  256,  256, 
-          256,  256,  256,  256,  256,  256,  256,  256,  360,  256, 
-          256,    0,    0,  256,  256,  360,  360,    0,    0,  256, 
-            0,    0,  256,    0,    0,  256,    0,  256,    0,  256, 
-          511,  256,    0,  256,  256,  256,  256,  256,  256,  256, 
-            0,  256,    0,  256,  511,  511,    0,    0,    0,  511, 
-            0,    0,    0,    0,    0,  256,    0,    0,    0,    0, 
-            0,    0,    0,    0,  323,  323,  323,  256,    0,  323, 
-          323,  323,    0,  323,    0,    0,    0,  511,    0,    0, 
-            0,    0,    0,  323,  323,    0,    0,    0,    0,    0, 
-            0,    0,  323,  323,    0,  323,  323,  323,  323,  323, 
-            0,    0,    0,    0,    0,    0,    0,  323,  356,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  356,  323, 
-          323,  323,  323,  323,  323,  323,  323,  323,  323,  323, 
-          323,  323,  323,    0,    0,  323,  323,  323,  323,    0, 
-            0,  323,    0,    0,  323,    0,    0,  323,    0,  323, 
-            0,  323,  356,  323,    0,  323,  323,  323,  323,  323, 
-          323,  323,    0,  323,    0,  323,    0,  356,    0,    0, 
-            0,  356,    0,    0,    0,    0,    0,  323,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  323, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  356, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  357,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  357,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  511,  511, 
-          511,    0,    0,  511,  511,  511,  357,  511,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  511,  511,    0, 
-            0,  357,    0,    0,    0,  357,  511,  511,    0,  511, 
-          511,  511,  511,  511,    0,    0,    0,    0,    0,    0, 
-            0,  511,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  357,  511,  511,  511,  511,  511,  511, 
-          511,  511,  511,  511,  511,  511,  511,    0,    0,  511, 
-          511,  511,  511,    0,  320,  511,    0,    0,  511,    0, 
-            0,  511,    0,  511,  320,  511,    0,  511,    0,  511, 
-          511,  511,  511,  511,  511,  511,    0,  511,    0,  511, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  511,    0,    0,    0,    0,    0,    0,  320,    0, 
-          356,  356,  356,  511,    0,  356,  356,  356,    0,  356, 
-            0,    0,    0,  320,    0,    0,    0,  320,    0,  356, 
-          356,    0,    0,    0,    0,    0,    0,    0,  356,  356, 
-            0,  356,  356,  356,  356,  356,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  320,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  356,  356,  356,  356,  356, 
-          356,  356,  356,  356,  356,  356,  356,  356,  356,    0, 
-            0,  356,  356,  356,  356,    0,    0,  356,    0,    0, 
-          356,    0,    0,  356,    0,  356,    0,  356,    0,  356, 
-          237,  356,  356,  356,  356,  356,  356,  356,    0,  356, 
-          237,  356,    0,    0,  357,  357,  357,    0,    0,  357, 
-          357,  357,    0,  357,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  357,  357,  356,    0,    0,    0,    0, 
-            0,    0,  357,  357,  237,  357,  357,  357,  357,  357, 
-            0,    0,    0,    0,    0,    0,    0,    0,  237,  237, 
-            0,    0,    0,  237,    0,    0,    0,    0,    0,  357, 
-          357,  357,  357,  357,  357,  357,  357,  357,  357,  357, 
-          357,  357,  357,    0,    0,  357,  357,  357,  357,    0, 
-            0,  357,    0,    0,  357,    0,    0,  357,    0,  357, 
-            0,  357,    0,  357,    0,  357,  357,  357,  357,  357, 
-          357,  357,    0,  357,    0,  357,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  320,  320,  320,    0, 
-            0,  320,  320,  320,    0,  320,    0,    0,    0,  357, 
-            0,    0,    0,    0,    0,  320,  320,    0,    0,    0, 
-            0,    0,    0,    0,  320,  320,    0,  320,  320,  320, 
-          320,  320,    0,    0,    0,    0,    0,    0,    0,    0, 
-          234,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          234,  320,  320,  320,  320,  320,  320,  320,  320,  320, 
-          320,  320,  320,  320,  320,    0,    0,  320,  320,  320, 
-          320,    0,    0,  320,    0,    0,  320,    0,    0,  320, 
-            0,  320,    0,  320,  234,  320,    0,  320,  320,  320, 
-          320,  320,  320,  320,    0,  320,    0,  320,  234,  234, 
-            0,    0,    0,  234,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  320,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  237,  237,  237,    0,    0,  237,  237,  237, 
-            0,  237,    0,  231,    0,    0,    0,    0,    0,    0, 
-            0,  237,  237,  231,    0,    0,    0,    0,    0,    0, 
-          237,  237,    0,  237,  237,  237,  237,  237,    0,    0, 
-            0,    0,    0,    0,    0,  237,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  231,  237,  237, 
-          237,  237,  237,  237,  237,  237,  237,  237,    0,  237, 
-          237,  231,  231,  237,  237,    0,  231,    0,    0,  237, 
-            0,    0,  237,    0,    0,  237,    0,  237,    0,  237, 
-            0,  237,    0,  237,  237,  237,  237,  237,  237,  237, 
-            0,  237,    0,  237,    0,  724,  619,    0,    0,  725, 
-            0,    0,    0,  160,  161,  237,  162,  163,  164,  165, 
-          166,  167,  168,    0,    0,  169,  170,  237,    0,    0, 
-          171,  172,  173,  174,    0,    0,    0,    0,    0,  233, 
-          287,    0,    0,    0,    0,    0,    0,  176,  177,  233, 
-          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, 
-          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, 
-            0,    0,  234,  234,  234,    0,    0,  234,  234,  234, 
-            0,  234,    0,  233,    0,  190,    0,    0,    0,    0, 
-            0,  234,  234,    0,    0,    0,    0,  233,  233,    0, 
-          234,  234,  233,  234,  234,  234,  234,  234,    0,    0, 
-            0,    0,    0,    0,    0,  234,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  234,  234, 
-          234,  234,  234,  234,  234,  234,  234,  234,    0,  234, 
-          234,    0,    0,  234,  234,    0,    0,    0,    0,  234, 
-            0,    0,  234,    0,    0,  234,    0,  234,    0,  234, 
-            0,  234,    0,  234,  234,  234,  234,  234,  234,  234, 
-            0,  234,    0,  234,    0,  231,  231,  231,    0,    0, 
-          231,  231,  231,    0,  231,  234,  232,    0,    0,    0, 
-            0,    0,    0,    0,  231,  231,  232,  234,    0,    0, 
-            0,    0,    0,  231,  231,    0,  231,  231,  231,  231, 
-          231,    0,    0,    0,    0,    0,    0,    0,  231,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          232,  231,  231,  231,  231,  231,  231,  231,  231,  231, 
-          231,    0,  231,  231,  232,  232,  231,  231,    0,  232, 
-            0,    0,  231,    0,    0,  231,    0,    0,  231,    0, 
-          231,    0,  231,    0,  231,    0,  231,  231,  231,  231, 
-          231,  231,  231,    0,  231,    0,  231,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  231,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          231,  233,  233,  233,    0,    0,  233,  233,  233,    0, 
-          233,    0,  235,    0,    0,    0,    0,    0,    0,    0, 
-          233,  233,  235,    0,    0,    0,    0,    0,    0,  233, 
-          233,    0,  233,  233,  233,  233,  233,    0,    0,    0, 
-            0,    0,    0,    0,  233,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  235,  233,  233,  233, 
-          233,  233,  233,  233,  233,  233,  233,    0,  233,  233, 
-          235,  235,  233,  233,    0,  235,    0,    0,  233,    0, 
-            0,  233,    0,    0,  233, 
+          527,  124,    0,  527,  527,  527,  527,    0,  539,  527, 
+            0,    0,  527,    0,  628,  527,    0,  527,    0,  527, 
+          520,  527,    0,  527,  527,  527,  527,  527,  527,  527, 
+            0,  527,    0,  527,  520,  520,  123,  112,   92,  520, 
+            0,    0,    0,    0,  319,  527,    0,    0,    0,  624, 
+            0,  319,  319,    0,    0,    0,    0,  527,    0,    0, 
+            0,    0,  628,    0,    0,    0,    0,  520,    0,  628, 
+          628,    0,    0,    0,    0,  624,    0,    0,    0,    0, 
+            0,   95,    0,    0,    0,  125,    0,  519,    0,    0, 
+            0,    0,    0,    0,  519,  519,  628,  624,    0,    0, 
+            0,   92,    0,    0,  624,  624,    0,    0,    0,    0, 
+          624,    0,    0,    0,    0,   95,  529,  529,  529,    0, 
+            0,  529,  529,  529,    0,  529,    0,    0,    0,    0, 
+            0,  624,   95,    0,  125,  529,  529,    0,    0,    0, 
+            0,    0,    0,    0,  529,  529,    0,  529,  529,  529, 
+          529,  529,    0,    0,    0,    0,    0,    0,    0,  529, 
+          519,    0,  522,    0,    0,    0,  625,    0,    0,    0, 
+          519,  529,  529,  529,  529,  529,  529,  529,  529,  529, 
+          529,  529,  529,  529,  529,    0,    0,  529,  529,  529, 
+          529,    0,  541,  529,    0,    0,  529,    0,    0,  529, 
+            0,  529,  109,  529,  519,  529,    0,  529,  529,  529, 
+          529,  529,  529,  529,    0,  529,    0,  529,  519,  519, 
+            0,  111,    0,  519,    0,    0,    0,    0,    0,  529, 
+            0,    0,    0,    0,    0,    0,  109,    0,  520,  520, 
+          520,  529,    0,  520,  520,  520,    0,  520,    0,    0, 
+            0,  519,    0,  109,    0,    0,    0,  520,  520,    0, 
+            0,    0,    0,    0,    0,    0,  520,  520,    0,  520, 
+          520,  520,  520,  520,    0,    0,    0,    0,    0,    0, 
+            0,  520,  522,  308,    0,    0,    0,    0,    0,    0, 
+            0,    0,  522,  520,  520,  520,  520,  520,  520,  520, 
+          520,  520,  520,  520,  520,  520,  520,    0,    0,  520, 
+          520,  520,  520,    0,  532,  520,    0,    0,  520,    0, 
+            0,  520,    0,  520,  108,  520,  522,  520,    0,  520, 
+          520,  520,  520,  520,  520,  520,    0,  520,    0,  520, 
+          522,  522,  125,  114,    0,  522,    0,    0,    0,    0, 
+           95,  520,    0,    0,    0,  625,    0,    0,  108,    0, 
+            0,    0,    0,  520,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  522,    0,  108,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  522, 
+            0,    0,    0,  625,    0,  319,  522,  522,    0,    0, 
+          625,  625,    0,   95,    0,    0,  625,    0,    0,    0, 
+            0,    0,  519,  519,  519,    0,    0,  519,  519,  519, 
+            0,  519,    0,    0,    0,    0,    0,  625,    0,    0, 
+            0,  519,  519,    0,    0,    0,    0,    0,    0,    0, 
+          519,  519,    0,  519,  519,  519,  519,  519,    0,    0, 
+            0,    0,    0,    0,    0,  519,  441,    0,    0,    0, 
+            0,  109,    0,    0,    0,    0,  441,  519,  519,  519, 
+          519,  519,  519,  519,  519,  519,  519,  519,  519,  519, 
+          519,    0,    0,  519,  519,  519,  519,    0,  531,  519, 
+            0,    0,  519,    0,    0,  519,    0,  519,    0,  519, 
+          441,  519,    0,  519,  519,  519,  519,  519,  519,  519, 
+          308,  519,    0,  519,  441,  441,    0,  308,  308,  441, 
+            0,    0,    0,    0,  109,  519,    0,    0,    0,    0, 
+            0,    0,    0,    0,  522,  522,  522,  519,    0,  522, 
+          522,  522,    0,  522,    0,    0,    0,  441,    0,    0, 
+            0,    0,    0,  522,  522,    0,    0,    0,    0,    0, 
+            0,    0,  522,  522,    0,  522,  522,  522,  522,  522, 
+            0,    0,    0,    0,    0,    0,    0,  522,  650,    0, 
+            0,    0,    0,  108,    0,    0,    0,    0,  650,  522, 
+          522,  522,  522,  522,  522,  522,  522,  522,  522,  522, 
+          522,  522,  522,    0,    0,  522,  522,  522,  522,    0, 
+          534,  522,    0,    0,  522,    0,    0,  522,    0,  522, 
+            0,  522,  650,  522,    0,  522,  522,  522,  522,  522, 
+          522,  522,  319,  522,    0,  522,  650,  650,    0,  319, 
+          319,  650,    0,    0,    0,    0,  108,  522,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  522, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  650, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  441,  441, 
+          441,    0,    0,  441,  441,  441,    0,  441,    0,    0, 
+            0,    0,    0,    0,    0,    0,  441,  441,  441,    0, 
+            0,    0,    0,    0,    0,    0,  441,  441,    0,  441, 
+          441,  441,  441,  441,    0,    0,    0,    0,    0,    0, 
+            0,  441,  308,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  308,  441,  441,  441,  441,  441,  441,  441, 
+          441,  441,  441,  441,  441,  441,  441,    0,    0,  441, 
+          441,  441,  441,    0,    0,  441,    0,    0,  441,    0, 
+            0,  441,    0,  441,    0,  441,  308,  441,    0,  441, 
+          441,  441,  441,  441,  441,  441,    0,  441,  441,  441, 
+          308,  308,    0,  128,    0,  308,    0,    0,    0,    0, 
+            0,  441,    0,    0,    0,    0,    0,    0,    0,    0, 
+          650,  650,  650,  441,    0,  650,  650,  650,    0,  650, 
+            0,    0,    0,  308,    0,    0,    0,    0,  650,  650, 
+          650,    0,    0,    0,    0,    0,    0,    0,  650,  650, 
+            0,  650,  650,  650,  650,  650,    0,    0,    0,    0, 
+            0,    0,    0,  650,  319,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  319,  650,  650,  650,  650,  650, 
+          650,  650,  650,  650,  650,  650,  650,  650,  650,    0, 
+            0,  650,  650,  650,  650,    0,    0,  650,    0,    0, 
+          650,    0,    0,  650,    0,  650,    0,  650,  319,  650, 
+            0,  650,  650,  650,  650,  650,  650,  650,    0,  650, 
+          650,  650,  319,  319,    0,  127,    0,  319,    0,    0, 
+            0,    0,    0,  650,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  650,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  319,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  308,  308,  308,    0,    0,  308, 
+          308,  308,    0,  308,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  308,  308,    0,    0,    0,    0,    0, 
+            0,    0,  308,  308,    0,  308,  308,  308,  308,  308, 
+            0,    0,    0,    0,    0,    0,    0,  308,  466,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  466,  308, 
+          308,  308,  308,  308,  308,  308,  308,  308,  308,  308, 
+          308,  308,  308,    0,    0,  308,  308,  308,  308,    0, 
+            0,  308,    0,    0,  308,    0,    0,  308,    0,  308, 
+            0,  308,  466,  308,    0,  308,  308,  308,  308,  308, 
+          308,  308,    0,  308,    0,  308,  466,  466,    0,    0, 
+            0,  466,    0,    0,    0,    0,    0,  308,    0,    0, 
+            0,    0,    0,    0,    0,    0,  319,  319,  319,  308, 
+            0,  319,  319,  319,    0,  319,    0,    0,    0,  466, 
+            0,    0,    0,    0,    0,  319,  319,    0,    0,    0, 
+            0,    0,    0,    0,  319,  319,    0,  319,  319,  319, 
+          319,  319,    0,    0,    0,    0,    0,    0,    0,  319, 
+          330,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          330,  319,  319,  319,  319,  319,  319,  319,  319,  319, 
+          319,  319,  319,  319,  319,    0,    0,  319,  319,  319, 
+          319,    0,    0,  319,    0,    0,  319,    0,    0,  319, 
+            0,  319,    0,  319,  330,  319,    0,  319,  319,  319, 
+          319,  319,  319,  319,    0,  319,    0,  319,  330,  330, 
+            0,    0,    0,  330,    0,    0,    0,    0,    0,  319, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  319,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  330,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          466,  466,  466,    0,    0,  466,  466,  466,    0,  466, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  466, 
+          466,    0,    0,    0,    0,    0,    0,    0,  466,  466, 
+            0,  466,  466,  466,  466,  466,    0,    0,    0,    0, 
+            0,    0,    0,  466,  258,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  258,  466,  466,  466,  466,  466, 
+          466,  466,  466,  466,  466,  466,  466,  466,  466,    0, 
+            0,  466,  466,  466,  466,    0,    0,  466,    0,    0, 
+          466,    0,    0,  466,    0,  466,    0,  466,  258,  466, 
+            0,  466,  466,  466,  466,  466,  466,  466,    0,  466, 
+            0,  466,  258,  258,    0,    0,    0,  258,    0,    0, 
+            0,    0,    0,  466,    0,    0,    0,    0,    0,    0, 
+            0,    0,  330,  330,  330,  466,    0,  330,  330,  330, 
+            0,  330,    0,    0,    0,  362,    0,    0,    0,    0, 
+            0,  330,  330,    0,    0,    0,    0,    0,    0,    0, 
+          330,  330,    0,  330,  330,  330,  330,  330,    0,    0, 
+            0,    0,    0,    0,    0,  330,  325,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  325,  330,  330,  330, 
+          330,  330,  330,  330,  330,  330,  330,  330,  330,  330, 
+          330,    0,    0,  330,  330,  330,  330,    0,    0,  330, 
+            0,    0,  330,    0,    0,  330,    0,  330,    0,  330, 
+          325,  330,    0,  330,  330,  330,  330,  330,  330,  330, 
+            0,  330,    0,  330,  325,  325,    0,    0,    0,  325, 
+            0,    0,    0,    0,    0,  330,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  330,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  325,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  258,  258,  258,    0, 
+            0,  258,  258,  258,    0,  258,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  258,  258,    0,    0,    0, 
+            0,    0,    0,    0,  258,  258,    0,  258,  258,  258, 
+          258,  258,    0,    0,    0,    0,    0,    0,    0,  258, 
+          513,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          513,  258,  258,  258,  258,  258,  258,  258,  258,  258, 
+          258,  258,  362,  258,  258,    0,    0,  258,  258,  362, 
+          362,    0,    0,  258,    0,    0,  258,    0,    0,  258, 
+            0,  258,    0,  258,  513,  258,    0,  258,  258,  258, 
+          258,  258,  258,  258,    0,  258,    0,  258,  513,  513, 
+            0,    0,    0,  513,    0,    0,    0,    0,    0,  258, 
+            0,    0,    0,    0,    0,    0,    0,    0,  325,  325, 
+          325,  258,    0,  325,  325,  325,    0,  325,    0,    0, 
+            0,  513,    0,    0,    0,    0,    0,  325,  325,    0, 
+            0,    0,    0,    0,    0,    0,  325,  325,    0,  325, 
+          325,  325,  325,  325,    0,    0,    0,    0,    0,    0, 
+            0,  325,  358,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  358,  325,  325,  325,  325,  325,  325,  325, 
+          325,  325,  325,  325,  325,  325,  325,    0,    0,  325, 
+          325,  325,  325,    0,    0,  325,    0,    0,  325,    0, 
+            0,  325,    0,  325,    0,  325,  358,  325,    0,  325, 
+          325,  325,  325,  325,  325,  325,    0,  325,    0,  325, 
+            0,  358,    0,    0,    0,  358,    0,    0,    0,    0, 
+            0,  325,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  325,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  358,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  359,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  359,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  513,  513,  513,    0,    0,  513,  513,  513, 
+          359,  513,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  513,  513,    0,    0,  359,    0,    0,    0,  359, 
+          513,  513,    0,  513,  513,  513,  513,  513,    0,    0, 
+            0,    0,    0,    0,    0,  513,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  359,  513,  513, 
+          513,  513,  513,  513,  513,  513,  513,  513,  513,  513, 
+          513,    0,    0,  513,  513,  513,  513,    0,  322,  513, 
+            0,    0,  513,    0,    0,  513,    0,  513,  322,  513, 
+            0,  513,    0,  513,  513,  513,  513,  513,  513,  513, 
+            0,  513,    0,  513,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  513,    0,    0,    0,    0, 
+            0,    0,  322,    0,  358,  358,  358,  513,    0,  358, 
+          358,  358,    0,  358,    0,    0,    0,  322,    0,    0, 
+            0,  322,    0,  358,  358,    0,    0,    0,    0,    0, 
+            0,    0,  358,  358,    0,  358,  358,  358,  358,  358, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  322, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  358, 
+          358,  358,  358,  358,  358,  358,  358,  358,  358,  358, 
+          358,  358,  358,    0,    0,  358,  358,  358,  358,    0, 
+            0,  358,    0,    0,  358,    0,    0,  358,    0,  358, 
+            0,  358,    0,  358,  229,  358,  358,  358,  358,  358, 
+          358,  358,    0,  358,  229,  358,    0,    0,  359,  359, 
+          359,    0,    0,  359,  359,  359,    0,  359,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  359,  359,  358, 
+            0,    0,    0,    0,    0,    0,  359,  359,  229,  359, 
+          359,  359,  359,  359,    0,    0,    0,    0,    0,    0, 
+            0,    0,  229,  229,    0,    0,    0,  229,    0,    0, 
+            0,    0,    0,  359,  359,  359,  359,  359,  359,  359, 
+          359,  359,  359,  359,  359,  359,  359,    0,    0,  359, 
+          359,  359,  359,    0,    0,  359,    0,    0,  359,    0, 
+            0,  359,    0,  359,    0,  359,    0,  359,    0,  359, 
+          359,  359,  359,  359,  359,  359,    0,  359,  431,  359, 
+            0,    0,    0,    0,    0,    0,    0,    0,  431,    0, 
+          322,  322,  322,    0,    0,  322,  322,  322,    0,  322, 
+            0,    0,    0,  359,    0,    0,    0,    0,    0,  322, 
+          322,    0,    0,    0,    0,    0,    0,    0,  322,  322, 
+            0,  322,  322,  322,  322,  322,    0,    0,    0,    0, 
+            0,    0,    0,    0,  230,    0,    0,  431,    0,    0, 
+            0,    0,    0,    0,  230,  322,  322,  322,  322,  322, 
+          322,  322,  322,  322,  322,  322,  322,  322,  322,    0, 
+            0,  322,  322,  322,  322,    0,    0,  322,    0,    0, 
+          322,    0,    0,  322,    0,  322,    0,  322,  230,  322, 
+            0,  322,  322,  322,  322,  322,  322,  322,    0,  322, 
+            0,  322,  230,  230,    0,    0,    0,  230,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  322,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  229,  229,  229,    0, 
+            0,  229,  229,  229,    0,  229,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  229,  229,    0,    0,    0, 
+            0,    0,    0,    0,  229,  229,    0,  229,  229,  229, 
+          229,  229,    0,    0,    0,    0,    0,    0,    0,  229, 
+          239,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          239,  229,  229,  229,  229,  229,  229,  229,  229,  229, 
+          229,  229,    0,  229,  229,    0,    0,  229,  229,    0, 
+            0,    0,    0,  229,    0,    0,  229,    0,    0,  229, 
+            0,  229,    0,  229,  239,  229,    0,  229,  229,  229, 
+          229,  229,  229,  229,    0,  229,    0,  229,  239,  239, 
+            0,    0,    0,  239,    0,    0,    0,    0,    0,  229, 
+          431,  431,  431,    0,    0,  431,  431,  431,    0,  431, 
+            0,  229,    0,    0,    0,    0,    0,    0,    0,  431, 
+            0,    0,    0,    0,    0,    0,    0,    0,  431,  431, 
+            0,  431,  431,  431,  431,  431,    0,    0,    0,  236, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  236, 
+            0,    0,    0,    0,    0,    0,  230,  230,  230,    0, 
+            0,  230,  230,  230,    0,  230,  431,    0,    0,    0, 
+            0,    0,    0,  431,  431,  230,  230,    0,    0,    0, 
+          431,    0,    0,  236,  230,  230,    0,  230,  230,  230, 
+          230,  230,    0,    0,    0,    0,    0,  236,  236,  230, 
+            0,  431,  236,    0,    0,    0,    0,    0,    0,    0, 
+            0,  230,  230,  230,  230,  230,  230,  230,  230,  230, 
+          230,  230,    0,  230,  230,  431,    0,  230,  230,    0, 
+            0,    0,    0,  230,    0,    0,  230,    0,    0,  230, 
+            0,  230,    0,  230,    0,  230,    0,  230,  230,  230, 
+          230,  230,  230,  230,    0,  230,  233,  230,    0,    0, 
+            0,    0,    0,    0,    0,    0,  233,    0,    0,  230, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  230,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  239,  239,  239,    0,    0,  239,  239,  239, 
+          233,  239,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  239,  239,    0,  233,  233,    0,    0,    0,  233, 
+          239,  239,    0,  239,  239,  239,  239,  239,    0,    0, 
+            0,    0,    0,    0,    0,  239,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  239,  239, 
+          239,  239,  239,  239,  239,  239,  239,  239,    0,  239, 
+          239,    0,    0,  239,  239,    0,    0,    0,    0,  239, 
+            0,    0,  239,    0,    0,  239,    0,  239,    0,  239, 
+            0,  239,  235,  239,  239,  239,  239,  239,  239,  239, 
+            0,  239,  235,  239,    0,    0,    0,    0,    0,    0, 
+            0,  236,  236,  236,    0,  239,  236,  236,  236,    0, 
+          236,    0,    0,    0,    0,    0,    0,  239,    0,    0, 
+          236,  236,    0,    0,    0,    0,  235,    0,    0,  236, 
+          236,    0,  236,  236,  236,  236,  236,    0,    0,    0, 
+          235,  235,    0,    0,  236,  235,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  236,  236,  236, 
+          236,  236,  236,  236,  236,  236,  236,    0,  236,  236, 
+            0,    0,  236,  236,    0,    0,    0,    0,  236,    0, 
+            0,  236,    0,    0,  236,    0,  236,    0,  236,    0, 
+          236,    0,  236,  236,  236,  236,  236,  236,  236,  234, 
+          236,    0,  236,    0,    0,    0,    0,    0,    0,  234, 
+            0,    0,    0,    0,  236,    0,    0,    0,  233,  233, 
+          233,    0,    0,  233,  233,  233,  236,  233,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  233,  233,    0, 
+            0,    0,    0,  234,    0,    0,  233,  233,    0,  233, 
+          233,  233,  233,  233,    0,    0,    0,  234,  234,    0, 
+            0,  233,  234,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  233,  233,  233,  233,  233,  233, 
+          233, 
       };
    }
 
    private static final short[] yyTable3() {
       return new short[] {
 
-            0,  233,    0,  233,    0,  233,    0,  233,  233,  233, 
-          233,  233,  233,  233,    0,  233,    0,  233,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  233, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  233,  440,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  440,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  232,  232,  232,    0,    0,  232,  232, 
-          232,    0,  232,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  232,  232,    0,    0,  440,    0,    0,    0, 
-            0,  232,  232,    0,  232,  232,  232,  232,  232,    0, 
-            0,  440,    0,  122,    0,  440,  232,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  232, 
-          232,  232,  232,  232,  232,  232,  232,  232,  232,    0, 
-          232,  232,    0,  440,  232,  232,    0,    0,    0,    0, 
-          232,    0,    0,  232,    0,    0,  232,    0,  232,    0, 
-          232,    0,  232,  522,  232,  232,  232,  232,  232,  232, 
-          232,    0,  232,  522,  232,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  232,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  232,  235, 
-          235,  235,    0,    0,  235,  235,  235,   97,  235,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  235,  235, 
-            0,    0,  522,    0,  116,    0,  522,  235,  235,    0, 
-          235,  235,  235,  235,  235,    0,    0,    0,    0,    0, 
-            0,    0,  235,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  522,  235,  235,  235,  235,  235, 
-          235,  235,  235,  235,  235,    0,  235,  235,    0,    0, 
-          235,  235,    0,    0,    0,  521,  235,    0,    0,  235, 
-            0,    0,  235,    0,  235,  521,  235,    0,  235,    0, 
-          235,  235,  235,  235,  235,  235,  235,    0,  235,    0, 
-          235,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  235,    0,  440,  440,  440,    0,    0,   96, 
-          440,  440,    0,  440,  235,    0,    0,    0,    0,    0, 
-            0,    0,  440,    0,  521,    0,  115,    0,  521,    0, 
-            0,    0,  440,  440,    0,  440,  440,  440,  440,  440, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  521,    0,    0,  440, 
-          440,  440,  440,  440,  440,  440,  440,  440,  440,  440, 
-          440,  440,  440,  429,    0,  440,  440,  440,  440,    0, 
-            0,    0,    0,  429,  440,    0,    0,    0,    0,    0, 
-            0,  440,    0,  440,    0,  440,  440,  440,  440,  440, 
-          440,  440,    0,  440,  440,  440,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  522,  522,  522,    0,    0, 
-            0,  522,  522,    0,  522,    0,    0,    0,    0,  440, 
-            0,    0,  429,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  522,  522,    0,  522,  522,  522,  522, 
-          522,    0,    0,    0,  523,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  523,    0,    0,    0,    0,    0, 
-          522,  522,  522,  522,  522,  522,  522,  522,  522,  522, 
-          522,  522,  522,  522,    0,    0,  522,  522,  522,  522, 
-            0,  534,    0,    0,    0,  522,    0,    0,   98,    0, 
-            0,    0,  522,    0,  522,    0,  522,  522,  522,  522, 
-          522,  522,  522,  523,  522,  117,  522,  523,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  521,  521,  521, 
-            0,    0,    0,  521,  521,    0,  521,    0,    0,    0, 
-          522,    0,    0,    0,    0,  523,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  521,  521,    0,  521,  521, 
-          521,  521,  521,    0,    0,    0,  524,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  524,    0,    0,    0, 
-            0,    0,  521,  521,  521,  521,  521,  521,  521,  521, 
-          521,  521,  521,  521,  521,  521,    0,    0,  521,  521, 
-          521,  521,    0,  533,    0,    0,    0,  521,    0,    0, 
-           99,    0,    0,    0,  521,    0,  521,    0,  521,  521, 
-          521,  521,  521,  521,  521,  524,  521,  118,  521,  524, 
-            0,    0,    0,    0,    0,  429,  429,  429,    0,    0, 
-          429,  429,  429,  526,  429,    0,    0,    0,    0,    0, 
-            0,    0,  521,  526,  429,    0,    0,  524,    0,    0, 
-            0,    0,    0,  429,  429,    0,  429,  429,  429,  429, 
-          429,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  101,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  429,  526,    0,  120,    0,  526,    0,  429,  429, 
-            0,    0,    0,    0,    0,  429,  523,  523,  523,    0, 
-            0,    0,  523,  523,    0,  523,    0,    0,    0,    0, 
-            0,    0,    0,    0,  526,    0,  429,    0,    0,    0, 
-            0,    0,    0,    0,  523,  523,    0,  523,  523,  523, 
-          523,  523,    0,    0,    0,  525,    0,    0,    0,    0, 
-          429,    0,    0,    0,    0,  525,    0,    0,    0,    0, 
-            0,  523,  523,  523,  523,  523,  523,  523,  523,  523, 
-          523,  523,  523,  523,  523,    0,    0,  523,  523,  523, 
-          523,    0,  535,    0,    0,    0,  523,    0,    0,  100, 
-            0,    0,    0,  523,    0,  523,    0,  523,  523,  523, 
-          523,  523,  523,  523,  525,  523,  119,  523,  525,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  524,  524, 
-          524,    0,    0,    0,  524,  524,    0,  524,    0,    0, 
-            0,  523,    0,    0,    0,    0,  525,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  524,  524,    0,  524, 
-          524,  524,  524,  524,    0,    0,    0,   52,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,   52,    0,    0, 
-            0,    0,    0,  524,  524,  524,  524,  524,  524,  524, 
-          524,  524,  524,  524,  524,  524,  524,    0,    0,  524, 
-          524,  524,  524,    0,  536,  526,  526,  526,  524,    0, 
-            0,  526,  526,    0,  526,  524,    0,  524,    0,  524, 
-          524,  524,  524,  524,  524,  524,   52,  524,    0,  524, 
-            0,    0,    0,  526,  526,    0,  526,  526,  526,  526, 
-          526,    0,    0,    0,  527,    0,    0,    0,    0,    0, 
-            0,    0,    0,  524,  527,    0,    0,    0,    0,    0, 
-          526,  526,  526,  526,  526,  526,  526,  526,  526,  526, 
-          526,  526,  526,  526,    0,    0,  526,  526,  526,  526, 
-            0,  538,    0,    0,    0,  526,    0,    0,  102,    0, 
-            0,    0,  526,    0,  526,    0,  526,  526,  526,  526, 
-          526,  526,  526,  527,  526,  121,  526,  527,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  525,  525,  525, 
-            0,    0,    0,  525,  525,    0,  525,    0,    0,    0, 
-          526,    0,    0,    0,    0,  527,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  525,  525,    0,  525,  525, 
-          525,  525,  525,    0,    0,    0,  518,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  518,    0,    0,    0, 
-            0,    0,  525,  525,  525,  525,  525,  525,  525,  525, 
-          525,  525,  525,  525,  525,  525,    0,    0,  525,  525, 
-          525,  525,    0,  537,    0,    0,    0,  525,    0,    0, 
-           93,    0,    0,    0,  525,    0,  525,    0,  525,  525, 
-          525,  525,  525,  525,  525,  518,  525,  112,  525,  518, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,   52, 
-           52,   52,    0,  517,   52,   52,   52,    0,   52,    0, 
-            0,    0,  525,  517,    0,    0,    0,  518,   52,    0, 
-            0,    0,    0,    0,    0,    0,    0,   52,   52,    0, 
-           52,   52,   52,   52,   52,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,   92,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  517,    0,  111,    0,  517,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  527,  527,  527,   52, 
-            0,    0,  527,  527,    0,  527,    0,    0,    0,    0, 
-            0,    0,    0,    0,  517,    0,    0,    0,    0,    0, 
-           52,    0,    0,    0,  527,  527,    0,  527,  527,  527, 
-          527,  527,    0,    0,    0,  520,    0,    0,    0,    0, 
-            0,    0,    0,    0,   52,  520,    0,    0,    0,    0, 
-            0,  527,  527,  527,  527,  527,  527,  527,  527,  527, 
-          527,  527,  527,  527,  527,    0,    0,  527,  527,  527, 
-          527,    0,  539,    0,    0,    0,  527,    0,    0,   95, 
-            0,    0,    0,  527,    0,  527,    0,  527,  527,  527, 
-          527,  527,  527,  527,  520,  527,  114,  527,  520,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  518,  518, 
-          518,    0,    0,    0,  518,  518,    0,  518,    0,    0, 
-            0,  527,    0,    0,    0,    0,  520,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  518,  518,    0,  518, 
-          518,  518,  518,  518,    0,    0,    0,    0,    0,   60, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,   60, 
-            0,    0,    0,  518,  518,  518,  518,  518,  518,  518, 
-          518,  518,  518,  518,  518,  518,  518,    0,    0,  518, 
-          518,  518,  518,    0,  530,  517,  517,  517,  518,    0, 
-            0,  517,  517,    0,  517,  518,    0,  518,    0,  518, 
-          518,  518,  518,  518,  518,  518,    0,  518,   60,  518, 
-            0,    0,    0,  517,  517,    0,  517,  517,  517,  517, 
-          517,    0,    0,    0,  306,    0,    0,    0,    0,    0, 
-            0,    0,    0,  518,  306,    0,    0,    0,    0,    0, 
-          517,  517,  517,  517,  517,  517,  517,  517,  517,  517, 
-          517,  517,  517,  517,    0,    0,  517,  517,  517,  517, 
-            0,  529,    0,    0,    0,  517,    0,    0,  109,    0, 
-            0,    0,  517,    0,  517,    0,  517,  517,  517,  517, 
-          517,  517,  517,  306,  517,  128,  517,  306,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  520,  520,  520, 
-            0,    0,    0,  520,  520,    0,  520,    0,    0,    0, 
-          517,    0,    0,    0,    0,  306,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  520,  520,    0,  520,  520, 
-          520,  520,  520,    0,    0,    0,  317,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  317,    0,    0,    0, 
-            0,    0,  520,  520,  520,  520,  520,  520,  520,  520, 
-          520,  520,  520,  520,  520,  520,    0,    0,  520,  520, 
-          520,  520,    0,  532,    0,    0,    0,  520,    0,    0, 
-          108,    0,    0,    0,  520,    0,  520,    0,  520,  520, 
-          520,  520,  520,  520,  520,  317,  520,  127,  520,  317, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,   60,   60,   60,    0,    0,   60,   60,   60,    0, 
-           60,    0,  520,    0,    0,    0,    0,  317,    0,    0, 
-           60,   60,    0,    0,    0,    0,    0,    0,  229,   60, 
-           60,    0,   60,   60,   60,   60,   60,    0,  229,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  229,    0,    0,    0,  306,  306,  306,    0, 
-            0,   60,  306,  306,   60,  306,  229,  229,    0,    0, 
-            0,  229,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,   60,    0,  306,  306,    0,  306,  306,  306, 
-          306,  306,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,   60,    0,    0,    0, 
-            0,  306,  306,  306,  306,  306,  306,  306,  306,  306, 
-          306,  306,  306,  306,  306,    0,    0,  306,  306,  306, 
-          306,    0,    0,    0,    0,    0,  306,    0,    0,    0, 
-            0,    0,    0,  306,    0,  306,  230,  306,  306,  306, 
-          306,  306,  306,  306,    0,  306,  230,  306,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  317,  317, 
-          317,    0,    0,    0,  317,  317,    0,  317,    0,    0, 
-            0,  306,    0,    0,    0,    0,    0,    0,    0,    0, 
-          230,    0,    0,    0,    0,    0,  317,  317,    0,  317, 
-          317,  317,  317,  317,  230,  230,    0,    0,    0,  230, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  317,  317,  317,  317,  317,  317,  317, 
-          317,  317,  317,  317,  317,  317,  317,    0,    0,  317, 
-          317,  317,  317,    0,    0,    0,    0,    0,  317,    0, 
-            0,    0,    0,    0,    0,  317,    0,  317,    0,  317, 
-          317,  317,  317,  317,  317,  317,    0,  317,    0,  317, 
-          229,  229,  229,    0,    0,  229,  229,  229,    0,  229, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  229, 
-          229,    0,    0,  317,    0,    0,    0,    0,  229,  229, 
-            0,  229,  229,  229,  229,  229,    0,    0,    0,    0, 
-            0,    0,    0,  229,  306,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  306,    0,  229,  229,  229,  229, 
-          229,  229,  229,  229,  229,  229,    0,  229,  229,    0, 
-            0,  229,  229,    0,    0,    0,    0,  229,    0,    0, 
-          229,    0,    0,  229,    0,  229,    0,    0,  306,  229, 
-            0,    0,    0,  229,  229,  229,  229,  229,    0,  229, 
-            0,  229,    0,  306,    0,  128,    0,  306,    0,    0, 
-            0,    0,    0,  229,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  229,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  306,    0,    0,  230,  230, 
-          230,    0,    0,  230,  230,  230,    0,  230,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  230,  230,    0, 
-            0,    0,    0,    0,    0,    0,  230,  230,    0,  230, 
-          230,  230,  230,  230,    0,    0,    0,    0,    0,    0, 
-            0,  230,  250,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  250,    0,  230,  230,  230,  230,  230,  230, 
-          230,  230,  230,  230,    0,  230,  230,    0,    0,  230, 
-          230,    0,    0,    0,    0,  230,    0,    0,  230,    0, 
-            0,  230,    0,  230,    0,    0,  250,  230,    0,    0, 
-            0,  230,  230,  230,  230,  230,    0,  230,    0,  230, 
-          250,  250,    0,    0,    0,  250,    0,    0,    0,    0, 
-            0,  230,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  230,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  251,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  251,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  306,  306,  306,    0, 
-            0,    0,  306,  306,    0,  306,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  251,    0, 
-            0,    0,    0,    0,  306,  306,    0,  306,  306,  306, 
-          306,  306,  251,  251,    0,    0,    0,  251,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  306,  306,  306,  306,  306,  306,  306,  306,  306, 
-          306,  306,  306,  306,  306,    0,    0,  306,  306,  306, 
-          306,    0,    0,    0,    0,    0,  306,    0,    0,    0, 
-            0,    0,    0,  306,    0,  306,    0,  306,  306,  306, 
-          306,  306,  306,  306,    0,  306,    0,  306,    0,    0, 
-            0,  240,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  240,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  306,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  250,  250,  250,    0,    0,  250, 
-          250,  250,    0,  250,    0,  240,    0,    0,    0,    0, 
-            0,    0,    0,  250,  250,    0,    0,    0,    0,  240, 
-          240,    0,  250,  250,  240,  250,  250,  250,  250,  250, 
-            0,    0,    0,    0,    0,    0,    0,  250,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          250,  250,  250,  250,  250,  250,  250,  250,  250,  250, 
-            0,  250,  250,    0,    0,  250,  250,    0,    0,    0, 
-            0,  250,    0,    0,  250,    0,    0,  250,  238,  250, 
-            0,    0,    0,  250,    0,    0,    0,    0,  238,  250, 
-          250,  250,    0,  250,    0,  250,  251,  251,  251,    0, 
-            0,  251,  251,  251,    0,  251,    0,  250,    0,    0, 
-            0,    0,    0,    0,    0,  251,  251,    0,    0,  250, 
-            0,    0,  238,    0,  251,  251,    0,  251,  251,  251, 
-          251,  251,    0,    0,    0,    0,  238,  238,    0,  251, 
-            0,  238,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  251,  251,  251,  251,  251,  251,  251,  251, 
-          251,  251,    0,  251,  251,    0,    0,  251,  251,    0, 
-            0,    0,    0,  251,    0,    0,  251,    0,    0,  251, 
-            0,  251,    0,    0,    0,  251,    0,    0,    0,    0, 
-            0,  251,  251,  251,    0,  251,    0,  251,    0,    0, 
-            0,    0,    0,    0,  239,    0,    0,    0,    0,  251, 
-            0,    0,    0,    0,  239,    0,    0,    0,    0,    0, 
-            0,  251,    0,  240,  240,  240,    0,    0,  240,  240, 
-          240,    0,  240,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  240,  240,    0,    0,    0,    0,  239,    0, 
-            0,  240,  240,    0,  240,  240,  240,  240,  240,    0, 
-            0,    0,  239,  239,    0,    0,  240,  239,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  240, 
-          240,  240,  240,  240,  240,  240,  240,  240,  240,    0, 
-          240,  240,    0,    0,    0,    0,    0,    0,    0,    0, 
-          240,    0,    0,  240,    0,    0,  240,  261,  240,    0, 
-            0,    0,  240,    0,    0,    0,    0,  261,  240,  240, 
-          240,    0,  240,    0,  240,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  240,    0,    0,    0, 
-          238,  238,  238,    0,    0,  238,  238,  238,  240,  238, 
-            0,  261,    0,    0,    0,    0,    0,    0,    0,  238, 
-          238,    0,    0,    0,    0,  261,  261,    0,  238,  238, 
-          261,  238,  238,  238,  238,  238,    0,    0,    0,    0, 
-            0,    0,    0,  238,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  238,  238,  238,  238, 
-          238,  238,  238,  238,  238,  238,    0,  238,  238,    0, 
-            0,    0,    0,    0,    0,    0,    0,  238,    0,    0, 
-          238,    0,    0,  238,    0,  238,    0,    0,    0,    0, 
-            0,    0,    0,  262,    0,  238,  238,  238,    0,  238, 
-            0,  238,    0,  262,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  238,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  238,  239,  239,  239,    0, 
-            0,  239,  239,  239,    0,  239,    0,  262,    0,    0, 
-            0,    0,    0,    0,    0,  239,  239,    0,    0,    0, 
-            0,  262,  262,    0,  239,  239,  262,  239,  239,  239, 
-          239,  239,    0,    0,    0,    0,    0,    0,    0,  239, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  239,  239,  239,  239,  239,  239,  239,  239, 
-          239,  239,    0,  239,  239,    0,    0,    0,    0,    0, 
-            0,    0,    0,  239,    0,    0,  239,    0,  243,  239, 
-            0,  239,    0,    0,    0,    0,    0,    0,  243,    0, 
-            0,  239,  239,  239,    0,  239,    0,  239,    0,  261, 
-          261,  261,    0,    0,  261,  261,  261,    0,  261,  239, 
-            0,    0,    0,    0,    0,    0,    0,    0,  261,  261, 
-            0,  239,  243,    0,    0,    0,    0,  261,  261,    0, 
-          261,  261,  261,  261,  261,    0,  243,  243,    0,    0, 
-            0,  243,  261,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  261,  261,  261,  261,  261, 
-          261,  261,  261,  261,  261,    0,  261,  261,    0,    0, 
-            0,    0,    0,    0,    0,    0,  261,    0,    0,  261, 
-            0,    0,  261,    0,  261,    0,    0,    0,    0,    0, 
-            0,    0,  244,    0,  261,  261,    0,    0,    0,    0, 
-          261,    0,  244,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  261,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  261,  262,  262,  262,    0,    0, 
-          262,  262,  262,    0,  262,    0,  244,    0,    0,    0, 
-            0,    0,    0,    0,  262,  262,    0,    0,    0,    0, 
-          244,  244,    0,  262,  262,  244,  262,  262,  262,  262, 
-          262,    0,    0,    0,    0,    0,    0,    0,  262,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  262,  262,  262,  262,  262,  262,  262,  262,  262, 
-          262,    0,  262,  262,    0,    0,    0,    0,    0,    0, 
-            0,    0,  262,    0,    0,  262,    0,  245,  262,    0, 
-          262,    0,    0,    0,    0,    0,    0,  245,    0,    0, 
-          262,  262,    0,    0,    0,    0,  262,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  262,    0, 
-          243,  243,  243,    0,    0,  243,  243,  243,    0,  243, 
-          262,  245,    0,    0,    0,    0,    0,    0,    0,  243, 
-          243,    0,    0,    0,    0,  245,  245,    0,  243,  243, 
-          245,  243,  243,  243,  243,  243,    0,    0,    0,    0, 
-            0,    0,    0,  243,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  243,  243,    0,    0,    0,  243,  243,    0, 
-            0,    0,    0,    0,    0,    0,    0,  243,    0,    0, 
-          243,    0,    0,  243,    0,  243,    0,    0,    0,    0, 
-            0,    0,    0,  252,    0,    0,    0,    0,    0,    0, 
-            0,  243,    0,  252,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  243,  244,  244,  244,    0,    0,  244, 
-          244,  244,    0,  244,    0,  243,    0,    0,    0,    0, 
-            0,    0,    0,  244,  244,    0,    0,  252,    0,    0, 
-            0,    0,  244,  244,    0,  244,  244,  244,  244,  244, 
-            0,  252,  252,    0,    0,    0,  252,  244,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  244,  244,    0,    0, 
-            0,  244,  244,    0,    0,    0,    0,    0,    0,    0, 
-            0,  244,    0,    0,  244,    0,  246,  244,    0,  244, 
-            0,    0,    0,    0,    0,    0,  246,    0,    0,    0, 
-            0,    0,    0,    0,    0,  244,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  244,    0,  245, 
-          245,  245,    0,    0,  245,  245,  245,    0,  245,  244, 
-          246,    0,    0,    0,    0,    0,    0,    0,  245,  245, 
-            0,    0,    0,    0,  246,  246,    0,  245,  245,  246, 
-          245,  245,  245,  245,  245,    0,    0,    0,    0,    0, 
-            0,    0,  245,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  247,    0,    0,    0,    0, 
-            0,  245,  245,    0,    0,  247,  245,  245,    0,    0, 
-            0,    0,    0,    0,    0,    0,  245,    0,    0,  245, 
-            0,    0,  245,    0,  245,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  247, 
-          245,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  245,  247,  247,    0,    0,    0,  247,    0, 
-            0,    0,    0,    0,  245,  252,  252,  252,    0,    0, 
-          252,  252,  252,    0,  252,    0,    0,    0,    0,    0, 
-            0,  253,    0,    0,  252,  252,    0,    0,    0,    0, 
-            0,  253,    0,  252,  252,    0,  252,  252,  252,  252, 
-          252,    0,    0,    0,    0,    0,    0,    0,  252,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  253,    0,  252,  252,    0, 
-            0,    0,  252,  252,    0,    0,    0,    0,    0,  253, 
-          253,    0,  252,    0,  253,  252,    0,    0,  252,    0, 
+          233,  233,  233,    0,  233,  233,    0,    0,  233,  233, 
+            0,    0,    0,    0,  233,    0,    0,  233,    0,    0, 
+          233,    0,  233,    0,  233,    0,  233,  237,  233,  233, 
+          233,  233,  233,  233,  233,    0,  233,  237,  233,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          233,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  233,  235,  235,  235,    0,    0,  235,  235, 
+          235,  237,  235,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  235,  235,    0,  237,  237,    0,    0,    0, 
+          237,  235,  235,    0,  235,  235,  235,  235,  235,    0, 
+            0,    0,    0,    0,    0,    0,  235,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  235, 
+          235,  235,  235,  235,  235,  235,  235,  235,  235,    0, 
+          235,  235,    0,    0,  235,  235,    0,    0,    0,    0, 
+          235,    0,    0,  235,    0,    0,  235,    0,  235,    0, 
+          235,    0,  235,    0,  235,  235,  235,  235,  235,  235, 
+          235,    0,  235,  442,  235,    0,    0,    0,    0,    0, 
+            0,    0,    0,  442,    0,    0,  235,    0,    0,    0, 
+          234,  234,  234,    0,    0,  234,  234,  234,  235,  234, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  234, 
+          234,    0,    0,    0,    0,    0,    0,  442,  234,  234, 
+            0,  234,  234,  234,  234,  234,    0,    0,    0,    0, 
+            0,    0,  442,  234,  122,    0,  442,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  234,  234,  234,  234, 
+          234,  234,  234,  234,  234,  234,    0,  234,  234,    0, 
+            0,  234,  234,    0,  442,    0,    0,  234,    0,    0, 
+          234,    0,    0,  234,    0,  234,    0,  234,  524,  234, 
+            0,  234,  234,  234,  234,  234,  234,  234,  524,  234, 
+            0,  234,    0,    0,    0,    0,    0,    0,    0,  237, 
+          237,  237,    0,  234,  237,  237,  237,    0,  237,    0, 
+            0,    0,    0,    0,    0,  234,    0,    0,  237,  237, 
+            0,    0,   97,    0,    0,    0,    0,  237,  237,    0, 
+          237,  237,  237,  237,  237,    0,    0,  524,    0,  116, 
+            0,  524,  237,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  237,  237,  237,  237,  237, 
+          237,  237,  237,  237,  237,    0,  237,  237,    0,  524, 
+          237,  237,    0,    0,    0,    0,  237,    0,    0,  237, 
+            0,    0,  237,    0,  237,    0,  237,  523,  237,    0, 
+          237,  237,  237,  237,  237,  237,  237,  523,  237,    0, 
+          237,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  237,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  237,    0,    0,    0,    0,    0, 
+            0,   96,    0,    0,    0,  442,  442,  442,    0,    0, 
+            0,  442,  442,    0,  442,    0,  523,    0,  115,    0, 
+          523,    0,    0,  442,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  442,  442,    0,  442,  442,  442,  442, 
+          442,    0,    0,    0,    0,    0,    0,    0,  523,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          442,  442,  442,  442,  442,  442,  442,  442,  442,  442, 
+          442,  442,  442,  442,    0,    0,  442,  442,  442,  442, 
+            0,    0,    0,    0,    0,  442,    0,    0,    0,    0, 
+            0,    0,  442,   60,  442,    0,  442,  442,  442,  442, 
+          442,  442,  442,   60,  442,  442,  442,    0,    0,    0, 
+          524,  524,  524,    0,    0,    0,  524,  524,    0,  524, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          442,    0,    0,    0,    0,    0,    0,    0,  524,  524, 
+            0,  524,  524,  524,  524,  524,    0,    0,    0,  525, 
+            0,    0,   60,    0,    0,    0,    0,    0,    0,  525, 
+            0,    0,    0,    0,    0,  524,  524,  524,  524,  524, 
+          524,  524,  524,  524,  524,  524,  524,  524,  524,    0, 
+            0,  524,  524,  524,  524,    0,  536,    0,    0,    0, 
+          524,    0,    0,   98,    0,    0,    0,  524,    0,  524, 
+            0,  524,  524,  524,  524,  524,  524,  524,  525,  524, 
+          117,  524,  525,    0,    0,    0,    0,    0,    0,  523, 
+          523,  523,    0,    0,    0,  523,  523,    0,  523,    0, 
+            0,    0,    0,    0,    0,  524,    0,    0,    0,    0, 
+          525,    0,    0,    0,    0,    0,    0,  523,  523,    0, 
+          523,  523,  523,  523,  523,    0,    0,    0,  526,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  526,    0, 
+            0,    0,    0,    0,  523,  523,  523,  523,  523,  523, 
+          523,  523,  523,  523,  523,  523,  523,  523,    0,    0, 
+          523,  523,  523,  523,    0,  535,    0,    0,    0,  523, 
+            0,    0,   99,    0,    0,    0,  523,    0,  523,    0, 
+          523,  523,  523,  523,  523,  523,  523,  526,  523,  118, 
+          523,  526,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  528,    0,    0,    0,    0, 
+            0,    0,    0,    0,  523,  528,    0,    0,    0,  526, 
+            0,    0,    0,    0,    0,   60,   60,   60,    0,    0, 
+           60,   60,   60,    0,   60,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,   60,   60,    0,    0,    0,  101, 
+            0,    0,    0,   60,   60,    0,   60,   60,   60,   60, 
+           60,    0,    0,    0,  528,    0,  120,    0,  528,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  525,  525,  525,    0,    0,    0,  525,  525,    0, 
+          525,    0,    0,    0,    0,    0,  528,    0,    0,    0, 
+            0,    0,    0,    0,    0,   60,    0,    0,   60,  525, 
+          525,    0,  525,  525,  525,  525,  525,    0,    0,    0, 
+          527,    0,    0,    0,    0,    0,   60,    0,    0,    0, 
+          527,    0,    0,    0,    0,    0,  525,  525,  525,  525, 
+          525,  525,  525,  525,  525,  525,  525,  525,  525,  525, 
+           60,    0,  525,  525,  525,  525,    0,  537,    0,    0, 
+            0,  525,    0,    0,  100,    0,    0,    0,  525,    0, 
+          525,    0,  525,  525,  525,  525,  525,  525,  525,  527, 
+          525,  119,  525,  527,    0,    0,    0,    0,    0,    0, 
+          526,  526,  526,    0,    0,    0,  526,  526,    0,  526, 
+            0,    0,    0,    0,    0,    0,  525,  291,    0,    0, 
+            0,  527,    0,    0,    0,    0,    0,    0,  526,  526, 
+            0,  526,  526,  526,  526,  526,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  526,  526,  526,  526,  526, 
+          526,  526,  526,  526,  526,  526,  526,  526,  526,    0, 
+          394,  526,  526,  526,  526,    0,  538,  528,  528,  528, 
+          526,    0,    0,  528,  528,    0,  528,  526,    0,  526, 
+            0,  526,  526,  526,  526,  526,  526,  526,    0,  526, 
+            0,  526,    0,    0,    0,  528,  528,    0,  528,  528, 
+          528,  528,  528,    0,    0,    0,  529,    0,    0,    0, 
+            0,    0,    0,    0,    0,  526,  529,    0,    0,    0, 
+            0,    0,  528,  528,  528,  528,  528,  528,  528,  528, 
+          528,  528,  528,  528,  528,  528,    0,    0,  528,  528, 
+          528,  528,    0,  540,    0,    0,    0,  528,    0,    0, 
+          102,    0,    0,    0,  528,    0,  528,    0,  528,  528, 
+          528,  528,  528,  528,  528,  529,  528,  121,  528,  529, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  527,  527,  527,    0,    0,    0,  527,  527, 
+            0,  527,  528,    0,    0,    0,    0,  529,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          527,  527,    0,  527,  527,  527,  527,  527,    0,    0, 
+            0,  520,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  520,    0,    0,    0,    0,    0,  527,  527,  527, 
+          527,  527,  527,  527,  527,  527,  527,  527,  527,  527, 
+          527,    0,    0,  527,  527,  527,  527,    0,  539,    0, 
+            0,    0,  527,    0,    0,   93,    0,    0,    0,  527, 
+            0,  527,    0,  527,  527,  527,  527,  527,  527,  527, 
+          520,  527,  112,  527,  520,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  519,    0, 
+            0,    0,    0,    0,    0,    0,    0,  527,  519,    0, 
+            0,    0,  520,    0,  369,  370,  371,  372,  373,  374, 
+          375,  376,  377,  378,  379,    0,  380,  381,    0,    0, 
+          382,  383,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,   92,    0,    0,    0,  384,    0,  385,    0, 
+          386,  387,  388,  389,  390,  391,  392,  519,  393,  111, 
+            0,  519,    0,    0,    0,    0,    0,    0,  529,  529, 
+          529,    0,    0,    0,  529,  529,    0,  529,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  519, 
+            0,    0,    0,    0,    0,    0,  529,  529,    0,  529, 
+          529,  529,  529,  529,    0,    0,    0,  522,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  522,    0,    0, 
+            0,    0,    0,  529,  529,  529,  529,  529,  529,  529, 
+          529,  529,  529,  529,  529,  529,  529,    0,    0,  529, 
+          529,  529,  529,    0,  541,    0,    0,    0,  529,    0, 
+            0,   95,    0,    0,    0,  529,    0,  529,    0,  529, 
+          529,  529,  529,  529,  529,  529,  522,  529,  114,  529, 
+          522,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  520,  520,  520,    0,    0,    0,  520, 
+          520,    0,  520,  529,    0,    0,    0,    0,  522,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  520,  520,    0,  520,  520,  520,  520,  520,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  520,  520, 
+          520,  520,  520,  520,  520,  520,  520,  520,  520,  520, 
+          520,  520,    0,    0,  520,  520,  520,  520,    0,  532, 
+          519,  519,  519,  520,    0,    0,  519,  519,    0,  519, 
+          520,    0,  520,    0,  520,  520,  520,  520,  520,  520, 
+          520,    0,  520,    0,  520,    0,    0,    0,  519,  519, 
+            0,  519,  519,  519,  519,  519,    0,    0,    0,  308, 
+            0,    0,    0,    0,    0,    0,    0,    0,  520,  308, 
+            0,    0,    0,    0,    0,  519,  519,  519,  519,  519, 
+          519,  519,  519,  519,  519,  519,  519,  519,  519,    0, 
+            0,  519,  519,  519,  519,    0,  531,    0,    0,    0, 
+          519,    0,    0,  109,    0,    0,    0,  519,    0,  519, 
+            0,  519,  519,  519,  519,  519,  519,  519,  308,  519, 
+          128,  519,  308,    0,    0,    0,    0,    0,    0,  522, 
+          522,  522,    0,    0,    0,  522,  522,    0,  522,    0, 
+            0,    0,    0,    0,    0,  519,    0,    0,    0,    0, 
+          308,    0,    0,    0,    0,    0,    0,  522,  522,    0, 
+          522,  522,  522,  522,  522,    0,    0,    0,  319,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  319,    0, 
+            0,    0,    0,    0,  522,  522,  522,  522,  522,  522, 
+          522,  522,  522,  522,  522,  522,  522,  522,    0,    0, 
+          522,  522,  522,  522,    0,  534,    0,    0,    0,  522, 
+            0,    0,  108,    0,    0,    0,  522,    0,  522,    0, 
+          522,  522,  522,  522,  522,  522,  522,  319,  522,  127, 
+          522,  319,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  724,  619,  522,    0,  725,    0,    0,  319, 
+          160,  161,    0,  162,  163,  164,  165,  166,  167,  168, 
+            0,    0,  169,  170,    0,  231,    0,  171,  172,  173, 
+          174,    0,    0,    0,    0,  231,    0,  287,    0,    0, 
+            0,    0,    0,    0,  176,  177,    0,  178,  179,  180, 
+          181,  182,  183,  184,  185,  186,  187,  188,    0,    0, 
+          189,    0,    0,    0,    0,    0,    0,    0,    0,  231, 
+            0,  308,  308,  308,    0,    0,    0,  308,  308,    0, 
+          308,    0,  190,  231,  231,    0,    0,    0,  231,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  308, 
+          308,    0,  308,  308,  308,  308,  308,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  308,  308,  308,  308, 
+          308,  308,  308,  308,  308,  308,  308,  308,  308,  308, 
+          232,    0,  308,  308,  308,  308,    0,    0,    0,    0, 
+          232,  308,    0,    0,    0,    0,    0,    0,  308,    0, 
+          308,    0,  308,  308,  308,  308,  308,  308,  308,    0, 
+          308,    0,  308,    0,    0,    0,    0,    0,    0,    0, 
+          319,  319,  319,    0,  232,    0,  319,  319,    0,  319, 
+            0,    0,    0,    0,    0,    0,  308,    0,  232,  232, 
+            0,    0,    0,  232,    0,    0,    0,    0,  319,  319, 
+            0,  319,  319,  319,  319,  319,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  319,  319,  319,  319,  319, 
+          319,  319,  319,  319,  319,  319,  319,  319,  319,    0, 
+            0,  319,  319,  319,  319,    0,    0,    0,    0,    0, 
+          319,    0,    0,    0,    0,    0,    0,  319,    0,  319, 
+          308,  319,  319,  319,  319,  319,  319,  319,    0,  319, 
+          308,  319,    0,    0,    0,    0,    0,  231,  231,  231, 
+            0,    0,  231,  231,  231,    0,  231,    0,    0,    0, 
+            0,    0,    0,    0,    0,  319,  231,  231,    0,    0, 
+            0,    0,    0,    0,  308,  231,  231,    0,  231,  231, 
+          231,  231,  231,    0,    0,    0,    0,    0,    0,  308, 
+          231,  128,    0,  308,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  231,  231,  231,  231,  231,  231,  231, 
+          231,  231,  231,    0,  231,  231,    0,    0,  231,  231, 
+            0,  308,    0,    0,  231,    0,    0,  231,    0,    0, 
+          231,    0,  231,    0,    0,    0,  231,    0,    0,    0, 
+          231,  231,  231,  231,  231,  252,  231,    0,  231,    0, 
+            0,    0,    0,    0,    0,  252,    0,    0,    0,    0, 
+          231,    0,  232,  232,  232,    0,    0,  232,  232,  232, 
+            0,  232,  231,    0,    0,    0,    0,    0,    0,    0, 
+            0,  232,  232,    0,    0,    0,    0,    0,    0,  252, 
+          232,  232,    0,  232,  232,  232,  232,  232,    0,    0, 
+            0,    0,    0,  252,  252,  232,    0,    0,  252,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  232,  232, 
+          232,  232,  232,  232,  232,  232,  232,  232,    0,  232, 
+          232,    0,    0,  232,  232,    0,    0,    0,    0,  232, 
+            0,    0,  232,    0,    0,  232,    0,  232,    0,    0, 
+            0,  232,    0,    0,    0,  232,  232,  232,  232,  232, 
+            0,  232,    0,  232,    0,    0,    0,    0,    0,    0, 
+            0,  253,    0,    0,    0,  232,    0,    0,    0,    0, 
+            0,  253,    0,    0,    0,    0,    0,  232,    0,    0, 
+            0,    0,  308,  308,  308,    0,    0,    0,  308,  308, 
+            0,  308,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  253,    0,    0,    0,    0, 
+          308,  308,    0,  308,  308,  308,  308,  308,    0,  253, 
+          253,    0,    0,    0,  253,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  308,  308,  308, 
+          308,  308,  308,  308,  308,  308,  308,  308,  308,  308, 
+          308,    0,    0,  308,  308,  308,  308,    0,    0,    0, 
+            0,    0,  308,    0,    0,    0,    0,    0,    0,  308, 
+            0,  308,    0,  308,  308,  308,  308,  308,  308,  308, 
+            0,  308,    0,  308,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  252,  252,  252, 
+            0,    0,  252,  252,  252,    0,  252,  308,  242,    0, 
+            0,    0,    0,    0,    0,    0,  252,  252,  242,    0, 
+            0,    0,    0,    0,    0,  252,  252,    0,  252,  252, 
+          252,  252,  252,    0,    0,    0,    0,    0,    0,    0, 
           252,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  252,    0,  246,  246, 
-          246,    0,    0,  246,  246,  246,    0,  246,  252,  227, 
-            0,    0,    0,    0,    0,    0,    0,  246,  246,  227, 
-          252,    0,    0,    0,    0,    0,  246,  246,    0,  246, 
-          246,  246,  246,  246,    0,    0,    0,    0,    0,    0, 
-            0,  246,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  227,    0,    0,    0,    0,    0,    0, 
-          246,  246,    0,    0,    0,  246,  246,  227,  227,    0, 
-            0,    0,  227,    0,    0,  246,    0,    0,  246,    0, 
-            0,  246,    0,  246,    0,    0,    0,  247,  247,  247, 
-            0,    0,  247,  247,  247,    0,  247,    0,  228,  246, 
-            0,    0,    0,    0,    0,    0,  247,  247,  228,    0, 
-            0,  246,    0,    0,    0,  247,  247,    0,  247,  247, 
-          247,  247,  247,  246,    0,    0,    0,    0,    0,    0, 
-          247,    0,    0,    0,    0,    0,    0,  255,    0,    0, 
-            0,    0,  228,    0,    0,    0,    0,  255,    0,  247, 
-          247,    0,    0,    0,  247,  247,  228,  228,    0,    0, 
-            0,  228,    0,    0,  247,    0,    0,  247,    0,    0, 
-          247,    0,  247,  253,  253,  253,    0,    0,  253,  253, 
-          253,  255,  253,    0,    0,    0,    0,    0,  247,    0, 
-            0,    0,  253,  253,    0,  255,  255,    0,    0,    0, 
-          247,  253,  253,    0,  253,  253,  253,  253,  253,    0, 
-            0,    0,  247,    0,    0,    0,  253,    0,    0,    0, 
-            0,    0,    0,    0,  220,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  220,    0,  253,    0,    0,    0, 
-          253,  253,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  242,  252,  252,  252,  252,  252,  252,  252, 
+          252,  252,  252,    0,  252,  252,  242,  242,  252,  252, 
+            0,  242,    0,    0,  252,    0,    0,  252,    0,    0, 
+          252,    0,  252,    0,    0,    0,  252,    0,    0,    0, 
+            0,    0,  252,  252,  252,    0,  252,    0,  252,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          252,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  252,  253,  253,  253,    0,    0,  253,  253, 
+          253,    0,  253,    0,  240,    0,    0,    0,    0,    0, 
+            0,    0,  253,  253,  240,    0,    0,    0,    0,    0, 
+            0,  253,  253,    0,  253,  253,  253,  253,  253,    0, 
+            0,    0,    0,    0,    0,    0,  253,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  240,  253, 
+          253,  253,  253,  253,  253,  253,  253,  253,  253,    0, 
+          253,  253,  240,  240,  253,  253,    0,  240,    0,    0, 
           253,    0,    0,  253,    0,    0,  253,    0,  253,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  220,    0, 
-            0,  227,  227,  227,  253,    0,  227,  227,  227,    0, 
-          227,    0,  220,  220,    0,    0,  253,    0,    0,    0, 
-          227,  227,    0,    0,    0,    0,    0,    0,  253,  227, 
-          227,    0,  227,  227,  227,  227,  227,    0,    0,    0, 
-            0,  263,    0,    0,  227,    0,    0,    0,    0,    0, 
-            0,  263,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  227,    0, 
-            0,  227,    0,    0,  227,  263,  227,    0,    0,    0, 
-          228,  228,  228,    0,    0,  228,  228,  228,    0,  228, 
-          263,    0,  227,    0,    0,    0,    0,    0,    0,  228, 
-          228,    0,    0,    0,  227,    0,    0,    0,  228,  228, 
-            0,  228,  228,  228,  228,  228,  227,  268,    0,  255, 
-          255,  255,    0,  228,  255,  255,  255,  268,  255,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  255,  255, 
-            0,    0,    0,    0,    0,    0,    0,  255,  255,    0, 
-          255,  255,  255,  255,  255,    0,    0,  228,    0,    0, 
-          228,  268,  255,  228,    0,  228,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  268,  268,    0,    0,    0, 
+            0,    0,  253,    0,    0,    0,    0,    0,  253,  253, 
+          253,    0,  253,    0,  253,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  253,  241,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  241,  253,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          242,  242,  242,    0,    0,  242,  242,  242,    0,  242, 
+            0,  241,    0,    0,    0,    0,    0,    0,    0,  242, 
+          242,    0,    0,    0,    0,  241,  241,    0,  242,  242, 
+          241,  242,  242,  242,  242,  242,    0,    0,    0,    0, 
+            0,    0,    0,  242,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  242,  242,  242,  242, 
+          242,  242,  242,  242,  242,  242,    0,  242,  242,    0, 
+            0,    0,    0,    0,    0,    0,    0,  242,    0,    0, 
+          242,    0,    0,  242,    0,  242,    0,    0,    0,  242, 
+            0,    0,    0,  263,    0,  242,  242,  242,    0,  242, 
+            0,  242,    0,  263,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  242,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  242,  240,  240,  240,    0, 
+            0,  240,  240,  240,    0,  240,    0,  263,    0,    0, 
+            0,    0,    0,    0,    0,  240,  240,    0,    0,    0, 
+            0,  263,  263,    0,  240,  240,  263,  240,  240,  240, 
+          240,  240,    0,    0,    0,    0,    0,    0,    0,  240, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  240,  240,  240,  240,  240,  240,  240,  240, 
+          240,  240,    0,  240,  240,    0,    0,    0,    0,    0, 
+            0,    0,    0,  240,    0,    0,  240,    0,  264,  240, 
+            0,  240,    0,    0,    0,    0,    0,    0,  264,    0, 
+            0,  240,  240,  240,    0,  240,    0,  240,    0,  241, 
+          241,  241,    0,    0,  241,  241,  241,    0,  241,  240, 
+            0,    0,    0,    0,    0,    0,    0,    0,  241,  241, 
+            0,  240,  264,    0,    0,    0,    0,  241,  241,    0, 
+          241,  241,  241,  241,  241,    0,  264,  264,    0,    0, 
+            0,  264,  241,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  241,  241,  241,  241,  241, 
+          241,  241,  241,  241,  241,    0,  241,  241,    0,    0, 
+            0,    0,    0,    0,    0,    0,  241,    0,    0,  241, 
+            0,    0,  241,    0,  241,    0,    0,    0,    0,    0, 
+            0,    0,  245,    0,  241,  241,  241,    0,  241,    0, 
+          241,    0,  245,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  241,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  241,  263,  263,  263,    0,    0, 
+          263,  263,  263,    0,  263,    0,  245,    0,    0,    0, 
+            0,    0,    0,    0,  263,  263,    0,    0,    0,    0, 
+          245,  245,    0,  263,  263,  245,  263,  263,  263,  263, 
+          263,    0,    0,    0,    0,    0,    0,    0,  263,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  263,  263,  263,  263,  263,  263,  263,  263,  263, 
+          263,    0,  263,  263,    0,    0,    0,    0,    0,    0, 
+            0,    0,  263,    0,    0,  263,    0,  246,  263,    0, 
+          263,    0,    0,    0,    0,    0,    0,  246,    0,    0, 
+          263,  263,    0,    0,    0,    0,  263,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  263,    0, 
+          264,  264,  264,    0,    0,  264,  264,  264,    0,  264, 
+          263,  246,    0,    0,    0,    0,    0,    0,    0,  264, 
+          264,    0,    0,    0,    0,  246,  246,    0,  264,  264, 
+          246,  264,  264,  264,  264,  264,    0,    0,    0,    0, 
+            0,    0,    0,  264,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  264,  264,  264,  264, 
+          264,  264,  264,  264,  264,  264,    0,  264,  264,    0, 
+            0,    0,    0,    0,    0,    0,    0,  264,    0,    0, 
+          264,    0,    0,  264,    0,  264,    0,    0,    0,    0, 
+            0,    0,    0,  247,    0,  264,  264,    0,    0,    0, 
+            0,  264,    0,  247,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  264,  245,  245,  245,    0,    0,  245, 
+          245,  245,    0,  245,    0,  264,    0,    0,    0,    0, 
+            0,    0,    0,  245,  245,    0,    0,  247,    0,    0, 
+            0,    0,  245,  245,    0,  245,  245,  245,  245,  245, 
+            0,  247,  247,    0,    0,    0,  247,  245,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  245,  245,    0,    0, 
+            0,  245,  245,    0,    0,    0,    0,    0,    0,    0, 
+            0,  245,    0,    0,  245,    0,  254,  245,    0,  245, 
+            0,    0,    0,    0,    0,    0,  254,    0,    0,    0, 
+            0,    0,    0,    0,    0,  245,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  245,    0,  246, 
+          246,  246,    0,    0,  246,  246,  246,    0,  246,  245, 
+          254,    0,    0,    0,    0,    0,    0,    0,  246,  246, 
+            0,    0,    0,    0,  254,  254,    0,  246,  246,  254, 
+          246,  246,  246,  246,  246,    0,    0,    0,    0,    0, 
+            0,    0,  246,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  248,    0,    0,    0,    0, 
+            0,  246,  246,    0,    0,  248,  246,  246,    0,    0, 
+            0,    0,    0,    0,    0,    0,  246,    0,    0,  246, 
+            0,    0,  246,    0,  246,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  248, 
+          246,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  246,  248,  248,    0,    0,    0,  248,    0, 
+            0,    0,    0,    0,  246,  247,  247,  247,    0,    0, 
+          247,  247,  247,    0,  247,    0,    0,    0,    0,    0, 
+            0,  249,    0,    0,  247,  247,    0,    0,    0,    0, 
+            0,  249,    0,  247,  247,    0,  247,  247,  247,  247, 
+          247,    0,    0,    0,    0,    0,    0,    0,  247,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  249,    0,  247,  247,    0, 
+            0,    0,  247,  247,    0,    0,    0,    0,    0,  249, 
+          249,    0,  247,    0,  249,  247,    0,    0,  247,    0, 
+          247,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  247,    0,  254,  254, 
+          254,    0,    0,  254,  254,  254,    0,  254,  247,  255, 
+            0,    0,    0,    0,    0,    0,    0,  254,  254,  255, 
+          247,    0,    0,    0,    0,    0,  254,  254,    0,  254, 
+          254,  254,  254,  254,    0,    0,    0,    0,    0,    0, 
+            0,  254,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  255,    0,    0,    0,    0,    0,    0, 
+          254,  254,    0,    0,    0,  254,  254,  255,  255,    0, 
+            0,    0,  255,    0,    0,  254,    0,    0,  254,    0, 
+            0,  254,    0,  254,    0,    0,    0,  248,  248,  248, 
+            0,    0,  248,  248,  248,    0,  248,    0,  227,  254, 
+            0,    0,    0,    0,    0,    0,  248,  248,  227,    0, 
+            0,  254,    0,    0,    0,  248,  248,    0,  248,  248, 
+          248,  248,  248,  254,    0,    0,    0,    0,    0,    0, 
+          248,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  227,    0,    0,    0,    0,    0,    0,  248, 
+          248,    0,    0,    0,  248,  248,  227,  227,    0,    0, 
+            0,  227,    0,    0,  248,    0,    0,  248,    0,    0, 
+          248,    0,  248,  249,  249,  249,    0,    0,  249,  249, 
+          249,    0,  249,    0,  228,    0,    0,    0,  248,    0, 
+            0,    0,  249,  249,  228,    0,    0,    0,    0,    0, 
+          248,  249,  249,    0,  249,  249,  249,  249,  249,    0, 
+            0,    0,  248,    0,    0,    0,  249,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  228,    0, 
+            0,    0,    0,    0,    0,  249,  249,    0,    0,    0, 
+          249,  249,  228,  228,    0,    0,    0,  228,    0,    0, 
+          249,    0,    0,  249,    0,    0,  249,    0,  249,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  255,  255,  255,  249,    0,  255,  255,  255,    0, 
+          255,    0,  257,    0,    0,    0,  249,    0,    0,    0, 
+          255,  255,  257,    0,    0,    0,    0,    0,  249,  255, 
+          255,    0,  255,  255,  255,  255,  255,    0,    0,    0, 
+            0,    0,    0,    0,  255,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  257,    0,    0,    0, 
+            0,    0,    0,    0,  255,    0,    0,    0,  255,  255, 
+          257,  257,    0,    0,    0,    0,    0,    0,  255,    0, 
+            0,  255,    0,    0,  255,    0,  255,    0,    0,    0, 
+          227,  227,  227,    0,    0,  227,  227,  227,  220,  227, 
+            0,    0,  255,    0,    0,    0,    0,    0,  220,  227, 
+          227,    0,    0,    0,  255,    0,    0,    0,  227,  227, 
+            0,  227,  227,  227,  227,  227,  255,    0,    0,    0, 
+            0,    0,    0,  227,    0,    0,    0,    0,    0,    0, 
+            0,    0,  220,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  220,  220,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  227,    0,    0, 
+          227,    0,    0,  227,    0,  227,  228,  228,  228,    0, 
+            0,  228,  228,  228,  265,  228,    0,    0,    0,    0, 
+            0,  227,    0,    0,  265,  228,  228,    0,    0,    0, 
+            0,    0,    0,  227,  228,  228,    0,  228,  228,  228, 
+          228,  228,    0,    0,    0,  227,    0,    0,    0,  228, 
+            0,    0,    0,    0,    0,    0,    0,    0,  265,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  265,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  228,    0,    0,  228,    0,    0,  228, 
             0,  228,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  228,    0,    0,  255,    0,    0,  255, 
-            0,    0,  255,    0,  255,  228,  220,  220,  220,    0, 
-            0,  220,  220,  220,    0,  220,    0,    0,    0,  288, 
-          255,    0,    0,    0,    0,  220,  220,    0,    0,  288, 
-            0,    0,  255,    0,  220,  220,    0,  220,  220,  220, 
-          220,  220,    0,    0,  255,    0,    0,    0,    0,  220, 
-            0,    0,    0,    0,    0,    0,    0,  290,    0,    0, 
-            0,    0,    0,  288,    0,    0,    0,  290,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  288,    0, 
-            0,    0,    0,  220,    0,    0,  220,    0,    0,  220, 
-            0,  220,    0,  263,  263,  263,    0,    0,  263,  263, 
-          263,  290,  263,    0,    0,    0,    0,  220,    0,    0, 
-            0,    0,  263,  263,    0,    0,  290,    0,    0,  220, 
-            0,  263,  263,    0,  263,  263,  263,  263,  263,    0, 
-            0,  220,    0,    0,    0,    0,  263,    0,    0,    0, 
-            0,    0,    0,    0,    0,  649,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  649,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          263,    0,    0,  263,    0,    0,  263,    0,  263,  268, 
-          268,  268,    0,   64,  268,  268,  268,    0,  268,    0, 
-            0,    0,    0,   64,  263,    0,    0,    0,  268,  268, 
-            0,    0,    0,    0,  649,    0,  263,  268,  268,    0, 
-          268,  268,  268,  268,    0,    0,    0,    0,  263,    0, 
-            0,    0,  268,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,   64,    0,    0,    0,    0,    0,   62,    0, 
-            0,    0,    0,    0,    0,    0,  268,    0,   62,  268, 
-            0,    0,  268,    0,  268,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          268,  288,  288,  288,    0,   54,  288,  288,  288,    0, 
-          288,    0,  268,    0,    0,   54,    0,    0,    0,    0, 
-          288,  288,    0,    0,  268,    0,    0,   62,    0,  288, 
-          288,    0,  288,  288,  288,  288,  288,    0,    0,  290, 
-          290,  290,    0,    0,  290,  290,  290,    0,  290,    0, 
-            0,    0,    0,    0,    0,   56,    0,    0,  290,  290, 
-            0,    0,    0,    0,   54,   56,    0,  290,  290,    0, 
-          290,  290,  290,  290,  290,    0,    0,    0,    0,    0, 
-            0,  288,    0,    0,  288,    0,  288,    0,    0,    0, 
-            0,    0,    0,    0,   57,    0,    0,    0,    0,    0, 
-            0,    0,  288,    0,   57,    0,    0,    0,    0,    0, 
-          296,    0,    0,    0,   56,  291,    0,    0,    0,  290, 
-          296,    0,  290,    0,  290,    0,  288,  649,  649,  649, 
-            0,    0,  649,  649,  649,    0,  649,    0,    0,    0, 
-          290,    0,    0,    0,    0,    0,  649,  649,    0,    0, 
-            0,    0,    0,   57,  289,  649,  649,    0,  649,  649, 
-          649,  649,  649,    0,  290,   64,   64,   64,  394,  296, 
-           64,   64,   64,    0,   64,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,   64,   64,    0,    0,    0,    0, 
-            0,    0,    0,   64,   64,    0,   64,   64,   64,   64, 
-           64,    0,    0,    0,    0,    0,    0,  649,    0,    0, 
-          649,    0,  649,    0,    0,    0,  294,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  294,    0,  649,    0, 
-           62,   62,   62,    0,    0,   62,   62,   62,    0,   62, 
-            0,    0,    0,    0,    0,   64,    0,    0,   64,   62, 
-           62,    0,  649,    0,    0,    0,    0,    0,   62,   62, 
-          290,   62,   62,   62,   62,   62,   64,   54,   54,   54, 
-          295,    0,   54,   54,   54,  294,   54,    0,    0,    0, 
-          295,    0,    0,    0,    0,    0,   54,    0,    0,    0, 
-           64,    0,    0,    0,    0,   54,   54,    0,   54,   54, 
-           54,   54,   54,    0,    0,    0,    0,    0,    0,    0, 
-           62,    0,    0,   62,  291,    0,    0,   56,   56,   56, 
-            0,    0,   56,   56,   56,    0,   56,    0,    0,  295, 
-            0,   62,    0,    0,    0,    0,   56,    0,    0,    0, 
-            0,    0,    0,    0,    0,   56,   56,   54,   56,   56, 
-           56,   56,   56,    0,    0,   62,   57,   57,   57,    0, 
-            0,   57,   57,   57,    0,   57,    0,    0,   54,    0, 
-            0,    0,  296,  296,  296,   57,  291,  296,  296,  296, 
-            0,  296,    0,    0,   57,   57,    0,   57,   57,   57, 
-           57,   57,   54,    0,    0,    0,    0,   56,    0,    0, 
-            0,    0,    0,  296,  296,  296,  296,  296,    0,    0, 
+            0,    0,  270,    0,  257,  257,  257,  228,    0,  257, 
+          257,  257,  270,  257,    0,    0,    0,    0,    0,  228, 
+            0,    0,    0,  257,  257,    0,    0,    0,    0,    0, 
+            0,  228,  257,  257,    0,  257,  257,  257,  257,  257, 
+            0,  290,    0,    0,    0,    0,  270,  257,    0,    0, 
+            0,  290,    0,    0,    0,    0,    0,    0,    0,    0, 
+          270,  270,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  257,    0,    0,  257,  290,    0,  257,    0,  257, 
+          220,  220,  220,    0,    0,  220,  220,  220,    0,  220, 
+          290,    0,    0,    0,    0,  257,    0,    0,    0,  220, 
+          220,    0,    0,    0,    0,    0,    0,  257,  220,  220, 
+            0,  220,  220,  220,  220,  220,    0,    0,  292,  257, 
+            0,    0,    0,  220,    0,    0,    0,    0,  292,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  220,    0,  651, 
+          220,    0,  292,  220,    0,  220,  265,  265,  265,  651, 
+            0,  265,  265,  265,    0,  265,    0,  292,    0,    0, 
+            0,  220,    0,    0,    0,  265,  265,    0,    0,    0, 
+            0,    0,    0,  220,  265,  265,    0,  265,  265,  265, 
+          265,  265,    0,    0,    0,  220,    0,    0,    0,  265, 
+            0,    0,    0,    0,    0,    0,    0,    0,  651,    0, 
+            0,   64,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,   64,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  265,    0,    0,  265,    0,    0,  265, 
+            0,  265,    0,    0,  270,  270,  270,    0,    0,  270, 
+          270,  270,    0,  270,    0,    0,    0,  265,    0,    0, 
+            0,    0,    0,  270,  270,    0,    0,    0,    0,  265, 
+           64,    0,  270,  270,    0,  270,  270,  270,  270,    0, 
+            0,  265,    0,  290,  290,  290,    0,  270,  290,  290, 
+          290,    0,  290,    0,    0,   62,    0,    0,    0,    0, 
+            0,    0,  290,  290,    0,   62,    0,    0,    0,    0, 
+            0,  290,  290,    0,  290,  290,  290,  290,  290,    0, 
+            0,  270,    0,    0,  270,    0,    0,  270,    0,  270, 
+            0,    0,   52,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,   52,    0,    0,  270,    0,    0,    0,    0, 
+            0,    0,    0,    0,   62,    0,    0,  270,    0,    0, 
+            0,    0,    0,  290,    0,    0,  290,    0,  290,  270, 
+          292,  292,  292,    0,    0,  292,  292,  292,    0,  292, 
+            0,    0,   54,    0,  290,    0,    0,    0,    0,  292, 
+          292,   52,   54,    0,    0,    0,    0,    0,  292,  292, 
+            0,  292,  292,  292,  292,  292,    0,    0,  290,    0, 
+            0,  651,  651,  651,    0,    0,  651,  651,  651,    0, 
+          651,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          651,  651,    0,    0,    0,    0,    0,    0,    0,  651, 
+          651,   54,  651,  651,  651,  651,  651,    0,    0,    0, 
+          292,    0,    0,  292,    0,  292,    0,    0,   56,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,   56,    0, 
-            0,    0,  369,  370,  371,  372,  373,  374,  375,  376, 
-          377,  378,  379,    0,  380,  381,   57,    0,  382,  383, 
-            0,    0,   56,    0,    0,    0,    0,    0,    0,  296, 
-            0,    0,  296,    0,  384,    0,  385,   57,  386,  387, 
-          388,  389,  390,  391,  392,    0,  393,    0,    0,    0, 
-            0,    0,    0,  296,    0,    0,    0,    0,  294,  294, 
-          294,   57,    0,  294,  294,  294,    0,  294,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  296,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  129,    0,  294, 
-          294,  294,  294,  294,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  295,  295,  295,    0,    0,  295,  295,  295, 
-            0,  295,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  294,  129,    0,  294,    0, 
-            0,    0,    0,  295,  295,  295,  295,  295,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  294, 
-            0,    0,    0,    0,    0,    0,    0,    0,  516,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  294,    0,    0,    0,    0,    0,  295, 
-            0,    0,  295,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    4,    5,    6,    0,    8,    0,    0, 
-            0,    9,   10,  295,    0,    0,   11,    0,   12,   13, 
-           14,   15,   16,   17,   18,    0,  130,    0,    0,   19, 
-           20,   21,  212,  213,  214,  215,    0,  295,  249,    0, 
-            0,    0,    0,    0,    0,   28,    0,    0,  216,  217, 
-          218,    0,  219,   35,  220,  221,  222,  223,  269,   40, 
-           41,   42,   43,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  130,    0,    0,    0,    0, 
-            0,    0,    0,  224,    0,    0,  225,    0,    0,   46, 
-           47,    0,   48,    0,  270,    0,  271,    0,   50,    0, 
-            0,    0,    0,    0,    0,    0,  272,  519,    0,    0, 
-            0,   52,  273,   54,   55,   56,   57,    0,    0,    0, 
-           58,    0,   59,   60,    0,   61,   62,   63,   64,    0, 
-           65,   66,  274,  129,  129,  129,  129,  129,  129,  129, 
-          129,  129,  129,  129,    0,    0,  129,  129,    0,  129, 
-          129,  129,  129,  129,  129,  129,    0,  619,    0,  129, 
-          129,  129,  129,  129,  129,  129,  129,    0,    0,  129, 
-            0,    0,    0,    0,    0,  129,  129,    0,  129,  129, 
-          129,  129,    0,  129,  129,  129,  129,  129,  129,    0, 
-          129,  129,  129,  129,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  516,    0,    0,  129,    0, 
-            0,    0,  516,  516,  129,    0,    0,  129,  619,    0, 
-          129,  129,    0,  129,    0,  129,    0,    0,    0,  129, 
-            0,    0,    0,    0,  129,    0,    0,  129,    0,  619, 
-          626,    0,  129,  129,  129,  129,  129,  129,    0,    0, 
-            0,  129,    0,  129,  129,    0,  129,  129,  129,  129, 
-            0,  129,  129,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  130,  130,  130,  130,  130,  130,  130,  130, 
-          130,  130,  130,    0,    0,  130,  130,    0,  130,  130, 
-          130,  130,  130,  130,  130,    0,  620,    0,  130,  130, 
-          130,  130,  130,  130,  130,  130,    0,    0,  130,    0, 
-            0,    0,    0,    0,  130,  130,    0,  130,  130,  130, 
-          130,    0,  130,  130,  130,  130,  130,  130,    0,  130, 
-          130,  130,  130,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  519,    0,    0,  130,    0,    0, 
-            0,  519,  519,  130,    0,    0,  130,  620,    0,  130, 
-          130,    0,  130,    0,  130,    0,    0,    0,  130,    0, 
-            0,    0,    0,  130,    0,    0,  130,    0,  620,  316, 
-            0,  130,  130,  130,  130,  130,  130,    0,    0,    0, 
-          130,    0,  130,  130,    0,  130,  130,  130,  130,    0, 
-          130,  130,    0,    0,    0,  129,  129,  129,  129,  129, 
+            0,  292,    0,   64,   64,   64,    0,    0,   64,   64, 
+           64,    0,   64,    0,    0,    0,    0,    0,    0,    0, 
+            0,  651,   64,   64,  651,  292,  651,    0,    0,    0, 
+            0,   64,   64,    0,   64,   64,   64,   64,   64,    0, 
+            0,   57,  651,    0,    0,    0,    0,   56,    0,    0, 
+            0,   57,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  651,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,   64,    0,    0,   64,   62,   62,   62, 
+            0,  298,   62,   62,   62,    0,   62,    0,    0,    0, 
+           57,  298,  296,    0,   64,    0,   62,   62,    0,    0, 
+            0,    0,  296,    0,    0,   62,   62,    0,   62,   62, 
+           62,   62,   62,    0,   52,   52,   52,    0,   64,   52, 
+           52,   52,    0,   52,    0,  291,    0,    0,    0,    0, 
+            0,    0,    0,   52,    0,    0,  292,    0,    0,    0, 
+          298,    0,   52,   52,  297,   52,   52,   52,   52,   52, 
+            0,  296,    0,    0,  297,    0,    0,   62,    0,    0, 
+           62,    0,    0,    0,   54,   54,   54,    0,    0,   54, 
+           54,   54,    0,   54,    0,    0,    0,    0,   62,    0, 
+            0,    0,    0,   54,    0,    0,    0,    0,  293,    0, 
+            0,    0,   54,   54,   52,   54,   54,   54,   54,   54, 
+            0,    0,   62,  297,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,   52,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,   52, 
+           56,   56,   56,    0,   54,   56,   56,   56,  291,   56, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,   56, 
+            0,    0,    0,    0,    0,   54,    0,    0,   56,   56, 
+            0,   56,   56,   56,   56,   56,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,   54, 
+            0,    0,    0,   57,   57,   57,    0,    0,   57,   57, 
+           57,    0,   57,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,   57,    0,    0,    0,    0,    0,    0,    0, 
+           56,   57,   57,    0,   57,   57,   57,   57,   57,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,   56,    0,  298,  298,  298,    0,    0,  298,  298, 
+          298,    0,  298,    0,  296,  296,  296,    0,    0,  296, 
+          296,  296,    0,  296,    0,   56,    0,    0,    0,    0, 
+            0,    0,    0,   57,  298,  298,  298,  298,  298,  129, 
+            0,    0,    0,    0,    0,  296,  296,  296,  296,  296, 
+            0,    0,    0,    0,   57,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  297,  297,  297,    0, 
+            0,  297,  297,  297,    0,  297,    0,    0,   57,    0, 
+          298,    0,    0,  298,    0,    0,    0,    0,  129,    0, 
+            0,  296,    0,    0,  296,    0,    0,  297,  297,  297, 
+          297,  297,    0,    0,  298,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  296,    0,    0,    0,    0, 
+          518,    0,    0,    0,    0,    0,    0,    0,  298,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  296, 
+            0,    0,    0,  297,    0,    0,  297,    0,    0,    0, 
+            0,    0,    0,    0,    0,    4,    5,    6,    0,    8, 
+            0,    0,    0,    9,   10,    0,    0,  297,   11,    0, 
+           12,   13,   14,   15,   16,   17,   18,    0,  130,    0, 
+            0,   19,   20,   21,  212,  213,  214,  215,    0,    0, 
+          249,  297,    0,    0,    0,    0,    0,   28,    0,    0, 
+          216,  217,  218,    0,  219,   35,  220,  221,  222,  223, 
+          269,   40,   41,   42,   43,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  130,    0,    0, 
+            0,    0,    0,    0,    0,  224,    0,    0,  225,    0, 
+            0,   46,   47,    0,   48,    0,  270,    0,  271,    0, 
+           50,    0,    0,    0,    0,    0,    0,    0,  272,  521, 
+            0,    0,    0,   52,  273,   54,   55,   56,   57,    0, 
+            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
+           64,    0,   65,   66,  274,  129,  129,  129,  129,  129, 
           129,  129,  129,  129,  129,  129,    0,    0,  129,  129, 
-            0,  129,  129,  129,  129,  129,  129,  129,    0,  626, 
-            0,  130,  129,  129,  129,  129,  129,  129,  129,    0, 
+            0,  129,  129,  129,  129,  129,  129,  129,    0,  621, 
+            0,  129,  129,  129,  129,  129,  129,  129,  129,    0, 
             0,  129,    0,    0,    0,    0,    0,  129,  129,    0, 
           129,  129,  129,  129,    0,  129,  129,  129,  129,  129, 
           129,    0,  129,  129,  129,  129,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  626,    0,    0, 
-          130,    0,    0,    0,  626,  626,  129,    0,    0,  129, 
-          622,    0,  129,  129,    0,  129,    0,  129,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  518,    0,    0, 
+          129,    0,    0,    0,  518,  518,  129,    0,    0,  129, 
+          621,    0,  129,  129,    0,  129,    0,  129,    0,    0, 
             0,  129,    0,    0,    0,    0,  129,    0,    0,  129, 
-            0,  626,  317,    0,  129,  129,  129,  129,  129,  129, 
+            0,  621,  628,    0,  129,  129,  129,  129,  129,  129, 
             0,    0,    0,  129,    0,  129,  129,    0,  129,  129, 
           129,  129,    0,  129,  129,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,  130,  130,  130,  130,  130,  130, 
           130,  130,  130,  130,  130,    0,    0,  130,  130,    0, 
-          130,  130,  130,  130,  130,  130,  130,    0,  364,    0, 
-            0,  130,  130,  130,  130,  130,  130,  130,    0,    0, 
+          130,  130,  130,  130,  130,  130,  130,    0,  622,    0, 
+          130,  130,  130,  130,  130,  130,  130,  130,    0,    0, 
           130,    0,    0,    0,    0,    0,  130,  130,    0,  130, 
           130,  130,  130,    0,  130,  130,  130,  130,  130,  130, 
             0,  130,  130,  130,  130,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  316,  364,    0,    0, 
-            0,    0,    0,  316,  316,  130,    0,    0,  130,  623, 
+            0,    0,    0,    0,    0,    0,  521,    0,    0,  130, 
+            0,    0,    0,  521,  521,  130,    0,    0,  130,  622, 
             0,  130,  130,    0,  130,    0,  130,    0,    0,    0, 
           130,    0,    0,    0,    0,  130,    0,    0,  130,    0, 
-            0,    0,    0,  130,  130,  130,  130,  130,  130,    0, 
+          622,  318,    0,  130,  130,  130,  130,  130,  130,    0, 
             0,    0,  130,    0,  130,  130,    0,  130,  130,  130, 
-          130,    0,  130,  130,    0,    0,    0,  130,  130,  130, 
-          130,  130,  130,  130,  130,  130,  130,  130,    0,    0, 
-          130,  130,    0,  130,  130,  130,  130,  130,  130,  130, 
-            0,  308,    0,    0,  130,  130,  130,  130,  130,  130, 
-          130,    0,    0,  130,    0,    0,    0,    0,    0,  130, 
-          130,    0,  130,  130,  130,  130,    0,  130,  130,  130, 
-          130,  130,  130,    0,  130,  130,  130,  130,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  317, 
-          308,    0,    0,    0,    0,    0,  317,  317,  130,    0, 
-            0,  130,    0,    0,  130,  130,    0,  130,    0,  130, 
-            0,    0,    0,  130,    0,    0,    0,    0,  130,    0, 
-            0,  130,    0,    0,    0,    0,  130,  130,  130,  130, 
-          130,  130,    0,    0,    0,  130,    0,  130,  130,    0, 
-          130,  130,  130,  130,    0,  130,  130,    0,    0,    0, 
-            0,    0,    0,    0,  364,  364,  364,  364,  364,  364, 
-          364,  364,  364,  364,  364,    0,  364,  364,  364,  364, 
-          364,  364,  364,  364,  364,  364,  364,  544,    0,    0, 
-            0,  364,  364,  364,  364,  364,  364,  364,    0,    0, 
-          364,    0,    0,    0,    0,    0,  364,  364,    0,  364, 
-          364,  364,  364,    0,  364,  364,  364,  364,  364,  364, 
-            0,  364,  364,  364,  364,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  544,    0,    0,    0, 
-            0,    0,    0,    0,    0,  364,    0,    0,  364,    0, 
-            0,  364,  364,    0,  364,    0,  364,    0,    0,    0, 
-          364,    0,    0,    0,    0,    0,    0,    0,  364,    0, 
-            0,    0,    0,  364,  364,  364,  364,  364,  364,    0, 
-            0,    0,  364,    0,  364,  364,    0,  364,  364,  364, 
-          364,    0,  364,  364,    0,    0,    0,  308,  308,  308, 
-          308,  308,  308,  308,  308,  308,  308,  308,    0,    0, 
-          308,  308,    0,  308,  308,  308,  308,  308,  308,  308, 
-          648,    0,    0,    0,  308,  308,  308,  308,  308,  308, 
-          308,    0,    0,  308,    0,    0,    0,    0,    0,  308, 
-          308,    0,  308,  308,  308,  308,    0,  308,  308,  308, 
-          308,  308,  308,    0,  308,  308,  308,  308,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  648, 
-            0,    0,    0,    0,    0,    0,    0,    0,  308,    0, 
-            0,  308,    0,    0,  308,  308,    0,  308,    0,  308, 
-            0,    0,    0,  308,    0,    0,    0,    0,    0,    0, 
-            0,  308,    0,   17,    0,    0,  308,  308,  308,  308, 
-          308,  308,    0,    0, 
+          130,    0,  130,  130,    0,    0,    0,  129,  129,  129, 
+          129,  129,  129,  129,  129,  129,  129,  129,    0,    0, 
+          129,  129,    0,  129,  129,  129,  129,  129,  129,  129, 
+            0,  628,    0,  130,  129,  129,  129,  129,  129,  129, 
+          129,    0,    0,  129,    0,    0,    0,    0,    0,  129, 
+          129,    0,  129,  129,  129,  129,    0,  129,  129,  129, 
+          129,  129,  129,    0,  129,  129,  129,  129,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  628, 
+            0,    0,  130,    0,    0,    0,  628,  628,  129,    0, 
+            0,  129,  624,    0,  129,  129,    0,  129,    0,  129, 
+            0,    0,    0,  129,    0,    0,    0,    0,  129,    0, 
+            0,  129,    0,  628,  319,    0,  129,  129,  129,  129, 
+          129,  129,    0,    0,    0,  129,    0,  129,  129,    0, 
+          129,  129,  129,  129,    0,  129,  129,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  130,  130,  130,  130, 
+          130,  130,  130,  130,  130,  130,  130,    0,    0,  130, 
+          130,    0,  130,  130,  130,  130,  130,  130,  130,    0, 
+          366,    0,    0,  130,  130,  130,  130,  130,  130,  130, 
+            0,    0,  130,    0,    0,    0,    0,    0,  130,  130, 
+            0,  130,  130,  130,  130,    0,  130,  130,  130,  130, 
+          130,  130,    0,  130,  130,  130,  130,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  318,  366, 
+            0,    0,    0,    0,    0,  318,  318,  130,    0,    0, 
+          130,  625,    0,  130,  130,    0,  130,    0,  130,    0, 
+            0,    0,  130,    0,    0,    0,    0,  130,    0,    0, 
+          130,    0,    0,    0,    0,  130,  130,  130,  130,  130, 
+          130,    0,    0,    0,  130,    0,  130,  130,    0,  130, 
+          130,  130,  130,    0,  130,  130,    0,    0,    0,  130, 
+          130,  130,  130,  130,  130,  130,  130,  130,  130,  130, 
+            0,    0,  130,  130,    0,  130,  130,  130,  130,  130, 
+          130,  130,    0,  310,    0,    0,  130,  130,  130,  130, 
+          130,  130,  130,    0,    0,  130,    0,    0,    0,    0, 
+            0,  130,  130,    0,  130,  130,  130,  130,    0,  130, 
+          130,  130,  130,  130,  130,    0,  130,  130,  130,  130, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  319,  310,    0,    0,    0,    0,    0,  319,  319, 
+          130,    0,    0,  130,    0,    0,  130,  130,    0,  130, 
+            0,  130,    0,    0,    0,  130,    0,    0,    0,    0, 
+          130,    0,    0,  130,    0,    0,    0,    0,  130,  130, 
+          130,  130,  130,  130,    0,    0,    0,  130,    0,  130, 
+          130,    0,  130,  130,  130,  130,    0,  130,  130,    0, 
+            0,    0,    0,    0,    0,    0,  366,  366,  366,  366, 
+          366,  366,  366,  366,  366,  366,  366,    0,  366,  366, 
+          366,  366,  366,  366,  366,  366,  366,  366,  366,  546, 
+            0,    0,    0,  366,  366,  366,  366,  366,  366,  366, 
+            0,    0,  366,    0,    0,    0,    0,    0,  366,  366, 
+            0,  366,  366,  366,  366,    0,  366,  366,  366,  366, 
+          366,  366,    0,  366,  366,  366,  366,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  546,    0, 
+            0,    0,    0,    0,    0,    0,    0,  366,    0,    0, 
+          366,    0,    0,  366,  366,    0,  366,    0,  366,    0, 
+            0,    0,  366,    0,    0,    0,    0,    0,    0,    0, 
+          366,    0,    0,    0,    0,  366,  366,  366,  366,  366, 
+          366,    0,    0,    0,  366,    0,  366,  366,    0,  366, 
+          366,  366,  366,    0,  366,  366,    0,    0,    0,  310, 
+          310,  310,  310,  310,  310,  310,  310,  310,  310,  310, 
+            0,    0,  310,  310,    0,  310,  310,  310,  310,  310, 
+          310,  310,  650,    0,    0,    0,  310,  310,  310,  310, 
+          310,  310,  310,    0,    0,  310,    0,    0,    0,    0, 
+            0,  310,  310,    0,  310,  310,  310,  310,    0,  310, 
+          310,  310,  310,  310,  310,    0,  310,  310,  310,  310, 
       };
    }
 
    private static final short[] yyTable4() {
       return new short[] {
 
-            0,  308,    0,  308,  308,    0,  308,  308,  308,  308, 
-            0,  308,  308,    0,    0,    0,    0,    0,    0,  544, 
-          544,  544,  544,  544,  544,  544,  544,  544,  544,  544, 
-            0,    0,  544,  544,    0,  544,  544,  544,  544,  544, 
-          544,  544,  648,    0,    0,    0,  544,  544,  544,  544, 
-          544,  544,  544,    0,    0,  544,    0,    0,    0,    0, 
-            0,  544,  544,    0,  544,  544,  544,  544,    0,  544, 
-          544,  544,  544,  544,  544,    0,  544,  544,  544,  544, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  648,    0,    0,    0,    0,    0,    0,    0,    0, 
-          544,    0,    0,  544,    0,    0,  544,  544,    0,  544, 
-            0,  544,    0,    0,    0,  544,    0,    0,    0,    0, 
-            0,    0,    0,  544,    0,    0,    0,    0,  544,  544, 
-          544,  544,  544,  544,    0,    0,    0,  544,    0,  544, 
-          544,    0,  544,  544,  544,  544,    0,  544,  544,    0, 
-            0,    0,  648,  648,  648,  648,  648,  648,  648,  648, 
-          648,  648,  648,    0,    0,  648,  648,    0,  648,  648, 
-          648,  648,  648,  648,  648,  310,    0,    0,    0,  648, 
-          648,  648,  648,  648,  648,  648,    0,    0,  648,    0, 
-            0,    0,    0,    0,  648,  648,    0,  648,  648,  648, 
-          648,    0,  648,  648,  648,  648,  648,  648,    0,  648, 
-          648,  648,  648,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  648,    0,    0,  648,    0,    0,  648, 
-          648,    0,  648,    0,  648,    0,    0,    0,  648,    0, 
-            0,    0,    0,    0,    0,    0,  648,    0,    0,    0, 
-            0,  648,  648,  648,  648,  648,  648,    0,    0,    0, 
-          648,    0,  648,  648,    0,  648,  648,  648,  648,    0, 
-          648,  648,    0,    0,    0,    0,    0,    0,  648,  648, 
-          648,  648,  648,  648,    0,    0,    0,  648,  648,    0, 
-            0,    0,  648,    0,  648,  648,  648,  648,  648,  648, 
-          648,  234,    0,    0,    0,  648,  648,  648,  648,  648, 
-          648,  648,    0,    0,  648,    0,    0,    0,    0,    0, 
-          648,  648,    0,  648,  648,  648,  648,    0,  648,  648, 
-          648,  648,  648,  648,    0,  648,  648,  648,  648,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          233,    0,    0,    0,    0,    0,    0,    0,    0,  648, 
-            0,    0,  648,    0,    0,  648,  648,    0,  648,    0, 
-          648,    0,    0,    0,  648,    0,    0,    0,    0,    0, 
-            0,    0,  648,    0,    0,  648,    0,  648,  648,  648, 
-          648,  648,  648,    0,    0,    0,  648,    0,  648,  648, 
-            0,  648,  648,  648,  648,    0,  648,  648,    0,    0, 
-            0,    0,  312,  312,  312,  312,  312,    0,    0,    0, 
-          312,  312,    0,    0,    0,  312,    0,  312,  312,  312, 
-          312,  312,  312,  312,  291,    0,    0,    0,  312,  312, 
-          312,  312,  312,  312,  312,    0,    0,  312,    0,    0, 
-            0,    0,    0,  312,  312,    0,  312,  312,  312,  312, 
-            0,  312,  312,  312,  312,  312,  312,    0,  312,  312, 
-          312,  312,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  312,    0,    0,  312,    0,  310,  312,  312, 
-            0,  312,    0,  312,    0,    0,    0,  312,    0,    0, 
-            0,    0,    0,    0,    0,  312,    0,    0,    0,    0, 
-          312,  312,  312,  312,  312,  312,    0,    0,    0,  312, 
-            0,  312,  312,    0,  312,  312,  312,  312,    0,  312, 
-          312,    0,    0,    0,    0,    0,    0,    0,    4,    5, 
-            6,    0,    8,    0,    0,    0,    9,   10,    0,    0, 
-            0,   11,    0,   12,   13,   14,   15,   16,   17,   18, 
-            0,    0,    0,    0,   19,   20,   21,  212,  213,  214, 
-          215,    0,    0,   26,    0,    0,    0,    0,    0,    0, 
-           28,    0,    0,  216,  217,  218,    0,  219,   35,  220, 
-          221,  222,  223,  336,   40,   41,   42,   43,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  224,    0, 
-            0,  225,    0,    0,   46,   47,    0,   48,    0,    0, 
-            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, 
-            0,   51,    0,    0,    0,    0,   52,   53,   54,   55, 
-           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, 
-           61,   62,   63,   64,    0,   65,   66,    0,    0,    0, 
-            0,    4,    5,    6,    0,    8,    0,    0,    0,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, 
-           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, 
-          212,  213,  214,  215,    0,    0,   26,    0,    0,    0, 
-            0,    0,    0,   28,    0,    0,  216,  217,  218,    0, 
-          219,   35,  220,  221,  222,  223,  644,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,  224,    0,    0,  225,    0,    0,   46,   47,    0, 
-           48,    0,    0,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, 
-           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, 
-            0,    0,    0,    0,    0,    0,    4,    5,    6,    0, 
-            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
-            0,   12,   13,   14,  241,  242,   17,   18,    0,    0, 
-            0,    0,   19,  243,  244,  323,  324,  325,  326,    0, 
-            0,  249,    0,    0,    0,    0,    0,    0,  250,    0, 
-            0,  327,  328,  329,    0,  330,   35,  331,  332,  333, 
-          334,    0,   40,    0,    0,  259,    0,    0,    0,    0, 
-          459,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  335,    0,    0,  225, 
-            0,    0,   46,   47,    0,   48,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, 
-            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
-           63,   64,    0,   65,   66,    0,    0,    0,    0,    4, 
-            5,    6,    0,    8,    0,    0,    0,    9,   10,    0, 
-            0,    0,   11,    0,   12,   13,   14,  241,  242,   17, 
-           18,    0,    0,    0,    0,   19,  243,  244,  323,  324, 
-          325,  326,    0,    0,  249,    0,    0,    0,    0,    0, 
-            0,  250,    0,    0,  327,  328,  329,    0,  330,   35, 
-          331,  332,  333,  334,    0,   40,    0,    0,  259,  459, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,  335, 
-            0,    0,  225,    0,    0,   46,   47,    0,   48,    0, 
+            0,  650,    0,    0,    0,    0,    0,    0,    0,    0, 
+          310,    0,    0,  310,    0,    0,  310,  310,    0,  310, 
+            0,  310,    0,    0,    0,  310,    0,    0,    0,    0, 
+            0,    0,    0,  310,    0,   17,    0,    0,  310,  310, 
+          310,  310,  310,  310,    0,    0,    0,  310,    0,  310, 
+          310,    0,  310,  310,  310,  310,    0,  310,  310,    0, 
+            0,    0,    0,    0,    0,  546,  546,  546,  546,  546, 
+          546,  546,  546,  546,  546,  546,    0,    0,  546,  546, 
+            0,  546,  546,  546,  546,  546,  546,  546,  650,    0, 
+            0,    0,  546,  546,  546,  546,  546,  546,  546,    0, 
+            0,  546,    0,    0,    0,    0,    0,  546,  546,    0, 
+          546,  546,  546,  546,    0,  546,  546,  546,  546,  546, 
+          546,    0,  546,  546,  546,  546,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  650,    0,    0, 
+            0,    0,    0,    0,    0,    0,  546,    0,    0,  546, 
+            0,    0,  546,  546,    0,  546,    0,  546,    0,    0, 
+            0,  546,    0,    0,    0,    0,    0,    0,    0,  546, 
+            0,    0,    0,    0,  546,  546,  546,  546,  546,  546, 
+            0,    0,    0,  546,    0,  546,  546,    0,  546,  546, 
+          546,  546,    0,  546,  546,    0,    0,    0,  650,  650, 
+          650,  650,  650,  650,  650,  650,  650,  650,  650,    0, 
+            0,  650,  650,    0,  650,  650,  650,  650,  650,  650, 
+          650,  312,    0,    0,    0,  650,  650,  650,  650,  650, 
+          650,  650,    0,    0,  650,    0,    0,    0,    0,    0, 
+          650,  650,    0,  650,  650,  650,  650,    0,  650,  650, 
+          650,  650,  650,  650,    0,  650,  650,  650,  650,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  650, 
+            0,    0,  650,    0,    0,  650,  650,    0,  650,    0, 
+          650,    0,    0,    0,  650,    0,    0,    0,    0,    0, 
+            0,    0,  650,    0,    0,    0,    0,  650,  650,  650, 
+          650,  650,  650,    0,    0,    0,  650,    0,  650,  650, 
+            0,  650,  650,  650,  650,    0,  650,  650,    0,    0, 
+            0,    0,    0,    0,  650,  650,  650,  650,  650,  650, 
+            0,    0,    0,  650,  650,    0,    0,    0,  650,    0, 
+          650,  650,  650,  650,  650,  650,  650,  234,    0,    0, 
+            0,  650,  650,  650,  650,  650,  650,  650,    0,    0, 
+          650,    0,    0,    0,    0,    0,  650,  650,    0,  650, 
+          650,  650,  650,    0,  650,  650,  650,  650,  650,  650, 
+            0,  650,  650,  650,  650,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  233,    0,    0,    0, 
+            0,    0,    0,    0,    0,  650,    0,    0,  650,    0, 
+            0,  650,  650,    0,  650,    0,  650,    0,    0,    0, 
+          650,    0,    0,    0,    0,    0,    0,    0,  650,    0, 
+            0,  650,    0,  650,  650,  650,  650,  650,  650,    0, 
+            0,    0,  650,    0,  650,  650,    0,  650,  650,  650, 
+          650,    0,  650,  650,    0,    0,    0,    0,  314,  314, 
+          314,  314,  314,    0,    0,    0,  314,  314,    0,    0, 
+            0,  314,    0,  314,  314,  314,  314,  314,  314,  314, 
+          291,    0,    0,    0,  314,  314,  314,  314,  314,  314, 
+          314,    0,    0,  314,    0,    0,    0,    0,    0,  314, 
+          314,    0,  314,  314,  314,  314,    0,  314,  314,  314, 
+          314,  314,  314,    0,  314,  314,  314,  314,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  314,    0, 
+            0,  314,    0,  312,  314,  314,    0,  314,    0,  314, 
+            0,    0,    0,  314,    0,    0,    0,    0,    0,    0, 
+            0,  314,    0,    0,    0,    0,  314,  314,  314,  314, 
+          314,  314,    0,    0,    0,  314,    0,  314,  314,    0, 
+          314,  314,  314,  314,    0,  314,  314,    0,    0,    0, 
+            0,    0,    0,    0,    4,    5,    6,    0,    8,    0, 
+            0,    0,    9,   10,    0,    0,    0,   11,    0,   12, 
+           13,   14,   15,   16,   17,   18,    0,    0,    0,    0, 
+           19,   20,   21,  212,  213,  214,  215,    0,    0,   26, 
+            0,    0,    0,    0,    0,    0,   28,    0,    0,  216, 
+          217,  218,    0,  219,   35,  220,  221,  222,  223,  336, 
+           40,   41,   42,   43,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,   52,   53,   54, 
-           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
-            0,   61,   62,   63,   64,    0,   65,   66,    4,    5, 
-            6,    7,    8,    0,    0,    0,    9,   10,    0,    0, 
-            0,   11,    0,   12,   13,   14,   15,   16,   17,   18, 
-            0,    0,    0,    0,   19,   20,   21,   22,   23,   24, 
-           25,    0,    0,   26,    0,    0,    0,    0,    0,   27, 
-           28,   29,   30,   31,   32,   33,    0,   34,   35,   36, 
-           37,   38,   39,    0,   40,   41,   42,   43,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,   44,    0, 
-            0,   45,    0,    0,   46,   47,    0,   48,    0,   49, 
-            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, 
-            0,   51,    0,    0,    0,    0,   52,   53,   54,   55, 
-           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, 
-           61,   62,   63,   64,    0,   65,   66,    4,    5,    6, 
-            7,  304,    0,    0,    0,    9,   10,    0,    0,    0, 
+            0,    0,    0,    0,  224,    0,    0,  225,    0,    0, 
+           46,   47,    0,   48,    0,    0,    0,    0,    0,   50, 
+            0,    0,    0,    0,    0,    0,    0,   51,    0,    0, 
+            0,    0,   52,   53,   54,   55,   56,   57,    0,    0, 
+            0,   58,    0,   59,   60,    0,   61,   62,   63,   64, 
+            0,   65,   66,    0,    0,    0,    0,    4,    5,    6, 
+            0,    8,    0,    0,    0,    9,   10,    0,    0,    0, 
            11,    0,   12,   13,   14,   15,   16,   17,   18,    0, 
-            0,    0,    0,   19,   20,   21,   22,   23,   24,   25, 
-            0,    0,   26,    0,    0,    0,    0,    0,   27,   28, 
-            0,   30,   31,   32,   33,    0,   34,   35,   36,   37, 
-           38,   39,    0,   40,   41,   42,   43,    0,    0,    0, 
+            0,    0,    0,   19,   20,   21,  212,  213,  214,  215, 
+            0,    0,   26,    0,    0,    0,    0,    0,    0,   28, 
+            0,    0,  216,  217,  218,    0,  219,   35,  220,  221, 
+          222,  223,  644,   40,   41,   42,   43,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,   44,    0,    0, 
-           45,    0,    0,   46,   47,    0,   48,    0,   49,    0, 
+            0,    0,    0,    0,    0,    0,    0,  224,    0,    0, 
+          225,    0,    0,   46,   47,    0,   48,    0,    0,    0, 
             0,    0,   50,    0,    0,    0,    0,    0,    0,    0, 
            51,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
            57,    0,    0,    0,   58,    0,   59,   60,    0,   61, 
-           62,   63,   64,    0,   65,   66,  112,  113,  114,  115, 
-          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, 
-          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, 
-            0,    0,  136,  137,  138,  139,  140,  141,  142,  143, 
-          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, 
-          150,  151,  152,  153,    0,  154,  155,  156,  157,  158, 
-          159,    0,    0,  160,  161,    0,  162,  163,  164,  165, 
-          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, 
-          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, 
-          175,    0,    0,    0,    0,    0,    0,  176,  177,    0, 
-          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, 
-          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  190,  112,  113,  114,  115, 
-          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, 
-          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, 
-            0,    0,  136,  137,  138,  196,  197,  198,  199,  143, 
-          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, 
-          150,  200,  201,  202,    0,  203,  155,  343,  344,  204, 
-          345,    0,    0,  160,  161,    0,  162,  163,  164,  165, 
-          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, 
-          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  176,  177,    0, 
-          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, 
-          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  190,  112,  113,  114,  115, 
-          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, 
-          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, 
-            0,    0,  136,  137,  138,  196,  197,  198,  199,  143, 
-          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, 
-          150,  200,  201,  202,    0,  203,  155,  293,    0,  204, 
-            0,    0,    0,  160,  161,    0,  162,  163,  164,  165, 
-          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, 
-          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  176,  177,    0, 
-          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, 
-          188,    0,    0,  189,   52,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  190,  112,  113,  114,  115, 
-          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, 
-          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, 
-            0,    0,  136,  137,  138,  196,  197,  198,  199,  143, 
-          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, 
-          150,  200,  201,  202,    0,  203,  155,    0,    0,  204, 
-            0,    0,    0,  160,  161,    0,  162,  163,  164,  165, 
-          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, 
-          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  176,  177,    0, 
-          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, 
-          188,    0,    0,  189,   52,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  190,  112,  113,  114,  115, 
-          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, 
-          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, 
-            0,    0,  136,  137,  138,  196,  197,  198,  199,  143, 
-          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, 
-          150,  200,  201,  202,    0,  203,  155,    0,    0,  204, 
-            0,    0,    0,  160,  161,    0,  162,  163,  164,  165, 
-          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, 
-          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  176,  177,    0, 
-          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, 
-          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, 
-            3,    4,    5,    6,    7,    8,    0,    0,    0,    9, 
-           10,    0,    0,    0,   11,  190,   12,   13,   14,   15, 
-           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, 
-           22,   23,   24,   25,    0,    0,   26,    0,    0,    0, 
-            0,    0,   27,   28,   29,   30,   31,   32,   33,    0, 
-           34,   35,   36,   37,   38,   39,    0,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,   44,    0,    0,   45,    0,    0,   46,   47,    0, 
-           48,    0,   49,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, 
-           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, 
-          303,    4,    5,    6,    7,  304,    0,    0,    0,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, 
-           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, 
-           22,   23,   24,   25,    0,    0,   26,    0,    0,    0, 
-            0,    0,   27,   28,    0,   30,   31,   32,   33,    0, 
-           34,   35,   36,   37,   38,   39,    0,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+           62,   63,   64,    0,   65,   66,    0,    0,    0,    0, 
+            0,    0,    4,    5,    6,    0,    8,    0,    0,    0, 
+            9,   10,    0,    0,    0,   11,    0,   12,   13,   14, 
+          241,  242,   17,   18,    0,    0,    0,    0,   19,  243, 
+          244,  323,  324,  325,  326,    0,    0,  249,    0,    0, 
+            0,    0,    0,    0,  250,    0,    0,  327,  328,  329, 
+            0,  330,   35,  331,  332,  333,  334,    0,   40,    0, 
+            0,  259,    0,    0,    0,    0,  459,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  335,    0,    0,  225,    0,    0,   46,   47, 
+            0,   48,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+           52,   53,   54,   55,   56,   57,    0,    0,    0,   58, 
+            0,   59,   60,    0,   61,   62,   63,   64,    0,   65, 
+           66,    0,    0,    0,    0,    4,    5,    6,    0,    8, 
+            0,    0,    0,    9,   10,    0,    0,    0,   11,    0, 
+           12,   13,   14,  241,  242,   17,   18,    0,    0,    0, 
+            0,   19,  243,  244,  323,  324,  325,  326,    0,    0, 
+          249,    0,    0,    0,    0,    0,    0,  250,    0,    0, 
+          327,  328,  329,    0,  330,   35,  331,  332,  333,  334, 
+            0,   40,    0,    0,  259,  459,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,   44,    0,    0,  305,    0,    0,   46,   47,    0, 
-           48,    0,   49,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, 
-           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, 
-          303,    4,    5,    6,    7,  304,    0,    0,    0,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, 
-           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, 
-           22,   23,   24,   25,    0,    0,   26,    0,    0,    0, 
-            0,    0,   27,   28,    0,   30,   31,   32,   33,    0, 
-           34,   35,   36,   37,   38,   39,    0,   40,   41,   42, 
-           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,  335,    0,    0,  225,    0, 
+            0,   46,   47,    0,   48,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,   44,    0,    0,   45,    0,    0,   46,   47,    0, 
-           48,    0,   49,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, 
-           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
-           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, 
-            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, 
-            0,    0,    0,   11,    0,   12,   13,   14,   15,   16, 
-           17,   18,    0,    0,    0,    0,   19,   20,   21,  212, 
-          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, 
-            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, 
-           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, 
+            0,    0,    0,   52,   53,   54,   55,   56,   57,    0, 
+            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
+           64,    0,   65,   66,    4,    5,    6,    7,    8,    0, 
+            0,    0,    9,   10,    0,    0,    0,   11,    0,   12, 
+           13,   14,   15,   16,   17,   18,    0,    0,    0,    0, 
+           19,   20,   21,   22,   23,   24,   25,    0,    0,   26, 
+            0,    0,    0,    0,    0,   27,   28,   29,   30,   31, 
+           32,   33,    0,   34,   35,   36,   37,   38,   39,    0, 
+           40,   41,   42,   43,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,   44,    0,    0,   45,    0,    0, 
+           46,   47,    0,   48,    0,   49,    0,    0,    0,   50, 
+            0,    0,    0,    0,    0,    0,    0,   51,    0,    0, 
+            0,    0,   52,   53,   54,   55,   56,   57,    0,    0, 
+            0,   58,    0,   59,   60,    0,   61,   62,   63,   64, 
+            0,   65,   66,    4,    5,    6,    7,  304,    0,    0, 
+            0,    9,   10,    0,    0,    0,   11,    0,   12,   13, 
+           14,   15,   16,   17,   18,    0,    0,    0,    0,   19, 
+           20,   21,   22,   23,   24,   25,    0,    0,   26,    0, 
+            0,    0,    0,    0,   27,   28,    0,   30,   31,   32, 
+           33,    0,   34,   35,   36,   37,   38,   39,    0,   40, 
+           41,   42,   43,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, 
-            0,  270,    0,  271,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, 
-           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, 
-            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, 
-            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, 
-           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, 
-          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, 
-            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, 
-           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, 
+            0,    0,    0,   44,    0,    0,   45,    0,    0,   46, 
+           47,    0,   48,    0,   49,    0,    0,    0,   50,    0, 
+            0,    0,    0,    0,    0,    0,   51,    0,    0,    0, 
+            0,   52,   53,   54,   55,   56,   57,    0,    0,    0, 
+           58,    0,   59,   60,    0,   61,   62,   63,   64,    0, 
+           65,   66,  112,  113,  114,  115,  116,  117,  118,  119, 
+          120,  121,  122,  123,  124,  125,  126,  127,  128,  129, 
+          130,  131,  132,  133,  134,  135,    0,    0,  136,  137, 
+          138,  139,  140,  141,  142,  143,  144,  145,    0,    0, 
+            0,    0,  146,  147,  148,  149,  150,  151,  152,  153, 
+            0,  154,  155,  156,  157,  158,  159,    0,    0,  160, 
+          161,    0,  162,  163,  164,  165,  166,  167,  168,    0, 
+            0,  169,  170,    0,    0,    0,  171,  172,  173,  174, 
+            0,    0,    0,    0,    0,    0,  175,    0,    0,    0, 
+            0,    0,    0,  176,  177,    0,  178,  179,  180,  181, 
+          182,  183,  184,  185,  186,  187,  188,    0,    0,  189, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, 
-            0,  698,    0,  271,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, 
-           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, 
-          283,  283,  283,    0,  283,    0,    0,    0,  283,  283, 
-            0,    0,    0,  283,    0,  283,  283,  283,  283,  283, 
-          283,  283,    0,    0,    0,    0,  283,  283,  283,  283, 
-          283,  283,  283,    0,    0,  283,    0,    0,    0,    0, 
-            0,    0,  283,    0,    0,  283,  283,  283,    0,  283, 
-          283,  283,  283,  283,  283,  283,  283,  283,  283,  283, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          283,    0,    0,  283,    0,    0,  283,  283,    0,  283, 
-            0,  283,    0,  283,    0,  283,    0,    0,    0,    0, 
-            0,    0,    0,  283,    0,    0,    0,    0,  283,  283, 
-          283,  283,  283,  283,    0,    0,    0,  283,    0,  283, 
-          283,    0,  283,  283,  283,  283,    0,  283,  283,  283, 
-            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, 
-            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, 
-           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, 
-          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, 
-            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, 
-           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, 
+            0,  190,  112,  113,  114,  115,  116,  117,  118,  119, 
+          120,  121,  122,  123,  124,  125,  126,  127,  128,  129, 
+          130,  131,  132,  133,  134,  135,    0,    0,  136,  137, 
+          138,  196,  197,  198,  199,  143,  144,  145,    0,    0, 
+            0,    0,  146,  147,  148,  149,  150,  200,  201,  202, 
+            0,  203,  155,  343,  344,  204,  345,    0,    0,  160, 
+          161,    0,  162,  163,  164,  165,  166,  167,  168,    0, 
+            0,  169,  170,    0,    0,    0,  171,  172,  173,  174, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  176,  177,    0,  178,  179,  180,  181, 
+          182,  183,  184,  185,  186,  187,  188,    0,    0,  189, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, 
-            0,  270,    0,    0,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, 
-           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, 
-            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, 
-            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, 
-           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, 
-          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, 
-            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, 
-           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  190,  112,  113,  114,  115,  116,  117,  118,  119, 
+          120,  121,  122,  123,  124,  125,  126,  127,  128,  129, 
+          130,  131,  132,  133,  134,  135,    0,    0,  136,  137, 
+          138,  196,  197,  198,  199,  143,  144,  145,    0,    0, 
+            0,    0,  146,  147,  148,  149,  150,  200,  201,  202, 
+            0,  203,  155,  293,    0,  204,    0,    0,    0,  160, 
+          161,    0,  162,  163,  164,  165,  166,  167,  168,    0, 
+            0,  169,  170,    0,    0,    0,  171,  172,  173,  174, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, 
-            0,    0,    0,  271,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, 
-           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, 
-            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, 
-            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, 
-           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, 
-          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, 
-            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, 
-           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, 
+            0,    0,    0,  176,  177,    0,  178,  179,  180,  181, 
+          182,  183,  184,  185,  186,  187,  188,    0,    0,  189, 
+           52,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  190,  112,  113,  114,  115,  116,  117,  118,  119, 
+          120,  121,  122,  123,  124,  125,  126,  127,  128,  129, 
+          130,  131,  132,  133,  134,  135,    0,    0,  136,  137, 
+          138,  196,  197,  198,  199,  143,  144,  145,    0,    0, 
+            0,    0,  146,  147,  148,  149,  150,  200,  201,  202, 
+            0,  203,  155,    0,    0,  204,    0,    0,    0,  160, 
+          161,    0,  162,  163,  164,  165,  166,  167,  168,    0, 
+            0,  169,  170,    0,    0,    0,  171,  172,  173,  174, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,  176,  177,    0,  178,  179,  180,  181, 
+          182,  183,  184,  185,  186,  187,  188,    0,    0,  189, 
+           52,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  190,  112,  113,  114,  115,  116,  117,  118,  119, 
+          120,  121,  122,  123,  124,  125,  126,  127,  128,  129, 
+          130,  131,  132,  133,  134,  135,    0,    0,  136,  137, 
+          138,  196,  197,  198,  199,  143,  144,  145,    0,    0, 
+            0,    0,  146,  147,  148,  149,  150,  200,  201,  202, 
+            0,  203,  155,    0,    0,  204,    0,    0,    0,  160, 
+          161,    0,  162,  163,  164,  165,  166,  167,  168,    0, 
+            0,  169,  170,    0,    0,    0,  171,  172,  173,  174, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, 
-            0,  698,    0,    0,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, 
-           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, 
-            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, 
-            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, 
-           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, 
-          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, 
-            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, 
-           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, 
+            0,    0,    0,  176,  177,    0,  178,  179,  180,  181, 
+          182,  183,  184,  185,  186,  187,  188,    0,    0,  189, 
+            0,    0,    0,    0,    0,    0,    3,    4,    5,    6, 
+            7,    8,    0,    0,    0,    9,   10,    0,    0,    0, 
+           11,  190,   12,   13,   14,   15,   16,   17,   18,    0, 
+            0,    0,    0,   19,   20,   21,   22,   23,   24,   25, 
+            0,    0,   26,    0,    0,    0,    0,    0,   27,   28, 
+           29,   30,   31,   32,   33,    0,   34,   35,   36,   37, 
+           38,   39,    0,   40,   41,   42,   43,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,   44,    0,    0, 
+           45,    0,    0,   46,   47,    0,   48,    0,   49,    0, 
+            0,    0,   50,    0,    0,    0,    0,    0,    0,    0, 
+           51,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
+           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, 
+           62,   63,   64,    0,   65,   66,  303,    4,    5,    6, 
+            7,  304,    0,    0,    0,    9,   10,    0,    0,    0, 
+           11,    0,   12,   13,   14,   15,   16,   17,   18,    0, 
+            0,    0,    0,   19,   20,   21,   22,   23,   24,   25, 
+            0,    0,   26,    0,    0,    0,    0,    0,   27,   28, 
+            0,   30,   31,   32,   33,    0,   34,   35,   36,   37, 
+           38,   39,    0,   40,   41,   42,   43,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, 
-            0,    0,    0,    0,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, 
-           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, 
-            4,    5,    6,    7,    8,    0,    0,    0,    9,   10, 
-            0,    0,    0,   11,    0,   12,   13,   14,   15,   16, 
-           17,   18,    0,    0,    0,    0,   19,   20,   21,   22, 
-           23,   24,   25,    0,    0,   26,    0,    0,    0,    0, 
-            0,   27,   28,   29,   30,   31,   32,   33,    0,   34, 
-           35,   36,   37,   38,   39,    0,   40,   41,   42,   43, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-           44,    0,    0,   45,    0,    0,   46,   47,    0,   48, 
-            0,   49,    0,    0,    0,   50,    0,    0,    0,    0, 
-            0,    0,    0,   51,    0,    0,    0,    0,   52,   53, 
-           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
-           60,    0,   61,   62,   63,   64,    0,   65,   66,    4, 
-            5,    6,    7,    8,    0,    0,    0,    9,   10,    0, 
-            0,    0,   11,    0,   12,   13,   14,   15,   16,   17, 
-           18,    0,    0,    0,    0,   19,   20,   21,   22,   23, 
-           24,   25,    0,    0,   26,    0,    0,    0,    0,    0, 
-           27,   28,    0,   30,   31,   32,   33,    0,   34,   35, 
-           36,   37,   38,   39,    0,   40,   41,   42,   43,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,   44, 
-            0,    0,   45,    0,    0,   46,   47,    0,   48,    0, 
-           49,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
-            0,    0,   51,    0,    0,    0,    0,   52,   53,   54, 
-           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
-            0,   61,   62,   63,   64,    0,   65,   66,    4,    5, 
-            6,    0,    8,    0,    0,    0,    9,   10,    0,    0, 
-            0,   11,    0,   12,   13,   14,  241,  242,   17,   18, 
-            0,    0,    0,    0,   19,  243,  244,  212,  213,  214, 
-          215,    0,    0,  249,    0,    0,    0,    0,    0,    0, 
-           28,    0,    0,  216,  217,  218,    0,  219,   35,  220, 
-          221,  222,  223,    0,   40,   41,   42,   43,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  224,    0, 
-            0,  225,  496,    0,   46,   47,    0,   48,    0,    0, 
-            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, 
-            0,  272,    0,    0,    0,    0,   52,   53,   54,   55, 
-           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, 
-           61,   62,   63,   64,    0,   65,   66,    4,    5,    6, 
-            0,    8,    0,    0,    0,    9,   10,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,   44,    0,    0, 
+          305,    0,    0,   46,   47,    0,   48,    0,   49,    0, 
+            0,    0,   50,    0,    0,    0,    0,    0,    0,    0, 
+           51,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
+           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, 
+           62,   63,   64,    0,   65,   66,  303,    4,    5,    6, 
+            7,  304,    0,    0,    0,    9,   10,    0,    0,    0, 
            11,    0,   12,   13,   14,   15,   16,   17,   18,    0, 
-            0,    0,    0,   19,   20,   21,  212,  213,  214,  215, 
-            0,    0,  249,    0,    0,    0,    0,    0,    0,   28, 
-            0,    0,  216,  217,  218,    0,  219,   35,  220,  221, 
-          222,  223,    0,   40,   41,   42,   43,    0,    0,    0, 
+            0,    0,    0,   19,   20,   21,   22,   23,   24,   25, 
+            0,    0,   26,    0,    0,    0,    0,    0,   27,   28, 
+            0,   30,   31,   32,   33,    0,   34,   35,   36,   37, 
+           38,   39,    0,   40,   41,   42,   43,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,  224,    0,    0, 
-          225,    0,    0,   46,   47,    0,   48,    0,  636,    0, 
+            0,    0,    0,    0,    0,    0,    0,   44,    0,    0, 
+           45,    0,    0,   46,   47,    0,   48,    0,   49,    0, 
             0,    0,   50,    0,    0,    0,    0,    0,    0,    0, 
-          272,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
+           51,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
            57,    0,    0,    0,   58,    0,   59,   60,    0,   61, 
            62,   63,   64,    0,   65,   66,    4,    5,    6,    0, 
+            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
+            0,   12,   13,   14,   15,   16,   17,   18,    0,    0, 
+            0,    0,   19,   20,   21,  212,  213,  214,  215,    0, 
+            0,  249,    0,    0,    0,    0,    0,    0,   28,    0, 
+            0,  216,  217,  218,    0,  219,   35,  220,  221,  222, 
+          223,  269,   40,   41,   42,   43,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  224,    0,    0,  225, 
+            0,    0,   46,   47,    0,   48,    0,  270,    0,  271, 
+            0,   50,    0,    0,    0,    0,    0,    0,    0,  272, 
+            0,    0,    0,    0,   52,  273,   54,   55,   56,   57, 
+            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
+           63,   64,    0,   65,   66,  274,    4,    5,    6,    0, 
             8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
             0,   12,   13,   14,  241,  242,   17,   18,    0,    0, 
             0,    0,   19,  243,  244,  212,  213,  214,  215,    0, 
             0,  249,    0,    0,    0,    0,    0,    0,   28,    0, 
             0,  216,  217,  218,    0,  219,   35,  220,  221,  222, 
-          223,    0,   40,   41,   42,   43,    0,    0,    0,    0, 
+          223,  269,   40,   41,   42,   43,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,  224,    0,    0,  225, 
-            0,    0,   46,   47,    0,   48,    0,  270,    0,    0, 
+            0,    0,   46,   47,    0,   48,    0,  698,    0,  271, 
             0,   50,    0,    0,    0,    0,    0,    0,    0,  272, 
-            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, 
+            0,    0,    0,    0,   52,  273,   54,   55,   56,   57, 
             0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
-           63,   64,    0,   65,   66,    4,    5,    6,    0,    8, 
-            0,    0,    0,    9,   10,    0,    0,    0,   11,    0, 
-           12,   13,   14,  241,  242,   17,   18,    0,    0,    0, 
-            0,   19,  243,  244,  212,  213,  214,  215,    0,    0, 
-          249,    0,    0,    0,    0,    0,    0,   28,    0,    0, 
-          216,  217,  218,    0,  219,   35,  220,  221,  222,  223, 
+           63,   64,    0,   65,   66,  274,  285,  285,  285,    0, 
+          285,    0,    0,    0,  285,  285,    0,    0,    0,  285, 
+            0,  285,  285,  285,  285,  285,  285,  285,    0,    0, 
+            0,    0,  285,  285,  285,  285,  285,  285,  285,    0, 
+            0,  285,    0,    0,    0,    0,    0,    0,  285,    0, 
+            0,  285,  285,  285,    0,  285,  285,  285,  285,  285, 
+          285,  285,  285,  285,  285,  285,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  285,    0,    0,  285, 
+            0,    0,  285,  285,    0,  285,    0,  285,    0,  285, 
+            0,  285,    0,    0,    0,    0,    0,    0,    0,  285, 
+            0,    0,    0,    0,  285,  285,  285,  285,  285,  285, 
+            0,    0,    0,  285,    0,  285,  285,    0,  285,  285, 
+          285,  285,    0,  285,  285,  285,    4,    5,    6,    0, 
+            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
+            0,   12,   13,   14,  241,  242,   17,   18,    0,    0, 
+            0,    0,   19,  243,  244,  212,  213,  214,  215,    0, 
+            0,  249,    0,    0,    0,    0,    0,    0,   28,    0, 
+            0,  216,  217,  218,    0,  219,   35,  220,  221,  222, 
+          223,  269,   40,   41,   42,   43,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  224,    0,    0,  225, 
+            0,    0,   46,   47,    0,   48,    0,  270,    0,    0, 
+            0,   50,    0,    0,    0,    0,    0,    0,    0,  272, 
+            0,    0,    0,    0,   52,  273,   54,   55,   56,   57, 
+            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
+           63,   64,    0,   65,   66,  274,    4,    5,    6,    0, 
+            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
+            0,   12,   13,   14,  241,  242,   17,   18,    0,    0, 
+            0,    0,   19,  243,  244,  212,  213,  214,  215,    0, 
+            0,  249,    0,    0,    0,    0,    0,    0,   28,    0, 
+            0,  216,  217,  218,    0,  219,   35,  220,  221,  222, 
+          223,  269,   40,   41,   42,   43,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  224,    0,    0,  225, 
+            0,    0,   46,   47,    0,   48,    0,    0,    0,  271, 
+            0,   50,    0,    0,    0,    0,    0,    0,    0,  272, 
+            0,    0,    0,    0,   52,  273,   54,   55,   56,   57, 
+            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
+           63,   64,    0,   65,   66,  274,    4,    5,    6,    0, 
+            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
+            0,   12,   13,   14,  241,  242,   17,   18,    0,    0, 
+            0,    0,   19,  243,  244,  212,  213,  214,  215,    0, 
+            0,  249,    0,    0,    0,    0,    0,    0,   28,    0, 
+            0,  216,  217,  218,    0,  219,   35,  220,  221,  222, 
+          223,  269,   40,   41,   42,   43,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  224,    0,    0,  225, 
+            0,    0,   46,   47,    0,   48,    0,  698,    0,    0, 
+            0,   50,    0,    0,    0,    0,    0,    0,    0,  272, 
+            0,    0,    0,    0,   52,  273,   54,   55,   56,   57, 
+            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
+           63,   64,    0,   65,   66,  274,    4,    5,    6,    0, 
+            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
+            0,   12,   13,   14,  241,  242,   17,   18,    0,    0, 
+            0,    0,   19,  243,  244,  212,  213,  214,  215,    0, 
+            0,  249,    0,    0,    0,    0,    0,    0,   28,    0, 
+            0,  216,  217,  218,    0,  219,   35,  220,  221,  222, 
+          223,  269,   40,   41,   42,   43,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,  224,    0,    0,  225, 
+            0,    0,   46,   47,    0,   48,    0,    0,    0,    0, 
+            0,   50,    0,    0,    0,    0,    0,    0,    0,  272, 
+            0,    0,    0,    0,   52,  273,   54,   55,   56,   57, 
+            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
+           63,   64,    0,   65,   66,  274,    4,    5,    6,    7, 
+            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
+            0,   12,   13,   14,   15,   16,   17,   18,    0,    0, 
+            0,    0,   19,   20,   21,   22,   23,   24,   25,    0, 
+            0,   26,    0,    0,    0,    0,    0,   27,   28,   29, 
+           30,   31,   32,   33,    0,   34,   35,   36,   37,   38, 
+           39,    0,   40,   41,   42,   43,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,   44,    0,    0,   45, 
+            0,    0,   46,   47,    0,   48,    0,   49,    0,    0, 
+            0,   50,    0,    0,    0,    0,    0,    0,    0,   51, 
+            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, 
+            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
+           63,   64,    0,   65,   66,    4,    5,    6,    7,    8, 
+            0,    0,    0,    9,   10,    0,    0,    0,   11,    0, 
+           12,   13,   14,   15,   16,   17,   18,    0,    0,    0, 
+            0,   19,   20,   21,   22,   23,   24,   25,    0,    0, 
+           26,    0,    0,    0,    0,    0,   27,   28,    0,   30, 
+           31,   32,   33,    0,   34,   35,   36,   37,   38,   39, 
             0,   40,   41,   42,   43,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  224,    0,    0,  225,    0, 
-            0,   46,   47,    0,   48,    0,  636,    0,    0,    0, 
-           50,    0,    0,    0,    0,    0,    0,    0,  272,    0, 
+            0,    0,    0,    0,    0,   44,    0,    0,   45,    0, 
+            0,   46,   47,    0,   48,    0,   49,    0,    0,    0, 
+           50,    0,    0,    0,    0,    0,    0,    0,   51,    0, 
             0,    0,    0,   52,   53,   54,   55,   56,   57,    0, 
             0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
            64,    0,   65,   66,    4,    5,    6,    0,    8,    0, 
@@ -2308,48 +2278,48 @@
           217,  218,    0,  219,   35,  220,  221,  222,  223,    0, 
            40,   41,   42,   43,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  224,    0,    0,  225,    0,    0, 
-           46,   47,    0,   48,    0,  902,    0,    0,    0,   50, 
+            0,    0,    0,    0,  224,    0,    0,  225,  496,    0, 
+           46,   47,    0,   48,    0,    0,    0,    0,    0,   50, 
             0,    0,    0,    0,    0,    0,    0,  272,    0,    0, 
             0,    0,   52,   53,   54,   55,   56,   57,    0,    0, 
             0,   58,    0,   59,   60,    0,   61,   62,   63,   64, 
             0,   65,   66,    4,    5,    6,    0,    8,    0,    0, 
             0,    9,   10,    0,    0,    0,   11,    0,   12,   13, 
-           14,  241,  242,   17,   18,    0,    0,    0,    0,   19, 
-          243,  244,  212,  213,  214,  215,    0,    0,  249,    0, 
+           14,   15,   16,   17,   18,    0,    0,    0,    0,   19, 
+           20,   21,  212,  213,  214,  215,    0,    0,  249,    0, 
             0,    0,    0,    0,    0,   28,    0,    0,  216,  217, 
           218,    0,  219,   35,  220,  221,  222,  223,    0,   40, 
            41,   42,   43,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,  224,    0,    0,  225,    0,    0,   46, 
-           47,    0,   48,    0,  698,    0,    0,    0,   50,    0, 
+           47,    0,   48,    0,  636,    0,    0,    0,   50,    0, 
             0,    0,    0,    0,    0,    0,  272,    0,    0,    0, 
             0,   52,   53,   54,   55,   56,   57,    0,    0,    0, 
            58,    0,   59,   60,    0,   61,   62,   63,   64,    0, 
-           65,   66,  637,  637,  637,    0,  637,    0,    0,    0, 
-          637,  637,    0,    0,    0,  637,    0,  637,  637,  637, 
-          637,  637,  637,  637,    0,    0,    0,    0,  637,  637, 
-          637,  637,  637,  637,  637,    0,    0,  637,    0,    0, 
-            0,    0,    0,    0,  637,    0,    0,  637,  637,  637, 
-            0,  637,  637,  637,  637,  637,  637,    0,  637,  637, 
-          637,  637,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,  637,    0,    0,  637,  637,    0,  637,  637, 
-            0,  637,    0,    0,    0,    0,    0,  637,    0,    0, 
-            0,    0,    0,    0,    0,  637,    0,    0,    0,    0, 
-          637,  637,  637,  637,  637,  637,    0,    0,    0,  637, 
-            0,  637,  637,    0,  637,  637,  637,  637,    0,  637, 
-          637,    4,    5,    6,    0,    8,    0,    0,    0,    9, 
-           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, 
-           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, 
-          212,  213,  214,  215,    0,    0,   26,    0,    0,    0, 
+           65,   66,    4,    5,    6,    0,    8,    0,    0,    0, 
+            9,   10,    0,    0,    0,   11,    0,   12,   13,   14, 
+          241,  242,   17,   18,    0,    0,    0,    0,   19,  243, 
+          244,  212,  213,  214,  215,    0,    0,  249,    0,    0, 
+            0,    0,    0,    0,   28,    0,    0,  216,  217,  218, 
+            0,  219,   35,  220,  221,  222,  223,    0,   40,   41, 
+           42,   43,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  224,    0,    0,  225,    0,    0,   46,   47, 
+            0,   48,    0,  270,    0,    0,    0,   50,    0,    0, 
+            0,    0,    0,    0,    0,  272,    0,    0,    0,    0, 
+           52,   53,   54,   55,   56,   57,    0,    0,    0,   58, 
+            0,   59,   60,    0,   61,   62,   63,   64,    0,   65, 
+           66,    4,    5,    6,    0,    8,    0,    0,    0,    9, 
+           10,    0,    0,    0,   11,    0,   12,   13,   14,  241, 
+          242,   17,   18,    0,    0,    0,    0,   19,  243,  244, 
+          212,  213,  214,  215,    0,    0,  249,    0,    0,    0, 
             0,    0,    0,   28,    0,    0,  216,  217,  218,    0, 
           219,   35,  220,  221,  222,  223,    0,   40,   41,   42, 
            43,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,  224,    0,    0,  225,    0,    0,   46,   47,    0, 
-           48,    0,    0,    0,    0,    0,   50,    0,    0,    0, 
-            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, 
+           48,    0,  636,    0,    0,    0,   50,    0,    0,    0, 
+            0,    0,    0,    0,  272,    0,    0,    0,    0,   52, 
            53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
            59,   60,    0,   61,   62,   63,   64,    0,   65,   66, 
             4,    5,    6,    0,    8,    0,    0,    0,    9,   10, 
@@ -2361,148 +2331,200 @@
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
           224,    0,    0,  225,    0,    0,   46,   47,    0,   48, 
-            0,    0,    0,    0,    0,   50,    0,    0,    0,    0, 
+            0,  902,    0,    0,    0,   50,    0,    0,    0,    0, 
             0,    0,    0,  272,    0,    0,    0,    0,   52,   53, 
            54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
            60,    0,   61,   62,   63,   64,    0,   65,   66,    4, 
             5,    6,    0,    8,    0,    0,    0,    9,   10,    0, 
-            0,    0,   11,    0,   12,   13,   14,   15,   16,   17, 
-           18,    0,    0,    0,    0,   19,   20,   21,  212,  213, 
+            0,    0,   11,    0,   12,   13,   14,  241,  242,   17, 
+           18,    0,    0,    0,    0,   19,  243,  244,  212,  213, 
           214,  215,    0,    0,  249,    0,    0,    0,    0,    0, 
             0,   28,    0,    0,  216,  217,  218,    0,  219,   35, 
           220,  221,  222,  223,    0,   40,   41,   42,   43,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,  224, 
             0,    0,  225,    0,    0,   46,   47,    0,   48,    0, 
-            0,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
+          698,    0,    0,    0,   50,    0,    0,    0,    0,    0, 
             0,    0,  272,    0,    0,    0,    0,   52,   53,   54, 
            55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
-            0,   61,   62,   63,   64,    0,   65,   66,  637,  637, 
-          637,    0,  637,    0,    0,    0,  637,  637,    0,    0, 
-            0,  637,    0,  637,  637,  637,  637,  637,  637,  637, 
-            0,    0,    0,    0,  637,  637,  637,  637,  637,  637, 
-          637,    0,    0,  637,    0,    0,    0,    0,    0,    0, 
-          637,    0,    0,  637,  637,  637,    0,  637,  637,  637, 
-          637,  637,  637,    0,  637,  637,  637,  637,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,  637,    0, 
-            0,  637,    0,    0,  637,  637,    0,  637,    0,    0, 
-            0,    0,    0,  637,    0,    0,    0,    0,    0,    0, 
-            0,  637,    0,    0,    0,    0,  637,  637,  637,  637, 
-          637,  637,    0,    0,    0,  637,    0,  637,  637,    0, 
-          637,  637,  637,  637,    0,  637,  637,    4,    5,    6, 
+            0,   61,   62,   63,   64,    0,   65,   66,  639,  639, 
+          639,    0,  639,    0,    0,    0,  639,  639,    0,    0, 
+            0,  639,    0,  639,  639,  639,  639,  639,  639,  639, 
+            0,    0,    0,    0,  639,  639,  639,  639,  639,  639, 
+          639,    0,    0,  639,    0,    0,    0,    0,    0,    0, 
+          639,    0,    0,  639,  639,  639,    0,  639,  639,  639, 
+          639,  639,  639,    0,  639,  639,  639,  639,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,  639,    0, 
+            0,  639,  639,    0,  639,  639,    0,  639,    0,    0, 
+            0,    0,    0,  639,    0,    0,    0,    0,    0,    0, 
+            0,  639,    0,    0,    0,    0,  639,  639,  639,  639, 
+          639,  639,    0,    0,    0,  639,    0,  639,  639,    0, 
+          639,  639,  639,  639,    0,  639,  639,    4,    5,    6, 
             0,    8,    0,    0,    0,    9,   10,    0,    0,    0, 
-           11,    0,   12,   13,   14,  241,  242,   17,   18,    0, 
-            0,    0,    0,   19,  243,  244,  421,  422,  423,  424, 
-            0,    0,  249,    0,    0,    0,    0,    0,    0,  250, 
-            0,    0,  425,  426,  427,    0,  428,   35,  156,  157, 
-          429,  159,    0,   40,    0,    0,  259,    0,    0,    0, 
+           11,    0,   12,   13,   14,   15,   16,   17,   18,    0, 
+            0,    0,    0,   19,   20,   21,  212,  213,  214,  215, 
+            0,    0,   26,    0,    0,    0,    0,    0,    0,   28, 
+            0,    0,  216,  217,  218,    0,  219,   35,  220,  221, 
+          222,  223,    0,   40,   41,   42,   43,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,  430,    0,    0,    0,  431,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,  224,    0,    0, 
           225,    0,    0,   46,   47,    0,   48,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
+            0,    0,   50,    0,    0,    0,    0,    0,    0,    0, 
+           51,    0,    0,    0,    0,   52,   53,   54,   55,   56, 
            57,    0,    0,    0,   58,    0,   59,   60,    0,   61, 
            62,   63,   64,    0,   65,   66,    4,    5,    6,    0, 
             8,    0,    0,    0,    9,   10,    0,    0,    0,   11, 
             0,   12,   13,   14,  241,  242,   17,   18,    0,    0, 
-            0,    0,   19,  243,  244,  421,  422,  423,  424,    0, 
-            0,  249,    0,    0,    0,    0,    0,    0,  250,    0, 
-            0,  425,  426,  427,    0,  428,   35,  156,  157,  429, 
-          159,    0,   40,    0,    0,  259,    0,    0,    0,    0, 
+            0,    0,   19,  243,  244,  212,  213,  214,  215,    0, 
+            0,  249,    0,    0,    0,    0,    0,    0,   28,    0, 
+            0,  216,  217,  218,    0,  219,   35,  220,  221,  222, 
+          223,    0,   40,   41,   42,   43,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,  431,    0,    0,  225, 
+            0,    0,    0,    0,    0,    0,  224,    0,    0,  225, 
             0,    0,   46,   47,    0,   48,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,   50,    0,    0,    0,    0,    0,    0,    0,  272, 
             0,    0,    0,    0,   52,   53,   54,   55,   56,   57, 
             0,    0,    0,   58,    0,   59,   60,    0,   61,   62, 
            63,   64,    0,   65,   66,    4,    5,    6,    0,    8, 
             0,    0,    0,    9,   10,    0,    0,    0,   11,    0, 
-           12,   13,   14,  241,  242,   17,   18,    0,    0,    0, 
-            0,   19,  243,  244,  323,  324,  325,  326,    0,    0, 
-          249,    0,    0,    0,    0,    0,    0,  250,    0,    0, 
-          327,  328,  329,    0,  330,   35,  331,  332,  333,  334, 
-            0,   40,    0,    0,  259,    0,    0,    0,    0,    0, 
+           12,   13,   14,   15,   16,   17,   18,    0,    0,    0, 
+            0,   19,   20,   21,  212,  213,  214,  215,    0,    0, 
+          249,    0,    0,    0,    0,    0,    0,   28,    0,    0, 
+          216,  217,  218,    0,  219,   35,  220,  221,  222,  223, 
+            0,   40,   41,   42,   43,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,  335,    0,    0,  410,    0, 
+            0,    0,    0,    0,    0,  224,    0,    0,  225,    0, 
             0,   46,   47,    0,   48,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+           50,    0,    0,    0,    0,    0,    0,    0,  272,    0, 
             0,    0,    0,   52,   53,   54,   55,   56,   57,    0, 
             0,    0,   58,    0,   59,   60,    0,   61,   62,   63, 
-           64,    0,   65,   66,    4,    5,    6,    0,    8,    0, 
-            0,    0,    9,   10,    0,    0,    0,   11,    0,   12, 
-           13,   14,  241,  242,   17,   18,    0,    0,    0,    0, 
-           19,  243,  244,  980,  981,  982,  983,    0,    0,  249, 
-            0,    0,    0,    0,    0,    0,  250,    0,    0,  984, 
-          985,  986,    0,  987,   35,  988,  989,  990,  991,    0, 
-           40,    0,    0,  259,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  992,    0,    0,  225,    0,    0, 
-           46,   47,    0,   48,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,   52,   53,   54,   55,   56,   57,    0,    0, 
-            0,   58,    0,   59,   60,    0,   61,   62,   63,   64, 
-            0,   65,   66,    4,    5,    6,    0,    8,    0,    0, 
+           64,    0,   65,   66,  639,  639,  639,    0,  639,    0, 
+            0,    0,  639,  639,    0,    0,    0,  639,    0,  639, 
+          639,  639,  639,  639,  639,  639,    0,    0,    0,    0, 
+          639,  639,  639,  639,  639,  639,  639,    0,    0,  639, 
+            0,    0,    0,    0,    0,    0,  639,    0,    0,  639, 
+          639,  639,    0,  639,  639,  639,  639,  639,  639,    0, 
+          639,  639,  639,  639,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,  639,    0,    0,  639,    0,    0, 
+          639,  639,    0,  639,    0,    0,    0,    0,    0,  639, 
+            0,    0,    0,    0,    0,    0,    0,  639,    0,    0, 
+            0,    0,  639,  639,  639,  639,  639,  639,    0,    0, 
+            0,  639,    0,  639,  639,    0,  639,  639,  639,  639, 
+            0,  639,  639,    4,    5,    6,    0,    8,    0,    0, 
             0,    9,   10,    0,    0,    0,   11,    0,   12,   13, 
            14,  241,  242,   17,   18,    0,    0,    0,    0,   19, 
           243,  244,  421,  422,  423,  424,    0,    0,  249,    0, 
             0,    0,    0,    0,    0,  250,    0,    0,  425,  426, 
-          427,    0, 1031,   35,  156,  157, 1032,  159,    0,   40, 
+          427,    0,  428,   35,  156,  157,  429,  159,    0,   40, 
             0,    0,  259,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0, 1033,    0,    0,  225,    0,    0,   46, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,  430, 
+            0,    0,    0,  431,    0,    0,  225,    0,    0,   46, 
            47,    0,   48,    0,    0,    0,    0,    0,    0,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
             0,   52,   53,   54,   55,   56,   57,    0,    0,    0, 
            58,    0,   59,   60,    0,   61,   62,   63,   64,    0, 
-           65,   66,  796,  611,    0,    0,  797,    0,    0,    0, 
-          160,  161,    0,  162,  163,  164,  165,  166,  167,  168, 
-            0,    0,  169,  170,    0,    0,    0,  171,  172,  173, 
-          174,    0,    0,    0,    0,    0,    0,  287,    0,    0, 
-            0,    0,    0,    0,  176,  177,    0,  178,  179,  180, 
-          181,  182,  183,  184,  185,  186,  187,  188,  625,  619, 
-          189,    0,  626,    0,    0,    0,  160,  161,    0,  162, 
+           65,   66,    4,    5,    6,    0,    8,    0,    0,    0, 
+            9,   10,    0,    0,    0,   11,    0,   12,   13,   14, 
+          241,  242,   17,   18,    0,    0,    0,    0,   19,  243, 
+          244,  421,  422,  423,  424,    0,    0,  249,    0,    0, 
+            0,    0,    0,    0,  250,    0,    0,  425,  426,  427, 
+            0,  428,   35,  156,  157,  429,  159,    0,   40,    0, 
+            0,  259,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  431,    0,    0,  225,    0,    0,   46,   47, 
+            0,   48,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+           52,   53,   54,   55,   56,   57,    0,    0,    0,   58, 
+            0,   59,   60,    0,   61,   62,   63,   64,    0,   65, 
+           66,    4,    5,    6,    0,    8,    0,    0,    0,    9, 
+           10,    0,    0,    0,   11,    0,   12,   13,   14,  241, 
+          242,   17,   18,    0,    0,    0,    0,   19,  243,  244, 
+          323,  324,  325,  326,    0,    0,  249,    0,    0,    0, 
+            0,    0,    0,  250,    0,    0,  327,  328,  329,    0, 
+          330,   35,  331,  332,  333,  334,    0,   40,    0,    0, 
+          259,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,  335,    0,    0,  410,    0,    0,   46,   47,    0, 
+           48,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,   52, 
+           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, 
+           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, 
+            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, 
+            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, 
+           17,   18,    0,    0,    0,    0,   19,  243,  244,  980, 
+          981,  982,  983,    0,    0,  249,    0,    0,    0,    0, 
+            0,    0,  250,    0,    0,  984,  985,  986,    0,  987, 
+           35,  988,  989,  990,  991,    0,   40,    0,    0,  259, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          992,    0,    0,  225,    0,    0,   46,   47,    0,   48, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,   52,   53, 
+           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, 
+           60,    0,   61,   62,   63,   64,    0,   65,   66,    4, 
+            5,    6,    0,    8,    0,    0,    0,    9,   10,    0, 
+            0,    0,   11,    0,   12,   13,   14,  241,  242,   17, 
+           18,    0,    0,    0,    0,   19,  243,  244,  421,  422, 
+          423,  424,    0,    0,  249,    0,    0,    0,    0,    0, 
+            0,  250,    0,    0,  425,  426,  427,    0, 1031,   35, 
+          156,  157, 1032,  159,    0,   40,    0,    0,  259,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0, 1033, 
+            0,    0,  225,    0,    0,   46,   47,    0,   48,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,    0,    0,    0,    0,    0,   52,   53,   54, 
+           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, 
+            0,   61,   62,   63,   64,    0,   65,   66,  796,  611, 
+            0,    0,  797,    0,    0,    0,  160,  161,    0,  162, 
           163,  164,  165,  166,  167,  168,    0,    0,  169,  170, 
-            0,    0,  190,  171,  172,  173,  174,    0,    0,    0, 
+            0,    0,    0,  171,  172,  173,  174,    0,    0,    0, 
             0,    0,    0,  287,    0,    0,    0,    0,    0,    0, 
           176,  177,    0,  178,  179,  180,  181,  182,  183,  184, 
-          185,  186,  187,  188,  897,  611,  189,    0,  898,    0, 
+          185,  186,  187,  188,  625,  619,  189,    0,  626,    0, 
             0,    0,  160,  161,    0,  162,  163,  164,  165,  166, 
           167,  168,    0,    0,  169,  170,    0,    0,  190,  171, 
           172,  173,  174,    0,    0,    0,    0,    0,    0,  287, 
             0,    0,    0,    0,    0,    0,  176,  177,    0,  178, 
           179,  180,  181,  182,  183,  184,  185,  186,  187,  188, 
-          900,  619,  189,    0,  901,    0,    0,    0,  160,  161, 
+          897,  611,  189,    0,  898,    0,    0,    0,  160,  161, 
             0,  162,  163,  164,  165,  166,  167,  168,    0,    0, 
           169,  170,    0,    0,  190,  171,  172,  173,  174,    0, 
             0,    0,    0,    0,    0,  287,    0,    0,    0,    0, 
             0,    0,  176,  177,    0,  178,  179,  180,  181,  182, 
-          183,  184,  185,  186,  187,  188, 1069,  611,  189,    0, 
-         1070,    0,    0,    0,  160,  161,    0,  162,  163,  164, 
+          183,  184,  185,  186,  187,  188,  900,  619,  189,    0, 
+          901,    0,    0,    0,  160,  161,    0,  162,  163,  164, 
           165,  166,  167,  168,    0,    0,  169,  170,    0,    0, 
           190,  171,  172,  173,  174,    0,    0,    0,    0,    0, 
             0,  287,    0,    0,    0,    0,    0,    0,  176,  177, 
             0,  178,  179,  180,  181,  182,  183,  184,  185,  186, 
-          187,  188, 1072,  619,  189,    0, 1073,    0,    0,    0, 
+          187,  188, 1069,  611,  189,    0, 1070,    0,    0,    0, 
           160,  161,    0,  162,  163,  164,  165,  166,  167,  168, 
             0,    0,  169,  170,    0,    0,  190,  171,  172,  173, 
           174,    0,    0,    0,    0,    0,    0,  287,    0,    0, 
             0,    0,    0,    0,  176,  177,    0,  178,  179,  180, 
-          181,  182,  183,  184,  185,  186,  187,  188, 1091,  611, 
-          189,    0, 1092,    0,    0,    0,  160,  161,    0,  162, 
+          181,  182,  183,  184,  185,  186,  187,  188, 1072,  619, 
+          189,    0, 1073,    0,    0,    0,  160,  161,    0,  162, 
           163,  164,  165,  166,  167,  168,    0,    0,  169,  170, 
             0,    0,  190,  171,  172,  173,  174,    0,    0,    0, 
             0,    0,    0,  287,    0,    0,    0,    0,    0,    0, 
           176,  177,    0,  178,  179,  180,  181,  182,  183,  184, 
-          185,  186,  187,  188,  625,  619,  189,    0,  626,    0, 
+          185,  186,  187,  188, 1091,  611,  189,    0, 1092,    0, 
             0,    0,  160,  161,    0,  162,  163,  164,  165,  166, 
           167,  168,    0,    0,  169,  170,    0,    0,  190,  171, 
-          172,  173,  174,    0,    0,    0,    0,    0,    0,    0, 
+          172,  173,  174,    0,    0,    0,    0,    0,    0,  287, 
             0,    0,    0,    0,    0,    0,  176,  177,    0,  178, 
           179,  180,  181,  182,  183,  184,  185,  186,  187,  188, 
-            0,    0,  189,    0,    0,    0,    0,    0,    0,    0, 
+          625,  619,  189,    0,  626,    0,    0,    0,  160,  161, 
+            0,  162,  163,  164,  165,  166,  167,  168,    0,    0, 
+          169,  170,    0,    0,  190,  171,  172,  173,  174,    0, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+            0,    0,  176,  177,    0,  178,  179,  180,  181,  182, 
+          183,  184,  185,  186,  187,  188,    0,    0,  189,    0, 
             0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
-            0,    0,    0,    0,  190, 
+            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
+          190, 
       };
    }
 
@@ -3116,86 +3138,35 @@
           312,   -1,   -1,   -1,   -1,  317,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  336,   -1,   -1,  386,  340,  341, 
-           -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,    0,  348,  349,  350,  351, 
+           -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   10,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  279,  280,   -1,   -1, 
+           -1,   -1,   -1,   -1,  386,   -1,   -1,   -1,   -1,   44, 
+           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
       };
    }
 
    private static final short[] yyCheck2() {
       return new short[] {
 
-           -1,    0,  348,  349,  350,  351,   -1,   -1,   -1,   -1, 
-           -1,   10,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  279,  280,   -1,   -1,   -1,   -1,   -1,   -1, 
-          386,   -1,   -1,   -1,   -1,   44,   -1,   -1,   44,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           59,   -1,   61,   -1,   63,   61,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,  335,  336, 
-           -1,   -1,   91,   -1,  341,   91,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  362,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259, 
-           -1,  261,  262,  263,  264,  265,  266,   -1,  268,  269, 
-          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, 
-          280,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
-          290,  291,  292,  293,  294,  295,  296,  297,   -1,  299, 
-           44,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, 
-          310,  311,  312,  313,  314,  315,  316,  317,  318,  319, 
-          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
-          330,   -1,   -1,  333,  334,  335,  336,  337,   -1,   -1, 
-          340,  341,  342,  343,  344,   -1,  346,   91,  348,  349, 
-          350,  351,  352,  353,  354,  355,  356,  357,  358,  359, 
-          360,  361,  362,  363,   -1,  365,  366,  367,  368,  369, 
-          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
-          380,  381,  382,   -1,  384,  385,  386,  387,  257,  258, 
-          259,   -1,  261,  262,  263,  264,  265,  266,   -1,  268, 
-          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, 
-           -1,  280,   -1,  279,  283,  284,  285,  286,  287,  288, 
-          289,  290,  291,  292,  293,  294,  295,  296,  297,   -1, 
-          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, 
-          309,  310,  311,  312,  313,  314,  315,  316,  317,  318, 
-          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
-          329,  330,  328,   -1,  333,  334,  335,  336,  337,  335, 
-          336,  340,  341,  342,  343,  344,  342,  346,   -1,  348, 
-          349,  350,  351,  352,  353,  354,  355,  356,  357,  358, 
-          359,  360,  361,  362,  363,   -1,  365,  366,  367,  368, 
-          369,  370,   -1,   -1,    0,  374,   -1,  376,  377,   -1, 
-          379,  380,  381,  382,   10,  384,  385,  386,  387,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  279,  280,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   59,   -1,   61,   -1,   63,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1, 
-           -1,  335,  336,   -1,   -1,   91,   -1,  341,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  306,  307,   -1,   -1,  310,   -1,   -1,  362,  314, 
-          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
-           -1,  326,  327,   -1,   -1,    0,  331,  332,  333,  334, 
-           -1,   -1,   -1,   -1,   -1,   10,  341,   -1,   10,   -1, 
-           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
-          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
-           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  386,   -1,   -1,   59,   -1,   61,   -1,   63,   61, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   91, 
+           -1,   -1,   -1,   -1,   59,   -1,   61,   -1,   63,   61, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1, 
+           -1,   -1,  335,  336,   -1,   -1,   91,   -1,  341,   91, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  362, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  257,  258,  259,   -1,  261,  262,  263,  264,  265, 
           266,   -1,  268,  269,  270,  271,  272,  273,  274,  275, 
           276,  277,  278,   -1,  280,   -1,   -1,  283,  284,  285, 
           286,  287,  288,  289,  290,  291,  292,  293,  294,  295, 
-          296,  297,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
+          296,  297,   -1,  299,   44,   -1,  302,  303,  304,   -1, 
           306,  307,  308,  309,  310,  311,  312,  313,  314,  315, 
           316,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
           326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
           336,  337,   -1,   -1,  340,  341,  342,  343,  344,   -1, 
-          346,   -1,  348,  349,  350,  351,  352,  353,  354,  355, 
+          346,   91,  348,  349,  350,  351,  352,  353,  354,  355, 
           356,  357,  358,  359,  360,  361,  362,  363,   -1,  365, 
           366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
           376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, 
@@ -3213,28 +3184,28 @@
           365,  366,  367,  368,  369,  370,   -1,   -1,    0,  374, 
            -1,  376,  377,   -1,  379,  380,  381,  382,   10,  384, 
           385,  386,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315, 
-           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   -1, 
-          326,  327,   44,   -1,   -1,  331,  332,  333,  334,   -1, 
-           -1,   -1,   -1,   -1,   -1,  341,   -1,   59,   -1,   61, 
-           -1,   63,  348,  349,   -1,  351,  352,  353,  354,  355, 
-          356,  357,  358,  359,  360,  361,   -1,   -1,  364,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  306,  307, 
-          386,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
-          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, 
-           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,    0, 
-           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   10, 
-          348,  349,   10,  351,  352,  353,  354,  355,  356,  357, 
-          358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, 
-           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, 
-          322,  323,   -1,   44,  326,  327,   44,   -1,  386,  331, 
-          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   59,  341, 
-           61,   -1,   63,   61,   -1,   -1,  348,  349,   -1,  351, 
-          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, 
-           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279, 
+          280,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   61, 
+           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1, 
+           -1,   -1,   -1,   -1,   -1,  335,  336,   -1,   -1,   91, 
+           -1,  341,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  306,  307,   -1,   -1,  310, 
+           -1,   -1,  362,  314,  315,   -1,  317,  318,  319,  320, 
+          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,    0, 
+          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   10, 
+          341,   -1,   10,   -1,   -1,   -1,   -1,  348,  349,   -1, 
+          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, 
+          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   44,   -1,   -1,   44,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  386,   -1,   -1,   59,   -1, 
+           61,   -1,   63,   61,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            91,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  386,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, 
           262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, 
@@ -3289,7 +3260,7 @@
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257, 
           258,  259,   -1,  261,  262,  263,  264,  265,  266,   -1, 
           268,  269,  270,  271,  272,  273,  274,  275,  276,  277, 
-          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          278,   -1,  280,   -1,   -1,  283,  284,  285,  286,  287, 
           288,  289,  290,  291,  292,  293,  294,  295,  296,  297, 
            -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
           308,  309,  310,  311,  312,  313,  314,  315,  316,  317, 
@@ -3297,77 +3268,158 @@
           328,  329,  330,   -1,   -1,  333,  334,  335,  336,  337, 
            -1,   -1,  340,  341,  342,  343,  344,   -1,  346,   -1, 
           348,  349,  350,  351,  352,  353,  354,  355,  356,  357, 
-          358,  359,  360,  361,   -1,  363,   -1,  365,  366,  367, 
-          368,  369,  370,   -1,   -1,    0,  374,   -1,  376,  377, 
-           -1,  379,  380,  381,  382,   10,  384,  385,  386,  387, 
+          358,  359,  360,  361,  362,  363,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,  384,  385,  386,  387, 
           257,  258,  259,   -1,  261,  262,  263,  264,  265,  266, 
            -1,  268,  269,  270,  271,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,  279,  283,  284,  285,  286, 
+          277,  278,   -1,  280,   -1,  279,  283,  284,  285,  286, 
           287,  288,  289,  290,  291,  292,  293,  294,  295,  296, 
-          297,   -1,  299,   -1,   59,  302,  303,  304,   -1,  306, 
+          297,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
           307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
           317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
           327,  328,  329,  330,  328,   -1,  333,  334,  335,  336, 
           337,  335,  336,  340,  341,  342,  343,  344,  342,  346, 
            -1,  348,  349,  350,  351,  352,  353,  354,  355,  356, 
-          357,  358,  359,  360,  361,   -1,  363,   -1,  365,  366, 
+          357,  358,  359,  360,  361,  362,  363,   -1,  365,  366, 
           367,  368,  369,  370,   -1,   -1,    0,  374,   -1,  376, 
           377,   -1,  379,  380,  381,  382,   10,  384,  385,  386, 
-          387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  306,  307, 
+           -1,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
+          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, 
+           44,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, 
+           -1,   -1,   -1,  341,   -1,   59,   -1,   61,   -1,   63, 
+          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, 
+          358,  359,  360,  361,   -1,   -1,  364,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  306,  307,  386,   -1, 
+          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, 
+          320,  321,  322,  323,   -1,   -1,  326,  327,   -1,   -1, 
+           -1,  331,  332,  333,  334,   -1,   -1,    0,   -1,   -1, 
+           -1,  341,   -1,   -1,   -1,   -1,   -1,   10,  348,  349, 
+           10,  351,  352,  353,  354,  355,  356,  357,  358,  359, 
+          360,  361,  306,  307,  364,   -1,  310,   -1,   -1,   -1, 
+          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, 
+           -1,   44,  326,  327,   44,   -1,  386,  331,  332,  333, 
+          334,   -1,   -1,   -1,   -1,   -1,   59,  341,   61,   -1, 
+           63,   61,   -1,   -1,  348,  349,   -1,  351,  352,  353, 
+          354,  355,  356,  357,  358,  359,  360,  361,   -1,   -1, 
+          364,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1, 
+           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  386,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
-           44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63, 
+           -1,   -1,   -1,  257,  258,  259,   -1,  261,  262,  263, 
+          264,  265,  266,   -1,  268,  269,  270,  271,  272,  273, 
+          274,  275,  276,  277,  278,   -1,   -1,   -1,   -1,  283, 
+          284,  285,  286,  287,  288,  289,  290,  291,  292,  293, 
+          294,  295,  296,  297,   -1,  299,   -1,   -1,  302,  303, 
+          304,   -1,  306,  307,  308,  309,  310,  311,  312,  313, 
+          314,  315,  316,  317,  318,  319,  320,  321,  322,  323, 
+          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
+          334,  335,  336,  337,   -1,   -1,  340,  341,  342,  343, 
+          344,   -1,  346,   -1,  348,  349,  350,  351,  352,  353, 
+          354,  355,  356,  357,  358,  359,  360,  361,   -1,  363, 
+           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,    0, 
+          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   10, 
+          384,  385,  386,  387,  257,  258,  259,   -1,  261,  262, 
+          263,  264,  265,  266,   -1,  268,  269,  270,  271,  272, 
+          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,  279, 
+          283,  284,  285,  286,  287,  288,  289,  290,  291,  292, 
+          293,  294,  295,  296,  297,   -1,  299,   -1,   59,  302, 
+          303,  304,   -1,  306,  307,  308,  309,  310,  311,  312, 
+          313,  314,  315,  316,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,  328,  329,  330,  328,   -1, 
+          333,  334,  335,  336,  337,  335,  336,  340,  341,  342, 
+          343,  344,  342,  346,   -1,  348,  349,  350,  351,  352, 
+          353,  354,  355,  356,  357,  358,  359,  360,  361,   -1, 
+          363,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, 
+            0,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
+           10,  384,  385,  386,  387,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   10,   -1,   44,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59, 
+           -1,   61,   -1,   63,   -1,   -1,   -1,   10,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   91,   -1,   61,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1, 
+           -1,   -1,   -1,   91,   -1,   -1,  257,  258,  259,   -1, 
+          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, 
+          271,  272,  273,  274,  275,  276,  277,  278,   91,  280, 
+          281,   -1,  283,  284,  285,  286,  287,  288,  289,  290, 
+          291,  292,  293,  294,  295,  296,  297,   -1,  299,   -1, 
+           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,  312,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1, 
+           -1,   -1,   -1,   -1,  335,  336,  337,   -1,   -1,  340, 
+           -1,  342,  343,  344,   -1,  346,    0,  348,   -1,  350, 
+           -1,  352,   -1,   -1,   -1,   -1,   10,   -1,   -1,  360, 
+           -1,  362,  363,   -1,  365,  366,  367,  368,  369,  370, 
+           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
+          381,  382,   -1,  384,  385,  386,  387,   -1,   -1,   -1, 
+           44,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
+           -1,  271,   -1,   -1,   58,   59,   -1,   61,   -1,   63, 
+          280,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  305,   -1,   91,   -1,   -1, 
+           -1,  279,  280,   -1,   -1,   -1,   -1,  317,  318,  319, 
+          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
+          330,   -1,   -1,  333,  334,  335,  336,  280,    0,  339, 
+           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   10,  349, 
+           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
+          328,  361,  362,  363,   -1,   -1,   -1,  335,  336,   -1, 
+           -1,   -1,   -1,  341,  342,  375,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,   -1,  328,   -1,  387,   -1,   -1, 
+           -1,   -1,  335,  336,  362,   -1,   58,   59,  341,   61, 
+           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  359,   -1,   -1,  362, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
            -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   61, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1, 
+           -1,   -1,   10,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
-           -1,   -1,  257,  258,  259,   -1,  261,  262,  263,  264, 
-          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, 
-          275,  276,  277,  278,   91,  280,  281,   -1,  283,  284, 
-          285,  286,  287,  288,  289,  290,  291,  292,  293,  294, 
-          295,  296,  297,   -1,  299,   -1,   -1,  302,  303,  304, 
-           -1,  306,  307,  308,  309,  310,  311,  312,  313,  314, 
-          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1, 
-          335,  336,  337,   -1,   -1,  340,   -1,  342,  343,  344, 
-           -1,  346,    0,  348,   -1,  350,   -1,  352,   -1,   -1, 
-           -1,   -1,   10,   -1,   -1,  360,   -1,  362,  363,   -1, 
-          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
-           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,  384, 
-          385,  386,  387,   -1,   -1,   -1,   44,   -1,  262,  263, 
-          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
-           58,   59,   -1,   61,   -1,   63,  280,  281,  282,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  305,   -1,   91,   -1,   -1,   -1,  279,  280,   -1, 
-           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
+           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,  262,  263, 
+          264,   10,   59,  267,  268,  269,   -1,  271,   -1,   -1, 
+           44,   -1,   -1,   61,   -1,   -1,   -1,  281,  282,   -1, 
+           -1,   -1,   -1,   -1,   -1,   59,  290,  291,   -1,  293, 
+          294,  295,  296,  297,   91,   -1,   -1,   -1,   -1,   -1, 
+           -1,  305,    0,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
+           59,   -1,   10,  317,  318,  319,  320,  321,  322,  323, 
           324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,  280,    0,  339,   -1,   -1,  342,   -1, 
-           -1,  345,   -1,  347,   10,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,  328,  361,  362,  363, 
-           -1,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1,  341, 
-          342,  375,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
-           -1,  328,   -1,  387,   -1,   -1,   -1,   -1,  335,  336, 
-          362,   -1,   58,   59,  341,   61,   -1,   63,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  359,   -1,   -1,  362,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   10, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
-           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   44,   -1,  262,  263,  264,   10,   59,  267, 
-          268,  269,   -1,  271,   -1,   -1,   44,   -1,   -1,   61, 
-           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, 
+          334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, 
+           -1,  345,   91,  347,   -1,  349,   44,  351,   -1,  353, 
+          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
+           58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1, 
+           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          262,  263,  264,  387,   -1,  267,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,  281, 
+          282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
+           -1,  333,  334,  335,  336,   -1,  338,  339,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, 
+          267,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
+           -1,  363,   58,   59,   -1,   61,   -1,   63,  262,  263, 
+          264,  279,  280,  375,  268,  269,   -1,  271,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  267,  293, 
+          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   10, 
+           -1,  328,    0,   10,   -1,   -1,   -1,   -1,  335,  336, 
+          328,   -1,   10,   -1,   -1,   -1,   -1,  335,  336,   -1, 
+           -1,   -1,   -1,  341,  342,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   44,  262,  263,  264,   -1,  342,  267, 
+          268,  269,   -1,  271,  362,   -1,   -1,   -1,   -1,  328, 
+           61,   -1,   59,  281,  282,   -1,  335,  336,   -1,  363, 
            -1,   59,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           91,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   91, 
-           -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   10,  317, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1, 
+           91,   -1,   -1,  387,   91,   -1,   -1,   -1,   10,  317, 
           318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
           328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
-          338,  339,   -1,   -1,  342,   -1,   -1,  345,   91,  347, 
+          338,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
            -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, 
           358,  359,   -1,  361,   -1,  363,   58,   59,   -1,   61, 
            -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, 
@@ -3380,21 +3432,21 @@
            10,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
           326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
           336,   -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345, 
-           -1,  347,   -1,  349,   44,  351,  267,  353,  354,  355, 
-          356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, 
-           -1,   61,   -1,   63,  262,  263,  264,  279,  280,  375, 
-          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, 
+          356,  357,  358,  359,   -1,  361,   10,  363,   58,   59, 
+          267,   61,   -1,   63,  262,  263,  264,   -1,  279,  375, 
+          268,  269,   -1,  271,   10,   -1,   -1,   -1,   -1,   -1, 
            -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   91,   -1,   -1,  267,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   10,   -1,  328,    0,   10, 
-           -1,   -1,   -1,   -1,  335,  336,  328,   -1,   10,   -1, 
-           -1,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1,  341, 
-          342,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
+           -1,   91,   -1,   -1,   -1,  293,  294,  295,  296,   10, 
+           -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   10, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1, 
+           -1,  328,   -1,   59,  335,  336,   -1,   -1,  335,  336, 
+           -1,  342,   -1,   44,   -1,   -1,   -1,   91,   -1,   -1, 
           262,  263,  264,   -1,  342,  267,  268,  269,   -1,  271, 
-          362,   -1,   -1,   -1,   -1,  328,   61,   -1,   59,  281, 
-          282,   -1,  335,  336,   -1,  363,   -1,   59,  290,  291, 
+           61,   -1,   -1,   -1,   -1,   91,   -1,   -1,   59,  281, 
+          282,   -1,   -1,   -1,   -1,  363,   -1,   -1,  290,  291, 
            -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  305,    0,   -1,   91,   -1,   -1,  387, 
+           91,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,  387, 
            91,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, 
           322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
            -1,  333,  334,  335,  336,   -1,  338,  339,   -1,   -1, 
@@ -3407,105 +3459,105 @@
            -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319, 
+           -1,   -1,   -1,  267,   -1,   -1,   10,  317,  318,  319, 
           320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
-          330,   -1,   -1,  333,  334,  335,  336,   -1,  338,  339, 
-           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, 
+          330,  267,   -1,  333,  334,  335,  336,   -1,  338,  339, 
+           -1,   -1,  342,   -1,  280,  345,   -1,  347,   -1,  349, 
            44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
-           -1,  361,   10,  363,   58,   59,  267,   61,   -1,   63, 
-          262,  263,  264,   -1,  279,  375,  268,  269,   -1,  271, 
-           10,   -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1, 
-           -1,  293,  294,  295,  296,   10,   -1,   -1,   -1,   -1, 
-           -1,   59,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  328,   -1,   -1,   -1,  328,   -1,   59, 
-          335,  336,   -1,   -1,  335,  336,   -1,  342,   -1,   44, 
-           -1,   -1,   -1,   91,   -1,   -1,  262,  263,  264,   -1, 
-          342,  267,  268,  269,   -1,  271,   61,   -1,   -1,   -1, 
-           -1,   91,   -1,   -1,   59,  281,  282,   -1,   -1,   -1, 
-           -1,  363,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,   -1,   91,   -1,   -1,  305, 
-            0,   -1,   -1,   -1,   -1,  387,   91,   -1,   -1,   -1, 
-           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
+           -1,  361,   -1,  363,   58,   59,  267,   61,  279,   63, 
+           -1,   -1,   -1,   -1,  328,  375,   -1,   -1,   -1,  280, 
+           -1,  335,  336,   -1,   -1,   -1,   -1,  387,   -1,   -1, 
+           -1,   -1,  328,   -1,   -1,   -1,   -1,   91,   -1,  335, 
+          336,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1,   -1, 
+           -1,   10,   -1,   -1,   -1,   10,   -1,  328,   -1,   -1, 
+           -1,   -1,   -1,   -1,  335,  336,  362,  328,   -1,   -1, 
+           -1,  342,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1, 
+          341,   -1,   -1,   -1,   -1,   44,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
+           -1,  362,   61,   -1,   59,  281,  282,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
+            0,   -1,   91,   -1,   -1,   -1,   91,   -1,   -1,   -1, 
+           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
           326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
           336,   -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345, 
-           -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, 
+           -1,  347,   10,  349,   44,  351,   -1,  353,  354,  355, 
           356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, 
            -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
+           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,  262,  263, 
           264,  387,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
-           -1,   91,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, 
+           -1,   91,   -1,   61,   -1,   -1,   -1,  281,  282,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
           294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,  267, 
+           -1,  305,    0,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,  328,  329,  330,  267,   -1,  333, 
+          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
           334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, 
-          280,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, 
+           -1,  345,   -1,  347,   10,  349,   44,  351,   -1,  353, 
           354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
-           58,   59,  267,   61,  279,   63,   -1,   -1,   -1,   -1, 
-          328,  375,   -1,   -1,   -1,  280,   -1,  335,  336,   -1, 
-           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,  328,   -1, 
-           -1,   -1,   -1,   91,   -1,  335,  336,   -1,   -1,   -1, 
-           -1,  341,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, 
-           -1,   10,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1, 
-          335,  336,  362,  328,   -1,   -1,   -1,  342,   -1,   -1, 
-          335,  336,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1, 
-           -1,   44,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,   -1,   -1,   -1,   -1,   -1,  362,   61,   -1, 
-           59,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           58,   59,  267,   61,   -1,   63,   -1,   -1,   -1,   -1, 
+          279,  375,   -1,   -1,   -1,  280,   -1,   -1,   44,   -1, 
+           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   91,   -1,   61,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328, 
+           -1,   -1,   -1,  328,   -1,   91,  335,  336,   -1,   -1, 
+          335,  336,   -1,  342,   -1,   -1,  341,   -1,   -1,   -1, 
+           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
+           -1,  271,   -1,   -1,   -1,   -1,   -1,  362,   -1,   -1, 
+           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   91,   -1, 
-           -1,   -1,   91,   -1,   -1,   -1,   10,  317,  318,  319, 
+           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1,   -1, 
+           -1,  279,   -1,   -1,   -1,   -1,   10,  317,  318,  319, 
           320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
           330,   -1,   -1,  333,  334,  335,  336,   -1,  338,  339, 
-           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   10,  349, 
+           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, 
            44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
-           -1,  361,   -1,  363,   58,   59,   -1,   61,   -1,   63, 
-           -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1, 
-           -1,   -1,   44,   -1,  262,  263,  264,  387,   -1,  267, 
-          268,  269,   -1,  271,   -1,   -1,   -1,   91,   -1,   61, 
+          328,  361,   -1,  363,   58,   59,   -1,  335,  336,   63, 
+           -1,   -1,   -1,   -1,  342,  375,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  262,  263,  264,  387,   -1,  267, 
+          268,  269,   -1,  271,   -1,   -1,   -1,   91,   -1,   -1, 
            -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   91, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1, 
+           -1,   -1,   -1,  279,   -1,   -1,   -1,   -1,   10,  317, 
           318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
           328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
           338,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
-           10,  349,   44,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,   -1,  361,   -1,  363,   58,   59,  267,   61, 
-           -1,   63,   -1,   -1,   -1,   -1,  279,  375,   -1,   -1, 
-           -1,  280,   -1,   -1,   44,   -1,   -1,   -1,   -1,  387, 
+           -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, 
+          358,  359,  328,  361,   -1,  363,   58,   59,   -1,  335, 
+          336,   63,   -1,   -1,   -1,   -1,  342,  375,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
-           -1,   61,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,  328, 
-           -1,   91,  335,  336,   -1,   -1,  335,  336,   -1,  342, 
-           -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,  262,  263, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
           264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
-           -1,   -1,   -1,  362,   -1,   -1,   -1,  281,  282,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  280,  281,  282,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
           294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  305,    0,   -1,   -1,   -1,   -1,  279,   -1,   -1, 
+           -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, 
           324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, 
+          334,  335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1, 
            -1,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,  328,  361,   -1,  363, 
-           58,   59,   -1,  335,  336,   63,   -1,   -1,   -1,   -1, 
-          342,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          354,  355,  356,  357,  358,  359,   -1,  361,  362,  363, 
+           58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1, 
+           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           262,  263,  264,  387,   -1,  267,  268,  269,   -1,  271, 
-           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,  281, 
+           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,  280,  281, 
           282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
            -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,  279, 
+           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, 
           322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
-           -1,  333,  334,  335,  336,   -1,  338,  339,   -1,   -1, 
+           -1,  333,  334,  335,  336,   -1,   -1,  339,   -1,   -1, 
           342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, 
-           -1,  353,  354,  355,  356,  357,  358,  359,  328,  361, 
-           -1,  363,   58,   59,   -1,  335,  336,   63,   -1,   -1, 
-           -1,   -1,  342,  375,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
+          362,  363,   58,   59,   -1,   61,   -1,   63,   -1,   -1, 
+           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
@@ -3514,7 +3566,7 @@
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
           268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  280,  281,  282,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, 
@@ -3522,11 +3574,11 @@
           328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
            -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
            -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,   -1,  361,  362,  363,   58,   59,   -1,   61, 
+          358,  359,   -1,  361,   -1,  363,   58,   59,   -1,   -1, 
            -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,  387, 
            -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   91, 
-           -1,   -1,   -1,   -1,  280,  281,  282,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
           296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
             0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
@@ -3534,8 +3586,8 @@
           326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
           336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
            -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, 
-          356,  357,  358,  359,   -1,  361,  362,  363,   58,   59, 
-           -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, 
+          356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, 
+           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
@@ -3596,418 +3648,395 @@
           334,  335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1, 
            -1,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, 
           354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
-           58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, 
+           -1,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, 
            -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           44,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  281,  282,   -1,   -1,   59,   -1,   -1,   -1,   63, 
           290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319, 
+           -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,  318,  319, 
           320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
-          330,   -1,   -1,  333,  334,  335,  336,   -1,   -1,  339, 
-           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, 
-           44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
-           -1,  361,   -1,  363,   58,   59,   -1,   -1,   -1,   63, 
+          330,   -1,   -1,  333,  334,  335,  336,   -1,    0,  339, 
+           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   10,  349, 
+           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
+           -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,  387,   -1,  267, 
-          268,  269,   -1,  271,   -1,   -1,   -1,   91,   -1,   -1, 
-           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,  262,  263,  264,  387,   -1,  267, 
+          268,  269,   -1,  271,   -1,   -1,   -1,   59,   -1,   -1, 
+           -1,   63,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317, 
           318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
           328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
            -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
-           -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,   -1,  361,   -1,  363,   -1,   59,   -1,   -1, 
-           -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
-          264,   -1,   -1,  267,  268,  269,   44,  271,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, 
-           -1,   59,   -1,   -1,   -1,   63,  290,  291,   -1,  293, 
+           -1,  349,   -1,  351,    0,  353,  354,  355,  356,  357, 
+          358,  359,   -1,  361,   10,  363,   -1,   -1,  262,  263, 
+          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  387, 
+           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   44,  293, 
           294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   91,  318,  319,  320,  321,  322,  323, 
+           -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
+           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
           324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,    0,  339,   -1,   -1,  342,   -1, 
-           -1,  345,   -1,  347,   10,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
-          262,  263,  264,  387,   -1,  267,  268,  269,   -1,  271, 
-           -1,   -1,   -1,   59,   -1,   -1,   -1,   63,   -1,  281, 
+          334,  335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1, 
+           -1,  345,   -1,  347,   -1,  349,   -1,  351,   -1,  353, 
+          354,  355,  356,  357,  358,  359,   -1,  361,    0,  363, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,  281, 
           282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
            -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
+           -1,   -1,   -1,   -1,    0,   -1,   -1,   59,   -1,   -1, 
+           -1,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, 
           322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
            -1,  333,  334,  335,  336,   -1,   -1,  339,   -1,   -1, 
-          342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1,  351, 
-            0,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
-           10,  363,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  281,  282,  387,   -1,   -1,   -1,   -1, 
-           -1,   -1,  290,  291,   44,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59, 
-           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  317, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, 
-           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
-           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
+           -1,  363,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,  387, 
+           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, 
             0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            10,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
-          336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
+          326,  327,   -1,  329,  330,   -1,   -1,  333,  334,   -1, 
+           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
            -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, 
           356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, 
-           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+           -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,    0, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
+           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,   -1,  271,  328,   -1,   -1,   -1, 
+           -1,   -1,   -1,  335,  336,  281,  282,   -1,   -1,   -1, 
+          342,   -1,   -1,   44,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,   -1,   -1,   58,   59,  305, 
+           -1,  363,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
+          326,  327,   -1,  329,  330,  387,   -1,  333,  334,   -1, 
+           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
+           -1,  347,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
+          356,  357,  358,  359,   -1,  361,    0,  363,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,  375, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  281,  282,   10,   -1,   -1,   -1,   -1,   -1,   -1, 
+           44,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  281,  282,   -1,   58,   59,   -1,   -1,   -1,   63, 
           290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  318,  319, 
-          320,  321,  322,  323,  324,  325,  326,  327,   -1,  329, 
-          330,   58,   59,  333,  334,   -1,   63,   -1,   -1,  339, 
-           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, 
-           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
-           -1,  361,   -1,  363,   -1,  306,  307,   -1,   -1,  310, 
-           -1,   -1,   -1,  314,  315,  375,  317,  318,  319,  320, 
-          321,  322,  323,   -1,   -1,  326,  327,  387,   -1,   -1, 
-          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,    0, 
-          341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   10, 
-          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, 
-          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,   -1,   44,   -1,  386,   -1,   -1,   -1,   -1, 
-           -1,  281,  282,   -1,   -1,   -1,   -1,   58,   59,   -1, 
-          290,  291,   63,  293,  294,  295,  296,  297,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,  319, 
           320,  321,  322,  323,  324,  325,  326,  327,   -1,  329, 
           330,   -1,   -1,  333,  334,   -1,   -1,   -1,   -1,  339, 
            -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, 
-           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
-           -1,  361,   -1,  363,   -1,  262,  263,  264,   -1,   -1, 
-          267,  268,  269,   -1,  271,  375,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  281,  282,   10,  387,   -1,   -1, 
-           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           44,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
-          327,   -1,  329,  330,   58,   59,  333,  334,   -1,   63, 
-           -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, 
-          347,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, 
-          357,  358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          387,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
-          271,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          281,  282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
+           -1,  351,    0,  353,  354,  355,  356,  357,  358,  359, 
+           -1,  361,   10,  363,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  262,  263,  264,   -1,  375,  267,  268,  269,   -1, 
+          271,   -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1, 
+          281,  282,   -1,   -1,   -1,   -1,   44,   -1,   -1,  290, 
           291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   44,  318,  319,  320, 
+           58,   59,   -1,   -1,  305,   63,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320, 
           321,  322,  323,  324,  325,  326,  327,   -1,  329,  330, 
-           58,   59,  333,  334,   -1,   63,   -1,   -1,  339,   -1, 
-           -1,  342,   -1,   -1,  345, 
+           -1,   -1,  333,  334,   -1,   -1,   -1,   -1,  339,   -1, 
+           -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1, 
+          351,   -1,  353,  354,  355,  356,  357,  358,  359,    0, 
+          361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
+           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,  262,  263, 
+          264,   -1,   -1,  267,  268,  269,  387,  271,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, 
+           -1,   -1,   -1,   44,   -1,   -1,  290,  291,   -1,  293, 
+          294,  295,  296,  297,   -1,   -1,   -1,   58,   59,   -1, 
+           -1,  305,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  318,  319,  320,  321,  322,  323, 
+          324, 
       };
    }
 
    private static final short[] yyCheck3() {
       return new short[] {
 
-           -1,  347,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
-          356,  357,  358,  359,   -1,  361,   -1,  363,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  387,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
-          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  281,  282,   -1,   -1,   44,   -1,   -1,   -1, 
-           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,   59,   -1,   61,   -1,   63,  305,   -1,   -1,   -1, 
+          325,  326,  327,   -1,  329,  330,   -1,   -1,  333,  334, 
+           -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, 
+          345,   -1,  347,   -1,  349,   -1,  351,    0,  353,  354, 
+          355,  356,  357,  358,  359,   -1,  361,   10,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  387,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   44,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  281,  282,   -1,   58,   59,   -1,   -1,   -1, 
+           63,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318, 
           319,  320,  321,  322,  323,  324,  325,  326,  327,   -1, 
-          329,  330,   -1,   91,  333,  334,   -1,   -1,   -1,   -1, 
+          329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1,   -1, 
           339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
-          349,   -1,  351,    0,  353,  354,  355,  356,  357,  358, 
-          359,   -1,  361,   10,  363,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,  262, 
-          263,  264,   -1,   -1,  267,  268,  269,   44,  271,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, 
-           -1,   -1,   59,   -1,   61,   -1,   63,  290,  291,   -1, 
-          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   91,  318,  319,  320,  321,  322, 
-          323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, 
-          333,  334,   -1,   -1,   -1,    0,  339,   -1,   -1,  342, 
-           -1,   -1,  345,   -1,  347,   10,  349,   -1,  351,   -1, 
-          353,  354,  355,  356,  357,  358,  359,   -1,  361,   -1, 
+          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, 
+          359,   -1,  361,    0,  363,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   10,   -1,   -1,  375,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,  387,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
+          282,   -1,   -1,   -1,   -1,   -1,   -1,   44,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
+           -1,   -1,   59,  305,   61,   -1,   63,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,   -1,  329,  330,   -1, 
+           -1,  333,  334,   -1,   91,   -1,   -1,  339,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,   -1,  349,    0,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   10,  361, 
+           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   -1,  375,  267,  268,  269,   -1,  271,   -1, 
+           -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,  281,  282, 
+           -1,   -1,   44,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   -1,   -1,   59,   -1,   61, 
+           -1,   63,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,   -1,  329,  330,   -1,   91, 
+          333,  334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, 
+           -1,   -1,  345,   -1,  347,   -1,  349,    0,  351,   -1, 
+          353,  354,  355,  356,  357,  358,  359,   10,  361,   -1, 
           363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  375,   -1,  262,  263,  264,   -1,   -1,   44, 
-          268,  269,   -1,  271,  387,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  280,   -1,   59,   -1,   61,   -1,   63,   -1, 
-           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  317, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-          328,  329,  330,    0,   -1,  333,  334,  335,  336,   -1, 
-           -1,   -1,   -1,   10,  342,   -1,   -1,   -1,   -1,   -1, 
-           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, 
-          358,  359,   -1,  361,  362,  363,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
-           -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,  387, 
-           -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1, 
+           -1,   44,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
+           -1,  268,  269,   -1,  271,   -1,   59,   -1,   61,   -1, 
+           63,   -1,   -1,  280,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
+          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
           327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, 
-           -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44,   -1, 
-           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, 
-          357,  358,  359,   59,  361,   61,  363,   63,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
-           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, 
-          387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
-          295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
-           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, 
-          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, 
-          335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1, 
-           44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354, 
-          355,  356,  357,  358,  359,   59,  361,   61,  363,   63, 
+           -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,   -1,   -1, 
+           -1,   -1,  349,    0,  351,   -1,  353,  354,  355,  356, 
+          357,  358,  359,   10,  361,  362,  363,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,   -1,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,    0, 
+           -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
+           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
+           -1,  333,  334,  335,  336,   -1,  338,   -1,   -1,   -1, 
+          342,   -1,   -1,   44,   -1,   -1,   -1,  349,   -1,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   59,  361, 
+           61,  363,   63,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1, 
+           -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1, 
+           91,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,    0,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
+           -1,   -1,   -1,   -1,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, 
+          333,  334,  335,  336,   -1,  338,   -1,   -1,   -1,  342, 
+           -1,   -1,   44,   -1,   -1,   -1,  349,   -1,  351,   -1, 
+          353,  354,  355,  356,  357,  358,  359,   59,  361,   61, 
+          363,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  387,   10,   -1,   -1,   -1,   91, 
            -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, 
-          267,  268,  269,    0,  271,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  387,   10,  281,   -1,   -1,   91,   -1,   -1, 
+          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   44, 
            -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1, 
+          297,   -1,   -1,   -1,   59,   -1,   61,   -1,   63,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  328,   59,   -1,   61,   -1,   63,   -1,  335,  336, 
-           -1,   -1,   -1,   -1,   -1,  342,  262,  263,  264,   -1, 
-           -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   91,   -1,  363,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, 
-          387,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1, 
-           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
-          336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44, 
-           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
-          356,  357,  358,  359,   59,  361,   61,  363,   63,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
-          264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, 
-           -1,  387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, 
-           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,  338,  262,  263,  264,  342,   -1, 
-           -1,  268,  269,   -1,  271,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   59,  361,   -1,  363, 
-           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  387,   10,   -1,   -1,   -1,   -1,   -1, 
-          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
-          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, 
-           -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44,   -1, 
-           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, 
-          357,  358,  359,   59,  361,   61,  363,   63,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
-           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, 
-          387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
+           -1,  262,  263,  264,   -1,   -1,   -1,  268,  269,   -1, 
+          271,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,  345,  290, 
+          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
+            0,   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1, 
+           10,   -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320, 
+          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, 
+          387,   -1,  333,  334,  335,  336,   -1,  338,   -1,   -1, 
+           -1,  342,   -1,   -1,   44,   -1,   -1,   -1,  349,   -1, 
+          351,   -1,  353,  354,  355,  356,  357,  358,  359,   59, 
+          361,   61,  363,   63,   -1,   -1,   -1,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,   -1,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,  387,   10,   -1,   -1, 
+           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
+           63,  333,  334,  335,  336,   -1,  338,  262,  263,  264, 
+          342,   -1,   -1,  268,  269,   -1,  271,  349,   -1,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
+           -1,  363,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
           295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  387,   10,   -1,   -1,   -1, 
            -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, 
           325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, 
           335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1, 
            44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354, 
           355,  356,  357,  358,  359,   59,  361,   61,  363,   63, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
-          263,  264,   -1,    0,  267,  268,  269,   -1,  271,   -1, 
-           -1,   -1,  387,   10,   -1,   -1,   -1,   91,  281,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
-          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   59,   -1,   61,   -1,   63,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,  342, 
-           -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1, 
-          363,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  387,   10,   -1,   -1,   -1,   -1, 
-           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
-          336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44, 
-           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
-          356,  357,  358,  359,   59,  361,   61,  363,   63,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  262,  263,  264,   -1,   -1,   -1,  268,  269, 
+           -1,  271,  387,   -1,   -1,   -1,   -1,   91,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
+           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   10,   -1,   -1,   -1,   -1,   -1,  317,  318,  319, 
+          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
+          330,   -1,   -1,  333,  334,  335,  336,   -1,  338,   -1, 
+           -1,   -1,  342,   -1,   -1,   44,   -1,   -1,   -1,  349, 
+           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
+           59,  361,   61,  363,   63,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,   10,   -1, 
+           -1,   -1,   91,   -1,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, 
+          333,  334,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,   -1,   -1,  349,   -1,  351,   -1, 
+          353,  354,  355,  356,  357,  358,  359,   59,  361,   61, 
+           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
           264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, 
-           -1,  387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, 
            -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,    0, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, 
+          294,  295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, 
            -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
           324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,  338,  262,  263,  264,  342,   -1, 
-           -1,  268,  269,   -1,  271,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   -1,  361,   59,  363, 
-           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  387,   10,   -1,   -1,   -1,   -1,   -1, 
-          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, 
-          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, 
-           -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44,   -1, 
-           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, 
-          357,  358,  359,   59,  361,   61,  363,   63,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
-           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, 
-          387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
-          295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, 
-           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, 
-          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, 
-          335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1, 
-           44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354, 
-          355,  356,  357,  358,  359,   59,  361,   61,  363,   63, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
-          271,   -1,  387,   -1,   -1,   -1,   -1,   91,   -1,   -1, 
-          281,  282,   -1,   -1,   -1,   -1,   -1,   -1,    0,  290, 
-          291,   -1,  293,  294,  295,  296,  297,   -1,   10,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          334,  335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1, 
+           -1,   44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353, 
+          354,  355,  356,  357,  358,  359,   59,  361,   61,  363, 
+           63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,  268, 
+          269,   -1,  271,  387,   -1,   -1,   -1,   -1,   91,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   44,   -1,   -1,   -1,  262,  263,  264,   -1, 
-           -1,  342,  268,  269,  345,  271,   58,   59,   -1,   -1, 
-           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  363,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1, 
-           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
-          336,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,   -1, 
-           -1,   -1,   -1,  349,   -1,  351,    0,  353,  354,  355, 
-          356,  357,  358,  359,   -1,  361,   10,  363,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, 
-          264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, 
-           -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           44,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   58,   59,   -1,   -1,   -1,   63, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318, 
+          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, 
+          329,  330,   -1,   -1,  333,  334,  335,  336,   -1,  338, 
+          262,  263,  264,  342,   -1,   -1,  268,  269,   -1,  271, 
+          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, 
+          359,   -1,  361,   -1,  363,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,    0, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,   10, 
+           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
+           -1,  333,  334,  335,  336,   -1,  338,   -1,   -1,   -1, 
+          342,   -1,   -1,   44,   -1,   -1,   -1,  349,   -1,  351, 
+           -1,  353,  354,  355,  356,  357,  358,  359,   59,  361, 
+           61,  363,   63,   -1,   -1,   -1,   -1,   -1,   -1,  262, 
+          263,  264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1, 
+           -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1, 
+           91,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
+          293,  294,  295,  296,  297,   -1,   -1,   -1,    0,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
+           -1,   -1,   -1,   -1,  317,  318,  319,  320,  321,  322, 
+          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, 
+          333,  334,  335,  336,   -1,  338,   -1,   -1,   -1,  342, 
+           -1,   -1,   44,   -1,   -1,   -1,  349,   -1,  351,   -1, 
+          353,  354,  355,  356,  357,  358,  359,   59,  361,   61, 
+          363,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  306,  307,  387,   -1,  310,   -1,   -1,   91, 
+          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, 
+           -1,   -1,  326,  327,   -1,    0,   -1,  331,  332,  333, 
+          334,   -1,   -1,   -1,   -1,   10,   -1,  341,   -1,   -1, 
+           -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, 
+          354,  355,  356,  357,  358,  359,  360,  361,   -1,   -1, 
+          364,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
+           -1,  262,  263,  264,   -1,   -1,   -1,  268,  269,   -1, 
+          271,   -1,  386,   58,   59,   -1,   -1,   -1,   63,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
+          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, 
-          334,  335,  336,   -1,   -1,   -1,   -1,   -1,  342,   -1, 
-           -1,   -1,   -1,   -1,   -1,  349,   -1,  351,   -1,  353, 
-          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
-          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
-          282,   -1,   -1,  387,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320, 
+          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, 
+            0,   -1,  333,  334,  335,  336,   -1,   -1,   -1,   -1, 
+           10,  342,   -1,   -1,   -1,   -1,   -1,   -1,  349,   -1, 
+          351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, 
+          361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   44,   -1,  268,  269,   -1,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   58,   59, 
+           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,  290,  291, 
            -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   10,   -1,  318,  319,  320,  321, 
-          322,  323,  324,  325,  326,  327,   -1,  329,  330,   -1, 
-           -1,  333,  334,   -1,   -1,   -1,   -1,  339,   -1,   -1, 
-          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   44,  351, 
-           -1,   -1,   -1,  355,  356,  357,  358,  359,   -1,  361, 
-           -1,  363,   -1,   59,   -1,   61,   -1,   63,   -1,   -1, 
-           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  262,  263, 
-          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   10,   -1,  318,  319,  320,  321,  322,  323, 
-          324,  325,  326,  327,   -1,  329,  330,   -1,   -1,  333, 
-          334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1, 
-           -1,  345,   -1,  347,   -1,   -1,   44,  351,   -1,   -1, 
-           -1,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, 
-           58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, 
-           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
-           -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
-           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, 
-          336,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,   -1, 
-           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, 
-          356,  357,  358,  359,   -1,  361,   -1,  363,   -1,   -1, 
-           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
-          268,  269,   -1,  271,   -1,   44,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   58, 
-           59,   -1,  290,  291,   63,  293,  294,  295,  296,  297, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, 
+           -1,  333,  334,  335,  336,   -1,   -1,   -1,   -1,   -1, 
+          342,   -1,   -1,   -1,   -1,   -1,   -1,  349,   -1,  351, 
+            0,  353,  354,  355,  356,  357,  358,  359,   -1,  361, 
+           10,  363,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  387,  281,  282,   -1,   -1, 
+           -1,   -1,   -1,   -1,   44,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   59, 
+          305,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  318,  319,  320,  321,  322,  323,  324, 
+          325,  326,  327,   -1,  329,  330,   -1,   -1,  333,  334, 
+           -1,   91,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, 
+          345,   -1,  347,   -1,   -1,   -1,  351,   -1,   -1,   -1, 
+          355,  356,  357,  358,  359,    0,  361,   -1,  363,   -1, 
+           -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1, 
+          375,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
+           -1,  271,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   44, 
+          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
+           -1,   -1,   -1,   58,   59,  305,   -1,   -1,   63,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,  319, 
+          320,  321,  322,  323,  324,  325,  326,  327,   -1,  329, 
+          330,   -1,   -1,  333,  334,   -1,   -1,   -1,   -1,  339, 
+           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1, 
+           -1,  351,   -1,   -1,   -1,  355,  356,  357,  358,  359, 
+           -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,    0,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1, 
+           -1,   10,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1, 
+           -1,   -1,  262,  263,  264,   -1,   -1,   -1,  268,  269, 
+           -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1, 
+          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   58, 
+           59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319, 
+          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, 
+          330,   -1,   -1,  333,  334,  335,  336,   -1,   -1,   -1, 
+           -1,   -1,  342,   -1,   -1,   -1,   -1,   -1,   -1,  349, 
+           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, 
+           -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, 
+           -1,   -1,  267,  268,  269,   -1,  271,  387,    0,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   10,   -1, 
+           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,  318,  319,  320,  321,  322,  323,  324, 
+          325,  326,  327,   -1,  329,  330,   58,   59,  333,  334, 
+           -1,   63,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, 
+          345,   -1,  347,   -1,   -1,   -1,  351,   -1,   -1,   -1, 
+           -1,   -1,  357,  358,  359,   -1,  361,   -1,  363,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, 
-           -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1, 
-           -1,  339,   -1,   -1,  342,   -1,   -1,  345,    0,  347, 
-           -1,   -1,   -1,  351,   -1,   -1,   -1,   -1,   10,  357, 
-          358,  359,   -1,  361,   -1,  363,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,   -1,  375,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,  387, 
-           -1,   -1,   44,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,   -1,   -1,   58,   59,   -1,  305, 
-           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  318,  319,  320,  321,  322,  323,  324,  325, 
-          326,  327,   -1,  329,  330,   -1,   -1,  333,  334,   -1, 
-           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
-           -1,  347,   -1,   -1,   -1,  351,   -1,   -1,   -1,   -1, 
-           -1,  357,  358,  359,   -1,  361,   -1,  363,   -1,   -1, 
-           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,  375, 
-           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
-           -1,  387,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
-          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   44,   -1, 
+          375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  387,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  281,  282,   10,   -1,   -1,   -1,   -1,   -1, 
            -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,   -1,   58,   59,   -1,   -1,  305,   63,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318, 
+           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  318, 
           319,  320,  321,  322,  323,  324,  325,  326,  327,   -1, 
-          329,  330,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          339,   -1,   -1,  342,   -1,   -1,  345,    0,  347,   -1, 
-           -1,   -1,  351,   -1,   -1,   -1,   -1,   10,  357,  358, 
+          329,  330,   58,   59,  333,  334,   -1,   63,   -1,   -1, 
+          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
+           -1,   -1,  351,   -1,   -1,   -1,   -1,   -1,  357,  358, 
           359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, 
-          262,  263,  264,   -1,   -1,  267,  268,  269,  387,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,  375,    0,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  387,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
            -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
           282,   -1,   -1,   -1,   -1,   58,   59,   -1,  290,  291, 
            63,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
@@ -4015,7 +4044,7 @@
            -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321, 
           322,  323,  324,  325,  326,  327,   -1,  329,  330,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, 
-          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,  351, 
            -1,   -1,   -1,    0,   -1,  357,  358,  359,   -1,  361, 
            -1,  363,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, 
@@ -4039,7 +4068,7 @@
           323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, 
            -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,    0,   -1,  357,  358,   -1,   -1,   -1,   -1, 
+           -1,   -1,    0,   -1,  357,  358,  359,   -1,  361,   -1, 
           363,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  387,  262,  263,  264,   -1,   -1, 
@@ -4059,11 +4088,11 @@
           282,   -1,   -1,   -1,   -1,   58,   59,   -1,  290,  291, 
            63,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  324,  325,   -1,   -1,   -1,  329,  330,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321, 
+          322,  323,  324,  325,  326,  327,   -1,  329,  330,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, 
           342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,    0,   -1,  357,  358,   -1,   -1,   -1, 
            -1,  363,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  375,  262,  263,  264,   -1,   -1,  267, 
           268,  269,   -1,  271,   -1,  387,   -1,   -1,   -1,   -1, 
@@ -4113,172 +4142,160 @@
            -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   10,   -1, 
            -1,  375,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
           295,  296,  297,  387,   -1,   -1,   -1,   -1,   -1,   -1, 
-          305,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1, 
-           -1,   -1,   44,   -1,   -1,   -1,   -1,   10,   -1,  324, 
+          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,  324, 
           325,   -1,   -1,   -1,  329,  330,   58,   59,   -1,   -1, 
            -1,   63,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, 
           345,   -1,  347,  262,  263,  264,   -1,   -1,  267,  268, 
-          269,   44,  271,   -1,   -1,   -1,   -1,   -1,  363,   -1, 
-           -1,   -1,  281,  282,   -1,   58,   59,   -1,   -1,   -1, 
+          269,   -1,  271,   -1,    0,   -1,   -1,   -1,  363,   -1, 
+           -1,   -1,  281,  282,   10,   -1,   -1,   -1,   -1,   -1, 
           375,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
            -1,   -1,  387,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   10,   -1,  325,   -1,   -1,   -1, 
-          329,  330,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
+           -1,   -1,   -1,   -1,   -1,  324,  325,   -1,   -1,   -1, 
+          329,  330,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, 
+          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  262,  263,  264,  363,   -1,  267,  268,  269,   -1, 
-          271,   -1,   58,   59,   -1,   -1,  375,   -1,   -1,   -1, 
-          281,  282,   -1,   -1,   -1,   -1,   -1,   -1,  387,  290, 
+          271,   -1,    0,   -1,   -1,   -1,  375,   -1,   -1,   -1, 
+          281,  282,   10,   -1,   -1,   -1,   -1,   -1,  387,  290, 
           291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
-           -1,    0,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  325,   -1,   -1,   -1,  329,  330, 
+           58,   59,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1, 
+           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,    0,  271, 
+           -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   10,  281, 
+          282,   -1,   -1,   -1,  375,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,  387,   -1,   -1,   -1, 
+           -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,    0,  271,   -1,   -1,   -1,   -1, 
+           -1,  363,   -1,   -1,   10,  281,  282,   -1,   -1,   -1, 
+           -1,   -1,   -1,  375,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,  387,   -1,   -1,   -1,  305, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
+           -1,  347,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,    0,   -1,  262,  263,  264,  363,   -1,  267, 
+          268,  269,   10,  271,   -1,   -1,   -1,   -1,   -1,  375, 
+           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, 
+           -1,  387,  290,  291,   -1,  293,  294,  295,  296,  297, 
+           -1,    0,   -1,   -1,   -1,   -1,   44,  305,   -1,   -1, 
            -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           58,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1, 
-           -1,  342,   -1,   -1,  345,   44,  347,   -1,   -1,   -1, 
+           -1,  339,   -1,   -1,  342,   44,   -1,  345,   -1,  347, 
           262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
-           59,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
-          282,   -1,   -1,   -1,  375,   -1,   -1,   -1,  290,  291, 
-           -1,  293,  294,  295,  296,  297,  387,    0,   -1,  262, 
-          263,  264,   -1,  305,  267,  268,  269,   10,  271,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, 
-          293,  294,  295,  296,  297,   -1,   -1,  339,   -1,   -1, 
-          342,   44,  305,  345,   -1,  347,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1, 
-           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  375,   -1,   -1,  339,   -1,   -1,  342, 
-           -1,   -1,  345,   -1,  347,  387,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,    0, 
-          363,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   10, 
-           -1,   -1,  375,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,   -1,   -1,  387,   -1,   -1,   -1,   -1,  305, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1, 
-           -1,   -1,   -1,   44,   -1,   -1,   -1,   10,   -1,   -1, 
+           59,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,  281, 
+          282,   -1,   -1,   -1,   -1,   -1,   -1,  375,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,    0,  387, 
+           -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   10,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,    0, 
+          342,   -1,   44,  345,   -1,  347,  262,  263,  264,   10, 
+           -1,  267,  268,  269,   -1,  271,   -1,   59,   -1,   -1, 
+           -1,  363,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, 
+           -1,   -1,   -1,  375,  290,  291,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,   -1,  387,   -1,   -1,   -1,  305, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1, 
+           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, 
-           -1,  347,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
-          269,   44,  271,   -1,   -1,   -1,   -1,  363,   -1,   -1, 
-           -1,   -1,  281,  282,   -1,   -1,   59,   -1,   -1,  375, 
+           -1,  347,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
+          268,  269,   -1,  271,   -1,   -1,   -1,  363,   -1,   -1, 
+           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,  375, 
+           59,   -1,  290,  291,   -1,  293,  294,  295,  296,   -1, 
+           -1,  387,   -1,  262,  263,  264,   -1,  305,  267,  268, 
+          269,   -1,  271,   -1,   -1,    0,   -1,   -1,   -1,   -1, 
+           -1,   -1,  281,  282,   -1,   10,   -1,   -1,   -1,   -1, 
            -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
-           -1,  387,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,  262, 
-          263,  264,   -1,    0,  267,  268,  269,   -1,  271,   -1, 
-           -1,   -1,   -1,   10,  363,   -1,   -1,   -1,  281,  282, 
-           -1,   -1,   -1,   -1,   59,   -1,  375,  290,  291,   -1, 
-          293,  294,  295,  296,   -1,   -1,   -1,   -1,  387,   -1, 
-           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, 
+           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   10,   -1,   -1,  363,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   59,   -1,   -1,  375,   -1,   -1, 
+           -1,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,  387, 
+          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
+           -1,   -1,    0,   -1,  363,   -1,   -1,   -1,   -1,  281, 
+          282,   59,   10,   -1,   -1,   -1,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,  387,   -1, 
+           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, 
+          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290, 
+          291,   59,  293,  294,  295,  296,  297,   -1,   -1,   -1, 
+          342,   -1,   -1,  345,   -1,  347,   -1,   -1,    0,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, 
+           -1,  363,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  342,  281,  282,  345,  387,  347,   -1,   -1,   -1, 
+           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
+           -1,    0,  363,   -1,   -1,   -1,   -1,   59,   -1,   -1, 
+           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,    0,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   10,  342, 
-           -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  342,   -1,   -1,  345,  262,  263,  264, 
+           -1,    0,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
+           59,   10,    0,   -1,  363,   -1,  281,  282,   -1,   -1, 
+           -1,   -1,   10,   -1,   -1,  290,  291,   -1,  293,  294, 
+          295,  296,  297,   -1,  262,  263,  264,   -1,  387,  267, 
+          268,  269,   -1,  271,   -1,   44,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  281,   -1,   -1,   44,   -1,   -1,   -1, 
+           59,   -1,  290,  291,    0,  293,  294,  295,  296,  297, 
+           -1,   59,   -1,   -1,   10,   -1,   -1,  342,   -1,   -1, 
+          345,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, 
+          268,  269,   -1,  271,   -1,   -1,   -1,   -1,  363,   -1, 
+           -1,   -1,   -1,  281,   -1,   -1,   -1,   -1,   44,   -1, 
+           -1,   -1,  290,  291,  342,  293,  294,  295,  296,  297, 
+           -1,   -1,  387,   59,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          363,  262,  263,  264,   -1,    0,  267,  268,  269,   -1, 
-          271,   -1,  375,   -1,   -1,   10,   -1,   -1,   -1,   -1, 
-          281,  282,   -1,   -1,  387,   -1,   -1,   59,   -1,  290, 
-          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,  262, 
-          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, 
-           -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,  281,  282, 
-           -1,   -1,   -1,   -1,   59,   10,   -1,  290,  291,   -1, 
-          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, 
-           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  363,   -1,   10,   -1,   -1,   -1,   -1,   -1, 
-            0,   -1,   -1,   -1,   59,   10,   -1,   -1,   -1,  342, 
-           10,   -1,  345,   -1,  347,   -1,  387,  262,  263,  264, 
-           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, 
-          363,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1, 
-           -1,   -1,   -1,   59,   44,  290,  291,   -1,  293,  294, 
-          295,  296,  297,   -1,  387,  262,  263,  264,   63,   59, 
-          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, 
-          297,   -1,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1, 
-          345,   -1,  347,   -1,   -1,   -1,    0,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,  363,   -1, 
-          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, 
-           -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,  345,  281, 
-          282,   -1,  387,   -1,   -1,   -1,   -1,   -1,  290,  291, 
-           44,  293,  294,  295,  296,  297,  363,  262,  263,  264, 
-            0,   -1,  267,  268,  269,   59,  271,   -1,   -1,   -1, 
-           10,   -1,   -1,   -1,   -1,   -1,  281,   -1,   -1,   -1, 
-          387,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, 
-          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          342,   -1,   -1,  345,   44,   -1,   -1,  262,  263,  264, 
-           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   59, 
-           -1,  363,   -1,   -1,   -1,   -1,  281,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  290,  291,  342,  293,  294, 
-          295,  296,  297,   -1,   -1,  387,  262,  263,  264,   -1, 
-           -1,  267,  268,  269,   -1,  271,   -1,   -1,  363,   -1, 
-           -1,   -1,  262,  263,  264,  281,   10,  267,  268,  269, 
-           -1,  271,   -1,   -1,  290,  291,   -1,  293,  294,  295, 
-          296,  297,  387,   -1,   -1,   -1,   -1,  342,   -1,   -1, 
-           -1,   -1,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,   -1, 
-           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, 
-          325,  326,  327,   -1,  329,  330,  342,   -1,  333,  334, 
-           -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,  339, 
-           -1,   -1,  342,   -1,  349,   -1,  351,  363,  353,  354, 
-          355,  356,  357,  358,  359,   -1,  361,   -1,   -1,   -1, 
-           -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,  262,  263, 
-          264,  387,   -1,  267,  268,  269,   -1,  271,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,  293, 
-          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387, 
+          262,  263,  264,   -1,  342,  267,  268,  269,   10,  271, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, 
+           -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,  290,  291, 
+           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387, 
+           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  281,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          342,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, 
-           -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  339,   59,   -1,  342,   -1, 
-           -1,   -1,   -1,  293,  294,  295,  296,  297,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,  339, 
-           -1,   -1,  342,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  257,  258,  259,   -1,  261,   -1,   -1, 
-           -1,  265,  266,  363,   -1,   -1,  270,   -1,  272,  273, 
-          274,  275,  276,  277,  278,   -1,   10,   -1,   -1,  283, 
-          284,  285,  286,  287,  288,  289,   -1,  387,  292,   -1, 
-           -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303, 
-          304,   -1,  306,  307,  308,  309,  310,  311,  312,  313, 
-          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, 
-          344,   -1,  346,   -1,  348,   -1,  350,   -1,  352,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  360,   91,   -1,   -1, 
-           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, 
-          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, 
-          384,  385,  386,  256,  257,  258,  259,  260,  261,  262, 
-          263,  264,  265,  266,   -1,   -1,  269,  270,   -1,  272, 
-          273,  274,  275,  276,  277,  278,   -1,  280,   -1,   10, 
-          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, 
-           -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301,  302, 
-          303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, 
-          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   59,   -1, 
-           -1,   -1,  335,  336,  337,   -1,   -1,  340,  341,   -1, 
-          343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352, 
-           -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1,  362, 
-           91,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, 
-           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
-           -1,  384,  385,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  256,  257,  258,  259,  260,  261,  262,  263, 
-          264,  265,  266,   -1,   -1,  269,  270,   -1,  272,  273, 
-          274,  275,  276,  277,  278,   -1,  280,   -1,   10,  283, 
-          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, 
-           -1,   -1,   -1,   -1,  298,  299,   -1,  301,  302,  303, 
-          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, 
-          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  328,   -1,   -1,   59,   -1,   -1, 
-           -1,  335,  336,  337,   -1,   -1,  340,  341,   -1,  343, 
-          344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1, 
-           -1,   -1,   -1,  357,   -1,   -1,  360,   -1,  362,   91, 
-           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, 
-          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, 
-          384,  385,   -1,   -1,   -1,  256,  257,  258,  259,  260, 
+           -1,  363,   -1,  262,  263,  264,   -1,   -1,  267,  268, 
+          269,   -1,  271,   -1,  262,  263,  264,   -1,   -1,  267, 
+          268,  269,   -1,  271,   -1,  387,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  342,  293,  294,  295,  296,  297,   10, 
+           -1,   -1,   -1,   -1,   -1,  293,  294,  295,  296,  297, 
+           -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, 
+           -1,  267,  268,  269,   -1,  271,   -1,   -1,  387,   -1, 
+          339,   -1,   -1,  342,   -1,   -1,   -1,   -1,   59,   -1, 
+           -1,  339,   -1,   -1,  342,   -1,   -1,  293,  294,  295, 
+          296,  297,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, 
+           91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387, 
+           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, 
+           -1,   -1,   -1,  265,  266,   -1,   -1,  363,  270,   -1, 
+          272,  273,  274,  275,  276,  277,  278,   -1,   10,   -1, 
+           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
+          292,  387,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, 
+          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
+          312,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, 
+           -1,  343,  344,   -1,  346,   -1,  348,   -1,  350,   -1, 
+          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   91, 
+           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
+           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
+          382,   -1,  384,  385,  386,  256,  257,  258,  259,  260, 
           261,  262,  263,  264,  265,  266,   -1,   -1,  269,  270, 
            -1,  272,  273,  274,  275,  276,  277,  278,   -1,  280, 
            -1,   10,  283,  284,  285,  286,  287,  288,  289,   -1, 
@@ -4294,435 +4311,319 @@
           381,  382,   -1,  384,  385,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  256,  257,  258,  259,  260,  261, 
           262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, 
-          272,  273,  274,  275,  276,  277,  278,   -1,   10,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
+          272,  273,  274,  275,  276,  277,  278,   -1,  280,   -1, 
+           10,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
           292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
           302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
            -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  328,   59,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   59, 
            -1,   -1,   -1,  335,  336,  337,   -1,   -1,  340,  341, 
            -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
           352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, 
-           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
+          362,   91,   -1,  365,  366,  367,  368,  369,  370,   -1, 
            -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
           382,   -1,  384,  385,   -1,   -1,   -1,  256,  257,  258, 
           259,  260,  261,  262,  263,  264,  265,  266,   -1,   -1, 
           269,  270,   -1,  272,  273,  274,  275,  276,  277,  278, 
-           -1,   10,   -1,   -1,  283,  284,  285,  286,  287,  288, 
+           -1,  280,   -1,   10,  283,  284,  285,  286,  287,  288, 
           289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298, 
           299,   -1,  301,  302,  303,  304,   -1,  306,  307,  308, 
           309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328, 
-           59,   -1,   -1,   -1,   -1,   -1,  335,  336,  337,   -1, 
-           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,  348, 
+           -1,   -1,   59,   -1,   -1,   -1,  335,  336,  337,   -1, 
+           -1,  340,  341,   -1,  343,  344,   -1,  346,   -1,  348, 
            -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,  357,   -1, 
-           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
+           -1,  360,   -1,  362,   91,   -1,  365,  366,  367,  368, 
           369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, 
           379,  380,  381,  382,   -1,  384,  385,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  256,  257,  258,  259,  260,  261, 
-          262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, 
-          272,  273,  274,  275,  276,  277,  278,   10,   -1,   -1, 
-           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
-          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, 
-           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
-          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, 
-           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
-           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
-          382,   -1,  384,  385,   -1,   -1,   -1,  256,  257,  258, 
-          259,  260,  261,  262,  263,  264,  265,  266,   -1,   -1, 
-          269,  270,   -1,  272,  273,  274,  275,  276,  277,  278, 
-           10,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, 
-          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298, 
-          299,   -1,  301,  302,  303,  304,   -1,  306,  307,  308, 
-          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, 
-           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,  348, 
-           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  360,   -1,  362,   -1,   -1,  365,  366,  367,  368, 
-          369,  370,   -1,   -1, 
-      };
-   }
-
-   private static final short[] yyCheck4() {
-      return new short[] {
-
-           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
-           -1,  384,  385,   -1,   -1,   -1,   -1,   -1,   -1,  256, 
+           -1,   -1,   -1,   -1,   -1,   -1,  256,  257,  258,  259, 
+          260,  261,  262,  263,  264,  265,  266,   -1,   -1,  269, 
+          270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, 
+           10,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
+           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299, 
+           -1,  301,  302,  303,  304,   -1,  306,  307,  308,  309, 
+          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   59, 
+           -1,   -1,   -1,   -1,   -1,  335,  336,  337,   -1,   -1, 
+          340,  341,   -1,  343,  344,   -1,  346,   -1,  348,   -1, 
+           -1,   -1,  352,   -1,   -1,   -1,   -1,  357,   -1,   -1, 
+          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
+          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
+          380,  381,  382,   -1,  384,  385,   -1,   -1,   -1,  256, 
+          257,  258,  259,  260,  261,  262,  263,  264,  265,  266, 
+           -1,   -1,  269,  270,   -1,  272,  273,  274,  275,  276, 
+          277,  278,   -1,   10,   -1,   -1,  283,  284,  285,  286, 
+          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
+           -1,  298,  299,   -1,  301,  302,  303,  304,   -1,  306, 
+          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  328,   59,   -1,   -1,   -1,   -1,   -1,  335,  336, 
+          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
+           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
+          357,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
+          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
+          377,   -1,  379,  380,  381,  382,   -1,  384,  385,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  256,  257,  258,  259, 
+          260,  261,  262,  263,  264,  265,  266,   -1,  268,  269, 
+          270,  271,  272,  273,  274,  275,  276,  277,  278,   10, 
+           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
+           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299, 
+           -1,  301,  302,  303,  304,   -1,  306,  307,  308,  309, 
+          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
+          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, 
+           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
+          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
+          380,  381,  382,   -1,  384,  385,   -1,   -1,   -1,  256, 
           257,  258,  259,  260,  261,  262,  263,  264,  265,  266, 
            -1,   -1,  269,  270,   -1,  272,  273,  274,  275,  276, 
           277,  278,   10,   -1,   -1,   -1,  283,  284,  285,  286, 
           287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
            -1,  298,  299,   -1,  301,  302,  303,  304,   -1,  306, 
           307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, 
+      };
+   }
+
+   private static final short[] yyCheck4() {
+      return new short[] {
+
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
            -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
+           -1,   -1,   -1,  360,   -1,  362,   -1,   -1,  365,  366, 
           367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
           377,   -1,  379,  380,  381,  382,   -1,  384,  385,   -1, 
-           -1,   -1,  256,  257,  258,  259,  260,  261,  262,  263, 
-          264,  265,  266,   -1,   -1,  269,  270,   -1,  272,  273, 
-          274,  275,  276,  277,  278,   10,   -1,   -1,   -1,  283, 
-          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, 
-           -1,   -1,   -1,   -1,  298,  299,   -1,  301,  302,  303, 
-          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, 
-          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, 
-          344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1, 
-           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, 
-          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, 
-          384,  385,   -1,   -1,   -1,   -1,   -1,   -1,  256,  257, 
-          258,  259,  260,  261,   -1,   -1,   -1,  265,  266,   -1, 
-           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
-          278,   10,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
-          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
-          298,  299,   -1,  301,  302,  303,  304,   -1,  306,  307, 
-          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
-           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
-          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  360,   -1,   -1,  363,   -1,  365,  366,  367, 
-          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
-           -1,  379,  380,  381,  382,   -1,  384,  385,   -1,   -1, 
-           -1,   -1,  257,  258,  259,  260,  261,   -1,   -1,   -1, 
-          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, 
-          275,  276,  277,  278,   10,   -1,   -1,   -1,  283,  284, 
-          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, 
-           -1,   -1,   -1,  298,  299,   -1,  301,  302,  303,  304, 
-           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, 
-          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  337,   -1,   -1,  340,   -1,  342,  343,  344, 
-           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, 
-          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
-           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,  384, 
-          385,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258, 
-          259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, 
-           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, 
-           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, 
-          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, 
-          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, 
-          309,  310,  311,   44,  313,  314,  315,  316,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, 
-           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1, 
-           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
-          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, 
-          379,  380,  381,  382,   -1,  384,  385,   -1,   -1,   -1, 
-           -1,  257,  258,  259,   -1,  261,   -1,   -1,   -1,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,   44,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, 
-           -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1, 
-          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
-           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  256,  257,  258,  259,  260, 
+          261,  262,  263,  264,  265,  266,   -1,   -1,  269,  270, 
+           -1,  272,  273,  274,  275,  276,  277,  278,   10,   -1, 
            -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
-           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
-           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
-          311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1, 
-           59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1, 
+          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,   -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
-           -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
            -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
            -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
-          381,  382,   -1,  384,  385,   -1,   -1,   -1,   -1,  257, 
-          258,  259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1, 
-           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
-          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          381,  382,   -1,  384,  385,   -1,   -1,   -1,  256,  257, 
+          258,  259,  260,  261,  262,  263,  264,  265,  266,   -1, 
+           -1,  269,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   10,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
           288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
-           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
-          308,  309,  310,  311,   -1,  313,   -1,   -1,  316,   59, 
+          298,  299,   -1,  301,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
            -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
           368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
-           -1,  379,  380,  381,  382,   -1,  384,  385,  257,  258, 
+           -1,  379,  380,  381,  382,   -1,  384,  385,   -1,   -1, 
+           -1,   -1,   -1,   -1,  256,  257,  258,  259,  260,  261, 
+           -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1, 
+          272,  273,  274,  275,  276,  277,  278,   10,   -1,   -1, 
+           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
+          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
+          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
+           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, 
+           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, 
+          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, 
+           -1,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, 
+           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
+          382,   -1,  384,  385,   -1,   -1,   -1,   -1,  257,  258, 
           259,  260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, 
            -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, 
-           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, 
+           10,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, 
           289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298, 
-          299,  300,  301,  302,  303,  304,   -1,  306,  307,  308, 
+          299,   -1,  301,  302,  303,  304,   -1,  306,  307,  308, 
           309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, 
-           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,  348, 
+           -1,  340,   -1,  342,  343,  344,   -1,  346,   -1,  348, 
            -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
           369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, 
-          379,  380,  381,  382,   -1,  384,  385,  257,  258,  259, 
-          260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, 
+          379,  380,  381,  382,   -1,  384,  385,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261,   -1, 
+           -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1,  272, 
+          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   -1, 
+          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, 
+           -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302, 
+          303,  304,   -1,  306,  307,  308,  309,  310,  311,   44, 
+          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, 
+          343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1,  352, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1, 
+           -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, 
+           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
+           -1,  384,  385,   -1,   -1,   -1,   -1,  257,  258,  259, 
+           -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, 
           270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, 
            -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
-           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299, 
-           -1,  301,  302,  303,  304,   -1,  306,  307,  308,  309, 
-          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
+           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, 
+           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, 
+          310,  311,   44,  313,  314,  315,  316,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
-          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, 
+          340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1, 
            -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
           370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
-          380,  381,  382,   -1,  384,  385,  257,  258,  259,  260, 
-          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, 
-          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, 
-           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, 
-          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, 
-          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
-          311,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, 
-          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, 
-          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, 
-          341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, 
-          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, 
-          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  386,  257,  258,  259,  260, 
-          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, 
-          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, 
-           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, 
-          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, 
-          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
-          311,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, 
-          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, 
-          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, 
-          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, 
-          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  386,  257,  258,  259,  260, 
-          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, 
-          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, 
-           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, 
-          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, 
-          301,  302,  303,  304,   -1,  306,  307,  308,   -1,  310, 
-           -1,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, 
-          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, 
-          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, 
-          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, 
-          361,   -1,   -1,  364,  365,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  386,  257,  258,  259,  260, 
-          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, 
-          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, 
-           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, 
-          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, 
-          301,  302,  303,  304,   -1,  306,  307,   -1,   -1,  310, 
-           -1,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, 
-          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, 
-          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, 
-          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, 
-          361,   -1,   -1,  364,  365,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  386,  257,  258,  259,  260, 
-          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, 
-          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, 
-           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, 
-          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, 
-          301,  302,  303,  304,   -1,  306,  307,   -1,   -1,  310, 
-           -1,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, 
-          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, 
-          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, 
-          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, 
-          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, 
-          256,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265, 
-          266,   -1,   -1,   -1,  270,  386,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,  298,  299,  300,  301,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, 
-          256,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, 
-          256,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265, 
-          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
-          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
-          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
-           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, 
-          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, 
-          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
-          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
-          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, 
-          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, 
-           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
-          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, 
-          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, 
-           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
-          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
+          380,  381,  382,   -1,  384,  385,   -1,   -1,   -1,   -1, 
+           -1,   -1,  257,  258,  259,   -1,  261,   -1,   -1,   -1, 
+          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, 
+          275,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284, 
+          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, 
+           -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304, 
+           -1,  306,  307,  308,  309,  310,  311,   -1,  313,   -1, 
+           -1,  316,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, 
+           -1,  346,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, 
-          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, 
-           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
-          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
+          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
+           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,  384, 
+          385,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, 
+           -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1, 
+          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, 
+           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
+          292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, 
+          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
+           -1,  313,   -1,   -1,  316,   59,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, 
+           -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, 
-          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, 
-           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
-          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
+           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
+           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
+          382,   -1,  384,  385,  257,  258,  259,  260,  261,   -1, 
+           -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1,  272, 
+          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   -1, 
+          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, 
+           -1,   -1,   -1,   -1,   -1,  298,  299,  300,  301,  302, 
+          303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, 
+          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, 
+          343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1, 
+           -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, 
+           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
+           -1,  384,  385,  257,  258,  259,  260,  261,   -1,   -1, 
+           -1,  265,  266,   -1,   -1,   -1,  270,   -1,  272,  273, 
+          274,  275,  276,  277,  278,   -1,   -1,   -1,   -1,  283, 
+          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, 
+           -1,   -1,   -1,   -1,  298,  299,   -1,  301,  302,  303, 
+          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, 
+          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, 
-          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, 
-           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
-          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
+           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, 
+          344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1, 
+           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, 
+          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, 
+          384,  385,  257,  258,  259,  260,  261,  262,  263,  264, 
+          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, 
+          275,  276,  277,  278,  279,  280,   -1,   -1,  283,  284, 
+          285,  286,  287,  288,  289,  290,  291,  292,   -1,   -1, 
+           -1,   -1,  297,  298,  299,  300,  301,  302,  303,  304, 
+           -1,  306,  307,  308,  309,  310,  311,   -1,   -1,  314, 
+          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           -1,  326,  327,   -1,   -1,   -1,  331,  332,  333,  334, 
+           -1,   -1,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1, 
+           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,   -1,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, 
-          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, 
-           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
-          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
+           -1,  386,  257,  258,  259,  260,  261,  262,  263,  264, 
+          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, 
+          275,  276,  277,  278,  279,  280,   -1,   -1,  283,  284, 
+          285,  286,  287,  288,  289,  290,  291,  292,   -1,   -1, 
+           -1,   -1,  297,  298,  299,  300,  301,  302,  303,  304, 
+           -1,  306,  307,  308,  309,  310,  311,   -1,   -1,  314, 
+          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           -1,  326,  327,   -1,   -1,   -1,  331,  332,  333,  334, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, 
-          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, 
-           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
-          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  386,  257,  258,  259,  260,  261,  262,  263,  264, 
+          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, 
+          275,  276,  277,  278,  279,  280,   -1,   -1,  283,  284, 
+          285,  286,  287,  288,  289,  290,  291,  292,   -1,   -1, 
+           -1,   -1,  297,  298,  299,  300,  301,  302,  303,  304, 
+           -1,  306,  307,  308,   -1,  310,   -1,   -1,   -1,  314, 
+          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           -1,  326,  327,   -1,   -1,   -1,  331,  332,  333,  334, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, 
-          257,  258,  259,  260,  261,   -1,   -1,   -1,  265,  266, 
-           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
-          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
-          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
-           -1,  298,  299,  300,  301,  302,  303,  304,   -1,  306, 
-          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, 
+           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
+          365,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  386,  257,  258,  259,  260,  261,  262,  263,  264, 
+          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, 
+          275,  276,  277,  278,  279,  280,   -1,   -1,  283,  284, 
+          285,  286,  287,  288,  289,  290,  291,  292,   -1,   -1, 
+           -1,   -1,  297,  298,  299,  300,  301,  302,  303,  304, 
+           -1,  306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314, 
+          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           -1,  326,  327,   -1,   -1,   -1,  331,  332,  333,  334, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
-          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
-          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  257, 
-          258,  259,  260,  261,   -1,   -1,   -1,  265,  266,   -1, 
-           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
-          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
-          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
-          298,  299,   -1,  301,  302,  303,  304,   -1,  306,  307, 
-          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, 
+           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
+          365,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
-           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
-          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
-          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
-           -1,  379,  380,  381,  382,   -1,  384,  385,  257,  258, 
-          259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, 
-           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, 
-           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, 
-          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, 
-          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, 
-          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, 
+           -1,  386,  257,  258,  259,  260,  261,  262,  263,  264, 
+          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, 
+          275,  276,  277,  278,  279,  280,   -1,   -1,  283,  284, 
+          285,  286,  287,  288,  289,  290,  291,  292,   -1,   -1, 
+           -1,   -1,  297,  298,  299,  300,  301,  302,  303,  304, 
+           -1,  306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314, 
+          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, 
+           -1,  326,  327,   -1,   -1,   -1,  331,  332,  333,  334, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, 
-           -1,  340,  341,   -1,  343,  344,   -1,  346,   -1,   -1, 
-           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
-          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, 
-          379,  380,  381,  382,   -1,  384,  385,  257,  258,  259, 
-           -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, 
+           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, 
+          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, 
+           -1,   -1,   -1,   -1,   -1,   -1,  256,  257,  258,  259, 
+          260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, 
+          270,  386,  272,  273,  274,  275,  276,  277,  278,   -1, 
+           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
+           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299, 
+          300,  301,  302,  303,  304,   -1,  306,  307,  308,  309, 
+          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
+          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, 
+           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
+          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
+          380,  381,  382,   -1,  384,  385,  256,  257,  258,  259, 
+          260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, 
           270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, 
            -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
-           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, 
-           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, 
+           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299, 
+           -1,  301,  302,  303,  304,   -1,  306,  307,  308,  309, 
+          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
+          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, 
+           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
+          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
+          380,  381,  382,   -1,  384,  385,  256,  257,  258,  259, 
+          260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, 
+          270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, 
+           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
+           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299, 
+           -1,  301,  302,  303,  304,   -1,  306,  307,  308,  309, 
           310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
@@ -4736,6 +4637,97 @@
            -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
            -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
            -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,  312,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
+           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,  350, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
+           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
+           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
+          381,  382,   -1,  384,  385,  386,  257,  258,  259,   -1, 
+          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
+           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
+           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
+           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,  312,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
+           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,  350, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
+           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
+           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
+          381,  382,   -1,  384,  385,  386,  257,  258,  259,   -1, 
+          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
+           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
+           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
+           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,  312,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
+           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,  350, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
+           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
+           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
+          381,  382,   -1,  384,  385,  386,  257,  258,  259,   -1, 
+          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
+           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
+           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
+           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,  312,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
+           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
+           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
+           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
+          381,  382,   -1,  384,  385,  386,  257,  258,  259,   -1, 
+          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
+           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
+           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
+           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,  312,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
+           -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1,  350, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
+           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
+           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
+          381,  382,   -1,  384,  385,  386,  257,  258,  259,   -1, 
+          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
+           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
+           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
+           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,  312,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
+           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
+           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
+           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
+          381,  382,   -1,  384,  385,  386,  257,  258,  259,   -1, 
+          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
+           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
+           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
+           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
+          311,  312,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
+           -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
+           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
+           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
+          381,  382,   -1,  384,  385,  386,  257,  258,  259,  260, 
+          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
+           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, 
+           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
+           -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,  300, 
+          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
           311,   -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
@@ -4743,11 +4735,11 @@
            -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
            -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
            -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
-          381,  382,   -1,  384,  385,  257,  258,  259,   -1,  261, 
+          381,  382,   -1,  384,  385,  257,  258,  259,  260,  261, 
            -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1, 
           272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, 
            -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
-          292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, 
+          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, 
           302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
            -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
@@ -4764,8 +4756,8 @@
           303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, 
           313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, 
-          343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352, 
+           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,  341,   -1, 
+          343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1,  352, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1, 
            -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, 
            -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
@@ -4790,8 +4782,8 @@
            -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, 
           315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,  337,   -1,   -1,  340,  341,   -1,  343,  344, 
-           -1,  346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1, 
+           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, 
+           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, 
           365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
            -1,  376,  377,   -1,  379,  380,  381,  382,   -1,  384, 
@@ -4804,7 +4796,7 @@
           316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
-          346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
+          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, 
           366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
           376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, 
@@ -4817,7 +4809,7 @@
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
           337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
-           -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
+           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, 
           367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
           377,   -1,  379,  380,  381,  382,   -1,  384,  385,  257, 
@@ -4830,7 +4822,7 @@
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
            -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
-           -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
+          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, 
           368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
            -1,  379,  380,  381,  382,   -1,  384,  385,  257,  258, 
@@ -4842,7 +4834,7 @@
           309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, 
-           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1, 
+           -1,  340,  341,   -1,  343,  344,   -1,  346,   -1,   -1, 
            -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, 
           369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, 
@@ -4852,12 +4844,12 @@
            -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, 
            -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, 
            -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, 
-          310,  311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1, 
+          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,  333,   -1,   -1,   -1,  337,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, 
           340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
+           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, 
           370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, 
           380,  381,  382,   -1,  384,  385,  257,  258,  259,   -1, 
           261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, 
@@ -4865,11 +4857,11 @@
            -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, 
            -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, 
            -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, 
-          311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1, 
+          311,   -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, 
            -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, 
            -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, 
            -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, 
           381,  382,   -1,  384,  385,  257,  258,  259,   -1,  261, 
@@ -4878,11 +4870,11 @@
            -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, 
           292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, 
           302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, 
-           -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1,   -1, 
+           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, 
            -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, 
            -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, 
            -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, 
           382,   -1,  384,  385,  257,  258,  259,   -1,  261,   -1, 
@@ -4891,11 +4883,11 @@
           283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, 
            -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302, 
           303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, 
-          313,   -1,   -1,  316,   -1,   -1,   -1,   -1,   -1,   -1, 
+          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, 
-          343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1,  352, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1, 
            -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, 
            -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, 
            -1,  384,  385,  257,  258,  259,   -1,  261,   -1,   -1, 
@@ -4905,21 +4897,67 @@
            -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303, 
           304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, 
            -1,   -1,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  333, 
            -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, 
           344,   -1,  346,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, 
           374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, 
-          384,  385,  306,  307,   -1,   -1,  310,   -1,   -1,   -1, 
-          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, 
-           -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,  333, 
-          334,   -1,   -1,   -1,   -1,   -1,   -1,  341,   -1,   -1, 
-           -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, 
-          354,  355,  356,  357,  358,  359,  360,  361,  306,  307, 
-          364,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
+          384,  385,  257,  258,  259,   -1,  261,   -1,   -1,   -1, 
+          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, 
+          275,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284, 
+          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, 
+           -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304, 
+           -1,  306,  307,  308,  309,  310,  311,   -1,  313,   -1, 
+           -1,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, 
+           -1,  346,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, 
+           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,  384, 
+          385,  257,  258,  259,   -1,  261,   -1,   -1,   -1,  265, 
+          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, 
+          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, 
+          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, 
+           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, 
+          306,  307,  308,  309,  310,  311,   -1,  313,   -1,   -1, 
+          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, 
+          346,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  365, 
+          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, 
+          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, 
+          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, 
+           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, 
+          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, 
+          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, 
+           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, 
+          307,  308,  309,  310,  311,   -1,  313,   -1,   -1,  316, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  365,  366, 
+          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, 
+          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  257, 
+          258,  259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1, 
+           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, 
+          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, 
+          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, 
+           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, 
+          308,  309,  310,  311,   -1,  313,   -1,   -1,  316,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, 
+           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,  365,  366,  367, 
+          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, 
+           -1,  379,  380,  381,  382,   -1,  384,  385,  306,  307, 
+           -1,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, 
           318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, 
-           -1,   -1,  386,  331,  332,  333,  334,   -1,   -1,   -1, 
+           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, 
            -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1, 
           348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, 
           358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, 
@@ -4953,12 +4991,18 @@
           358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, 
            -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, 
           322,  323,   -1,   -1,  326,  327,   -1,   -1,  386,  331, 
-          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, 
            -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1,  351, 
           352,  353,  354,  355,  356,  357,  358,  359,  360,  361, 
-           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+          306,  307,  364,   -1,  310,   -1,   -1,   -1,  314,  315, 
+           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   -1, 
+          326,  327,   -1,   -1,  386,  331,  332,  333,  334,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
+           -1,   -1,  348,  349,   -1,  351,  352,  353,  354,  355, 
+          356,  357,  358,  359,  360,  361,   -1,   -1,  364,   -1, 
+           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
            -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, 
-           -1,   -1,   -1,   -1,  386, 
+          386, 
       };
    }
 
diff --git a/core/src/main/java/org/jruby/runtime/BlockCallback.java b/core/src/main/java/org/jruby/runtime/BlockCallback.java
index 8e9cf8a8b4c..3d521a4d054 100644
--- a/core/src/main/java/org/jruby/runtime/BlockCallback.java
+++ b/core/src/main/java/org/jruby/runtime/BlockCallback.java
@@ -36,6 +36,24 @@
 public interface BlockCallback {
     IRubyObject call(ThreadContext context, IRubyObject[] args, Block block);
 
+    // common ops to be re-defined if few args expected (avoids array packing)
+
+    default IRubyObject call(ThreadContext context) {
+        return call(context, IRubyObject.NULL_ARRAY, Block.NULL_BLOCK);
+    }
+
+    default IRubyObject call(ThreadContext context, IRubyObject arg0) {
+        return call(context, new IRubyObject[] { arg0 }, Block.NULL_BLOCK);
+    }
+
+    default IRubyObject call(ThreadContext context, IRubyObject arg0, IRubyObject arg1) {
+        return call(context, new IRubyObject[] { arg0, arg1 }, Block.NULL_BLOCK);
+    }
+
+    default IRubyObject call(ThreadContext context, IRubyObject... args) {
+        return call(context, args, Block.NULL_BLOCK);
+    }
+
     default IRubyObject call(ThreadContext context, IRubyObject arg, Block block) {
         return call(context, new IRubyObject[] { arg }, block);
     }
diff --git a/core/src/main/java/org/jruby/runtime/CallBlock.java b/core/src/main/java/org/jruby/runtime/CallBlock.java
index 8c2beeffb35..04fb5db6db3 100644
--- a/core/src/main/java/org/jruby/runtime/CallBlock.java
+++ b/core/src/main/java/org/jruby/runtime/CallBlock.java
@@ -98,7 +98,7 @@ protected IRubyObject doYield(ThreadContext context, Block block, IRubyObject va
 
     @Override
     protected IRubyObject doYield(ThreadContext context, Block block, IRubyObject[] args, IRubyObject self) {
-        return callback.call(context, adjustArgs(block, args), Block.NULL_BLOCK);
+        return callback.call(context, adjustArgs(block, args));
     }
 
     public StaticScope getStaticScope() {
diff --git a/core/src/main/java/org/jruby/runtime/CallBlock19.java b/core/src/main/java/org/jruby/runtime/CallBlock19.java
index e7c8f76da5e..d1bded8ec61 100644
--- a/core/src/main/java/org/jruby/runtime/CallBlock19.java
+++ b/core/src/main/java/org/jruby/runtime/CallBlock19.java
@@ -65,7 +65,7 @@ public CallBlock19(Signature signature, BlockCallback callback, ThreadContext co
 
     @Override
     public IRubyObject call(ThreadContext context, Block block, IRubyObject[] args) {
-        return callback.call(context, args, Block.NULL_BLOCK);
+        return callback.call(context, args);
     }
 
     @Override
@@ -75,22 +75,22 @@ public IRubyObject call(ThreadContext context, Block block, IRubyObject[] args,
 
     @Override
     public IRubyObject yieldSpecific(ThreadContext context, Block block) {
-        return callback.call(context, IRubyObject.NULL_ARRAY, Block.NULL_BLOCK);
+        return callback.call(context);
     }
 
     @Override
     public IRubyObject yieldSpecific(ThreadContext context, Block block, IRubyObject arg0) {
-        return callback.call(context, arg0, Block.NULL_BLOCK);
+        return callback.call(context, arg0);
     }
 
     @Override
     public IRubyObject yieldSpecific(ThreadContext context, Block block, IRubyObject arg0, IRubyObject arg1) {
-        return callback.call(context, new IRubyObject[] {arg0, arg1}, Block.NULL_BLOCK);
+        return callback.call(context, arg0, arg1);
     }
 
     @Override
     public IRubyObject yieldSpecific(ThreadContext context, Block block, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {
-        return callback.call(context, new IRubyObject[] {arg0, arg1, arg2}, Block.NULL_BLOCK);
+        return callback.call(context, arg0, arg1, arg2);
     }
 
     @Override
diff --git a/core/src/main/java/org/jruby/runtime/Helpers.java b/core/src/main/java/org/jruby/runtime/Helpers.java
index 545de172fc3..095c4031d7b 100644
--- a/core/src/main/java/org/jruby/runtime/Helpers.java
+++ b/core/src/main/java/org/jruby/runtime/Helpers.java
@@ -2096,34 +2096,6 @@ public static String encodeCaptureOffsets(int[] scopeOffsets) {
         return scopeOffsets;
     }
 
-    @Deprecated // not-used
-    public static IRubyObject match2AndUpdateScope(IRubyObject receiver, ThreadContext context, IRubyObject value, String scopeOffsets) {
-        IRubyObject match = ((RubyRegexp)receiver).op_match(context, value);
-        updateScopeWithCaptures(context, decodeCaptureOffsets(scopeOffsets), match);
-        return match;
-    }
-
-    public static void updateScopeWithCaptures(ThreadContext context, int[] scopeOffsets, IRubyObject result) {
-        Ruby runtime = context.runtime;
-        if (result.isNil()) { // match2 directly calls match so we know we can count on result
-            IRubyObject nil = runtime.getNil();
-
-            for (int i = 0; i < scopeOffsets.length; i++) {
-                // SSS FIXME: This is not doing the offset/depth extraction as in the else case
-                context.getCurrentScope().setValue(nil, scopeOffsets[i], 0);
-            }
-        } else {
-            RubyMatchData matchData = (RubyMatchData)context.getBackRef();
-            // FIXME: Mass assignment is possible since we know they are all locals in the same
-            //   scope that are also contiguous
-            IRubyObject[] namedValues = matchData.getNamedBackrefValues(runtime);
-
-            for (int i = 0; i < scopeOffsets.length; i++) {
-                context.getCurrentScope().setValue(namedValues[i], scopeOffsets[i] & 0xffff, scopeOffsets[i] >> 16);
-            }
-        }
-    }
-
     @Deprecated
     public static RubyArray argsPush(ThreadContext context, RubyArray first, IRubyObject second) {
         return ((RubyArray)first.dup()).append(second);
diff --git a/core/src/main/java/org/jruby/runtime/JavaSites.java b/core/src/main/java/org/jruby/runtime/JavaSites.java
index 026af060e86..13e30cbf5b3 100644
--- a/core/src/main/java/org/jruby/runtime/JavaSites.java
+++ b/core/src/main/java/org/jruby/runtime/JavaSites.java
@@ -47,6 +47,7 @@
     public final MarshalSites Marshal = new MarshalSites();
     public final PathnameSites Pathname = new PathnameSites();
     public final DateSites Date = new DateSites();
+    public final TempfileSites Tempfile = new TempfileSites();
     public final RaiseExceptionSites RaiseException = new RaiseExceptionSites();
     public final ConditionVariableSites ConditionVariable = new ConditionVariableSites();
     public final FiberSites Fiber = new FiberSites();
@@ -469,6 +470,10 @@ public IRubyObject call(ThreadContext context, Ruby runtime, IRubyObject obj, bo
         public final CallSite zone_to_diff = new FunctionalCachingCallSite("zone_to_diff");
     }
 
+    public static class TempfileSites {
+        public final CachingCallSite create = new FunctionalCachingCallSite("create");
+    }
+
     public static class RaiseExceptionSites {
         public final CheckedSites backtrace = new CheckedSites("backtrace");
     }
diff --git a/core/src/main/java/org/jruby/util/cli/Options.java b/core/src/main/java/org/jruby/util/cli/Options.java
index 8b4021e2828..fd3dfc4901a 100644
--- a/core/src/main/java/org/jruby/util/cli/Options.java
+++ b/core/src/main/java/org/jruby/util/cli/Options.java
@@ -225,8 +225,8 @@
     public static final Option<Boolean> CLI_PROCESS_LINE_ENDS = bool(CLI, "cli.process.line.ends", false, "Enable line ending processing. Same as -l.");
     public static final Option<Boolean> CLI_ASSUME_LOOP = bool(CLI, "cli.assume.loop", false, "Wrap execution with a gets() loop. Same as -n.");
     public static final Option<Boolean> CLI_ASSUME_PRINT = bool(CLI, "cli.assume.print", false, "Print $_ after each execution of script. Same as -p.");
-    public static final Option<Boolean> CLI_VERBOSE = bool(CLI, "cli.verbose", false, "Verbose mode, as -w or -W2. Sets default for cli.warning.level.");
-    public static final Option<Verbosity> CLI_WARNING_LEVEL = enumeration(CLI, "cli.warning.level", Verbosity.class, CLI_VERBOSE.load() ? Verbosity.TRUE : Verbosity.FALSE, "Warning level (off=0,normal=1,on=2). Same as -W.");
+    public static final Option<Boolean> CLI_VERBOSE = bool(CLI, "cli.verbose", null, "Verbose mode, as -w or -W2. Sets default for cli.warning.level.");
+    public static final Option<Verbosity> CLI_WARNING_LEVEL = enumeration(CLI, "cli.warning.level", Verbosity.class, calculateVerbosityDefault(), "Warning level (off=0,normal=1,on=2). Same as -W.");
     public static final Option<Boolean> CLI_PARSER_DEBUG = bool(CLI, "cli.parser.debug", false, "Enable parser debug logging. Same as -y.");
     public static final Option<Boolean> CLI_VERSION = bool(CLI, "cli.version", false, "Print version to stderr. Same as --version.");
     public static final Option<Boolean> CLI_BYTECODE = bool(CLI, "cli.bytecode", false, "Print target script bytecode to stderr. Same as --bytecode.");
@@ -306,7 +306,12 @@ public static String dump() {
     }
 
     private static <T extends Enum<T>> Option<T> enumeration(Category category, String name, Class<T> enumClass, T defval, String description) {
-        Option<T> option = Option.enumeration("jruby", name, category, defval, description);
+        Option<T> option;
+        if (defval == null) {
+            option = Option.enumeration("jruby", name, category, enumClass, description);
+        } else {
+            option = Option.enumeration("jruby", name, category, defval, description);
+        }
         _loadedOptions.add(option);
         return option;
     }
@@ -316,6 +321,12 @@ private static boolean calculateInvokedynamicDefault() {
         return false;
     }
 
+    private static Verbosity calculateVerbosityDefault() {
+        Boolean verbose = CLI_VERBOSE.load();
+        if (verbose == null) return Verbosity.NIL;
+        return verbose ? Verbosity.TRUE : Verbosity.FALSE;
+    }
+
     private enum SearchMode { PREFIX,  CONTAINS }
 
     public static void listPrefix(String prefix) {
diff --git a/core/src/main/ruby/jruby/kernel/enumerator.rb b/core/src/main/ruby/jruby/kernel/enumerator.rb
index 21dcb564b9c..c71ffe2732d 100644
--- a/core/src/main/ruby/jruby/kernel/enumerator.rb
+++ b/core/src/main/ruby/jruby/kernel/enumerator.rb
@@ -227,6 +227,8 @@ def #{method}
         end
       EOT
     end
+    alias_method :find_all, :select
+    alias_method :filter, :select
 
     def reject
       _block_error(:reject) unless block_given?
diff --git a/core/src/main/ruby/jruby/kernel/prelude.rb b/core/src/main/ruby/jruby/kernel/prelude.rb
index 2063ab030a5..7c39530804c 100644
--- a/core/src/main/ruby/jruby/kernel/prelude.rb
+++ b/core/src/main/ruby/jruby/kernel/prelude.rb
@@ -1,5 +1,5 @@
-# :stopdoc:
 class Binding
+  # :nodoc:
   def irb
     require 'irb'
     irb
@@ -17,4 +17,6 @@ def pp(*objs)
 
   # suppress redefinition warning
   alias pp pp # :nodoc:
+
+  private :pp
 end
\ No newline at end of file
diff --git a/default.build.properties b/default.build.properties
index 99d4fc60bb9..004a0f2aa12 100644
--- a/default.build.properties
+++ b/default.build.properties
@@ -34,7 +34,7 @@ rake.args=
 install4j.executable=/Applications/install4j7/bin/install4jc
 
 # Ruby versions
-version.ruby=2.5.7
-version.ruby.major=2.5
-version.ruby.minor=7
-version.ruby.revision=67816
+version.ruby=2.6.5
+version.ruby.major=2.6
+version.ruby.minor=0
+version.ruby.revision=67812
diff --git a/lib/pom.rb b/lib/pom.rb
index ef38efa578d..2a16f797eee 100644
--- a/lib/pom.rb
+++ b/lib/pom.rb
@@ -16,7 +16,7 @@ def log(message=nil)
 
 default_gems = [
     ['cmath', '1.0.0'],
-    ['csv', '1.0.0'],
+    ['csv', '3.0.4'],
     ['fileutils', '1.1.0'],
     ['ipaddr', '1.2.0'],
     ['jar-dependencies', '${jar-dependencies.version}'],
diff --git a/lib/pom.xml b/lib/pom.xml
index 532853945e1..e8641e3b6dc 100644
--- a/lib/pom.xml
+++ b/lib/pom.xml
@@ -12,7 +12,7 @@ DO NOT MODIFIY - GENERATED CODE
   <parent>
     <groupId>org.jruby</groupId>
     <artifactId>jruby-parent</artifactId>
-    <version>9.2.10.0-SNAPSHOT</version>
+    <version>9.3.0.0-SNAPSHOT</version>
   </parent>
   <artifactId>jruby-stdlib</artifactId>
   <name>JRuby Lib Setup</name>
@@ -28,7 +28,7 @@ DO NOT MODIFIY - GENERATED CODE
     <dependency>
       <groupId>org.jruby</groupId>
       <artifactId>jruby-core</artifactId>
-      <version>9.2.10.0-SNAPSHOT</version>
+      <version>9.3.0.0-SNAPSHOT</version>
       <scope>test</scope>
     </dependency>
     <dependency>
@@ -47,7 +47,7 @@ DO NOT MODIFIY - GENERATED CODE
     <dependency>
       <groupId>rubygems</groupId>
       <artifactId>csv</artifactId>
-      <version>1.0.0</version>
+      <version>3.0.4</version>
       <type>gem</type>
       <scope>provided</scope>
       <exclusions>
@@ -314,9 +314,9 @@ DO NOT MODIFIY - GENERATED CODE
           <include>cache/cmath*1.0.0.gem</include>
           <include>gems/cmath*1.0.0/**</include>
           <include>specifications/cmath*1.0.0.gemspec</include>
-          <include>cache/csv*1.0.0.gem</include>
-          <include>gems/csv*1.0.0/**</include>
-          <include>specifications/csv*1.0.0.gemspec</include>
+          <include>cache/csv*3.0.4.gem</include>
+          <include>gems/csv*3.0.4/**</include>
+          <include>specifications/csv*3.0.4.gemspec</include>
           <include>cache/fileutils*1.1.0.gem</include>
           <include>gems/fileutils*1.1.0/**</include>
           <include>specifications/fileutils*1.1.0.gemspec</include>
diff --git a/lib/ruby/stdlib/benchmark.rb b/lib/ruby/stdlib/benchmark.rb
index 8d768b631e0..5ce9710586f 100644
--- a/lib/ruby/stdlib/benchmark.rb
+++ b/lib/ruby/stdlib/benchmark.rb
@@ -439,6 +439,9 @@ def add(&blk) # :yield:
 
     #
     # An in-place version of #add.
+    # Changes the times of this Tms object by making it the sum of the times
+    # for this Tms object, plus the time required to execute
+    # the code block (+blk+).
     #
     def add!(&blk)
       t = Benchmark.measure(&blk)
@@ -452,7 +455,7 @@ def add!(&blk)
 
     #
     # Returns a new Tms object obtained by memberwise summation
-    # of the individual times for this Tms object with those of the other
+    # of the individual times for this Tms object with those of the +other+
     # Tms object.
     # This method and #/() are useful for taking statistics.
     #
@@ -460,20 +463,20 @@ def +(other); memberwise(:+, other) end
 
     #
     # Returns a new Tms object obtained by memberwise subtraction
-    # of the individual times for the other Tms object from those of this
+    # of the individual times for the +other+ Tms object from those of this
     # Tms object.
     #
     def -(other); memberwise(:-, other) end
 
     #
     # Returns a new Tms object obtained by memberwise multiplication
-    # of the individual times for this Tms object by _x_.
+    # of the individual times for this Tms object by +x+.
     #
     def *(x); memberwise(:*, x) end
 
     #
     # Returns a new Tms object obtained by memberwise division
-    # of the individual times for this Tms object by _x_.
+    # of the individual times for this Tms object by +x+.
     # This method and #+() are useful for taking statistics.
     #
     def /(x); memberwise(:/, x) end
@@ -529,7 +532,7 @@ def to_a
     #
     # Returns a new Tms object obtained by memberwise operation +op+
     # of the individual times for this Tms object with those of the other
-    # Tms object.
+    # Tms object (+x+).
     #
     # +op+ can be a mathematical operation such as <tt>+</tt>, <tt>-</tt>,
     # <tt>*</tt>, <tt>/</tt>
diff --git a/lib/ruby/stdlib/bigdecimal/jacobian.rb b/lib/ruby/stdlib/bigdecimal/jacobian.rb
index 9cad06c09b5..84c50248b70 100644
--- a/lib/ruby/stdlib/bigdecimal/jacobian.rb
+++ b/lib/ruby/stdlib/bigdecimal/jacobian.rb
@@ -21,6 +21,9 @@
 #
 # fx is f.values(x).
 #
+
+require 'bigdecimal'
+
 module Jacobian
   module_function
 
diff --git a/lib/ruby/stdlib/bigdecimal/util.rb b/lib/ruby/stdlib/bigdecimal/util.rb
index 911fa6fe3af..57273aea904 100644
--- a/lib/ruby/stdlib/bigdecimal/util.rb
+++ b/lib/ruby/stdlib/bigdecimal/util.rb
@@ -5,6 +5,9 @@
 # and provides BigDecimal#to_d and BigDecimal#to_digits.
 #++
 
+require 'bigdecimal'
+# No native bigdecimal/util in JRuby
+require 'bigdecimal/util.so' unless RUBY_ENGINE == 'jruby'
 
 class Integer < Numeric
   # call-seq:
@@ -42,8 +45,8 @@ class Float < Numeric
   #
   # See also BigDecimal::new.
   #
-  def to_d(precision=nil)
-    BigDecimal(self, precision || Float::DIG)
+  def to_d(precision=Float::DIG)
+    BigDecimal(self, precision)
   end
 end
 
@@ -64,11 +67,13 @@ class String
   #
   # See also BigDecimal::new.
   #
-  def to_d
-    begin
-      BigDecimal(self)
-    rescue ArgumentError
-      BigDecimal(0)
+  if RUBY_ENGINE == 'jruby' # No native bigdecimal/util in JRuby
+    def to_d
+      begin
+        BigDecimal(self)
+      rescue ArgumentError
+        BigDecimal(0)
+      end
     end
   end
 end
@@ -132,3 +137,20 @@ def to_d(precision)
     BigDecimal(self, precision)
   end
 end
+
+
+class NilClass
+  # call-seq:
+  #     nil.to_d -> bigdecimal
+  #
+  # Returns nil represented as a BigDecimal.
+  #
+  #     require 'bigdecimal'
+  #     require 'bigdecimal/util'
+  #
+  #     nil.to_d   # => 0.0
+  #
+  def to_d
+    BigDecimal(0)
+  end
+end
diff --git a/lib/ruby/stdlib/cgi/cookie.rb b/lib/ruby/stdlib/cgi/cookie.rb
index a2155edb774..9a0d41e2b85 100644
--- a/lib/ruby/stdlib/cgi/cookie.rb
+++ b/lib/ruby/stdlib/cgi/cookie.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'cgi/util'
+require_relative 'util'
 class CGI
   # Class representing an HTTP cookie.
   #
diff --git a/lib/ruby/stdlib/cgi/core.rb b/lib/ruby/stdlib/cgi/core.rb
index 73daae3e17c..c45f9b3a9e8 100644
--- a/lib/ruby/stdlib/cgi/core.rb
+++ b/lib/ruby/stdlib/cgi/core.rb
@@ -421,7 +421,7 @@ def CGI::parse(query)
   module QueryExtension
 
     %w[ CONTENT_LENGTH SERVER_PORT ].each do |env|
-      define_method(env.sub(/^HTTP_/, '').downcase) do
+      define_method(env.delete_prefix('HTTP_').downcase) do
         (val = env_table[env]) && Integer(val)
       end
     end
@@ -434,7 +434,7 @@ module QueryExtension
         HTTP_ACCEPT HTTP_ACCEPT_CHARSET HTTP_ACCEPT_ENCODING
         HTTP_ACCEPT_LANGUAGE HTTP_CACHE_CONTROL HTTP_FROM HTTP_HOST
         HTTP_NEGOTIATE HTTP_PRAGMA HTTP_REFERER HTTP_USER_AGENT ].each do |env|
-      define_method(env.sub(/^HTTP_/, '').downcase) do
+      define_method(env.delete_prefix('HTTP_').downcase) do
         env_table[env]
       end
     end
@@ -862,24 +862,24 @@ def initialize(options = {}, &block) # :yields: name, value
 
     case @options[:tag_maker]
     when "html3"
-      require 'cgi/html'
+      require_relative 'html'
       extend Html3
       extend HtmlExtension
     when "html4"
-      require 'cgi/html'
+      require_relative 'html'
       extend Html4
       extend HtmlExtension
     when "html4Tr"
-      require 'cgi/html'
+      require_relative 'html'
       extend Html4Tr
       extend HtmlExtension
     when "html4Fr"
-      require 'cgi/html'
+      require_relative 'html'
       extend Html4Tr
       extend Html4Fr
       extend HtmlExtension
     when "html5"
-      require 'cgi/html'
+      require_relative 'html'
       extend Html5
       extend HtmlExtension
     end
diff --git a/lib/ruby/stdlib/cgi/session.rb b/lib/ruby/stdlib/cgi/session.rb
index fbb42986a48..5afc7e69aa0 100644
--- a/lib/ruby/stdlib/cgi/session.rb
+++ b/lib/ruby/stdlib/cgi/session.rb
@@ -406,8 +406,8 @@ def restore
               @hash[CGI::unescape(k)] = Marshal.restore(CGI::unescape(v))
             end
           ensure
-            f.close unless f.nil?
-            lockf.close if lockf
+            f&.close
+            lockf&.close
           end
         end
         @hash
@@ -426,8 +426,8 @@ def update
           f.close
           File.rename @path+".new", @path
         ensure
-          f.close if f
-          lockf.close if lockf
+          f&.close
+          lockf&.close
         end
       end
 
diff --git a/lib/ruby/stdlib/cgi/session/pstore.rb b/lib/ruby/stdlib/cgi/session/pstore.rb
index cb0370b619e..5a6e25d1374 100644
--- a/lib/ruby/stdlib/cgi/session/pstore.rb
+++ b/lib/ruby/stdlib/cgi/session/pstore.rb
@@ -10,7 +10,7 @@
 # persistent of session data on top of the pstore library.  See
 # cgi/session.rb for more details on session storage managers.
 
-require 'cgi/session'
+require_relative '../session'
 require 'pstore'
 
 class CGI
diff --git a/lib/ruby/stdlib/drb/drb.rb b/lib/ruby/stdlib/drb/drb.rb
index 4be263d4314..711ff2a3add 100644
--- a/lib/ruby/stdlib/drb/drb.rb
+++ b/lib/ruby/stdlib/drb/drb.rb
@@ -49,7 +49,7 @@
 require 'socket'
 require 'io/wait'
 require 'weakref'
-require 'drb/eq'
+require_relative 'eq'
 
 #
 # == Overview
@@ -361,7 +361,7 @@ class DRbConnError < DRbError; end
   # drb remains valid only while that object instance remains alive
   # within the server runtime.
   #
-  # For alternative mechanisms, see DRb::TimerIdConv in rdb/timeridconv.rb
+  # For alternative mechanisms, see DRb::TimerIdConv in drb/timeridconv.rb
   # and DRbNameIdConv in sample/name.rb in the full drb distribution.
   #
   # JRuby Notes:
@@ -841,7 +841,7 @@ def uri_option(uri, config, first=true)
     module_function :uri_option
 
     def auto_load(uri)  # :nodoc:
-      if uri =~ /^drb([a-z0-9]+):/
+      if /\Adrb([a-z0-9]+):/ =~ uri
         require("drb/#{$1}") rescue nil
       end
     end
@@ -857,13 +857,13 @@ class DRbTCPSocket
     # :stopdoc:
     private
     def self.parse_uri(uri)
-      if uri =~ /^druby:\/\/(.*?):(\d+)(\?(.*))?$/
+      if /\Adruby:\/\/(.*?):(\d+)(\?(.*))?\z/ =~ uri
         host = $1
         port = $2.to_i
         option = $4
         [host, port, option]
       else
-        raise(DRbBadScheme, uri) unless uri =~ /^druby:/
+        raise(DRbBadScheme, uri) unless uri.start_with?('druby:')
         raise(DRbBadURI, 'can\'t parse uri:' + uri)
       end
     end
@@ -888,7 +888,11 @@ def self.open(uri, config)
     def self.getservername
       host = Socket::gethostname
       begin
-        Socket::gethostbyname(host)[0]
+        Socket::getaddrinfo(host, nil,
+                                  Socket::AF_UNSPEC,
+                                  Socket::SOCK_STREAM,
+                                  0,
+                                  Socket::AI_PASSIVE)[0][3]
       rescue
         'localhost'
       end
@@ -990,6 +994,7 @@ def recv_reply
     # returned by #open or by #accept, then it closes this particular
     # client-server session.
     def close
+      shutdown
       if @socket
         @socket.close
         @socket = nil
@@ -998,14 +1003,8 @@ def close
     end
 
     def close_shutdown_pipe
-      if @shutdown_pipe_r && !@shutdown_pipe_r.closed?
-        @shutdown_pipe_r.close
-        @shutdown_pipe_r = nil
-      end
-      if @shutdown_pipe_w && !@shutdown_pipe_w.closed?
-        @shutdown_pipe_w.close
-        @shutdown_pipe_w = nil
-      end
+      @shutdown_pipe_w.close
+      @shutdown_pipe_r.close
     end
     private :close_shutdown_pipe
 
@@ -1038,7 +1037,7 @@ def accept_or_shutdown
 
     # Graceful shutdown
     def shutdown
-      @shutdown_pipe_w.close if @shutdown_pipe_w && !@shutdown_pipe_w.closed?
+      @shutdown_pipe_w.close
     end
 
     # Check to see if this connection is alive.
@@ -1213,7 +1212,7 @@ def self.prepare_backtrace(uri, result) # :nodoc:
       bt = []
       result.backtrace.each do |x|
         break if /`__send__'$/ =~ x
-        if /^\(druby:\/\// =~ x
+        if /\A\(druby:\/\// =~ x
           bt.push(x)
         else
           bt.push(prefix + x)
@@ -1612,17 +1611,23 @@ def perform
         if $SAFE < @safe_level
           info = Thread.current['DRb']
           if @block
-            @result = Thread.new {
+            @result = Thread.new do
               Thread.current['DRb'] = info
+              prev_safe_level = $SAFE
               $SAFE = @safe_level
               perform_with_block
-            }.value
+            ensure
+              $SAFE = prev_safe_level
+            end.value
           else
-            @result = Thread.new {
+            @result = Thread.new do
               Thread.current['DRb'] = info
+              prev_safe_level = $SAFE
               $SAFE = @safe_level
               perform_without_block
-            }.value
+            ensure
+              $SAFE = prev_safe_level
+            end.value
           end
         else
           if @block
@@ -1674,7 +1679,7 @@ def perform_without_block
 
     end
 
-    require 'drb/invokemethod'
+    require_relative 'invokemethod'
     class InvokeMethod
       include InvokeMethod18Mixin
     end
@@ -1902,6 +1907,11 @@ def regist_server(server)
   # Removes +server+ from the list of registered servers.
   def remove_server(server)
     @server.delete(server.uri)
+    mutex.synchronize do
+      if @primary_server == server
+        @primary_server = nil
+      end
+    end
   end
   module_function :remove_server
 
diff --git a/lib/ruby/stdlib/drb/extserv.rb b/lib/ruby/stdlib/drb/extserv.rb
index 1cb1be47099..a93d5d1576e 100644
--- a/lib/ruby/stdlib/drb/extserv.rb
+++ b/lib/ruby/stdlib/drb/extserv.rb
@@ -4,7 +4,7 @@
         Copyright (c) 2000,2002 Masatoshi SEKI
 =end
 
-require 'drb/drb'
+require_relative 'drb'
 require 'monitor'
 
 module DRb
diff --git a/lib/ruby/stdlib/drb/extservm.rb b/lib/ruby/stdlib/drb/extservm.rb
index 2d3c369bbfc..040e4e3e08e 100644
--- a/lib/ruby/stdlib/drb/extservm.rb
+++ b/lib/ruby/stdlib/drb/extservm.rb
@@ -4,7 +4,7 @@
         Copyright (c) 2000 Masatoshi SEKI
 =end
 
-require 'drb/drb'
+require_relative 'drb'
 require 'monitor'
 
 module DRb
@@ -61,8 +61,7 @@ def unregist(name)
     private
     def invoke_thread
       Thread.new do
-        while true
-          name = @queue.pop
+        while name = @queue.pop
           invoke_service_command(name, @@command[name])
         end
       end
diff --git a/lib/ruby/stdlib/drb/gw.rb b/lib/ruby/stdlib/drb/gw.rb
index d0005076445..65a525476ec 100644
--- a/lib/ruby/stdlib/drb/gw.rb
+++ b/lib/ruby/stdlib/drb/gw.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'drb/drb'
+require_relative 'drb'
 require 'monitor'
 
 module DRb
diff --git a/lib/ruby/stdlib/drb/ssl.rb b/lib/ruby/stdlib/drb/ssl.rb
index 45fe4f1f74c..48ba35ace73 100644
--- a/lib/ruby/stdlib/drb/ssl.rb
+++ b/lib/ruby/stdlib/drb/ssl.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
 require 'socket'
 require 'openssl'
-require 'drb/drb'
+require_relative 'drb'
 require 'singleton'
 
 module DRb
@@ -162,7 +162,7 @@ def setup_certificate
           return
         end
 
-        rsa = OpenSSL::PKey::RSA.new(1024){|p, n|
+        rsa = OpenSSL::PKey::RSA.new(2048){|p, n|
           next unless self[:verbose]
           case p
           when 0; $stderr.putc "."  # BN_generate_prime
@@ -196,7 +196,7 @@ def setup_certificate
         if comment = self[:SSLCertComment]
           cert.add_extension(ef.create_extension("nsComment", comment))
         end
-        cert.sign(rsa, OpenSSL::Digest::SHA1.new)
+        cert.sign(rsa, OpenSSL::Digest::SHA256.new)
 
         @cert = cert
         @pkey = rsa
@@ -226,13 +226,13 @@ def setup_ssl_context
     #
     # Raises DRbBadScheme or DRbBadURI if +uri+ is not matching or malformed
     def self.parse_uri(uri) # :nodoc:
-      if uri =~ /^drbssl:\/\/(.*?):(\d+)(\?(.*))?$/
+      if /\Adrbssl:\/\/(.*?):(\d+)(\?(.*))?\z/ =~ uri
         host = $1
         port = $2.to_i
         option = $4
         [host, port, option]
       else
-        raise(DRbBadScheme, uri) unless uri =~ /^drbssl:/
+        raise(DRbBadScheme, uri) unless uri.start_with?('drbssl:')
         raise(DRbBadURI, 'can\'t parse uri:' + uri)
       end
     end
diff --git a/lib/ruby/stdlib/drb/timeridconv.rb b/lib/ruby/stdlib/drb/timeridconv.rb
index 9ac7e1e69c9..3ead98a7f24 100644
--- a/lib/ruby/stdlib/drb/timeridconv.rb
+++ b/lib/ruby/stdlib/drb/timeridconv.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'drb/drb'
+require_relative 'drb'
 require 'monitor'
 
 module DRb
diff --git a/lib/ruby/stdlib/drb/unix.rb b/lib/ruby/stdlib/drb/unix.rb
index adacf6df5b7..89957c9e7bc 100644
--- a/lib/ruby/stdlib/drb/unix.rb
+++ b/lib/ruby/stdlib/drb/unix.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
 require 'socket'
-require 'drb/drb'
+require_relative 'drb'
 require 'tmpdir'
 
 raise(LoadError, "UNIXServer is required") unless defined?(UNIXServer)
@@ -15,12 +15,12 @@ module DRb
   class DRbUNIXSocket < DRbTCPSocket
     # :stopdoc:
     def self.parse_uri(uri)
-      if /^drbunix:(.*?)(\?(.*))?$/ =~ uri
+      if /\Adrbunix:(.*?)(\?(.*))?\z/ =~ uri
         filename = $1
         option = $3
         [filename, option]
       else
-        raise(DRbBadScheme, uri) unless uri =~ /^drbunix:/
+        raise(DRbBadScheme, uri) unless uri.start_with?('drbunix:')
         raise(DRbBadURI, 'can\'t parse uri:' + uri)
       end
     end
@@ -95,6 +95,7 @@ def self.temp_server
     public
     def close
       return unless @socket
+      shutdown # DRbProtocol#shutdown
       path = @socket.path if @server_mode
       @socket.close
       File.unlink(path) if @server_mode
diff --git a/lib/ruby/stdlib/erb.rb b/lib/ruby/stdlib/erb.rb
index 062fd496b9e..5b725d7820f 100644
--- a/lib/ruby/stdlib/erb.rb
+++ b/lib/ruby/stdlib/erb.rb
@@ -115,7 +115,7 @@
 #     James Edward Gray II
 #   }.gsub(/^  /, '')
 #
-#   message = ERB.new(template, 0, "%<>")
+#   message = ERB.new(template, trim_mode: "%<>")
 #
 #   # Set up template data.
 #   to = "Community Spokesman <spokesman@ruby_community.org>"
@@ -263,7 +263,7 @@ class ERB
 
   # Returns revision information for the erb.rb module.
   def self.version
-    "erb.rb [2.1.0 #{ERB::Revision.split[1]}]"
+    "erb.rb [2.2.0 #{ERB::Revision.split[1]}]"
   end
 end
 
@@ -515,10 +515,6 @@ def scan
       end
       Scanner.register_scanner(SimpleScanner, nil, false)
 
-      # Deprecated. Kept for backward compatibility.
-      SimpleScanner2 = SimpleScanner # :nodoc:
-      deprecate_constant :SimpleScanner2
-
       class ExplicitScanner < Scanner # :nodoc:
         def scan
           stag_reg = /(.*?)(^[ \t]*<%-|<%-|#{stags.join('|')}|\z)/m
@@ -669,9 +665,13 @@ def prepare_trim_mode(mode) # :nodoc:
         return [false, '>']
       when 2
         return [false, '<>']
-      when 0
+      when 0, nil
         return [false, nil]
       when String
+        unless mode.match?(/\A(%|-|>|<>){1,2}\z/)
+          warn_invalid_trim_mode(mode, uplevel: 5)
+        end
+
         perc = mode.include?('%')
         if mode.include?('-')
           return [perc, '-']
@@ -683,6 +683,7 @@ def prepare_trim_mode(mode) # :nodoc:
           [perc, nil]
         end
       else
+        warn_invalid_trim_mode(mode, uplevel: 5)
         return [false, nil]
       end
     end
@@ -734,6 +735,10 @@ def detect_magic_comment(s, enc = nil)
       end
       return enc, frozen
     end
+
+    def warn_invalid_trim_mode(mode, uplevel:)
+      warn "Invalid ERB trim mode: #{mode.inspect} (trim_mode: nil, 0, 1, 2, or String composed of '%' and/or '-', '>', '<>')", uplevel: uplevel + 1
+    end
   end
 end
 
@@ -781,11 +786,11 @@ class ERB
   #    def build
   #      b = binding
   #      # create and run templates, filling member data variables
-  #      ERB.new(<<-'END_PRODUCT'.gsub(/^\s+/, ""), 0, "", "@product").result b
+  #      ERB.new(<<-'END_PRODUCT'.gsub(/^\s+/, ""), trim_mode: "", eoutvar: "@product").result b
   #        <%= PRODUCT[:name] %>
   #        <%= PRODUCT[:desc] %>
   #      END_PRODUCT
-  #      ERB.new(<<-'END_PRICE'.gsub(/^\s+/, ""), 0, "", "@price").result b
+  #      ERB.new(<<-'END_PRICE'.gsub(/^\s+/, ""), trim_mode: "", eoutvar: "@price").result b
   #        <%= PRODUCT[:name] %> -- <%= PRODUCT[:cost] %>
   #        <%= PRODUCT[:desc] %>
   #      END_PRICE
@@ -806,7 +811,22 @@ class ERB
   #  Chicken Fried Steak -- 9.95
   #  A well messages pattie, breaded and fried.
   #
-  def initialize(str, safe_level=nil, trim_mode=nil, eoutvar='_erbout')
+  def initialize(str, safe_level=NOT_GIVEN, legacy_trim_mode=NOT_GIVEN, legacy_eoutvar=NOT_GIVEN, trim_mode: nil, eoutvar: '_erbout')
+    # Complex initializer for $SAFE deprecation at Feature #14256, which should be removed at Ruby 2.7.
+    if safe_level != NOT_GIVEN
+      warn 'Passing safe_level with the 2nd argument of ERB.new is deprecated. Do not use it, and specify other arguments as keyword arguments.', uplevel: 1 if $VERBOSE
+    else
+      safe_level = nil
+    end
+    if legacy_trim_mode != NOT_GIVEN
+      warn 'Passing trim_mode with the 3rd argument of ERB.new is deprecated. Use keyword argument like ERB.new(str, trim_mode: ...) instead.', uplevel: 1 if $VERBOSE
+      trim_mode = legacy_trim_mode
+    end
+    if legacy_eoutvar != NOT_GIVEN
+      warn 'Passing eoutvar with the 4th argument of ERB.new is deprecated. Use keyword argument like ERB.new(str, eoutvar: ...) instead.', uplevel: 1 if $VERBOSE
+      eoutvar = legacy_eoutvar
+    end
+
     @safe_level = safe_level
     compiler = make_compiler(trim_mode)
     set_eoutvar(compiler, eoutvar)
@@ -814,6 +834,8 @@ def initialize(str, safe_level=nil, trim_mode=nil, eoutvar='_erbout')
     @filename = nil
     @lineno = 0
   end
+  NOT_GIVEN = Object.new
+  private_constant :NOT_GIVEN
 
   ##
   # Creates a new compiler for ERB.  See ERB::Compiler.new for details
@@ -868,10 +890,13 @@ def run(b=new_toplevel)
   #
   def result(b=new_toplevel)
     if @safe_level
-      proc {
+      proc do
+        prev_safe_level = $SAFE
         $SAFE = @safe_level
         eval(@src, b, (@filename || '(erb)'), @lineno)
-      }.call
+      ensure
+        $SAFE = prev_safe_level
+      end.call
     else
       eval(@src, b, (@filename || '(erb)'), @lineno)
     end
diff --git a/lib/ruby/stdlib/fiddle/import.rb b/lib/ruby/stdlib/fiddle/import.rb
index 59ab3ee6f76..178ebb8c763 100644
--- a/lib/ruby/stdlib/fiddle/import.rb
+++ b/lib/ruby/stdlib/fiddle/import.rb
@@ -115,8 +115,6 @@ def sizeof(ty)
           return SIZEOF_INT
         when TYPE_LONG
           return SIZEOF_LONG
-        when TYPE_LONG_LONG
-          return SIZEOF_LONG_LONG
         when TYPE_FLOAT
           return SIZEOF_FLOAT
         when TYPE_DOUBLE
@@ -124,7 +122,12 @@ def sizeof(ty)
         when TYPE_VOIDP
           return SIZEOF_VOIDP
         else
-          raise(DLError, "unknown type: #{ty}")
+          if defined?(TYPE_LONG_LONG) and
+            ty == TYPE_LONG_LONG
+            return SIZEOF_LONG_LONG
+          else
+            raise(DLError, "unknown type: #{ty}")
+          end
         end
       when Class
         if( ty.instance_methods().include?(:to_ptr) )
@@ -154,7 +157,8 @@ def parse_bind_options(opts)
     # :stopdoc:
     CALL_TYPE_TO_ABI = Hash.new { |h, k|
       raise RuntimeError, "unsupported call type: #{k}"
-    }.merge({ :stdcall => (Function::STDCALL rescue Function::DEFAULT),
+    }.merge({ :stdcall => Function.const_defined?(:STDCALL) ? Function::STDCALL :
+                          Function::DEFAULT,
               :cdecl   => Function::DEFAULT,
               nil      => Function::DEFAULT
             }).freeze
diff --git a/lib/ruby/stdlib/fiddle/pack.rb b/lib/ruby/stdlib/fiddle/pack.rb
index 3c9e3c8ad7a..22eccedb769 100644
--- a/lib/ruby/stdlib/fiddle/pack.rb
+++ b/lib/ruby/stdlib/fiddle/pack.rb
@@ -18,7 +18,7 @@ module PackInfo # :nodoc: all
     }
 
     PACK_MAP = {
-      TYPE_VOIDP => ((SIZEOF_VOIDP == SIZEOF_LONG_LONG) ? "q" : "l!"),
+      TYPE_VOIDP => "l!",
       TYPE_CHAR  => "c",
       TYPE_SHORT => "s!",
       TYPE_INT   => "i!",
@@ -48,6 +48,7 @@ module PackInfo # :nodoc: all
       ALIGN_MAP[TYPE_LONG_LONG] = ALIGN_MAP[-TYPE_LONG_LONG] = ALIGN_LONG_LONG
       PACK_MAP[TYPE_LONG_LONG] = PACK_MAP[-TYPE_LONG_LONG] = "q"
       SIZE_MAP[TYPE_LONG_LONG] = SIZE_MAP[-TYPE_LONG_LONG] = SIZEOF_LONG_LONG
+      PACK_MAP[TYPE_VOIDP] = "q" if SIZEOF_LONG_LONG == SIZEOF_VOIDP
     end
 
     def align(addr, align)
@@ -80,10 +81,13 @@ def pack(ary)
       case SIZEOF_VOIDP
       when SIZEOF_LONG
         ary.pack(@template)
-      when SIZEOF_LONG_LONG
-        ary.pack(@template)
       else
-        raise(RuntimeError, "sizeof(void*)?")
+        if defined?(TYPE_LONG_LONG) and
+          SIZEOF_VOIDP == SIZEOF_LONG_LONG
+          ary.pack(@template)
+        else
+          raise(RuntimeError, "sizeof(void*)?")
+        end
       end
     end
 
@@ -91,10 +95,13 @@ def unpack(ary)
       case SIZEOF_VOIDP
       when SIZEOF_LONG
         ary.join().unpack(@template)
-      when SIZEOF_LONG_LONG
-        ary.join().unpack(@template)
       else
-        raise(RuntimeError, "sizeof(void*)?")
+        if defined?(TYPE_LONG_LONG) and
+          SIZEOF_VOIDP == SIZEOF_LONG_LONG
+          ary.join().unpack(@template)
+        else
+          raise(RuntimeError, "sizeof(void*)?")
+        end
       end
     end
 
diff --git a/lib/ruby/stdlib/fiddle/value.rb b/lib/ruby/stdlib/fiddle/value.rb
index a043b9b0669..01fec1c206d 100644
--- a/lib/ruby/stdlib/fiddle/value.rb
+++ b/lib/ruby/stdlib/fiddle/value.rb
@@ -13,10 +13,13 @@ def unsigned_value(val, ty)
         [val].pack("i!").unpack("I!")[0]
       when TYPE_LONG
         [val].pack("l!").unpack("L!")[0]
-      when TYPE_LONG_LONG
-        [val].pack("q").unpack("Q")[0]
       else
-        val
+        if defined?(TYPE_LONG_LONG) and
+          ty.abs == TYPE_LONG_LONG
+          [val].pack("q").unpack("Q")[0]
+        else
+          val
+        end
       end
     end
 
@@ -30,10 +33,13 @@ def signed_value(val, ty)
         [val].pack("I!").unpack("i!")[0]
       when TYPE_LONG
         [val].pack("L!").unpack("l!")[0]
-      when TYPE_LONG_LONG
-        [val].pack("Q").unpack("q")[0]
       else
-        val
+        if defined?(TYPE_LONG_LONG) and
+          ty.abs == TYPE_LONG_LONG
+          [val].pack("Q").unpack("q")[0]
+        else
+          val
+        end
       end
     end
 
@@ -75,10 +81,13 @@ def wrap_arg(arg, ty, funcs = [], &block)
           case SIZEOF_VOIDP
           when SIZEOF_LONG
             return [arg].pack("p").unpack("l!")[0]
-          when SIZEOF_LONG_LONG
-            return [arg].pack("p").unpack("q")[0]
           else
-            raise(RuntimeError, "sizeof(void*)?")
+            if defined?(SIZEOF_LONG_LONG) and
+              SIZEOF_VOIDP == SIZEOF_LONG_LONG
+              return [arg].pack("p").unpack("q")[0]
+            else
+              raise(RuntimeError, "sizeof(void*)?")
+            end
           end
         end
       when Float, Integer
diff --git a/lib/ruby/stdlib/fileutils/fileutils.gemspec b/lib/ruby/stdlib/fileutils/fileutils.gemspec
new file mode 100644
index 00000000000..7212883d2bf
--- /dev/null
+++ b/lib/ruby/stdlib/fileutils/fileutils.gemspec
@@ -0,0 +1,32 @@
+# frozen_string_literal: true
+
+begin
+  require_relative "lib/fileutils/version"
+rescue LoadError
+  # for Ruby core repository
+  require_relative "version"
+end
+
+Gem::Specification.new do |s|
+  s.name = "fileutils"
+  s.version = FileUtils::VERSION
+  s.summary = "Several file utility methods for copying, moving, removing, etc."
+  s.description = "Several file utility methods for copying, moving, removing, etc."
+
+  s.require_path = %w{lib}
+  s.files = [".gitignore", ".travis.yml", "Gemfile", "LICENSE.txt", "README.md", "Rakefile", "bin/console", "bin/setup", "fileutils.gemspec", "lib/fileutils.rb", "lib/fileutils/version.rb"]
+  s.required_ruby_version = ">= 2.3.0"
+
+  s.authors = ["Minero Aoki"]
+  s.email = [nil]
+  s.homepage = "https://github.com/ruby/fileutils"
+  s.license = "BSD-2-Clause"
+
+  if s.respond_to?(:metadata=)
+    s.metadata = {
+      "source_code_uri" => "https://github.com/ruby/fileutils"
+    }
+  end
+
+  s.add_development_dependency 'rake'
+end
diff --git a/lib/ruby/stdlib/fileutils/version.rb b/lib/ruby/stdlib/fileutils/version.rb
new file mode 100644
index 00000000000..e82734dfecf
--- /dev/null
+++ b/lib/ruby/stdlib/fileutils/version.rb
@@ -0,0 +1,5 @@
+# frozen_string_literal: true
+
+module FileUtils
+  VERSION = "1.1.0"
+end
diff --git a/lib/ruby/stdlib/forwardable.rb b/lib/ruby/stdlib/forwardable.rb
index a8e5aa1d5a2..bcd462a97c2 100644
--- a/lib/ruby/stdlib/forwardable.rb
+++ b/lib/ruby/stdlib/forwardable.rb
@@ -113,7 +113,8 @@ module Forwardable
   require 'forwardable/impl'
 
   # Version of +forwardable.rb+
-  FORWARDABLE_VERSION = "1.2.0"
+  VERSION = "1.2.0"
+  FORWARDABLE_VERSION = VERSION
 
   @debug = nil
   class << self
@@ -221,7 +222,7 @@ def #{ali}(*args, &block)
           #{pre}
           begin
             #{accessor}
-          end#{method_call}#{FILTER_EXCEPTION}
+          end#{method_call}
         end
       end
     end;
diff --git a/lib/ruby/stdlib/forwardable/forwardable.gemspec b/lib/ruby/stdlib/forwardable/forwardable.gemspec
new file mode 100644
index 00000000000..f90b82269d9
--- /dev/null
+++ b/lib/ruby/stdlib/forwardable/forwardable.gemspec
@@ -0,0 +1,26 @@
+begin
+  require_relative "lib/forwardable"
+rescue LoadError
+  # for Ruby core repository
+  require_relative "../forwardable"
+end
+
+Gem::Specification.new do |spec|
+  spec.name          = "forwardable"
+  spec.version       = Forwardable::VERSION
+  spec.authors       = ["Keiju ISHITSUKA"]
+  spec.email         = ["keiju@ruby-lang.org"]
+
+  spec.summary       = %q{Provides delegation of specified methods to a designated object.}
+  spec.description   = %q{Provides delegation of specified methods to a designated object.}
+  spec.homepage      = "https://github.com/ruby/forwardable"
+  spec.license       = "BSD-2-Clause"
+
+  spec.files         = [".gitignore", ".travis.yml", "Gemfile", "LICENSE.txt", "README.md", "Rakefile", "bin/console", "bin/setup", "forwardable.gemspec", "lib/forwardable.rb", "lib/forwardable/impl.rb"]
+  spec.bindir        = "exe"
+  spec.executables   = spec.files.grep(%r{^exe/}) { |f| File.basename(f) }
+  spec.require_paths = ["lib"]
+
+  spec.add_development_dependency "bundler"
+  spec.add_development_dependency "rake"
+end
diff --git a/lib/ruby/stdlib/forwardable/impl.rb b/lib/ruby/stdlib/forwardable/impl.rb
index 220d25aa953..58a9dfb69c1 100644
--- a/lib/ruby/stdlib/forwardable/impl.rb
+++ b/lib/ruby/stdlib/forwardable/impl.rb
@@ -1,13 +1,5 @@
 # :stopdoc:
 module Forwardable
-  FILE_REGEXP = %r"#{Regexp.quote(File.dirname(__FILE__))}"
-  FILTER_EXCEPTION = <<-'END'
-
-        rescue ::Exception
-          $@.delete_if {|s| ::Forwardable::FILE_REGEXP =~ s} unless ::Forwardable::debug
-          ::Kernel::raise
-  END
-
   def self._valid_method?(method)
     catch {|tag|
       eval("BEGIN{throw tag}; ().#{method}", binding, __FILE__, __LINE__)
diff --git a/lib/ruby/stdlib/irb.rb b/lib/ruby/stdlib/irb.rb
index d650e9c4975..ee3e649e810 100644
--- a/lib/ruby/stdlib/irb.rb
+++ b/lib/ruby/stdlib/irb.rb
@@ -19,6 +19,8 @@
 require "irb/input-method"
 require "irb/locale"
 
+require "irb/version"
+
 # IRB stands for "interactive Ruby" and is a tool to interactively execute Ruby
 # expressions read from the standard input.
 #
@@ -354,9 +356,7 @@ def IRB.conf
   def IRB.version
     if v = @CONF[:VERSION] then return v end
 
-    require "irb/version"
-    rv = @RELEASE_VERSION.sub(/\.0/, "")
-    @CONF[:VERSION] = format("irb %s(%s)", rv, @LAST_UPDATE_DATE)
+    @CONF[:VERSION] = format("irb %s (%s)", @RELEASE_VERSION, @LAST_UPDATE_DATE)
   end
 
   # The current IRB::Context of the session, see IRB.conf
@@ -439,6 +439,8 @@ def run(conf = IRB.conf)
 
     # Evaluates input for this session.
     def eval_input
+      exc = nil
+
       @scanner.set_prompt do
         |ltype, indent, continue, line_no|
         if ltype
@@ -488,52 +490,74 @@ def eval_input
         signal_status(:IN_EVAL) do
           begin
             line.untaint
-            @context.evaluate(line, line_no)
+            @context.evaluate(line, line_no, exception: exc)
             output_value if @context.echo?
-            exc = nil
           rescue Interrupt => exc
           rescue SystemExit, SignalException
             raise
           rescue Exception => exc
+          else
+            exc = nil
+            next
           end
-          if exc
-            if exc.backtrace && exc.backtrace[0] =~ /irb(2)?(\/.*|-.*|\.rb)?:/ && exc.class.to_s !~ /^IRB/ &&
-                !(SyntaxError === exc)
-              irb_bug = true
-            else
-              irb_bug = false
-            end
+          handle_exception(exc)
+        end
+      end
+    end
 
-            messages = []
-            lasts = []
-            levels = 0
-            if exc.backtrace
-              count = 0
-              exc.backtrace.each do |m|
-                m = @context.workspace.filter_backtrace(m) or next unless irb_bug
-                m = sprintf("%9d: from %s", (count += 1), m)
-                if messages.size < @context.back_trace_limit
-                  messages.push(m)
-                elsif lasts.size < @context.back_trace_limit
-                  lasts.push(m).shift
-                  levels += 1
-                end
-              end
-            end
-            attr = STDOUT.tty? ? ATTR_TTY : ATTR_PLAIN
-            print "#{attr[1]}Traceback#{attr[]} (most recent call last):\n"
-            unless lasts.empty?
-              puts lasts.reverse
-              printf "... %d levels...\n", levels if levels > 0
-            end
-            puts messages.reverse
-            messages = exc.to_s.split(/\n/)
-            print "#{attr[1]}#{exc.class} (#{attr[4]}#{messages.shift}#{attr[0, 1]})#{attr[]}\n"
-            puts messages.map {|s| "#{attr[1]}#{s}#{attr[]}\n"}
-            print "Maybe IRB bug!\n" if irb_bug
+    def handle_exception(exc)
+      if exc.backtrace && exc.backtrace[0] =~ /irb(2)?(\/.*|-.*|\.rb)?:/ && exc.class.to_s !~ /^IRB/ &&
+         !(SyntaxError === exc)
+        irb_bug = true
+      else
+        irb_bug = false
+      end
+
+      if STDOUT.tty?
+        attr = ATTR_TTY
+        print "#{attr[1]}Traceback#{attr[]} (most recent call last):\n"
+      else
+        attr = ATTR_PLAIN
+      end
+      messages = []
+      lasts = []
+      levels = 0
+      if exc.backtrace
+        count = 0
+        exc.backtrace.each do |m|
+          m = @context.workspace.filter_backtrace(m) or next unless irb_bug
+          count += 1
+          if attr == ATTR_TTY
+            m = sprintf("%9d: from %s", count, m)
+          else
+            m = "\tfrom #{m}"
+          end
+          if messages.size < @context.back_trace_limit
+            messages.push(m)
+          elsif lasts.size < @context.back_trace_limit
+            lasts.push(m).shift
+            levels += 1
           end
         end
       end
+      if attr == ATTR_TTY
+        unless lasts.empty?
+          puts lasts.reverse
+          printf "... %d levels...\n", levels if levels > 0
+        end
+        puts messages.reverse
+      end
+      m = exc.to_s.split(/\n/)
+      print "#{attr[1]}#{exc.class} (#{attr[4]}#{m.shift}#{attr[0, 1]})#{attr[]}\n"
+      puts m.map {|s| "#{attr[1]}#{s}#{attr[]}\n"}
+      if attr == ATTR_PLAIN
+        puts messages
+        unless lasts.empty?
+          puts lasts
+          printf "... %d levels...\n", levels if levels > 0
+        end
+      end
+      print "Maybe IRB bug!\n" if irb_bug
     end
 
     # Evaluates the given block using the given +path+ as the Context#irb_path
@@ -708,7 +732,63 @@ def @CONF.inspect
 end
 
 class Binding
-  # :nodoc:
+  # Opens an IRB session where +binding.irb+ is called which allows for
+  # interactive debugging. You can call any methods or variables available in
+  # the current scope, and mutate state if you need to.
+  #
+  #
+  # Given a Ruby file called +potato.rb+ containing the following code:
+  #
+  #     class Potato
+  #       def initialize
+  #         @cooked = false
+  #         binding.irb
+  #         puts "Cooked potato: #{@cooked}"
+  #       end
+  #     end
+  #
+  #     Potato.new
+  #
+  # Running +ruby potato.rb+ will open an IRB session where +binding.irb+ is
+  # called, and you will see the following:
+  #
+  #     $ ruby potato.rb
+  #
+  #     From: potato.rb @ line 4 :
+  #
+  #         1: class Potato
+  #         2:   def initialize
+  #         3:     @cooked = false
+  #      => 4:     binding.irb
+  #         5:     puts "Cooked potato: #{@cooked}"
+  #         6:   end
+  #         7: end
+  #         8:
+  #         9: Potato.new
+  #
+  #     irb(#<Potato:0x00007feea1916670>):001:0>
+  #
+  # You can type any valid Ruby code and it will be evaluated in the current
+  # context. This allows you to debug without having to run your code repeatedly:
+  #
+  #     irb(#<Potato:0x00007feea1916670>):001:0> @cooked
+  #     => false
+  #     irb(#<Potato:0x00007feea1916670>):002:0> self.class
+  #     => Potato
+  #     irb(#<Potato:0x00007feea1916670>):003:0> caller.first
+  #     => ".../2.5.1/lib/ruby/2.5.0/irb/workspace.rb:85:in `eval'"
+  #     irb(#<Potato:0x00007feea1916670>):004:0> @cooked = true
+  #     => true
+  #
+  # You can exit the IRB session with the `exit` command. Note that exiting will
+  # resume execution where +binding.irb+ had paused it, as you can see from the
+  # output printed to standard output in this example:
+  #
+  #     irb(#<Potato:0x00007feea1916670>):005:0> exit
+  #     Cooked potato: true
+  #
+  #
+  # See IRB@IRB+Usage for more information.
   def irb
     IRB.setup(eval("__FILE__"), argv: [])
     workspace = IRB::WorkSpace.new(self)
diff --git a/lib/ruby/stdlib/irb/cmd/chws.rb b/lib/ruby/stdlib/irb/cmd/chws.rb
index e93c976f82d..e9f257791ce 100644
--- a/lib/ruby/stdlib/irb/cmd/chws.rb
+++ b/lib/ruby/stdlib/irb/cmd/chws.rb
@@ -10,8 +10,8 @@
 #
 #
 
-require "irb/cmd/nop.rb"
-require "irb/ext/change-ws.rb"
+require_relative "nop"
+require_relative "../ext/change-ws"
 
 # :stopdoc:
 module IRB
diff --git a/lib/ruby/stdlib/irb/cmd/help.rb b/lib/ruby/stdlib/irb/cmd/help.rb
index db2bd567e56..71590ee844d 100644
--- a/lib/ruby/stdlib/irb/cmd/help.rb
+++ b/lib/ruby/stdlib/irb/cmd/help.rb
@@ -11,7 +11,7 @@
 
 require 'rdoc/ri/driver'
 
-require "irb/cmd/nop.rb"
+require_relative "nop"
 
 # :stopdoc:
 module IRB
diff --git a/lib/ruby/stdlib/irb/cmd/load.rb b/lib/ruby/stdlib/irb/cmd/load.rb
index f800b741eb5..b6769a4124f 100644
--- a/lib/ruby/stdlib/irb/cmd/load.rb
+++ b/lib/ruby/stdlib/irb/cmd/load.rb
@@ -10,8 +10,8 @@
 #
 #
 
-require "irb/cmd/nop.rb"
-require "irb/ext/loader"
+require_relative "nop"
+require_relative "../ext/loader"
 
 # :stopdoc:
 module IRB
diff --git a/lib/ruby/stdlib/irb/cmd/pushws.rb b/lib/ruby/stdlib/irb/cmd/pushws.rb
index ffe55abed6e..187b276e482 100644
--- a/lib/ruby/stdlib/irb/cmd/pushws.rb
+++ b/lib/ruby/stdlib/irb/cmd/pushws.rb
@@ -10,8 +10,8 @@
 #
 #
 
-require "irb/cmd/nop.rb"
-require "irb/ext/workspaces.rb"
+require_relative "nop"
+require_relative "../ext/workspaces"
 
 # :stopdoc:
 module IRB
diff --git a/lib/ruby/stdlib/irb/cmd/subirb.rb b/lib/ruby/stdlib/irb/cmd/subirb.rb
index c1602f6e45e..1e18607d1af 100644
--- a/lib/ruby/stdlib/irb/cmd/subirb.rb
+++ b/lib/ruby/stdlib/irb/cmd/subirb.rb
@@ -9,8 +9,8 @@
 #
 #
 
-require "irb/cmd/nop.rb"
-require "irb/ext/multi-irb"
+require_relative "nop"
+require_relative "../ext/multi-irb"
 
 # :stopdoc:
 module IRB
diff --git a/lib/ruby/stdlib/irb/completion.rb b/lib/ruby/stdlib/irb/completion.rb
index 3656e3f944a..864da267ca9 100644
--- a/lib/ruby/stdlib/irb/completion.rb
+++ b/lib/ruby/stdlib/irb/completion.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
 #
-#   irb/completor.rb -
+#   irb/completion.rb -
 #   	$Release Version: 0.9$
 #   	$Revision$
 #   	by Keiju ISHITSUKA(keiju@ishitsuka.com)
@@ -169,21 +169,13 @@ def defined do
         else
           # func1.func2
           candidates = []
+          to_ignore = ignored_modules
           ObjectSpace.each_object(Module){|m|
+            next if (to_ignore.include?(m) rescue true)
+
             # JRuby specific (JRUBY-2186)
             next if RUBY_ENGINE == 'jruby' && !m.respond_to?(:instance_methods)
 
-            begin
-              name = m.name
-            rescue Exception
-              name = ""
-            end
-            begin
-              next if name != "IRB::Context" and
-                /^(IRB|SLex|RubyLex|RubyToken)/ =~ name
-            rescue Exception
-              next
-            end
             candidates.concat m.instance_methods(false).collect{|x| x.to_s}
           }
           candidates.sort!
@@ -221,6 +213,31 @@ def self.select_message(receiver, message, candidates, sep = ".")
         end
       end
     end
+
+    def self.ignored_modules
+      # We could cache the result, but this is very fast already.
+      # By using this approach, we avoid Module#name calls, which are
+      # relatively slow when there are a lot of anonymous modules defined.
+      s = {}
+
+      scanner = lambda do |m|
+        next if s.include?(m) # IRB::ExtendCommandBundle::EXCB recurses.
+        s[m] = true
+        m.constants(false).each do |c|
+          value = m.const_get(c)
+          scanner.call(value) if value.is_a?(Module)
+        end
+      end
+
+      %i(IRB SLex RubyLex RubyToken).each do |sym|
+        next unless Object.const_defined?(sym)
+        scanner.call(Object.const_get(sym))
+      end
+
+      s.delete(IRB::Context) if defined?(IRB::Context)
+
+      s
+    end
   end
 end
 
diff --git a/lib/ruby/stdlib/irb/context.rb b/lib/ruby/stdlib/irb/context.rb
index 9ccdf744fbc..e8e6a118e6a 100644
--- a/lib/ruby/stdlib/irb/context.rb
+++ b/lib/ruby/stdlib/irb/context.rb
@@ -9,9 +9,10 @@
 #
 #
 #
-require "irb/workspace"
-require "irb/inspector"
-require "irb/output-method"
+require_relative "workspace"
+require_relative "inspector"
+require_relative "input-method"
+require_relative "output-method"
 
 module IRB
   # A class that wraps the current state of the irb session, including the
@@ -261,7 +262,7 @@ def prompting?
     # to #last_value.
     def set_last_value(value)
       @last_value = value
-      @workspace.evaluate self, "_ = IRB.CurrentContext.last_value"
+      @workspace.local_variable_set :_, value
     end
 
     # Sets the +mode+ of the prompt in this context.
@@ -375,8 +376,12 @@ def debug?
       @debug_level > 0
     end
 
-    def evaluate(line, line_no) # :nodoc:
+    def evaluate(line, line_no, exception: nil) # :nodoc:
       @line_no = line_no
+      if exception
+        line = "begin ::Kernel.raise _; rescue _.class; #{line}; end"
+        @workspace.local_variable_set(:_, exception)
+      end
       set_last_value(@workspace.evaluate(self, line, irb_path, line_no))
     end
 
diff --git a/lib/ruby/stdlib/irb/ext/use-loader.rb b/lib/ruby/stdlib/irb/ext/use-loader.rb
index 571dd25d17a..cc717066717 100644
--- a/lib/ruby/stdlib/irb/ext/use-loader.rb
+++ b/lib/ruby/stdlib/irb/ext/use-loader.rb
@@ -10,8 +10,8 @@
 #
 #
 
-require "irb/cmd/load"
-require "irb/ext/loader"
+require_relative "../cmd/load"
+require_relative "loader"
 
 class Object
   alias __original__load__IRB_use_loader__ load
diff --git a/lib/ruby/stdlib/irb/help.rb b/lib/ruby/stdlib/irb/help.rb
index a4264ab4abb..7868a70a6c9 100644
--- a/lib/ruby/stdlib/irb/help.rb
+++ b/lib/ruby/stdlib/irb/help.rb
@@ -10,7 +10,7 @@
 #
 #
 
-require 'irb/magic-file'
+require_relative 'magic-file'
 
 module IRB
   # Outputs the irb help message, see IRB@Command+line+options.
diff --git a/lib/ruby/stdlib/irb/init.rb b/lib/ruby/stdlib/irb/init.rb
index a971b75ac3e..2066d8cb645 100644
--- a/lib/ruby/stdlib/irb/init.rb
+++ b/lib/ruby/stdlib/irb/init.rb
@@ -197,7 +197,7 @@ def IRB.parse_opts(argv: ::ARGV)
         print IRB.version, "\n"
         exit 0
       when "-h", "--help"
-        require "irb/help"
+        require_relative "help"
         IRB.print_usage
         exit 0
       when "--"
diff --git a/lib/ruby/stdlib/irb/input-method.rb b/lib/ruby/stdlib/irb/input-method.rb
index f7b1aac3bf3..f491d5a760d 100644
--- a/lib/ruby/stdlib/irb/input-method.rb
+++ b/lib/ruby/stdlib/irb/input-method.rb
@@ -9,8 +9,8 @@
 #
 #
 #
-require 'irb/src_encoding'
-require 'irb/magic-file'
+require_relative 'src_encoding'
+require_relative 'magic-file'
 
 module IRB
   STDIN_FILE_NAME = "(line)" # :nodoc:
diff --git a/lib/ruby/stdlib/irb/irb.gemspec b/lib/ruby/stdlib/irb/irb.gemspec
new file mode 100644
index 00000000000..57a44fecb74
--- /dev/null
+++ b/lib/ruby/stdlib/irb/irb.gemspec
@@ -0,0 +1,26 @@
+begin
+  require_relative "lib/irb/version"
+rescue LoadError
+  # for Ruby core repository
+  require_relative "version"
+end
+
+Gem::Specification.new do |spec|
+  spec.name          = "irb"
+  spec.version       = IRB::VERSION
+  spec.authors       = ["Keiju ISHITSUKA"]
+  spec.email         = ["keiju@ruby-lang.org"]
+
+  spec.summary       = %q{Interactive Ruby command-line tool for REPL (Read Eval Print Loop).}
+  spec.description   = %q{Interactive Ruby command-line tool for REPL (Read Eval Print Loop).}
+  spec.homepage      = "https://github.com/ruby/irb"
+  spec.license       = "BSD-2-Clause"
+
+  spec.files         = [".gitignore", ".travis.yml", "Gemfile", "LICENSE.txt", "README.md", "Rakefile", "bin/console", "bin/setup", "exe/irb", "irb.gemspec", "lib/irb.rb", "lib/irb/cmd/chws.rb", "lib/irb/cmd/fork.rb", "lib/irb/cmd/help.rb", "lib/irb/cmd/load.rb", "lib/irb/cmd/nop.rb", "lib/irb/cmd/pushws.rb", "lib/irb/cmd/subirb.rb", "lib/irb/completion.rb", "lib/irb/context.rb", "lib/irb/ext/change-ws.rb", "lib/irb/ext/history.rb", "lib/irb/ext/loader.rb", "lib/irb/ext/multi-irb.rb", "lib/irb/ext/save-history.rb", "lib/irb/ext/tracer.rb", "lib/irb/ext/use-loader.rb", "lib/irb/ext/workspaces.rb", "lib/irb/extend-command.rb", "lib/irb/frame.rb", "lib/irb/help.rb", "lib/irb/init.rb", "lib/irb/input-method.rb", "lib/irb/inspector.rb", "lib/irb/lc/.document", "lib/irb/lc/error.rb", "lib/irb/lc/help-message", "lib/irb/lc/ja/encoding_aliases.rb", "lib/irb/lc/ja/error.rb", "lib/irb/lc/ja/help-message", "lib/irb/locale.rb", "lib/irb/magic-file.rb", "lib/irb/notifier.rb", "lib/irb/output-method.rb", "lib/irb/ruby-lex.rb", "lib/irb/ruby-token.rb", "lib/irb/slex.rb", "lib/irb/src_encoding.rb", "lib/irb/version.rb", "lib/irb/workspace.rb", "lib/irb/ws-for-case-2.rb", "lib/irb/xmp.rb"]
+  spec.bindir        = "exe"
+  spec.executables   = spec.files.grep(%r{^exe/}) { |f| File.basename(f) }
+  spec.require_paths = ["lib"]
+
+  spec.add_development_dependency "bundler"
+  spec.add_development_dependency "rake"
+end
diff --git a/lib/ruby/stdlib/irb/notifier.rb b/lib/ruby/stdlib/irb/notifier.rb
index a21e865f2ef..5a68b0e8c84 100644
--- a/lib/ruby/stdlib/irb/notifier.rb
+++ b/lib/ruby/stdlib/irb/notifier.rb
@@ -11,7 +11,7 @@
 #
 
 require "e2mmap"
-require "irb/output-method"
+require_relative "output-method"
 
 module IRB
   # An output formatter used internally by the lexer.
diff --git a/lib/ruby/stdlib/irb/ruby-lex.rb b/lib/ruby/stdlib/irb/ruby-lex.rb
index fb7e08099fd..555d1f024ff 100644
--- a/lib/ruby/stdlib/irb/ruby-lex.rb
+++ b/lib/ruby/stdlib/irb/ruby-lex.rb
@@ -11,8 +11,8 @@
 #
 
 require "e2mmap"
-require "irb/slex"
-require "irb/ruby-token"
+require_relative "slex"
+require_relative "ruby-token"
 
 # :stopdoc:
 class RubyLex
diff --git a/lib/ruby/stdlib/irb/slex.rb b/lib/ruby/stdlib/irb/slex.rb
index 039b214a8d8..e584b312bdb 100644
--- a/lib/ruby/stdlib/irb/slex.rb
+++ b/lib/ruby/stdlib/irb/slex.rb
@@ -11,7 +11,7 @@
 #
 
 require "e2mmap"
-require "irb/notifier"
+require_relative "notifier"
 
 # :stopdoc:
 module IRB
diff --git a/lib/ruby/stdlib/irb/version.rb b/lib/ruby/stdlib/irb/version.rb
index 094cb33c05e..41cfff404ce 100644
--- a/lib/ruby/stdlib/irb/version.rb
+++ b/lib/ruby/stdlib/irb/version.rb
@@ -11,6 +11,7 @@
 #
 
 module IRB # :nodoc:
-  @RELEASE_VERSION = "0.9.6"
-  @LAST_UPDATE_DATE = "09/06/30"
+  VERSION = "1.0.0"
+  @RELEASE_VERSION = VERSION
+  @LAST_UPDATE_DATE = "2018-12-18"
 end
diff --git a/lib/ruby/stdlib/irb/workspace.rb b/lib/ruby/stdlib/irb/workspace.rb
index 9ce84b60fa5..53914fb7c1c 100644
--- a/lib/ruby/stdlib/irb/workspace.rb
+++ b/lib/ruby/stdlib/irb/workspace.rb
@@ -71,7 +71,7 @@ def initialize(*main)
           end
         end
       end
-      eval("_=nil", @binding)
+      @binding.local_variable_set(:_, nil)
     end
 
     # The Binding of this workspace
@@ -85,6 +85,14 @@ def evaluate(context, statements, file = __FILE__, line = __LINE__)
       eval(statements, @binding, file, line)
     end
 
+    def local_variable_set(name, value)
+      @binding.local_variable_set(name, value)
+    end
+
+    def local_variable_get(name)
+      @binding.local_variable_get(name)
+    end
+
     # error message manipulator
     def filter_backtrace(bt)
       case IRB.conf[:CONTEXT_MODE]
@@ -108,7 +116,7 @@ def filter_backtrace(bt)
     end
 
     def code_around_binding
-      file, pos = @binding.eval('[__FILE__, __LINE__]')
+      file, pos = @binding.source_location
 
       unless defined?(::SCRIPT_LINES__[file]) && lines = ::SCRIPT_LINES__[file]
         begin
diff --git a/lib/ruby/stdlib/irb/xmp.rb b/lib/ruby/stdlib/irb/xmp.rb
index 3234cff7f3f..60cf3b4e4df 100644
--- a/lib/ruby/stdlib/irb/xmp.rb
+++ b/lib/ruby/stdlib/irb/xmp.rb
@@ -11,7 +11,7 @@
 #
 
 require "irb"
-require "irb/frame"
+require_relative "frame"
 
 # An example printer for irb.
 #
diff --git a/lib/ruby/stdlib/logger.gemspec b/lib/ruby/stdlib/logger.gemspec
new file mode 100644
index 00000000000..815ae5bc466
--- /dev/null
+++ b/lib/ruby/stdlib/logger.gemspec
@@ -0,0 +1,27 @@
+begin
+  require_relative "lib/logger"
+rescue LoadError
+  # for Ruby core repository
+  require_relative "logger"
+end
+
+Gem::Specification.new do |spec|
+  spec.name          = "logger"
+  spec.version       = Logger::VERSION
+  spec.authors       = ["SHIBATA Hiroshi"]
+  spec.email         = ["hsbt@ruby-lang.org"]
+
+  spec.summary       = %q{Provides a simple logging utility for outputting messages.}
+  spec.description   = %q{Provides a simple logging utility for outputting messages.}
+  spec.homepage      = "https://github.com/ruby/logger"
+  spec.license       = "BSD-2-Clause"
+
+  spec.files         = [".gitignore", ".travis.yml", "Gemfile", "LICENSE.txt", "README.md", "Rakefile", "bin/console", "bin/setup", "lib/logger.rb", "logger.gemspec"]
+  spec.bindir        = "exe"
+  spec.executables   = spec.files.grep(%r{^exe/}) { |f| File.basename(f) }
+  spec.require_paths = ["lib"]
+
+  spec.add_development_dependency "bundler", "~> 1.16"
+  spec.add_development_dependency "rake", "~> 10.0"
+  spec.add_development_dependency "minitest", "~> 5.0"
+end
diff --git a/lib/ruby/stdlib/logger.rb b/lib/ruby/stdlib/logger.rb
index 56c0590f4ce..e67b21ace54 100644
--- a/lib/ruby/stdlib/logger.rb
+++ b/lib/ruby/stdlib/logger.rb
@@ -109,7 +109,7 @@
 # 3. Create a logger for the specified file.
 #
 #      file = File.open('foo.log', File::WRONLY | File::APPEND)
-#      # To create new (and to remove old) logfile, add File::CREAT like:
+#      # To create new logfile, add File::CREAT like:
 #      # file = File.open('foo.log', File::WRONLY | File::APPEND | File::CREAT)
 #      logger = Logger.new(file)
 #
@@ -224,7 +224,7 @@
 #   })
 #
 class Logger
-  VERSION = "1.2.7"
+  VERSION = "1.3.0"
   _, name, rev = %w$Id$
   if name
     name = name.chomp(",v")
@@ -479,9 +479,7 @@ def add(severity, message = nil, progname = nil)
   # device exists, return +nil+.
   #
   def <<(msg)
-    unless @logdev.nil?
-      @logdev.write(msg)
-    end
+    @logdev&.write(msg)
   end
 
   #
@@ -568,7 +566,7 @@ def unknown(progname = nil, &block)
   # Close the logging device.
   #
   def close
-    @logdev.close if @logdev
+    @logdev&.close
   end
 
 private
diff --git a/lib/ruby/stdlib/matrix.rb b/lib/ruby/stdlib/matrix.rb
index 923e716b357..7f338bb07e8 100644
--- a/lib/ruby/stdlib/matrix.rb
+++ b/lib/ruby/stdlib/matrix.rb
@@ -12,7 +12,7 @@
 # Original Documentation:: Gavin Sinclair (sourced from <i>Ruby in a Nutshell</i> (Matsumoto, O'Reilly))
 ##
 
-require "e2mmap.rb"
+require "e2mmap"
 
 module ExceptionForMatrix # :nodoc:
   extend Exception2MessageMapper
@@ -145,8 +145,8 @@ def Matrix.identity(n)
     scalar(n, 1)
   end
   class << Matrix
-    alias unit identity
-    alias I identity
+    alias_method :unit, :identity
+    alias_method :I, :identity
   end
 
   #
@@ -289,10 +289,9 @@ def initialize(rows, column_count = rows[0].size)
     @column_count = column_count
   end
 
-  def new_matrix(rows, column_count = rows[0].size) # :nodoc:
+  private def new_matrix(rows, column_count = rows[0].size) # :nodoc:
     self.class.send(:new, rows, column_count) # bypass privacy of Matrix.new
   end
-  private :new_matrix
 
   #
   # Returns element (+i+,+j+) of the matrix.  That is: row +i+, column +j+.
@@ -303,12 +302,107 @@ def [](i, j)
   alias element []
   alias component []
 
+  #
+  # :call-seq:
+  #   matrix[range, range] = matrix/element
+  #   matrix[range, integer] = vector/column_matrix/element
+  #   matrix[integer, range] = vector/row_matrix/element
+  #   matrix[integer, integer] = element
+  #
+  # Set element or elements of matrix.
   def []=(i, j, v)
-    @rows[i][j] = v
+    raise FrozenError, "can't modify frozen Matrix" if frozen?
+    rows = check_range(i, :row) or row = check_int(i, :row)
+    columns = check_range(j, :column) or column = check_int(j, :column)
+    if rows && columns
+      set_row_and_col_range(rows, columns, v)
+    elsif rows
+      set_row_range(rows, column, v)
+    elsif columns
+      set_col_range(row, columns, v)
+    else
+      set_value(row, column, v)
+    end
   end
   alias set_element []=
   alias set_component []=
-  private :[]=, :set_element, :set_component
+  private :set_element, :set_component
+
+  # Returns range or nil
+  private def check_range(val, direction)
+    return unless val.is_a?(Range)
+    count = direction == :row ? row_count : column_count
+    CoercionHelper.check_range(val, count, direction)
+  end
+
+  private def check_int(val, direction)
+    count = direction == :row ? row_count : column_count
+    CoercionHelper.check_int(val, count, direction)
+  end
+
+  private def set_value(row, col, value)
+    raise ErrDimensionMismatch, "Expected a a value, got a #{value.class}" if value.respond_to?(:to_matrix)
+
+    @rows[row][col] = value
+  end
+
+  private def set_row_and_col_range(row_range, col_range, value)
+    if value.is_a?(Matrix)
+      if row_range.size != value.row_count || col_range.size != value.column_count
+        raise ErrDimensionMismatch, [
+          'Expected a Matrix of dimensions',
+          "#{row_range.size}x#{col_range.size}",
+          'got',
+          "#{value.row_count}x#{value.column_count}",
+        ].join(' ')
+      end
+      source = value.instance_variable_get :@rows
+      row_range.each_with_index do |row, i|
+        @rows[row][col_range] = source[i]
+      end
+    elsif value.is_a?(Vector)
+      raise ErrDimensionMismatch, 'Expected a Matrix or a value, got a Vector'
+    else
+      value_to_set = Array.new(col_range.size, value)
+      row_range.each do |i|
+        @rows[i][col_range] = value_to_set
+      end
+    end
+  end
+
+  private def set_row_range(row_range, col, value)
+    if value.is_a?(Vector)
+      Matrix.Raise ErrDimensionMismatch unless row_range.size == value.size
+      set_column_vector(row_range, col, value)
+    elsif value.is_a?(Matrix)
+      Matrix.Raise ErrDimensionMismatch unless value.column_count == 1
+      value = value.column(0)
+      Matrix.Raise ErrDimensionMismatch unless row_range.size == value.size
+      set_column_vector(row_range, col, value)
+    else
+      @rows[row_range].each{|e| e[col] = value }
+    end
+  end
+
+  private def set_column_vector(row_range, col, value)
+    value.each_with_index do |e, index|
+      r = row_range.begin + index
+      @rows[r][col] = e
+    end
+  end
+
+  private def set_col_range(row, col_range, value)
+    value = if value.is_a?(Vector)
+      value.to_a
+    elsif value.is_a?(Matrix)
+      Matrix.Raise ErrDimensionMismatch unless value.row_count == 1
+      value.row(0).to_a
+    else
+      Array.new(col_range.size, value)
+    end
+    Matrix.Raise ErrDimensionMismatch unless col_range.size == value.size
+    @rows[row][col_range] = value
+  end
 
   #
   # Returns the number of rows.
@@ -361,16 +455,48 @@ def column(j) # :yield: e
   #
   # Returns a matrix that is the result of iteration of the given block over all
   # elements of the matrix.
+  # Elements can be restricted by passing an argument:
+  # * :all (default): yields all elements
+  # * :diagonal: yields only elements on the diagonal
+  # * :off_diagonal: yields all elements except on the diagonal
+  # * :lower: yields only elements on or below the diagonal
+  # * :strict_lower: yields only elements below the diagonal
+  # * :strict_upper: yields only elements above the diagonal
+  # * :upper: yields only elements on or above the diagonal
   #   Matrix[ [1,2], [3,4] ].collect { |e| e**2 }
   #     => 1  4
   #        9 16
   #
-  def collect(&block) # :yield: e
-    return to_enum(:collect) unless block_given?
-    rows = @rows.collect{|row| row.collect(&block)}
-    new_matrix rows, column_count
+  def collect(which = :all, &block) # :yield: e
+    return to_enum(:collect, which) unless block_given?
+    dup.collect!(which, &block)
+  end
+  alias_method :map, :collect
+
+  #
+  # Invokes the given block for each element of matrix, replacing the element with the value
+  # returned by the block.
+  # Elements can be restricted by passing an argument:
+  # * :all (default): yields all elements
+  # * :diagonal: yields only elements on the diagonal
+  # * :off_diagonal: yields all elements except on the diagonal
+  # * :lower: yields only elements on or below the diagonal
+  # * :strict_lower: yields only elements below the diagonal
+  # * :strict_upper: yields only elements above the diagonal
+  # * :upper: yields only elements on or above the diagonal
+  #
+  def collect!(which = :all)
+    return to_enum(:collect!, which) unless block_given?
+    raise FrozenError, "can't modify frozen Matrix" if frozen?
+    each_with_index(which){ |e, row_index, col_index| @rows[row_index][col_index] = yield e }
+  end
+
+  alias map! collect!
+
+  def freeze
+    @rows.freeze
+    super
   end
-  alias map collect
 
   #
   # Yields all elements of the matrix, starting with those of the first row,
@@ -801,6 +927,19 @@ def symmetric?
     true
   end
 
+  #
+  # Returns +true+ if this is an antisymmetric matrix.
+  # Raises an error if matrix is not square.
+  #
+  def antisymmetric?
+    Matrix.Raise ErrDimensionMismatch unless square?
+    each_with_index(:upper) do |e, row, col|
+      return false unless e == -rows[col][row]
+    end
+    true
+  end
+  alias_method :skew_symmetric?, :antisymmetric?
+
   #
   # Returns +true+ if this is a unitary matrix
   # Raises an error if matrix is not square.
@@ -853,12 +992,11 @@ def eql?(other)
   end
 
   #
-  # Returns a clone of the matrix, so that the contents of each do not reference
-  # identical objects.
-  # There should be no good reason to do this since Matrices are immutable.
+  # Called for dup & clone.
   #
-  def clone
-    new_matrix @rows.map(&:dup), column_count
+  private def initialize_copy(m)
+    super
+    @rows = @rows.map(&:dup) unless frozen?
   end
 
   #
@@ -1000,9 +1138,9 @@ def inverse
     Matrix.Raise ErrDimensionMismatch unless square?
     self.class.I(row_count).send(:inverse_from, self)
   end
-  alias inv inverse
+  alias_method :inv, :inverse
 
-  def inverse_from(src) # :nodoc:
+  private def inverse_from(src) # :nodoc:
     last = row_count - 1
     a = src.to_a
 
@@ -1045,7 +1183,6 @@ def inverse_from(src) # :nodoc:
     end
     self
   end
-  private :inverse_from
 
   #
   # Matrix exponentiation.
@@ -1152,7 +1289,7 @@ def determinant
   # with smaller bignums (if any), while a matrix of Float will usually have
   # intermediate results with better precision.
   #
-  def determinant_bareiss
+  private def determinant_bareiss
     size = row_count
     last = size - 1
     a = to_a
@@ -1178,7 +1315,6 @@ def determinant_bareiss
     end
     sign * pivot
   end
-  private :determinant_bareiss
 
   #
   # deprecated; use Matrix#determinant
@@ -1187,7 +1323,7 @@ def determinant_e
     warn "Matrix#determinant_e is deprecated; use #determinant", uplevel: 1
     determinant
   end
-  alias det_e determinant_e
+  alias_method :det_e, :determinant_e
 
   #
   # Returns a new matrix resulting by stacking horizontally
@@ -1264,7 +1400,7 @@ def trace
       tr + @rows[i][i]
     end
   end
-  alias tr trace
+  alias_method :tr, :trace
 
   #
   # Returns the transpose of the matrix.
@@ -1280,7 +1416,7 @@ def transpose
     return self.class.empty(column_count, 0) if row_count.zero?
     new_matrix @rows.transpose, row_count
   end
-  alias t transpose
+  alias_method :t, :transpose
 
   #
   # Returns a new matrix resulting by stacking vertically
@@ -1309,7 +1445,7 @@ def vstack(*matrices)
   def eigensystem
     EigenvalueDecomposition.new(self)
   end
-  alias eigen eigensystem
+  alias_method :eigen, :eigensystem
 
   #
   # Returns the LUP decomposition of the matrix; see +LUPDecomposition+.
@@ -1324,7 +1460,7 @@ def eigensystem
   def lup
     LUPDecomposition.new(self)
   end
-  alias lup_decomposition lup
+  alias_method :lup_decomposition, :lup
 
   #--
   # COMPLEX ARITHMETIC -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
@@ -1342,7 +1478,7 @@ def lup
   def conjugate
     collect(&:conjugate)
   end
-  alias conj conjugate
+  alias_method :conj, :conjugate
 
   #
   # Returns the imaginary part of the matrix.
@@ -1356,7 +1492,7 @@ def conjugate
   def imaginary
     collect(&:imaginary)
   end
-  alias imag imaginary
+  alias_method :imag, :imaginary
 
   #
   # Returns the real part of the matrix.
@@ -1380,7 +1516,7 @@ def real
   def rect
     [real, imag]
   end
-  alias rectangular rect
+  alias_method :rectangular, :rect
 
   #--
   # CONVERTING -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
@@ -1434,16 +1570,25 @@ def to_a
     @rows.collect(&:dup)
   end
 
+  # Deprecated.
+  #
+  # Use map(&:to_f)
   def elements_to_f
     warn "Matrix#elements_to_f is deprecated, use map(&:to_f)", uplevel: 1
     map(&:to_f)
   end
 
+  # Deprecated.
+  #
+  # Use map(&:to_i)
   def elements_to_i
     warn "Matrix#elements_to_i is deprecated, use map(&:to_i)", uplevel: 1
     map(&:to_i)
   end
 
+  # Deprecated.
+  #
+  # Use map(&:to_r)
   def elements_to_r
     warn "Matrix#elements_to_r is deprecated, use map(&:to_r)", uplevel: 1
     map(&:to_r)
@@ -1484,7 +1629,7 @@ module ConversionHelper # :nodoc:
     # Converts the obj to an Array. If copy is set to true
     # a copy of obj will be made if necessary.
     #
-    def convert_to_array(obj, copy = false) # :nodoc:
+    private def convert_to_array(obj, copy = false) # :nodoc:
       case obj
       when Array
         copy ? obj.dup : obj
@@ -1500,7 +1645,6 @@ def convert_to_array(obj, copy = false) # :nodoc:
         converted
       end
     end
-    private :convert_to_array
   end
 
   extend ConversionHelper
@@ -1510,14 +1654,13 @@ module CoercionHelper # :nodoc:
     # Applies the operator +oper+ with argument +obj+
     # through coercion of +obj+
     #
-    def apply_through_coercion(obj, oper)
+    private def apply_through_coercion(obj, oper)
       coercion = obj.coerce(self)
       raise TypeError unless coercion.is_a?(Array) && coercion.length == 2
       coercion[0].public_send(oper, coercion[1])
     rescue
       raise TypeError, "#{obj.inspect} can't be coerced into #{self.class}"
     end
-    private :apply_through_coercion
 
     #
     # Helper method to coerce a value into a specific class.
@@ -1545,6 +1688,26 @@ def self.coerce_to_int(obj)
     def self.coerce_to_matrix(obj)
       coerce_to(obj, Matrix, :to_matrix)
     end
+
+    # Returns `nil` for non Ranges
+    # Checks range validity, return canonical range with 0 <= begin <= end < count
+    def self.check_range(val, count, kind)
+      canonical = (val.begin + (val.begin < 0 ? count : 0))..
+                  (val.end ? val.end + (val.end < 0 ? count : 0) - (val.exclude_end? ? 1 : 0)
+                           : count - 1)
+      unless 0 <= canonical.begin && canonical.begin <= canonical.end && canonical.end < count
+        raise IndexError, "given range #{val} is outside of #{kind} dimensions: 0...#{count}"
+      end
+      canonical
+    end
+
+    def self.check_int(val, count, kind)
+      val = CoercionHelper.coerce_to_int(val)
+      if val >= count || val < -count
+        raise IndexError, "given #{kind} #{val} is outside of #{-count}...#{count}"
+      end
+      val
+    end
   end
 
   include CoercionHelper
@@ -1639,6 +1802,9 @@ def **(other)
 # To access elements:
 # * #[](i)
 #
+# To set elements:
+# * #[]=(i, v)
+#
 # To enumerate the elements:
 # * #each2(v)
 # * #collect2(v)
@@ -1661,8 +1827,10 @@ def **(other)
 # * #inner_product(v), dot(v)
 # * #cross_product(v), cross(v)
 # * #collect
+# * #collect!
 # * #magnitude
 # * #map
+# * #map!
 # * #map2(v)
 # * #norm
 # * #normalize
@@ -1741,7 +1909,11 @@ def initialize(array)
   # ACCESSING
 
   #
-  # Returns element number +i+ (starting at zero) of the vector.
+  # :call-seq:
+  #   vector[range]
+  #   vector[integer]
+  #
+  # Returns element or elements of the vector.
   #
   def [](i)
     @elements[i]
@@ -1749,12 +1921,44 @@ def [](i)
   alias element []
   alias component []
 
+  #
+  # :call-seq:
+  #   vector[range] = new_vector
+  #   vector[range] = row_matrix
+  #   vector[range] = new_element
+  #   vector[integer] = new_element
+  #
+  # Set element or elements of vector.
+  #
   def []=(i, v)
-    @elements[i]= v
+    raise FrozenError, "can't modify frozen Vector" if frozen?
+    if i.is_a?(Range)
+      range = Matrix::CoercionHelper.check_range(i, size, :vector)
+      set_range(range, v)
+    else
+      index = Matrix::CoercionHelper.check_int(i, size, :index)
+      set_value(index, v)
+    end
   end
   alias set_element []=
   alias set_component []=
-  private :[]=, :set_element, :set_component
+  private :set_element, :set_component
+
+  private def set_value(index, value)
+    @elements[index] = value
+  end
+
+  private def set_range(range, value)
+    if value.is_a?(Vector)
+      raise ArgumentError, "vector to be set has wrong size" unless range.size == value.size
+      @elements[range] = value.elements
+    elsif value.is_a?(Matrix)
+      Matrix.Raise ErrDimensionMismatch unless value.row_count == 1
+      @elements[range] = value.row(0).elements
+    else
+      @elements[range] = Array.new(range.size, value)
+    end
+  end
 
   # Returns a vector with entries rounded to the given precision
   # (see Float#round)
@@ -1851,6 +2055,20 @@ def zero?
     all?(&:zero?)
   end
 
+  def freeze
+    @elements.freeze
+    super
+  end
+
+  #
+  # Called for dup & clone.
+  #
+  private def initialize_copy(v)
+    super
+    @elements = @elements.dup unless frozen?
+  end
+
+
   #--
   # COMPARING -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
   #++
@@ -1868,13 +2086,6 @@ def eql?(other)
     @elements.eql? other.elements
   end
 
-  #
-  # Returns a copy of the vector.
-  #
-  def clone
-    self.class.elements(@elements)
-  end
-
   #
   # Returns a hash-code for the vector.
   #
@@ -2023,7 +2234,18 @@ def collect(&block) # :yield: e
     els = @elements.collect(&block)
     self.class.elements(els, false)
   end
-  alias map collect
+  alias_method :map, :collect
+
+  #
+  # Like Array#collect!
+  #
+  def collect!(&block)
+    return to_enum(:collect!) unless block_given?
+    raise FrozenError, "can't modify frozen Vector" if frozen?
+    @elements.collect!(&block)
+    self
+  end
+  alias map! collect!
 
   #
   # Returns the modulus (Pythagorean distance) of the vector.
@@ -2032,8 +2254,8 @@ def collect(&block) # :yield: e
   def magnitude
     Math.sqrt(@elements.inject(0) {|v, e| v + e.abs2})
   end
-  alias r magnitude
-  alias norm magnitude
+  alias_method :r, :magnitude
+  alias_method :norm, :magnitude
 
   #
   # Like Vector#collect2, but returns a Vector instead of an Array.
@@ -2059,7 +2281,7 @@ def normalize
   end
 
   #
-  # Returns an angle with another vector. Result is within the [0...Math::PI].
+  # Returns an angle with another vector. Result is within the [0..Math::PI].
   #   Vector[1,0].angle_with(Vector[0,1])
   #   # => Math::PI / 2
   #
@@ -2068,8 +2290,12 @@ def angle_with(v)
     Vector.Raise ErrDimensionMismatch if size != v.size
     prod = magnitude * v.magnitude
     raise ZeroVectorError, "Can't get angle of zero vector" if prod == 0
-
-    Math.acos( inner_product(v) / prod )
+    dot = inner_product(v)
+    if dot.abs >= prod
+      dot.positive? ? 0 : Math::PI
+    else
+      Math.acos(dot / prod)
+    end
   end
 
   #--
diff --git a/lib/ruby/stdlib/matrix/eigenvalue_decomposition.rb b/lib/ruby/stdlib/matrix/eigenvalue_decomposition.rb
index 919db9e83d2..bf6637635a2 100644
--- a/lib/ruby/stdlib/matrix/eigenvalue_decomposition.rb
+++ b/lib/ruby/stdlib/matrix/eigenvalue_decomposition.rb
@@ -43,7 +43,7 @@ def initialize(a)
     def eigenvector_matrix
       Matrix.send(:new, build_eigenvectors.transpose)
     end
-    alias v eigenvector_matrix
+    alias_method :v, :eigenvector_matrix
 
     # Returns the inverse of the eigenvector matrix +V+
     #
@@ -52,7 +52,7 @@ def eigenvector_matrix_inv
       r = r.transpose.inverse unless @symmetric
       r
     end
-    alias v_inv eigenvector_matrix_inv
+    alias_method :v_inv, :eigenvector_matrix_inv
 
     # Returns the eigenvalues in an array
     #
@@ -73,7 +73,7 @@ def eigenvectors
     def eigenvalue_matrix
       Matrix.diagonal(*eigenvalues)
     end
-    alias d eigenvalue_matrix
+    alias_method :d, :eigenvalue_matrix
 
     # Returns [eigenvector_matrix, eigenvalue_matrix, eigenvector_matrix_inv]
     #
@@ -82,8 +82,8 @@ def to_ary
     end
     alias_method :to_a, :to_ary
 
-  private
-    def build_eigenvectors
+
+    private def build_eigenvectors
       # JAMA stores complex eigenvectors in a strange way
       # See http://web.archive.org/web/20111016032731/http://cio.nist.gov/esd/emaildir/lists/jama/msg01021.html
       @e.each_with_index.map do |imag, i|
@@ -96,9 +96,10 @@ def build_eigenvectors
         end
       end
     end
+
     # Complex scalar division.
 
-    def cdiv(xr, xi, yr, yi)
+    private def cdiv(xr, xi, yr, yi)
       if (yr.abs > yi.abs)
         r = yi/yr
         d = yr + r*yi
@@ -113,7 +114,7 @@ def cdiv(xr, xi, yr, yi)
 
     # Symmetric Householder reduction to tridiagonal form.
 
-    def tridiagonalize
+    private def tridiagonalize
 
       #  This is derived from the Algol procedures tred2 by
       #  Bowdler, Martin, Reinsch, and Wilkinson, Handbook for
@@ -231,7 +232,7 @@ def tridiagonalize
 
     # Symmetric tridiagonal QL algorithm.
 
-    def diagonalize
+    private def diagonalize
       #  This is derived from the Algol procedures tql2, by
       #  Bowdler, Martin, Reinsch, and Wilkinson, Handbook for
       #  Auto. Comp., Vol.ii-Linear Algebra, and the corresponding
@@ -350,7 +351,7 @@ def diagonalize
 
     # Nonsymmetric reduction to Hessenberg form.
 
-    def reduce_to_hessenberg
+    private def reduce_to_hessenberg
       #  This is derived from the Algol procedures orthes and ortran,
       #  by Martin and Wilkinson, Handbook for Auto. Comp.,
       #  Vol.ii-Linear Algebra, and the corresponding
@@ -440,11 +441,9 @@ def reduce_to_hessenberg
       end
     end
 
-
-
     # Nonsymmetric reduction from Hessenberg to real Schur form.
 
-    def hessenberg_to_real_schur
+    private def hessenberg_to_real_schur
 
       #  This is derived from the Algol procedure hqr2,
       #  by Martin and Wilkinson, Handbook for Auto. Comp.,
diff --git a/lib/ruby/stdlib/matrix/matrix.gemspec b/lib/ruby/stdlib/matrix/matrix.gemspec
new file mode 100644
index 00000000000..71f03718562
--- /dev/null
+++ b/lib/ruby/stdlib/matrix/matrix.gemspec
@@ -0,0 +1,21 @@
+# frozen_string_literal: true
+
+Gem::Specification.new do |spec|
+  spec.name          = "matrix"
+  spec.version       = "0.1.0"
+  spec.authors       = ["Marc-Andre Lafortune"]
+  spec.email         = ["ruby-core@marc-andre.ca"]
+
+  spec.summary       = %q{An implementation of Matrix and Vector classes.}
+  spec.description   = %q{An implementation of Matrix and Vector classes.}
+  spec.homepage      = "https://github.com/ruby/matrix"
+  spec.license       = "BSD-2-Clause"
+
+  spec.files         = [".gitignore", ".travis.yml", "Gemfile", "LICENSE.txt", "README.md", "Rakefile", "bin/console", "bin/setup", "lib/matrix.rb", "matrix.gemspec"]
+  spec.bindir        = "exe"
+  spec.executables   = spec.files.grep(%r{^exe/}) { |f| File.basename(f) }
+  spec.require_paths = ["lib"]
+
+  spec.add_development_dependency "bundler"
+  spec.add_development_dependency "rake"
+end
diff --git a/lib/ruby/stdlib/monitor.rb b/lib/ruby/stdlib/monitor.rb
index e99cbd4baa0..64b1f85e7c8 100644
--- a/lib/ruby/stdlib/monitor.rb
+++ b/lib/ruby/stdlib/monitor.rb
@@ -230,7 +230,7 @@ def mon_owned?
   def mon_synchronize
     # Prevent interrupt on handling interrupts; for example timeout errors
     # it may break locking state.
-    Thread.handle_interrupt(Exception => :never){ mon_enter }
+    Thread.handle_interrupt(EXCEPTION_NEVER){ mon_enter }
     begin
       yield
     ensure
@@ -260,9 +260,13 @@ def initialize(*args)
   # Initializes the MonitorMixin after being included in a class or when an
   # object has been extended with the MonitorMixin
   def mon_initialize
+    if defined?(@mon_mutex) && @mon_mutex_owner_object_id == object_id
+      raise ThreadError, "already initialized"
+    end
+    @mon_mutex = Thread::Mutex.new
+    @mon_mutex_owner_object_id = object_id
     @mon_owner = nil
     @mon_count = 0
-    @mon_mutex = Thread::Mutex.new
   end
 
   def mon_check_owner
diff --git a/lib/ruby/stdlib/mutex_m.rb b/lib/ruby/stdlib/mutex_m.rb
index 592e3842c88..dd47934beab 100644
--- a/lib/ruby/stdlib/mutex_m.rb
+++ b/lib/ruby/stdlib/mutex_m.rb
@@ -25,16 +25,23 @@
 #   obj.extend Mutex_m
 #
 # Or mixin Mutex_m into your module to your class inherit Mutex instance
-# methods.
+# methods --- remember to call super() in your class initialize method.
 #
 #   class Foo
 #     include Mutex_m
+#     def initialize
+#       # ...
+#       super()
+#     end
 #     # ...
 #   end
 #   obj = Foo.new
 #   # this obj can be handled like Mutex
 #
 module Mutex_m
+
+  VERSION = "0.1.0"
+
   def Mutex_m.define_aliases(cl) # :nodoc:
     cl.module_eval %q{
       alias locked? mu_locked?
diff --git a/lib/ruby/stdlib/net/ftp.rb b/lib/ruby/stdlib/net/ftp.rb
index c3ee47ef4d3..e68d825dcf5 100644
--- a/lib/ruby/stdlib/net/ftp.rb
+++ b/lib/ruby/stdlib/net/ftp.rb
@@ -17,7 +17,7 @@
 
 require "socket"
 require "monitor"
-require "net/protocol"
+require_relative "protocol"
 require "time"
 begin
   require "openssl"
@@ -230,6 +230,10 @@ def initialize(host = nil, user_or_options = {}, passwd = nil, acct = nil)
         if defined?(VerifyCallbackProc)
           @ssl_context.verify_callback = VerifyCallbackProc
         end
+        @ssl_context.session_cache_mode =
+          OpenSSL::SSL::SSLContext::SESSION_CACHE_CLIENT |
+          OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_INTERNAL_STORE
+        @ssl_context.session_new_cb = proc {|sock, sess| @ssl_session = sess }
         @ssl_session = nil
         if options[:private_data_connection].nil?
           @private_data_connection = true
@@ -349,7 +353,6 @@ def start_tls_session(sock)
       if @ssl_context.verify_mode != VERIFY_NONE
         ssl_sock.post_connection_check(@host)
       end
-      @ssl_session = ssl_sock.session
       return ssl_sock
     end
     private :start_tls_session
diff --git a/lib/ruby/stdlib/net/http.rb b/lib/ruby/stdlib/net/http.rb
index 5e35db77af7..6975ac7c239 100644
--- a/lib/ruby/stdlib/net/http.rb
+++ b/lib/ruby/stdlib/net/http.rb
@@ -35,7 +35,7 @@ class HTTPHeaderSyntaxError < StandardError; end
   #
   # Net::HTTP provides a rich library which can be used to build HTTP
   # user-agents.  For more details about HTTP see
-  # [RFC2616](http://www.ietf.org/rfc/rfc2616.txt)
+  # [RFC2616](http://www.ietf.org/rfc/rfc2616.txt).
   #
   # Net::HTTP is designed to work closely with URI.  URI::HTTP#host,
   # URI::HTTP#port and URI::HTTP#request_uri are designed to work with
@@ -87,7 +87,7 @@ class HTTPHeaderSyntaxError < StandardError; end
   #
   # == How to use Net::HTTP
   #
-  # The following example code can be used as the basis of a HTTP user-agent
+  # The following example code can be used as the basis of an HTTP user-agent
   # which can perform a variety of request types using persistent
   # connections.
   #
@@ -104,14 +104,13 @@ class HTTPHeaderSyntaxError < StandardError; end
   # open for multiple requests in the block if the server indicates it
   # supports persistent connections.
   #
+  # If you wish to re-use a connection across multiple HTTP requests without
+  # automatically closing it you can use ::new and then call #start and
+  # #finish manually.
+  #
   # The request types Net::HTTP supports are listed below in the section "HTTP
   # Request Classes".
   #
-  # If you wish to re-use a connection across multiple HTTP requests without
-  # automatically closing it you can use ::new instead of ::start.  #request
-  # will automatically open a connection to the server if one is not currently
-  # open.  You can manually close the connection with #finish.
-  #
   # For all the Net::HTTP request objects and shortcut request methods you may
   # supply either a String for the request path or a URI from which Net::HTTP
   # will extract the request path.
@@ -170,7 +169,7 @@ class HTTPHeaderSyntaxError < StandardError; end
   # === POST
   #
   # A POST can be made using the Net::HTTP::Post request class.  This example
-  # creates a urlencoded POST body:
+  # creates a URL encoded POST body:
   #
   #   uri = URI('http://www.example.com/todo.cgi')
   #   req = Net::HTTP::Post.new(uri)
@@ -187,13 +186,10 @@ class HTTPHeaderSyntaxError < StandardError; end
   #     res.value
   #   end
   #
-  # At this time Net::HTTP does not support multipart/form-data.  To send
-  # multipart/form-data use Net::HTTPRequest#body= and
-  # Net::HTTPRequest#content_type=:
+  # To send multipart/form-data use Net::HTTPHeader#set_form:
   #
   #   req = Net::HTTP::Post.new(uri)
-  #   req.body = multipart_data
-  #   req.content_type = 'multipart/form-data'
+  #   req.set_form([['upload', File.open('foo.bar')]], 'multipart/form-data')
   #
   # Other requests that can contain a body such as PUT can be created in the
   # same way using the corresponding request class (Net::HTTP::Put).
@@ -222,7 +218,7 @@ class HTTPHeaderSyntaxError < StandardError; end
   # === Basic Authentication
   #
   # Basic authentication is performed according to
-  # [RFC2617](http://www.ietf.org/rfc/rfc2617.txt)
+  # [RFC2617](http://www.ietf.org/rfc/rfc2617.txt).
   #
   #   uri = URI('http://example.com/index.html?key=value')
   #
@@ -266,7 +262,7 @@ class HTTPHeaderSyntaxError < StandardError; end
   #   end
   #
   # Or if you simply want to make a GET request, you may pass in an URI
-  # object that has a HTTPS URL. Net::HTTP automatically turn on TLS
+  # object that has an HTTPS URL. Net::HTTP automatically turns on TLS
   # verification if the URI object has a 'https' URI scheme.
   #
   #   uri = URI('https://example.com/')
@@ -576,7 +572,7 @@ def HTTP.socket_type   #:nodoc: obsolete
     #
     # _opt_ sets following values by its accessor.
     # The keys are ca_file, ca_path, cert, cert_store, ciphers,
-    # close_on_empty_response, key, open_timeout, read_timeout, ssl_timeout,
+    # close_on_empty_response, key, open_timeout, read_timeout, write_timeout, ssl_timeout,
     # ssl_version, use_ssl, verify_callback, verify_depth and verify_mode.
     # If you set :use_ssl as true, you can use https and default value of
     # verify_mode is set as OpenSSL::SSL::VERIFY_PEER.
@@ -678,6 +674,7 @@ def initialize(address, port = nil)
       @started = false
       @open_timeout = 60
       @read_timeout = 60
+      @write_timeout = 60
       @continue_timeout = nil
       @max_retries = 1
       @debug_output = nil
@@ -746,6 +743,13 @@ def set_debug_output(output)
     # it raises a Net::ReadTimeout exception. The default value is 60 seconds.
     attr_reader :read_timeout
 
+    # Number of seconds to wait for one block to be written (via one write(2)
+    # call). Any number may be used, including Floats for fractional
+    # seconds. If the HTTP object cannot write data in this many seconds,
+    # it raises a Net::WriteTimeout exception. The default value is 60 seconds.
+    # Net::WriteTimeout is not raised on Windows.
+    attr_reader :write_timeout
+
     # Maximum number of times to retry an idempotent request in case of
     # Net::ReadTimeout, IOError, EOFError, Errno::ECONNRESET,
     # Errno::ECONNABORTED, Errno::EPIPE, OpenSSL::SSL::SSLError,
@@ -768,6 +772,12 @@ def read_timeout=(sec)
       @read_timeout = sec
     end
 
+    # Setter for the write_timeout attribute.
+    def write_timeout=(sec)
+      @socket.write_timeout = sec if @socket
+      @write_timeout = sec
+    end
+
     # Seconds to wait for 100 Continue response. If the HTTP object does not
     # receive a response in this many seconds it sends the request body. The
     # default value is +nil+.
@@ -949,6 +959,7 @@ def connect
       if use_ssl?
         if proxy?
           plain_sock = BufferedIO.new(s, read_timeout: @read_timeout,
+                                      write_timeout: @write_timeout,
                                       continue_timeout: @continue_timeout,
                                       debug_output: @debug_output)
           buf = "CONNECT #{@address}:#{@port} HTTP/#{HTTPVersion}\r\n"
@@ -973,6 +984,10 @@ def connect
         end
         @ssl_context = OpenSSL::SSL::SSLContext.new
         @ssl_context.set_params(ssl_parameters)
+        @ssl_context.session_cache_mode =
+          OpenSSL::SSL::SSLContext::SESSION_CACHE_CLIENT |
+          OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_INTERNAL_STORE
+        @ssl_context.session_new_cb = proc {|sock, sess| @ssl_session = sess }
         D "starting SSL for #{conn_address}:#{conn_port}..."
         s = OpenSSL::SSL::SSLSocket.new(s, @ssl_context)
         s.sync_close = true
@@ -980,17 +995,16 @@ def connect
         s.hostname = @address if s.respond_to? :hostname=
         if @ssl_session and
            Process.clock_gettime(Process::CLOCK_REALTIME) < @ssl_session.time.to_f + @ssl_session.timeout
-          s.session = @ssl_session if @ssl_session
+          s.session = @ssl_session
         end
         ssl_socket_connect(s, @open_timeout)
         if @ssl_context.verify_mode != OpenSSL::SSL::VERIFY_NONE
           s.post_connection_check(@address)
         end
-        # OpenSSL::SSL::Session somehow works but SSLSocket#session= does nothing with JRuby-OpenSSL
-        #@ssl_session = s.session
-        D "SSL established"
+        D "SSL established, protocol: #{s.ssl_version}, cipher: #{s.cipher[0]}"
       end
       @socket = BufferedIO.new(s, read_timeout: @read_timeout,
+                               write_timeout: @write_timeout,
                                continue_timeout: @continue_timeout,
                                debug_output: @debug_output)
       on_connect
diff --git a/lib/ruby/stdlib/net/http/exceptions.rb b/lib/ruby/stdlib/net/http/exceptions.rb
index 0d345266167..da5f7a70fc3 100644
--- a/lib/ruby/stdlib/net/http/exceptions.rb
+++ b/lib/ruby/stdlib/net/http/exceptions.rb
@@ -20,7 +20,14 @@ class Net::HTTPServerException < Net::ProtoServerError
   # We cannot use the name "HTTPServerError", it is the name of the response.
   include Net::HTTPExceptions
 end
+
+# for compatibility
+Net::HTTPClientException = Net::HTTPServerException
+
 class Net::HTTPFatalError < Net::ProtoFatalError
   include Net::HTTPExceptions
 end
 
+module Net
+  deprecate_constant(:HTTPServerException)
+end
diff --git a/lib/ruby/stdlib/net/http/generic_request.rb b/lib/ruby/stdlib/net/http/generic_request.rb
index 526cc333fc7..3ff6d88f0c3 100644
--- a/lib/ruby/stdlib/net/http/generic_request.rb
+++ b/lib/ruby/stdlib/net/http/generic_request.rb
@@ -14,6 +14,8 @@ def initialize(m, reqbody, resbody, uri_or_path, initheader = nil)
     @response_has_body = resbody
 
     if URI === uri_or_path then
+      raise ArgumentError, "not an HTTP URI" unless URI::HTTP === uri_or_path
+      raise ArgumentError, "no host component for URI" unless uri_or_path.hostname
       @uri = uri_or_path.dup
       host = @uri.hostname.dup
       host << ":".freeze << @uri.port.to_s if @uri.port != @uri.default_port
@@ -168,9 +170,8 @@ def initialize(sock)
 
     def write(buf)
       # avoid memcpy() of buf, buf can huge and eat memory bandwidth
-      @sock.write("#{buf.bytesize.to_s(16)}\r\n")
-      rv = @sock.write(buf)
-      @sock.write("\r\n")
+      rv = buf.bytesize
+      @sock.write("#{rv.to_s(16)}\r\n", buf, "\r\n")
       rv
     end
 
diff --git a/lib/ruby/stdlib/net/http/header.rb b/lib/ruby/stdlib/net/http/header.rb
index 96d898c89fc..7865814208a 100644
--- a/lib/ruby/stdlib/net/http/header.rb
+++ b/lib/ruby/stdlib/net/http/header.rb
@@ -20,9 +20,9 @@ def initialize_http_header(initheader)
       else
         value = value.strip # raise error for invalid byte sequences
         if value.count("\r\n") > 0
-          raise ArgumentError, 'header field value cannot include CR/LF'
+          raise ArgumentError, "header #{key} has field value #{value.inspect}, this cannot include CR/LF"
         end
-        @header[key.downcase] = [value]
+        @header[key.downcase.to_s] = [value]
       end
     end
   end
@@ -36,14 +36,14 @@ def size   #:nodoc: obsolete
   # Returns the header field corresponding to the case-insensitive key.
   # For example, a key of "Content-Type" might return "text/html"
   def [](key)
-    a = @header[key.downcase] or return nil
+    a = @header[key.downcase.to_s] or return nil
     a.join(', ')
   end
 
   # Sets the header field corresponding to the case-insensitive key.
   def []=(key, val)
     unless val
-      @header.delete key.downcase
+      @header.delete key.downcase.to_s
       return val
     end
     set_field(key, val)
@@ -65,8 +65,9 @@ def []=(key, val)
   #   p request.get_fields('X-My-Header')   #=> ["a", "b", "c"]
   #
   def add_field(key, val)
-    if @header.key?(key.downcase)
-      append_field_value(@header[key.downcase], val)
+    stringified_downcased_key = key.downcase.to_s
+    if @header.key?(stringified_downcased_key)
+      append_field_value(@header[stringified_downcased_key], val)
     else
       set_field(key, val)
     end
@@ -77,13 +78,13 @@ def add_field(key, val)
     when Enumerable
       ary = []
       append_field_value(ary, val)
-      @header[key.downcase] = ary
+      @header[key.downcase.to_s] = ary
     else
       val = val.to_s # for compatibility use to_s instead of to_str
       if val.b.count("\r\n") > 0
         raise ArgumentError, 'header field value cannot include CR/LF'
       end
-      @header[key.downcase] = [val]
+      @header[key.downcase.to_s] = [val]
     end
   end
 
@@ -112,8 +113,9 @@ def add_field(key, val)
   #     #=> "session=al98axx; expires=Fri, 31-Dec-1999 23:58:23, query=rubyscript; expires=Fri, 31-Dec-1999 23:58:23"
   #
   def get_fields(key)
-    return nil unless @header[key.downcase]
-    @header[key.downcase].dup
+    stringified_downcased_key = key.downcase.to_s
+    return nil unless @header[stringified_downcased_key]
+    @header[stringified_downcased_key].dup
   end
 
   # Returns the header field corresponding to the case-insensitive key.
@@ -121,7 +123,7 @@ def get_fields(key)
   # raises an IndexError if there's no header field named +key+
   # See Hash#fetch
   def fetch(key, *args, &block)   #:yield: +key+
-    a = @header.fetch(key.downcase, *args, &block)
+    a = @header.fetch(key.downcase.to_s, *args, &block)
     a.kind_of?(Array) ? a.join(', ') : a
   end
 
@@ -182,12 +184,12 @@ def each_value   #:yield: +value+
 
   # Removes a header field, specified by case-insensitive key.
   def delete(key)
-    @header.delete(key.downcase)
+    @header.delete(key.downcase.to_s)
   end
 
   # true if +key+ header exists.
   def key?(key)
-    @header.key?(key.downcase)
+    @header.key?(key.downcase.to_s)
   end
 
   # Returns a Hash consisting of header names and array of values.
diff --git a/lib/ruby/stdlib/net/http/response.rb b/lib/ruby/stdlib/net/http/response.rb
index 6a78272ac8c..66132985d9c 100644
--- a/lib/ruby/stdlib/net/http/response.rb
+++ b/lib/ruby/stdlib/net/http/response.rb
@@ -380,6 +380,7 @@ def inflate_adapter(dest)
       end
       block = proc do |compressed_chunk|
         @inflate.inflate(compressed_chunk) do |chunk|
+          compressed_chunk.clear
           dest << chunk
         end
       end
diff --git a/lib/ruby/stdlib/net/http/responses.rb b/lib/ruby/stdlib/net/http/responses.rb
index c4259e1a021..50352032df5 100644
--- a/lib/ruby/stdlib/net/http/responses.rb
+++ b/lib/ruby/stdlib/net/http/responses.rb
@@ -1,4 +1,4 @@
-# frozen_string_literal: false
+# frozen_string_literal: true
 # :stopdoc:
 # https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
 class Net::HTTPUnknownResponse < Net::HTTPResponse
@@ -19,7 +19,7 @@ class Net::HTTPRedirection < Net::HTTPResponse           # 3xx
 end
 class Net::HTTPClientError < Net::HTTPResponse           # 4xx
   HAS_BODY = true
-  EXCEPTION_TYPE = Net::HTTPServerException   # for backward compatibility
+  EXCEPTION_TYPE = Net::HTTPClientException   # for backward compatibility
 end
 class Net::HTTPServerError < Net::HTTPResponse           # 5xx
   HAS_BODY = true
@@ -35,6 +35,9 @@ class Net::HTTPSwitchProtocol < Net::HTTPInformation     # 101
 class Net::HTTPProcessing < Net::HTTPInformation         # 102
   HAS_BODY = false
 end
+class Net::HTTPEarlyHints < Net::HTTPInformation         # 103 - RFC 8297
+  HAS_BODY = false
+end
 
 class Net::HTTPOK < Net::HTTPSuccess                            # 200
   HAS_BODY = true
@@ -119,9 +122,10 @@ class Net::HTTPNotAcceptable < Net::HTTPClientError                 # 406
 class Net::HTTPProxyAuthenticationRequired < Net::HTTPClientError   # 407
   HAS_BODY = true
 end
-class Net::HTTPRequestTimeOut < Net::HTTPClientError                # 408
+class Net::HTTPRequestTimeout < Net::HTTPClientError                # 408
   HAS_BODY = true
 end
+Net::HTTPRequestTimeOut = Net::HTTPRequestTimeout
 class Net::HTTPConflict < Net::HTTPClientError                      # 409
   HAS_BODY = true
 end
@@ -134,19 +138,22 @@ class Net::HTTPLengthRequired < Net::HTTPClientError                # 411
 class Net::HTTPPreconditionFailed < Net::HTTPClientError            # 412
   HAS_BODY = true
 end
-class Net::HTTPRequestEntityTooLarge < Net::HTTPClientError         # 413
+class Net::HTTPPayloadTooLarge < Net::HTTPClientError               # 413
   HAS_BODY = true
 end
-class Net::HTTPRequestURITooLong < Net::HTTPClientError             # 414
+Net::HTTPRequestEntityTooLarge = Net::HTTPPayloadTooLarge
+class Net::HTTPURITooLong < Net::HTTPClientError                    # 414
   HAS_BODY = true
 end
+Net::HTTPRequestURITooLong = Net::HTTPURITooLong
 Net::HTTPRequestURITooLarge = Net::HTTPRequestURITooLong
 class Net::HTTPUnsupportedMediaType < Net::HTTPClientError          # 415
   HAS_BODY = true
 end
-class Net::HTTPRequestedRangeNotSatisfiable < Net::HTTPClientError  # 416
+class Net::HTTPRangeNotSatisfiable < Net::HTTPClientError           # 416
   HAS_BODY = true
 end
+Net::HTTPRequestedRangeNotSatisfiable = Net::HTTPRangeNotSatisfiable
 class Net::HTTPExpectationFailed < Net::HTTPClientError             # 417
   HAS_BODY = true
 end
@@ -197,9 +204,10 @@ class Net::HTTPBadGateway < Net::HTTPServerError                    # 502
 class Net::HTTPServiceUnavailable < Net::HTTPServerError            # 503
   HAS_BODY = true
 end
-class Net::HTTPGatewayTimeOut < Net::HTTPServerError                # 504
+class Net::HTTPGatewayTimeout < Net::HTTPServerError                # 504
   HAS_BODY = true
 end
+Net::HTTPGatewayTimeOut = Net::HTTPGatewayTimeout
 class Net::HTTPVersionNotSupported < Net::HTTPServerError           # 505
   HAS_BODY = true
 end
@@ -232,6 +240,7 @@ class Net::HTTPResponse
     '100' => Net::HTTPContinue,
     '101' => Net::HTTPSwitchProtocol,
     '102' => Net::HTTPProcessing,
+    '103' => Net::HTTPEarlyHints,
 
     '200' => Net::HTTPOK,
     '201' => Net::HTTPCreated,
@@ -261,15 +270,15 @@ class Net::HTTPResponse
     '405' => Net::HTTPMethodNotAllowed,
     '406' => Net::HTTPNotAcceptable,
     '407' => Net::HTTPProxyAuthenticationRequired,
-    '408' => Net::HTTPRequestTimeOut,
+    '408' => Net::HTTPRequestTimeout,
     '409' => Net::HTTPConflict,
     '410' => Net::HTTPGone,
     '411' => Net::HTTPLengthRequired,
     '412' => Net::HTTPPreconditionFailed,
-    '413' => Net::HTTPRequestEntityTooLarge,
-    '414' => Net::HTTPRequestURITooLong,
+    '413' => Net::HTTPPayloadTooLarge,
+    '414' => Net::HTTPURITooLong,
     '415' => Net::HTTPUnsupportedMediaType,
-    '416' => Net::HTTPRequestedRangeNotSatisfiable,
+    '416' => Net::HTTPRangeNotSatisfiable,
     '417' => Net::HTTPExpectationFailed,
     '421' => Net::HTTPMisdirectedRequest,
     '422' => Net::HTTPUnprocessableEntity,
@@ -285,7 +294,7 @@ class Net::HTTPResponse
     '501' => Net::HTTPNotImplemented,
     '502' => Net::HTTPBadGateway,
     '503' => Net::HTTPServiceUnavailable,
-    '504' => Net::HTTPGatewayTimeOut,
+    '504' => Net::HTTPGatewayTimeout,
     '505' => Net::HTTPVersionNotSupported,
     '506' => Net::HTTPVariantAlsoNegotiates,
     '507' => Net::HTTPInsufficientStorage,
@@ -296,4 +305,3 @@ class Net::HTTPResponse
 end
 
 # :startdoc:
-
diff --git a/lib/ruby/stdlib/net/http/status.rb b/lib/ruby/stdlib/net/http/status.rb
index c7a4c0cee31..b3995f763f1 100644
--- a/lib/ruby/stdlib/net/http/status.rb
+++ b/lib/ruby/stdlib/net/http/status.rb
@@ -1,7 +1,7 @@
 #!/usr/bin/env ruby
 # frozen_string_literal: true
 
-require 'net/http'
+require_relative '../http'
 
 if $0 == __FILE__
   require 'open-uri'
@@ -24,6 +24,7 @@
   100 => 'Continue',
   101 => 'Switching Protocols',
   102 => 'Processing',
+  103 => 'Early Hints',
   200 => 'OK',
   201 => 'Created',
   202 => 'Accepted',
diff --git a/lib/ruby/stdlib/net/https.rb b/lib/ruby/stdlib/net/https.rb
index 58cb6ddf192..d46721c82a5 100644
--- a/lib/ruby/stdlib/net/https.rb
+++ b/lib/ruby/stdlib/net/https.rb
@@ -19,5 +19,5 @@
 
 =end
 
-require 'net/http'
+require_relative 'http'
 require 'openssl'
diff --git a/lib/ruby/stdlib/net/imap.rb b/lib/ruby/stdlib/net/imap.rb
index da7d0d555cb..1c7e89ba145 100644
--- a/lib/ruby/stdlib/net/imap.rb
+++ b/lib/ruby/stdlib/net/imap.rb
@@ -18,7 +18,7 @@
 require "monitor"
 require "digest/md5"
 require "strscan"
-require 'net/protocol'
+require_relative 'protocol'
 begin
   require "openssl"
 rescue LoadError
@@ -999,7 +999,7 @@ def idle_done
     def self.decode_utf7(s)
       return s.gsub(/&([^-]+)?-/n) {
         if $1
-          ($1.tr(",", "/") + "===").unpack("m")[0].encode(Encoding::UTF_8, Encoding::UTF_16BE)
+          ($1.tr(",", "/") + "===").unpack1("m").encode(Encoding::UTF_8, Encoding::UTF_16BE)
         else
           "&"
         end
@@ -1129,7 +1129,9 @@ def initialize(host, port_or_options = {},
     end
 
     def tcp_socket(host, port)
-      Socket.tcp(host, port, :connect_timeout => @open_timeout)
+      s = Socket.tcp(host, port, :connect_timeout => @open_timeout)
+      s.setsockopt(:SOL_SOCKET, :SO_KEEPALIVE, true)
+      s
     rescue Errno::ETIMEDOUT
       raise Net::OpenTimeout, "Timeout to open TCP connection to " +
         "#{host}:#{port} (exceeds #{@open_timeout} seconds)"
diff --git a/lib/ruby/stdlib/net/pop.rb b/lib/ruby/stdlib/net/pop.rb
index 92a4fe7303b..a6374cd78c8 100644
--- a/lib/ruby/stdlib/net/pop.rb
+++ b/lib/ruby/stdlib/net/pop.rb
@@ -21,7 +21,7 @@
 # See Net::POP3 for documentation.
 #
 
-require 'net/protocol'
+require_relative 'protocol'
 require 'digest/md5'
 require 'timeout'
 
diff --git a/lib/ruby/stdlib/net/protocol.rb b/lib/ruby/stdlib/net/protocol.rb
index 0e887d5aa94..60e23f1aa55 100644
--- a/lib/ruby/stdlib/net/protocol.rb
+++ b/lib/ruby/stdlib/net/protocol.rb
@@ -75,20 +75,54 @@ class OpenTimeout            < Timeout::Error; end
   # ReadTimeout, a subclass of Timeout::Error, is raised if a chunk of the
   # response cannot be read within the read_timeout.
 
-  class ReadTimeout            < Timeout::Error; end
+  class ReadTimeout < Timeout::Error
+    def initialize(io = nil)
+      @io = io
+    end
+    attr_reader :io
+
+    def message
+      msg = super
+      if @io
+        msg = "#{msg} with #{@io.inspect}"
+      end
+      msg
+    end
+  end
+
+  ##
+  # WriteTimeout, a subclass of Timeout::Error, is raised if a chunk of the
+  # response cannot be written within the write_timeout.  Not raised on Windows.
+
+  class WriteTimeout < Timeout::Error
+    def initialize(io = nil)
+      @io = io
+    end
+    attr_reader :io
+
+    def message
+      msg = super
+      if @io
+        msg = "#{msg} with #{@io.inspect}"
+      end
+      msg
+    end
+  end
 
 
   class BufferedIO   #:nodoc: internal use only
-    def initialize(io, read_timeout: 60, continue_timeout: nil, debug_output: nil)
+    def initialize(io, read_timeout: 60, write_timeout: 60, continue_timeout: nil, debug_output: nil)
       @io = io
       @read_timeout = read_timeout
+      @write_timeout = write_timeout
       @continue_timeout = continue_timeout
       @debug_output = debug_output
-      @rbuf = ''.dup
+      @rbuf = ''.b
     end
 
     attr_reader :io
     attr_accessor :read_timeout
+    attr_accessor :write_timeout
     attr_accessor :continue_timeout
     attr_accessor :debug_output
 
@@ -114,7 +148,7 @@ def close
 
     public
 
-    def read(len, dest = ''.dup, ignore_eof = false)
+    def read(len, dest = ''.b, ignore_eof = false)
       LOG "reading #{len} bytes..."
       read_bytes = 0
       begin
@@ -134,7 +168,7 @@ def read(len, dest = ''.dup, ignore_eof = false)
       dest
     end
 
-    def read_all(dest = ''.dup)
+    def read_all(dest = ''.b)
       LOG 'reading all...'
       read_bytes = 0
       begin
@@ -172,18 +206,20 @@ def readline
     BUFSIZE = 1024 * 16
 
     def rbuf_fill
-      case rv = @io.read_nonblock(BUFSIZE, exception: false)
+      tmp = @rbuf.empty? ? @rbuf : nil
+      case rv = @io.read_nonblock(BUFSIZE, tmp, exception: false)
       when String
+        return if rv.equal?(tmp)
         @rbuf << rv
         rv.clear
         return
       when :wait_readable
-        @io.to_io.wait_readable(@read_timeout) or raise Net::ReadTimeout
+        (io = @io.to_io).wait_readable(@read_timeout) or raise Net::ReadTimeout.new(io)
         # continue looping
       when :wait_writable
         # OpenSSL::Buffering#read_nonblock may fail with IO::WaitWritable.
         # http://www.openssl.org/support/faq.html#PROG10
-        @io.to_io.wait_writable(@read_timeout) or raise Net::ReadTimeout
+        (io = @io.to_io).wait_writable(@read_timeout) or raise Net::ReadTimeout.new(io)
         # continue looping
       when nil
         raise EOFError, 'end of file reached'
@@ -191,7 +227,12 @@ def rbuf_fill
     end
 
     def rbuf_consume(len)
-      s = @rbuf.slice!(0, len)
+      if len == @rbuf.size
+        s = @rbuf
+        @rbuf = ''.b
+      else
+        s = @rbuf.slice!(0, len)
+      end
       @debug_output << %Q[-> #{s.dump}\n] if @debug_output
       s
     end
@@ -202,9 +243,9 @@ def rbuf_consume(len)
 
     public
 
-    def write(str)
+    def write(*strs)
       writing {
-        write0 str
+        write0(*strs)
       }
     end
 
@@ -228,11 +269,34 @@ def writing
       bytes
     end
 
-    def write0(str)
-      @debug_output << str.dump if @debug_output
-      len = @io.write(str)
-      @written_bytes += len
-      len
+    def write0(*strs)
+      @debug_output << strs.map(&:dump).join if @debug_output
+      orig_written_bytes = @written_bytes
+      strs.each_with_index do |str, i|
+        need_retry = true
+        case len = @io.write_nonblock(str, exception: false)
+        when Integer
+          @written_bytes += len
+          len -= str.bytesize
+          if len == 0
+            if strs.size == i+1
+              return @written_bytes - orig_written_bytes
+            else
+              need_retry = false
+              # next string
+            end
+          elsif len < 0
+            str = str.byteslice(len, -len)
+          else # len > 0
+            need_retry = false
+            # next string
+          end
+          # continue looping
+        when :wait_writable
+          (io = @io.to_io).wait_writable(@write_timeout) or raise Net::WriteTimeout.new(io)
+          # continue looping
+        end while need_retry
+      end
     end
 
     #
@@ -273,7 +337,7 @@ def each_message_chunk
       read_bytes = 0
       while (line = readuntil("\r\n")) != ".\r\n"
         read_bytes += line.size
-        yield line.sub(/\A\./, '')
+        yield line.delete_prefix('.')
       end
       LOG_on()
       LOG "read message (#{read_bytes} bytes)"
@@ -335,7 +399,7 @@ def dot_stuff(s)
     end
 
     def using_each_crlf_line
-      @wbuf = ''.dup
+      @wbuf = ''.b
       yield
       if not @wbuf.empty?   # unterminated last line
         write0 dot_stuff(@wbuf.chomp) + "\r\n"
diff --git a/lib/ruby/stdlib/net/smtp.rb b/lib/ruby/stdlib/net/smtp.rb
index 1777a7fa7e9..86b55d278b7 100644
--- a/lib/ruby/stdlib/net/smtp.rb
+++ b/lib/ruby/stdlib/net/smtp.rb
@@ -17,7 +17,7 @@
 # See Net::SMTP for documentation.
 #
 
-require 'net/protocol'
+require_relative 'protocol'
 require 'digest/md5'
 require 'timeout'
 begin
diff --git a/lib/ruby/stdlib/open-uri.rb b/lib/ruby/stdlib/open-uri.rb
index c0ef89c2ec8..38f074ef599 100644
--- a/lib/ruby/stdlib/open-uri.rb
+++ b/lib/ruby/stdlib/open-uri.rb
@@ -354,6 +354,7 @@ def OpenURI.open_http(buf, target, proxy, options) # :nodoc:
           if options[:progress_proc] && Net::HTTPSuccess === resp
             options[:progress_proc].call(buf.size)
           end
+          str.clear
         }
       }
     }
diff --git a/lib/ruby/stdlib/open3.rb b/lib/ruby/stdlib/open3.rb
index 373f48229de..b94a120aa7d 100644
--- a/lib/ruby/stdlib/open3.rb
+++ b/lib/ruby/stdlib/open3.rb
@@ -84,7 +84,13 @@
   # If merged stdout and stderr output is not a problem, you can use Open3.popen2e.
   # If you really need stdout and stderr output as separate strings, you can consider Open3.capture3.
   #
-  def popen3(*cmd, **opts, &block)
+  def popen3(*cmd, &block)
+    if Hash === cmd.last
+      opts = cmd.pop.dup
+    else
+      opts = {}
+    end
+
     in_r, in_w = IO.pipe
     opts[:in] = in_r
     in_w.sync = true
@@ -139,7 +145,13 @@ def popen3(*cmd, **opts, &block)
   #     p o.read #=> "*"
   #   }
   #
-  def popen2(*cmd, **opts, &block)
+  def popen2(*cmd, &block)
+    if Hash === cmd.last
+      opts = cmd.pop.dup
+    else
+      opts = {}
+    end
+
     in_r, in_w = IO.pipe
     opts[:in] = in_r
     in_w.sync = true
@@ -182,7 +194,13 @@ def popen2(*cmd, **opts, &block)
   #     }
   #   }
   #
-  def popen2e(*cmd, **opts, &block)
+  def popen2e(*cmd, &block)
+    if Hash === cmd.last
+      opts = cmd.pop.dup
+    else
+      opts = {}
+    end
+
     in_r, in_w = IO.pipe
     opts[:in] = in_r
     in_w.sync = true
@@ -195,10 +213,6 @@ def popen2e(*cmd, **opts, &block)
   module_function :popen2e
 
   def popen_run(cmd, opts, child_io, parent_io) # :nodoc:
-    if last = Hash.try_convert(cmd.last)
-      opts = opts.merge(last)
-      cmd.pop
-    end
     pid = spawn(*cmd, opts)
     wait_thr = Process.detach(pid)
     child_io.each(&:close)
@@ -257,7 +271,16 @@ class << self
   #     STDOUT.binmode; print thumbnail
   #   end
   #
-  def capture3(*cmd, stdin_data: '', binmode: false, **opts)
+  def capture3(*cmd)
+    if Hash === cmd.last
+      opts = cmd.pop.dup
+    else
+      opts = {}
+    end
+
+    stdin_data = opts.delete(:stdin_data) || ''
+    binmode = opts.delete(:binmode)
+
     popen3(*cmd, opts) {|i, o, e, t|
       if binmode
         i.binmode
@@ -309,7 +332,16 @@ def capture3(*cmd, stdin_data: '', binmode: false, **opts)
   #   End
   #   image, s = Open3.capture2("gnuplot", :stdin_data=>gnuplot_commands, :binmode=>true)
   #
-  def capture2(*cmd, stdin_data: nil, binmode: false, **opts)
+  def capture2(*cmd)
+    if Hash === cmd.last
+      opts = cmd.pop.dup
+    else
+      opts = {}
+    end
+
+    stdin_data = opts.delete(:stdin_data)
+    binmode = opts.delete(:binmode)
+
     popen2(*cmd, opts) {|i, o, t|
       if binmode
         i.binmode
@@ -348,7 +380,16 @@ def capture2(*cmd, stdin_data: nil, binmode: false, **opts)
   #   # capture make log
   #   make_log, s = Open3.capture2e("make")
   #
-  def capture2e(*cmd, stdin_data: nil, binmode: false, **opts)
+  def capture2e(*cmd)
+    if Hash === cmd.last
+      opts = cmd.pop.dup
+    else
+      opts = {}
+    end
+
+    stdin_data = opts.delete(:stdin_data)
+    binmode = opts.delete(:binmode)
+
     popen2e(*cmd, opts) {|i, oe, t|
       if binmode
         i.binmode
@@ -413,7 +454,13 @@ def capture2e(*cmd, stdin_data: nil, binmode: false, **opts)
   #     stdin.close     # send EOF to sort.
   #     p stdout.read   #=> "     1\tbar\n     2\tbaz\n     3\tfoo\n"
   #   }
-  def pipeline_rw(*cmds, **opts, &block)
+  def pipeline_rw(*cmds, &block)
+    if Hash === cmds.last
+      opts = cmds.pop.dup
+    else
+      opts = {}
+    end
+
     in_r, in_w = IO.pipe
     opts[:in] = in_r
     in_w.sync = true
@@ -463,7 +510,13 @@ def pipeline_rw(*cmds, **opts, &block)
   #     p ts[1].value #=> #<Process::Status: pid 24913 exit 0>
   #   }
   #
-  def pipeline_r(*cmds, **opts, &block)
+  def pipeline_r(*cmds, &block)
+    if Hash === cmds.last
+      opts = cmds.pop.dup
+    else
+      opts = {}
+    end
+
     out_r, out_w = IO.pipe
     opts[:out] = out_w
 
@@ -499,7 +552,13 @@ def pipeline_r(*cmds, **opts, &block)
   #     i.puts "hello"
   #   }
   #
-  def pipeline_w(*cmds, **opts, &block)
+  def pipeline_w(*cmds, &block)
+    if Hash === cmds.last
+      opts = cmds.pop.dup
+    else
+      opts = {}
+    end
+
     in_r, in_w = IO.pipe
     opts[:in] = in_r
     in_w.sync = true
@@ -552,7 +611,13 @@ def pipeline_w(*cmds, **opts, &block)
   #     p err_r.read # error messages of pdftops and lpr.
   #   }
   #
-  def pipeline_start(*cmds, **opts, &block)
+  def pipeline_start(*cmds, &block)
+    if Hash === cmds.last
+      opts = cmds.pop.dup
+    else
+      opts = {}
+    end
+
     if block
       pipeline_run(cmds, opts, [], [], &block)
     else
@@ -614,7 +679,13 @@ def pipeline_start(*cmds, **opts, &block)
   #   #   106
   #   #   202
   #
-  def pipeline(*cmds, **opts)
+  def pipeline(*cmds)
+    if Hash === cmds.last
+      opts = cmds.pop.dup
+    else
+      opts = {}
+    end
+
     pipeline_run(cmds, opts, [], []) {|ts|
       ts.map(&:value)
     }
@@ -660,8 +731,8 @@ def pipeline_run(cmds, pipeline_opts, child_io, parent_io) # :nodoc:
       end
       pid = spawn(*cmd, cmd_opts)
       wait_thrs << Process.detach(pid)
-      r.close if r
-      w2.close if w2
+      r&.close
+      w2&.close
       r = r2
     }
     result = parent_io + [wait_thrs]
diff --git a/lib/ruby/stdlib/optparse.rb b/lib/ruby/stdlib/optparse.rb
index 05415901a35..5cdcabf4a75 100644
--- a/lib/ruby/stdlib/optparse.rb
+++ b/lib/ruby/stdlib/optparse.rb
@@ -1,4 +1,4 @@
-# frozen_string_literal: false
+# frozen_string_literal: true
 #
 # optparse.rb - command-line option analysis with the OptionParser class.
 #
@@ -125,6 +125,7 @@
 # For options that require an argument, option specification strings may include an
 # option name in all caps. If an option is used without the required argument,
 # an exception will be raised.
+#
 #   require 'optparse'
 #
 #   options = {}
@@ -137,9 +138,9 @@
 #
 # Used:
 #
-#   bash-3.2$ ruby optparse-test.rb -r
+#   $ ruby optparse-test.rb -r
 #   optparse-test.rb:9:in `<main>': missing argument: -r (OptionParser::MissingArgument)
-#   bash-3.2$ ruby optparse-test.rb -r my-library
+#   $ ruby optparse-test.rb -r my-library
 #   You required my-library!
 #
 # === Type Coercion
@@ -187,13 +188,12 @@
 #   end.parse!
 #
 # Used:
-#   bash-3.2$ ruby optparse-test.rb  -t nonsense
+#
+#   $ ruby optparse-test.rb  -t nonsense
 #   ... invalid argument: -t nonsense (OptionParser::InvalidArgument)
-#   from ... time.rb:5:in `block in <top (required)>'
-#   from optparse-test.rb:31:in `<main>'
-#   bash-3.2$ ruby optparse-test.rb  -t 10-11-12
+#   $ ruby optparse-test.rb  -t 10-11-12
 #   2010-11-12 00:00:00 -0500
-#   bash-3.2$ ruby optparse-test.rb  -t 9:30
+#   $ ruby optparse-test.rb  -t 9:30
 #   2014-08-13 09:30:00 -0400
 #
 # ==== Creating Custom Conversions
@@ -225,13 +225,39 @@
 #
 #   op.parse!
 #
-# output:
-#   bash-3.2$ ruby optparse-test.rb --user 1
+# Used:
+#
+#   $ ruby optparse-test.rb --user 1
 #   #<struct User id=1, name="Sam">
-#   bash-3.2$ ruby optparse-test.rb --user 2
+#   $ ruby optparse-test.rb --user 2
 #   #<struct User id=2, name="Gandalf">
-#   bash-3.2$ ruby optparse-test.rb --user 3
+#   $ ruby optparse-test.rb --user 3
 #   optparse-test.rb:15:in `block in find_user': No User Found for id 3 (RuntimeError)
+#
+# === Store options to a Hash
+#
+# The +into+ option of +order+, +parse+ and so on methods stores command line options into a Hash.
+#
+#   require 'optparse'
+#
+#   params = {}
+#   OptionParser.new do |opts|
+#     opts.on('-a')
+#     opts.on('-b NUM', Integer)
+#     opts.on('-v', '--verbose')
+#   end.parse!(into: params)
+#
+#   p params
+#
+# Used:
+#
+#   $ ruby optparse-test.rb -a
+#   {:a=>true}
+#   $ ruby optparse-test.rb -a -v
+#   {:a=>true, :verbose=>true}
+#   $ ruby optparse-test.rb -a -b 100
+#   {:a=>true, :b=>100}
+#
 # === Complete example
 #
 # The following example is a complete Ruby program.  You can run it and see the
@@ -413,7 +439,7 @@ def self.candidate(key, icase = false, pat = nil, &block)
       candidates = []
       block.call do |k, *v|
         (if Regexp === k
-           kn = "".freeze
+           kn = ""
            k === key
          else
            kn = defined?(k.id2name) ? k.id2name : k
@@ -508,8 +534,9 @@ def self.pattern
 
     def initialize(pattern = nil, conv = nil,
                    short = nil, long = nil, arg = nil,
-                   desc = ([] if short or long), block = Proc.new)
+                   desc = ([] if short or long), block = nil, &_block)
       raise if Array === pattern
+      block ||= _block
       @pattern, @conv, @short, @long, @arg, @desc, @block =
         pattern, conv, short, long, arg, desc, block
     end
@@ -577,7 +604,7 @@ def summarize(sdone = [], ldone = [], width = 1, max = width - 1, indent = "")
       while s = lopts.shift
         l = left[-1].length + s.length
         l += arg.length if left.size == 1 && arg
-        l < max or sopts.empty? or left << ''
+        l < max or sopts.empty? or left << +''
         left[-1] << (left[-1].empty? ? ' ' * 4 : ', ') << s
       end
 
@@ -628,7 +655,7 @@ def compsys(sdone, ldone)   # :nodoc:
       return if sopts.empty? and lopts.empty? # completely hidden
 
       (sopts+lopts).each do |opt|
-        # "(-x -c -r)-l[left justify]" \
+        # "(-x -c -r)-l[left justify]"
         if /^--\[no-\](.+)$/ =~ opt
           o = $1
           yield("--#{o}", desc.join(""))
@@ -1136,7 +1163,7 @@ def self.reject(*args, &blk) top.reject(*args, &blk) end
   #
   def banner
     unless @banner
-      @banner = "Usage: #{program_name} [options]"
+      @banner = +"Usage: #{program_name} [options]"
       visit(:add_banner, @banner)
     end
     @banner
@@ -1165,14 +1192,14 @@ def program_name
   # Version
   #
   def version
-    @version || (defined?(::Version) && ::Version)
+    (defined?(@version) && @version) || (defined?(::Version) && ::Version)
   end
 
   #
   # Release code
   #
   def release
-    @release || (defined?(::Release) && ::Release) || (defined?(::RELEASE) && ::RELEASE)
+    (defined?(@release) && @release) || (defined?(::Release) && ::Release) || (defined?(::RELEASE) && ::RELEASE)
   end
 
   #
@@ -1180,7 +1207,7 @@ def release
   #
   def ver
     if v = version
-      str = "#{program_name} #{[v].join('.')}"
+      str = +"#{program_name} #{[v].join('.')}"
       str << " (#{v})" if v = release
       str
     end
@@ -1237,7 +1264,8 @@ def remove
   # +indent+:: Indentation, defaults to @summary_indent.
   #
   def summarize(to = [], width = @summary_width, max = width - 1, indent = @summary_indent, &blk)
-    blk ||= proc {|l| to << (l.index($/, -1) ? l : l + $/)}
+    nl = "\n"
+    blk ||= proc {|l| to << (l.index(nl, -1) ? l : l + nl)}
     visit(:summarize, {}, {}, width, max, indent, &blk)
     to
   end
@@ -1324,6 +1352,8 @@ def notwice(obj, prv, msg)
   # [Description:]
   #   Description string for the option.
   #     "Run verbosely"
+  #   If you give multiple description strings, each string will be printed
+  #   line by line.
   #
   # [Handler:]
   #   Handler for the parsed argument value. Either give a block or pass a
@@ -1565,7 +1595,7 @@ def parse_in_order(argv = default_argv, setter = nil, &nonopt)  # :nodoc:
               begin
                 sw, = complete(:short, opt)
                 # short option matched.
-                val = arg.sub(/\A-/, '')
+                val = arg.delete_prefix('-')
                 has_arg = true
               rescue InvalidOption
                 # if no short options match, try completion with long
@@ -1952,7 +1982,7 @@ def environment(env = File.basename($0, '.*'))
   #
   class ParseError < RuntimeError
     # Reason which caused the error.
-    Reason = 'parse error'.freeze
+    Reason = 'parse error'
 
     def initialize(*args)
       @args = args
@@ -2015,42 +2045,42 @@ def message
   # Raises when ambiguously completable string is encountered.
   #
   class AmbiguousOption < ParseError
-    const_set(:Reason, 'ambiguous option'.freeze)
+    const_set(:Reason, 'ambiguous option')
   end
 
   #
   # Raises when there is an argument for a switch which takes no argument.
   #
   class NeedlessArgument < ParseError
-    const_set(:Reason, 'needless argument'.freeze)
+    const_set(:Reason, 'needless argument')
   end
 
   #
   # Raises when a switch with mandatory argument has no argument.
   #
   class MissingArgument < ParseError
-    const_set(:Reason, 'missing argument'.freeze)
+    const_set(:Reason, 'missing argument')
   end
 
   #
   # Raises when switch is undefined.
   #
   class InvalidOption < ParseError
-    const_set(:Reason, 'invalid option'.freeze)
+    const_set(:Reason, 'invalid option')
   end
 
   #
   # Raises when the given argument does not match required format.
   #
   class InvalidArgument < ParseError
-    const_set(:Reason, 'invalid argument'.freeze)
+    const_set(:Reason, 'invalid argument')
   end
 
   #
   # Raises when the given argument word can't be completed uniquely.
   #
   class AmbiguousArgument < InvalidArgument
-    const_set(:Reason, 'ambiguous argument'.freeze)
+    const_set(:Reason, 'ambiguous argument')
   end
 
   #
diff --git a/lib/ruby/stdlib/ostruct.rb b/lib/ruby/stdlib/ostruct.rb
index 28890304e42..a758a65979e 100644
--- a/lib/ruby/stdlib/ostruct.rb
+++ b/lib/ruby/stdlib/ostruct.rb
@@ -104,16 +104,29 @@ def initialize_copy(orig) # :nodoc:
     @table = @table.dup
   end
 
+  #
+  # call-seq:
+  #   ostruct.to_h                        -> hash
+  #   ostruct.to_h {|name, value| block } -> hash
   #
   # Converts the OpenStruct to a hash with keys representing
   # each attribute (as symbols) and their corresponding values.
   #
+  # If a block is given, the results of the block on each pair of
+  # the receiver will be used as pairs.
+  #
   #   require "ostruct"
   #   data = OpenStruct.new("country" => "Australia", :capital => "Canberra")
   #   data.to_h   # => {:country => "Australia", :capital => "Canberra" }
+  #   data.to_h {|name, value| [name.to_s, value.upcase] }
+  #               # => {"country" => "AUSTRALIA", "capital" => "CANBERRA" }
   #
-  def to_h
-    @table.dup
+  def to_h(&block)
+    if block_given?
+      @table.to_h(&block)
+    else
+      @table.dup
+    end
   end
 
   #
@@ -156,7 +169,8 @@ def modifiable? # :nodoc:
     begin
       @modifiable = true
     rescue
-      raise RuntimeError, "can't modify frozen #{self.class}", caller(3)
+      exception_class = defined?(FrozenError) ? FrozenError : RuntimeError
+      raise exception_class, "can't modify frozen #{self.class}", caller(3)
     end
     @table
   end
@@ -294,7 +308,7 @@ def dig(name, *names)
   def delete_field(name)
     sym = name.to_sym
     begin
-      singleton_class.__send__(:remove_method, sym, "#{sym}=")
+      singleton_class.remove_method(sym, "#{sym}=")
     rescue NameError
     end
     @table.delete(sym) do
diff --git a/lib/ruby/stdlib/pathname.rb b/lib/ruby/stdlib/pathname.rb
index 106ef77f4da..2fe327551a0 100644
--- a/lib/ruby/stdlib/pathname.rb
+++ b/lib/ruby/stdlib/pathname.rb
@@ -41,7 +41,7 @@ class Pathname
   # chop_basename(path) -> [pre-basename, basename] or nil
   def chop_basename(path) # :nodoc:
     base = File.basename(path)
-    if /\A#{SEPARATOR_PAT}?\z/o =~ base
+    if /\A#{SEPARATOR_PAT}?\z/o.match?(base)
       return nil
     else
       return path[0, path.rindex(base)], base
@@ -63,7 +63,7 @@ def split_names(path) # :nodoc:
   def prepend_prefix(prefix, relpath) # :nodoc:
     if relpath.empty?
       File.dirname(prefix)
-    elsif /#{SEPARATOR_PAT}/o =~ prefix
+    elsif /#{SEPARATOR_PAT}/o.match?(prefix)
       prefix = File.dirname(prefix)
       prefix = File.join(prefix, "") if File.basename(prefix + 'a') != 'a'
       prefix + relpath
@@ -114,7 +114,7 @@ def cleanpath_aggressive # :nodoc:
       end
     end
     pre.tr!(File::ALT_SEPARATOR, File::SEPARATOR) if File::ALT_SEPARATOR
-    if /#{SEPARATOR_PAT}/o =~ File.basename(pre)
+    if /#{SEPARATOR_PAT}/o.match?(File.basename(pre))
       names.shift while names[0] == '..'
     end
     self.class.new(prepend_prefix(pre, File.join(*names)))
@@ -163,7 +163,7 @@ def cleanpath_conservative # :nodoc:
       names.unshift base if base != '.'
     end
     pre.tr!(File::ALT_SEPARATOR, File::SEPARATOR) if File::ALT_SEPARATOR
-    if /#{SEPARATOR_PAT}/o =~ File.basename(pre)
+    if /#{SEPARATOR_PAT}/o.match?(File.basename(pre))
       names.shift while names[0] == '..'
     end
     if names.empty?
@@ -194,8 +194,7 @@ def mountpoint?
     begin
       stat1 = self.lstat
       stat2 = self.parent.lstat
-      stat1.dev == stat2.dev && stat1.ino == stat2.ino ||
-        stat1.dev != stat2.dev
+      stat1.dev != stat2.dev || stat1.ino == stat2.ino
     rescue Errno::ENOENT
       false
     end
@@ -209,7 +208,7 @@ def mountpoint?
   # pathnames which points to roots such as <tt>/usr/..</tt>.
   #
   def root?
-    !!(chop_basename(@path) == nil && /#{SEPARATOR_PAT}/o =~ @path)
+    !!(chop_basename(@path) == nil && /#{SEPARATOR_PAT}/o.match?(@path))
   end
 
   # Predicate method for testing whether a path is absolute.
@@ -381,7 +380,7 @@ def plus(path1, path2) # -> path # :nodoc:
       basename_list2.shift
     end
     r1 = chop_basename(prefix1)
-    if !r1 && (r1 = /#{SEPARATOR_PAT}/o =~ File.basename(prefix1))
+    if !r1 && (r1 = /#{SEPARATOR_PAT}/o.match?(File.basename(prefix1)))
       while !basename_list2.empty? && basename_list2.first == '..'
         index_list2.shift
         basename_list2.shift
@@ -505,6 +504,7 @@ def each_child(with_directory=true, &b)
   # ArgumentError is raised when it cannot find a relative path.
   #
   def relative_path_from(base_directory)
+    base_directory = Pathname.new(base_directory) unless base_directory.is_a? Pathname
     dest_directory = self.cleanpath.to_s
     base_directory = base_directory.cleanpath.to_s
     dest_prefix = dest_directory
diff --git a/lib/ruby/stdlib/pp.rb b/lib/ruby/stdlib/pp.rb
index 41076a36684..cf60c87f3c6 100644
--- a/lib/ruby/stdlib/pp.rb
+++ b/lib/ruby/stdlib/pp.rb
@@ -386,7 +386,7 @@ def pretty_print(q) # :nodoc:
     q.breakable ''
     q.text(self.exclude_end? ? '...' : '..')
     q.breakable ''
-    q.pp self.end
+    q.pp self.end if self.end
   end
 end
 
@@ -514,6 +514,37 @@ def pretty_print(q) # :nodoc:
   end
 end
 
+# RubyVM not defined outside of MRI
+defined?(RubyVM::AbstractSyntaxTree::Node) && class RubyVM::AbstractSyntaxTree::Node
+  def pretty_print_children(q, names = [])
+    children.zip(names) do |c, n|
+      if n
+        q.breakable
+        q.text "#{n}:"
+      end
+      q.group(2) do
+        q.breakable
+        q.pp c
+      end
+    end
+  end
+
+  def pretty_print(q)
+    q.group(1, "(#{type}@#{first_lineno}:#{first_column}-#{last_lineno}:#{last_column}", ")") {
+      case type
+      when :SCOPE
+        pretty_print_children(q, %w"tbl args body")
+      when :ARGS
+        pretty_print_children(q, %w[pre_num pre_init opt first_post post_num post_init rest kw kwrest block])
+      when :DEFN
+        pretty_print_children(q, %w[mid body])
+      else
+        pretty_print_children(q)
+      end
+    }
+  end
+end
+
 class Object < BasicObject # :nodoc:
   include PP::ObjectMixin
 end
diff --git a/lib/ruby/stdlib/prime.rb b/lib/ruby/stdlib/prime.rb
index 2cd22da3a8d..9f6db448be8 100644
--- a/lib/ruby/stdlib/prime.rb
+++ b/lib/ruby/stdlib/prime.rb
@@ -95,6 +95,9 @@ def Integer.each_prime(ubound, &block) # :yields: prime
 #   has many prime factors. e.g. for Prime#prime? .
 
 class Prime
+
+  VERSION = "0.1.0"
+
   include Enumerable
   include Singleton
 
@@ -388,13 +391,6 @@ def initialize # :nodoc:
       @ulticheck_next_squared = 121   # @primes[@ulticheck_index + 1] ** 2
     end
 
-    # Returns the cached prime numbers.
-    def cache
-      @primes
-    end
-    alias primes cache
-    alias primes_so_far cache
-
     # Returns the +index+th prime number.
     #
     # +index+ is a 0-based index.
diff --git a/lib/ruby/stdlib/resolv.rb b/lib/ruby/stdlib/resolv.rb
index 57f59065ac8..aa642ea5868 100644
--- a/lib/ruby/stdlib/resolv.rb
+++ b/lib/ruby/stdlib/resolv.rb
@@ -174,6 +174,8 @@ class ResolvTimeout < Timeout::Error; end
   class Hosts
     if WINDOWS
       require 'win32/resolv'
+      DefaultFileName = Win32::Resolv.get_hosts_path || IO::NULL
+    rescue LoadError
       DefaultFileName = Win32::Resolv.get_hosts_path
     else
       DefaultFileName = '/etc/hosts'
@@ -241,9 +243,7 @@ def getaddresses(name)
 
     def each_address(name, &proc)
       lazy_initialize
-      if @name2addr.include?(name)
-        @name2addr[name].each(&proc)
-      end
+      @name2addr[name]&.each(&proc)
     end
 
     ##
@@ -616,16 +616,6 @@ def self.random(arg) # :nodoc:
       end
     end
 
-
-    def self.rangerand(range) # :nodoc:
-      base = range.begin
-      len = range.end - range.begin
-      if !range.exclude_end?
-        len += 1
-      end
-      base + random(len)
-    end
-
     RequestID = {} # :nodoc:
     RequestIDMutex = Thread::Mutex.new # :nodoc:
 
@@ -634,7 +624,7 @@ def self.allocate_request_id(host, port) # :nodoc:
       RequestIDMutex.synchronize {
         h = (RequestID[[host, port]] ||= {})
         begin
-          id = rangerand(0x0000..0xffff)
+          id = random(0x0000..0xffff)
         end while h[id]
         h[id] = true
       }
@@ -655,7 +645,7 @@ def self.free_request_id(host, port, id) # :nodoc:
 
     def self.bind_random_port(udpsock, bind_host="0.0.0.0") # :nodoc:
       begin
-        port = rangerand(1024..65535)
+        port = random(1024..65535)
         udpsock.bind(bind_host, port)
       rescue Errno::EADDRINUSE, # POSIX
              Errno::EACCES, # SunOS: See PRIV_SYS_NFS in privileges(5)
@@ -2644,7 +2634,7 @@ def initialize(config_info=nil)
     def each_address(name)
       name = Resolv::DNS::Name.create(name)
 
-      return unless name.to_a.last.to_s == 'local'
+      return unless name[-1].to_s == 'local'
 
       super(name)
     end
diff --git a/lib/ruby/stdlib/rexml/attlistdecl.rb b/lib/ruby/stdlib/rexml/attlistdecl.rb
index dc1d2add0b8..44a91d66d63 100644
--- a/lib/ruby/stdlib/rexml/attlistdecl.rb
+++ b/lib/ruby/stdlib/rexml/attlistdecl.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
 #vim:ts=2 sw=2 noexpandtab:
-require 'rexml/child'
-require 'rexml/source'
+require_relative 'child'
+require_relative 'source'
 
 module REXML
   # This class needs:
diff --git a/lib/ruby/stdlib/rexml/attribute.rb b/lib/ruby/stdlib/rexml/attribute.rb
index ca5984e178f..4ae8b10062f 100644
--- a/lib/ruby/stdlib/rexml/attribute.rb
+++ b/lib/ruby/stdlib/rexml/attribute.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require "rexml/namespace"
-require 'rexml/text'
+require_relative "namespace"
+require_relative 'text'
 
 module REXML
   # Defines an Element Attribute; IE, a attribute=value pair, as in:
diff --git a/lib/ruby/stdlib/rexml/cdata.rb b/lib/ruby/stdlib/rexml/cdata.rb
index 2238446dc4e..997f5a08dbc 100644
--- a/lib/ruby/stdlib/rexml/cdata.rb
+++ b/lib/ruby/stdlib/rexml/cdata.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/text"
+require_relative "text"
 
 module REXML
   class CData < Text
diff --git a/lib/ruby/stdlib/rexml/child.rb b/lib/ruby/stdlib/rexml/child.rb
index d23451e71ec..cc6e9a47199 100644
--- a/lib/ruby/stdlib/rexml/child.rb
+++ b/lib/ruby/stdlib/rexml/child.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/node"
+require_relative "node"
 
 module REXML
   ##
diff --git a/lib/ruby/stdlib/rexml/comment.rb b/lib/ruby/stdlib/rexml/comment.rb
index 822fe0d5864..52c58b46f6f 100644
--- a/lib/ruby/stdlib/rexml/comment.rb
+++ b/lib/ruby/stdlib/rexml/comment.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/child"
+require_relative "child"
 
 module REXML
   ##
diff --git a/lib/ruby/stdlib/rexml/doctype.rb b/lib/ruby/stdlib/rexml/doctype.rb
index 1eb1f5b4e18..757b639639e 100644
--- a/lib/ruby/stdlib/rexml/doctype.rb
+++ b/lib/ruby/stdlib/rexml/doctype.rb
@@ -1,10 +1,10 @@
 # frozen_string_literal: false
-require "rexml/parent"
-require "rexml/parseexception"
-require "rexml/namespace"
-require 'rexml/entity'
-require 'rexml/attlistdecl'
-require 'rexml/xmltokens'
+require_relative "parent"
+require_relative "parseexception"
+require_relative "namespace"
+require_relative 'entity'
+require_relative 'attlistdecl'
+require_relative 'xmltokens'
 
 module REXML
   # Represents an XML DOCTYPE declaration; that is, the contents of <!DOCTYPE
@@ -108,13 +108,19 @@ def clone
     #   Ignored
     def write( output, indent=0, transitive=false, ie_hack=false )
       f = REXML::Formatters::Default.new
+      c = context
+      if c and c[:prologue_quote] == :apostrophe
+        quote = "'"
+      else
+        quote = "\""
+      end
       indent( output, indent )
       output << START
       output << ' '
       output << @name
-      output << " #@external_id" if @external_id
-      output << " #{@long_name.inspect}" if @long_name
-      output << " #{@uri.inspect}" if @uri
+      output << " #{@external_id}" if @external_id
+      output << " #{quote}#{@long_name}#{quote}" if @long_name
+      output << " #{quote}#{@uri}#{quote}" if @uri
       unless @children.empty?
         output << ' ['
         @children.each { |child|
@@ -127,7 +133,11 @@ def write( output, indent=0, transitive=false, ie_hack=false )
     end
 
     def context
-      @parent.context
+      if @parent
+        @parent.context
+      else
+        nil
+      end
     end
 
     def entity( name )
@@ -249,9 +259,16 @@ def initialize name, middle, pub, sys
     end
 
     def to_s
+      c = nil
+      c = parent.context if parent
+      if c and c[:prologue_quote] == :apostrophe
+        quote = "'"
+      else
+        quote = "\""
+      end
       notation = "<!NOTATION #{@name} #{@middle}"
-      notation << " #{@public.inspect}" if @public
-      notation << " #{@system.inspect}" if @system
+      notation << " #{quote}#{@public}#{quote}" if @public
+      notation << " #{quote}#{@system}#{quote}" if @system
       notation << ">"
       notation
     end
diff --git a/lib/ruby/stdlib/rexml/document.rb b/lib/ruby/stdlib/rexml/document.rb
index 806bc499cde..adec2930667 100644
--- a/lib/ruby/stdlib/rexml/document.rb
+++ b/lib/ruby/stdlib/rexml/document.rb
@@ -1,17 +1,17 @@
 # frozen_string_literal: false
-require "rexml/security"
-require "rexml/element"
-require "rexml/xmldecl"
-require "rexml/source"
-require "rexml/comment"
-require "rexml/doctype"
-require "rexml/instruction"
-require "rexml/rexml"
-require "rexml/parseexception"
-require "rexml/output"
-require "rexml/parsers/baseparser"
-require "rexml/parsers/streamparser"
-require "rexml/parsers/treeparser"
+require_relative "security"
+require_relative "element"
+require_relative "xmldecl"
+require_relative "source"
+require_relative "comment"
+require_relative "doctype"
+require_relative "instruction"
+require_relative "rexml"
+require_relative "parseexception"
+require_relative "output"
+require_relative "parsers/baseparser"
+require_relative "parsers/streamparser"
+require_relative "parsers/treeparser"
 
 module REXML
   # Represents a full XML document, including PIs, a doctype, etc.  A
@@ -226,7 +226,7 @@ def write(*arguments)
       end
       formatter = if indent > -1
           if transitive
-            require "rexml/formatters/transitive"
+            require_relative "formatters/transitive"
             REXML::Formatters::Transitive.new( indent, ie_hack )
           else
             REXML::Formatters::Pretty.new( indent, ie_hack )
diff --git a/lib/ruby/stdlib/rexml/dtd/attlistdecl.rb b/lib/ruby/stdlib/rexml/dtd/attlistdecl.rb
index 32847daadb2..1326cb21e4c 100644
--- a/lib/ruby/stdlib/rexml/dtd/attlistdecl.rb
+++ b/lib/ruby/stdlib/rexml/dtd/attlistdecl.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/child"
+require_relative "../child"
 module REXML
   module DTD
     class AttlistDecl < Child
diff --git a/lib/ruby/stdlib/rexml/dtd/dtd.rb b/lib/ruby/stdlib/rexml/dtd/dtd.rb
index 927d5d847b1..8b0f2d753af 100644
--- a/lib/ruby/stdlib/rexml/dtd/dtd.rb
+++ b/lib/ruby/stdlib/rexml/dtd/dtd.rb
@@ -1,10 +1,10 @@
 # frozen_string_literal: false
-require "rexml/dtd/elementdecl"
-require "rexml/dtd/entitydecl"
-require "rexml/comment"
-require "rexml/dtd/notationdecl"
-require "rexml/dtd/attlistdecl"
-require "rexml/parent"
+require_relative "elementdecl"
+require_relative "entitydecl"
+require_relative "../comment"
+require_relative "notationdecl"
+require_relative "attlistdecl"
+require_relative "../parent"
 
 module REXML
   module DTD
diff --git a/lib/ruby/stdlib/rexml/dtd/elementdecl.rb b/lib/ruby/stdlib/rexml/dtd/elementdecl.rb
index 119fd41a8f6..20ed0232441 100644
--- a/lib/ruby/stdlib/rexml/dtd/elementdecl.rb
+++ b/lib/ruby/stdlib/rexml/dtd/elementdecl.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/child"
+require_relative "../child"
 module REXML
   module DTD
     class ElementDecl < Child
diff --git a/lib/ruby/stdlib/rexml/dtd/entitydecl.rb b/lib/ruby/stdlib/rexml/dtd/entitydecl.rb
index 45707e2f42d..312df655ff2 100644
--- a/lib/ruby/stdlib/rexml/dtd/entitydecl.rb
+++ b/lib/ruby/stdlib/rexml/dtd/entitydecl.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/child"
+require_relative "../child"
 module REXML
   module DTD
     class EntityDecl < Child
diff --git a/lib/ruby/stdlib/rexml/dtd/notationdecl.rb b/lib/ruby/stdlib/rexml/dtd/notationdecl.rb
index cfdf0b9b74a..04a9b08aa7d 100644
--- a/lib/ruby/stdlib/rexml/dtd/notationdecl.rb
+++ b/lib/ruby/stdlib/rexml/dtd/notationdecl.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/child"
+require_relative "../child"
 module REXML
   module DTD
     class NotationDecl < Child
diff --git a/lib/ruby/stdlib/rexml/element.rb b/lib/ruby/stdlib/rexml/element.rb
index ac9b10872ca..7903d834532 100644
--- a/lib/ruby/stdlib/rexml/element.rb
+++ b/lib/ruby/stdlib/rexml/element.rb
@@ -1,10 +1,10 @@
 # frozen_string_literal: false
-require "rexml/parent"
-require "rexml/namespace"
-require "rexml/attribute"
-require "rexml/cdata"
-require "rexml/xpath"
-require "rexml/parseexception"
+require_relative "parent"
+require_relative "namespace"
+require_relative "attribute"
+require_relative "cdata"
+require_relative "xpath"
+require_relative "parseexception"
 
 module REXML
   # An implementation note about namespaces:
@@ -713,7 +713,7 @@ def write(output=$stdout, indent=-1, transitive=false, ie_hack=false)
       Kernel.warn("#{self.class.name}.write is deprecated.  See REXML::Formatters", uplevel: 1)
       formatter = if indent > -1
           if transitive
-            require "rexml/formatters/transitive"
+            require_relative "formatters/transitive"
             REXML::Formatters::Transitive.new( indent, ie_hack )
           else
             REXML::Formatters::Pretty.new( indent, ie_hack )
@@ -1033,6 +1033,7 @@ def length
     #    p attr.expanded_name+" => "+attr.value
     #  }
     def each_attribute # :yields: attribute
+      return to_enum(__method__) unless block_given?
       each_value do |val|
         if val.kind_of? Attribute
           yield val
@@ -1048,6 +1049,7 @@ def each_attribute # :yields: attribute
     #  doc = Document.new '<a x="1" y="2"/>'
     #  doc.root.attributes.each {|name, value| p name+" => "+value }
     def each
+      return to_enum(__method__) unless block_given?
       each_attribute do |attr|
         yield [attr.expanded_name, attr.value]
       end
diff --git a/lib/ruby/stdlib/rexml/entity.rb b/lib/ruby/stdlib/rexml/entity.rb
index 97c7b6b42fa..d6fd5edd0de 100644
--- a/lib/ruby/stdlib/rexml/entity.rb
+++ b/lib/ruby/stdlib/rexml/entity.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require 'rexml/child'
-require 'rexml/source'
-require 'rexml/xmltokens'
+require_relative 'child'
+require_relative 'source'
+require_relative 'xmltokens'
 
 module REXML
   class Entity < Child
diff --git a/lib/ruby/stdlib/rexml/formatters/default.rb b/lib/ruby/stdlib/rexml/formatters/default.rb
index c375f1468b7..811b2ff3d5e 100644
--- a/lib/ruby/stdlib/rexml/formatters/default.rb
+++ b/lib/ruby/stdlib/rexml/formatters/default.rb
@@ -1,4 +1,5 @@
 # frozen_string_literal: false
+
 module REXML
   module Formatters
     class Default
@@ -101,11 +102,14 @@ def write_cdata( node, output )
       end
 
       def write_instruction( node, output )
-        output << Instruction::START.sub(/\\/u, '')
+        output << Instruction::START
         output << node.target
-        output << ' '
-        output << node.content
-        output << Instruction::STOP.sub(/\\/u, '')
+        content = node.content
+        if content
+          output << ' '
+          output << content
+        end
+        output << Instruction::STOP
       end
     end
   end
diff --git a/lib/ruby/stdlib/rexml/formatters/pretty.rb b/lib/ruby/stdlib/rexml/formatters/pretty.rb
index a80274bdad5..562ef9462e1 100644
--- a/lib/ruby/stdlib/rexml/formatters/pretty.rb
+++ b/lib/ruby/stdlib/rexml/formatters/pretty.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'rexml/formatters/default'
+require_relative 'default'
 
 module REXML
   module Formatters
diff --git a/lib/ruby/stdlib/rexml/formatters/transitive.rb b/lib/ruby/stdlib/rexml/formatters/transitive.rb
index 81e67f3274e..5ff51e10f37 100644
--- a/lib/ruby/stdlib/rexml/formatters/transitive.rb
+++ b/lib/ruby/stdlib/rexml/formatters/transitive.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'rexml/formatters/pretty'
+require_relative 'pretty'
 
 module REXML
   module Formatters
diff --git a/lib/ruby/stdlib/rexml/functions.rb b/lib/ruby/stdlib/rexml/functions.rb
index cd879fdd282..219f9c8db5d 100644
--- a/lib/ruby/stdlib/rexml/functions.rb
+++ b/lib/ruby/stdlib/rexml/functions.rb
@@ -86,10 +86,14 @@ def Functions::name( node_set=nil )
     # Helper method.
     def Functions::get_namespace( node_set = nil )
       if node_set == nil
-        yield @@context[:node] if defined? @@context[:node].namespace
+        yield @@context[:node] if @@context[:node].respond_to?(:namespace)
       else
         if node_set.respond_to? :each
-          node_set.each { |node| yield node if defined? node.namespace }
+          result = []
+          node_set.each do |node|
+            result << yield(node) if node.respond_to?(:namespace)
+          end
+          result
         elsif node_set.respond_to? :namespace
           yield node_set
         end
@@ -132,21 +136,40 @@ def Functions::get_namespace( node_set = nil )
     # An object of a type other than the four basic types is converted to a
     # string in a way that is dependent on that type.
     def Functions::string( object=nil )
-      #object = @context unless object
-      if object.instance_of? Array
-        string( object[0] )
-      elsif defined? object.node_type
-        if object.node_type == :attribute
+      object = @@context[:node] if object.nil?
+      if object.respond_to?(:node_type)
+        case object.node_type
+        when :attribute
           object.value
-        elsif object.node_type == :element || object.node_type == :document
+        when :element
           string_value(object)
+        when :document
+          string_value(object.root)
+        when :processing_instruction
+          object.content
         else
           object.to_s
         end
-      elsif object.nil?
-        return ""
       else
-        object.to_s
+        case object
+        when Array
+          string(object[0])
+        when Float
+          if object.nan?
+            "NaN"
+          else
+            integer = object.to_i
+            if object == integer
+              "%d" % integer
+            else
+              object.to_s
+            end
+          end
+        when nil
+          ""
+        else
+          object.to_s
+        end
       end
     end
 
@@ -167,9 +190,12 @@ def Functions::string_value( o )
       rv
     end
 
-    # UNTESTED
     def Functions::concat( *objects )
-      objects.join
+      concatenated = ""
+      objects.each do |object|
+        concatenated << string(object)
+      end
+      concatenated
     end
 
     # Fixed by Mike Stok
@@ -397,7 +423,7 @@ def Functions::round( number )
       number = number(number)
       begin
         neg = number.negative?
-        number = number.abs.round(half: :up)
+        number = number.abs.round
         neg ? -number : number
       rescue FloatDomainError
         number
diff --git a/lib/ruby/stdlib/rexml/instruction.rb b/lib/ruby/stdlib/rexml/instruction.rb
index c4f65eefc14..318741f03b5 100644
--- a/lib/ruby/stdlib/rexml/instruction.rb
+++ b/lib/ruby/stdlib/rexml/instruction.rb
@@ -1,13 +1,14 @@
 # frozen_string_literal: false
-require "rexml/child"
-require "rexml/source"
+
+require_relative "child"
+require_relative "source"
 
 module REXML
   # Represents an XML Instruction; IE, <? ... ?>
   # TODO: Add parent arg (3rd arg) to constructor
   class Instruction < Child
-    START = '<\?'
-    STOP = '\?>'
+    START = "<?"
+    STOP = "?>"
 
     # target is the "name" of the Instruction; IE, the "tag" in <?tag ...?>
     # content is everything else.
@@ -17,20 +18,25 @@ class Instruction < Child
     # @param target can be one of a number of things.  If String, then
     # the target of this instruction is set to this.  If an Instruction,
     # then the Instruction is shallowly cloned (target and content are
-    # copied).  If a Source, then the source is scanned and parsed for
-    # an Instruction declaration.
+    # copied).
     # @param content Must be either a String, or a Parent.  Can only
     # be a Parent if the target argument is a Source.  Otherwise, this
     # String is set as the content of this instruction.
     def initialize(target, content=nil)
-      if target.kind_of? String
+      case target
+      when String
         super()
         @target = target
         @content = content
-      elsif target.kind_of? Instruction
+      when Instruction
         super(content)
         @target = target.target
         @content = target.content
+      else
+        message =
+          "processing instruction target must be String or REXML::Instruction: "
+        message << "<#{target.inspect}>"
+        raise ArgumentError, message
       end
       @content.strip! if @content
     end
@@ -45,11 +51,13 @@ def clone
     def write writer, indent=-1, transitive=false, ie_hack=false
       Kernel.warn( "#{self.class.name}.write is deprecated", uplevel: 1)
       indent(writer, indent)
-      writer << START.sub(/\\/u, '')
+      writer << START
       writer << @target
-      writer << ' '
-      writer << @content
-      writer << STOP.sub(/\\/u, '')
+      if @content
+        writer << ' '
+        writer << @content
+      end
+      writer << STOP
     end
 
     # @return true if other is an Instruction, and the content and target
diff --git a/lib/ruby/stdlib/rexml/light/node.rb b/lib/ruby/stdlib/rexml/light/node.rb
index d58119a3a44..01177c64d28 100644
--- a/lib/ruby/stdlib/rexml/light/node.rb
+++ b/lib/ruby/stdlib/rexml/light/node.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'rexml/xmltokens'
+require_relative '../xmltokens'
 
 # [ :element, parent, name, attributes, children* ]
   # a = Node.new
diff --git a/lib/ruby/stdlib/rexml/namespace.rb b/lib/ruby/stdlib/rexml/namespace.rb
index 90ba7cc635b..924edf95063 100644
--- a/lib/ruby/stdlib/rexml/namespace.rb
+++ b/lib/ruby/stdlib/rexml/namespace.rb
@@ -1,5 +1,6 @@
 # frozen_string_literal: false
-require 'rexml/xmltokens'
+
+require_relative 'xmltokens'
 
 module REXML
   # Adds named attributes to an object.
@@ -14,14 +15,24 @@ module Namespace
     # Sets the name and the expanded name
     def name=( name )
       @expanded_name = name
-      name =~ NAMESPLIT
-      if $1
-        @prefix = $1
+      case name
+      when NAMESPLIT
+        if $1
+          @prefix = $1
+        else
+          @prefix = ""
+          @namespace = ""
+        end
+        @name = $2
+      when ""
+        @prefix = nil
+        @namespace = nil
+        @name = nil
       else
-        @prefix = ""
-        @namespace = ""
+        message = "name must be \#{PREFIX}:\#{LOCAL_NAME} or \#{LOCAL_NAME}: "
+        message += "<#{name.inspect}>"
+        raise ArgumentError, message
       end
-      @name = $2
     end
 
     # Compares names optionally WITH namespaces
diff --git a/lib/ruby/stdlib/rexml/node.rb b/lib/ruby/stdlib/rexml/node.rb
index 52337ade44e..081caba6cb7 100644
--- a/lib/ruby/stdlib/rexml/node.rb
+++ b/lib/ruby/stdlib/rexml/node.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require "rexml/parseexception"
-require "rexml/formatters/pretty"
-require "rexml/formatters/default"
+require_relative "parseexception"
+require_relative "formatters/pretty"
+require_relative "formatters/default"
 
 module REXML
   # Represents a node in the tree.  Nodes are never encountered except as
diff --git a/lib/ruby/stdlib/rexml/output.rb b/lib/ruby/stdlib/rexml/output.rb
index 96dfea570ed..88a5fb378d9 100644
--- a/lib/ruby/stdlib/rexml/output.rb
+++ b/lib/ruby/stdlib/rexml/output.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'rexml/encoding'
+require_relative 'encoding'
 
 module REXML
   class Output
diff --git a/lib/ruby/stdlib/rexml/parent.rb b/lib/ruby/stdlib/rexml/parent.rb
index 3bd0a962555..6a53b37a123 100644
--- a/lib/ruby/stdlib/rexml/parent.rb
+++ b/lib/ruby/stdlib/rexml/parent.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/child"
+require_relative "child"
 
 module REXML
   # A parent has children, and has methods for accessing them.  The Parent
diff --git a/lib/ruby/stdlib/rexml/parsers/baseparser.rb b/lib/ruby/stdlib/rexml/parsers/baseparser.rb
index 80eeb0fa79c..39e9ec3fb11 100644
--- a/lib/ruby/stdlib/rexml/parsers/baseparser.rb
+++ b/lib/ruby/stdlib/rexml/parsers/baseparser.rb
@@ -1,8 +1,9 @@
 # frozen_string_literal: false
-require 'rexml/parseexception'
-require 'rexml/undefinednamespaceexception'
-require 'rexml/source'
+require_relative '../parseexception'
+require_relative '../undefinednamespaceexception'
+require_relative '../source'
 require 'set'
+require "strscan"
 
 module REXML
   module Parsers
@@ -32,8 +33,12 @@ class BaseParser
       COMBININGCHAR = '' # TODO
       EXTENDER = ''      # TODO
 
-      NCNAME_STR= "[#{LETTER}_:][-[:alnum:]._:#{COMBININGCHAR}#{EXTENDER}]*"
-      NAME_STR= "(?:(#{NCNAME_STR}):)?(#{NCNAME_STR})"
+      NCNAME_STR= "[#{LETTER}_][-[:alnum:]._#{COMBININGCHAR}#{EXTENDER}]*"
+      QNAME_STR= "(?:(#{NCNAME_STR}):)?(#{NCNAME_STR})"
+      QNAME = /(#{QNAME_STR})/
+
+      # Just for backward compatibility. For example, kramdown uses this.
+      # It's not used in REXML.
       UNAME_STR= "(?:#{NCNAME_STR}:)?#{NCNAME_STR}"
 
       NAMECHAR = '[\-\w\.:]'
@@ -46,7 +51,7 @@ class BaseParser
       DOCTYPE_START = /\A\s*<!DOCTYPE\s/um
       DOCTYPE_END = /\A\s*\]\s*>/um
       DOCTYPE_PATTERN = /\s*<!DOCTYPE\s+(.*?)(\[|>)/um
-      ATTRIBUTE_PATTERN = /\s*(#{NAME_STR})\s*=\s*(["'])(.*?)\4/um
+      ATTRIBUTE_PATTERN = /\s*(#{QNAME_STR})\s*=\s*(["'])(.*?)\4/um
       COMMENT_START = /\A<!--/u
       COMMENT_PATTERN = /<!--(.*?)-->/um
       CDATA_START = /\A<!\[CDATA\[/u
@@ -55,9 +60,9 @@ class BaseParser
       XMLDECL_START = /\A<\?xml\s/u;
       XMLDECL_PATTERN = /<\?xml\s+(.*?)\?>/um
       INSTRUCTION_START = /\A<\?/u
-      INSTRUCTION_PATTERN = /<\?(.*?)(\s+.*?)?\?>/um
-      TAG_MATCH = /^<((?>#{NAME_STR}))\s*((?>\s+#{UNAME_STR}\s*=\s*(["']).*?\5)*)\s*(\/)?>/um
-      CLOSE_MATCH = /^\s*<\/(#{NAME_STR})\s*>/um
+      INSTRUCTION_PATTERN = /<\?#{NAME}(\s+.*?)?\?>/um
+      TAG_MATCH = /^<((?>#{QNAME_STR}))/um
+      CLOSE_MATCH = /^\s*<\/(#{QNAME_STR})\s*>/um
 
       VERSION = /\bversion\s*=\s*["'](.*?)['"]/um
       ENCODING = /\bencoding\s*=\s*["'](.*?)['"]/um
@@ -107,13 +112,6 @@ class BaseParser
         "apos" => [/&apos;/, "&apos;", "'", /'/]
       }
 
-
-      ######################################################################
-      # These are patterns to identify common markup errors, to make the
-      # error messages more informative.
-      ######################################################################
-      MISSING_ATTRIBUTE_QUOTES = /^<#{NAME_STR}\s+#{NAME_STR}\s*=\s*[^"']/um
-
       def initialize( source )
         self.stream = source
         @listeners = []
@@ -224,7 +222,7 @@ def pull_event
             standalone = standalone[1] unless standalone.nil?
             return [ :xmldecl, version, encoding, standalone ]
           when INSTRUCTION_START
-            return [ :processing_instruction, *@source.match(INSTRUCTION_PATTERN, true)[1,2] ]
+            return process_instruction
           when DOCTYPE_START
             md = @source.match( DOCTYPE_PATTERN, true )
             @nsstack.unshift(curr_ns=Set.new)
@@ -336,11 +334,12 @@ def pull_event
             if @source.buffer[1] == ?/
               @nsstack.shift
               last_tag = @tags.pop
-              #md = @source.match_to_consume( '>', CLOSE_MATCH)
               md = @source.match( CLOSE_MATCH, true )
-              raise REXML::ParseException.new( "Missing end tag for "+
-                "'#{last_tag}' (got \"#{md[1]}\")",
-                @source) unless last_tag == md[1]
+              if md.nil? or last_tag != md[1]
+                message = "Missing end tag for '#{last_tag}'"
+                message << " (got '#{md[1]}')" if md
+                raise REXML::ParseException.new(message, @source)
+              end
               return [ :end_element, last_tag ]
             elsif @source.buffer[1] == ?!
               md = @source.match(/\A(\s*[^>]*>)/um)
@@ -362,52 +361,17 @@ def pull_event
               raise REXML::ParseException.new( "Declarations can only occur "+
                 "in the doctype declaration.", @source)
             elsif @source.buffer[1] == ??
-              md = @source.match( INSTRUCTION_PATTERN, true )
-              return [ :processing_instruction, md[1], md[2] ] if md
-              raise REXML::ParseException.new( "Bad instruction declaration",
-                @source)
+              return process_instruction
             else
               # Get the next tag
               md = @source.match(TAG_MATCH, true)
               unless md
-                # Check for missing attribute quotes
-                raise REXML::ParseException.new("missing attribute quote", @source) if @source.match(MISSING_ATTRIBUTE_QUOTES )
                 raise REXML::ParseException.new("malformed XML: missing tag start", @source)
               end
-              attributes = {}
               prefixes = Set.new
               prefixes << md[2] if md[2]
               @nsstack.unshift(curr_ns=Set.new)
-              if md[4].size > 0
-                attrs = md[4].scan( ATTRIBUTE_PATTERN )
-                raise REXML::ParseException.new( "error parsing attributes: [#{attrs.join ', '}], excess = \"#$'\"", @source) if $' and $'.strip.size > 0
-                attrs.each do |attr_name, prefix, local_part, quote, value|
-                  if prefix == "xmlns"
-                    if local_part == "xml"
-                      if value != "http://www.w3.org/XML/1998/namespace"
-                        msg = "The 'xml' prefix must not be bound to any other namespace "+
-                        "(http://www.w3.org/TR/REC-xml-names/#ns-decl)"
-                        raise REXML::ParseException.new( msg, @source, self )
-                      end
-                    elsif local_part == "xmlns"
-                      msg = "The 'xmlns' prefix must not be declared "+
-                      "(http://www.w3.org/TR/REC-xml-names/#ns-decl)"
-                      raise REXML::ParseException.new( msg, @source, self)
-                    end
-                    curr_ns << local_part
-                  elsif prefix
-                    prefixes << prefix unless prefix == "xml"
-                  end
-
-                  if attributes.has_key?(attr_name)
-                    msg = "Duplicate attribute #{attr_name.inspect}"
-                    raise REXML::ParseException.new(msg, @source, self)
-                  end
-
-                  attributes[attr_name] = value
-                end
-              end
-
+              attributes, closed = parse_attributes(prefixes, curr_ns)
               # Verify that all of the prefixes have been defined
               for prefix in prefixes
                 unless @nsstack.find{|k| k.member?(prefix)}
@@ -415,7 +379,7 @@ def pull_event
                 end
               end
 
-              if md[6]
+              if closed
                 @closed = md[1]
                 @nsstack.shift
               else
@@ -438,7 +402,7 @@ def pull_event
           raise
         rescue REXML::ParseException
           raise
-        rescue Exception, NameError => error
+        rescue => error
           raise REXML::ParseException.new( "Exception parsing",
             @source, self, (error ? error : $!) )
         end
@@ -508,6 +472,99 @@ def need_source_encoding_update?(xml_declaration_encoding)
         return false if /\AUTF-16\z/i =~ xml_declaration_encoding
         true
       end
+
+      def process_instruction
+        match_data = @source.match(INSTRUCTION_PATTERN, true)
+        unless match_data
+          message = "Invalid processing instruction node"
+          raise REXML::ParseException.new(message, @source)
+        end
+        [:processing_instruction, match_data[1], match_data[2]]
+      end
+
+      def parse_attributes(prefixes, curr_ns)
+        attributes = {}
+        closed = false
+        match_data = @source.match(/^(.*?)(\/)?>/um, true)
+        if match_data.nil?
+          message = "Start tag isn't ended"
+          raise REXML::ParseException.new(message, @source)
+        end
+
+        raw_attributes = match_data[1]
+        closed = !match_data[2].nil?
+        return attributes, closed if raw_attributes.nil?
+        return attributes, closed if raw_attributes.empty?
+
+        scanner = StringScanner.new(raw_attributes)
+        until scanner.eos?
+          if scanner.scan(/\s+/)
+            break if scanner.eos?
+          end
+
+          pos = scanner.pos
+          loop do
+            break if scanner.scan(ATTRIBUTE_PATTERN)
+            unless scanner.scan(QNAME)
+              message = "Invalid attribute name: <#{scanner.rest}>"
+              raise REXML::ParseException.new(message, @source)
+            end
+            name = scanner[0]
+            unless scanner.scan(/\s*=\s*/um)
+              message = "Missing attribute equal: <#{name}>"
+              raise REXML::ParseException.new(message, @source)
+            end
+            quote = scanner.scan(/['"]/)
+            unless quote
+              message = "Missing attribute value start quote: <#{name}>"
+              raise REXML::ParseException.new(message, @source)
+            end
+            unless scanner.scan(/.*#{Regexp.escape(quote)}/um)
+              match_data = @source.match(/^(.*?)(\/)?>/um, true)
+              if match_data
+                scanner << "/" if closed
+                scanner << ">"
+                scanner << match_data[1]
+                scanner.pos = pos
+                closed = !match_data[2].nil?
+                next
+              end
+              message =
+                "Missing attribute value end quote: <#{name}>: <#{quote}>"
+              raise REXML::ParseException.new(message, @source)
+            end
+          end
+          name = scanner[1]
+          prefix = scanner[2]
+          local_part = scanner[3]
+          # quote = scanner[4]
+          value = scanner[5]
+          if prefix == "xmlns"
+            if local_part == "xml"
+              if value != "http://www.w3.org/XML/1998/namespace"
+                msg = "The 'xml' prefix must not be bound to any other namespace "+
+                  "(http://www.w3.org/TR/REC-xml-names/#ns-decl)"
+                raise REXML::ParseException.new( msg, @source, self )
+              end
+            elsif local_part == "xmlns"
+              msg = "The 'xmlns' prefix must not be declared "+
+                "(http://www.w3.org/TR/REC-xml-names/#ns-decl)"
+              raise REXML::ParseException.new( msg, @source, self)
+            end
+            curr_ns << local_part
+          elsif prefix
+            prefixes << prefix unless prefix == "xml"
+          end
+
+          if attributes.has_key?(name)
+            msg = "Duplicate attribute #{name.inspect}"
+            raise REXML::ParseException.new(msg, @source, self)
+          end
+
+          attributes[name] = value
+        end
+        return attributes, closed
+      end
     end
   end
 end
diff --git a/lib/ruby/stdlib/rexml/parsers/lightparser.rb b/lib/ruby/stdlib/rexml/parsers/lightparser.rb
index f0601ae51b1..bdc08276a9a 100644
--- a/lib/ruby/stdlib/rexml/parsers/lightparser.rb
+++ b/lib/ruby/stdlib/rexml/parsers/lightparser.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require 'rexml/parsers/streamparser'
-require 'rexml/parsers/baseparser'
-require 'rexml/light/node'
+require_relative 'streamparser'
+require_relative 'baseparser'
+require_relative '../light/node'
 
 module REXML
   module Parsers
diff --git a/lib/ruby/stdlib/rexml/parsers/pullparser.rb b/lib/ruby/stdlib/rexml/parsers/pullparser.rb
index 8c492175533..f8b232a2cd3 100644
--- a/lib/ruby/stdlib/rexml/parsers/pullparser.rb
+++ b/lib/ruby/stdlib/rexml/parsers/pullparser.rb
@@ -1,9 +1,9 @@
 # frozen_string_literal: false
 require 'forwardable'
 
-require 'rexml/parseexception'
-require 'rexml/parsers/baseparser'
-require 'rexml/xmltokens'
+require_relative '../parseexception'
+require_relative 'baseparser'
+require_relative '../xmltokens'
 
 module REXML
   module Parsers
diff --git a/lib/ruby/stdlib/rexml/parsers/sax2parser.rb b/lib/ruby/stdlib/rexml/parsers/sax2parser.rb
index 1386f69c83f..6a24ce2227a 100644
--- a/lib/ruby/stdlib/rexml/parsers/sax2parser.rb
+++ b/lib/ruby/stdlib/rexml/parsers/sax2parser.rb
@@ -1,8 +1,8 @@
 # frozen_string_literal: false
-require 'rexml/parsers/baseparser'
-require 'rexml/parseexception'
-require 'rexml/namespace'
-require 'rexml/text'
+require_relative 'baseparser'
+require_relative '../parseexception'
+require_relative '../namespace'
+require_relative '../text'
 
 module REXML
   module Parsers
diff --git a/lib/ruby/stdlib/rexml/parsers/streamparser.rb b/lib/ruby/stdlib/rexml/parsers/streamparser.rb
index f6a8bfa802c..9e0eb0b363c 100644
--- a/lib/ruby/stdlib/rexml/parsers/streamparser.rb
+++ b/lib/ruby/stdlib/rexml/parsers/streamparser.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rexml/parsers/baseparser"
+require_relative "baseparser"
 
 module REXML
   module Parsers
diff --git a/lib/ruby/stdlib/rexml/parsers/treeparser.rb b/lib/ruby/stdlib/rexml/parsers/treeparser.rb
index fc0993c72a5..bf9a42545b8 100644
--- a/lib/ruby/stdlib/rexml/parsers/treeparser.rb
+++ b/lib/ruby/stdlib/rexml/parsers/treeparser.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rexml/validation/validationexception'
-require 'rexml/undefinednamespaceexception'
+require_relative '../validation/validationexception'
+require_relative '../undefinednamespaceexception'
 
 module REXML
   module Parsers
diff --git a/lib/ruby/stdlib/rexml/parsers/ultralightparser.rb b/lib/ruby/stdlib/rexml/parsers/ultralightparser.rb
index 6571d119bd6..e0029f43da5 100644
--- a/lib/ruby/stdlib/rexml/parsers/ultralightparser.rb
+++ b/lib/ruby/stdlib/rexml/parsers/ultralightparser.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rexml/parsers/streamparser'
-require 'rexml/parsers/baseparser'
+require_relative 'streamparser'
+require_relative 'baseparser'
 
 module REXML
   module Parsers
diff --git a/lib/ruby/stdlib/rexml/parsers/xpathparser.rb b/lib/ruby/stdlib/rexml/parsers/xpathparser.rb
index 32b70bb7989..d01d325e04d 100644
--- a/lib/ruby/stdlib/rexml/parsers/xpathparser.rb
+++ b/lib/ruby/stdlib/rexml/parsers/xpathparser.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rexml/namespace'
-require 'rexml/xmltokens'
+require_relative '../namespace'
+require_relative '../xmltokens'
 
 module REXML
   module Parsers
@@ -185,7 +185,7 @@ def predicate_to_string( path, &block )
       #  | '/' RelativeLocationPath?
       #  | '//' RelativeLocationPath
       def LocationPath path, parsed
-        path = path.strip
+        path = path.lstrip
         if path[0] == ?/
           parsed << :document
           if path[1] == ?/
@@ -209,7 +209,12 @@ def LocationPath path, parsed
       #  | RelativeLocationPath '//' Step
       AXIS = /^(ancestor|ancestor-or-self|attribute|child|descendant|descendant-or-self|following|following-sibling|namespace|parent|preceding|preceding-sibling|self)::/
       def RelativeLocationPath path, parsed
-        while path.size > 0
+        loop do
+          original_path = path
+          path = path.lstrip
+
+          return original_path if path.empty?
+
           # (axis or @ or <child::>) nodetest predicate  >
           # OR                                          >  / Step
           # (. or ..)                                    >
@@ -239,28 +244,25 @@ def RelativeLocationPath path, parsed
             n = []
             path = NodeTest( path, n)
 
-            if path[0] == ?[
-              path = Predicate( path, n )
-            end
+            path = Predicate( path, n )
 
             parsed.concat(n)
           end
 
-          if path.size > 0
-            if path[0] == ?/
-              if path[1] == ?/
-                parsed << :descendant_or_self
-                parsed << :node
-                path = path[2..-1]
-              else
-                path = path[1..-1]
-              end
-            else
-              return path
-            end
+          original_path = path
+          path = path.lstrip
+          return original_path if path.empty?
+
+          return original_path if path[0] != ?/
+
+          if path[1] == ?/
+            parsed << :descendant_or_self
+            parsed << :node
+            path = path[2..-1]
+          else
+            path = path[1..-1]
           end
         end
-        return path
       end
 
       # Returns a 1-1 map of the nodeset
@@ -269,15 +271,26 @@ def RelativeLocationPath path, parsed
       #   String, if a name match
       #NodeTest
       #  | ('*' | NCNAME ':' '*' | QNAME)                NameTest
-      #  | NODE_TYPE '(' ')'                              NodeType
+      #  | '*' ':' NCNAME                                NameTest since XPath 2.0
+      #  | NODE_TYPE '(' ')'                             NodeType
       #  | PI '(' LITERAL ')'                            PI
       #    | '[' expr ']'                                Predicate
-      NCNAMETEST= /^(#{NCNAME_STR}):\*/u
+      PREFIX_WILDCARD = /^\*:(#{NCNAME_STR})/u
+      LOCAL_NAME_WILDCARD = /^(#{NCNAME_STR}):\*/u
       QNAME     = Namespace::NAMESPLIT
       NODE_TYPE  = /^(comment|text|node)\(\s*\)/m
       PI        = /^processing-instruction\(/
       def NodeTest path, parsed
+        original_path = path
+        path = path.lstrip
         case path
+        when PREFIX_WILDCARD
+          prefix = nil
+          name = $1
+          path = $'
+          parsed << :qname
+          parsed << prefix
+          parsed << name
         when /^\*/
           path = $'
           parsed << :any
@@ -297,7 +310,7 @@ def NodeTest path, parsed
           end
           parsed << :processing_instruction
           parsed << (literal || '')
-        when NCNAMETEST
+        when LOCAL_NAME_WILDCARD
           prefix = $1
           path = $'
           parsed << :namespace
@@ -310,13 +323,17 @@ def NodeTest path, parsed
           parsed << :qname
           parsed << prefix
           parsed << name
+        else
+          path = original_path
         end
         return path
       end
 
       # Filters the supplied nodeset on the predicate(s)
       def Predicate path, parsed
-        return nil unless path[0] == ?[
+        original_path = path
+        path = path.lstrip
+        return original_path unless path[0] == ?[
         predicates = []
         while path[0] == ?[
           path, expr = get_group(path)
@@ -421,13 +438,13 @@ def RelationalExpr path, parsed
         rest
       end
 
-      #| AdditiveExpr ('+' | S '-') MultiplicativeExpr
+      #| AdditiveExpr ('+' | '-') MultiplicativeExpr
       #| MultiplicativeExpr
       def AdditiveExpr path, parsed
         n = []
         rest = MultiplicativeExpr( path, n )
         if rest != path
-          while rest =~ /^\s*(\+| -)\s*/
+          while rest =~ /^\s*(\+|-)\s*/
             if $1[0] == ?+
               n = [ :plus, n, [] ]
             else
@@ -509,13 +526,14 @@ def UnionExpr path, parsed
       #| LocationPath
       #| FilterExpr ('/' | '//') RelativeLocationPath
       def PathExpr path, parsed
-        path =~ /^\s*/
-        path = $'
+        path = path.lstrip
         n = []
         rest = FilterExpr( path, n )
         if rest != path
           if rest and rest[0] == ?/
-            return RelativeLocationPath(rest, n)
+            rest = RelativeLocationPath(rest, n)
+            parsed.concat(n)
+            return rest
           end
         end
         rest = LocationPath(rest, n) if rest =~ /\A[\/\.\@\[\w*]/
@@ -528,7 +546,7 @@ def PathExpr path, parsed
       def FilterExpr path, parsed
         n = []
         path = PrimaryExpr( path, n )
-        path = Predicate(path, n) if path and path[0] == ?[
+        path = Predicate(path, n)
         parsed.concat(n)
         path
       end
diff --git a/lib/ruby/stdlib/rexml/quickpath.rb b/lib/ruby/stdlib/rexml/quickpath.rb
index 5d6c77ca38d..a0466b25d9b 100644
--- a/lib/ruby/stdlib/rexml/quickpath.rb
+++ b/lib/ruby/stdlib/rexml/quickpath.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rexml/functions'
-require 'rexml/xmltokens'
+require_relative 'functions'
+require_relative 'xmltokens'
 
 module REXML
   class QuickPath
diff --git a/lib/ruby/stdlib/rexml/rexml.gemspec b/lib/ruby/stdlib/rexml/rexml.gemspec
new file mode 100644
index 00000000000..6fe7e635f19
--- /dev/null
+++ b/lib/ruby/stdlib/rexml/rexml.gemspec
@@ -0,0 +1,85 @@
+begin
+  require_relative "lib/rexml/rexml"
+rescue LoadError
+  # for Ruby core repository
+  require_relative "rexml"
+end
+
+Gem::Specification.new do |spec|
+  spec.name          = "rexml"
+  spec.version       = REXML::VERSION
+  spec.authors       = ["Kouhei Sutou"]
+  spec.email         = ["kou@cozmixng.org"]
+
+  spec.summary       = %q{An XML toolkit for Ruby}
+  spec.description   = %q{An XML toolkit for Ruby}
+  spec.homepage      = "https://github.com/ruby/rexml"
+  spec.license       = "BSD-2-Clause"
+
+  spec.files         = [
+    ".gitignore",
+    ".travis.yml",
+    "Gemfile",
+    "LICENSE.txt",
+    "NEWS.md",
+    "README.md",
+    "Rakefile",
+    "lib/rexml/attlistdecl.rb",
+    "lib/rexml/attribute.rb",
+    "lib/rexml/cdata.rb",
+    "lib/rexml/child.rb",
+    "lib/rexml/comment.rb",
+    "lib/rexml/doctype.rb",
+    "lib/rexml/document.rb",
+    "lib/rexml/dtd/attlistdecl.rb",
+    "lib/rexml/dtd/dtd.rb",
+    "lib/rexml/dtd/elementdecl.rb",
+    "lib/rexml/dtd/entitydecl.rb",
+    "lib/rexml/dtd/notationdecl.rb",
+    "lib/rexml/element.rb",
+    "lib/rexml/encoding.rb",
+    "lib/rexml/entity.rb",
+    "lib/rexml/formatters/default.rb",
+    "lib/rexml/formatters/pretty.rb",
+    "lib/rexml/formatters/transitive.rb",
+    "lib/rexml/functions.rb",
+    "lib/rexml/instruction.rb",
+    "lib/rexml/light/node.rb",
+    "lib/rexml/namespace.rb",
+    "lib/rexml/node.rb",
+    "lib/rexml/output.rb",
+    "lib/rexml/parent.rb",
+    "lib/rexml/parseexception.rb",
+    "lib/rexml/parsers/baseparser.rb",
+    "lib/rexml/parsers/lightparser.rb",
+    "lib/rexml/parsers/pullparser.rb",
+    "lib/rexml/parsers/sax2parser.rb",
+    "lib/rexml/parsers/streamparser.rb",
+    "lib/rexml/parsers/treeparser.rb",
+    "lib/rexml/parsers/ultralightparser.rb",
+    "lib/rexml/parsers/xpathparser.rb",
+    "lib/rexml/quickpath.rb",
+    "lib/rexml/rexml.rb",
+    "lib/rexml/sax2listener.rb",
+    "lib/rexml/security.rb",
+    "lib/rexml/source.rb",
+    "lib/rexml/streamlistener.rb",
+    "lib/rexml/syncenumerator.rb",
+    "lib/rexml/text.rb",
+    "lib/rexml/undefinednamespaceexception.rb",
+    "lib/rexml/validation/relaxng.rb",
+    "lib/rexml/validation/validation.rb",
+    "lib/rexml/validation/validationexception.rb",
+    "lib/rexml/xmldecl.rb",
+    "lib/rexml/xmltokens.rb",
+    "lib/rexml/xpath.rb",
+    "lib/rexml/xpath_parser.rb",
+    "rexml.gemspec",
+  ]
+  spec.bindir        = "exe"
+  spec.executables   = spec.files.grep(%r{^exe/}) { |f| File.basename(f) }
+  spec.require_paths = ["lib"]
+
+  spec.add_development_dependency "bundler"
+  spec.add_development_dependency "rake"
+end
diff --git a/lib/ruby/stdlib/rexml/rexml.rb b/lib/ruby/stdlib/rexml/rexml.rb
index fbc0d339d88..7851c78bf5b 100644
--- a/lib/ruby/stdlib/rexml/rexml.rb
+++ b/lib/ruby/stdlib/rexml/rexml.rb
@@ -1,4 +1,4 @@
-# -*- encoding: utf-8 -*-
+# -*- coding: utf-8 -*-
 # frozen_string_literal: false
 # REXML is an XML toolkit for Ruby[http://www.ruby-lang.org], in Ruby.
 #
@@ -24,8 +24,8 @@
 module REXML
   COPYRIGHT = "Copyright © 2001-2008 Sean Russell <ser@germane-software.com>"
   DATE = "2008/019"
-  VERSION = "3.1.7.3"
-  REVISION = %w$Revision$[1] || ''
+  VERSION = "3.1.9"
+  REVISION = ""
 
   Copyright = COPYRIGHT
   Version = VERSION
diff --git a/lib/ruby/stdlib/rexml/source.rb b/lib/ruby/stdlib/rexml/source.rb
index af65cf4751a..770aefc8187 100644
--- a/lib/ruby/stdlib/rexml/source.rb
+++ b/lib/ruby/stdlib/rexml/source.rb
@@ -1,6 +1,6 @@
 # coding: US-ASCII
 # frozen_string_literal: false
-require 'rexml/encoding'
+require_relative 'encoding'
 
 module REXML
   # Generates Source-s.  USE THIS CLASS.
@@ -254,6 +254,7 @@ def current_line
           end
         rescue
         end
+        @er_source.seek(pos)
       rescue IOError
         pos = -1
         line = -1
diff --git a/lib/ruby/stdlib/rexml/text.rb b/lib/ruby/stdlib/rexml/text.rb
index 86269dea1e5..6139caecd76 100644
--- a/lib/ruby/stdlib/rexml/text.rb
+++ b/lib/ruby/stdlib/rexml/text.rb
@@ -1,10 +1,10 @@
 # frozen_string_literal: false
-require 'rexml/security'
-require 'rexml/entity'
-require 'rexml/doctype'
-require 'rexml/child'
-require 'rexml/doctype'
-require 'rexml/parseexception'
+require_relative 'security'
+require_relative 'entity'
+require_relative 'doctype'
+require_relative 'child'
+require_relative 'doctype'
+require_relative 'parseexception'
 
 module REXML
   # Represents text nodes in an XML document
@@ -96,27 +96,28 @@ def initialize(arg, respect_whitespace=false, parent=nil, raw=nil,
 
       @raw = false
       @parent = nil
+      @entity_filter = nil
 
       if parent
         super( parent )
         @raw = parent.raw
       end
 
-      @raw = raw unless raw.nil?
-      @entity_filter = entity_filter
-      clear_cache
-
       if arg.kind_of? String
         @string = arg.dup
-        @string.squeeze!(" \n\t") unless respect_whitespace
       elsif arg.kind_of? Text
-        @string = arg.to_s
+        @string = arg.instance_variable_get(:@string).dup
         @raw = arg.raw
+        @entity_filter = arg.instance_variable_get(:@entity_filter)
       elsif
         raise "Illegal argument of type #{arg.type} for Text constructor (#{arg})"
       end
 
-      @string.gsub!( /\r\n?/, "\n" )
+      @string.squeeze!(" \n\t") unless respect_whitespace
+      @string.gsub!(/\r\n?/, "\n")
+      @raw = raw unless raw.nil?
+      @entity_filter = entity_filter if entity_filter
+      clear_cache
 
       Text.check(@string, illegal, doctype) if @raw
     end
@@ -181,7 +182,7 @@ def empty?
 
 
     def clone
-      return Text.new(self)
+      return Text.new(self, true)
     end
 
 
@@ -226,9 +227,7 @@ def doctype
     #   u.to_s   #-> "sean russell"
     def to_s
       return @string if @raw
-      return @normalized if @normalized
-
-      @normalized = Text::normalize( @string, doctype, @entity_filter )
+      @normalized ||= Text::normalize( @string, doctype, @entity_filter )
     end
 
     def inspect
@@ -249,8 +248,7 @@ def inspect
     #   u = Text.new( "sean russell", false, nil, true )
     #   u.value   #-> "sean russell"
     def value
-      return @unnormalized if @unnormalized
-      @unnormalized = Text::unnormalize( @string, doctype )
+      @unnormalized ||= Text::unnormalize( @string, doctype )
     end
 
     # Sets the contents of this text node.  This expects the text to be
@@ -266,16 +264,16 @@ def value=( val )
       @raw = false
     end
 
-     def wrap(string, width, addnewline=false)
-       # Recursively wrap string at width.
-       return string if string.length <= width
-       place = string.rindex(' ', width) # Position in string with last ' ' before cutoff
-       if addnewline then
-         return "\n" + string[0,place] + "\n" + wrap(string[place+1..-1], width)
-       else
-         return string[0,place] + "\n" + wrap(string[place+1..-1], width)
-       end
-     end
+    def wrap(string, width, addnewline=false)
+      # Recursively wrap string at width.
+      return string if string.length <= width
+      place = string.rindex(' ', width) # Position in string with last ' ' before cutoff
+      if addnewline then
+        return "\n" + string[0,place] + "\n" + wrap(string[place+1..-1], width)
+      else
+        return string[0,place] + "\n" + wrap(string[place+1..-1], width)
+      end
+    end
 
     def indent_text(string, level=1, style="\t", indentfirstline=true)
       return string if level < 0
diff --git a/lib/ruby/stdlib/rexml/undefinednamespaceexception.rb b/lib/ruby/stdlib/rexml/undefinednamespaceexception.rb
index e522ed57eaa..492a098183e 100644
--- a/lib/ruby/stdlib/rexml/undefinednamespaceexception.rb
+++ b/lib/ruby/stdlib/rexml/undefinednamespaceexception.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'rexml/parseexception'
+require_relative 'parseexception'
 module REXML
   class UndefinedNamespaceException < ParseException
     def initialize( prefix, source, parser )
diff --git a/lib/ruby/stdlib/rexml/validation/relaxng.rb b/lib/ruby/stdlib/rexml/validation/relaxng.rb
index fb52438290d..f29a2c05e57 100644
--- a/lib/ruby/stdlib/rexml/validation/relaxng.rb
+++ b/lib/ruby/stdlib/rexml/validation/relaxng.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require "rexml/validation/validation"
-require "rexml/parsers/baseparser"
+require_relative "validation"
+require_relative "../parsers/baseparser"
 
 module REXML
   module Validation
diff --git a/lib/ruby/stdlib/rexml/validation/validation.rb b/lib/ruby/stdlib/rexml/validation/validation.rb
index f0c76f976ca..0ad6ada4277 100644
--- a/lib/ruby/stdlib/rexml/validation/validation.rb
+++ b/lib/ruby/stdlib/rexml/validation/validation.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'rexml/validation/validationexception'
+require_relative 'validationexception'
 
 module REXML
   module Validation
diff --git a/lib/ruby/stdlib/rexml/xmldecl.rb b/lib/ruby/stdlib/rexml/xmldecl.rb
index a37e9f3ddc6..89c0747d492 100644
--- a/lib/ruby/stdlib/rexml/xmldecl.rb
+++ b/lib/ruby/stdlib/rexml/xmldecl.rb
@@ -1,17 +1,18 @@
 # frozen_string_literal: false
-require 'rexml/encoding'
-require 'rexml/source'
+
+require_relative 'encoding'
+require_relative 'source'
 
 module REXML
   # NEEDS DOCUMENTATION
   class XMLDecl < Child
     include Encoding
 
-    DEFAULT_VERSION = "1.0";
-    DEFAULT_ENCODING = "UTF-8";
-    DEFAULT_STANDALONE = "no";
-    START = '<\?xml';
-    STOP = '\?>';
+    DEFAULT_VERSION = "1.0"
+    DEFAULT_ENCODING = "UTF-8"
+    DEFAULT_STANDALONE = "no"
+    START = "<?xml"
+    STOP = "?>"
 
     attr_accessor :version, :standalone
     attr_reader :writeencoding, :writethis
@@ -46,9 +47,9 @@ def clone
     #   Ignored
     def write(writer, indent=-1, transitive=false, ie_hack=false)
       return nil unless @writethis or writer.kind_of? Output
-      writer << START.sub(/\\/u, '')
+      writer << START
       writer << " #{content encoding}"
-      writer << STOP.sub(/\\/u, '')
+      writer << STOP
     end
 
     def ==( other )
@@ -102,14 +103,26 @@ def dowrite
     end
 
     def inspect
-      START.sub(/\\/u, '') + " ... " + STOP.sub(/\\/u, '')
+      "#{START} ... #{STOP}"
     end
 
     private
     def content(enc)
-      rv = "version='#@version'"
-      rv << " encoding='#{enc}'" if @writeencoding || enc !~ /\Autf-8\z/i
-      rv << " standalone='#@standalone'" if @standalone
+      context = nil
+      context = parent.context if parent
+      if context and context[:prologue_quote] == :quote
+        quote = "\""
+      else
+        quote = "'"
+      end
+
+      rv = "version=#{quote}#{@version}#{quote}"
+      if @writeencoding or enc !~ /\Autf-8\z/i
+        rv << " encoding=#{quote}#{enc}#{quote}"
+      end
+      if @standalone
+        rv << " standalone=#{quote}#{@standalone}#{quote}"
+      end
       rv
     end
   end
diff --git a/lib/ruby/stdlib/rexml/xpath.rb b/lib/ruby/stdlib/rexml/xpath.rb
index f1cb99baea0..a0921bd8e10 100644
--- a/lib/ruby/stdlib/rexml/xpath.rb
+++ b/lib/ruby/stdlib/rexml/xpath.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rexml/functions'
-require 'rexml/xpath_parser'
+require_relative 'functions'
+require_relative 'xpath_parser'
 
 module REXML
   # Wrapper class.  Use this class to access the XPath functions.
@@ -28,10 +28,10 @@ class XPath
     #  XPath.first( doc, "//b"} )
     #  XPath.first( node, "a/x:b", { "x"=>"http://doofus" } )
     #  XPath.first( node, '/book/publisher/text()=$publisher', {}, {"publisher"=>"O'Reilly"})
-    def XPath::first element, path=nil, namespaces=nil, variables={}
+    def XPath::first(element, path=nil, namespaces=nil, variables={}, options={})
       raise "The namespaces argument, if supplied, must be a hash object." unless namespaces.nil? or namespaces.kind_of?(Hash)
       raise "The variables argument, if supplied, must be a hash object." unless variables.kind_of?(Hash)
-      parser = XPathParser.new
+      parser = XPathParser.new(**options)
       parser.namespaces = namespaces
       parser.variables = variables
       path = "*" unless path
@@ -57,10 +57,10 @@ def XPath::first element, path=nil, namespaces=nil, variables={}
     #  XPath.each( node, 'ancestor::x' ) { |el| ... }
     #  XPath.each( node, '/book/publisher/text()=$publisher', {}, {"publisher"=>"O'Reilly"}) \
     #    {|el| ... }
-    def XPath::each element, path=nil, namespaces=nil, variables={}, &block
+    def XPath::each(element, path=nil, namespaces=nil, variables={}, options={}, &block)
       raise "The namespaces argument, if supplied, must be a hash object." unless namespaces.nil? or namespaces.kind_of?(Hash)
       raise "The variables argument, if supplied, must be a hash object." unless variables.kind_of?(Hash)
-      parser = XPathParser.new
+      parser = XPathParser.new(**options)
       parser.namespaces = namespaces
       parser.variables = variables
       path = "*" unless path
@@ -69,8 +69,8 @@ def XPath::each element, path=nil, namespaces=nil, variables={}, &block
     end
 
     # Returns an array of nodes matching a given XPath.
-    def XPath::match element, path=nil, namespaces=nil, variables={}
-      parser = XPathParser.new
+    def XPath::match(element, path=nil, namespaces=nil, variables={}, options={})
+      parser = XPathParser.new(**options)
       parser.namespaces = namespaces
       parser.variables = variables
       path = "*" unless path
diff --git a/lib/ruby/stdlib/rexml/xpath_parser.rb b/lib/ruby/stdlib/rexml/xpath_parser.rb
index 181b2b6e855..e30581d3d01 100644
--- a/lib/ruby/stdlib/rexml/xpath_parser.rb
+++ b/lib/ruby/stdlib/rexml/xpath_parser.rb
@@ -1,9 +1,9 @@
 # frozen_string_literal: false
-require 'rexml/namespace'
-require 'rexml/xmltokens'
-require 'rexml/attribute'
-require 'rexml/syncenumerator'
-require 'rexml/parsers/xpathparser'
+require_relative 'namespace'
+require_relative 'xmltokens'
+require_relative 'attribute'
+require_relative 'syncenumerator'
+require_relative 'parsers/xpathparser'
 
 class Object
   # provides a unified +clone+ operation, for REXML::XPathParser
@@ -47,10 +47,12 @@ class XPathParser
     include XMLTokens
     LITERAL    = /^'([^']*)'|^"([^"]*)"/u
 
-    def initialize( )
+    def initialize(strict: false)
       @parser = REXML::Parsers::XPathParser.new
       @namespaces = nil
       @variables = {}
+      @nest = 0
+      @strict = strict
     end
 
     def namespaces=( namespaces={} )
@@ -75,7 +77,7 @@ def get_first path, nodeset
 
     def predicate path, nodeset
       path_stack = @parser.parse( path )
-      expr( path_stack, nodeset )
+      match( path_stack, nodeset )
     end
 
     def []=( variable_name, value )
@@ -123,13 +125,24 @@ def first( path_stack, node )
     end
 
 
-    def match( path_stack, nodeset )
-      r = expr( path_stack, nodeset )
-      r
+    def match(path_stack, nodeset)
+      nodeset = nodeset.collect.with_index do |node, i|
+        position = i + 1
+        XPathNode.new(node, position: position)
+      end
+      result = expr(path_stack, nodeset)
+      case result
+      when Array # nodeset
+        unnode(result)
+      else
+        result
+      end
     end
 
     private
-
+    def strict?
+      @strict
+    end
 
     # Returns a String namespace for a node, given a prefix
     # The rules are:
@@ -148,233 +161,179 @@ def get_namespace( node, prefix )
 
     # Expr takes a stack of path elements and a set of nodes (either a Parent
     # or an Array and returns an Array of matching nodes
-    ALL = [ :attribute, :element, :text, :processing_instruction, :comment ]
-    ELEMENTS = [ :element ]
     def expr( path_stack, nodeset, context=nil )
-      node_types = ELEMENTS
+      # enter(:expr, path_stack, nodeset)
       return nodeset if path_stack.length == 0 || nodeset.length == 0
       while path_stack.length > 0
+        # trace(:while, path_stack, nodeset)
         if nodeset.length == 0
           path_stack.clear
           return []
         end
-        case (op = path_stack.shift)
+        op = path_stack.shift
+        case op
         when :document
-          nodeset = [ nodeset[0].root_node ]
-
-        when :qname
-          prefix = path_stack.shift
-          name = path_stack.shift
-          nodeset.delete_if do |node|
-            # FIXME: This DOUBLES the time XPath searches take
-            ns = get_namespace( node, prefix )
-            if node.node_type == :element
-              if node.name == name
-              end
-            end
-            !(node.node_type == :element and
-              node.name == name and
-              node.namespace == ns )
-          end
-          node_types = ELEMENTS
-
-        when :any
-          nodeset.delete_if { |node| !node_types.include?(node.node_type) }
-
+          first_raw_node = nodeset.first.raw_node
+          nodeset = [XPathNode.new(first_raw_node.root_node, position: 1)]
         when :self
-          # This space left intentionally blank
-
-        when :processing_instruction
-          target = path_stack.shift
-          nodeset.delete_if do |node|
-            (node.node_type != :processing_instruction) or
-            ( target!='' and ( node.target != target ) )
+          nodeset = step(path_stack) do
+            [nodeset]
           end
-
-        when :text
-          nodeset.delete_if { |node| node.node_type != :text }
-
-        when :comment
-          nodeset.delete_if { |node| node.node_type != :comment }
-
-        when :node
-          # This space left intentionally blank
-          node_types = ALL
-
         when :child
-          new_nodeset = []
-          nt = nil
-          nodeset.each do |node|
-            nt = node.node_type
-            new_nodeset += node.children if nt == :element or nt == :document
+          nodeset = step(path_stack) do
+            child(nodeset)
           end
-          nodeset = new_nodeset
-          node_types = ELEMENTS
-
         when :literal
+          # trace(:literal, path_stack, nodeset)
           return path_stack.shift
-
         when :attribute
-          new_nodeset = []
-          case path_stack.shift
-          when :qname
-            prefix = path_stack.shift
-            name = path_stack.shift
-            for element in nodeset
-              if element.node_type == :element
-                attrib = element.attribute( name, get_namespace(element, prefix) )
-                new_nodeset << attrib if attrib
+          nodeset = step(path_stack, any_type: :attribute) do
+            nodesets = []
+            nodeset.each do |node|
+              raw_node = node.raw_node
+              next unless raw_node.node_type == :element
+              attributes = raw_node.attributes
+              next if attributes.empty?
+              nodesets << attributes.each_attribute.collect.with_index do |attribute, i|
+                XPathNode.new(attribute, position: i + 1)
               end
             end
-          when :any
-            for element in nodeset
-              if element.node_type == :element
-                new_nodeset += element.attributes.to_a
+            nodesets
+          end
+        when :namespace
+          pre_defined_namespaces = {
+            "xml" => "http://www.w3.org/XML/1998/namespace",
+          }
+          nodeset = step(path_stack, any_type: :namespace) do
+            nodesets = []
+            nodeset.each do |node|
+              raw_node = node.raw_node
+              case raw_node.node_type
+              when :element
+                if @namespaces
+                  nodesets << pre_defined_namespaces.merge(@namespaces)
+                else
+                  nodesets << pre_defined_namespaces.merge(raw_node.namespaces)
+                end
+              when :attribute
+                if @namespaces
+                  nodesets << pre_defined_namespaces.merge(@namespaces)
+                else
+                  nodesets << pre_defined_namespaces.merge(raw_node.element.namespaces)
+                end
               end
             end
+            nodesets
           end
-          nodeset = new_nodeset
-
         when :parent
-          nodeset = nodeset.collect{|n| n.parent}.compact
-          #nodeset = expr(path_stack.dclone, nodeset.collect{|n| n.parent}.compact)
-          node_types = ELEMENTS
-
-        when :ancestor
-          new_nodeset = []
-          nodeset.each do |node|
-            while node.parent
-              node = node.parent
-              new_nodeset << node unless new_nodeset.include? node
+          nodeset = step(path_stack) do
+            nodesets = []
+            nodeset.each do |node|
+              raw_node = node.raw_node
+              if raw_node.node_type == :attribute
+                parent = raw_node.element
+              else
+                parent = raw_node.parent
+              end
+              nodesets << [XPathNode.new(parent, position: 1)] if parent
             end
+            nodesets
           end
-          nodeset = new_nodeset
-          node_types = ELEMENTS
-
-        when :ancestor_or_self
-          new_nodeset = []
-          nodeset.each do |node|
-            if node.node_type == :element
-              new_nodeset << node
-              while ( node.parent )
-                node = node.parent
-                new_nodeset << node unless new_nodeset.include? node
+        when :ancestor
+          nodeset = step(path_stack) do
+            nodesets = []
+            # new_nodes = {}
+            nodeset.each do |node|
+              raw_node = node.raw_node
+              new_nodeset = []
+              while raw_node.parent
+                raw_node = raw_node.parent
+                # next if new_nodes.key?(node)
+                new_nodeset << XPathNode.new(raw_node,
+                                             position: new_nodeset.size + 1)
+                # new_nodes[node] = true
               end
+              nodesets << new_nodeset unless new_nodeset.empty?
             end
+            nodesets
           end
-          nodeset = new_nodeset
-          node_types = ELEMENTS
-
-        when :predicate
-          new_nodeset = []
-          subcontext = { :size => nodeset.size }
-          pred = path_stack.shift
-          nodeset.each_with_index { |node, index|
-            subcontext[ :node ] = node
-            subcontext[ :index ] = index+1
-            pc = pred.dclone
-            result = expr( pc, [node], subcontext )
-            result = result[0] if result.kind_of? Array and result.length == 1
-            if result.kind_of? Numeric
-              new_nodeset << node if result == (index+1)
-            elsif result.instance_of? Array
-              if result.size > 0 and result.inject(false) {|k,s| s or k}
-                new_nodeset << node if result.size > 0
+        when :ancestor_or_self
+          nodeset = step(path_stack) do
+            nodesets = []
+            # new_nodes = {}
+            nodeset.each do |node|
+              raw_node = node.raw_node
+              next unless raw_node.node_type == :element
+              new_nodeset = [XPathNode.new(raw_node, position: 1)]
+              # new_nodes[node] = true
+              while raw_node.parent
+                raw_node = raw_node.parent
+                # next if new_nodes.key?(node)
+                new_nodeset << XPathNode.new(raw_node,
+                                             position: new_nodeset.size + 1)
+                # new_nodes[node] = true
               end
-            else
-              new_nodeset << node if result
+              nodesets << new_nodeset unless new_nodeset.empty?
             end
-          }
-          nodeset = new_nodeset
-=begin
-          predicate = path_stack.shift
-          ns = nodeset.clone
-          result = expr( predicate, ns )
-          if result.kind_of? Array
-            nodeset = result.zip(ns).collect{|m,n| n if m}.compact
-          else
-            nodeset = result ? nodeset : []
+            nodesets
           end
-=end
-
         when :descendant_or_self
-          rv = descendant_or_self( path_stack, nodeset )
-          path_stack.clear
-          nodeset = rv
-          node_types = ELEMENTS
-
+          nodeset = step(path_stack) do
+            descendant(nodeset, true)
+          end
         when :descendant
-          results = []
-          nt = nil
-          nodeset.each do |node|
-            nt = node.node_type
-            results += expr( path_stack.dclone.unshift( :descendant_or_self ),
-              node.children ) if nt == :element or nt == :document
+          nodeset = step(path_stack) do
+            descendant(nodeset, false)
           end
-          nodeset = results
-          node_types = ELEMENTS
-
         when :following_sibling
-          results = []
-          nodeset.each do |node|
-            next if node.parent.nil?
-            all_siblings = node.parent.children
-            current_index = all_siblings.index( node )
-            following_siblings = all_siblings[ current_index+1 .. -1 ]
-            results += expr( path_stack.dclone, following_siblings )
+          nodeset = step(path_stack) do
+            nodesets = []
+            nodeset.each do |node|
+              raw_node = node.raw_node
+              next unless raw_node.respond_to?(:parent)
+              next if raw_node.parent.nil?
+              all_siblings = raw_node.parent.children
+              current_index = all_siblings.index(raw_node)
+              following_siblings = all_siblings[(current_index + 1)..-1]
+              next if following_siblings.empty?
+              nodesets << following_siblings.collect.with_index do |sibling, i|
+                XPathNode.new(sibling, position: i + 1)
+              end
+            end
+            nodesets
           end
-          nodeset = results
-
         when :preceding_sibling
-          results = []
-          nodeset.each do |node|
-            next if node.parent.nil?
-            all_siblings = node.parent.children
-            current_index = all_siblings.index( node )
-            preceding_siblings = all_siblings[ 0, current_index ].reverse
-            results += preceding_siblings
+          nodeset = step(path_stack, order: :reverse) do
+            nodesets = []
+            nodeset.each do |node|
+              raw_node = node.raw_node
+              next unless raw_node.respond_to?(:parent)
+              next if raw_node.parent.nil?
+              all_siblings = raw_node.parent.children
+              current_index = all_siblings.index(raw_node)
+              preceding_siblings = all_siblings[0, current_index].reverse
+              next if preceding_siblings.empty?
+              nodesets << preceding_siblings.collect.with_index do |sibling, i|
+                XPathNode.new(sibling, position: i + 1)
+              end
+            end
+            nodesets
           end
-          nodeset = results
-          node_types = ELEMENTS
-
         when :preceding
-          new_nodeset = []
-          nodeset.each do |node|
-            new_nodeset += preceding( node )
+          nodeset = step(path_stack, order: :reverse) do
+            unnode(nodeset) do |node|
+              preceding(node)
+            end
           end
-          nodeset = new_nodeset
-          node_types = ELEMENTS
-
         when :following
-          new_nodeset = []
-          nodeset.each do |node|
-            new_nodeset += following( node )
-          end
-          nodeset = new_nodeset
-          node_types = ELEMENTS
-
-        when :namespace
-          new_nodeset = []
-          prefix = path_stack.shift
-          nodeset.each do |node|
-            if (node.node_type == :element or node.node_type == :attribute)
-              if @namespaces
-                namespaces = @namespaces
-              elsif (node.node_type == :element)
-                namespaces = node.namespaces
-              else
-                namespaces = node.element.namesapces
-              end
-              if (node.namespace == namespaces[prefix])
-                new_nodeset << node
-              end
+          nodeset = step(path_stack) do
+            unnode(nodeset) do |node|
+              following(node)
             end
           end
-          nodeset = new_nodeset
-
         when :variable
           var_name = path_stack.shift
-          return @variables[ var_name ]
+          return [@variables[var_name]]
 
         # :and, :or, :eq, :neq, :lt, :lteq, :gt, :gteq
         # TODO: Special case for :or and :and -- not evaluate the right
@@ -384,6 +343,7 @@ def expr( path_stack, nodeset, context=nil )
           left = expr( path_stack.shift, nodeset.dup, context )
           right = expr( path_stack.shift, nodeset.dup, context )
           res = equality_relational_compare( left, op, right )
+          # trace(op, left, right, res)
           return res
 
         when :and
@@ -396,40 +356,37 @@ def expr( path_stack, nodeset, context=nil )
           res = equality_relational_compare( left, op, right )
           return res
 
-        when :div
-          left = Functions::number(expr(path_stack.shift, nodeset, context)).to_f
-          right = Functions::number(expr(path_stack.shift, nodeset, context)).to_f
-          return (left / right)
-
-        when :mod
-          left = Functions::number(expr(path_stack.shift, nodeset, context )).to_f
-          right = Functions::number(expr(path_stack.shift, nodeset, context )).to_f
-          return (left % right)
-
-        when :mult
-          left = Functions::number(expr(path_stack.shift, nodeset, context )).to_f
-          right = Functions::number(expr(path_stack.shift, nodeset, context )).to_f
-          return (left * right)
-
-        when :plus
-          left = Functions::number(expr(path_stack.shift, nodeset, context )).to_f
-          right = Functions::number(expr(path_stack.shift, nodeset, context )).to_f
-          return (left + right)
-
-        when :minus
-          left = Functions::number(expr(path_stack.shift, nodeset, context )).to_f
-          right = Functions::number(expr(path_stack.shift, nodeset, context )).to_f
-          return (left - right)
-
+        when :div, :mod, :mult, :plus, :minus
+          left = expr(path_stack.shift, nodeset, context)
+          right = expr(path_stack.shift, nodeset, context)
+          left = unnode(left) if left.is_a?(Array)
+          right = unnode(right) if right.is_a?(Array)
+          left = Functions::number(left)
+          right = Functions::number(right)
+          case op
+          when :div
+            return left / right
+          when :mod
+            return left % right
+          when :mult
+            return left * right
+          when :plus
+            return left + right
+          when :minus
+            return left - right
+          else
+            raise "[BUG] Unexpected operator: <#{op.inspect}>"
+          end
         when :union
           left = expr( path_stack.shift, nodeset, context )
           right = expr( path_stack.shift, nodeset, context )
+          left = unnode(left) if left.is_a?(Array)
+          right = unnode(right) if right.is_a?(Array)
           return (left | right)
-
         when :neg
           res = expr( path_stack, nodeset, context )
-          return -(res.to_f)
-
+          res = unnode(res) if res.is_a?(Array)
+          return -Functions.number(res)
         when :not
         when :function
           func_name = path_stack.shift.tr('-','_')
@@ -438,53 +395,242 @@ def expr( path_stack, nodeset, context=nil )
 
           res = []
           cont = context
-          nodeset.each_with_index { |n, i|
+          nodeset.each_with_index do |node, i|
             if subcontext
-              subcontext[:node]  = n
-              subcontext[:index] = i
+              if node.is_a?(XPathNode)
+                subcontext[:node]  = node.raw_node
+                subcontext[:index] = node.position
+              else
+                subcontext[:node]  = node
+                subcontext[:index] = i
+              end
               cont = subcontext
             end
             arg_clone = arguments.dclone
-            args = arg_clone.collect { |arg|
-              expr( arg, [n], cont )
-            }
+            args = arg_clone.collect do |arg|
+              result = expr( arg, [node], cont )
+              result = unnode(result) if result.is_a?(Array)
+              result
+            end
             Functions.context = cont
             res << Functions.send( func_name, *args )
-          }
+          end
           return res
 
+        else
+          raise "[BUG] Unexpected path: <#{op.inspect}>: <#{path_stack.inspect}>"
         end
       end # while
       return nodeset
+    # ensure
+    #   leave(:expr, path_stack, nodeset)
     end
 
+    def step(path_stack, any_type: :element, order: :forward)
+      nodesets = yield
+      begin
+        # enter(:step, path_stack, nodesets)
+        nodesets = node_test(path_stack, nodesets, any_type: any_type)
+        while path_stack[0] == :predicate
+          path_stack.shift # :predicate
+          predicate_expression = path_stack.shift.dclone
+          nodesets = evaluate_predicate(predicate_expression, nodesets)
+        end
+        if nodesets.size == 1
+          ordered_nodeset = nodesets[0]
+        else
+          raw_nodes = []
+          nodesets.each do |nodeset|
+            nodeset.each do |node|
+              if node.respond_to?(:raw_node)
+                raw_nodes << node.raw_node
+              else
+                raw_nodes << node
+              end
+            end
+          end
+          ordered_nodeset = sort(raw_nodes, order)
+        end
+        new_nodeset = []
+        ordered_nodeset.each do |node|
+          # TODO: Remove duplicated
+          new_nodeset << XPathNode.new(node, position: new_nodeset.size + 1)
+        end
+        new_nodeset
+      # ensure
+      #   leave(:step, path_stack, new_nodeset)
+      end
+    end
 
-    ##########################################################
-    # FIXME
-    # The next two methods are BAD MOJO!
-    # This is my achilles heel.  If anybody thinks of a better
-    # way of doing this, be my guest.  This really sucks, but
-    # it is a wonder it works at all.
-    # ########################################################
+    def node_test(path_stack, nodesets, any_type: :element)
+      # enter(:node_test, path_stack, nodesets)
+      operator = path_stack.shift
+      case operator
+      when :qname
+        prefix = path_stack.shift
+        name = path_stack.shift
+        new_nodesets = nodesets.collect do |nodeset|
+          filter_nodeset(nodeset) do |node|
+            raw_node = node.raw_node
+            case raw_node.node_type
+            when :element
+              if prefix.nil?
+                raw_node.name == name
+              elsif prefix.empty?
+                if strict?
+                  raw_node.name == name and raw_node.namespace == ""
+                else
+                  # FIXME: This DOUBLES the time XPath searches take
+                  ns = get_namespace(raw_node, prefix)
+                  raw_node.name == name and raw_node.namespace == ns
+                end
+              else
+                # FIXME: This DOUBLES the time XPath searches take
+                ns = get_namespace(raw_node, prefix)
+                raw_node.name == name and raw_node.namespace == ns
+              end
+            when :attribute
+              if prefix.nil?
+                raw_node.name == name
+              elsif prefix.empty?
+                # FIXME: This DOUBLES the time XPath searches take
+                raw_node.name == name and
+                  raw_node.namespace == raw_node.element.namespace
+              else
+                # FIXME: This DOUBLES the time XPath searches take
+                ns = get_namespace(raw_node.element, prefix)
+                raw_node.name == name and raw_node.namespace == ns
+              end
+            else
+              false
+            end
+          end
+        end
+      when :namespace
+        prefix = path_stack.shift
+        new_nodesets = nodesets.collect do |nodeset|
+          filter_nodeset(nodeset) do |node|
+            raw_node = node.raw_node
+            case raw_node.node_type
+            when :element
+              namespaces = @namespaces || raw_node.namespaces
+              raw_node.namespace == namespaces[prefix]
+            when :attribute
+              namespaces = @namespaces || raw_node.element.namespaces
+              raw_node.namespace == namespaces[prefix]
+            else
+              false
+            end
+          end
+        end
+      when :any
+        new_nodesets = nodesets.collect do |nodeset|
+          filter_nodeset(nodeset) do |node|
+            raw_node = node.raw_node
+            raw_node.node_type == any_type
+          end
+        end
+      when :comment
+        new_nodesets = nodesets.collect do |nodeset|
+          filter_nodeset(nodeset) do |node|
+            raw_node = node.raw_node
+            raw_node.node_type == :comment
+          end
+        end
+      when :text
+        new_nodesets = nodesets.collect do |nodeset|
+          filter_nodeset(nodeset) do |node|
+            raw_node = node.raw_node
+            raw_node.node_type == :text
+          end
+        end
+      when :processing_instruction
+        target = path_stack.shift
+        new_nodesets = nodesets.collect do |nodeset|
+          filter_nodeset(nodeset) do |node|
+            raw_node = node.raw_node
+            (raw_node.node_type == :processing_instruction) and
+              (target.empty? or (raw_node.target == target))
+          end
+        end
+      when :node
+        new_nodesets = nodesets.collect do |nodeset|
+          filter_nodeset(nodeset) do |node|
+            true
+          end
+        end
+      else
+        message = "[BUG] Unexpected node test: " +
+          "<#{operator.inspect}>: <#{path_stack.inspect}>"
+        raise message
+      end
+      new_nodesets
+    # ensure
+    #   leave(:node_test, path_stack, new_nodesets)
+    end
 
-    def descendant_or_self( path_stack, nodeset )
-      rs = []
-      d_o_s( path_stack, nodeset, rs )
-      document_order(rs.flatten.compact)
-      #rs.flatten.compact
+    def filter_nodeset(nodeset)
+      new_nodeset = []
+      nodeset.each do |node|
+        next unless yield(node)
+        new_nodeset << XPathNode.new(node, position: new_nodeset.size + 1)
+      end
+      new_nodeset
     end
 
-    def d_o_s( p, ns, r )
-      nt = nil
-      ns.each_index do |i|
-        n = ns[i]
-        x = expr( p.dclone, [ n ] )
-        nt = n.node_type
-        d_o_s( p, n.children, x ) if nt == :element or nt == :document and n.children.size > 0
-        r.concat(x) if x.size > 0
+    def evaluate_predicate(expression, nodesets)
+      # enter(:predicate, expression, nodesets)
+      new_nodesets = nodesets.collect do |nodeset|
+        new_nodeset = []
+        subcontext = { :size => nodeset.size }
+        nodeset.each_with_index do |node, index|
+          if node.is_a?(XPathNode)
+            subcontext[:node] = node.raw_node
+            subcontext[:index] = node.position
+          else
+            subcontext[:node] = node
+            subcontext[:index] = index + 1
+          end
+          result = expr(expression.dclone, [node], subcontext)
+          # trace(:predicate_evaluate, expression, node, subcontext, result)
+          result = result[0] if result.kind_of? Array and result.length == 1
+          if result.kind_of? Numeric
+            if result == node.position
+              new_nodeset << XPathNode.new(node, position: new_nodeset.size + 1)
+            end
+          elsif result.instance_of? Array
+            if result.size > 0 and result.inject(false) {|k,s| s or k}
+              if result.size > 0
+                new_nodeset << XPathNode.new(node, position: new_nodeset.size + 1)
+              end
+            end
+          else
+            if result
+              new_nodeset << XPathNode.new(node, position: new_nodeset.size + 1)
+            end
+          end
+        end
+        new_nodeset
       end
+      new_nodesets
+    # ensure
+    #   leave(:predicate, new_nodesets)
+    end
+
+    def trace(*args)
+      indent = "  " * @nest
+      puts("#{indent}#{args.inspect}")
     end
 
+    def enter(tag, *args)
+      trace(:enter, tag, *args)
+      @nest += 1
+    end
+
+    def leave(tag, *args)
+      @nest -= 1
+      trace(:leave, tag, *args)
+    end
 
     # Reorders an array of nodes so that they are in document order
     # It tries to do this efficiently.
@@ -494,7 +640,7 @@ def d_o_s( p, ns, r )
     # in and out of function calls.  If I knew what the index of the nodes was,
     # I wouldn't have to do this.  Maybe add a document IDX for each node?
     # Problems with mutable documents.  Or, rewrite everything.
-    def document_order( array_of_nodes )
+    def sort(array_of_nodes, order)
       new_arry = []
       array_of_nodes.each { |node|
         node_idx = []
@@ -505,42 +651,68 @@ def document_order( array_of_nodes )
         end
         new_arry << [ node_idx.reverse, node ]
       }
-      new_arry.sort{ |s1, s2| s1[0] <=> s2[0] }.collect{ |s| s[1] }
+      ordered = new_arry.sort_by do |index, node|
+        if order == :forward
+          index
+        else
+          -index
+        end
+      end
+      ordered.collect do |_index, node|
+        node
+      end
     end
 
-
-    def recurse( nodeset, &block )
-      for node in nodeset
-        yield node
-        recurse( node, &block ) if node.node_type == :element
+    def descendant(nodeset, include_self)
+      nodesets = []
+      nodeset.each do |node|
+        new_nodeset = []
+        new_nodes = {}
+        descendant_recursive(node.raw_node, new_nodeset, new_nodes, include_self)
+        nodesets << new_nodeset unless new_nodeset.empty?
       end
+      nodesets
     end
 
+    def descendant_recursive(raw_node, new_nodeset, new_nodes, include_self)
+      if include_self
+        return if new_nodes.key?(raw_node)
+        new_nodeset << XPathNode.new(raw_node, position: new_nodeset.size + 1)
+        new_nodes[raw_node] = true
+      end
 
+      node_type = raw_node.node_type
+      if node_type == :element or node_type == :document
+        raw_node.children.each do |child|
+          descendant_recursive(child, new_nodeset, new_nodes, true)
+        end
+      end
+    end
 
     # Builds a nodeset of all of the preceding nodes of the supplied node,
     # in reverse document order
     # preceding:: includes every element in the document that precedes this node,
     # except for ancestors
-    def preceding( node )
+    def preceding(node)
       ancestors = []
-      p = node.parent
-      while p
-        ancestors << p
-        p = p.parent
+      parent = node.parent
+      while parent
+        ancestors << parent
+        parent = parent.parent
       end
 
-      acc = []
-      p = preceding_node_of( node )
-      while p
-        if ancestors.include? p
-          ancestors.delete(p)
+      precedings = []
+      preceding_node = preceding_node_of(node)
+      while preceding_node
+        if ancestors.include?(preceding_node)
+          ancestors.delete(preceding_node)
         else
-          acc << p
+          precedings << XPathNode.new(preceding_node,
+                                      position: precedings.size + 1)
         end
-        p = preceding_node_of( p )
+        preceding_node = preceding_node_of(preceding_node)
       end
-      acc
+      precedings
     end
 
     def preceding_node_of( node )
@@ -558,14 +730,15 @@ def preceding_node_of( node )
       psn
     end
 
-    def following( node )
-      acc = []
-      p = next_sibling_node( node )
-      while p
-        acc << p
-        p = following_node_of( p )
+    def following(node)
+      followings = []
+      following_node = next_sibling_node(node)
+      while following_node
+        followings << XPathNode.new(following_node,
+                                    position: followings.size + 1)
+        following_node = following_node_of(following_node)
       end
-      acc
+      followings
     end
 
     def following_node_of( node )
@@ -587,13 +760,40 @@ def next_sibling_node(node)
       return psn
     end
 
+    def child(nodeset)
+      nodesets = []
+      nodeset.each do |node|
+        raw_node = node.raw_node
+        node_type = raw_node.node_type
+        # trace(:child, node_type, node)
+        case node_type
+        when :element
+          nodesets << raw_node.children.collect.with_index do |child_node, i|
+            XPathNode.new(child_node, position: i + 1)
+          end
+        when :document
+          new_nodeset = []
+          raw_node.children.each do |child|
+            case child
+            when XMLDecl, Text
+              # Ignore
+            else
+              new_nodeset << XPathNode.new(child, position: new_nodeset.size + 1)
+            end
+          end
+          nodesets << new_nodeset unless new_nodeset.empty?
+        end
+      end
+      nodesets
+    end
+
     def norm b
       case b
       when true, false
         return b
       when 'true', 'false'
         return Functions::boolean( b )
-      when /^\d+(\.\d+)?$/
+      when /^\d+(\.\d+)?$/, Numeric
         return Functions::number( b )
       else
         return Functions::string( b )
@@ -601,11 +801,10 @@ def norm b
     end
 
     def equality_relational_compare( set1, op, set2 )
+      set1 = unnode(set1) if set1.is_a?(Array)
+      set2 = unnode(set2) if set2.is_a?(Array)
       if set1.kind_of? Array and set2.kind_of? Array
-        if set1.size == 1 and set2.size == 1
-          set1 = set1[0]
-          set2 = set2[0]
-        elsif set1.size == 0 or set2.size == 0
+        if set1.size == 0 or set2.size == 0
           nd = set1.size==0 ? set2 : set1
           rv = nd.collect { |il| compare( il, op, nil ) }
           return rv
@@ -636,15 +835,15 @@ def equality_relational_compare( set1, op, set2 )
 
         case b
         when true, false
-          return a.collect {|v| compare( Functions::boolean(v), op, b ) }
+          return unnode(a) {|v| compare( Functions::boolean(v), op, b ) }
         when Numeric
-          return a.collect {|v| compare( Functions::number(v), op, b )}
+          return unnode(a) {|v| compare( Functions::number(v), op, b )}
         when /^\d+(\.\d+)?$/
           b = Functions::number( b )
-          return a.collect {|v| compare( Functions::number(v), op, b )}
+          return unnode(a) {|v| compare( Functions::number(v), op, b )}
         else
           b = Functions::string( b )
-          return a.collect { |v| compare( Functions::string(v), op, b ) }
+          return unnode(a) { |v| compare( Functions::string(v), op, b ) }
         end
       else
         # If neither is nodeset,
@@ -654,8 +853,10 @@ def equality_relational_compare( set1, op, set2 )
         #     Else, convert to string
         #   Else
         #     Convert both to numbers and compare
-        s1 = set1.to_s
-        s2 = set2.to_s
+        set1 = unnode(set1) if set1.is_a?(Array)
+        set2 = unnode(set2) if set2.is_a?(Array)
+        s1 = Functions.string(set1)
+        s2 = Functions.string(set2)
         if s1 == 'true' or s1 == 'false' or s2 == 'true' or s2 == 'false'
           set1 = Functions::boolean( set1 )
           set2 = Functions::boolean( set2 )
@@ -700,5 +901,34 @@ def compare a, op, b
         false
       end
     end
+
+    def unnode(nodeset)
+      nodeset.collect do |node|
+        if node.is_a?(XPathNode)
+          unnoded = node.raw_node
+        else
+          unnoded = node
+        end
+        unnoded = yield(unnoded) if block_given?
+        unnoded
+      end
+    end
+  end
+
+  # @private
+  class XPathNode
+    attr_reader :raw_node, :context
+    def initialize(node, context=nil)
+      if node.is_a?(XPathNode)
+        @raw_node = node.raw_node
+      else
+        @raw_node = node
+      end
+      @context = context || {}
+    end
+
+    def position
+      @context[:position]
+    end
   end
 end
diff --git a/lib/ruby/stdlib/rinda/ring.rb b/lib/ruby/stdlib/rinda/ring.rb
index 34dc2451226..948cfaf2083 100644
--- a/lib/ruby/stdlib/rinda/ring.rb
+++ b/lib/ruby/stdlib/rinda/ring.rb
@@ -3,7 +3,7 @@
 # Note: Rinda::Ring API is unstable.
 #
 require 'drb/drb'
-require 'rinda/rinda'
+require_relative 'rinda'
 require 'ipaddr'
 
 module Rinda
diff --git a/lib/ruby/stdlib/rinda/tuplespace.rb b/lib/ruby/stdlib/rinda/tuplespace.rb
index 47860bc8aed..6a41a7ba75d 100644
--- a/lib/ruby/stdlib/rinda/tuplespace.rb
+++ b/lib/ruby/stdlib/rinda/tuplespace.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
 require 'monitor'
 require 'drb/drb'
-require 'rinda/rinda'
+require_relative 'rinda'
 require 'forwardable'
 
 module Rinda
diff --git a/lib/ruby/stdlib/ripper/lexer.rb b/lib/ruby/stdlib/ripper/lexer.rb
index 9fd9c2d13ef..8a7da573134 100644
--- a/lib/ruby/stdlib/ripper/lexer.rb
+++ b/lib/ruby/stdlib/ripper/lexer.rb
@@ -197,7 +197,7 @@ def compile(pattern)
       if m = /[^\w\s$()\[\]{}?*+\.]/.match(pattern)
         raise CompileError, "invalid char in pattern: #{m[0].inspect}"
       end
-      buf = ''
+      buf = +''
       pattern.scan(/(?:\w+|\$\(|[()\[\]\{\}?*+\.]+)/) do |tok|
         case tok
         when /\w/
@@ -218,14 +218,14 @@ def compile(pattern)
     end
 
     def map_tokens(tokens)
-      tokens.map {|pos,type,str| map_token(type.to_s.sub(/\Aon_/,'')) }.join
+      tokens.map {|pos,type,str| map_token(type.to_s.delete_prefix('on_')) }.join
     end
 
     MAP = {}
     seed = ('a'..'z').to_a + ('A'..'Z').to_a + ('0'..'9').to_a
     SCANNER_EVENT_TABLE.each do |ev, |
       raise CompileError, "[RIPPER FATAL] too many system token" if seed.empty?
-      MAP[ev.to_s.sub(/\Aon_/,'')] = seed.shift
+      MAP[ev.to_s.delete_prefix('on_')] = seed.shift
     end
 
     def map_token(tok)
diff --git a/lib/ruby/stdlib/rss/0.9.rb b/lib/ruby/stdlib/rss/0.9.rb
index d852a6a85e9..219ccefcdbc 100644
--- a/lib/ruby/stdlib/rss/0.9.rb
+++ b/lib/ruby/stdlib/rss/0.9.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/parser"
+require_relative "parser"
 
 module RSS
 
diff --git a/lib/ruby/stdlib/rss/1.0.rb b/lib/ruby/stdlib/rss/1.0.rb
index fb63937c5e1..c8f92fb54ef 100644
--- a/lib/ruby/stdlib/rss/1.0.rb
+++ b/lib/ruby/stdlib/rss/1.0.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/parser"
+require_relative "parser"
 
 module RSS
 
diff --git a/lib/ruby/stdlib/rss/atom.rb b/lib/ruby/stdlib/rss/atom.rb
index 38e927478c2..48c27330d0b 100644
--- a/lib/ruby/stdlib/rss/atom.rb
+++ b/lib/ruby/stdlib/rss/atom.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require 'rss/parser'
+require_relative 'parser'
 
 module RSS
   ##
diff --git a/lib/ruby/stdlib/rss/content.rb b/lib/ruby/stdlib/rss/content.rb
index d35311075a2..78c18d103c3 100644
--- a/lib/ruby/stdlib/rss/content.rb
+++ b/lib/ruby/stdlib/rss/content.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/rss"
+require_relative "rss"
 
 module RSS
   # The prefix for the Content XML namespace.
diff --git a/lib/ruby/stdlib/rss/converter.rb b/lib/ruby/stdlib/rss/converter.rb
index b92e35a051d..d372e067256 100644
--- a/lib/ruby/stdlib/rss/converter.rb
+++ b/lib/ruby/stdlib/rss/converter.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/utils"
+require_relative "utils"
 
 module RSS
 
diff --git a/lib/ruby/stdlib/rss/dublincore.rb b/lib/ruby/stdlib/rss/dublincore.rb
index 8d1a5519472..85b836d3bf3 100644
--- a/lib/ruby/stdlib/rss/dublincore.rb
+++ b/lib/ruby/stdlib/rss/dublincore.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/rss"
+require_relative "rss"
 
 module RSS
   # The prefix for the Dublin Core XML namespace.
@@ -161,4 +161,4 @@ class DublinCore#{Utils.to_class_name(name)} < Element
 
 require 'rss/dublincore/1.0'
 require 'rss/dublincore/2.0'
-require 'rss/dublincore/atom'
+require_relative 'dublincore/atom'
diff --git a/lib/ruby/stdlib/rss/dublincore/atom.rb b/lib/ruby/stdlib/rss/dublincore/atom.rb
index 0b8b11e440b..1cfcdec677c 100644
--- a/lib/ruby/stdlib/rss/dublincore/atom.rb
+++ b/lib/ruby/stdlib/rss/dublincore/atom.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/atom"
+require_relative "../atom"
 
 module RSS
   module Atom
diff --git a/lib/ruby/stdlib/rss/image.rb b/lib/ruby/stdlib/rss/image.rb
index 6b86ec0e5b6..837f7d18f4d 100644
--- a/lib/ruby/stdlib/rss/image.rb
+++ b/lib/ruby/stdlib/rss/image.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
 require 'rss/1.0'
-require 'rss/dublincore'
+require_relative 'dublincore'
 
 module RSS
 
diff --git a/lib/ruby/stdlib/rss/maker.rb b/lib/ruby/stdlib/rss/maker.rb
index 33d285f6afb..e32de818066 100644
--- a/lib/ruby/stdlib/rss/maker.rb
+++ b/lib/ruby/stdlib/rss/maker.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/rss"
+require_relative "rss"
 
 module RSS
   ##
@@ -65,15 +65,15 @@ def maker(version)
   end
 end
 
-require "rss/maker/1.0"
-require "rss/maker/2.0"
-require "rss/maker/feed"
-require "rss/maker/entry"
-require "rss/maker/content"
-require "rss/maker/dublincore"
-require "rss/maker/slash"
-require "rss/maker/syndication"
-require "rss/maker/taxonomy"
-require "rss/maker/trackback"
-require "rss/maker/image"
-require "rss/maker/itunes"
+require_relative "maker/1.0"
+require_relative "maker/2.0"
+require_relative "maker/feed"
+require_relative "maker/entry"
+require_relative "maker/content"
+require_relative "maker/dublincore"
+require_relative "maker/slash"
+require_relative "maker/syndication"
+require_relative "maker/taxonomy"
+require_relative "maker/trackback"
+require_relative "maker/image"
+require_relative "maker/itunes"
diff --git a/lib/ruby/stdlib/rss/maker/0.9.rb b/lib/ruby/stdlib/rss/maker/0.9.rb
index 622a4c30b4c..7f961b392ea 100644
--- a/lib/ruby/stdlib/rss/maker/0.9.rb
+++ b/lib/ruby/stdlib/rss/maker/0.9.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require "rss/0.9"
+require_relative "../0.9"
 
-require "rss/maker/base"
+require_relative "base"
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/1.0.rb b/lib/ruby/stdlib/rss/maker/1.0.rb
index 3aee77e913b..3934f9536c9 100644
--- a/lib/ruby/stdlib/rss/maker/1.0.rb
+++ b/lib/ruby/stdlib/rss/maker/1.0.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require "rss/1.0"
+require_relative "../1.0"
 
-require "rss/maker/base"
+require_relative "base"
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/2.0.rb b/lib/ruby/stdlib/rss/maker/2.0.rb
index 1f77a014d12..43d00226b7f 100644
--- a/lib/ruby/stdlib/rss/maker/2.0.rb
+++ b/lib/ruby/stdlib/rss/maker/2.0.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require "rss/2.0"
+require_relative "../2.0"
 
-require "rss/maker/0.9"
+require_relative "0.9"
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/atom.rb b/lib/ruby/stdlib/rss/maker/atom.rb
index e0cd7623c86..cdd1d8753e2 100644
--- a/lib/ruby/stdlib/rss/maker/atom.rb
+++ b/lib/ruby/stdlib/rss/maker/atom.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require "rss/atom"
+require_relative "../atom"
 
-require "rss/maker/base"
+require_relative "base"
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/base.rb b/lib/ruby/stdlib/rss/maker/base.rb
index bc4ca841419..17537b70062 100644
--- a/lib/ruby/stdlib/rss/maker/base.rb
+++ b/lib/ruby/stdlib/rss/maker/base.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
 require 'forwardable'
 
-require 'rss/rss'
+require_relative '../rss'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/content.rb b/lib/ruby/stdlib/rss/maker/content.rb
index 3559a45ad02..b3f4e5036e8 100644
--- a/lib/ruby/stdlib/rss/maker/content.rb
+++ b/lib/ruby/stdlib/rss/maker/content.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require 'rss/content'
-require 'rss/maker/1.0'
-require 'rss/maker/2.0'
+require_relative '../content'
+require_relative '1.0'
+require_relative '2.0'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/dublincore.rb b/lib/ruby/stdlib/rss/maker/dublincore.rb
index 988209c045b..beea3134b4f 100644
--- a/lib/ruby/stdlib/rss/maker/dublincore.rb
+++ b/lib/ruby/stdlib/rss/maker/dublincore.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rss/dublincore'
-require 'rss/maker/1.0'
+require_relative '../dublincore'
+require_relative '1.0'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/entry.rb b/lib/ruby/stdlib/rss/maker/entry.rb
index f806cbcaae8..ccdf9608ae6 100644
--- a/lib/ruby/stdlib/rss/maker/entry.rb
+++ b/lib/ruby/stdlib/rss/maker/entry.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require "rss/maker/atom"
-require "rss/maker/feed"
+require_relative "atom"
+require_relative "feed"
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/feed.rb b/lib/ruby/stdlib/rss/maker/feed.rb
index fdef7ad6430..72ee704d6af 100644
--- a/lib/ruby/stdlib/rss/maker/feed.rb
+++ b/lib/ruby/stdlib/rss/maker/feed.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/maker/atom"
+require_relative "atom"
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/image.rb b/lib/ruby/stdlib/rss/maker/image.rb
index 1957ba86891..e3e62d8b9e9 100644
--- a/lib/ruby/stdlib/rss/maker/image.rb
+++ b/lib/ruby/stdlib/rss/maker/image.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require 'rss/image'
-require 'rss/maker/1.0'
-require 'rss/maker/dublincore'
+require_relative '../image'
+require_relative '1.0'
+require_relative 'dublincore'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/itunes.rb b/lib/ruby/stdlib/rss/maker/itunes.rb
index d964a4d9427..28cca320213 100644
--- a/lib/ruby/stdlib/rss/maker/itunes.rb
+++ b/lib/ruby/stdlib/rss/maker/itunes.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rss/itunes'
-require 'rss/maker/2.0'
+require_relative '../itunes'
+require_relative '2.0'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/slash.rb b/lib/ruby/stdlib/rss/maker/slash.rb
index 3bd82d30570..473991903f0 100644
--- a/lib/ruby/stdlib/rss/maker/slash.rb
+++ b/lib/ruby/stdlib/rss/maker/slash.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rss/slash'
-require 'rss/maker/1.0'
+require_relative '../slash'
+require_relative '1.0'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/syndication.rb b/lib/ruby/stdlib/rss/maker/syndication.rb
index 840b70229ab..9fd0efe99ea 100644
--- a/lib/ruby/stdlib/rss/maker/syndication.rb
+++ b/lib/ruby/stdlib/rss/maker/syndication.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
-require 'rss/syndication'
-require 'rss/maker/1.0'
+require_relative '../syndication'
+require_relative '1.0'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/taxonomy.rb b/lib/ruby/stdlib/rss/maker/taxonomy.rb
index 76a2d1600d4..f9858922dad 100644
--- a/lib/ruby/stdlib/rss/maker/taxonomy.rb
+++ b/lib/ruby/stdlib/rss/maker/taxonomy.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require 'rss/taxonomy'
-require 'rss/maker/1.0'
-require 'rss/maker/dublincore'
+require_relative '../taxonomy'
+require_relative '1.0'
+require_relative 'dublincore'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/maker/trackback.rb b/lib/ruby/stdlib/rss/maker/trackback.rb
index f97691c608e..f78b4058f93 100644
--- a/lib/ruby/stdlib/rss/maker/trackback.rb
+++ b/lib/ruby/stdlib/rss/maker/trackback.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
-require 'rss/trackback'
-require 'rss/maker/1.0'
-require 'rss/maker/2.0'
+require_relative '../trackback'
+require_relative '1.0'
+require_relative '2.0'
 
 module RSS
   module Maker
diff --git a/lib/ruby/stdlib/rss/parser.rb b/lib/ruby/stdlib/rss/parser.rb
index a9842e6d408..3a34d0adb47 100644
--- a/lib/ruby/stdlib/rss/parser.rb
+++ b/lib/ruby/stdlib/rss/parser.rb
@@ -2,8 +2,8 @@
 require "forwardable"
 require "open-uri"
 
-require "rss/rss"
-require "rss/xml"
+require_relative "rss"
+require_relative "xml"
 
 module RSS
 
@@ -72,13 +72,31 @@ def default_parser=(new_value)
         end
       end
 
-      def parse(rss, do_validate=true, ignore_unknown_element=true,
-                parser_class=default_parser)
+      def parse(rss, *args)
+        if args.last.is_a?(Hash)
+          options = args.pop
+        else
+          options = {}
+        end
+        do_validate = boolean_argument(args[0], options[:validate], true)
+        ignore_unknown_element =
+          boolean_argument(args[1], options[:ignore_unknown_element], true)
+        parser_class = args[2] || options[:parser_class] || default_parser
         parser = new(rss, parser_class)
         parser.do_validate = do_validate
         parser.ignore_unknown_element = ignore_unknown_element
         parser.parse
       end
+
+      private
+      def boolean_argument(positioned_value, option_value, default)
+        value = positioned_value
+        if value.nil? and not option_value.nil?
+          value = option_value
+        end
+        value = default if value.nil?
+        value
+      end
     end
 
     def_delegators(:@parser, :parse, :rss,
diff --git a/lib/ruby/stdlib/rss/rss.gemspec b/lib/ruby/stdlib/rss/rss.gemspec
new file mode 100644
index 00000000000..669c6c1ad42
--- /dev/null
+++ b/lib/ruby/stdlib/rss/rss.gemspec
@@ -0,0 +1,38 @@
+begin
+  require_relative "lib/rss"
+rescue LoadError
+  # for Ruby core repository
+  require_relative "rss"
+end
+
+Gem::Specification.new do |spec|
+  spec.name          = "rss"
+  spec.version       = RSS::VERSION
+  spec.authors       = ["Kouhei Sutou"]
+  spec.email         = ["kou@cozmixng.org"]
+
+  spec.summary       = %q{Family of libraries that support various formats of XML "feeds".}
+  spec.description   = %q{Family of libraries that support various formats of XML "feeds".}
+  spec.homepage      = "https://github.com/ruby/rss"
+  spec.license       = "BSD-2-Clause"
+
+  spec.files         = [".gitignore", ".travis.yml", "Gemfile", "LICENSE.txt", "README.md", "Rakefile",
+  "bin/console", "bin/setup", "lib/rss.rb", "lib/rss/0.9.rb", "lib/rss/1.0.rb", "lib/rss/2.0.rb",
+  "lib/rss/atom.rb", "lib/rss/content.rb", "lib/rss/content/1.0.rb", "lib/rss/content/2.0.rb",
+  "lib/rss/converter.rb", "lib/rss/dublincore.rb", "lib/rss/dublincore/1.0.rb", "lib/rss/dublincore/2.0.rb",
+  "lib/rss/dublincore/atom.rb", "lib/rss/image.rb", "lib/rss/itunes.rb", "lib/rss/maker.rb",
+  "lib/rss/maker/0.9.rb", "lib/rss/maker/1.0.rb", "lib/rss/maker/2.0.rb", "lib/rss/maker/atom.rb",
+  "lib/rss/maker/base.rb", "lib/rss/maker/content.rb", "lib/rss/maker/dublincore.rb", "lib/rss/maker/entry.rb",
+  "lib/rss/maker/feed.rb", "lib/rss/maker/image.rb", "lib/rss/maker/itunes.rb", "lib/rss/maker/slash.rb",
+  "lib/rss/maker/syndication.rb", "lib/rss/maker/taxonomy.rb", "lib/rss/maker/trackback.rb",
+  "lib/rss/parser.rb", "lib/rss/rexmlparser.rb", "lib/rss/rss.rb", "lib/rss/slash.rb", "lib/rss/syndication.rb",
+  "lib/rss/taxonomy.rb", "lib/rss/trackback.rb", "lib/rss/utils.rb", "lib/rss/xml-stylesheet.rb",
+  "lib/rss/xml.rb", "lib/rss/xmlparser.rb", "lib/rss/xmlscanner.rb", "rss.gemspec"]
+  spec.bindir        = "exe"
+  spec.executables   = spec.files.grep(%r{^exe/}) { |f| File.basename(f) }
+  spec.require_paths = ["lib"]
+
+  spec.add_development_dependency "bundler"
+  spec.add_development_dependency "rake"
+  spec.add_development_dependency "test-unit"
+end
diff --git a/lib/ruby/stdlib/rss/rss.rb b/lib/ruby/stdlib/rss/rss.rb
index db87e11ad57..daaf6793b9d 100644
--- a/lib/ruby/stdlib/rss/rss.rb
+++ b/lib/ruby/stdlib/rss/rss.rb
@@ -63,9 +63,9 @@ def w3cdtf
 
 
 require "English"
-require "rss/utils"
-require "rss/converter"
-require "rss/xml-stylesheet"
+require_relative "utils"
+require_relative "converter"
+require_relative "xml-stylesheet"
 
 module RSS
 
diff --git a/lib/ruby/stdlib/rss/taxonomy.rb b/lib/ruby/stdlib/rss/taxonomy.rb
index b7ea219e8cb..50688ee6c1f 100644
--- a/lib/ruby/stdlib/rss/taxonomy.rb
+++ b/lib/ruby/stdlib/rss/taxonomy.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: false
 require "rss/1.0"
-require "rss/dublincore"
+require_relative "dublincore"
 
 module RSS
   # The prefix for the Taxonomy XML namespace.
diff --git a/lib/ruby/stdlib/rss/xml-stylesheet.rb b/lib/ruby/stdlib/rss/xml-stylesheet.rb
index be9cfaaf64b..175c95fbcd7 100644
--- a/lib/ruby/stdlib/rss/xml-stylesheet.rb
+++ b/lib/ruby/stdlib/rss/xml-stylesheet.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/utils"
+require_relative "utils"
 
 module RSS
 
diff --git a/lib/ruby/stdlib/rss/xml.rb b/lib/ruby/stdlib/rss/xml.rb
index cda8668044f..b74630295fc 100644
--- a/lib/ruby/stdlib/rss/xml.rb
+++ b/lib/ruby/stdlib/rss/xml.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: false
-require "rss/utils"
+require_relative "utils"
 
 module RSS
   module XML
diff --git a/lib/ruby/stdlib/rubygems.rb b/lib/ruby/stdlib/rubygems.rb
index c090ed80800..118268dce2e 100644
--- a/lib/ruby/stdlib/rubygems.rb
+++ b/lib/ruby/stdlib/rubygems.rb
@@ -7,10 +7,9 @@
 #++
 
 require 'rbconfig'
-require 'thread'
 
 module Gem
-  VERSION = "2.7.10"
+  VERSION = "3.0.1".freeze
 end
 
 # Must be first since it unloads the prelude from 1.9.2
@@ -127,14 +126,14 @@ module Gem
     /mingw/i,
     /mswin/i,
     /wince/i,
-  ]
+  ].freeze
 
   GEM_DEP_FILES = %w[
     gem.deps.rb
     gems.rb
     Gemfile
     Isolate
-  ]
+  ].freeze
 
   ##
   # Subdirectories in a gem repository
@@ -146,7 +145,7 @@ module Gem
     extensions
     gems
     specifications
-  ]
+  ].freeze
 
   ##
   # Subdirectories in a gem repository for default gems
@@ -154,7 +153,7 @@ module Gem
   REPOSITORY_DEFAULT_GEM_SUBDIRECTORIES = %w[
     gems
     specifications/default
-  ]
+  ].freeze
 
   ##
   # Exception classes used in a Gem.read_binary +rescue+ statement. Not all of
@@ -203,7 +202,7 @@ module Gem
   # activation succeeded or wasn't needed because it was already
   # activated. Returns false if it can't find the path in a gem.
 
-  def self.try_activate path
+  def self.try_activate(path)
     # finds the _latest_ version... regardless of loaded specs and their deps
     # if another gem had a requirement that would mean we shouldn't
     # activate the latest version, then either it would already be activated
@@ -263,7 +262,7 @@ def self.bin_path(name, exec_name = nil, *requirements)
     find_spec_for_exe(name, exec_name, requirements).bin_file exec_name
   end
 
-  def self.find_spec_for_exe name, exec_name, requirements
+  def self.find_spec_for_exe(name, exec_name, requirements)
     dep = Gem::Dependency.new name, requirements
 
     loaded = Gem.loaded_specs[name]
@@ -299,7 +298,7 @@ def self.find_spec_for_exe name, exec_name, requirements
   #
   # This method should *only* be used in bin stub files.
 
-  def self.activate_bin_path name, exec_name, requirement # :nodoc:
+  def self.activate_bin_path(name, exec_name, requirement) # :nodoc:
     spec = find_spec_for_exe name, exec_name, [requirement]
     Gem::LOADED_SPECS_MUTEX.synchronize do
       spec.activate
@@ -368,11 +367,6 @@ def self.datadir(gem_name)
     spec.datadir
   end
 
-  class << self
-    extend Gem::Deprecate
-    deprecate :datadir, "spec.datadir", 2016, 10
-  end
-
   ##
   # A Zlib::Deflate.deflate wrapper
 
@@ -447,7 +441,7 @@ def self.spec_cache_dir
   #
   # World-writable directories will never be created.
 
-  def self.ensure_gem_subdirectories dir = Gem.dir, mode = nil
+  def self.ensure_gem_subdirectories(dir = Gem.dir, mode = nil)
     ensure_subdirectories(dir, mode, REPOSITORY_SUBDIRECTORIES)
   end
 
@@ -460,11 +454,11 @@ def self.ensure_gem_subdirectories dir = Gem.dir, mode = nil
   #
   # World-writable directories will never be created.
 
-  def self.ensure_default_gem_subdirectories dir = Gem.dir, mode = nil
+  def self.ensure_default_gem_subdirectories(dir = Gem.dir, mode = nil)
     ensure_subdirectories(dir, mode, REPOSITORY_DEFAULT_GEM_SUBDIRECTORIES)
   end
 
-  def self.ensure_subdirectories dir, mode, subdirs # :nodoc:
+  def self.ensure_subdirectories(dir, mode, subdirs) # :nodoc:
     old_umask = File.umask
     File.umask old_umask | 002
 
@@ -488,7 +482,7 @@ def self.ensure_subdirectories dir, mode, subdirs # :nodoc:
   # distinction as extensions cannot be shared between the two.
 
   def self.extension_api_version # :nodoc:
-    if 'no' == RbConfig::CONFIG['ENABLE_SHARED'] then
+    if 'no' == RbConfig::CONFIG['ENABLE_SHARED']
       "#{ruby_api_version}-static"
     else
       ruby_api_version
@@ -525,9 +519,10 @@ def self.find_files(glob, check_load_path=true)
     return files
   end
 
-  def self.find_files_from_load_path glob # :nodoc:
+  def self.find_files_from_load_path(glob) # :nodoc:
+    glob_with_suffixes = "#{glob}#{Gem.suffix_pattern}"
     $LOAD_PATH.map { |load_path|
-      Dir["#{File.expand_path glob, load_path}#{Gem.suffix_pattern}"]
+      Gem::Util.glob_files_in_dir(glob_with_suffixes, load_path)
     }.flatten.select { |file| File.file? file.untaint }
   end
 
@@ -577,20 +572,9 @@ def self.find_latest_files(glob, check_load_path=true)
   #++
 
   def self.find_home
-    windows = File::ALT_SEPARATOR
-    if not windows or RUBY_VERSION >= '1.9' then
-      File.expand_path "~"
-    else
-      ['HOME', 'USERPROFILE'].each do |key|
-        return File.expand_path ENV[key] if ENV[key]
-      end
-
-      if ENV['HOMEDRIVE'] && ENV['HOMEPATH'] then
-        File.expand_path "#{ENV['HOMEDRIVE']}#{ENV['HOMEPATH']}"
-      end
-    end
+    Dir.home.dup
   rescue
-    if windows then
+    if Gem.win_platform?
       File.expand_path File.join(ENV['HOMEDRIVE'] || ENV['SystemDrive'], '/')
     else
       File.expand_path "/"
@@ -645,7 +629,7 @@ class << self
   #   Fetching: minitest-3.0.1.gem (100%)
   #   => [#<Gem::Specification:0x1013b4528 @name="minitest", ...>]
 
-  def self.install name, version = Gem::Requirement.default, *options
+  def self.install(name, version = Gem::Requirement.default, *options)
     require "rubygems/dependency_installer"
     inst = Gem::DependencyInstaller.new(*options)
     inst.install name, version
@@ -663,7 +647,7 @@ def self.host
 
   ## Set the default RubyGems API host.
 
-  def self.host= host
+  def self.host=(host)
     # TODO: move to utils
     @host = host
   end
@@ -691,45 +675,32 @@ def self.load_yaml
     return if @yaml_loaded
     return unless defined?(gem)
 
-    test_syck = ENV['TEST_SYCK']
-
-    # Only Ruby 1.8 and 1.9 have syck
-    test_syck = false unless /^1\./ =~ RUBY_VERSION
+    begin
+      gem 'psych', '>= 2.0.0'
+    rescue Gem::LoadError
+      # It's OK if the user does not have the psych gem installed.  We will
+      # attempt to require the stdlib version
+    end
 
-    unless test_syck
-      begin
-        gem 'psych', '>= 2.0.0'
-      rescue Gem::LoadError
-        # It's OK if the user does not have the psych gem installed.  We will
-        # attempt to require the stdlib version
+    begin
+      # Try requiring the gem version *or* stdlib version of psych.
+      require 'psych'
+    rescue ::LoadError
+      # If we can't load psych, thats fine, go on.
+    else
+      # If 'yaml' has already been required, then we have to
+      # be sure to switch it over to the newly loaded psych.
+      if defined?(YAML::ENGINE) && YAML::ENGINE.yamler != "psych"
+        YAML::ENGINE.yamler = "psych"
       end
 
-      begin
-        # Try requiring the gem version *or* stdlib version of psych.
-        require 'psych'
-      rescue ::LoadError
-        # If we can't load psych, thats fine, go on.
-      else
-        # If 'yaml' has already been required, then we have to
-        # be sure to switch it over to the newly loaded psych.
-        if defined?(YAML::ENGINE) && YAML::ENGINE.yamler != "psych"
-          YAML::ENGINE.yamler = "psych"
-        end
-
-        require 'rubygems/psych_additions'
-        require 'rubygems/psych_tree'
-      end
+      require 'rubygems/psych_additions'
+      require 'rubygems/psych_tree'
     end
 
     require 'yaml'
     require 'rubygems/safe_yaml'
 
-    # If we're supposed to be using syck, then we may have to force
-    # activate it via the YAML::ENGINE API.
-    if test_syck and defined?(YAML::ENGINE)
-      YAML::ENGINE.yamler = "syck" unless YAML::ENGINE.syck?
-    end
-
     # Now that we're sure some kind of yaml library is loaded, pull
     # in our hack to deal with Syck's DefaultKey ugliness.
     require 'rubygems/syck_hack'
@@ -865,7 +836,7 @@ def self.prefix
 
     if prefix != File.expand_path(RbConfig::CONFIG['sitelibdir']) and
        prefix != File.expand_path(RbConfig::CONFIG['libdir']) and
-       'lib' == File.basename(RUBYGEMS_DIR) then
+       'lib' == File.basename(RUBYGEMS_DIR)
       prefix
     end
   end
@@ -923,7 +894,7 @@ def self.write_binary(path, data)
   # The path to the running Ruby interpreter.
 
   def self.ruby
-    if @ruby.nil? then
+    if @ruby.nil?
       @ruby = File.join(RbConfig::CONFIG['bindir'],
                         "#{RbConfig::CONFIG['ruby_install_name']}#{RbConfig::CONFIG['EXEEXT']}")
 
@@ -952,7 +923,7 @@ def self.env_requirement(gem_name)
   ##
   # Returns the latest release-version specification for the gem +name+.
 
-  def self.latest_spec_for name
+  def self.latest_spec_for(name)
     dependency   = Gem::Dependency.new name
     fetcher      = Gem::SpecFetcher.fetcher
     spec_tuples, = fetcher.spec_for_dependency dependency
@@ -973,7 +944,7 @@ def self.latest_rubygems_version
   ##
   # Returns the version of the latest release-version of gem +name+
 
-  def self.latest_version_for name
+  def self.latest_version_for(name)
     spec = latest_spec_for name
     spec and spec.version
   end
@@ -985,10 +956,15 @@ def self.ruby_version
     return @ruby_version if defined? @ruby_version
     version = RUBY_VERSION.dup
 
-    if defined?(RUBY_PATCHLEVEL) && RUBY_PATCHLEVEL != -1 then
+    if defined?(RUBY_PATCHLEVEL) && RUBY_PATCHLEVEL != -1
       version << ".#{RUBY_PATCHLEVEL}"
-    elsif defined?(RUBY_REVISION) then
-      version << ".dev.#{RUBY_REVISION}"
+    elsif defined?(RUBY_DESCRIPTION)
+      if RUBY_ENGINE == "ruby"
+        desc = RUBY_DESCRIPTION[/\Aruby #{Regexp.quote(RUBY_VERSION)}([^ ]+) /, 1]
+      else
+        desc = RUBY_DESCRIPTION[/\A#{RUBY_ENGINE} #{Regexp.quote(RUBY_ENGINE_VERSION)} \(#{RUBY_VERSION}([^ ]+)\) /, 1]
+      end
+      version << ".#{desc}" if desc
     end
 
     @ruby_version = Gem::Version.new version
@@ -1018,7 +994,7 @@ def self.sources
   # DOC: This comment is not documentation about the method itself, it's
   # more of a code comment about the implementation.
 
-  def self.sources= new_sources
+  def self.sources=(new_sources)
     if !new_sources
       @sources = nil
     else
@@ -1095,7 +1071,7 @@ def self.user_home
   # Is this a windows platform?
 
   def self.win_platform?
-    if @@win_platform.nil? then
+    if @@win_platform.nil?
       ruby_platform = RbConfig::CONFIG['host_os']
       @@win_platform = !!WIN_PATTERNS.find { |r| ruby_platform =~ r }
     end
@@ -1106,7 +1082,7 @@ def self.win_platform?
   ##
   # Load +plugins+ as Ruby files
 
-  def self.load_plugin_files plugins # :nodoc:
+  def self.load_plugin_files(plugins) # :nodoc:
     plugins.each do |plugin|
 
       # Skip older versions of the GemCutter plugin: Its commands are in
@@ -1143,8 +1119,9 @@ def self.load_env_plugins
     path = "rubygems_plugin"
 
     files = []
+    glob = "#{path}#{Gem.suffix_pattern}"
     $LOAD_PATH.each do |load_path|
-      globbed = Dir["#{File.expand_path path, load_path}#{Gem.suffix_pattern}"]
+      globbed = Gem::Util.glob_files_in_dir(glob, load_path)
 
       globbed.each do |load_path_file|
         files << load_path_file if File.file?(load_path_file.untaint)
@@ -1174,7 +1151,7 @@ def self.load_env_plugins
   # execution of arbitrary code when used from directories outside your
   # control.
 
-  def self.use_gemdeps path = nil
+  def self.use_gemdeps(path = nil)
     raise_exception = path
 
     path ||= ENV['RUBYGEMS_GEMDEPS']
@@ -1182,7 +1159,7 @@ def self.use_gemdeps path = nil
 
     path = path.dup
 
-    if path == "-" then
+    if path == "-"
       Gem::Util.traverse_parents Dir.pwd do |directory|
         dep_file = GEM_DEP_FILES.find { |f| File.file?(f) }
 
@@ -1195,7 +1172,7 @@ def self.use_gemdeps path = nil
 
     path.untaint
 
-    unless File.file? path then
+    unless File.file? path
       return unless raise_exception
 
       raise ArgumentError, "Unable to find gem dependencies file at #{path}"
@@ -1365,13 +1342,12 @@ def clear_default_specs
   ##
   # Location of Marshal quick gemspecs on remote repositories
 
-  MARSHAL_SPEC_DIR = "quick/Marshal.#{Gem.marshal_version}/"
+  MARSHAL_SPEC_DIR = "quick/Marshal.#{Gem.marshal_version}/".freeze
 
   autoload :BundlerVersionFinder, 'rubygems/bundler_version_finder'
   autoload :ConfigFile,         'rubygems/config_file'
   autoload :Dependency,         'rubygems/dependency'
   autoload :DependencyList,     'rubygems/dependency_list'
-  autoload :DependencyResolver, 'rubygems/resolver'
   autoload :Installer,          'rubygems/installer'
   autoload :Licenses,           'rubygems/util/licenses'
   autoload :PathSupport,        'rubygems/path_support'
@@ -1392,25 +1368,22 @@ def clear_default_specs
 require 'rubygems/exceptions'
 
 # REFACTOR: This should be pulled out into some kind of hacks file.
-gem_preluded = Gem::GEM_PRELUDE_SUCKAGE and defined? Gem
-unless gem_preluded then # TODO: remove guard after 1.9.2 dropped
+begin
+  ##
+  # Defaults the operating system (or packager) wants to provide for RubyGems.
+
+  require 'rubygems/defaults/operating_system'
+rescue LoadError
+end
+
+if defined?(RUBY_ENGINE)
   begin
     ##
-    # Defaults the operating system (or packager) wants to provide for RubyGems.
+    # Defaults the Ruby implementation wants to provide for RubyGems
 
-    require 'rubygems/defaults/operating_system'
+    require "rubygems/defaults/#{RUBY_ENGINE}"
   rescue LoadError
   end
-
-  if defined?(RUBY_ENGINE) then
-    begin
-      ##
-      # Defaults the Ruby implementation wants to provide for RubyGems
-
-      require "rubygems/defaults/#{RUBY_ENGINE}"
-    rescue LoadError
-    end
-  end
 end
 
 ##
@@ -1419,5 +1392,6 @@ def clear_default_specs
 
 require 'rubygems/core_ext/kernel_gem'
 require 'rubygems/core_ext/kernel_require'
+require 'rubygems/core_ext/kernel_warn'
 
 Gem.use_gemdeps
diff --git a/lib/ruby/stdlib/rubygems/available_set.rb b/lib/ruby/stdlib/rubygems/available_set.rb
index 49b5d5fd06d..8334a73ecb6 100644
--- a/lib/ruby/stdlib/rubygems/available_set.rb
+++ b/lib/ruby/stdlib/rubygems/available_set.rb
@@ -103,7 +103,7 @@ def source_for(spec)
   # Other options are :shallow for only direct development dependencies of the
   # gems in this set or :all for all development dependencies.
 
-  def to_request_set development = :none
+  def to_request_set(development = :none)
     request_set = Gem::RequestSet.new
     request_set.development = :all == development
 
diff --git a/lib/ruby/stdlib/rubygems/basic_specification.rb b/lib/ruby/stdlib/rubygems/basic_specification.rb
index 72954a7863d..d1878021baf 100644
--- a/lib/ruby/stdlib/rubygems/basic_specification.rb
+++ b/lib/ruby/stdlib/rubygems/basic_specification.rb
@@ -65,10 +65,10 @@ def base_dir
   ##
   # Return true if this spec can require +file+.
 
-  def contains_requirable_file? file
-    if @ignored then
+  def contains_requirable_file?(file)
+    if @ignored
       return false
-    elsif missing_extensions? then
+    elsif missing_extensions?
       @ignored = true
 
       warn "Ignoring #{full_name} because its extensions are not built. " +
@@ -124,7 +124,7 @@ def full_gem_path
   # default Ruby platform.
 
   def full_name
-    if platform == Gem::Platform::RUBY or platform.nil? then
+    if platform == Gem::Platform::RUBY or platform.nil?
       "#{name}-#{version}".dup.untaint
     else
       "#{name}-#{version}-#{platform}".dup.untaint
@@ -152,7 +152,7 @@ def full_require_paths
   # The path to the data directory for this gem.
 
   def datadir
-# TODO: drop the extra ", gem_name" which is uselessly redundant
+    # TODO: drop the extra ", gem_name" which is uselessly redundant
     File.expand_path(File.join(gems_dir, full_name, "data", name)).untaint
   end
 
@@ -160,8 +160,8 @@ def datadir
   # Full path of the target library file.
   # If the file is not in this gem, return nil.
 
-  def to_fullpath path
-    if activated? then
+  def to_fullpath(path)
+    if activated?
       @paths_map ||= {}
       @paths_map[path] ||=
       begin
@@ -249,7 +249,7 @@ def require_paths
   def source_paths
     paths = raw_require_paths.dup
 
-    if have_extensions? then
+    if have_extensions?
       ext_dirs = extensions.map do |extension|
         extension.split(File::SEPARATOR, 2).first
       end.uniq
@@ -263,7 +263,7 @@ def source_paths
   ##
   # Return all files in this gem that match for +glob+.
 
-  def matches_for_glob glob # TODO: rename?
+  def matches_for_glob(glob) # TODO: rename?
     # TODO: do we need these?? Kill it
     glob = File.join(self.lib_dirs_glob, glob)
 
@@ -276,13 +276,13 @@ def matches_for_glob glob # TODO: rename?
 
   def lib_dirs_glob
     dirs = if self.raw_require_paths
-             if self.raw_require_paths.size > 1 then
+             if self.raw_require_paths.size > 1
                "{#{self.raw_require_paths.join(',')}}"
              else
                self.raw_require_paths.first
              end
            else
-            "lib" # default value for require_paths for bundler/inline
+             "lib" # default value for require_paths for bundler/inline
            end
 
     "#{self.full_gem_path}/#{dirs}".dup.untaint
@@ -316,7 +316,7 @@ def this; self; end
 
   def have_extensions?; !extensions.empty?; end
 
-  def have_file? file, suffixes
+  def have_file?(file, suffixes)
     return true if raw_require_paths.any? do |path|
       base = File.join(gems_dir, full_name, path.untaint, file).untaint
       suffixes.any? { |suf| File.file? base + suf }
diff --git a/lib/ruby/stdlib/rubygems/bundler_version_finder.rb b/lib/ruby/stdlib/rubygems/bundler_version_finder.rb
index f1824523329..e74baca1ee6 100644
--- a/lib/ruby/stdlib/rubygems/bundler_version_finder.rb
+++ b/lib/ruby/stdlib/rubygems/bundler_version_finder.rb
@@ -87,9 +87,9 @@ def self.lockfile_contents
     return unless gemfile
 
     lockfile = case gemfile
-    when "gems.rb" then "gems.locked"
-    else "#{gemfile}.lock"
-    end.dup.untaint
+               when "gems.rb" then "gems.locked"
+               else "#{gemfile}.lock"
+               end.dup.untaint
 
     return unless File.file?(lockfile)
 
diff --git a/lib/ruby/stdlib/rubygems/command.rb b/lib/ruby/stdlib/rubygems/command.rb
index a7ec212e51b..5b8868b0cdd 100644
--- a/lib/ruby/stdlib/rubygems/command.rb
+++ b/lib/ruby/stdlib/rubygems/command.rb
@@ -152,16 +152,24 @@ def execute
   #--
   # TODO: replace +domain+ with a parameter to suppress suggestions
 
-  def show_lookup_failure(gem_name, version, errors, domain)
+  def show_lookup_failure(gem_name, version, errors, domain, required_by = nil)
+    gem = "'#{gem_name}' (#{version})"
+    msg = String.new "Could not find a valid gem #{gem}"
+
     if errors and !errors.empty?
-      msg = "Could not find a valid gem '#{gem_name}' (#{version}), here is why:\n".dup
+      msg << ", here is why:\n"
       errors.each { |x| msg << "          #{x.wordy}\n" }
-      alert_error msg
     else
-      alert_error "Could not find a valid gem '#{gem_name}' (#{version}) in any repository"
+      if required_by and gem != required_by
+        msg << " (required by #{required_by}) in any repository"
+      else
+        msg << " in any repository"
+      end
     end
 
-    unless domain == :local then # HACK
+    alert_error msg
+
+    unless domain == :local  # HACK
       suggestions = Gem::SpecFetcher.fetcher.suggest_gems_from_name gem_name
 
       unless suggestions.empty?
@@ -176,7 +184,7 @@ def show_lookup_failure(gem_name, version, errors, domain)
   def get_all_gem_names
     args = options[:args]
 
-    if args.nil? or args.empty? then
+    if args.nil? or args.empty?
       raise Gem::CommandLineError,
             "Please specify at least one gem name (e.g. gem build GEMNAME)"
     end
@@ -206,12 +214,12 @@ def get_all_gem_names_and_versions
   def get_one_gem_name
     args = options[:args]
 
-    if args.nil? or args.empty? then
+    if args.nil? or args.empty?
       raise Gem::CommandLineError,
             "Please specify a gem name on the command line (e.g. gem build GEMNAME)"
     end
 
-    if args.size > 1 then
+    if args.size > 1
       raise Gem::CommandLineError,
             "Too many gem names (#{args.join(', ')}); please specify only one"
     end
@@ -305,9 +313,9 @@ def invoke_with_build_args(args, build_args)
       self.ui = ui = Gem::SilentUI.new
     end
 
-    if options[:help] then
+    if options[:help]
       show_help
-    elsif @when_invoked then
+    elsif @when_invoked
       @when_invoked.call options
     else
       execute
@@ -353,7 +361,7 @@ def add_option(*opts, &handler) # :yields: value, options
 
   def remove_option(name)
     @option_groups.each do |_, option_list|
-      option_list.reject! { |args, _| args.any? { |x| x =~ /^#{name}/ } }
+      option_list.reject! { |args, _| args.any? { |x| x.is_a?(String) && x =~ /^#{name}/ } }
     end
   end
 
@@ -443,7 +451,7 @@ def add_parser_options # :nodoc:
   # Adds a section with +title+ and +content+ to the parser help view.  Used
   # for adding command arguments and default arguments.
 
-  def add_parser_run_info title, content
+  def add_parser_run_info(title, content)
     return if content.empty?
 
     @parser.separator nil
@@ -496,7 +504,6 @@ def configure_options(header, option_list)
     @parser.separator "  #{header}Options:"
 
     option_list.each do |args, handler|
-      args.select { |arg| arg =~ /^-/ }
       @parser.on(*args) do |value|
         handler.call(value, @options)
       end
@@ -523,7 +530,7 @@ def wrap(text, width) # :doc:
   add_common_option('-V', '--[no-]verbose',
                     'Set the verbose level of output') do |value, options|
     # Set us to "really verbose" so the progress meter works
-    if Gem.configuration.verbose and value then
+    if Gem.configuration.verbose and value
       Gem.configuration.verbose = 1
     else
       Gem.configuration.verbose = value
@@ -562,7 +569,7 @@ def wrap(text, width) # :doc:
 
   # :stopdoc:
 
-  HELP = <<-HELP
+  HELP = <<-HELP.freeze
 RubyGems is a sophisticated package manager for Ruby.  This is a
 basic help message containing pointers to more information.
 
diff --git a/lib/ruby/stdlib/rubygems/command_manager.rb b/lib/ruby/stdlib/rubygems/command_manager.rb
index 3bee1c30a4a..8e4e26fdea1 100644
--- a/lib/ruby/stdlib/rubygems/command_manager.rb
+++ b/lib/ruby/stdlib/rubygems/command_manager.rb
@@ -7,7 +7,6 @@
 
 require 'rubygems/command'
 require 'rubygems/user_interaction'
-require 'rubygems/text'
 
 ##
 # The command manager registers and installs all the individual sub-commands
@@ -33,7 +32,6 @@
 
 class Gem::CommandManager
 
-  include Gem::Text
   include Gem::UserInteraction
 
   BUILTIN_COMMANDS = [ # :nodoc:
@@ -47,6 +45,7 @@ class Gem::CommandManager
     :fetch,
     :generate_index,
     :help,
+    :info,
     :install,
     :list,
     :lock,
@@ -70,7 +69,11 @@ class Gem::CommandManager
     :update,
     :which,
     :yank,
-  ]
+  ].freeze
+
+  ALIAS_COMMANDS = {
+    'i' => 'install'
+  }.freeze
 
   ##
   # Return the authoritative instance of the command manager.
@@ -142,17 +145,17 @@ def command_names
   def run(args, build_args=nil)
     process_args(args, build_args)
   rescue StandardError, Timeout::Error => ex
-    alert_error clean_text("While executing gem ... (#{ex.class})\n    #{ex}")
+    alert_error "While executing gem ... (#{ex.class})\n    #{ex}"
     ui.backtrace ex
 
     terminate_interaction(1)
   rescue Interrupt
-    alert_error clean_text("Interrupted")
+    alert_error "Interrupted"
     terminate_interaction(1)
   end
 
   def process_args(args, build_args=nil)
-    if args.empty? then
+    if args.empty?
       say Gem::Command::HELP
       terminate_interaction 1
     end
@@ -165,7 +168,7 @@ def process_args(args, build_args=nil)
       say Gem::VERSION
       terminate_interaction 0
     when /^-/ then
-      alert_error clean_text("Invalid option: #{args.first}. See 'gem --help'.")
+      alert_error "Invalid option: #{args.first}. See 'gem --help'."
       terminate_interaction 1
     else
       cmd_name = args.shift.downcase
@@ -175,18 +178,25 @@ def process_args(args, build_args=nil)
   end
 
   def find_command(cmd_name)
+    cmd_name = find_alias_command cmd_name
+
     possibilities = find_command_possibilities cmd_name
 
-    if possibilities.size > 1 then
+    if possibilities.size > 1
       raise Gem::CommandLineError,
             "Ambiguous command #{cmd_name} matches [#{possibilities.join(', ')}]"
-    elsif possibilities.empty? then
+    elsif possibilities.empty?
       raise Gem::CommandLineError, "Unknown command #{cmd_name}"
     end
 
     self[possibilities.first]
   end
 
+  def find_alias_command(cmd_name)
+    alias_name = ALIAS_COMMANDS[cmd_name]
+    alias_name ? alias_name : cmd_name
+  end
+
   def find_command_possibilities(cmd_name)
     len = cmd_name.length
 
@@ -214,10 +224,9 @@ def load_and_instantiate(command_name)
     rescue Exception => e
       e = load_error if load_error
 
-      alert_error clean_text("Loading command: #{command_name} (#{e.class})\n\t#{e}")
+      alert_error "Loading command: #{command_name} (#{e.class})\n\t#{e}"
       ui.backtrace e
     end
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/build_command.rb b/lib/ruby/stdlib/rubygems/commands/build_command.rb
index 38c45e46f05..e59471e9768 100644
--- a/lib/ruby/stdlib/rubygems/commands/build_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/build_command.rb
@@ -10,6 +10,14 @@ def initialize
     add_option '--force', 'skip validation of the spec' do |value, options|
       options[:force] = true
     end
+
+    add_option '--strict', 'consider warnings as errors when validating the spec' do |value, options|
+      options[:strict] = true
+    end
+
+    add_option '-o', '--output FILE', 'output gem with the given filename' do |value, options|
+      options[:output] = value
+    end
   end
 
   def arguments # :nodoc:
@@ -32,6 +40,11 @@ def description # :nodoc:
   $ cd my_gem-1.0
   [edit gem contents]
   $ gem build my_gem-1.0.gemspec
+
+Gems can be saved to a specified filename with the output option:
+
+  $ gem build my_gem-1.0.gemspec --output=release.gem
+
     EOF
   end
 
@@ -46,14 +59,21 @@ def execute
       gemspec += '.gemspec' if File.exist? gemspec + '.gemspec'
     end
 
-    if File.exist? gemspec then
-      spec = Gem::Specification.load gemspec
+    if File.exist? gemspec
+      Dir.chdir(File.dirname(gemspec)) do
+        spec = Gem::Specification.load File.basename(gemspec)
 
-      if spec then
-        Gem::Package.build spec, options[:force]
-      else
-        alert_error "Error loading gemspec. Aborting."
-        terminate_interaction 1
+        if spec
+          Gem::Package.build(
+            spec,
+            options[:force],
+            options[:strict],
+            options[:output]
+          )
+        else
+          alert_error "Error loading gemspec. Aborting."
+          terminate_interaction 1
+        end
       end
     else
       alert_error "Gemspec file not found: #{gemspec}"
@@ -62,4 +82,3 @@ def execute
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/cert_command.rb b/lib/ruby/stdlib/rubygems/commands/cert_command.rb
index 5542262a50c..5695460d947 100644
--- a/lib/ruby/stdlib/rubygems/commands/cert_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/cert_command.rb
@@ -14,15 +14,16 @@ def initialize
     super 'cert', 'Manage RubyGems certificates and signing settings',
           :add => [], :remove => [], :list => [], :build => [], :sign => []
 
-    OptionParser.accept OpenSSL::X509::Certificate do |certificate|
+    OptionParser.accept OpenSSL::X509::Certificate do |certificate_file|
       begin
-        OpenSSL::X509::Certificate.new File.read certificate
+        certificate = OpenSSL::X509::Certificate.new File.read certificate_file
       rescue Errno::ENOENT
-        raise OptionParser::InvalidArgument, "#{certificate}: does not exist"
+        raise OptionParser::InvalidArgument, "#{certificate_file}: does not exist"
       rescue OpenSSL::X509::CertificateError
         raise OptionParser::InvalidArgument,
-          "#{certificate}: invalid X509 certificate"
+          "#{certificate_file}: invalid X509 certificate"
       end
+      [certificate, certificate_file]
     end
 
     OptionParser.accept OpenSSL::PKey::RSA do |key_file|
@@ -42,7 +43,7 @@ def initialize
     end
 
     add_option('-a', '--add CERT', OpenSSL::X509::Certificate,
-               'Add a trusted certificate.') do |cert, options|
+               'Add a trusted certificate.') do |(cert, _), options|
       options[:add] << cert
     end
 
@@ -67,8 +68,9 @@ def initialize
     end
 
     add_option('-C', '--certificate CERT', OpenSSL::X509::Certificate,
-               'Signing certificate for --sign') do |cert, options|
+               'Signing certificate for --sign') do |(cert, cert_file), options|
       options[:issuer_cert] = cert
+      options[:issuer_cert_file] = cert_file
     end
 
     add_option('-K', '--private-key KEY', OpenSSL::PKey::RSA,
@@ -87,11 +89,16 @@ def initialize
 
     add_option('-d', '--days NUMBER_OF_DAYS',
                'Days before the certificate expires') do |days, options|
-                options[:expiration_length_days] = days.to_i
+      options[:expiration_length_days] = days.to_i
+    end
+
+    add_option('-R', '--re-sign',
+               'Re-signs the certificate from -C with the key from -K') do |resign, options|
+      options[:resign] = resign
     end
   end
 
-  def add_certificate certificate # :nodoc:
+  def add_certificate(certificate) # :nodoc:
     Gem::Security.trust_dir.trust_cert certificate
 
     say "Added '#{certificate.subject}'"
@@ -114,10 +121,18 @@ def execute
       build email
     end
 
+    if options[:resign]
+      re_sign_cert(
+        options[:issuer_cert],
+        options[:issuer_cert_file],
+        options[:key]
+      )
+    end
+
     sign_certificates unless options[:sign].empty?
   end
 
-  def build email
+  def build(email)
     if !valid_email?(email)
       raise Gem::CommandLineError, "Invalid email address #{email}"
     end
@@ -133,16 +148,16 @@ def build email
     end
   end
 
-  def build_cert email, key # :nodoc:
-    expiration_length_days = options[:expiration_length_days]
-    age =
-      if expiration_length_days.nil? || expiration_length_days == 0
-        Gem::Security::ONE_YEAR
-      else
-        Gem::Security::ONE_DAY * expiration_length_days
-      end
+  def build_cert(email, key) # :nodoc:
+    expiration_length_days = options[:expiration_length_days] ||
+      Gem.configuration.cert_expiration_length_days
+
+    cert = Gem::Security.create_cert_email(
+      email,
+      key,
+      (Gem::Security::ONE_DAY * expiration_length_days)
+    )
 
-    cert = Gem::Security.create_cert_email email, key, age
     Gem::Security.write cert, "gem-public_cert.pem"
   end
 
@@ -164,7 +179,7 @@ def build_key # :nodoc:
     return key, key_path
   end
 
-  def certificates_matching filter
+  def certificates_matching(filter)
     return enum_for __method__, filter unless block_given?
 
     Gem::Security.trusted_certificates.select do |certificate, _|
@@ -216,7 +231,7 @@ def description # :nodoc:
     EOF
   end
 
-  def list_certificates_matching filter # :nodoc:
+  def list_certificates_matching(filter) # :nodoc:
     certificates_matching filter do |certificate, _|
       # this could probably be formatted more gracefully
       say certificate.subject.to_s
@@ -261,14 +276,14 @@ def load_defaults # :nodoc:
     load_default_key  unless options[:key]
   end
 
-  def remove_certificates_matching filter # :nodoc:
+  def remove_certificates_matching(filter) # :nodoc:
     certificates_matching filter do |certificate, path|
       FileUtils.rm path
       say "Removed '#{certificate.subject}'"
     end
   end
 
-  def sign cert_file
+  def sign(cert_file)
     cert = File.read cert_file
     cert = OpenSSL::X509::Certificate.new cert
 
@@ -290,13 +305,19 @@ def sign_certificates # :nodoc:
     end
   end
 
+  def re_sign_cert(cert, cert_path, private_key)
+    Gem::Security::Signer.re_sign_cert(cert, cert_path, private_key) do |expired_cert_path, new_expired_cert_path|
+      alert("Your certificate #{expired_cert_path} has been re-signed")
+      alert("Your expired certificate will be located at: #{new_expired_cert_path}")
+    end
+  end
+
   private
 
-  def valid_email? email
+  def valid_email?(email)
     # It's simple, but is all we need
     email =~ /\A.+@.+\z/
   end
 
 
 end if defined?(OpenSSL::SSL)
-
diff --git a/lib/ruby/stdlib/rubygems/commands/check_command.rb b/lib/ruby/stdlib/rubygems/commands/check_command.rb
index 818cb05f558..7905b8ab69a 100644
--- a/lib/ruby/stdlib/rubygems/commands/check_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/check_command.rb
@@ -44,7 +44,7 @@ def check_gems
     gems = get_all_gem_names rescue []
 
     Gem::Validator.new.alien(gems).sort.each do |key, val|
-      unless val.empty? then
+      unless val.empty?
         say "#{key} has #{val.size} problems"
         val.each do |error_entry|
           say "  #{error_entry.path}:"
diff --git a/lib/ruby/stdlib/rubygems/commands/cleanup_command.rb b/lib/ruby/stdlib/rubygems/commands/cleanup_command.rb
index 79c23c840d1..aeb4d82fae2 100644
--- a/lib/ruby/stdlib/rubygems/commands/cleanup_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/cleanup_command.rb
@@ -22,6 +22,12 @@ def initialize
       options[:check_dev] = value
     end
 
+    add_option('--[no-]user-install',
+               'Cleanup in user\'s home directory instead',
+               'of GEM_HOME.') do |value, options|
+      options[:user_install] = value
+    end
+
     @candidate_gems  = nil
     @default_gems    = []
     @full            = nil
@@ -56,7 +62,7 @@ def usage # :nodoc:
   def execute
     say "Cleaning up installed gems..."
 
-    if options[:args].empty? then
+    if options[:args].empty?
       done     = false
       last_set = nil
 
@@ -105,7 +111,7 @@ def clean_gems
   end
 
   def get_candidate_gems
-    @candidate_gems = unless options[:args].empty? then
+    @candidate_gems = unless options[:args].empty?
                         options[:args].map do |gem_name|
                           Gem::Specification.find_all_by_name gem_name
                         end.flatten
@@ -115,7 +121,6 @@ def get_candidate_gems
   end
 
   def get_gems_to_cleanup
-
     gems_to_cleanup = @candidate_gems.select { |spec|
       @primary_gems[spec.name].version != spec.version
     }
@@ -124,8 +129,10 @@ def get_gems_to_cleanup
       spec.default_gem?
     }
 
+    uninstall_from = options[:user_install] ? Gem.user_dir : @original_home
+
     gems_to_cleanup = gems_to_cleanup.select { |spec|
-      spec.base_dir == @original_home
+      spec.base_dir == uninstall_from
     }
 
     @default_gems += default_gems
@@ -138,16 +145,16 @@ def get_primary_gems
 
     Gem::Specification.each do |spec|
       if @primary_gems[spec.name].nil? or
-         @primary_gems[spec.name].version < spec.version then
+         @primary_gems[spec.name].version < spec.version
         @primary_gems[spec.name] = spec
       end
     end
   end
 
-  def uninstall_dep spec
+  def uninstall_dep(spec)
     return unless @full.ok_to_remove?(spec.full_name, options[:check_dev])
 
-    if options[:dryrun] then
+    if options[:dryrun]
       say "Dry Run Mode: Would uninstall #{spec.full_name}"
       return
     end
diff --git a/lib/ruby/stdlib/rubygems/commands/contents_command.rb b/lib/ruby/stdlib/rubygems/commands/contents_command.rb
index e0f2eedb5d2..6da89a136ec 100644
--- a/lib/ruby/stdlib/rubygems/commands/contents_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/contents_command.rb
@@ -73,7 +73,7 @@ def execute
 
     names.each do |name|
       found =
-        if options[:show_install_dir] then
+        if options[:show_install_dir]
           gem_install_dir name
         else
           gem_contents name
@@ -83,15 +83,15 @@ def execute
     end
   end
 
-  def files_in spec
-    if spec.default_gem? then
+  def files_in(spec)
+    if spec.default_gem?
       files_in_default_gem spec
     else
       files_in_gem spec
     end
   end
 
-  def files_in_gem spec
+  def files_in_gem(spec)
     gem_path  = spec.full_gem_path
     extra     = "/{#{spec.require_paths.join ','}}" if options[:lib_only]
     glob      = "#{gem_path}#{extra}/**/*"
@@ -102,7 +102,7 @@ def files_in_gem spec
     end
   end
 
-  def files_in_default_gem spec
+  def files_in_default_gem(spec)
     spec.files.map do |file|
       case file
       when /\A#{spec.bindir}\//
@@ -115,7 +115,7 @@ def files_in_default_gem spec
     end
   end
 
-  def gem_contents name
+  def gem_contents(name)
     spec = spec_for name
 
     return false unless spec
@@ -127,7 +127,7 @@ def gem_contents name
     true
   end
 
-  def gem_install_dir name
+  def gem_install_dir(name)
     spec = spec_for name
 
     return false unless spec
@@ -138,27 +138,27 @@ def gem_install_dir name
   end
 
   def gem_names # :nodoc:
-    if options[:all] then
+    if options[:all]
       Gem::Specification.map(&:name)
     else
       get_all_gem_names
     end
   end
 
-  def path_description spec_dirs # :nodoc:
-    if spec_dirs.empty? then
+  def path_description(spec_dirs) # :nodoc:
+    if spec_dirs.empty?
       "default gem paths"
     else
       "specified path"
     end
   end
 
-  def show_files files
+  def show_files(files)
     files.sort.each do |prefix, basename|
       absolute_path = File.join(prefix, basename)
       next if File.directory? absolute_path
 
-      if options[:prefix] then
+      if options[:prefix]
         say absolute_path
       else
         say basename
@@ -166,14 +166,14 @@ def show_files files
     end
   end
 
-  def spec_for name
+  def spec_for(name)
     spec = Gem::Specification.find_all_by_name(name, @version).last
 
     return spec if spec
 
     say "Unable to find gem '#{name}' in #{@path_kind}"
 
-    if Gem.configuration.verbose then
+    if Gem.configuration.verbose
       say "\nDirectories searched:"
       @spec_dirs.sort.each { |dir| say dir }
     end
@@ -188,4 +188,3 @@ def specification_directories # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/dependency_command.rb b/lib/ruby/stdlib/rubygems/commands/dependency_command.rb
index 97fd812ffa8..9e88b04ea57 100644
--- a/lib/ruby/stdlib/rubygems/commands/dependency_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/dependency_command.rb
@@ -54,7 +54,7 @@ def usage # :nodoc:
     "#{program_name} REGEXP"
   end
 
-  def fetch_remote_specs dependency # :nodoc:
+  def fetch_remote_specs(dependency) # :nodoc:
     fetcher = Gem::SpecFetcher.fetcher
 
     ss, = fetcher.spec_for_dependency dependency
@@ -62,7 +62,7 @@ def fetch_remote_specs dependency # :nodoc:
     ss.map { |spec, _| spec }
   end
 
-  def fetch_specs name_pattern, dependency # :nodoc:
+  def fetch_specs(name_pattern, dependency) # :nodoc:
     specs = []
 
     if local?
@@ -79,7 +79,7 @@ def fetch_specs name_pattern, dependency # :nodoc:
     specs.uniq.sort
   end
 
-  def gem_dependency pattern, version, prerelease # :nodoc:
+  def gem_dependency(pattern, version, prerelease) # :nodoc:
     dependency = Gem::Deprecate.skip_during {
       Gem::Dependency.new pattern, version
     }
@@ -89,9 +89,9 @@ def gem_dependency pattern, version, prerelease # :nodoc:
     dependency
   end
 
-  def display_pipe specs # :nodoc:
+  def display_pipe(specs) # :nodoc:
     specs.each do |spec|
-      unless spec.dependencies.empty? then
+      unless spec.dependencies.empty?
         spec.dependencies.sort_by { |dep| dep.name }.each do |dep|
           say "#{dep.name} --version '#{dep.requirement}'"
         end
@@ -99,12 +99,12 @@ def display_pipe specs # :nodoc:
     end
   end
 
-  def display_readable specs, reverse # :nodoc:
+  def display_readable(specs, reverse) # :nodoc:
     response = String.new
 
     specs.each do |spec|
       response << print_dependencies(spec)
-      unless reverse[spec.full_name].empty? then
+      unless reverse[spec.full_name].empty?
         response << "  Used by\n"
         reverse[spec.full_name].each do |sp, dep|
           response << "    #{sp} (#{dep})\n"
@@ -128,7 +128,7 @@ def execute
 
     reverse = reverse_dependencies specs
 
-    if options[:pipe_format] then
+    if options[:pipe_format]
       display_pipe specs
     else
       display_readable specs, reverse
@@ -136,13 +136,13 @@ def execute
   end
 
   def ensure_local_only_reverse_dependencies # :nodoc:
-    if options[:reverse_dependencies] and remote? and not local? then
+    if options[:reverse_dependencies] and remote? and not local?
       alert_error 'Only reverse dependencies for local gems are supported.'
       terminate_interaction 1
     end
   end
 
-  def ensure_specs specs # :nodoc:
+  def ensure_specs(specs) # :nodoc:
     return unless specs.empty?
 
     patterns = options[:args].join ','
@@ -155,7 +155,7 @@ def ensure_specs specs # :nodoc:
   def print_dependencies(spec, level = 0) # :nodoc:
     response = String.new
     response << '  ' * level + "Gem #{spec.full_name}\n"
-    unless spec.dependencies.empty? then
+    unless spec.dependencies.empty?
       spec.dependencies.sort_by { |dep| dep.name }.each do |dep|
         response << '  ' * level + "  #{dep}\n"
       end
@@ -163,7 +163,7 @@ def print_dependencies(spec, level = 0) # :nodoc:
     response
   end
 
-  def remote_specs dependency # :nodoc:
+  def remote_specs(dependency) # :nodoc:
     fetcher = Gem::SpecFetcher.fetcher
 
     ss, _ = fetcher.spec_for_dependency dependency
@@ -171,7 +171,7 @@ def remote_specs dependency # :nodoc:
     ss.map { |s,o| s }
   end
 
-  def reverse_dependencies specs # :nodoc:
+  def reverse_dependencies(specs) # :nodoc:
     reverse = Hash.new { |h, k| h[k] = [] }
 
     return reverse unless options[:reverse_dependencies]
@@ -186,7 +186,7 @@ def reverse_dependencies specs # :nodoc:
   ##
   # Returns an Array of [specification, dep] that are satisfied by +spec+.
 
-  def find_reverse_dependencies spec # :nodoc:
+  def find_reverse_dependencies(spec) # :nodoc:
     result = []
 
     Gem::Specification.each do |sp|
@@ -194,7 +194,7 @@ def find_reverse_dependencies spec # :nodoc:
         dep = Gem::Dependency.new(*dep) unless Gem::Dependency === dep
 
         if spec.name == dep.name and
-           dep.requirement.satisfied_by?(spec.version) then
+           dep.requirement.satisfied_by?(spec.version)
           result << [sp.full_name, dep]
         end
       end
@@ -205,10 +205,10 @@ def find_reverse_dependencies spec # :nodoc:
 
   private
 
-  def name_pattern args
+  def name_pattern(args)
     args << '' if args.empty?
 
-    if args.length == 1 and args.first =~ /\A\/(.*)\/(i)?\z/m then
+    if args.length == 1 and args.first =~ /\A\/(.*)\/(i)?\z/m
       flags = $2 ? Regexp::IGNORECASE : nil
       Regexp.new $1, flags
     else
diff --git a/lib/ruby/stdlib/rubygems/commands/environment_command.rb b/lib/ruby/stdlib/rubygems/commands/environment_command.rb
index e825c761ad2..11fb45f68d2 100644
--- a/lib/ruby/stdlib/rubygems/commands/environment_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/environment_command.rb
@@ -97,7 +97,7 @@ def execute
     true
   end
 
-  def add_path out, path
+  def add_path(out, path)
     path.each do |component|
       out << "     - #{component}\n"
     end
@@ -120,6 +120,8 @@ def show_environment # :nodoc:
 
     out << "  - RUBY EXECUTABLE: #{Gem.ruby}\n"
 
+    out << "  - GIT EXECUTABLE: #{git_path}\n"
+
     out << "  - EXECUTABLE DIRECTORY: #{Gem.bindir}\n"
 
     out << "  - SPEC CACHE DIRECTORY: #{Gem.spec_cache_dir}\n"
@@ -157,4 +159,21 @@ def show_environment # :nodoc:
     out
   end
 
+  private
+
+  ##
+  # Git binary path
+
+  def git_path
+    exts = ENV["PATHEXT"] ? ENV["PATHEXT"].split(";") : [""]
+    ENV["PATH"].split(File::PATH_SEPARATOR).each do |path|
+      exts.each do |ext|
+        exe = File.join(path, "git#{ext}")
+        return exe if File.executable?(exe) && !File.directory?(exe)
+      end
+    end
+
+    return nil
+  end
+
 end
diff --git a/lib/ruby/stdlib/rubygems/commands/fetch_command.rb b/lib/ruby/stdlib/rubygems/commands/fetch_command.rb
index 19559a77741..66562d7fb73 100644
--- a/lib/ruby/stdlib/rubygems/commands/fetch_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/fetch_command.rb
@@ -56,14 +56,14 @@ def execute
       specs_and_sources, errors =
         Gem::SpecFetcher.fetcher.spec_for_dependency dep
 
-      if platform then
+      if platform
         filtered = specs_and_sources.select { |s,| s.platform == platform }
         specs_and_sources = filtered unless filtered.empty?
       end
 
       spec, source = specs_and_sources.max_by { |s,| s.version }
 
-      if spec.nil? then
+      if spec.nil?
         show_lookup_failure gem_name, version, errors, options[:domain]
         next
       end
@@ -75,4 +75,3 @@ def execute
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/generate_index_command.rb b/lib/ruby/stdlib/rubygems/commands/generate_index_command.rb
index 0b677b73a95..941637ea9c8 100644
--- a/lib/ruby/stdlib/rubygems/commands/generate_index_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/generate_index_command.rb
@@ -67,13 +67,13 @@ def execute
     options[:build_modern] = true
 
     if not File.exist?(options[:directory]) or
-       not File.directory?(options[:directory]) then
+       not File.directory?(options[:directory])
       alert_error "unknown directory name #{options[:directory]}."
       terminate_interaction 1
     else
       indexer = Gem::Indexer.new options.delete(:directory), options
 
-      if options[:update] then
+      if options[:update]
         indexer.update_index
       else
         indexer.generate_index
@@ -82,4 +82,3 @@ def execute
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/help_command.rb b/lib/ruby/stdlib/rubygems/commands/help_command.rb
index 7d020223696..9f14e22f901 100644
--- a/lib/ruby/stdlib/rubygems/commands/help_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/help_command.rb
@@ -4,7 +4,7 @@
 class Gem::Commands::HelpCommand < Gem::Command
 
   # :stopdoc:
-  EXAMPLES = <<-EOF
+  EXAMPLES = <<-EOF.freeze
 Some examples of 'gem' usage.
 
 * Install 'rake', either from local directory or remote server:
@@ -53,7 +53,7 @@ class Gem::Commands::HelpCommand < Gem::Command
     gem update --system
   EOF
 
-  GEM_DEPENDENCIES = <<-EOF
+  GEM_DEPENDENCIES = <<-EOF.freeze
 A gem dependencies file allows installation of a consistent set of gems across
 multiple environments.  The RubyGems implementation is designed to be
 compatible with Bundler's Gemfile format.  You can see additional
@@ -230,7 +230,7 @@ class Gem::Commands::HelpCommand < Gem::Command
 
   EOF
 
-  PLATFORMS = <<-'EOF'
+  PLATFORMS = <<-'EOF'.freeze
 RubyGems platforms are composed of three parts, a CPU, an OS, and a
 version.  These values are taken from values in rbconfig.rb.  You can view
 your current platform by running `gem environment`.
@@ -277,7 +277,7 @@ class Gem::Commands::HelpCommand < Gem::Command
     ["examples",         EXAMPLES],
     ["gem_dependencies", GEM_DEPENDENCIES],
     ["platforms",        PLATFORMS],
-  ]
+  ].freeze
   # :startdoc:
 
   def initialize
@@ -297,8 +297,8 @@ def execute
       begins? command, arg
     end
 
-    if help then
-      if Symbol === help then
+    if help
+      if Symbol === help
         send help
       else
         say help
@@ -306,10 +306,10 @@ def execute
       return
     end
 
-    if options[:help] then
+    if options[:help]
       show_help
 
-    elsif arg then
+    elsif arg
       show_command_help arg
 
     else
@@ -334,7 +334,7 @@ def show_commands # :nodoc:
       command = @command_manager[cmd_name]
 
       summary =
-        if command then
+        if command
           command.summary
         else
           "[No command found for #{cmd_name}]"
@@ -356,15 +356,15 @@ def show_commands # :nodoc:
     say out.join("\n")
   end
 
-  def show_command_help command_name # :nodoc:
+  def show_command_help(command_name) # :nodoc:
     command_name = command_name.downcase
 
     possibilities = @command_manager.find_command_possibilities command_name
 
-    if possibilities.size == 1 then
+    if possibilities.size == 1
       command = @command_manager[possibilities.first]
       command.invoke("--help")
-    elsif possibilities.size > 1 then
+    elsif possibilities.size > 1
       alert_warning "Ambiguous command #{command_name} (#{possibilities.join(', ')})"
     else
       alert_warning "Unknown command #{command_name}. Try: gem help commands"
@@ -372,4 +372,3 @@ def show_command_help command_name # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/info_command.rb b/lib/ruby/stdlib/rubygems/commands/info_command.rb
new file mode 100644
index 00000000000..8d9611a9574
--- /dev/null
+++ b/lib/ruby/stdlib/rubygems/commands/info_command.rb
@@ -0,0 +1,33 @@
+# frozen_string_literal: true
+
+require 'rubygems/command'
+require 'rubygems/commands/query_command'
+
+class Gem::Commands::InfoCommand < Gem::Commands::QueryCommand
+  def initialize
+    super "info", "Show information for the given gem"
+
+    remove_option('--name-matches')
+    remove_option('-d')
+
+    defaults[:details] = true
+    defaults[:exact] = true
+  end
+
+  def description # :nodoc:
+    "Info prints information about the gem such as name,"\
+    " description, website, license and installed paths"
+  end
+
+  def usage # :nodoc:
+    "#{program_name} GEMNAME"
+  end
+
+  def arguments # :nodoc:
+    "GEMNAME        name of the gem to print information about"
+  end
+
+  def defaults_str
+    "--local"
+  end
+end
diff --git a/lib/ruby/stdlib/rubygems/commands/install_command.rb b/lib/ruby/stdlib/rubygems/commands/install_command.rb
index 57d5328f86a..776b58651f7 100644
--- a/lib/ruby/stdlib/rubygems/commands/install_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/install_command.rb
@@ -132,7 +132,7 @@ def usage # :nodoc:
   end
 
   def check_install_dir # :nodoc:
-    if options[:install_dir] and options[:user_install] then
+    if options[:install_dir] and options[:user_install]
       alert_error "Use --install-dir or --user-install but not both"
       terminate_interaction 1
     end
@@ -140,22 +140,22 @@ def check_install_dir # :nodoc:
 
   def check_version # :nodoc:
     if options[:version] != Gem::Requirement.default and
-         get_all_gem_names.size > 1 then
-      alert_error "Can't use --version w/ multiple gems. Use name:ver instead."
+         get_all_gem_names.size > 1
+      alert_error "Can't use --version with multiple gems. You can specify multiple gems with" \
+                  " version requirements using `gem install 'my_gem:1.0.0' 'my_other_gem:~>2.0.0'`"
       terminate_interaction 1
     end
   end
 
   def execute
-
-    if options.include? :gemdeps then
+    if options.include? :gemdeps
       install_from_gemdeps
       return # not reached
     end
 
     @installed_specs = []
 
-    ENV.delete 'GEM_PATH' if options[:install_dir].nil? and RUBY_VERSION > '1.9'
+    ENV.delete 'GEM_PATH' if options[:install_dir].nil?
 
     check_install_dir
     check_version
@@ -188,13 +188,13 @@ def install_from_gemdeps # :nodoc:
     terminate_interaction
   end
 
-  def install_gem name, version # :nodoc:
+  def install_gem(name, version) # :nodoc:
     return if options[:conservative] and
       not Gem::Dependency.new(name, version).matching_specs.empty?
 
     req = Gem::Requirement.create(version)
 
-    if options[:ignore_dependencies] then
+    if options[:ignore_dependencies]
       install_gem_without_dependencies name, req
     else
       inst = Gem::DependencyInstaller.new options
@@ -216,11 +216,11 @@ def install_gem name, version # :nodoc:
     end
   end
 
-  def install_gem_without_dependencies name, req # :nodoc:
+  def install_gem_without_dependencies(name, req) # :nodoc:
     gem = nil
 
-    if local? then
-      if name =~ /\.gem$/ and File.file? name then
+    if local?
+      if name =~ /\.gem$/ and File.file? name
         source = Gem::Source::SpecificFile.new name
         spec = source.spec
       else
@@ -230,7 +230,7 @@ def install_gem_without_dependencies name, req # :nodoc:
       gem = source.download spec if spec
     end
 
-    if remote? and not gem then
+    if remote? and not gem
       dependency = Gem::Dependency.new name, req
       dependency.prerelease = options[:prerelease]
 
@@ -257,17 +257,22 @@ def install_gems # :nodoc:
 
     get_all_gem_names_and_versions.each do |gem_name, gem_version|
       gem_version ||= options[:version]
+      domain = options[:domain]
+      domain = :local unless options[:suggest_alternate]
 
       begin
         install_gem gem_name, gem_version
       rescue Gem::InstallError => e
         alert_error "Error installing #{gem_name}:\n\t#{e.message}"
         exit_code |= 1
-      rescue Gem::GemNotFoundException, Gem::UnsatisfiableDependencyError => e
-        domain = options[:domain]
-        domain = :local unless options[:suggest_alternate]
+      rescue Gem::GemNotFoundException => e
         show_lookup_failure e.name, e.version, e.errors, domain
 
+        exit_code |= 2
+      rescue Gem::UnsatisfiableDependencyError => e
+        show_lookup_failure e.name, e.version, e.errors, domain,
+                            "'#{gem_name}' (#{gem_version})"
+
         exit_code |= 2
       end
     end
@@ -287,7 +292,7 @@ def load_hooks # :nodoc:
     require 'rubygems/rdoc'
   end
 
-  def show_install_errors errors # :nodoc:
+  def show_install_errors(errors) # :nodoc:
     return unless errors
 
     errors.each do |x|
@@ -307,4 +312,3 @@ def show_installed # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/list_command.rb b/lib/ruby/stdlib/rubygems/commands/list_command.rb
index 1acb49e5fbc..cd215435377 100644
--- a/lib/ruby/stdlib/rubygems/commands/list_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/list_command.rb
@@ -38,4 +38,3 @@ def usage # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/lock_command.rb b/lib/ruby/stdlib/rubygems/commands/lock_command.rb
index 3eebfadc055..7f02e9feda9 100644
--- a/lib/ruby/stdlib/rubygems/commands/lock_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/lock_command.rb
@@ -59,7 +59,7 @@ def usage # :nodoc:
   end
 
   def complain(message)
-    if options[:strict] then
+    if options[:strict]
       raise Gem::Exception, message
     else
       say "# #{message}"
@@ -78,7 +78,7 @@ def execute
 
       spec = Gem::Specification.load spec_path(full_name)
 
-      if spec.nil? then
+      if spec.nil?
         complain "Could not find gem #{full_name}, try using the full name"
         next
       end
@@ -90,7 +90,7 @@ def execute
         next if locked[dep.name]
         candidates = dep.matching_specs
 
-        if candidates.empty? then
+        if candidates.empty?
           complain "Unable to satisfy '#{dep}' from currently installed gems"
         else
           pending << candidates.last.full_name
@@ -108,4 +108,3 @@ def spec_path(gem_full_name)
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/open_command.rb b/lib/ruby/stdlib/rubygems/commands/open_command.rb
index 059635e8354..2794fe05e65 100644
--- a/lib/ruby/stdlib/rubygems/commands/open_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/open_command.rb
@@ -11,9 +11,9 @@ class Gem::Commands::OpenCommand < Gem::Command
   def initialize
     super 'open', 'Open gem sources in editor'
 
-    add_option('-e', '--editor EDITOR', String,
-               "Opens gem sources in EDITOR") do |editor, options|
-      options[:editor] = editor || get_env_editor
+    add_option('-e', '--editor COMMAND', String,
+               "Prepends COMMAND to gem path. Could be used to specify editor.") do |command, options|
+      options[:editor] = command || get_env_editor
     end
     add_option('-v', '--version VERSION', String,
                "Opens specific gem version") do |version|
@@ -32,14 +32,14 @@ def defaults_str # :nodoc:
   def description # :nodoc:
     <<-EOF
         The open command opens gem in editor and changes current path
-        to gem's source directory. Editor can be specified with -e option,
-        otherwise rubygems will look for editor in $EDITOR, $VISUAL and
-        $GEM_EDITOR variables.
+        to gem's source directory.
+        Editor command can be specified with -e option, otherwise rubygems
+        will look for editor in $EDITOR, $VISUAL and $GEM_EDITOR variables.
     EOF
   end
 
   def usage # :nodoc:
-    "#{program_name} GEMNAME [-e EDITOR]"
+    "#{program_name} GEMNAME [-e COMMAND]"
   end
 
   def get_env_editor
@@ -58,20 +58,26 @@ def execute
     terminate_interaction 1 unless found
   end
 
-  def open_gem name
+  def open_gem(name)
     spec = spec_for name
+
     return false unless spec
 
+    if spec.default_gem?
+      say "'#{name}' is a default gem and can't be opened."
+      return false
+    end
+
     open_editor(spec.full_gem_path)
   end
 
-  def open_editor path
+  def open_editor(path)
     Dir.chdir(path) do
       system(*@editor.split(/\s+/) + [path])
     end
   end
 
-  def spec_for name
+  def spec_for(name)
     spec = Gem::Specification.find_all_by_name(name, @version).first
 
     return spec if spec
diff --git a/lib/ruby/stdlib/rubygems/commands/owner_command.rb b/lib/ruby/stdlib/rubygems/commands/owner_command.rb
index cac6c5a17d3..799f31704a2 100644
--- a/lib/ruby/stdlib/rubygems/commands/owner_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/owner_command.rb
@@ -2,11 +2,8 @@
 require 'rubygems/command'
 require 'rubygems/local_remote_options'
 require 'rubygems/gemcutter_utilities'
-require 'rubygems/text'
 
 class Gem::Commands::OwnerCommand < Gem::Command
-
-  include Gem::Text
   include Gem::LocalRemoteOptions
   include Gem::GemcutterUtilities
 
@@ -33,6 +30,7 @@ def initialize
     super 'owner', 'Manage gem owners of a gem on the push server'
     add_proxy_option
     add_key_option
+    add_otp_option
     defaults.merge! :add => [], :remove => []
 
     add_option '-a', '--add EMAIL', 'Add an owner' do |value, options|
@@ -61,13 +59,13 @@ def execute
     show_owners   name
   end
 
-  def show_owners name
+  def show_owners(name)
     response = rubygems_api_request :get, "api/v1/gems/#{name}/owners.yaml" do |request|
       request.add_field "Authorization", api_key
     end
 
     with_response response do |resp|
-      owners = Gem::SafeYAML.load clean_text(resp.body)
+      owners = Gem::SafeYAML.load resp.body
 
       say "Owners for gem: #{name}"
       owners.each do |owner|
@@ -76,20 +74,21 @@ def show_owners name
     end
   end
 
-  def add_owners name, owners
+  def add_owners(name, owners)
     manage_owners :post, name, owners
   end
 
-  def remove_owners name, owners
+  def remove_owners(name, owners)
     manage_owners :delete, name, owners
   end
 
-  def manage_owners method, name, owners
+  def manage_owners(method, name, owners)
     owners.each do |owner|
       begin
-        response = rubygems_api_request method, "api/v1/gems/#{name}/owners" do |request|
-          request.set_form_data 'email' => owner
-          request.add_field "Authorization", api_key
+        response = send_owner_request(method, name, owner)
+
+        if need_otp? response
+          response = send_owner_request(method, name, owner, true)
         end
 
         action = method == :delete ? "Removing" : "Adding"
@@ -101,4 +100,14 @@ def manage_owners method, name, owners
     end
   end
 
+  private
+
+  def send_owner_request(method, name, owner, use_otp = false)
+    rubygems_api_request method, "api/v1/gems/#{name}/owners" do |request|
+      request.set_form_data 'email' => owner
+      request.add_field "Authorization", api_key
+      request.add_field "OTP", options[:otp] if use_otp
+    end
+  end
+
 end
diff --git a/lib/ruby/stdlib/rubygems/commands/pristine_command.rb b/lib/ruby/stdlib/rubygems/commands/pristine_command.rb
index fafe35bec1c..41decde8561 100644
--- a/lib/ruby/stdlib/rubygems/commands/pristine_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/pristine_command.rb
@@ -24,7 +24,8 @@ def initialize
 
     add_option('--skip=gem_name',
                'used on --all, skip if name == gem_name') do |value, options|
-      options[:skip] = value
+      options[:skip] ||= []
+      options[:skip] << value
     end
 
     add_option('--[no-]extensions',
@@ -45,6 +46,12 @@ def initialize
       options[:env_shebang] = value
     end
 
+    add_option('-n', '--bindir DIR',
+               'Directory where executables are',
+               'located') do |value, options|
+      options[:bin_dir] = File.expand_path(value)
+    end
+
     add_version_option('restore to', 'pristine condition')
   end
 
@@ -81,13 +88,13 @@ def usage # :nodoc:
   end
 
   def execute
-    specs = if options[:all] then
+    specs = if options[:all]
               Gem::Specification.map
 
             # `--extensions` must be explicitly given to pristine only gems
             # with extensions.
             elsif options[:extensions_set] and
-                  options[:extensions] and options[:args].empty? then
+                  options[:extensions] and options[:args].empty?
               Gem::Specification.select do |spec|
                 spec.extensions and not spec.extensions.empty?
               end
@@ -97,7 +104,7 @@ def execute
               end.flatten
             end
 
-    if specs.to_a.empty? then
+    if specs.to_a.empty?
       raise Gem::Exception,
             "Failed to find gems #{options[:args]} #{options[:version]}"
     end
@@ -115,24 +122,21 @@ def execute
         next
       end
 
-      if spec.name == options[:skip]
-        say "Skipped #{spec.full_name}, it was given through options"
-        next
-      end
-
-      if spec.bundled_gem_in_old_ruby?
-        say "Skipped #{spec.full_name}, it is bundled with old Ruby"
-        next
+      if options.has_key? :skip
+        if options[:skip].include? spec.name
+          say "Skipped #{spec.full_name}, it was given through options"
+          next
+        end
       end
 
-      unless spec.extensions.empty? or options[:extensions] or options[:only_executables] then
+      unless spec.extensions.empty? or options[:extensions] or options[:only_executables]
         say "Skipped #{spec.full_name}, it needs to compile an extension"
         next
       end
 
       gem = spec.cache_file
 
-      unless File.exist? gem or options[:only_executables] then
+      unless File.exist? gem or options[:only_executables]
         require 'rubygems/remote_fetcher'
 
         say "Cached gem for #{spec.full_name} not found, attempting to fetch..."
@@ -150,22 +154,25 @@ def execute
       end
 
       env_shebang =
-        if options.include? :env_shebang then
+        if options.include? :env_shebang
           options[:env_shebang]
         else
           install_defaults = Gem::ConfigFile::PLATFORM_DEFAULTS['install']
           install_defaults.to_s['--env-shebang']
         end
 
+      bin_dir = options[:bin_dir] if options[:bin_dir]
+
       installer_options = {
         :wrappers => true,
         :force => true,
         :install_dir => spec.base_dir,
         :env_shebang => env_shebang,
         :build_args => spec.build_args,
+        :bin_dir => bin_dir
       }
 
-      if options[:only_executables] then
+      if options[:only_executables]
         installer = Gem::Installer.for_spec(spec, installer_options)
         installer.generate_bin
       else
diff --git a/lib/ruby/stdlib/rubygems/commands/push_command.rb b/lib/ruby/stdlib/rubygems/commands/push_command.rb
index 83c7131afc9..3ea4703a3ed 100644
--- a/lib/ruby/stdlib/rubygems/commands/push_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/push_command.rb
@@ -33,6 +33,7 @@ def initialize
 
     add_proxy_option
     add_key_option
+    add_otp_option
 
     add_option('--host HOST',
                'Push to another gemcutter-compatible host',
@@ -79,7 +80,7 @@ def send_gem(name)
 
     if latest_rubygems_version < Gem.rubygems_version and
          Gem.rubygems_version.prerelease? and
-         Gem::Version.new('2.0.0.rc.2') != Gem.rubygems_version then
+         Gem::Version.new('2.0.0.rc.2') != Gem.rubygems_version
       alert_error <<-ERROR
 You are using a beta release of RubyGems (#{Gem::VERSION}) which is not
 allowed to push gems.  Please downgrade or upgrade to a release version.
@@ -96,7 +97,7 @@ def send_gem(name)
 
     gem_data = Gem::Package.new(name)
 
-    unless @host then
+    unless @host
       @host = gem_data.spec.metadata['default_gem_server']
     end
 
@@ -113,11 +114,10 @@ def send_gem(name)
 
     say "Pushing gem to #{@host || Gem.host}..."
 
-    response = rubygems_api_request(*args) do |request|
-      request.body = Gem.read_binary name
-      request.add_field "Content-Length", request.body.size
-      request.add_field "Content-Type",   "application/octet-stream"
-      request.add_field "Authorization",  api_key
+    response = send_push_request(name, args)
+
+    if need_otp? response
+      response = send_push_request(name, args, true)
     end
 
     with_response response
@@ -125,6 +125,16 @@ def send_gem(name)
 
   private
 
+  def send_push_request(name, args, use_otp = false)
+    rubygems_api_request(*args) do |request|
+      request.body = Gem.read_binary name
+      request.add_field "Content-Length", request.body.size
+      request.add_field "Content-Type",   "application/octet-stream"
+      request.add_field "Authorization",  api_key
+      request.add_field "OTP", options[:otp] if use_otp
+    end
+  end
+
   def get_hosts_for(name)
     gem_metadata = Gem::Package.new(name).spec.metadata
 
@@ -134,4 +144,3 @@ def get_hosts_for(name)
     ]
   end
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/query_command.rb b/lib/ruby/stdlib/rubygems/commands/query_command.rb
index 4624e5a1e91..d947d588ef0 100644
--- a/lib/ruby/stdlib/rubygems/commands/query_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/query_command.rb
@@ -91,8 +91,8 @@ def execute
 
     prerelease = options[:prerelease]
 
-    unless options[:installed].nil? then
-      if no_name then
+    unless options[:installed].nil?
+      if no_name
         alert_error "You must specify a gem name"
         exit_code |= 4
       elsif name.count > 1
@@ -102,7 +102,7 @@ def execute
         installed = installed? name.first, options[:version]
         installed = !installed unless options[:installed]
 
-        if installed then
+        if installed
           say "true"
         else
           say "false"
@@ -119,8 +119,8 @@ def execute
 
   private
 
-  def display_header type
-    if (ui.outs.tty? and Gem.configuration.verbose) or both? then
+  def display_header(type)
+    if (ui.outs.tty? and Gem.configuration.verbose) or both?
       say
       say "*** #{type} GEMS ***"
       say
@@ -128,14 +128,14 @@ def display_header type
   end
 
   #Guts of original execute
-  def show_gems name, prerelease
+  def show_gems(name, prerelease)
     req = Gem::Requirement.default
     # TODO: deprecate for real
     dep = Gem::Deprecate.skip_during { Gem::Dependency.new name, req }
     dep.prerelease = prerelease
 
-    if local? then
-      if prerelease and not both? then
+    if local?
+      if prerelease and not both?
         alert_warning "prereleases are always shown locally"
       end
 
@@ -152,7 +152,7 @@ def show_gems name, prerelease
       output_query_results spec_tuples
     end
 
-    if remote? then
+    if remote?
       display_header 'REMOTE'
 
       fetcher = Gem::SpecFetcher.fetcher
@@ -205,7 +205,7 @@ def output_query_results(spec_tuples)
     say output.join(options[:details] ? "\n\n" : "\n")
   end
 
-  def output_versions output, versions
+  def output_versions(output, versions)
     versions.each do |gem_name, matching_tuples|
       matching_tuples = matching_tuples.sort_by { |n,_| n.version }.reverse
 
@@ -218,7 +218,7 @@ def output_versions output, versions
       seen = {}
 
       matching_tuples.delete_if do |n,_|
-        if seen[n.version] then
+        if seen[n.version]
           true
         else
           seen[n.version] = true
@@ -230,7 +230,7 @@ def output_versions output, versions
     end
   end
 
-  def entry_details entry, detail_tuple, specs, platforms
+  def entry_details(entry, detail_tuple, specs, platforms)
     return unless options[:details]
 
     name_tuple, spec = detail_tuple
@@ -247,11 +247,11 @@ def entry_details entry, detail_tuple, specs, platforms
     spec_summary     entry, spec
   end
 
-  def entry_versions entry, name_tuples, platforms, specs
+  def entry_versions(entry, name_tuples, platforms, specs)
     return unless options[:versions]
 
     list =
-      if platforms.empty? or options[:details] then
+      if platforms.empty? or options[:details]
         name_tuples.map { |n| n.version }.uniq
       else
         platforms.sort.reverse.map do |version, pls|
@@ -264,7 +264,7 @@ def entry_versions entry, name_tuples, platforms, specs
             out = "default: #{out}" if default
           end
 
-          if pls != [Gem::Platform::RUBY] then
+          if pls != [Gem::Platform::RUBY]
             platform_list = [pls.delete(Gem::Platform::RUBY), *pls.sort].compact
             out = platform_list.unshift(out).join(' ')
           end
@@ -276,7 +276,7 @@ def entry_versions entry, name_tuples, platforms, specs
     entry << " (#{list.join ', '})"
   end
 
-  def make_entry entry_tuples, platforms
+  def make_entry(entry_tuples, platforms)
     detail_tuple = entry_tuples.first
 
     name_tuples, specs = entry_tuples.flatten.partition do |item|
@@ -291,19 +291,19 @@ def make_entry entry_tuples, platforms
     entry.join
   end
 
-  def spec_authors entry, spec
+  def spec_authors(entry, spec)
     authors = "Author#{spec.authors.length > 1 ? 's' : ''}: ".dup
     authors << spec.authors.join(', ')
     entry << format_text(authors, 68, 4)
   end
 
-  def spec_homepage entry, spec
+  def spec_homepage(entry, spec)
     return if spec.homepage.nil? or spec.homepage.empty?
 
     entry << "\n" << format_text("Homepage: #{spec.homepage}", 68, 4)
   end
 
-  def spec_license entry, spec
+  def spec_license(entry, spec)
     return if spec.license.nil? or spec.license.empty?
 
     licenses = "License#{spec.licenses.length > 1 ? 's' : ''}: ".dup
@@ -311,10 +311,10 @@ def spec_license entry, spec
     entry << "\n" << format_text(licenses, 68, 4)
   end
 
-  def spec_loaded_from entry, spec, specs
+  def spec_loaded_from(entry, spec, specs)
     return unless spec.loaded_from
 
-    if specs.length == 1 then
+    if specs.length == 1
       default = spec.default_gem? ? ' (default)' : nil
       entry << "\n" << "    Installed at#{default}: #{spec.base_dir}"
     else
@@ -328,14 +328,14 @@ def spec_loaded_from entry, spec, specs
     end
   end
 
-  def spec_platforms entry, platforms
+  def spec_platforms(entry, platforms)
     non_ruby = platforms.any? do |_, pls|
       pls.any? { |pl| pl != Gem::Platform::RUBY }
     end
 
     return unless non_ruby
 
-    if platforms.length == 1 then
+    if platforms.length == 1
       title = platforms.values.length == 1 ? 'Platform' : 'Platforms'
       entry << "    #{title}: #{platforms.values.sort.join ', '}\n"
     else
@@ -351,7 +351,7 @@ def spec_platforms entry, platforms
     end
   end
 
-  def spec_summary entry, spec
+  def spec_summary(entry, spec)
     summary = truncate_text(spec.summary, "the summary for #{spec.full_name}")
     entry << "\n\n" << format_text(summary, 68, 4)
   end
diff --git a/lib/ruby/stdlib/rubygems/commands/rdoc_command.rb b/lib/ruby/stdlib/rubygems/commands/rdoc_command.rb
index 6992040dcae..5f8b72eb7ac 100644
--- a/lib/ruby/stdlib/rubygems/commands/rdoc_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/rdoc_command.rb
@@ -60,7 +60,7 @@ def usage # :nodoc:
   end
 
   def execute
-    specs = if options[:all] then
+    specs = if options[:all]
               Gem::Specification.to_a
             else
               get_all_gem_names.map do |name|
@@ -68,7 +68,7 @@ def execute
               end.flatten.uniq
             end
 
-    if specs.empty? then
+    if specs.empty?
       alert_error 'No matching gems found'
       terminate_interaction 1
     end
@@ -78,7 +78,7 @@ def execute
 
       doc.force = options[:overwrite]
 
-      if options[:overwrite] then
+      if options[:overwrite]
         FileUtils.rm_rf File.join(spec.doc_dir, 'ri')
         FileUtils.rm_rf File.join(spec.doc_dir, 'rdoc')
       end
@@ -94,4 +94,3 @@ def execute
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/search_command.rb b/lib/ruby/stdlib/rubygems/commands/search_command.rb
index 933436d84d8..c9cb1f2d43b 100644
--- a/lib/ruby/stdlib/rubygems/commands/search_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/search_command.rb
@@ -38,4 +38,3 @@ def usage # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/server_command.rb b/lib/ruby/stdlib/rubygems/commands/server_command.rb
index 245156d50dc..e91a8e5176c 100644
--- a/lib/ruby/stdlib/rubygems/commands/server_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/server_command.rb
@@ -9,7 +9,7 @@ def initialize
           :port => 8808, :gemdir => [], :daemon => false
 
     OptionParser.accept :Port do |port|
-      if port =~ /\A\d+\z/ then
+      if port =~ /\A\d+\z/
         port = Integer port
         raise OptionParser::InvalidArgument, "#{port}: not a port number" if
           port > 65535
@@ -84,4 +84,3 @@ def execute
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/setup_command.rb b/lib/ruby/stdlib/rubygems/commands/setup_command.rb
index b6690c9d54c..c9c00b5be40 100644
--- a/lib/ruby/stdlib/rubygems/commands/setup_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/setup_command.rb
@@ -6,8 +6,10 @@
 # RubyGems checkout or tarball.
 
 class Gem::Commands::SetupCommand < Gem::Command
-  HISTORY_HEADER = /^===\s*[\d.]+\s*\/\s*\d{4}-\d{2}-\d{2}\s*$/
-  VERSION_MATCHER = /^===\s*([\d.]+)\s*\/\s*\d{4}-\d{2}-\d{2}\s*$/
+  HISTORY_HEADER = /^===\s*[\d.a-zA-Z]+\s*\/\s*\d{4}-\d{2}-\d{2}\s*$/.freeze
+  VERSION_MATCHER = /^===\s*([\d.a-zA-Z]+)\s*\/\s*\d{4}-\d{2}-\d{2}\s*$/.freeze
+
+  ENV_PATHS = %w[/usr/bin/env /bin/env].freeze
 
   def initialize
     require 'tmpdir'
@@ -60,7 +62,7 @@ def initialize
 
     add_option '--[no-]rdoc',
                'Generate RDoc documentation for RubyGems' do |value, options|
-      if value then
+      if value
         options[:document] << 'rdoc'
       else
         options[:document].delete 'rdoc'
@@ -71,7 +73,7 @@ def initialize
 
     add_option '--[no-]ri',
                'Generate RI documentation for RubyGems' do |value, options|
-      if value then
+      if value
         options[:document] << 'ri'
       else
         options[:document].delete 'ri'
@@ -83,7 +85,13 @@ def initialize
     add_option '--[no-]regenerate-binstubs',
                'Regenerate gem binstubs' do |value, options|
       options[:regenerate_binstubs] = value
-   end
+    end
+
+    add_option('-E', '--[no-]env-shebang',
+               'Rewrite executables with a shebang',
+               'of /usr/bin/env') do |value, options|
+      options[:env_shebang] = value
+    end
 
     @verbose = nil
   end
@@ -91,7 +99,7 @@ def initialize
   def check_ruby_version
     required_version = Gem::Requirement.new '>= 1.8.7'
 
-    unless required_version.satisfied_by? Gem.ruby_version then
+    unless required_version.satisfied_by? Gem.ruby_version
       alert_error "Expected Ruby version #{required_version}, is #{Gem.ruby_version}"
       terminate_interaction 1
     end
@@ -119,12 +127,19 @@ def description # :nodoc:
     EOF
   end
 
+  module MakeDirs
+    def mkdir_p(path, *opts)
+      super
+      (@mkdirs ||= []) << path
+    end
+  end
+
   def execute
     @verbose = Gem.configuration.really_verbose
 
     install_destdir = options[:destdir]
 
-    unless install_destdir.empty? then
+    unless install_destdir.empty?
       ENV['GEM_HOME'] ||= File.join(install_destdir,
                                     Gem.default_dir.gsub(/^[a-zA-Z]:/, ''))
     end
@@ -132,11 +147,12 @@ def execute
     check_ruby_version
 
     require 'fileutils'
-    if Gem.configuration.really_verbose then
+    if Gem.configuration.really_verbose
       extend FileUtils::Verbose
     else
       extend FileUtils
     end
+    extend MakeDirs
 
     lib_dir, bin_dir = make_destination_dirs install_destdir
 
@@ -150,6 +166,11 @@ def execute
 
     install_default_bundler_gem
 
+    if mode = options[:dir_mode]
+      @mkdirs.uniq!
+      File.chmod(mode, @mkdirs)
+    end
+
     say "RubyGems #{Gem::VERSION} installed"
 
     regenerate_binstubs if options[:regenerate_binstubs]
@@ -159,7 +180,7 @@ def execute
     documentation_success = install_rdoc
 
     say
-    if @verbose then
+    if @verbose
       say "-" * 78
       say
     end
@@ -180,14 +201,14 @@ def execute
     say @bin_file_names.map { |name| "\t#{name}\n" }
     say
 
-    unless @bin_file_names.grep(/#{File::SEPARATOR}gem$/) then
+    unless @bin_file_names.grep(/#{File::SEPARATOR}gem$/)
       say "If `gem` was installed by a previous RubyGems installation, you may need"
       say "to remove it by hand."
       say
     end
 
     if documentation_success
-      if options[:document].include? 'rdoc' then
+      if options[:document].include? 'rdoc'
         say "Rdoc documentation was installed. You may now invoke:"
         say "  gem server"
         say "and then peruse beautifully formatted documentation for your gems"
@@ -198,7 +219,7 @@ def execute
         say
       end
 
-      if options[:document].include? 'ri' then
+      if options[:document].include? 'ri'
         say "Ruby Interactive (ri) documentation was installed. ri is kind of like man "
         say "pages for Ruby libraries. You may access it like this:"
         say "  ri Classname"
@@ -216,6 +237,8 @@ def execute
   def install_executables(bin_dir)
     @bin_file_names = []
 
+    prog_mode = options[:prog_mode] || 0755
+
     executables = { 'gem' => 'bin' }
     executables['bundler'] = 'bundler/exe' if Gem::USE_BUNDLER_FOR_GEMDEPS
     executables.each do |tool, path|
@@ -227,7 +250,7 @@ def install_executables(bin_dir)
         bin_files -= %w[update_rubygems bundler bundle_ruby]
 
         bin_files.each do |bin_file|
-          bin_file_formatted = if options[:format_executable] then
+          bin_file_formatted = if options[:format_executable]
                                  Gem.default_exec_format % bin_file
                                else
                                  bin_file
@@ -238,13 +261,13 @@ def install_executables(bin_dir)
 
           begin
             bin = File.readlines bin_file
-            bin[0] = "#!#{Gem.ruby}\n"
+            bin[0] = shebang
 
             File.open bin_tmp_file, 'w' do |fp|
               fp.puts bin.join
             end
 
-            install bin_tmp_file, dest_file, :mode => 0755
+            install bin_tmp_file, dest_file, :mode => prog_mode
             @bin_file_names << dest_file
           ensure
             rm bin_tmp_file
@@ -266,7 +289,7 @@ def install_executables(bin_dir)
   TEXT
             end
 
-            install bin_cmd_file, "#{dest_file}.bat", :mode => 0755
+            install bin_cmd_file, "#{dest_file}.bat", :mode => prog_mode
           ensure
             rm bin_cmd_file
           end
@@ -275,12 +298,24 @@ def install_executables(bin_dir)
     end
   end
 
-  def install_file file, dest_dir
+  def shebang
+    if options[:env_shebang]
+      ruby_name = RbConfig::CONFIG['ruby_install_name']
+      @env_path ||= ENV_PATHS.find {|env_path| File.executable? env_path }
+      "#!#{@env_path} #{ruby_name}\n"
+    else
+      "#!#{Gem.ruby}\n"
+    end
+  end
+
+  def install_file(file, dest_dir)
     dest_file = File.join dest_dir, file
     dest_dir = File.dirname dest_file
-    mkdir_p dest_dir unless File.directory? dest_dir
+    unless File.directory? dest_dir
+      mkdir_p dest_dir, :mode => 0755
+    end
 
-    install file, dest_file, :mode => 0644
+    install file, dest_file, :mode => options[:data_mode] || 0644
   end
 
   def install_lib(lib_dir)
@@ -319,7 +354,7 @@ def install_rdoc
 
     if File.writable? gem_doc_dir and
        (not File.exist? rubygems_doc_dir or
-        File.writable? rubygems_doc_dir) then
+        File.writable? rubygems_doc_dir)
       say "Removing old RubyGems RDoc and ri" if @verbose
       Dir[File.join(Gem.dir, 'doc', 'rubygems-[0-9]*')].each do |dir|
         rm_rf dir
@@ -339,7 +374,7 @@ def fake_spec.full_gem_path
       rdoc.generate
 
       return true
-    elsif @verbose then
+    elsif @verbose
       say "Skipping RDoc generation, #{gem_doc_dir} not writable"
       say "Set the GEM_HOME environment variable if you want RDoc generated"
     end
@@ -352,7 +387,7 @@ def install_default_bundler_gem
 
     specs_dir = Gem::Specification.default_specifications_dir
     specs_dir = File.join(options[:destdir], specs_dir) unless Gem.win_platform?
-    mkdir_p specs_dir
+    mkdir_p specs_dir, :mode => 0755
 
     # Workaround for non-git environment.
     gemspec = File.open('bundler/bundler.gemspec', 'rb'){|f| f.read.gsub(/`git ls-files -z`/, "''") }
@@ -387,7 +422,7 @@ def install_default_bundler_gem
 
     bundler_bin_dir = bundler_spec.bin_dir
     bundler_bin_dir = File.join(options[:destdir], bundler_bin_dir) unless Gem.win_platform?
-    mkdir_p bundler_bin_dir
+    mkdir_p bundler_bin_dir, :mode => 0755
     bundler_spec.executables.each do |e|
       cp File.join("bundler", bundler_spec.bindir, e), File.join(bundler_bin_dir, e)
     end
@@ -411,8 +446,8 @@ def make_destination_dirs(install_destdir)
       lib_dir, bin_dir = generate_default_dirs(install_destdir)
     end
 
-    mkdir_p lib_dir
-    mkdir_p bin_dir
+    mkdir_p lib_dir, :mode => 0755
+    mkdir_p bin_dir, :mode => 0755
 
     return lib_dir, bin_dir
   end
@@ -421,7 +456,7 @@ def generate_default_dirs(install_destdir)
     prefix = options[:prefix]
     site_or_vendor = options[:site_or_vendor]
 
-    if prefix.empty? then
+    if prefix.empty?
       lib_dir = RbConfig::CONFIG[site_or_vendor]
       bin_dir = RbConfig::CONFIG['bindir']
     else
@@ -432,16 +467,16 @@ def generate_default_dirs(install_destdir)
         # just in case Apple and RubyGems don't get this patched up proper.
         (prefix == RbConfig::CONFIG['libdir'] or
          # this one is important
-         prefix == File.join(RbConfig::CONFIG['libdir'], 'ruby')) then
-         lib_dir = RbConfig::CONFIG[site_or_vendor]
-         bin_dir = RbConfig::CONFIG['bindir']
+         prefix == File.join(RbConfig::CONFIG['libdir'], 'ruby'))
+        lib_dir = RbConfig::CONFIG[site_or_vendor]
+        bin_dir = RbConfig::CONFIG['bindir']
       else
         lib_dir = File.join prefix, 'lib'
         bin_dir = File.join prefix, 'bin'
       end
     end
 
-    unless install_destdir.empty? then
+    unless install_destdir.empty?
       lib_dir = File.join install_destdir, lib_dir.gsub(/^[a-zA-Z]:/, '')
       bin_dir = File.join install_destdir, bin_dir.gsub(/^[a-zA-Z]:/, '')
     end
@@ -449,13 +484,13 @@ def generate_default_dirs(install_destdir)
     [lib_dir, bin_dir]
   end
 
-  def pem_files_in dir
+  def pem_files_in(dir)
     Dir.chdir dir do
       Dir[File.join('**', '*pem')]
     end
   end
 
-  def rb_files_in dir
+  def rb_files_in(dir)
     Dir.chdir dir do
       Dir[File.join('**', '*rb')]
     end
@@ -470,7 +505,7 @@ def template_files
   end
 
   # for cleanup old bundler files
-  def template_files_in dir
+  def template_files_in(dir)
     Dir.chdir dir do
       (Dir[File.join('templates', '**', '{*,.*}')]).
         select{|f| !File.directory?(f)}
@@ -509,7 +544,7 @@ def remove_old_bin_files(bin_dir)
     end
   end
 
-  def remove_old_lib_files lib_dir
+  def remove_old_lib_files(lib_dir)
     lib_dirs = { File.join(lib_dir, 'rubygems') => 'lib/rubygems' }
     lib_dirs[File.join(lib_dir, 'bundler')] = 'bundler/lib/bundler' if Gem::USE_BUNDLER_FOR_GEMDEPS
     lib_dirs.each do |old_lib_dir, new_lib_dir|
@@ -540,11 +575,10 @@ def show_release_notes
     release_notes = File.join Dir.pwd, 'History.txt'
 
     release_notes =
-      if File.exist? release_notes then
+      if File.exist? release_notes
         history = File.read release_notes
 
-        history.force_encoding Encoding::UTF_8 if
-          Object.const_defined? :Encoding
+        history.force_encoding Encoding::UTF_8
 
         history = history.sub(/^# coding:.*?(?=^=)/m, '')
 
@@ -582,8 +616,14 @@ def uninstall_old_gemcutter
   def regenerate_binstubs
     require "rubygems/commands/pristine_command"
     say "Regenerating binstubs"
+
+    args = %w[--all --only-executables --silent]
+    if options[:env_shebang]
+      args << "--env-shebang"
+    end
+
     command = Gem::Commands::PristineCommand.new
-    command.invoke(*%w[--all --only-executables --silent])
+    command.invoke(*args)
   end
 
 end
diff --git a/lib/ruby/stdlib/rubygems/commands/signin_command.rb b/lib/ruby/stdlib/rubygems/commands/signin_command.rb
index 6556db5a89d..0d527fc3398 100644
--- a/lib/ruby/stdlib/rubygems/commands/signin_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/signin_command.rb
@@ -10,9 +10,10 @@ def initialize
           'It defaults to https://rubygems.org'
 
     add_option('--host HOST', 'Push to another gemcutter-compatible host') do |value, options|
-       options[:host] = value
+      options[:host] = value
     end
 
+    add_otp_option
   end
 
   def description # :nodoc:
diff --git a/lib/ruby/stdlib/rubygems/commands/signout_command.rb b/lib/ruby/stdlib/rubygems/commands/signout_command.rb
index 2452e8cae1c..2d7329c5909 100644
--- a/lib/ruby/stdlib/rubygems/commands/signout_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/signout_command.rb
@@ -19,9 +19,9 @@ def usage # :nodoc:
   def execute
     credentials_path = Gem.configuration.credentials_path
 
-    if !File.exist?(credentials_path) then
+    if !File.exist?(credentials_path)
       alert_error 'You are not currently signed in.'
-    elsif !File.writable?(credentials_path) then
+    elsif !File.writable?(credentials_path)
       alert_error "File '#{Gem.configuration.credentials_path}' is read-only."\
                   ' Please make sure it is writable.'
     else
diff --git a/lib/ruby/stdlib/rubygems/commands/sources_command.rb b/lib/ruby/stdlib/rubygems/commands/sources_command.rb
index 7e46963a4c3..af145fd7b4b 100644
--- a/lib/ruby/stdlib/rubygems/commands/sources_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/sources_command.rb
@@ -38,13 +38,13 @@ def initialize
     add_proxy_option
   end
 
-  def add_source source_uri # :nodoc:
+  def add_source(source_uri) # :nodoc:
     check_rubygems_https source_uri
 
     source = Gem::Source.new source_uri
 
     begin
-      if Gem.sources.include? source then
+      if Gem.sources.include? source
         say "source #{source_uri} already present in the cache"
       else
         source.load_specs :released
@@ -62,11 +62,11 @@ def add_source source_uri # :nodoc:
     end
   end
 
-  def check_rubygems_https source_uri # :nodoc:
+  def check_rubygems_https(source_uri) # :nodoc:
     uri = URI source_uri
 
     if uri.scheme and uri.scheme.downcase == 'http' and
-       uri.host.downcase == 'rubygems.org' then
+       uri.host.downcase == 'rubygems.org'
       question = <<-QUESTION.chomp
 https://rubygems.org is recommended for security over #{uri}
 
@@ -81,10 +81,10 @@ def clear_all # :nodoc:
     path = Gem.spec_cache_dir
     FileUtils.rm_rf path
 
-    unless File.exist? path then
+    unless File.exist? path
       say "*** Removed specs cache ***"
     else
-      unless File.writable? path then
+      unless File.writable? path
         say "*** Unable to remove source cache (write protected) ***"
       else
         say "*** Unable to remove source cache ***"
@@ -175,8 +175,8 @@ def execute
     list if list?
   end
 
-  def remove_source source_uri # :nodoc:
-    unless Gem.sources.include? source_uri then
+  def remove_source(source_uri) # :nodoc:
+    unless Gem.sources.include? source_uri
       say "source #{source_uri} not present in cache"
     else
       Gem.sources.delete source_uri
@@ -195,12 +195,12 @@ def update # :nodoc:
     say "source cache successfully updated"
   end
 
-  def remove_cache_file desc, path # :nodoc:
+  def remove_cache_file(desc, path) # :nodoc:
     FileUtils.rm_rf path
 
-    if not File.exist?(path) then
+    if not File.exist?(path)
       say "*** Removed #{desc} source cache ***"
-    elsif not File.writable?(path) then
+    elsif not File.writable?(path)
       say "*** Unable to remove #{desc} source cache (write protected) ***"
     else
       say "*** Unable to remove #{desc} source cache ***"
@@ -208,4 +208,3 @@ def remove_cache_file desc, path # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/specification_command.rb b/lib/ruby/stdlib/rubygems/commands/specification_command.rb
index ad8840adc2b..56b9371686b 100644
--- a/lib/ruby/stdlib/rubygems/commands/specification_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/specification_command.rb
@@ -75,7 +75,7 @@ def execute
     specs = []
     gem = options[:args].shift
 
-    unless gem then
+    unless gem
       raise Gem::CommandLineError,
             "Please specify a gem name or file on the command line"
     end
@@ -105,29 +105,29 @@ def execute
     raise Gem::CommandLineError, "--ruby and FIELD are mutually exclusive" if
       field and options[:format] == :ruby
 
-    if local? then
-      if File.exist? gem then
+    if local?
+      if File.exist? gem
         specs << Gem::Package.new(gem).spec rescue nil
       end
 
-      if specs.empty? then
+      if specs.empty?
         specs.push(*dep.matching_specs)
       end
     end
 
-    if remote? then
+    if remote?
       dep.prerelease = options[:prerelease]
       found, _ = Gem::SpecFetcher.fetcher.spec_for_dependency dep
 
       specs.push(*found.map { |spec,| spec })
     end
 
-    if specs.empty? then
+    if specs.empty?
       alert_error "No gem matching '#{dep}' found"
       terminate_interaction 1
     end
 
-    unless options[:all] then
+    unless options[:all]
       specs = [specs.max_by { |s| s.version }]
     end
 
diff --git a/lib/ruby/stdlib/rubygems/commands/uninstall_command.rb b/lib/ruby/stdlib/rubygems/commands/uninstall_command.rb
index f8dedef9309..9de0ea722bc 100644
--- a/lib/ruby/stdlib/rubygems/commands/uninstall_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/uninstall_command.rb
@@ -20,7 +20,7 @@ def initialize
 
     add_option('-a', '--[no-]all',
       'Uninstall all matching versions'
-      ) do |value, options|
+    ) do |value, options|
       options[:all] = value
     end
 
@@ -81,7 +81,7 @@ def initialize
     add_option('--vendor',
                'Uninstall gem from the vendor directory.',
                'Only for use by gem repackagers.') do |value, options|
-      unless Gem.vendor_dir then
+      unless Gem.vendor_dir
         raise OptionParser::InvalidOption.new 'your platform is not supported'
       end
 
@@ -114,10 +114,21 @@ def usage # :nodoc:
     "#{program_name} GEMNAME [GEMNAME ...]"
   end
 
+  def check_version # :nodoc:
+    if options[:version] != Gem::Requirement.default and
+         get_all_gem_names.size > 1
+      alert_error "Can't use --version with multiple gems. You can specify multiple gems with" \
+                  " version requirements using `gem uninstall 'my_gem:1.0.0' 'my_other_gem:~>2.0.0'`"
+      terminate_interaction 1
+    end
+  end
+
   def execute
-    if options[:all] and not options[:args].empty? then
+    check_version
+
+    if options[:all] and not options[:args].empty?
       uninstall_specific
-    elsif options[:all] then
+    elsif options[:all]
       uninstall_all
     else
       uninstall_specific
@@ -129,11 +140,7 @@ def uninstall_all
 
     specs.each do |spec|
       options[:version] = spec.version
-
-      begin
-        Gem::Uninstaller.new(spec.name, options).uninstall
-      rescue Gem::InstallError
-      end
+      uninstall_gem spec.name
     end
 
     alert "Uninstalled all gems in #{options[:install_dir]}"
@@ -142,8 +149,9 @@ def uninstall_all
   def uninstall_specific
     deplist = Gem::DependencyList.new
 
-    get_all_gem_names.uniq.each do |name|
-      gem_specs = Gem::Specification.find_all_by_name(name)
+    get_all_gem_names_and_versions.each do |name, version|
+      requirement = Array(version || options[:version])
+      gem_specs = Gem::Specification.find_all_by_name(name, *requirement)
       say("Gem '#{name}' is not installed") if gem_specs.empty?
       gem_specs.each do |spec|
         deplist.add spec
@@ -152,15 +160,29 @@ def uninstall_specific
 
     deps = deplist.strongly_connected_components.flatten.reverse
 
-    deps.map(&:name).uniq.each do |gem_name|
-      begin
-        Gem::Uninstaller.new(gem_name, options).uninstall
-      rescue Gem::GemNotInHomeException => e
-        spec = e.spec
-        alert("In order to remove #{spec.name}, please execute:\n" +
-              "\tgem uninstall #{spec.name} --install-dir=#{spec.installation_path}")
-      end
+    deps.each do |dep|
+      options[:version] = dep.version
+      uninstall_gem(dep.name)
     end
   end
 
+  def uninstall_gem(gem_name)
+    uninstall(gem_name)
+  rescue Gem::InstallError
+    nil
+  rescue Gem::GemNotInHomeException => e
+    spec = e.spec
+    alert("In order to remove #{spec.name}, please execute:\n" +
+          "\tgem uninstall #{spec.name} --install-dir=#{spec.installation_path}")
+  rescue Gem::UninstallError => e
+    spec = e.spec
+    alert_error("Error: unable to successfully uninstall '#{spec.name}' which is " +
+          "located at '#{spec.full_gem_path}'. This is most likely because" +
+          "the current user does not have the appropriate permissions")
+    terminate_interaction 1
+  end
+
+  def uninstall(gem_name)
+    Gem::Uninstaller.new(gem_name, options).uninstall
+  end
 end
diff --git a/lib/ruby/stdlib/rubygems/commands/unpack_command.rb b/lib/ruby/stdlib/rubygems/commands/unpack_command.rb
index bdcfd524f14..4a1bd8a0d6d 100644
--- a/lib/ruby/stdlib/rubygems/commands/unpack_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/unpack_command.rb
@@ -79,22 +79,32 @@ def execute
       dependency = Gem::Dependency.new name, options[:version]
       path = get_path dependency
 
-      unless path then
+      unless path
         alert_error "Gem '#{name}' not installed nor fetchable."
         next
       end
 
-      if @options[:spec] then
+      if @options[:spec]
         spec, metadata = get_metadata path, security_policy
 
-        if metadata.nil? then
+        if metadata.nil?
           alert_error "--spec is unsupported on '#{name}' (old format gem)"
           next
         end
 
         spec_file = File.basename spec.spec_file
 
-        File.open spec_file, 'w' do |io|
+        FileUtils.mkdir_p @options[:target] if @options[:target]
+
+        destination = begin
+          if @options[:target]
+            File.join @options[:target], spec_file
+          else
+            spec_file
+          end
+        end
+
+        File.open destination, 'w' do |io|
           io.write metadata
         end
       else
@@ -142,7 +152,7 @@ def find_in_cache(filename)
   # TODO: It just uses Gem.dir for now.  What's an easy way to get the list of
   # source directories?
 
-  def get_path dependency
+  def get_path(dependency)
     return dependency.name if dependency.name =~ /\.gem$/i
 
     specs = dependency.matching_specs
@@ -170,7 +180,7 @@ def get_path dependency
   #--
   # TODO move to Gem::Package as #raw_spec or something
 
-  def get_metadata path, security_policy = nil
+  def get_metadata(path, security_policy = nil)
     format = Gem::Package.new path, security_policy
     spec = format.spec
 
@@ -192,4 +202,3 @@ def get_metadata path, security_policy = nil
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/update_command.rb b/lib/ruby/stdlib/rubygems/commands/update_command.rb
index 93ee60e1abd..9ab3b80e96c 100644
--- a/lib/ruby/stdlib/rubygems/commands/update_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/update_command.rb
@@ -68,8 +68,8 @@ def usage # :nodoc:
     "#{program_name} GEMNAME [GEMNAME ...]"
   end
 
-  def check_latest_rubygems version # :nodoc:
-    if Gem.rubygems_version == version then
+  def check_latest_rubygems(version) # :nodoc:
+    if Gem.rubygems_version == version
       say "Latest version already installed. Done."
       terminate_interaction
     end
@@ -78,31 +78,40 @@ def check_latest_rubygems version # :nodoc:
   end
 
   def check_update_arguments # :nodoc:
-    unless options[:args].empty? then
+    unless options[:args].empty?
       alert_error "Gem names are not allowed with the --system option"
       terminate_interaction 1
     end
   end
 
   def execute
-
-    if options[:system] then
+    if options[:system]
       update_rubygems
       return
     end
 
-    say "Updating installed gems"
-
     hig = highest_installed_gems
 
     gems_to_update = which_to_update hig, options[:args].uniq
 
+    if options[:explain]
+      say "Gems to update:"
+
+      gems_to_update.each do |(name, version)|
+        say "  #{name}-#{version}"
+      end
+
+      return
+    end
+
+    say "Updating installed gems"
+
     updated = update_gems gems_to_update
 
     updated_names = updated.map { |spec| spec.name }
     not_updated_names = options[:args].uniq - updated_names
 
-    if updated.empty? then
+    if updated.empty?
       say "Nothing to update"
     else
       say "Gems updated: #{updated_names.join(' ')}"
@@ -110,7 +119,7 @@ def execute
     end
   end
 
-  def fetch_remote_gems spec # :nodoc:
+  def fetch_remote_gems(spec) # :nodoc:
     dependency = Gem::Dependency.new spec.name, "> #{spec.version}"
     dependency.prerelease = options[:prerelease]
 
@@ -129,7 +138,7 @@ def highest_installed_gems # :nodoc:
     hig = {} # highest installed gems
 
     Gem::Specification.each do |spec|
-      if hig[spec.name].nil? or hig[spec.name].version < spec.version then
+      if hig[spec.name].nil? or hig[spec.name].version < spec.version
         hig[spec.name] = spec
       end
     end
@@ -137,7 +146,7 @@ def highest_installed_gems # :nodoc:
     hig
   end
 
-  def highest_remote_version spec # :nodoc:
+  def highest_remote_version(spec) # :nodoc:
     spec_tuples = fetch_remote_gems spec
 
     matching_gems = spec_tuples.select do |g,_|
@@ -151,7 +160,7 @@ def highest_remote_version spec # :nodoc:
     highest_remote_gem.first.version
   end
 
-  def install_rubygems version # :nodoc:
+  def install_rubygems(version) # :nodoc:
     args = update_rubygems_arguments
 
     update_dir = File.join Gem.dir, 'gems', "rubygems-update-#{version}"
@@ -159,12 +168,8 @@ def install_rubygems version # :nodoc:
     Dir.chdir update_dir do
       say "Installing RubyGems #{version}"
 
-      # Make sure old rubygems isn't loaded
-      old = ENV["RUBYOPT"]
-      ENV.delete("RUBYOPT") if old
-      installed = system Gem.ruby, 'setup.rb', *args
+      installed = system Gem.ruby, '--disable-gems', 'setup.rb', *args
       say "RubyGems system software updated" if installed
-      ENV["RUBYOPT"] = old if old
     end
   end
 
@@ -172,7 +177,7 @@ def rubygems_target_version
     version = options[:system]
     update_latest = version == true
 
-    if update_latest then
+    if update_latest
       version     = Gem::Version.new     Gem::VERSION
       requirement = Gem::Requirement.new ">= #{Gem::VERSION}"
     else
@@ -191,7 +196,7 @@ def rubygems_target_version
     gems_to_update = which_to_update hig, options[:args], :system
     _, up_ver   = gems_to_update.first
 
-    target = if update_latest then
+    target = if update_latest
                up_ver
              else
                version
@@ -200,7 +205,7 @@ def rubygems_target_version
     return target, requirement
   end
 
-  def update_gem name, version = Gem::Requirement.default
+  def update_gem(name, version = Gem::Requirement.default)
     return if @updated.any? { |spec| spec.name == name }
 
     update_options = options.dup
@@ -220,7 +225,7 @@ def update_gem name, version = Gem::Requirement.default
     end
   end
 
-  def update_gems gems_to_update
+  def update_gems(gems_to_update)
     gems_to_update.uniq.sort.each do |(name, version)|
       update_gem name, version
     end
@@ -259,7 +264,7 @@ def update_rubygems_arguments # :nodoc:
     args
   end
 
-  def which_to_update highest_installed_gems, gem_names, system = false
+  def which_to_update(highest_installed_gems, gem_names, system = false)
     result = []
 
     highest_installed_gems.each do |l_name, l_spec|
@@ -268,7 +273,7 @@ def which_to_update highest_installed_gems, gem_names, system = false
 
       highest_remote_ver = highest_remote_version l_spec
 
-      if system or (l_spec.version < highest_remote_ver) then
+      if system or (l_spec.version < highest_remote_ver)
         result << [l_spec.name, [l_spec.version, highest_remote_ver].max]
       end
     end
diff --git a/lib/ruby/stdlib/rubygems/commands/which_command.rb b/lib/ruby/stdlib/rubygems/commands/which_command.rb
index 704d79fc60c..5c51ed72dd9 100644
--- a/lib/ruby/stdlib/rubygems/commands/which_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/which_command.rb
@@ -44,8 +44,8 @@ def execute
 
       spec = Gem::Specification.find_by_path arg
 
-      if spec then
-        if options[:search_gems_first] then
+      if spec
+        if options[:search_gems_first]
           dirs = spec.full_require_paths + $LOAD_PATH
         else
           dirs = $LOAD_PATH + spec.full_require_paths
@@ -55,7 +55,7 @@ def execute
       # TODO: this is totally redundant and stupid
       paths = find_paths arg, dirs
 
-      if paths.empty? then
+      if paths.empty?
         alert_error "Can't find Ruby library file or shared library #{arg}"
 
         found &&= false
@@ -73,7 +73,7 @@ def find_paths(package_name, dirs)
     dirs.each do |dir|
       Gem.suffixes.each do |ext|
         full_path = File.join dir, "#{package_name}#{ext}"
-        if File.exist? full_path and not File.directory? full_path then
+        if File.exist? full_path and not File.directory? full_path
           result << full_path
           return result unless options[:show_all]
         end
@@ -88,4 +88,3 @@ def usage # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/commands/yank_command.rb b/lib/ruby/stdlib/rubygems/commands/yank_command.rb
index ebf24e5c771..d13b674b488 100644
--- a/lib/ruby/stdlib/rubygems/commands/yank_command.rb
+++ b/lib/ruby/stdlib/rubygems/commands/yank_command.rb
@@ -51,7 +51,7 @@ def execute
     version   = get_version_from_requirements(options[:version])
     platform  = get_platform_from_requirements(options)
 
-    if version then
+    if version
       yank_gem(version, platform)
     else
       say "A version argument is required: #{usage}"
@@ -93,4 +93,3 @@ def get_platform_from_requirements(requirements)
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/compatibility.rb b/lib/ruby/stdlib/rubygems/compatibility.rb
index 2056b5b53a2..b4332eb9f16 100644
--- a/lib/ruby/stdlib/rubygems/compatibility.rb
+++ b/lib/ruby/stdlib/rubygems/compatibility.rb
@@ -9,26 +9,6 @@
 # Ruby 1.9.x has introduced some things that are awkward, and we need to
 # support them, so we define some constants to use later.
 #++
-module Gem
-  # Only MRI 1.9.2 has the custom prelude.
-  GEM_PRELUDE_SUCKAGE = RUBY_VERSION =~ /^1\.9\.2/ and RUBY_ENGINE == "ruby"
-end
-
-# Gem::QuickLoader exists in the gem prelude code in ruby 1.9.2 itself.
-# We gotta get rid of it if it's there, before we do anything else.
-if Gem::GEM_PRELUDE_SUCKAGE and defined?(Gem::QuickLoader) then
-  Gem::QuickLoader.remove
-
-  $LOADED_FEATURES.delete Gem::QuickLoader.path_to_full_rubygems_library
-
-  if path = $LOADED_FEATURES.find {|n| n.end_with? '/rubygems.rb'} then
-    raise LoadError, "another rubygems is already loaded from #{path}"
-  end
-
-  class << Gem
-    remove_method :try_activate if Gem.respond_to?(:try_activate, true)
-  end
-end
 
 module Gem
   RubyGemsVersion = VERSION
@@ -42,7 +22,7 @@ module Gem
     EXEEXT RUBY_SO_NAME arch bindir datadir libdir ruby_install_name
     ruby_version rubylibprefix sitedir sitelibdir vendordir vendorlibdir
     rubylibdir
-  ]
+  ].freeze
 
   unless defined?(ConfigMap)
     ##
diff --git a/lib/ruby/stdlib/rubygems/config_file.rb b/lib/ruby/stdlib/rubygems/config_file.rb
index c0d19dbfc27..e02655fc515 100644
--- a/lib/ruby/stdlib/rubygems/config_file.rb
+++ b/lib/ruby/stdlib/rubygems/config_file.rb
@@ -27,6 +27,7 @@
 # +:backtrace+:: See #backtrace
 # +:sources+:: Sets Gem::sources
 # +:verbose+:: See #verbose
+# +:concurrent_downloads+:: See #concurrent_downloads
 #
 # gemrc files may exist in various locations and are read and merged in
 # the following order:
@@ -43,12 +44,14 @@ class Gem::ConfigFile
   DEFAULT_BULK_THRESHOLD = 1000
   DEFAULT_VERBOSITY = true
   DEFAULT_UPDATE_SOURCES = true
+  DEFAULT_CONCURRENT_DOWNLOADS = 8
+  DEFAULT_CERT_EXPIRATION_LENGTH_DAYS = 365
 
   ##
   # For Ruby packagers to set configuration defaults.  Set in
   # rubygems/defaults/operating_system.rb
 
-  OPERATING_SYSTEM_DEFAULTS = {}
+  OPERATING_SYSTEM_DEFAULTS = Gem.operating_system_defaults
 
   ##
   # For Ruby implementers to set configuration defaults.  Set in
@@ -63,26 +66,7 @@ class Gem::ConfigFile
       require "etc"
       Etc.sysconfdir
     rescue LoadError, NoMethodError
-      begin
-        # TODO: remove after we drop 1.8.7 and 1.9.1
-        require 'Win32API'
-
-        CSIDL_COMMON_APPDATA = 0x0023
-        path = 0.chr * 260
-        if RUBY_VERSION > '1.9' then
-          SHGetFolderPath = Win32API.new 'shell32', 'SHGetFolderPath', 'PLPLP',
-          'L', :stdcall
-          SHGetFolderPath.call nil, CSIDL_COMMON_APPDATA, nil, 1, path
-        else
-          SHGetFolderPath = Win32API.new 'shell32', 'SHGetFolderPath', 'LLLLP',
-          'L'
-          SHGetFolderPath.call 0, CSIDL_COMMON_APPDATA, 0, 1, path
-        end
-
-        path.strip
-      rescue LoadError
-        RbConfig::CONFIG["sysconfdir"] || "/etc"
-      end
+      RbConfig::CONFIG["sysconfdir"] || "/etc"
     end
 
   # :startdoc:
@@ -123,6 +107,11 @@ class Gem::ConfigFile
 
   attr_accessor :verbose
 
+  ##
+  # Number of gem downloads that should be performed concurrently.
+
+  attr_accessor :concurrent_downloads
+
   ##
   # True if we want to update the SourceInfoCache every time, false otherwise
 
@@ -147,6 +136,11 @@ class Gem::ConfigFile
   # sources to look for gems
   attr_accessor :sources
 
+  ##
+  # Expiration length to sign a certificate
+
+  attr_accessor :cert_expiration_length_days
+
   ##
   # Path name of directory or file of openssl client certificate, used for remote https connection with client authentication
 
@@ -180,12 +174,12 @@ def initialize(args)
     arg_list = []
 
     args.each do |arg|
-      if need_config_file_name then
+      if need_config_file_name
         @config_file_name = arg
         need_config_file_name = false
-      elsif arg =~ /^--config-file=(.*)/ then
+      elsif arg =~ /^--config-file=(.*)/
         @config_file_name = $1
-      elsif arg =~ /^--config-file$/ then
+      elsif arg =~ /^--config-file$/
         need_config_file_name = true
       else
         arg_list << arg
@@ -196,6 +190,8 @@ def initialize(args)
     @bulk_threshold = DEFAULT_BULK_THRESHOLD
     @verbose = DEFAULT_VERBOSITY
     @update_sources = DEFAULT_UPDATE_SOURCES
+    @concurrent_downloads = DEFAULT_CONCURRENT_DOWNLOADS
+    @cert_expiration_length_days = DEFAULT_CERT_EXPIRATION_LENGTH_DAYS
 
     operating_system_config = Marshal.load Marshal.dump(OPERATING_SYSTEM_DEFAULTS)
     platform_config = Marshal.load Marshal.dump(PLATFORM_DEFAULTS)
@@ -213,14 +209,15 @@ def initialize(args)
     end
 
     # HACK these override command-line args, which is bad
-    @backtrace                  = @hash[:backtrace]                  if @hash.key? :backtrace
-    @bulk_threshold             = @hash[:bulk_threshold]             if @hash.key? :bulk_threshold
-    @home                       = @hash[:gemhome]                    if @hash.key? :gemhome
-    @path                       = @hash[:gempath]                    if @hash.key? :gempath
-    @update_sources             = @hash[:update_sources]             if @hash.key? :update_sources
-    @verbose                    = @hash[:verbose]                    if @hash.key? :verbose
-    @disable_default_gem_server = @hash[:disable_default_gem_server] if @hash.key? :disable_default_gem_server
-    @sources                    = @hash[:sources]                    if @hash.key? :sources
+    @backtrace                   = @hash[:backtrace]                   if @hash.key? :backtrace
+    @bulk_threshold              = @hash[:bulk_threshold]              if @hash.key? :bulk_threshold
+    @home                        = @hash[:gemhome]                     if @hash.key? :gemhome
+    @path                        = @hash[:gempath]                     if @hash.key? :gempath
+    @update_sources              = @hash[:update_sources]              if @hash.key? :update_sources
+    @verbose                     = @hash[:verbose]                     if @hash.key? :verbose
+    @disable_default_gem_server  = @hash[:disable_default_gem_server]  if @hash.key? :disable_default_gem_server
+    @sources                     = @hash[:sources]                     if @hash.key? :sources
+    @cert_expiration_length_days = @hash[:cert_expiration_length_days] if @hash.key? :cert_expiration_length_days
 
     @ssl_verify_mode  = @hash[:ssl_verify_mode]  if @hash.key? :ssl_verify_mode
     @ssl_ca_cert      = @hash[:ssl_ca_cert]      if @hash.key? :ssl_ca_cert
@@ -284,13 +281,13 @@ def credentials_path
   def load_api_keys
     check_credentials_permissions
 
-    @api_keys = if File.exist? credentials_path then
+    @api_keys = if File.exist? credentials_path
                   load_file(credentials_path)
                 else
                   @hash
                 end
 
-    if @api_keys.key? :rubygems_api_key then
+    if @api_keys.key? :rubygems_api_key
       @rubygems_api_key    = @api_keys[:rubygems_api_key]
       @api_keys[:rubygems] = @api_keys.delete :rubygems_api_key unless
         @api_keys.key? :rubygems
@@ -309,7 +306,7 @@ def rubygems_api_key
   ##
   # Sets the RubyGems.org API key to +api_key+
 
-  def rubygems_api_key= api_key
+  def rubygems_api_key=(api_key)
     set_api_key :rubygems_api_key, api_key
 
     @rubygems_api_key = api_key
@@ -318,7 +315,7 @@ def rubygems_api_key= api_key
   ##
   # Set a specific host's API key to +api_key+
 
-  def set_api_key host, api_key
+  def set_api_key(host, api_key)
     check_credentials_permissions
 
     config = load_file(credentials_path).merge(host => api_key)
@@ -434,6 +431,9 @@ def to_yaml # :nodoc:
     yaml_hash[:update_sources] = @hash.fetch(:update_sources, DEFAULT_UPDATE_SOURCES)
     yaml_hash[:verbose] = @hash.fetch(:verbose, DEFAULT_VERBOSITY)
 
+    yaml_hash[:concurrent_downloads] =
+      @hash.fetch(:concurrent_downloads, DEFAULT_CONCURRENT_DOWNLOADS)
+
     yaml_hash[:ssl_verify_mode] =
       @hash[:ssl_verify_mode] if @hash.key? :ssl_verify_mode
 
diff --git a/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb b/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb
old mode 100644
new mode 100755
index e93cd7c7282..3b780116197
--- a/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb
+++ b/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb
@@ -31,7 +31,7 @@ module Kernel
   # The normal <tt>require</tt> functionality of returning false if
   # that file has already been loaded is preserved.
 
-  def require path
+  def require(path)
     RUBYGEMS_ACTIVATION_MONITOR.enter
 
     path = path.to_path if path.respond_to? :to_path
@@ -49,7 +49,7 @@ def require path
     # If there are no unresolved deps, then we can use just try
     # normal require handle loading a gem from the rescue below.
 
-    if Gem::Specification.unresolved_deps.empty? then
+    if Gem::Specification.unresolved_deps.empty?
       RUBYGEMS_ACTIVATION_MONITOR.exit
       return gem_original_require(path)
     end
@@ -79,7 +79,7 @@ def require path
     # requested, then find_in_unresolved_tree will find d.rb in d because
     # it's a dependency of c.
     #
-    if found_specs.empty? then
+    if found_specs.empty?
       found_specs = Gem::Specification.find_in_unresolved_tree path
 
       found_specs.each do |found_spec|
@@ -94,7 +94,7 @@ def require path
       # versions of the same gem
       names = found_specs.map(&:name).uniq
 
-      if names.size > 1 then
+      if names.size > 1
         RUBYGEMS_ACTIVATION_MONITOR.exit
         raise Gem::LoadError, "#{path} found in multiple gems: #{names.join ', '}"
       end
@@ -103,7 +103,7 @@ def require path
       # at the highest version.
       valid = found_specs.find { |s| !s.has_conflicts? }
 
-      unless valid then
+      unless valid
         le = Gem::LoadError.new "unable to find a version of '#{names.first}' to activate"
         le.name = names.first
         RUBYGEMS_ACTIVATION_MONITOR.exit
@@ -120,7 +120,7 @@ def require path
 
     begin
       if load_error.message.start_with?("Could not find") or
-          (load_error.message.end_with?(path) and Gem.try_activate(path)) then
+          (load_error.message.end_with?(path) and Gem.try_activate(path))
         require_again = true
       end
     ensure
diff --git a/lib/ruby/stdlib/rubygems/core_ext/kernel_warn.rb b/lib/ruby/stdlib/rubygems/core_ext/kernel_warn.rb
new file mode 100755
index 00000000000..3e531441edc
--- /dev/null
+++ b/lib/ruby/stdlib/rubygems/core_ext/kernel_warn.rb
@@ -0,0 +1,45 @@
+# frozen_string_literal: true
+
+# `uplevel` keyword argument of Kernel#warn is available since ruby 2.5.
+if RUBY_VERSION >= "2.5"
+
+  module Kernel
+    path = "#{__dir__}/" # Frames to be skipped start with this path.
+
+    # Suppress "method redefined" warning
+    original_warn = instance_method(:warn)
+    Module.new {define_method(:warn, original_warn)}
+
+    original_warn = method(:warn)
+
+    module_function define_method(:warn) {|*messages, uplevel: nil|
+      unless uplevel
+        return original_warn.call(*messages)
+      end
+
+      # Ensure `uplevel` fits a `long`
+      uplevel, = [uplevel].pack("l!").unpack("l!")
+
+      if uplevel >= 0
+        start = 0
+        while uplevel >= 0
+          loc, = caller_locations(start, 1)
+          unless loc
+            # No more backtrace
+            start += uplevel
+            break
+          end
+
+          start += 1
+
+          unless loc.path.start_with?(path)
+            # Non-rubygems frames
+            uplevel -= 1
+          end
+        end
+        uplevel = start
+      end
+      original_warn.call(*messages, uplevel: uplevel)
+    }
+  end
+end
diff --git a/lib/ruby/stdlib/rubygems/defaults.rb b/lib/ruby/stdlib/rubygems/defaults.rb
index 43d57fc8082..50f46b32a27 100644
--- a/lib/ruby/stdlib/rubygems/defaults.rb
+++ b/lib/ruby/stdlib/rubygems/defaults.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: true
 module Gem
-  DEFAULT_HOST = "https://rubygems.org"
+  DEFAULT_HOST = "https://rubygems.org".freeze
 
   @post_install_hooks   ||= []
   @done_installing_hooks  ||= []
@@ -28,17 +28,17 @@ def self.default_spec_cache_dir
   # specified in the environment
 
   def self.default_dir
-    path = if defined? RUBY_FRAMEWORK_VERSION then
+    path = if defined? RUBY_FRAMEWORK_VERSION
              [
                File.dirname(RbConfig::CONFIG['sitedir']),
                'Gems',
                RbConfig::CONFIG['ruby_version']
              ]
-           elsif RbConfig::CONFIG['rubylibprefix'] then
+           elsif RbConfig::CONFIG['rubylibprefix']
              [
-              RbConfig::CONFIG['rubylibprefix'],
-              'gems',
-              RbConfig::CONFIG['ruby_version']
+               RbConfig::CONFIG['rubylibprefix'],
+               'gems',
+               RbConfig::CONFIG['ruby_version']
              ]
            else
              [
@@ -59,7 +59,7 @@ def self.default_dir
   # By default, the binary extensions are located side by side with their
   # Ruby counterparts, therefore nil is returned
 
-  def self.default_ext_dir_for base_dir
+  def self.default_ext_dir_for(base_dir)
     nil
   end
 
@@ -103,7 +103,7 @@ def self.default_path
   def self.default_exec_format
     exec_format = RbConfig::CONFIG['ruby_install_name'].sub('ruby', '%s') rescue '%s'
 
-    unless exec_format =~ /%s/ then
+    unless exec_format =~ /%s/
       raise Gem::Exception,
         "[BUG] invalid exec_format #{exec_format.inspect}, no %s"
     end
@@ -115,7 +115,7 @@ def self.default_exec_format
   # The default directory for binaries
 
   def self.default_bindir
-    if defined? RUBY_FRAMEWORK_VERSION then # mac framework support
+    if defined? RUBY_FRAMEWORK_VERSION  # mac framework support
       '/usr/bin'
     else # generic install
       RbConfig::CONFIG['bindir']
@@ -126,7 +126,7 @@ def self.default_bindir
   # A wrapper around RUBY_ENGINE const that may not be defined
 
   def self.ruby_engine
-    if defined? RUBY_ENGINE then
+    if defined? RUBY_ENGINE
       RUBY_ENGINE
     else
       'ruby'
@@ -165,7 +165,7 @@ def self.install_extension_in_lib # :nodoc:
   # Directory where vendor gems are installed.
 
   def self.vendor_dir # :nodoc:
-    if vendor_dir = ENV['GEM_VENDOR'] then
+    if vendor_dir = ENV['GEM_VENDOR']
       return vendor_dir.dup
     end
 
@@ -176,7 +176,26 @@ def self.vendor_dir # :nodoc:
   end
 
   ##
-  # Default options for gem commands.
+  # Default options for gem commands for Ruby packagers.
+  #
+  # The options here should be structured as an array of string "gem"
+  # command names as keys and a string of the default options as values.
+  #
+  # Example:
+  #
+  # def self.operating_system_defaults
+  #   {
+  #       'install' => '--no-rdoc --no-ri --env-shebang',
+  #       'update' => '--no-rdoc --no-ri --env-shebang'
+  #   }
+  # end
+
+  def self.operating_system_defaults
+    {}
+  end
+
+  ##
+  # Default options for gem commands for Ruby implementers.
   #
   # The options here should be structured as an array of string "gem"
   # command names as keys and a string of the default options as values.
diff --git a/lib/ruby/stdlib/rubygems/defaults/jruby.rb b/lib/ruby/stdlib/rubygems/defaults/jruby.rb
index f02198aef34..f43c7a01635 100644
--- a/lib/ruby/stdlib/rubygems/defaults/jruby.rb
+++ b/lib/ruby/stdlib/rubygems/defaults/jruby.rb
@@ -31,15 +31,15 @@ def self.platform_defaults
   # to preserve the old location: lib/ruby/gems.
   def self.default_dir
     dir = RbConfig::CONFIG["default_gem_home"]
-    dir ||= File.join(RbConfig::CONFIG['libdir'], 'ruby', 'gems', 'shared')
+    dir ||= File.join(ConfigMap[:libdir], 'ruby', 'gems', 'shared')
     dir
   end
 
   # Default locations for RubyGems' .rb and bin files
   def self.default_rubygems_dirs
     [
-        File.join(RbConfig::CONFIG['libdir'], 'ruby', 'stdlib'),
-        RbConfig::CONFIG['bindir']
+        File.join(ConfigMap[:libdir], 'ruby', 'stdlib'),
+        ConfigMap[:bindir]
     ]
   end
 
diff --git a/lib/ruby/stdlib/rubygems/dependency.rb b/lib/ruby/stdlib/rubygems/dependency.rb
index 34656667903..33ba1968d10 100644
--- a/lib/ruby/stdlib/rubygems/dependency.rb
+++ b/lib/ruby/stdlib/rubygems/dependency.rb
@@ -19,7 +19,7 @@ class Gem::Dependency
   TYPES = [
     :development,
     :runtime,
-  ]
+  ].freeze
 
   ##
   # Dependency name or regular expression.
@@ -36,7 +36,7 @@ class Gem::Dependency
   # argument can optionally be the dependency type, which defaults to
   # <tt>:runtime</tt>.
 
-  def initialize name, *requirements
+  def initialize(name, *requirements)
     case name
     when String then # ok
     when Regexp then
@@ -76,7 +76,7 @@ def hash # :nodoc:
   end
 
   def inspect # :nodoc:
-    if prerelease? then
+    if prerelease?
       "<%s type=%p name=%p requirements=%p prerelease=ok>" %
         [self.class, self.type, self.name, requirement.to_s]
     else
@@ -100,7 +100,7 @@ def latest_version?
     @requirement.none?
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 1, 'Gem::Dependency.new(', ')' do
       q.pp name
       q.text ','
@@ -152,7 +152,7 @@ def requirements_list
   end
 
   def to_s # :nodoc:
-    if type != :runtime then
+    if type != :runtime
       "#{name} (#{requirement}, #{type})"
     else
       "#{name} (#{requirement})"
@@ -170,7 +170,7 @@ def runtime?
     @type == :runtime || !@type
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     Gem::Dependency === other &&
       self.name        == other.name &&
       self.type        == other.type &&
@@ -180,7 +180,7 @@ def == other # :nodoc:
   ##
   # Dependencies are ordered by name.
 
-  def <=> other
+  def <=>(other)
     self.name <=> other.name
   end
 
@@ -190,7 +190,7 @@ def <=> other
   # other has only an equal version requirement that satisfies this
   # dependency.
 
-  def =~ other
+  def =~(other)
     unless Gem::Dependency === other
       return unless other.respond_to?(:name) && other.respond_to?(:version)
       other = Gem::Dependency.new other.name, other.version
@@ -222,7 +222,7 @@ def =~ other
   # NOTE:  Unlike #matches_spec? this method does not return true when the
   # version is a prerelease version unless this is a prerelease dependency.
 
-  def match? obj, version=nil, allow_prerelease=false
+  def match?(obj, version=nil, allow_prerelease=false)
     if !version
       name = obj.name
       version = obj.version
@@ -249,7 +249,7 @@ def match? obj, version=nil, allow_prerelease=false
   # returns true when +spec+ is a prerelease version even if this dependency
   # is not a prerelease dependency.
 
-  def matches_spec? spec
+  def matches_spec?(spec)
     return false unless name === spec.name
     return true  if requirement.none?
 
@@ -259,8 +259,8 @@ def matches_spec? spec
   ##
   # Merges the requirements of +other+ into this dependency
 
-  def merge other
-    unless name == other.name then
+  def merge(other)
+    unless name == other.name
       raise ArgumentError,
             "#{self} and #{other} have different names"
     end
@@ -275,7 +275,7 @@ def merge other
     self.class.new name, self_req.as_list.concat(other_req.as_list)
   end
 
-  def matching_specs platform_only = false
+  def matching_specs(platform_only = false)
     env_req = Gem.env_requirement(name)
     matches = Gem::Specification.stubs_for(name).find_all { |spec|
       requirement.satisfied_by?(spec.version) && env_req.satisfied_by?(spec.version)
@@ -304,7 +304,7 @@ def to_specs
 
     # TODO: check Gem.activated_spec[self.name] in case matches falls outside
 
-    if matches.empty? then
+    if matches.empty?
       specs = Gem::Specification.stubs_for name
 
       if specs.empty?
diff --git a/lib/ruby/stdlib/rubygems/dependency_installer.rb b/lib/ruby/stdlib/rubygems/dependency_installer.rb
index 879e0853594..346208603ce 100644
--- a/lib/ruby/stdlib/rubygems/dependency_installer.rb
+++ b/lib/ruby/stdlib/rubygems/dependency_installer.rb
@@ -15,6 +15,7 @@
 class Gem::DependencyInstaller
 
   include Gem::UserInteraction
+  extend Gem::Deprecate
 
   DEFAULT_OPTIONS = { # :nodoc:
     :env_shebang         => false,
@@ -41,15 +42,6 @@ class Gem::DependencyInstaller
 
   attr_reader :errors
 
-  ##
-  #--
-  # TODO remove, no longer used
-
-  attr_reader :gems_to_install # :nodoc:
-
-  extend Gem::Deprecate
-  deprecate :gems_to_install, :none, 2016, 10
-
   ##
   # List of gems installed by #install in alphabetic order
 
@@ -74,7 +66,7 @@ class Gem::DependencyInstaller
   # :wrappers:: See Gem::Installer::new
   # :build_args:: See Gem::Installer::new
 
-  def initialize options = {}
+  def initialize(options = {})
     @only_install_dir = !!options[:install_dir]
     @install_dir = options[:install_dir] || Gem.dir
     @build_root = options[:build_root]
@@ -97,6 +89,9 @@ def initialize options = {}
     @build_args          = options[:build_args]
     @build_docs_in_background = options[:build_docs_in_background]
     @install_as_default  = options[:install_as_default]
+    @dir_mode            = options[:dir_mode]
+    @data_mode           = options[:data_mode]
+    @prog_mode           = options[:prog_mode]
 
     # Indicates that we should not try to update any deps unless
     # we absolutely must.
@@ -115,7 +110,7 @@ def initialize options = {}
   #--
   # TODO remove at RubyGems 4, no longer used
 
-  def add_found_dependencies to_do, dependency_list # :nodoc:
+  def add_found_dependencies(to_do, dependency_list) # :nodoc:
     seen = {}
     dependencies = Hash.new { |h, name| h[name] = Gem::Dependency.new name }
 
@@ -169,8 +164,8 @@ def add_found_dependencies to_do, dependency_list # :nodoc:
   # Creates an AvailableSet to install from based on +dep_or_name+ and
   # +version+
 
-  def available_set_for dep_or_name, version # :nodoc:
-    if String === dep_or_name then
+  def available_set_for(dep_or_name, version) # :nodoc:
+    if String === dep_or_name
       find_spec_by_name_and_version dep_or_name, version, @prerelease
     else
       dep = dep_or_name.dup
@@ -203,7 +198,7 @@ def consider_remote?
   # sources.  Gems are sorted with newer gems preferred over older gems, and
   # local gems preferred over remote gems.
 
-  def find_gems_with_sources dep, best_only=false # :nodoc:
+  def find_gems_with_sources(dep, best_only=false) # :nodoc:
     set = Gem::AvailableSet.new
 
     if consider_local?
@@ -277,16 +272,16 @@ def find_gems_with_sources dep, best_only=false # :nodoc:
   # +version+.  Returns an Array of specs and sources required for
   # installation of the gem.
 
-  def find_spec_by_name_and_version gem_name,
+  def find_spec_by_name_and_version(gem_name,
                                     version = Gem::Requirement.default,
-                                    prerelease = false
+                                    prerelease = false)
     set = Gem::AvailableSet.new
 
     if consider_local?
-      if gem_name =~ /\.gem$/ and File.file? gem_name then
+      if gem_name =~ /\.gem$/ and File.file? gem_name
         src = Gem::Source::SpecificFile.new(gem_name)
         set.add src.spec, src
-      elsif gem_name =~ /\.gem$/ then
+      elsif gem_name =~ /\.gem$/
         Dir[gem_name].each do |name|
           begin
             src = Gem::Source::SpecificFile.new name
@@ -346,7 +341,7 @@ def gather_dependencies # :nodoc:
       Gem::Specification.include?(spec)
     }
 
-    unless dependency_list.ok? or @ignore_dependencies or @force then
+    unless dependency_list.ok? or @ignore_dependencies or @force
       reason = dependency_list.why_not_ok?.map { |k,v|
         "#{k} requires #{v.join(", ")}"
       }.join("; ")
@@ -357,7 +352,7 @@ def gather_dependencies # :nodoc:
   end
   deprecate :gather_dependencies, :none, 2018, 12
 
-  def in_background what # :nodoc:
+  def in_background(what) # :nodoc:
     fork_happened = false
     if @build_docs_in_background and Process.respond_to?(:fork)
       begin
@@ -386,7 +381,7 @@ def in_background what # :nodoc:
   # c-1.a, b-1 and a-1.a will be installed.  b-1.a will need to be installed
   # separately.
 
-  def install dep_or_name, version = Gem::Requirement.default
+  def install(dep_or_name, version = Gem::Requirement.default)
     request_set = resolve_dependencies dep_or_name, version
 
     @installed_gems = []
@@ -404,7 +399,10 @@ def install dep_or_name, version = Gem::Requirement.default
       :user_install        => @user_install,
       :wrappers            => @wrappers,
       :build_root          => @build_root,
-      :install_as_default  => @install_as_default
+      :install_as_default  => @install_as_default,
+      :dir_mode            => @dir_mode,
+      :data_mode           => @data_mode,
+      :prog_mode           => @prog_mode,
     }
     options[:install_dir] = @install_dir if @only_install_dir
 
@@ -427,16 +425,16 @@ def install dep_or_name, version = Gem::Requirement.default
   end
 
   def install_development_deps # :nodoc:
-    if @development and @dev_shallow then
+    if @development and @dev_shallow
       :shallow
-    elsif @development then
+    elsif @development
       :all
     else
       :none
     end
   end
 
-  def resolve_dependencies dep_or_name, version # :nodoc:
+  def resolve_dependencies(dep_or_name, version) # :nodoc:
     request_set = Gem::RequestSet.new
     request_set.development         = @development
     request_set.development_shallow = @dev_shallow
@@ -448,11 +446,11 @@ def resolve_dependencies dep_or_name, version # :nodoc:
     installer_set.ignore_installed = @only_install_dir
 
     if consider_local?
-      if dep_or_name =~ /\.gem$/ and File.file? dep_or_name then
+      if dep_or_name =~ /\.gem$/ and File.file? dep_or_name
         src = Gem::Source::SpecificFile.new dep_or_name
         installer_set.add_local dep_or_name, src.spec, src
         version = src.spec.version if version == Gem::Requirement.default
-      elsif dep_or_name =~ /\.gem$/ then
+      elsif dep_or_name =~ /\.gem$/
         Dir[dep_or_name].each do |name|
           begin
             src = Gem::Source::SpecificFile.new name
@@ -460,14 +458,14 @@ def resolve_dependencies dep_or_name, version # :nodoc:
           rescue Gem::Package::FormatError
           end
         end
-      # else This is a dependency. InstallerSet handles this case
+        # else This is a dependency. InstallerSet handles this case
       end
     end
 
     dependency =
-      if spec = installer_set.local?(dep_or_name) then
+      if spec = installer_set.local?(dep_or_name)
         Gem::Dependency.new spec.name, version
-      elsif String === dep_or_name then
+      elsif String === dep_or_name
         Gem::Dependency.new dep_or_name, version
       else
         dep_or_name
@@ -481,7 +479,7 @@ def resolve_dependencies dep_or_name, version # :nodoc:
 
     request_set.always_install = installer_set.always_install
 
-    if @ignore_dependencies then
+    if @ignore_dependencies
       installer_set.ignore_dependencies = true
       request_set.ignore_dependencies   = true
       request_set.soft_missing          = true
diff --git a/lib/ruby/stdlib/rubygems/dependency_list.rb b/lib/ruby/stdlib/rubygems/dependency_list.rb
index d8314eaf60f..ee2e4c7343b 100644
--- a/lib/ruby/stdlib/rubygems/dependency_list.rb
+++ b/lib/ruby/stdlib/rubygems/dependency_list.rb
@@ -40,7 +40,7 @@ def self.from_specs
   # Creates a new DependencyList.  If +development+ is true, development
   # dependencies will be included.
 
-  def initialize development = false
+  def initialize(development = false)
     @specs = []
 
     @development = development
@@ -79,8 +79,8 @@ def dependency_order
     seen = {}
 
     sorted.each do |spec|
-      if index = seen[spec.name] then
-        if result[index].version < spec.version then
+      if index = seen[spec.name]
+        if result[index].version < spec.version
           result[index] = spec
         end
       else
@@ -114,7 +114,7 @@ def ok?
     why_not_ok?(:quick).empty?
   end
 
-  def why_not_ok? quick = false
+  def why_not_ok?(quick = false)
     unsatisfied = Hash.new { |h,k| h[k] = [] }
     each do |spec|
       spec.runtime_dependencies.each do |dep|
@@ -123,7 +123,7 @@ def why_not_ok? quick = false
             dep.requirement.satisfied_by? installed_spec.version
         }
 
-        unless inst or @specs.find { |s| s.satisfies_requirement? dep } then
+        unless inst or @specs.find { |s| s.satisfies_requirement? dep }
           unsatisfied[spec.name] << dep
           return unsatisfied if quick
         end
@@ -172,7 +172,7 @@ def ok_to_remove?(full_name, check_dev=true)
   # satisfy items in +dependencies+ (a hash of gem names to arrays of
   # dependencies).
 
-  def remove_specs_unsatisfied_by dependencies
+  def remove_specs_unsatisfied_by(dependencies)
     specs.reject! { |spec|
       dep = dependencies[spec.name]
       dep and not dep.requirement.satisfied_by? spec.version
@@ -200,7 +200,7 @@ def spec_predecessors
         next if spec == other
 
         other.dependencies.each do |dep|
-          if spec.satisfies_requirement? dep then
+          if spec.satisfies_requirement? dep
             result[spec] << other
           end
         end
@@ -222,7 +222,7 @@ def tsort_each_child(node)
 
     dependencies.each do |dep|
       specs.each do |spec|
-        if spec.satisfies_requirement? dep then
+        if spec.satisfies_requirement? dep
           yield spec
           break
         end
@@ -241,4 +241,3 @@ def active_count(specs, ignored)
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/deprecate.rb b/lib/ruby/stdlib/rubygems/deprecate.rb
index 375194c1e83..815f42ae8c5 100644
--- a/lib/ruby/stdlib/rubygems/deprecate.rb
+++ b/lib/ruby/stdlib/rubygems/deprecate.rb
@@ -27,7 +27,7 @@ def self.skip # :nodoc:
     @skip ||= false
   end
 
-  def self.skip= v # :nodoc:
+  def self.skip=(v) # :nodoc:
     @skip = v
   end
 
@@ -47,7 +47,7 @@ def skip_during
   # telling the user of +repl+ (unless +repl+ is :none) and the
   # year/month that it is planned to go away.
 
-  def deprecate name, repl, year, month
+  def deprecate(name, repl, year, month)
     class_eval {
       old = "_deprecated_#{name}"
       alias_method old, name
@@ -68,4 +68,3 @@ def deprecate name, repl, year, month
   module_function :deprecate, :skip_during
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/doctor.rb b/lib/ruby/stdlib/rubygems/doctor.rb
index ec4a16c3f89..661ae5a4e10 100644
--- a/lib/ruby/stdlib/rubygems/doctor.rb
+++ b/lib/ruby/stdlib/rubygems/doctor.rb
@@ -26,7 +26,7 @@ class Gem::Doctor
     ['doc',            ''],
     ['extensions',     ''],
     ['gems',           ''],
-  ]
+  ].freeze
 
   missing =
     Gem::REPOSITORY_SUBDIRECTORIES.sort -
@@ -41,7 +41,7 @@ class Gem::Doctor
   #
   # If +dry_run+ is true no files or directories will be removed.
 
-  def initialize gem_repository, dry_run = false
+  def initialize(gem_repository, dry_run = false)
     @gem_repository = gem_repository
     @dry_run        = dry_run
 
@@ -73,7 +73,7 @@ def doctor
 
     Gem.use_paths @gem_repository.to_s
 
-    unless gem_repository? then
+    unless gem_repository?
       say 'This directory does not appear to be a RubyGems repository, ' +
           'skipping'
       say
@@ -99,7 +99,7 @@ def doctor_children # :nodoc:
   ##
   # Removes files in +sub_directory+ with +extension+
 
-  def doctor_child sub_directory, extension # :nodoc:
+  def doctor_child(sub_directory, extension) # :nodoc:
     directory = File.join(@gem_repository, sub_directory)
 
     Dir.entries(directory).sort.each do |ent|
@@ -115,7 +115,7 @@ def doctor_child sub_directory, extension # :nodoc:
 
       type = File.directory?(child) ? 'directory' : 'file'
 
-      action = if @dry_run then
+      action = if @dry_run
                  'Extra'
                else
                  FileUtils.rm_r(child)
@@ -129,4 +129,3 @@ def doctor_child sub_directory, extension # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/errors.rb b/lib/ruby/stdlib/rubygems/errors.rb
index 6f2847d548a..6773bbcd269 100644
--- a/lib/ruby/stdlib/rubygems/errors.rb
+++ b/lib/ruby/stdlib/rubygems/errors.rb
@@ -25,7 +25,7 @@ class LoadError < ::LoadError
   # system.  Instead of rescuing from this class, make sure to rescue from the
   # superclass Gem::LoadError to catch all types of load errors.
   class MissingSpecError < Gem::LoadError
-    def initialize name, requirement
+    def initialize(name, requirement)
       @name        = name
       @requirement = requirement
     end
@@ -50,7 +50,7 @@ def build_message
   class MissingSpecVersionError < MissingSpecError
     attr_reader :specs
 
-    def initialize name, requirement, specs
+    def initialize(name, requirement, specs)
       super(name, requirement)
       @specs = specs
     end
@@ -81,7 +81,7 @@ class ConflictError < LoadError
 
     attr_reader :target
 
-    def initialize target, conflicts
+    def initialize(target, conflicts)
       @target    = target
       @conflicts = conflicts
       @name      = target.name
diff --git a/lib/ruby/stdlib/rubygems/exceptions.rb b/lib/ruby/stdlib/rubygems/exceptions.rb
index 328bd5f4768..a387cd390fb 100644
--- a/lib/ruby/stdlib/rubygems/exceptions.rb
+++ b/lib/ruby/stdlib/rubygems/exceptions.rb
@@ -36,7 +36,7 @@ class Gem::DependencyResolutionError < Gem::DependencyError
 
   attr_reader :conflict
 
-  def initialize conflict
+  def initialize(conflict)
     @conflict = conflict
     a, b = conflicting_dependencies
 
@@ -56,6 +56,13 @@ class Gem::GemNotInHomeException < Gem::Exception
   attr_accessor :spec
 end
 
+###
+# Raised when removing a gem with the uninstall command fails
+
+class Gem::UninstallError < Gem::Exception
+  attr_accessor :spec
+end
+
 class Gem::DocumentError < Gem::Exception; end
 
 ##
@@ -70,7 +77,7 @@ class Gem::FilePermissionError < Gem::Exception
 
   attr_reader :directory
 
-  def initialize directory
+  def initialize(directory)
     @directory = directory
 
     super "You don't have write permissions for the #{directory} directory."
@@ -130,7 +137,7 @@ class Gem::ImpossibleDependenciesError < Gem::Exception
   attr_reader :conflicts
   attr_reader :request
 
-  def initialize request, conflicts
+  def initialize(request, conflicts)
     @request   = request
     @conflicts = conflicts
 
@@ -242,7 +249,7 @@ class Gem::UnsatisfiableDependencyError < Gem::DependencyError
   # Creates a new UnsatisfiableDependencyError for the unsatisfiable
   # Gem::Resolver::DependencyRequest +dep+
 
-  def initialize dep, platform_mismatch=nil
+  def initialize(dep, platform_mismatch=nil)
     if platform_mismatch and !platform_mismatch.empty?
       plats = platform_mismatch.map { |x| x.platform.to_s }.sort.uniq
       super "Unable to resolve dependency: No match for '#{dep}' on this platform. Found: #{plats.join(', ')}"
diff --git a/lib/ruby/stdlib/rubygems/ext.rb b/lib/ruby/stdlib/rubygems/ext.rb
index 18d2bc233ae..35a486606ab 100644
--- a/lib/ruby/stdlib/rubygems/ext.rb
+++ b/lib/ruby/stdlib/rubygems/ext.rb
@@ -16,4 +16,3 @@ module Gem::Ext; end
 require 'rubygems/ext/ext_conf_builder'
 require 'rubygems/ext/rake_builder'
 require 'rubygems/ext/cmake_builder'
-
diff --git a/lib/ruby/stdlib/rubygems/ext/build_error.rb b/lib/ruby/stdlib/rubygems/ext/build_error.rb
index 0b3c17a9a0d..6dffddb5cc7 100644
--- a/lib/ruby/stdlib/rubygems/ext/build_error.rb
+++ b/lib/ruby/stdlib/rubygems/ext/build_error.rb
@@ -4,4 +4,3 @@
 
 class Gem::Ext::BuildError < Gem::InstallError
 end
-
diff --git a/lib/ruby/stdlib/rubygems/ext/builder.rb b/lib/ruby/stdlib/rubygems/ext/builder.rb
index eb9db199d56..f578e7feee4 100644
--- a/lib/ruby/stdlib/rubygems/ext/builder.rb
+++ b/lib/ruby/stdlib/rubygems/ext/builder.rb
@@ -6,7 +6,6 @@
 #++
 
 require 'rubygems/user_interaction'
-require 'thread'
 
 class Gem::Ext::Builder
 
@@ -28,18 +27,18 @@ def self.class_name
   end
 
   def self.make(dest_path, results)
-    unless File.exist? 'Makefile' then
+    unless File.exist? 'Makefile'
       raise Gem::InstallError, 'Makefile not found'
     end
 
     # try to find make program from Ruby configure arguments first
     RbConfig::CONFIG['configure_args'] =~ /with-make-prog\=(\w+)/
     make_program = ENV['MAKE'] || ENV['make'] || $1
-    unless make_program then
+    unless make_program
       make_program = (/mswin/ =~ RUBY_PLATFORM) ? 'nmake' : 'make'
     end
 
-    destdir = '"DESTDIR=%s"' % ENV['DESTDIR'] if RUBY_VERSION > '2.0'
+    destdir = '"DESTDIR=%s"' % ENV['DESTDIR']
 
     ['clean', '', 'install'].each do |target|
       # Pass DESTDIR via command line to override what's in MAKEFLAGS
@@ -57,6 +56,7 @@ def self.make(dest_path, results)
   end
 
   def self.redirector
+    warn "#{caller[0]}: Use IO.popen(..., err: [:child, :out])"
     '2>&1'
   end
 
@@ -64,28 +64,35 @@ def self.run(command, results, command_name = nil)
     verbose = Gem.configuration.really_verbose
 
     begin
-      # TODO use Process.spawn when ruby 1.8 support is dropped.
       rubygems_gemdeps, ENV['RUBYGEMS_GEMDEPS'] = ENV['RUBYGEMS_GEMDEPS'], nil
       if verbose
         puts("current directory: #{Dir.pwd}")
-        puts(command)
-        system(command)
-      else
-        results << "current directory: #{Dir.pwd}"
-        results << command
-        results << `#{command} #{redirector}`
+        p(command)
       end
+      results << "current directory: #{Dir.pwd}"
+      results << (command.respond_to?(:shelljoin) ? command.shelljoin : command)
+
+      redirections = verbose ? {} : {err: [:child, :out]}
+      IO.popen(command, "r", redirections) do |io|
+        if verbose
+          IO.copy_stream(io, $stdout)
+        else
+          results << io.read
+        end
+      end
+    rescue => error
+      raise Gem::InstallError, "#{command_name || class_name} failed#{error.message}"
     ensure
       ENV['RUBYGEMS_GEMDEPS'] = rubygems_gemdeps
     end
 
-    unless $?.success? then
+    unless $?.success?
       results << "Building has failed. See above output for more information on the failure." if verbose
 
       exit_reason =
-        if $?.exited? then
+        if $?.exited?
           ", exit code #{$?.exitstatus}"
-        elsif $?.signaled? then
+        elsif $?.signaled?
           ", uncaught signal #{$?.termsig}"
         end
 
@@ -98,7 +105,7 @@ def self.run(command, results, command_name = nil)
   # have build arguments, saved, set +build_args+ which is an ARGV-style
   # array.
 
-  def initialize spec, build_args = spec.build_args
+  def initialize(spec, build_args = spec.build_args)
     @spec       = spec
     @build_args = build_args
     @gem_dir    = spec.full_gem_path
@@ -109,7 +116,7 @@ def initialize spec, build_args = spec.build_args
   ##
   # Chooses the extension builder class for +extension+
 
-  def builder_for extension # :nodoc:
+  def builder_for(extension) # :nodoc:
     case extension
     when /extconf/ then
       Gem::Ext::ExtConfBuilder
@@ -131,7 +138,7 @@ def builder_for extension # :nodoc:
   ##
   # Logs the build +output+ in +build_dir+, then raises Gem::Ext::BuildError.
 
-  def build_error build_dir, output, backtrace = nil # :nodoc:
+  def build_error(build_dir, output, backtrace = nil) # :nodoc:
     gem_make_out = write_gem_make_out output
 
     message = <<-EOF
@@ -146,12 +153,24 @@ def build_error build_dir, output, backtrace = nil # :nodoc:
     raise Gem::Ext::BuildError, message, backtrace
   end
 
-  def build_extension extension, dest_path # :nodoc:
+  def build_extension(extension, dest_path) # :nodoc:
     results = []
 
+    # FIXME: Determine if this line is necessary and, if so, why.
+    # Notes:
+    # 1. As far as I can tell, this method is only called by +build_extensions+.
+    # 2. The existence of this line implies +extension+ is, or previously was,
+    #    sometimes +false+ or +nil+.
+    # 3. #1 and #2 combined suggests, but does not confirm, that
+    #    +@specs.extensions+ sometimes contained +false+ or +nil+ values.
+    # 4. Nothing seems to explicitly handle +extension+ being empty,
+    #    which makes me wonder both what it should do and what it does.
+    #
+    # - @duckinator
     extension ||= '' # I wish I knew why this line existed
+
     extension_dir =
-      File.expand_path File.join @gem_dir, File.dirname(extension)
+      File.expand_path File.join(@gem_dir, File.dirname(extension))
     lib_dir = File.join @spec.full_gem_path, @spec.raw_require_paths.first
 
     builder = builder_for extension
@@ -160,11 +179,19 @@ def build_extension extension, dest_path # :nodoc:
       FileUtils.mkdir_p dest_path
 
       CHDIR_MUTEX.synchronize do
-        Dir.chdir extension_dir do
-          results = builder.build(extension, @gem_dir, dest_path,
+        pwd = Dir.getwd
+        Dir.chdir extension_dir
+        begin
+          results = builder.build(extension, dest_path,
                                   results, @build_args, lib_dir)
 
           verbose { results.join("\n") }
+        ensure
+          begin
+            Dir.chdir pwd
+          rescue SystemCallError
+            Dir.chdir dest_path
+          end
         end
       end
 
@@ -193,6 +220,7 @@ def build_extensions
 
     FileUtils.rm_f @spec.gem_build_complete_path
 
+    # FIXME: action at a distance: @ran_rake modified deep in build_extension(). - @duckinator
     @ran_rake = false # only run rake once
 
     @spec.extensions.each do |extension|
@@ -207,7 +235,7 @@ def build_extensions
   ##
   # Writes +output+ to gem_make.out in the extension install directory.
 
-  def write_gem_make_out output # :nodoc:
+  def write_gem_make_out(output) # :nodoc:
     destination = File.join @spec.extension_dir, 'gem_make.out'
 
     FileUtils.mkdir_p @spec.extension_dir
@@ -218,4 +246,3 @@ def write_gem_make_out output # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/ext/cmake_builder.rb b/lib/ruby/stdlib/rubygems/ext/cmake_builder.rb
index efa3bd1d888..ab226733d97 100644
--- a/lib/ruby/stdlib/rubygems/ext/cmake_builder.rb
+++ b/lib/ruby/stdlib/rubygems/ext/cmake_builder.rb
@@ -2,8 +2,8 @@
 require 'rubygems/command'
 
 class Gem::Ext::CmakeBuilder < Gem::Ext::Builder
-  def self.build(extension, directory, dest_path, results, args=[], lib_dir=nil)
-    unless File.exist?('Makefile') then
+  def self.build(extension, dest_path, results, args=[], lib_dir=nil)
+    unless File.exist?('Makefile')
       cmd = "cmake . -DCMAKE_INSTALL_PREFIX=#{dest_path}"
       cmd << " #{Gem::Command.build_args.join ' '}" unless Gem::Command.build_args.empty?
 
diff --git a/lib/ruby/stdlib/rubygems/ext/configure_builder.rb b/lib/ruby/stdlib/rubygems/ext/configure_builder.rb
index 8b42bf7ee96..7d105c9bd3d 100644
--- a/lib/ruby/stdlib/rubygems/ext/configure_builder.rb
+++ b/lib/ruby/stdlib/rubygems/ext/configure_builder.rb
@@ -7,8 +7,8 @@
 
 class Gem::Ext::ConfigureBuilder < Gem::Ext::Builder
 
-  def self.build(extension, directory, dest_path, results, args=[], lib_dir=nil)
-    unless File.exist?('Makefile') then
+  def self.build(extension, dest_path, results, args=[], lib_dir=nil)
+    unless File.exist?('Makefile')
       cmd = "sh ./configure --prefix=#{dest_path}"
       cmd << " #{args.join ' '}" unless args.empty?
 
@@ -21,4 +21,3 @@ def self.build(extension, directory, dest_path, results, args=[], lib_dir=nil)
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/ext/ext_conf_builder.rb b/lib/ruby/stdlib/rubygems/ext/ext_conf_builder.rb
index 965b7282788..5a2b3eb5330 100644
--- a/lib/ruby/stdlib/rubygems/ext/ext_conf_builder.rb
+++ b/lib/ruby/stdlib/rubygems/ext/ext_conf_builder.rb
@@ -7,11 +7,12 @@
 
 require 'fileutils'
 require 'tempfile'
+require 'shellwords'
 
 class Gem::Ext::ExtConfBuilder < Gem::Ext::Builder
   FileEntry = FileUtils::Entry_ # :nodoc:
 
-  def self.build(extension, directory, dest_path, results, args=[], lib_dir=nil)
+  def self.build(extension, dest_path, results, args=[], lib_dir=nil)
     tmp_dest = Dir.mktmpdir(".gem.", ".")
 
     # Some versions of `mktmpdir` return absolute paths, which will break make
@@ -23,9 +24,7 @@ def self.build(extension, directory, dest_path, results, args=[], lib_dir=nil)
     # spaces do not work.
     #
     # Details: https://github.com/rubygems/rubygems/issues/977#issuecomment-171544940
-    #
-    # TODO: Make this unconditional when rubygems no longer supports Ruby 1.9.x.
-    tmp_dest = get_relative_path(tmp_dest) unless Gem.win_platform? && RUBY_VERSION <= '2.0'
+    tmp_dest = get_relative_path(tmp_dest)
 
     Tempfile.open %w"siteconf .rb", "." do |siteconf|
       siteconf.puts "require 'rbconfig'"
@@ -40,13 +39,15 @@ def self.build(extension, directory, dest_path, results, args=[], lib_dir=nil)
       destdir = ENV["DESTDIR"]
 
       begin
-        cmd = [Gem.ruby, "-r", get_relative_path(siteconf.path), File.basename(extension), *args].join ' '
+        cmd = Gem.ruby.shellsplit << "-I" << File.expand_path("../../..", __FILE__) <<
+              "-r" << get_relative_path(siteconf.path) << File.basename(extension)
+        cmd.push(*args)
 
         begin
           run cmd, results
         ensure
           if File.exist? 'mkmf.log'
-            unless $?.success? then
+            unless $?.success?
               results << "To see why this extension failed to compile, please check" \
                 " the mkmf.log which can be found here:\n"
               results << "  " + File.join(dest_path, 'mkmf.log') + "\n"
@@ -62,7 +63,7 @@ def self.build(extension, directory, dest_path, results, args=[], lib_dir=nil)
 
         if tmp_dest
           # TODO remove in RubyGems 3
-          if Gem.install_extension_in_lib and lib_dir then
+          if Gem.install_extension_in_lib and lib_dir
             FileUtils.mkdir_p lib_dir
             entries = Dir.entries(tmp_dest) - %w[. ..]
             entries = entries.map { |entry| File.join tmp_dest, entry }
diff --git a/lib/ruby/stdlib/rubygems/ext/rake_builder.rb b/lib/ruby/stdlib/rubygems/ext/rake_builder.rb
index 4b3534bf358..52041a2713d 100644
--- a/lib/ruby/stdlib/rubygems/ext/rake_builder.rb
+++ b/lib/ruby/stdlib/rubygems/ext/rake_builder.rb
@@ -5,33 +5,31 @@
 # See LICENSE.txt for permissions.
 #++
 
+require "shellwords"
+
 class Gem::Ext::RakeBuilder < Gem::Ext::Builder
 
-  def self.build(extension, directory, dest_path, results, args=[], lib_dir=nil)
-    if File.basename(extension) =~ /mkrf_conf/i then
-      cmd = "#{Gem.ruby} #{File.basename extension}".dup
-      cmd << " #{args.join " "}" unless args.empty?
-      run cmd, results
+  def self.build(extension, dest_path, results, args=[], lib_dir=nil)
+    if File.basename(extension) =~ /mkrf_conf/i
+      run([Gem.ruby, File.basename(extension), *args], results)
     end
 
-    # Deal with possible spaces in the path, e.g. C:/Program Files
-    dest_path = '"' + dest_path.to_s + '"' if dest_path.to_s.include?(' ')
-
     rake = ENV['rake']
 
-    rake ||= begin
-               "#{Gem.ruby} -rrubygems #{Gem.bin_path('rake', 'rake')}"
-             rescue Gem::Exception
-             end
-
-    rake ||= Gem.default_exec_format % 'rake'
-
-    cmd = "#{rake} RUBYARCHDIR=#{dest_path} RUBYLIBDIR=#{dest_path}" # ENV is frozen
+    if rake
+      rake = rake.shellsplit
+    else
+      begin
+        rake = [Gem.ruby, "-rrubygems", Gem.bin_path('rake', 'rake')]
+      rescue Gem::Exception
+        rake = [Gem.default_exec_format % 'rake']
+      end
+    end
 
-    run cmd, results
+    rake_args = ["RUBYARCHDIR=#{dest_path}", "RUBYLIBDIR=#{dest_path}", *args]
+    run(rake + rake_args, results)
 
     results
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/gem_runner.rb b/lib/ruby/stdlib/rubygems/gem_runner.rb
index 349d49d66e6..4159d81389c 100644
--- a/lib/ruby/stdlib/rubygems/gem_runner.rb
+++ b/lib/ruby/stdlib/rubygems/gem_runner.rb
@@ -38,7 +38,7 @@ def initialize(options={})
   ##
   # Run the gem command with the following arguments.
 
-  def run args
+  def run(args)
     build_args = extract_build_args args
 
     do_configuration args
@@ -63,7 +63,7 @@ def run args
   # Separates the build arguments (those following <code>--</code>) from the
   # other arguments in the list.
 
-  def extract_build_args args # :nodoc:
+  def extract_build_args(args) # :nodoc:
     return [] unless offset = args.index('--')
 
     build_args = args.slice!(offset...args.length)
diff --git a/lib/ruby/stdlib/rubygems/gemcutter_utilities.rb b/lib/ruby/stdlib/rubygems/gemcutter_utilities.rb
index 623d9301b59..3607b61529f 100644
--- a/lib/ruby/stdlib/rubygems/gemcutter_utilities.rb
+++ b/lib/ruby/stdlib/rubygems/gemcutter_utilities.rb
@@ -1,14 +1,11 @@
 # frozen_string_literal: true
 require 'rubygems/remote_fetcher'
-require 'rubygems/text'
 
 ##
 # Utility methods for using the RubyGems API.
 
 module Gem::GemcutterUtilities
 
-  include Gem::Text
-
   # TODO: move to Gem::Command
   OptionParser.accept Symbol do |value|
     value.to_sym
@@ -27,11 +24,21 @@ def add_key_option
     end
   end
 
+  ##
+  # Add the --otp option
+
+  def add_otp_option
+    add_option('--otp CODE',
+               'Digit code for multifactor authentication') do |value, options|
+      options[:otp] = value
+    end
+  end
+
   ##
   # The API key from the command options or from the user's configuration.
 
   def api_key
-    if options[:key] then
+    if options[:key]
       verify_api_key options[:key]
     elsif Gem.configuration.api_keys.key?(host)
       Gem.configuration.api_keys[host]
@@ -93,11 +100,11 @@ def rubygems_api_request(method, path, host = nil, allowed_push_host = nil, &blo
   # Signs in with the RubyGems API at +sign_in_host+ and sets the rubygems API
   # key.
 
-  def sign_in sign_in_host = nil
+  def sign_in(sign_in_host = nil)
     sign_in_host ||= self.host
     return if api_key
 
-    pretty_host = if Gem::DEFAULT_HOST == sign_in_host then
+    pretty_host = if Gem::DEFAULT_HOST == sign_in_host
                     'RubyGems.org'
                   else
                     sign_in_host
@@ -116,6 +123,13 @@ def sign_in sign_in_host = nil
       request.basic_auth email, password
     end
 
+    if need_otp? response
+      response = rubygems_api_request(:get, "api/v1/api_key", sign_in_host) do |request|
+        request.basic_auth email, password
+        request.add_field "OTP", options[:otp]
+      end
+    end
+
     with_response response do |resp|
       say "Signed in."
       set_api_key host, resp.body
@@ -127,7 +141,7 @@ def sign_in sign_in_host = nil
   # an error.
 
   def verify_api_key(key)
-    if Gem.configuration.api_keys.key? key then
+    if Gem.configuration.api_keys.key? key
       Gem.configuration.api_keys[key]
     else
       alert_error "No such API key. Please add it to your configuration (done automatically on initial `gem push`)."
@@ -142,24 +156,38 @@ def verify_api_key(key)
   # If the response was not successful, shows an error to the user including
   # the +error_prefix+ and the response body.
 
-  def with_response response, error_prefix = nil
+  def with_response(response, error_prefix = nil)
     case response
     when Net::HTTPSuccess then
-      if block_given? then
+      if block_given?
         yield response
       else
-        say clean_text(response.body)
+        say response.body
       end
     else
       message = response.body
       message = "#{error_prefix}: #{message}" if error_prefix
 
-      say clean_text(message)
+      say message
       terminate_interaction 1 # TODO: question this
     end
   end
 
-  def set_api_key host, key
+  ##
+  # Returns true when the user has enabled multifactor authentication from
+  # +response+ text.
+
+  def need_otp?(response)
+    return unless response.kind_of?(Net::HTTPUnauthorized) &&
+        response.body.start_with?('You have enabled multifactor authentication')
+    return true if options[:otp]
+
+    say 'You have enabled multi-factor authentication. Please enter OTP code.'
+    options[:otp] = ask 'Code: '
+    true
+  end
+
+  def set_api_key(host, key)
     if host == Gem::DEFAULT_HOST
       Gem.configuration.rubygems_api_key = key
     else
@@ -168,4 +196,3 @@ def set_api_key host, key
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/indexer.rb b/lib/ruby/stdlib/rubygems/indexer.rb
index 2e59e790d42..b97347177db 100644
--- a/lib/ruby/stdlib/rubygems/indexer.rb
+++ b/lib/ruby/stdlib/rubygems/indexer.rb
@@ -4,10 +4,17 @@
 require 'time'
 require 'tmpdir'
 
+rescue_exceptions = [LoadError]
+begin
+  require 'bundler/errors'
+rescue LoadError # this rubygems + old ruby
+else # this rubygems + ruby trunk with bundler
+  rescue_exceptions << Bundler::GemfileNotFound
+end
 begin
   gem 'builder'
   require 'builder/xchar'
-rescue LoadError
+rescue *rescue_exceptions
 end
 
 ##
@@ -55,7 +62,7 @@ def initialize(directory, options = {})
     require 'tmpdir'
     require 'zlib'
 
-    unless defined?(Builder::XChar) then
+    unless defined?(Builder::XChar)
       raise "Gem::Indexer requires that the XML Builder library be installed:" +
             "\n\tgem install builder"
     end
@@ -109,7 +116,7 @@ def build_indices
   ##
   # Builds Marshal quick index gemspecs.
 
-  def build_marshal_gemspecs specs
+  def build_marshal_gemspecs(specs)
     count = specs.count
     progress = ui.progress_reporter count,
                                     "Generating Marshal quick index gemspecs for #{count} gems",
@@ -154,7 +161,7 @@ def build_modern_index(index, file, name)
           platform = spec.original_platform
 
           # win32-api-1.0.4-x86-mswin32-60
-          unless String === platform then
+          unless String === platform
             alert_warning "Skipping invalid platform in gem: #{spec.full_name}"
             next
           end
@@ -172,7 +179,7 @@ def build_modern_index(index, file, name)
   ##
   # Builds indices for RubyGems 1.2 and newer. Handles full, latest, prerelease
 
-  def build_modern_indices specs
+  def build_modern_indices(specs)
     prerelease, released = specs.partition { |s|
       s.version.prerelease?
     }
@@ -192,9 +199,9 @@ def build_modern_indices specs
                "#{@prerelease_specs_index}.gz"]
   end
 
-  def map_gems_to_specs gems
+  def map_gems_to_specs(gems)
     gems.map { |gemfile|
-      if File.size(gemfile) == 0 then
+      if File.size(gemfile) == 0
         alert_warning "Skipping zero-length gem: #{gemfile}"
         next
       end
@@ -228,7 +235,7 @@ def compress_indices
     say "Compressing indices"
 
     Gem.time 'Compressed indices' do
-      if @build_modern then
+      if @build_modern
         gzip @specs_index
         gzip @latest_specs_index
         gzip @prerelease_specs_index
@@ -271,7 +278,7 @@ def compress(filename, extension)
   # List of gem file names to index.
 
   def gem_file_list
-    Dir[File.join(@dest_directory, "gems", '*.gem')]
+    Gem::Util.glob_files_in_dir("*.gem", File.join(@dest_directory, "gems"))
   end
 
   ##
@@ -306,7 +313,7 @@ def install_indices
     files = @files
     files.delete @quick_marshal_dir if files.include? @quick_dir
 
-    if files.include? @quick_marshal_dir and not files.include? @quick_dir then
+    if files.include? @quick_marshal_dir and not files.include? @quick_dir
       files.delete @quick_marshal_dir
 
       dst_name = File.join(@dest_directory, @quick_marshal_dir_base)
@@ -347,7 +354,7 @@ def paranoid(path, extension)
     data = Gem.read_binary path
     compressed_data = Gem.read_binary "#{path}.#{extension}"
 
-    unless data == Gem::Util.inflate(compressed_data) then
+    unless data == Gem::Util.inflate(compressed_data)
       raise "Compressed file #{compressed_path} does not match uncompressed file #{path}"
     end
   end
@@ -367,7 +374,7 @@ def update_index
       gem_mtime >= specs_mtime
     end
 
-    if updated_gems.empty? then
+    if updated_gems.empty?
       say 'No new gems'
       terminate_interaction 0
     end
diff --git a/lib/ruby/stdlib/rubygems/install_default_message.rb b/lib/ruby/stdlib/rubygems/install_default_message.rb
index dc73fd962b9..f68fd2fd043 100644
--- a/lib/ruby/stdlib/rubygems/install_default_message.rb
+++ b/lib/ruby/stdlib/rubygems/install_default_message.rb
@@ -10,4 +10,3 @@
   ui = Gem::DefaultUserInteraction.ui
   ui.say "Successfully installed #{installer.spec.full_name} as a default gem"
 end
-
diff --git a/lib/ruby/stdlib/rubygems/install_message.rb b/lib/ruby/stdlib/rubygems/install_message.rb
index 6880db583ed..3c13888a84a 100644
--- a/lib/ruby/stdlib/rubygems/install_message.rb
+++ b/lib/ruby/stdlib/rubygems/install_message.rb
@@ -10,4 +10,3 @@
   ui = Gem::DefaultUserInteraction.ui
   ui.say "Successfully installed #{installer.spec.full_name}"
 end
-
diff --git a/lib/ruby/stdlib/rubygems/install_update_options.rb b/lib/ruby/stdlib/rubygems/install_update_options.rb
index 75968605f19..f05491a31cc 100644
--- a/lib/ruby/stdlib/rubygems/install_update_options.rb
+++ b/lib/ruby/stdlib/rubygems/install_update_options.rb
@@ -50,7 +50,7 @@ def add_install_update_options
     add_option(:"Install/Update", '--vendor',
                'Install gem into the vendor directory.',
                'Only for use by gem repackagers.') do |value, options|
-      unless Gem.vendor_dir then
+      unless Gem.vendor_dir
         raise OptionParser::InvalidOption.new 'your platform is not supported'
       end
 
@@ -63,30 +63,6 @@ def add_install_update_options
       options[:document] = []
     end
 
-    add_option(:Deprecated, '--[no-]rdoc',
-               'Generate RDoc for installed gems',
-               'Use --document instead') do |value, options|
-      if value then
-        options[:document] << 'rdoc'
-      else
-        options[:document].delete 'rdoc'
-      end
-
-      options[:document].uniq!
-    end
-
-    add_option(:Deprecated, '--[no-]ri',
-               'Generate ri data for installed gems.',
-               'Use --document instead') do |value, options|
-      if value then
-        options[:document] << 'ri'
-      else
-        options[:document].delete 'ri'
-      end
-
-      options[:document].uniq!
-    end
-
     add_option(:"Install/Update", '-E', '--[no-]env-shebang',
                "Rewrite the shebang line on installed",
                "scripts to use /usr/bin/env") do |value, options|
@@ -164,7 +140,7 @@ def add_install_update_options
         File.exist? file
       end unless v
 
-      unless v then
+      unless v
         message = v ? v : "(tried #{Gem::GEM_DEP_FILES.join ', '})"
 
         raise OptionParser::InvalidArgument,
@@ -202,7 +178,6 @@ def add_install_update_options
                'Suggest alternates when gems are not found') do |v,o|
       options[:suggest_alternate] = v
     end
-
   end
 
   ##
@@ -213,4 +188,3 @@ def install_update_defaults_str
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/installer.rb b/lib/ruby/stdlib/rubygems/installer.rb
index feb6249cd38..6cd073e11da 100644
--- a/lib/ruby/stdlib/rubygems/installer.rb
+++ b/lib/ruby/stdlib/rubygems/installer.rb
@@ -34,7 +34,7 @@ class Gem::Installer
   # Paths where env(1) might live.  Some systems are broken and have it in
   # /bin
 
-  ENV_PATHS = %w[/usr/bin/env /bin/env]
+  ENV_PATHS = %w[/usr/bin/env /bin/env].freeze
 
   ##
   # Deprecated in favor of Gem::Ext::BuildError
@@ -101,7 +101,7 @@ def exec_format
   ##
   # Construct an installer object for the gem file located at +path+
 
-  def self.at path, options = {}
+  def self.at(path, options = {})
     security_policy = options[:security_policy]
     package = Gem::Package.new path, security_policy
     new package, options
@@ -110,11 +110,15 @@ def self.at path, options = {}
   class FakePackage
     attr_accessor :spec
 
+    attr_accessor :dir_mode
+    attr_accessor :prog_mode
+    attr_accessor :data_mode
+
     def initialize(spec)
       @spec = spec
     end
 
-    def extract_files destination_dir, pattern = '*'
+    def extract_files(destination_dir, pattern = '*')
       FileUtils.mkdir_p destination_dir
 
       spec.files.each do |file|
@@ -125,7 +129,7 @@ def extract_files destination_dir, pattern = '*'
       end
     end
 
-    def copy_to path
+    def copy_to(path)
     end
   end
 
@@ -133,7 +137,7 @@ def copy_to path
   # Construct an installer object for an ephemeral gem (one where we don't
   # actually have a .gem file, just a spec)
 
-  def self.for_spec spec, options = {}
+  def self.for_spec(spec, options = {})
     # FIXME: we should have a real Package class for this
     new FakePackage.new(spec), options
   end
@@ -179,7 +183,13 @@ def initialize(package, options={})
 
     process_options
 
-    if options[:user_install] and not options[:unpack] then
+    @package.dir_mode = options[:dir_mode]
+    @package.prog_mode = options[:prog_mode]
+    @package.data_mode = options[:data_mode]
+
+    @bin_dir = options[:bin_dir] if options[:bin_dir]
+
+    if options[:user_install] and not options[:unpack]
       @gem_home = Gem.user_dir
       @bin_dir = Gem.bindir gem_home unless options[:bin_dir]
       check_that_user_bin_dir_is_in_path
@@ -199,7 +209,7 @@ def initialize(package, options={})
   #
   # Otherwise +filename+ is overwritten.
 
-  def check_executable_overwrite filename # :nodoc:
+  def check_executable_overwrite(filename) # :nodoc:
     return if @force
 
     generated_bin = File.join @bin_dir, formatted_program_filename(filename)
@@ -235,7 +245,7 @@ def check_executable_overwrite filename # :nodoc:
 
     question = "#{spec.name}'s executable \"#{filename}\" conflicts with ".dup
 
-    if ruby_executable then
+    if ruby_executable
       question << (existing || 'an unknown executable')
 
       return if ask_yes_no "#{question}\nOverwrite the executable?", false
@@ -288,7 +298,7 @@ def install
     run_pre_install_hooks
 
     # Set loaded_from to ensure extension_dir is correct
-    if @options[:install_as_default] then
+    if @options[:install_as_default]
       spec.loaded_from = default_spec_file
     else
       spec.loaded_from = spec_file
@@ -298,9 +308,10 @@ def install
     FileUtils.rm_rf gem_dir
     FileUtils.rm_rf spec.extension_dir
 
-    FileUtils.mkdir_p gem_dir
+    dir_mode = options[:dir_mode]
+    FileUtils.mkdir_p gem_dir, :mode => dir_mode && 0755
 
-    if @options[:install_as_default] then
+    if @options[:install_as_default]
       extract_bin
       write_default_spec
     else
@@ -315,6 +326,8 @@ def install
       write_cache_file
     end
 
+    File.chmod(dir_mode, gem_dir) if dir_mode
+
     say spec.post_install_message if options[:post_install_message] && !spec.post_install_message.nil?
 
     Gem::Installer.install_lock.synchronize { Gem::Specification.reset }
@@ -331,7 +344,7 @@ def install
 
   def run_pre_install_hooks # :nodoc:
     Gem.pre_install_hooks.each do |hook|
-      if hook.call(self) == false then
+      if hook.call(self) == false
         location = " at #{$1}" if hook.inspect =~ /@(.*:\d+)/
 
         message = "pre-install hook#{location} failed for #{spec.full_name}"
@@ -342,7 +355,7 @@ def run_pre_install_hooks # :nodoc:
 
   def run_post_build_hooks # :nodoc:
     Gem.post_build_hooks.each do |hook|
-      if hook.call(self) == false then
+      if hook.call(self) == false
         FileUtils.rm_rf gem_dir
 
         location = " at #{$1}" if hook.inspect =~ /@(.*:\d+)/
@@ -368,7 +381,7 @@ def installed_specs
     @specs ||= begin
       specs = []
 
-      Dir[File.join(gem_home, "specifications", "*.gemspec")].each do |path|
+      Gem::Util.glob_files_in_dir("*.gemspec", File.join(gem_home, "specifications")).each do |path|
         spec = Gem::Specification.load path.untaint
         specs << spec if spec
       end
@@ -385,7 +398,7 @@ def installed_specs
   # dependency :: Gem::Dependency
 
   def ensure_dependency(spec, dependency)
-    unless installation_satisfies_dependency? dependency then
+    unless installation_satisfies_dependency? dependency
       raise Gem::InstallError, "#{spec.name} requires #{dependency}"
     end
     true
@@ -453,7 +466,7 @@ def write_default_spec
   # Creates windows .bat files for easy running of commands
 
   def generate_windows_script(filename, bindir)
-    if Gem.win_platform? then
+    if Gem.win_platform?
       script_name = filename + ".bat"
       script_path = File.join bindir, File.basename(script_name)
       File.open script_path, 'w' do |file|
@@ -468,7 +481,7 @@ def generate_bin # :nodoc:
     return if spec.executables.nil? or spec.executables.empty?
 
     begin
-      Dir.mkdir @bin_dir
+      Dir.mkdir @bin_dir, *[options[:dir_mode] && 0755].compact
     rescue SystemCallError
       raise unless File.directory? @bin_dir
     end
@@ -479,18 +492,19 @@ def generate_bin # :nodoc:
       filename.untaint
       bin_path = File.join gem_dir, spec.bindir, filename
 
-      unless File.exist? bin_path then
+      unless File.exist? bin_path
         # TODO change this to a more useful warning
         warn "`#{bin_path}` does not exist, maybe `gem pristine #{spec.name}` will fix it?"
         next
       end
 
       mode = File.stat(bin_path).mode
-      FileUtils.chmod mode | 0111, bin_path unless (mode | 0111) == mode
+      dir_mode = options[:prog_mode] || (mode | 0111)
+      FileUtils.chmod dir_mode, bin_path unless dir_mode == mode
 
       check_executable_overwrite filename
 
-      if @wrappers then
+      if @wrappers
         generate_bin_script filename, @bin_dir
       else
         generate_bin_symlink filename, @bin_dir
@@ -513,6 +527,7 @@ def generate_bin_script(filename, bindir)
 
     File.open bin_script_path, 'wb', 0755 do |file|
       file.print app_script_text(filename)
+      file.chmod(options[:prog_mode] || 0755)
     end
 
     verbose bin_script_path
@@ -528,8 +543,8 @@ def generate_bin_symlink(filename, bindir)
     src = File.join gem_dir, spec.bindir, filename
     dst = File.join bindir, formatted_program_filename(filename)
 
-    if File.exist? dst then
-      if File.symlink? dst then
+    if File.exist? dst
+      if File.symlink? dst
         link = File.readlink(dst).split File::SEPARATOR
         cur_version = Gem::Version.create(link[-3].sub(/^.*-/, ''))
         return if spec.version < cur_version
@@ -563,7 +578,7 @@ def shebang(bin_file_name)
     path = File.join gem_dir, spec.bindir, bin_file_name
     first_line = File.open(path, "rb") {|file| file.gets}
 
-    if /\A#!/ =~ first_line then
+    if /\A#!/ =~ first_line
       # Preserve extra words on shebang line, like "-w".  Thanks RPA.
       shebang = first_line.sub(/\A\#!.*?ruby\S*((\s+\S+)+)/, "#!#{Gem.ruby}")
       opts = $1
@@ -588,9 +603,9 @@ def shebang(bin_file_name)
       end
 
       "#!#{which}"
-    elsif not ruby_name then
+    elsif not ruby_name
       "#!#{Gem.ruby}#{opts}"
-    elsif opts then
+    elsif opts
       "#!/bin/sh\n'exec' #{ruby_name.dump} '-x' \"$0\" \"$@\"\n#{shebang}"
     else
       # Create a plain shebang line.
@@ -616,9 +631,9 @@ def ensure_loadable_spec
   end
 
   def ensure_required_ruby_version_met # :nodoc:
-    if rrv = spec.required_ruby_version then
-      unless rrv.satisfied_by? Gem.ruby_version then
-        ruby_version = Gem.ruby_api_version
+    if rrv = spec.required_ruby_version
+      ruby_version = Gem.ruby_version
+      unless rrv.satisfied_by? ruby_version
         raise Gem::RuntimeRequirementNotMetError,
           "#{spec.name} requires Ruby version #{rrv}. The current ruby version is #{ruby_version}."
       end
@@ -626,8 +641,8 @@ def ensure_required_ruby_version_met # :nodoc:
   end
 
   def ensure_required_rubygems_version_met # :nodoc:
-    if rrgv = spec.required_rubygems_version then
-      unless rrgv.satisfied_by? Gem.rubygems_version then
+    if rrgv = spec.required_rubygems_version
+      unless rrgv.satisfied_by? Gem.rubygems_version
         rg_version = Gem::VERSION
         raise Gem::RuntimeRequirementNotMetError,
           "#{spec.name} requires RubyGems version #{rrgv}. The current RubyGems version is #{rg_version}. " +
@@ -687,16 +702,16 @@ def check_that_user_bin_dir_is_in_path # :nodoc:
       File::ALT_SEPARATOR
 
     path = ENV['PATH']
-    if Gem.win_platform? then
+    if Gem.win_platform?
       path = path.downcase
       user_bin_dir = user_bin_dir.downcase
     end
 
     path = path.split(File::PATH_SEPARATOR)
 
-    unless path.include? user_bin_dir then
+    unless path.include? user_bin_dir
       unless !Gem.win_platform? && (path.include? user_bin_dir.sub(ENV['HOME'], '~'))
-        unless self.class.path_warning then
+        unless self.class.path_warning
           alert_warning "You don't have #{user_bin_dir} in your PATH,\n\t  gem executables will not run."
           self.class.path_warning = true
         end
@@ -705,31 +720,14 @@ def check_that_user_bin_dir_is_in_path # :nodoc:
   end
 
   def verify_gem_home(unpack = false) # :nodoc:
-    FileUtils.mkdir_p gem_home
+    FileUtils.mkdir_p gem_home, :mode => options[:dir_mode] && 0755
     raise Gem::FilePermissionError, gem_home unless
       unpack or File.writable?(gem_home)
   end
 
-  def verify_spec
-    unless spec.name =~ Gem::Specification::VALID_NAME_PATTERN
-      raise Gem::InstallError, "#{spec} has an invalid name"
-    end
-
-    if spec.raw_require_paths.any?{|path| path =~ /\r\n|\r|\n/ }
-      raise Gem::InstallError, "#{spec} has an invalid require_paths"
-    end
-
-    if spec.extensions.any?{|ext| ext =~ /\r\n|\r|\n/ }
-      raise Gem::InstallError, "#{spec} has an invalid extensions"
-    end
-
-    unless spec.specification_version.to_s =~ /\A\d+\z/
-      raise Gem::InstallError, "#{spec} has an invalid specification_version"
-    end
-
-    if spec.dependencies.any? {|dep| dep.type =~ /\r\n|\r|\n/ || dep.name =~ /\r\n|\r|\n/ }
-      raise Gem::InstallError, "#{spec} has an invalid dependencies"
-    end
+  def verify_spec_name
+    return if spec.name =~ Gem::Specification::VALID_NAME_PATTERN
+    raise Gem::InstallError, "#{spec} has an invalid name"
   end
 
   ##
@@ -751,11 +749,11 @@ def app_script_text(bin_file_name)
 
 version = "#{Gem::Requirement.default}.a"
 
-if ARGV.first
-  str = ARGV.first
-  str = str.dup.force_encoding("BINARY") if str.respond_to? :force_encoding
-  if str =~ /\\A_(.*)_\\z/ and Gem::Version.correct?($1) then
-    version = $1
+str = ARGV.first
+if str
+  str = str.b[/\\A_(.*)_\\z/, 1]
+  if str and Gem::Version.correct?(str)
+    version = str
     ARGV.shift
   end
 end
@@ -773,17 +771,38 @@ def app_script_text(bin_file_name)
   # return the stub script text used to launch the true Ruby script
 
   def windows_stub_script(bindir, bin_file_name)
-    ruby = Gem.ruby.gsub(/^\"|\"$/, "").tr(File::SEPARATOR, "\\")
-    return <<-TEXT
+    rb_config = RbConfig::CONFIG
+    rb_topdir = RbConfig::TOPDIR || File.dirname(rb_config["bindir"])
+
+    # get ruby executable file name from RbConfig
+    ruby_exe = "#{rb_config['RUBY_INSTALL_NAME']}#{rb_config['EXEEXT']}"
+    ruby_exe = "ruby.exe" if ruby_exe.empty?
+
+    if File.exist?(File.join bindir, ruby_exe)
+      # stub & ruby.exe withing same folder.  Portable
+      <<-TEXT
 @ECHO OFF
-IF NOT "%~f0" == "~f0" GOTO :WinNT
-@"#{ruby}" "#{File.join(bindir, bin_file_name)}" %1 %2 %3 %4 %5 %6 %7 %8 %9
-GOTO :EOF
-:WinNT
-@"#{ruby}" "%~dpn0" %*
-TEXT
+@"%~dp0ruby.exe" "%~dpn0" %*
+      TEXT
+    elsif bindir.downcase.start_with? rb_topdir.downcase
+      # stub within ruby folder, but not standard bin.  Portable
+      require 'pathname'
+      from = Pathname.new bindir
+      to   = Pathname.new "#{rb_topdir}/bin"
+      rel  = to.relative_path_from from
+      <<-TEXT
+@ECHO OFF
+@"%~dp0#{rel}/ruby.exe" "%~dpn0" %*
+      TEXT
+    else
+      # outside ruby folder, maybe -user-install or bundler.  Portable, but ruby
+      # is dependent on PATH
+      <<-TEXT
+@ECHO OFF
+@ruby.exe "%~dpn0" %*
+      TEXT
+    end
   end
-
   ##
   # Builds extensions.  Valid types of extensions are extconf.rb files,
   # configure scripts and rakefiles or mkrf_conf files.
@@ -828,7 +847,7 @@ def extract_bin
   # Prefix and suffix the program filename the same as ruby.
 
   def formatted_program_filename(filename)
-    if @format_executable then
+    if @format_executable
       self.class.exec_format % File.basename(filename)
     else
       filename
@@ -857,12 +876,10 @@ def dir
   def pre_install_checks
     verify_gem_home options[:unpack]
 
-    # The name and require_paths must be verified first, since it could contain
-    # ruby code that would be eval'ed in #ensure_loadable_spec
-    verify_spec
-
     ensure_loadable_spec
 
+    verify_spec_name
+
     if options[:install_as_default]
       Gem.ensure_default_gem_subdirectories gem_home
     else
@@ -887,7 +904,8 @@ def write_build_info_file
 
     build_info_dir = File.join gem_home, 'build_info'
 
-    FileUtils.mkdir_p build_info_dir
+    dir_mode = options[:dir_mode]
+    FileUtils.mkdir_p build_info_dir, :mode => dir_mode && 0755
 
     build_info_file = File.join build_info_dir, "#{spec.full_name}.info"
 
@@ -896,6 +914,8 @@ def write_build_info_file
         io.puts arg
       end
     end
+
+    File.chmod(dir_mode, build_info_dir) if dir_mode
   end
 
   ##
diff --git a/lib/ruby/stdlib/rubygems/installer_test_case.rb b/lib/ruby/stdlib/rubygems/installer_test_case.rb
index 4cec5da3f4c..d6d16a9194d 100644
--- a/lib/ruby/stdlib/rubygems/installer_test_case.rb
+++ b/lib/ruby/stdlib/rubygems/installer_test_case.rb
@@ -1,7 +1,6 @@
 # frozen_string_literal: true
 require 'rubygems/test_case'
 require 'rubygems/installer'
-require 'rubygems/deprecate'
 
 class Gem::Installer
 
@@ -107,18 +106,6 @@ def setup
     Gem::Installer.path_warning = false
   end
 
-  def util_gem_bindir spec = @spec # :nodoc:
-    spec.bin_dir
-  end
-
-  def util_gem_dir spec = @spec # :nodoc:
-    spec.gem_dir
-  end
-
-  extend Gem::Deprecate
-  deprecate :util_gem_bindir, "@spec.bin_dir", 2016, 10
-  deprecate :util_gem_dir, "@spec.gem_dir", 2016, 10
-
   ##
   # The path where installed executables live
 
@@ -196,4 +183,3 @@ def util_installer(spec, gem_home, user=false)
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/local_remote_options.rb b/lib/ruby/stdlib/rubygems/local_remote_options.rb
index 597b87ea034..9fa256b08a0 100644
--- a/lib/ruby/stdlib/rubygems/local_remote_options.rb
+++ b/lib/ruby/stdlib/rubygems/local_remote_options.rb
@@ -24,8 +24,10 @@ def accept_uri_http
         raise OptionParser::InvalidArgument, value
       end
 
-      unless ['http', 'https', 'file', 's3'].include?(uri.scheme)
-         raise OptionParser::InvalidArgument, value
+      valid_uri_schemes = ["http", "https", "file", "s3"]
+      unless valid_uri_schemes.include?(uri.scheme)
+        msg =  "Invalid uri scheme for #{value}\nPreface URLs with one of #{valid_uri_schemes.map{|s| "#{s}://"}}"
+        raise ArgumentError, msg
       end
 
       value
@@ -106,7 +108,7 @@ def add_source_option
 
       source << '/' if source !~ /\/\z/
 
-      if options.delete :sources_cleared then
+      if options.delete :sources_cleared
         Gem.sources = [source]
       else
         Gem.sources << source unless Gem.sources.include?(source)
@@ -146,4 +148,3 @@ def remote?
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/mock_gem_ui.rb b/lib/ruby/stdlib/rubygems/mock_gem_ui.rb
index 0223f8c35d5..92ec85625c4 100644
--- a/lib/ruby/stdlib/rubygems/mock_gem_ui.rb
+++ b/lib/ruby/stdlib/rubygems/mock_gem_ui.rb
@@ -12,7 +12,7 @@ class Gem::MockGemUi < Gem::StreamUI
 
   class InputEOFError < RuntimeError
 
-    def initialize question
+    def initialize(question)
       super "Out of input for MockGemUi on #{question.inspect}"
     end
 
@@ -21,7 +21,7 @@ def initialize question
   class TermError < RuntimeError
     attr_reader :exit_code
 
-    def initialize exit_code
+    def initialize(exit_code)
       super
       @exit_code = exit_code
     end
@@ -56,7 +56,7 @@ def initialize(input = "")
     @terminated = false
   end
 
-  def ask question
+  def ask(question)
     raise InputEOFError, question if @ins.eof?
 
     super
@@ -86,4 +86,3 @@ def terminate_interaction(status=0)
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/name_tuple.rb b/lib/ruby/stdlib/rubygems/name_tuple.rb
index 316329a0bd3..e948fb3d865 100644
--- a/lib/ruby/stdlib/rubygems/name_tuple.rb
+++ b/lib/ruby/stdlib/rubygems/name_tuple.rb
@@ -24,7 +24,7 @@ def initialize(name, version, platform="ruby")
   # Turn an array of [name, version, platform] into an array of
   # NameTuple objects.
 
-  def self.from_list list
+  def self.from_list(list)
     list.map { |t| new(*t) }
   end
 
@@ -32,7 +32,7 @@ def self.from_list list
   # Turn an array of NameTuple objects back into an array of
   # [name, version, platform] tuples.
 
-  def self.to_basic list
+  def self.to_basic(list)
     list.map { |t| t.to_a }
   end
 
@@ -90,7 +90,7 @@ def inspect # :nodoc:
 
   alias to_s inspect # :nodoc:
 
-  def <=> other
+  def <=>(other)
     [@name, @version, @platform == Gem::Platform::RUBY ? -1 : 1] <=>
       [other.name, other.version,
        other.platform == Gem::Platform::RUBY ? -1 : 1]
@@ -102,7 +102,7 @@ def <=> other
   # Compare with +other+. Supports another NameTuple or an Array
   # in the [name, version, platform] format.
 
-  def == other
+  def ==(other)
     case other
     when self.class
       @name == other.name and
diff --git a/lib/ruby/stdlib/rubygems/package.rb b/lib/ruby/stdlib/rubygems/package.rb
index 1498de050e7..8695b85fec7 100644
--- a/lib/ruby/stdlib/rubygems/package.rb
+++ b/lib/ruby/stdlib/rubygems/package.rb
@@ -55,7 +55,7 @@ class Error < Gem::Exception; end
   class FormatError < Error
     attr_reader :path
 
-    def initialize message, source = nil
+    def initialize(message, source = nil)
       if source
         @path = source.path
 
@@ -68,7 +68,7 @@ def initialize message, source = nil
   end
 
   class PathError < Error
-    def initialize destination, destination_dir
+    def initialize(destination, destination_dir)
       super "installing into parent path %s of %s is not allowed" %
               [destination, destination_dir]
     end
@@ -107,12 +107,24 @@ class TarInvalidError < Error; end
 
   attr_writer :spec
 
-  def self.build spec, skip_validation=false
-    gem_file = spec.file_name
+  ##
+  # Permission for directories
+  attr_accessor :dir_mode
+
+  ##
+  # Permission for program files
+  attr_accessor :prog_mode
+
+  ##
+  # Permission for other files
+  attr_accessor :data_mode
+
+  def self.build(spec, skip_validation = false, strict_validation = false, file_name = nil)
+    gem_file = file_name || spec.file_name
 
     package = new gem_file
     package.spec = spec
-    package.build skip_validation
+    package.build skip_validation, strict_validation
 
     gem_file
   end
@@ -124,7 +136,7 @@ def self.build spec, skip_validation=false
   # If +gem+ is an existing file in the old format a Gem::Package::Old will be
   # returned.
 
-  def self.new gem, security_policy = nil
+  def self.new(gem, security_policy = nil)
     gem = if gem.is_a?(Gem::Package::Source)
             gem
           elsif gem.respond_to? :read
@@ -145,10 +157,10 @@ def self.new gem, security_policy = nil
   ##
   # Creates a new package that will read or write to the file +gem+.
 
-  def initialize gem, security_policy # :notnew:
+  def initialize(gem, security_policy) # :notnew:
     @gem = gem
 
-    @build_time      = Time.now
+    @build_time      = ENV["SOURCE_DATE_EPOCH"] ? Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc : Time.now
     @checksums       = {}
     @contents        = nil
     @digests         = Hash.new { |h, algorithm| h[algorithm] = {} }
@@ -162,14 +174,14 @@ def initialize gem, security_policy # :notnew:
   ##
   # Copies this package to +path+ (if possible)
 
-  def copy_to path
+  def copy_to(path)
     FileUtils.cp @gem.path, path unless File.exist? path
   end
 
   ##
   # Adds a checksum for each entry in the gem to checksums.yaml.gz.
 
-  def add_checksums tar
+  def add_checksums(tar)
     Gem.load_yaml
 
     checksums_by_algorithm = Hash.new { |h, algorithm| h[algorithm] = {} }
@@ -191,7 +203,7 @@ def add_checksums tar
   # Adds the files listed in the packages's Gem::Specification to data.tar.gz
   # and adds this file to the +tar+.
 
-  def add_contents tar # :nodoc:
+  def add_contents(tar) # :nodoc:
     digests = tar.add_file_signed 'data.tar.gz', 0444, @signer do |io|
       gzip_to io do |gz_io|
         Gem::Package::TarWriter.new gz_io do |data_tar|
@@ -206,13 +218,18 @@ def add_contents tar # :nodoc:
   ##
   # Adds files included the package's Gem::Specification to the +tar+ file
 
-  def add_files tar # :nodoc:
+  def add_files(tar) # :nodoc:
     @spec.files.each do |file|
       stat = File.lstat file
 
       if stat.symlink?
-        relative_dir = File.dirname(file).sub("#{Dir.pwd}/", '')
-        target_path = File.join(relative_dir, File.readlink(file))
+        target_path = File.readlink(file)
+
+        unless target_path.start_with? '.'
+          relative_dir = File.dirname(file).sub("#{Dir.pwd}/", '')
+          target_path = File.join(relative_dir, target_path)
+        end
+
         tar.add_symlink file, target_path, stat.mode
       end
 
@@ -229,7 +246,7 @@ def add_files tar # :nodoc:
   ##
   # Adds the package's Gem::Specification to the +tar+ file
 
-  def add_metadata tar # :nodoc:
+  def add_metadata(tar) # :nodoc:
     digests = tar.add_file_signed 'metadata.gz', 0444, @signer do |io|
       gzip_to io do |gz_io|
         gz_io.write @spec.to_yaml
@@ -242,14 +259,20 @@ def add_metadata tar # :nodoc:
   ##
   # Builds this package based on the specification set by #spec=
 
-  def build skip_validation = false
+  def build(skip_validation = false, strict_validation = false)
+    raise ArgumentError, "skip_validation = true and strict_validation = true are incompatible" if skip_validation && strict_validation
+
     Gem.load_yaml
     require 'rubygems/security'
 
     @spec.mark_version
-    @spec.validate unless skip_validation
+    @spec.validate true, strict_validation unless skip_validation
 
-    setup_signer
+    setup_signer(
+      signer_options: {
+        expiration_length_days: Gem.configuration.cert_expiration_length_days
+      }
+    )
 
     @gem.with_write_io do |gem_io|
       Gem::Package::TarWriter.new gem_io do |gem|
@@ -263,7 +286,7 @@ def build skip_validation = false
   Successfully built RubyGem
   Name: #{@spec.name}
   Version: #{@spec.version}
-  File: #{File.basename @spec.cache_file}
+  File: #{File.basename @gem.path}
 EOM
   ensure
     @signer = nil
@@ -300,8 +323,8 @@ def contents
   # Creates a digest of the TarEntry +entry+ from the digest algorithm set by
   # the security policy.
 
-  def digest entry # :nodoc:
-    algorithms = if @checksums then
+  def digest(entry) # :nodoc:
+    algorithms = if @checksums
                    @checksums.keys
                  else
                    [Gem::Security::DIGEST_NAME].compact
@@ -309,7 +332,7 @@ def digest entry # :nodoc:
 
     algorithms.each do |algorithm|
       digester =
-        if defined?(OpenSSL::Digest) then
+        if defined?(OpenSSL::Digest)
           OpenSSL::Digest.new algorithm
         else
           Digest.const_get(algorithm).new
@@ -331,10 +354,10 @@ def digest entry # :nodoc:
   # If +pattern+ is specified, only entries matching that glob will be
   # extracted.
 
-  def extract_files destination_dir, pattern = "*"
+  def extract_files(destination_dir, pattern = "*")
     verify unless @spec
 
-    FileUtils.mkdir_p destination_dir
+    FileUtils.mkdir_p destination_dir, :mode => dir_mode && 0755
 
     @gem.with_read_io do |io|
       reader = Gem::Package::TarReader.new io
@@ -360,7 +383,8 @@ def extract_files destination_dir, pattern = "*"
   # If +pattern+ is specified, only entries matching that glob will be
   # extracted.
 
-  def extract_tar_gz io, destination_dir, pattern = "*" # :nodoc:
+  def extract_tar_gz(io, destination_dir, pattern = "*") # :nodoc:
+    directories = [] if dir_mode
     open_tar_gz io do |tar|
       tar.each do |entry|
         next unless File.fnmatch pattern, entry.full_name, File::FNM_DOTMATCH
@@ -370,19 +394,20 @@ def extract_tar_gz io, destination_dir, pattern = "*" # :nodoc:
         FileUtils.rm_rf destination
 
         mkdir_options = {}
-        mkdir_options[:mode] = entry.header.mode if entry.directory?
+        mkdir_options[:mode] = dir_mode ? 0755 : (entry.header.mode if entry.directory?)
         mkdir =
-          if entry.directory? then
+          if entry.directory?
             destination
           else
             File.dirname destination
           end
+        directories << mkdir if directories
 
         mkdir_p_safe mkdir, mkdir_options, destination_dir, entry.full_name
 
         File.open destination, 'wb' do |out|
           out.write entry.read
-          FileUtils.chmod entry.header.mode, destination
+          FileUtils.chmod file_mode(entry.header.mode), destination
         end if entry.file?
 
         File.symlink(entry.header.linkname, destination) if entry.symlink?
@@ -390,6 +415,15 @@ def extract_tar_gz io, destination_dir, pattern = "*" # :nodoc:
         verbose destination
       end
     end
+
+    if directories
+      directories.uniq!
+      File.chmod(dir_mode, *directories)
+    end
+  end
+
+  def file_mode(mode) # :nodoc:
+    ((mode & 0111).zero? ? data_mode : prog_mode) || mode
   end
 
   ##
@@ -398,7 +432,7 @@ def extract_tar_gz io, destination_dir, pattern = "*" # :nodoc:
   # Also sets the gzip modification time to the package build time to ease
   # testing.
 
-  def gzip_to io # :yields: gz_io
+  def gzip_to(io) # :yields: gz_io
     gz_io = Zlib::GzipWriter.new io, Zlib::BEST_COMPRESSION
     gz_io.mtime = @build_time
 
@@ -412,29 +446,16 @@ def gzip_to io # :yields: gz_io
   #
   # If +filename+ is not inside +destination_dir+ an exception is raised.
 
-  def install_location filename, destination_dir # :nodoc:
+  def install_location(filename, destination_dir) # :nodoc:
     raise Gem::Package::PathError.new(filename, destination_dir) if
       filename.start_with? '/'
 
-    destination_dir = realpath destination_dir
-    destination_dir = File.expand_path destination_dir
-
-    destination = File.join destination_dir, filename
-    destination = File.expand_path destination
+    destination_dir = File.expand_path(File.realpath(destination_dir))
+    destination = File.expand_path(File.join(destination_dir, filename))
 
     raise Gem::Package::PathError.new(destination, destination_dir) unless
       destination.start_with? destination_dir + '/'
 
-    begin
-      real_destination = File.expand_path(File.realpath(destination))
-    rescue
-      # it's fine if the destination doesn't exist, because rm -rf'ing it can't cause any damage
-      nil
-    else
-      raise Gem::Package::PathError.new(real_destination, destination_dir) unless
-        real_destination.start_with? destination_dir + '/'
-    end
-
     destination.untaint
     destination
   end
@@ -447,11 +468,11 @@ def normalize_path(pathname)
     end
   end
 
-  def mkdir_p_safe mkdir, mkdir_options, destination_dir, file_name
-    destination_dir = realpath File.expand_path(destination_dir)
+  def mkdir_p_safe(mkdir, mkdir_options, destination_dir, file_name)
+    destination_dir = File.realpath(File.expand_path(destination_dir))
     parts = mkdir.split(File::SEPARATOR)
     parts.reduce do |path, basename|
-      path = realpath path  unless path == ""
+      path = File.realpath(path) unless path == ""
       path = File.expand_path(path + File::SEPARATOR + basename)
       lstat = File.lstat path rescue nil
       if !lstat || !lstat.directory?
@@ -466,15 +487,14 @@ def mkdir_p_safe mkdir, mkdir_options, destination_dir, file_name
   ##
   # Loads a Gem::Specification from the TarEntry +entry+
 
-  def load_spec entry # :nodoc:
+  def load_spec(entry) # :nodoc:
     case entry.full_name
     when 'metadata' then
       @spec = Gem::Specification.from_yaml entry.read
     when 'metadata.gz' then
       args = [entry]
       args << { :external_encoding => Encoding::UTF_8 } if
-        Object.const_defined?(:Encoding) &&
-          Zlib::GzipReader.method(:wrap).arity != 1
+        Zlib::GzipReader.method(:wrap).arity != 1
 
       Zlib::GzipReader.wrap(*args) do |gzio|
         @spec = Gem::Specification.from_yaml gzio.read
@@ -485,7 +505,7 @@ def load_spec entry # :nodoc:
   ##
   # Opens +io+ as a gzipped tar archive
 
-  def open_tar_gz io # :nodoc:
+  def open_tar_gz(io) # :nodoc:
     Zlib::GzipReader.wrap io do |gzio|
       tar = Gem::Package::TarReader.new gzio
 
@@ -496,7 +516,7 @@ def open_tar_gz io # :nodoc:
   ##
   # Reads and loads checksums.yaml.gz from the tar file +gem+
 
-  def read_checksums gem
+  def read_checksums(gem)
     Gem.load_yaml
 
     @checksums = gem.seek 'checksums.yaml.gz' do |entry|
@@ -510,10 +530,17 @@ def read_checksums gem
   # Prepares the gem for signing and checksum generation.  If a signing
   # certificate and key are not present only checksum generation is set up.
 
-  def setup_signer
+  def setup_signer(signer_options: {})
     passphrase = ENV['GEM_PRIVATE_KEY_PASSPHRASE']
-    if @spec.signing_key then
-      @signer = Gem::Security::Signer.new @spec.signing_key, @spec.cert_chain, passphrase
+    if @spec.signing_key
+      @signer =
+        Gem::Security::Signer.new(
+          @spec.signing_key,
+          @spec.cert_chain,
+          passphrase,
+          signer_options
+        )
+
       @spec.signing_key = nil
       @spec.cert_chain = @signer.cert_chain.map { |cert| cert.to_s }
     else
@@ -578,14 +605,14 @@ def verify
   # Verifies the +checksums+ against the +digests+.  This check is not
   # cryptographically secure.  Missing checksums are ignored.
 
-  def verify_checksums digests, checksums # :nodoc:
+  def verify_checksums(digests, checksums) # :nodoc:
     return unless checksums
 
     checksums.sort.each do |algorithm, gem_digests|
       gem_digests.sort.each do |file_name, gem_hexdigest|
         computed_digest = digests[algorithm][file_name]
 
-        unless computed_digest.hexdigest == gem_hexdigest then
+        unless computed_digest.hexdigest == gem_hexdigest
           raise Gem::Package::FormatError.new \
             "#{algorithm} checksum mismatch for #{file_name}", @gem
         end
@@ -596,7 +623,7 @@ def verify_checksums digests, checksums # :nodoc:
   ##
   # Verifies +entry+ in a .gem file.
 
-  def verify_entry entry
+  def verify_entry(entry)
     file_name = entry.full_name
     @files << file_name
 
@@ -623,16 +650,16 @@ def verify_entry entry
   ##
   # Verifies the files of the +gem+
 
-  def verify_files gem
+  def verify_files(gem)
     gem.each do |entry|
       verify_entry entry
     end
 
-    unless @spec then
+    unless @spec
       raise Gem::Package::FormatError.new 'package metadata is missing', @gem
     end
 
-    unless @files.include? 'data.tar.gz' then
+    unless @files.include? 'data.tar.gz'
       raise Gem::Package::FormatError.new \
               'package content (data.tar.gz) is missing', @gem
     end
@@ -645,7 +672,7 @@ def verify_files gem
   ##
   # Verifies that +entry+ is a valid gzipped file.
 
-  def verify_gz entry # :nodoc:
+  def verify_gz(entry) # :nodoc:
     Zlib::GzipReader.wrap entry do |gzio|
       gzio.read 16384 until gzio.eof? # gzip checksum verification
     end
@@ -653,16 +680,6 @@ def verify_gz entry # :nodoc:
     raise Gem::Package::FormatError.new(e.message, entry.full_name)
   end
 
-  if File.respond_to? :realpath
-    def realpath file
-      File.realpath file
-    end
-  else
-    def realpath file
-      file
-    end
-  end
-
 end
 
 require 'rubygems/package/digest_io'
diff --git a/lib/ruby/stdlib/rubygems/package/digest_io.rb b/lib/ruby/stdlib/rubygems/package/digest_io.rb
index 4930c9aa7d8..d9e6c3c0219 100644
--- a/lib/ruby/stdlib/rubygems/package/digest_io.rb
+++ b/lib/ruby/stdlib/rubygems/package/digest_io.rb
@@ -31,7 +31,7 @@ class Gem::Package::DigestIO
   #   digests['SHA1'].hexdigest   #=> "aaf4c61d[...]"
   #   digests['SHA512'].hexdigest #=> "9b71d224[...]"
 
-  def self.wrap io, digests
+  def self.wrap(io, digests)
     digest_io = new io, digests
 
     yield digest_io
@@ -43,7 +43,7 @@ def self.wrap io, digests
   # Creates a new DigestIO instance.  Using ::wrap is recommended, see the
   # ::wrap documentation for documentation of +io+ and +digests+.
 
-  def initialize io, digests
+  def initialize(io, digests)
     @io = io
     @digests = digests
   end
@@ -51,7 +51,7 @@ def initialize io, digests
   ##
   # Writes +data+ to the underlying IO and updates the digests
 
-  def write data
+  def write(data)
     result = @io.write data
 
     @digests.each do |_, digest|
@@ -62,4 +62,3 @@ def write data
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/package/file_source.rb b/lib/ruby/stdlib/rubygems/package/file_source.rb
index ecc3a686774..8a4f9da6f2e 100644
--- a/lib/ruby/stdlib/rubygems/package/file_source.rb
+++ b/lib/ruby/stdlib/rubygems/package/file_source.rb
@@ -10,7 +10,7 @@ class Gem::Package::FileSource < Gem::Package::Source # :nodoc: all
 
   attr_reader :path
 
-  def initialize path
+  def initialize(path)
     @path = path
   end
 
@@ -22,13 +22,12 @@ def present?
     File.exist? path
   end
 
-  def with_write_io &block
+  def with_write_io(&block)
     File.open path, 'wb', &block
   end
 
-  def with_read_io &block
+  def with_read_io(&block)
     File.open path, 'rb', &block
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/package/io_source.rb b/lib/ruby/stdlib/rubygems/package/io_source.rb
index ee79a21083f..669a859d0ae 100644
--- a/lib/ruby/stdlib/rubygems/package/io_source.rb
+++ b/lib/ruby/stdlib/rubygems/package/io_source.rb
@@ -11,7 +11,7 @@ class Gem::Package::IOSource < Gem::Package::Source # :nodoc: all
 
   attr_reader :io
 
-  def initialize io
+  def initialize(io)
     @io = io
   end
 
@@ -43,4 +43,3 @@ def path
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/package/old.rb b/lib/ruby/stdlib/rubygems/package/old.rb
index 322d682ca89..f574b989aa5 100644
--- a/lib/ruby/stdlib/rubygems/package/old.rb
+++ b/lib/ruby/stdlib/rubygems/package/old.rb
@@ -19,7 +19,7 @@ class Gem::Package::Old < Gem::Package
   # Creates a new old-format package reader for +gem+.  Old-format packages
   # cannot be written.
 
-  def initialize gem, security_policy
+  def initialize(gem, security_policy)
     require 'fileutils'
     require 'zlib'
     Gem.load_yaml
@@ -49,7 +49,7 @@ def contents
   ##
   # Extracts the files in this package into +destination_dir+
 
-  def extract_files destination_dir
+  def extract_files(destination_dir)
     verify
 
     errstr = "Error reading files from gem"
@@ -78,9 +78,9 @@ def extract_files destination_dir
 
         FileUtils.rm_rf destination
 
-        FileUtils.mkdir_p File.dirname destination
+        FileUtils.mkdir_p File.dirname(destination), :mode => dir_mode && 0755
 
-        File.open destination, 'wb', entry['mode'] do |out|
+        File.open destination, 'wb', file_mode(entry['mode']) do |out|
           out.write file_data
         end
 
@@ -94,7 +94,7 @@ def extract_files destination_dir
   ##
   # Reads the file list section from the old-format gem +io+
 
-  def file_list io # :nodoc:
+  def file_list(io) # :nodoc:
     header = String.new
 
     read_until_dashes io do |line|
@@ -107,7 +107,7 @@ def file_list io # :nodoc:
   ##
   # Reads lines until a "---" separator is found
 
-  def read_until_dashes io # :nodoc:
+  def read_until_dashes(io) # :nodoc:
     while (line = io.gets) && line.chomp.strip != "---" do
       yield line if block_given?
     end
@@ -116,7 +116,7 @@ def read_until_dashes io # :nodoc:
   ##
   # Skips the Ruby self-install header in +io+.
 
-  def skip_ruby io # :nodoc:
+  def skip_ruby(io) # :nodoc:
     loop do
       line = io.gets
 
@@ -144,17 +144,9 @@ def spec
       end
     end
 
-    yaml_error = if RUBY_VERSION < '1.9' then
-                   YAML::ParseError
-                 elsif YAML.const_defined?(:ENGINE) && YAML::ENGINE.yamler == 'syck' then
-                   YAML::ParseError
-                 else
-                   YAML::SyntaxError
-                 end
-
     begin
       @spec = Gem::Specification.from_yaml yaml
-    rescue yaml_error
+    rescue YAML::SyntaxError
       raise Gem::Exception, "Failed to parse gem specification out of gem file"
     end
   rescue ArgumentError
diff --git a/lib/ruby/stdlib/rubygems/package/source.rb b/lib/ruby/stdlib/rubygems/package/source.rb
index fe19776c385..69701e55e9c 100644
--- a/lib/ruby/stdlib/rubygems/package/source.rb
+++ b/lib/ruby/stdlib/rubygems/package/source.rb
@@ -1,4 +1,3 @@
 # frozen_string_literal: true
 class Gem::Package::Source # :nodoc:
 end
-
diff --git a/lib/ruby/stdlib/rubygems/package/tar_header.rb b/lib/ruby/stdlib/rubygems/package/tar_header.rb
index fa1f5b6e46f..c7b5f88dbde 100644
--- a/lib/ruby/stdlib/rubygems/package/tar_header.rb
+++ b/lib/ruby/stdlib/rubygems/package/tar_header.rb
@@ -50,7 +50,7 @@ class Gem::Package::TarHeader
     :uid,
     :uname,
     :version,
-  ]
+  ].freeze
 
   ##
   # Pack format for a tar header
@@ -134,7 +134,7 @@ def self.strict_oct(str)
   # Creates a new TarHeader using +vals+
 
   def initialize(vals)
-    unless vals[:name] && vals[:size] && vals[:prefix] && vals[:mode] then
+    unless vals[:name] && vals[:size] && vals[:prefix] && vals[:mode]
       raise ArgumentError, ":name, :size, :prefix and :mode required"
     end
 
diff --git a/lib/ruby/stdlib/rubygems/package/tar_reader.rb b/lib/ruby/stdlib/rubygems/package/tar_reader.rb
index 1098336e36e..f64915eaeab 100644
--- a/lib/ruby/stdlib/rubygems/package/tar_reader.rb
+++ b/lib/ruby/stdlib/rubygems/package/tar_reader.rb
@@ -92,11 +92,9 @@ def each
   # NOTE: Do not call #rewind during #each
 
   def rewind
-    if @init_pos == 0 then
-      raise Gem::Package::NonSeekableIO unless @io.respond_to? :rewind
+    if @init_pos == 0
       @io.rewind
     else
-      raise Gem::Package::NonSeekableIO unless @io.respond_to? :pos=
       @io.pos = @init_pos
     end
   end
@@ -106,7 +104,7 @@ def rewind
   # yields it.  Rewinds the tar file to the beginning when the block
   # terminates.
 
-  def seek name # :yields: entry
+  def seek(name) # :yields: entry
     found = find do |entry|
       entry.full_name == name
     end
diff --git a/lib/ruby/stdlib/rubygems/package/tar_reader/entry.rb b/lib/ruby/stdlib/rubygems/package/tar_reader/entry.rb
index 5f958edc2f5..19054c16356 100644
--- a/lib/ruby/stdlib/rubygems/package/tar_reader/entry.rb
+++ b/lib/ruby/stdlib/rubygems/package/tar_reader/entry.rb
@@ -64,7 +64,7 @@ def eof?
   # Full name of the tar entry
 
   def full_name
-    if @header.prefix != "" then
+    if @header.prefix != ""
       File.join @header.prefix, @header.name
     else
       @header.name
@@ -119,6 +119,12 @@ def pos
     bytes_read
   end
 
+  def size
+    @header.size
+  end
+
+  alias length size
+
   ##
   # Reads +len+ bytes from the tar file entry, or the rest of the entry if
   # nil
@@ -137,7 +143,19 @@ def read(len = nil)
     ret
   end
 
-  alias readpartial read # :nodoc:
+  def readpartial(maxlen = nil, outbuf = "".b)
+    check_closed
+
+    raise EOFError if @read >= @header.size
+
+    maxlen ||= @header.size - @read
+    max_read = [maxlen, @header.size - @read].min
+
+    @io.readpartial(max_read, outbuf)
+    @read += outbuf.size
+
+    outbuf
+  end
 
   ##
   # Rewinds to the beginning of the tar file entry
@@ -145,8 +163,6 @@ def read(len = nil)
   def rewind
     check_closed
 
-    raise Gem::Package::NonSeekableIO unless @io.respond_to? :pos=
-
     @io.pos = @orig_pos
     @read = 0
   end
diff --git a/lib/ruby/stdlib/rubygems/package/tar_test_case.rb b/lib/ruby/stdlib/rubygems/package/tar_test_case.rb
index 46ac949587f..75978c8ed00 100644
--- a/lib/ruby/stdlib/rubygems/package/tar_test_case.rb
+++ b/lib/ruby/stdlib/rubygems/package/tar_test_case.rb
@@ -52,7 +52,7 @@ def assert_headers_equal(expected, actual)
       name = fields.shift
       length = fields.shift.to_i
 
-      if name == "checksum" then
+      if name == "checksum"
         chksum_off = offset
         offset += length
         next
@@ -94,13 +94,7 @@ def header(type, fname, dname, length, mode, mtime, checksum = nil, linkname = "
       ASCIIZ(dname, 155)     # char prefix[155];   ASCII + (Z unless filled)
     ]
 
-    format = "C100C8C8C8C12C12C8CC100C6C2C32C32C8C8C155"
-    h = if RUBY_VERSION >= "1.9" then
-          arr.join
-        else
-          arr = arr.join("").split(//).map{|x| x[0]}
-          arr.pack format
-        end
+    h = arr.join
     ret = h + "\0" * (512 - h.size)
     assert_equal(512, ret.size)
     ret
diff --git a/lib/ruby/stdlib/rubygems/package/tar_writer.rb b/lib/ruby/stdlib/rubygems/package/tar_writer.rb
index 6ff619be307..87ee39a9449 100644
--- a/lib/ruby/stdlib/rubygems/package/tar_writer.rb
+++ b/lib/ruby/stdlib/rubygems/package/tar_writer.rb
@@ -106,8 +106,6 @@ def initialize(io)
   def add_file(name, mode) # :yields: io
     check_closed
 
-    raise Gem::Package::NonSeekableIO unless @io.respond_to? :pos=
-
     name, prefix = split_name name
 
     init_pos = @io.pos
@@ -125,7 +123,7 @@ def add_file(name, mode) # :yields: io
 
     header = Gem::Package::TarHeader.new :name => name, :mode => mode,
                                          :size => size, :prefix => prefix,
-                                         :mtime => Time.now
+                                         :mtime => ENV["SOURCE_DATE_EPOCH"] ? Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc : Time.now
 
     @io.write header
     @io.pos = final_pos
@@ -141,11 +139,11 @@ def add_file(name, mode) # :yields: io
   #
   # The created digest object is returned.
 
-  def add_file_digest name, mode, digest_algorithms # :yields: io
+  def add_file_digest(name, mode, digest_algorithms) # :yields: io
     digests = digest_algorithms.map do |digest_algorithm|
       digest = digest_algorithm.new
       digest_name =
-        if digest.respond_to? :name then
+        if digest.respond_to? :name
           digest.name
         else
           /::([^:]+)$/ =~ digest_algorithm.name
@@ -174,7 +172,7 @@ def add_file_digest name, mode, digest_algorithms # :yields: io
   #
   # Returns the digest.
 
-  def add_file_signed name, mode, signer
+  def add_file_signed(name, mode, signer)
     digest_algorithms = [
       signer.digest_algorithm,
       Digest::SHA512,
@@ -186,7 +184,7 @@ def add_file_signed name, mode, signer
 
     signature_digest = digests.values.compact.find do |digest|
       digest_name =
-        if digest.respond_to? :name then
+        if digest.respond_to? :name
           digest.name
         else
           digest.class.name[/::([^:]+)\z/, 1]
@@ -197,7 +195,7 @@ def add_file_signed name, mode, signer
 
     raise "no #{signer.digest_name} in #{digests.values.compact}" unless signature_digest
 
-    if signer.key then
+    if signer.key
       signature = signer.sign signature_digest.digest
 
       add_file_simple "#{name}.sig", 0444, signature.length do |io|
@@ -219,7 +217,7 @@ def add_file_simple(name, mode, size) # :yields: io
 
     header = Gem::Package::TarHeader.new(:name => name, :mode => mode,
                                          :size => size, :prefix => prefix,
-                                         :mtime => Time.now).to_s
+                                         :mtime => ENV["SOURCE_DATE_EPOCH"] ? Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc : Time.now).to_s
 
     @io.write header
     os = BoundedStream.new @io, size
@@ -247,7 +245,7 @@ def add_symlink(name, target, mode)
                                          :size => 0, :typeflag => "2",
                                          :linkname => target,
                                          :prefix => prefix,
-                                         :mtime => Time.now).to_s
+                                         :mtime => ENV["SOURCE_DATE_EPOCH"] ? Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc : Time.now).to_s
 
     @io.write header
 
@@ -300,7 +298,7 @@ def mkdir(name, mode)
     header = Gem::Package::TarHeader.new :name => name, :mode => mode,
                                          :typeflag => "5", :size => 0,
                                          :prefix => prefix,
-                                         :mtime => Time.now
+                                         :mtime => ENV["SOURCE_DATE_EPOCH"] ? Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc : Time.now
 
     @io.write header
 
@@ -311,12 +309,12 @@ def mkdir(name, mode)
   # Splits +name+ into a name and prefix that can fit in the TarHeader
 
   def split_name(name) # :nodoc:
-    if name.bytesize > 256 then
+    if name.bytesize > 256
       raise Gem::Package::TooLongFileName.new("File \"#{name}\" has a too long path (should be 256 or less)")
     end
 
     prefix = ''
-    if name.bytesize > 100 then
+    if name.bytesize > 100
       parts = name.split('/', -1) # parts are never empty here
       name = parts.pop            # initially empty for names with a trailing slash ("foo/.../bar/")
       prefix = parts.join('/')    # if empty, then it's impossible to split (parts is empty too)
@@ -325,11 +323,11 @@ def split_name(name) # :nodoc:
         prefix = parts.join('/')
       end
 
-      if name.bytesize > 100 or prefix.empty? then
+      if name.bytesize > 100 or prefix.empty?
         raise Gem::Package::TooLongFileName.new("File \"#{prefix}/#{name}\" has a too long name (should be 100 or less)")
       end
 
-      if prefix.bytesize > 155 then
+      if prefix.bytesize > 155
         raise Gem::Package::TooLongFileName.new("File \"#{prefix}/#{name}\" has a too long base path (should be 155 or less)")
       end
     end
diff --git a/lib/ruby/stdlib/rubygems/package_task.rb b/lib/ruby/stdlib/rubygems/package_task.rb
index d554e3697b8..a11d09fb219 100644
--- a/lib/ruby/stdlib/rubygems/package_task.rb
+++ b/lib/ruby/stdlib/rubygems/package_task.rb
@@ -126,4 +126,3 @@ def define
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/path_support.rb b/lib/ruby/stdlib/rubygems/path_support.rb
index 618bc793c4e..ed680d65537 100644
--- a/lib/ruby/stdlib/rubygems/path_support.rb
+++ b/lib/ruby/stdlib/rubygems/path_support.rb
@@ -23,12 +23,14 @@ class Gem::PathSupport
   # hashtable, or defaults to ENV, the system environment.
   #
   def initialize(env)
-    @home     = env["GEM_HOME"] || Gem.default_dir
+    @home = env["GEM_HOME"] || Gem.default_dir
 
-    if File::ALT_SEPARATOR then
-      @home   = @home.gsub(File::ALT_SEPARATOR, File::SEPARATOR)
+    if File::ALT_SEPARATOR
+      @home = @home.gsub(File::ALT_SEPARATOR, File::SEPARATOR)
     end
 
+    @home = expand(@home)
+
     @path = split_gem_path env["GEM_PATH"], @home
 
     @spec_cache_dir = env["GEM_SPEC_CACHE"] || Gem.default_spec_cache_dir
@@ -41,7 +43,7 @@ def initialize(env)
   ##
   # Split the Gem search path (as reported by Gem.path).
 
-  def split_gem_path gpaths, home
+  def split_gem_path(gpaths, home)
     # FIX: it should be [home, *path], not [*path, home]
 
     gem_path = []
@@ -54,7 +56,7 @@ def split_gem_path gpaths, home
         gem_path += default_path
       end
 
-      if File::ALT_SEPARATOR then
+      if File::ALT_SEPARATOR
         gem_path.map! do |this_path|
           this_path.gsub File::ALT_SEPARATOR, File::SEPARATOR
         end
@@ -65,7 +67,7 @@ def split_gem_path gpaths, home
       gem_path = default_path
     end
 
-    gem_path.uniq
+    gem_path.map { |path| expand(path) }.uniq
   end
 
   # Return the default Gem path
@@ -77,4 +79,12 @@ def default_path
     end
     gem_path
   end
+
+  def expand(path)
+    if File.directory?(path)
+      File.realpath(path)
+    else
+      path
+    end
+  end
 end
diff --git a/lib/ruby/stdlib/rubygems/platform.rb b/lib/ruby/stdlib/rubygems/platform.rb
index 2dd9ed5782c..f8fe4dad546 100644
--- a/lib/ruby/stdlib/rubygems/platform.rb
+++ b/lib/ruby/stdlib/rubygems/platform.rb
@@ -56,7 +56,7 @@ def initialize(arch)
     when String then
       arch = arch.split '-'
 
-      if arch.length > 2 and arch.last !~ /\d/ then # reassemble x86-linux-gnu
+      if arch.length > 2 and arch.last !~ /\d/  # reassemble x86-linux-gnu
         extra = arch.pop
         arch.last << "-#{extra}"
       end
@@ -68,7 +68,7 @@ def initialize(arch)
              else cpu
              end
 
-      if arch.length == 2 and arch.last =~ /^\d+(\.\d+)?$/ then # for command-line
+      if arch.length == 2 and arch.last =~ /^\d+(\.\d+)?$/  # for command-line
         @os, @version = arch
         return
       end
@@ -195,12 +195,11 @@ def =~(other)
   # A pure-Ruby gem that may use Gem::Specification#extensions to build
   # binary files.
 
-  RUBY = 'ruby'
+  RUBY = 'ruby'.freeze
 
   ##
   # A platform-specific gem that is built for the packaging Ruby's platform.
   # This will be replaced with Gem::Platform::local.
 
-  CURRENT = 'current'
+  CURRENT = 'current'.freeze
 end
-
diff --git a/lib/ruby/stdlib/rubygems/psych_tree.rb b/lib/ruby/stdlib/rubygems/psych_tree.rb
index 41a7314b536..6f399a289ef 100644
--- a/lib/ruby/stdlib/rubygems/psych_tree.rb
+++ b/lib/ruby/stdlib/rubygems/psych_tree.rb
@@ -18,7 +18,7 @@ def register(target, obj)
       end
 
       # This is ported over from the yaml_tree in 1.9.3
-      def format_time time
+      def format_time(time)
         if time.utc?
           time.strftime("%Y-%m-%d %H:%M:%S.%9N Z")
         else
diff --git a/lib/ruby/stdlib/rubygems/rdoc.rb b/lib/ruby/stdlib/rubygems/rdoc.rb
index 7043bd2a316..dfaf7c55bfb 100644
--- a/lib/ruby/stdlib/rubygems/rdoc.rb
+++ b/lib/ruby/stdlib/rubygems/rdoc.rb
@@ -1,7 +1,5 @@
 # frozen_string_literal: true
 require 'rubygems'
-require 'rubygems/user_interaction'
-require 'fileutils'
 
 begin
   gem 'rdoc'
@@ -15,321 +13,12 @@
   Gem.finish_resolve
 end
 
-loaded_hook = false
-
 begin
   require 'rdoc/rubygems_hook'
-  loaded_hook = true
   module Gem
     RDoc = ::RDoc::RubygemsHook
   end
 rescue LoadError
 end
 
-##
-# Gem::RDoc provides methods to generate RDoc and ri data for installed gems.
-# It works for RDoc 1.0.1 (in Ruby 1.8) up to RDoc 3.6.
-#
-# This implementation is considered obsolete.  The RDoc project is the
-# appropriate location to find this functionality.  This file provides the
-# hooks to load RDoc generation code from the "rdoc" gem and a fallback in
-# case the installed version of RDoc does not have them.
-
-class Gem::RDoc # :nodoc: all
-
-  include Gem::UserInteraction
-  extend  Gem::UserInteraction
-
-  @rdoc_version = nil
-  @specs = []
-
-  ##
-  # Force installation of documentation?
-
-  attr_accessor :force
-
-  ##
-  # Generate rdoc?
-
-  attr_accessor :generate_rdoc
-
-  ##
-  # Generate ri data?
-
-  attr_accessor :generate_ri
-
-  class << self
-
-    ##
-    # Loaded version of RDoc.  Set by ::load_rdoc
-
-    attr_reader :rdoc_version
-
-  end
-
-  ##
-  # Post installs hook that generates documentation for each specification in
-  # +specs+
-
-  def self.generation_hook installer, specs
-    start = Time.now
-    types = installer.document
-
-    generate_rdoc = types.include? 'rdoc'
-    generate_ri   = types.include? 'ri'
-
-    specs.each do |spec|
-      new(spec, generate_rdoc, generate_ri).generate
-    end
-
-    return unless generate_rdoc or generate_ri
-
-    duration = (Time.now - start).to_i
-    names    = specs.map(&:name).join ', '
-
-    say "Done installing documentation for #{names} after #{duration} seconds"
-  end
-
-  ##
-  # Loads the RDoc generator
-
-  def self.load_rdoc
-    return if @rdoc_version
-
-    require 'rdoc/rdoc'
-
-    @rdoc_version = if ::RDoc.const_defined? :VERSION then
-                      Gem::Version.new ::RDoc::VERSION
-                    else
-                      Gem::Version.new '1.0.1'
-                    end
-
-  rescue LoadError => e
-    raise Gem::DocumentError, "RDoc is not installed: #{e}"
-  end
-
-  ##
-  # Creates a new documentation generator for +spec+.  RDoc and ri data
-  # generation can be enabled or disabled through +generate_rdoc+ and
-  # +generate_ri+ respectively.
-  #
-  # Only +generate_ri+ is enabled by default.
-
-  def initialize spec, generate_rdoc = true, generate_ri = true
-    @doc_dir   = spec.doc_dir
-    @file_info = nil
-    @force     = false
-    @rdoc      = nil
-    @spec      = spec
-
-    @generate_rdoc = generate_rdoc
-    @generate_ri   = generate_ri
-
-    @rdoc_dir = spec.doc_dir 'rdoc'
-    @ri_dir   = spec.doc_dir 'ri'
-  end
-
-  ##
-  # Removes legacy rdoc arguments from +args+
-  #--
-  # TODO move to RDoc::Options
-
-  def delete_legacy_args args
-    args.delete '--inline-source'
-    args.delete '--promiscuous'
-    args.delete '-p'
-    args.delete '--one-file'
-  end
-
-  ##
-  # Generates documentation using the named +generator+ ("darkfish" or "ri")
-  # and following the given +options+.
-  #
-  # Documentation will be generated into +destination+
-
-  def document generator, options, destination
-    generator_name = generator
-
-    options = options.dup
-    options.exclude ||= [] # TODO maybe move to RDoc::Options#finish
-    options.setup_generator generator
-    options.op_dir = destination
-    options.finish
-
-    generator = options.generator.new @rdoc.store, options
-
-    @rdoc.options = options
-    @rdoc.generator = generator
-
-    say "Installing #{generator_name} documentation for #{@spec.full_name}"
-
-    FileUtils.mkdir_p options.op_dir
-
-    Dir.chdir options.op_dir do
-      begin
-        @rdoc.class.current = @rdoc
-        @rdoc.generator.generate @file_info
-      ensure
-        @rdoc.class.current = nil
-      end
-    end
-  end
-
-  ##
-  # Generates RDoc and ri data
-
-  def generate
-    return unless @generate_ri or @generate_rdoc
-
-    setup
-
-    options = nil
-
-    if Gem::Requirement.new('< 3').satisfied_by? self.class.rdoc_version then
-      generate_legacy
-      return
-    end
-
-    ::RDoc::TopLevel.reset # TODO ::RDoc::RDoc.reset
-    ::RDoc::Parser::C.reset
-
-    args = @spec.rdoc_options
-    args.concat @spec.source_paths
-    args.concat @spec.extra_rdoc_files
-
-    case config_args = Gem.configuration[:rdoc]
-    when String then
-      args = args.concat config_args.split
-    when Array then
-      args = args.concat config_args
-    end
-
-    delete_legacy_args args
-
-    Dir.chdir @spec.full_gem_path do
-      options = ::RDoc::Options.new
-      options.default_title = "#{@spec.full_name} Documentation"
-      options.parse args
-    end
-
-    options.quiet = !Gem.configuration.really_verbose
-
-    @rdoc = new_rdoc
-    @rdoc.options = options
-
-    say "Parsing documentation for #{@spec.full_name}"
-
-    Dir.chdir @spec.full_gem_path do
-      @file_info = @rdoc.parse_files options.files
-    end
-
-    document 'ri',       options, @ri_dir if
-      @generate_ri   and (@force or not File.exist? @ri_dir)
-
-    document 'darkfish', options, @rdoc_dir if
-      @generate_rdoc and (@force or not File.exist? @rdoc_dir)
-  end
-
-  ##
-  # Generates RDoc and ri data for legacy RDoc versions.  This method will not
-  # exist in future versions.
-
-  def generate_legacy
-    if @generate_rdoc then
-      FileUtils.rm_rf @rdoc_dir
-      say "Installing RDoc documentation for #{@spec.full_name}"
-      legacy_rdoc '--op', @rdoc_dir
-    end
-
-    if @generate_ri then
-      FileUtils.rm_rf @ri_dir
-      say "Installing ri documentation for #{@spec.full_name}"
-      legacy_rdoc '--ri', '--op', @ri_dir
-    end
-  end
-
-  ##
-  # Generates RDoc using a legacy version of RDoc from the ARGV-like +args+.
-  # This method will not exist in future versions.
-
-  def legacy_rdoc *args
-    args << @spec.rdoc_options
-    args << '--quiet'
-    args << @spec.require_paths.clone
-    args << @spec.extra_rdoc_files
-    args << '--title' << "#{@spec.full_name} Documentation"
-    args = args.flatten.map do |arg| arg.to_s end
-
-    delete_legacy_args args if
-      Gem::Requirement.new('>= 2.4.0') =~ self.class.rdoc_version
-
-    r = new_rdoc
-    verbose { "rdoc #{args.join ' '}" }
-
-    Dir.chdir @spec.full_gem_path do
-      begin
-        r.document args
-      rescue Errno::EACCES => e
-        dirname = File.dirname e.message.split("-")[1].strip
-        raise Gem::FilePermissionError, dirname
-      rescue Interrupt => e
-        raise e
-      rescue Exception => ex
-        alert_error "While generating documentation for #{@spec.full_name}"
-        ui.errs.puts "... MESSAGE:   #{ex}"
-        ui.errs.puts "... RDOC args: #{args.join(' ')}"
-        ui.backtrace ex
-        ui.errs.puts "(continuing with the rest of the installation)"
-      end
-    end
-  end
-
-  ##
-  # #new_rdoc creates a new RDoc instance.  This method is provided only to
-  # make testing easier.
-
-  def new_rdoc # :nodoc:
-    ::RDoc::RDoc.new
-  end
-
-  ##
-  # Is rdoc documentation installed?
-
-  def rdoc_installed?
-    File.exist? @rdoc_dir
-  end
-
-  ##
-  # Removes generated RDoc and ri data
-
-  def remove
-    base_dir = @spec.base_dir
-
-    raise Gem::FilePermissionError, base_dir unless File.writable? base_dir
-
-    FileUtils.rm_rf @rdoc_dir
-    FileUtils.rm_rf @ri_dir
-  end
-
-  ##
-  # Is ri data installed?
-
-  def ri_installed?
-    File.exist? @ri_dir
-  end
-
-  ##
-  # Prepares the spec for documentation generation
-
-  def setup
-    self.class.load_rdoc
-
-    raise Gem::FilePermissionError, @doc_dir if
-      File.exist?(@doc_dir) and not File.writable?(@doc_dir)
-
-    FileUtils.mkdir_p @doc_dir unless File.exist? @doc_dir
-  end
-
-end unless loaded_hook
-
 Gem.done_installing(&Gem::RDoc.method(:generation_hook))
diff --git a/lib/ruby/stdlib/rubygems/remote_fetcher.rb b/lib/ruby/stdlib/rubygems/remote_fetcher.rb
index 80fb1aaaa5c..69879df67c5 100644
--- a/lib/ruby/stdlib/rubygems/remote_fetcher.rb
+++ b/lib/ruby/stdlib/rubygems/remote_fetcher.rb
@@ -71,13 +71,10 @@ def self.fetcher
   #        HTTP_PROXY_PASS)
   # * <tt>:no_proxy</tt>: ignore environment variables and _don't_ use a proxy
   #
-  # +dns+: An object to use for DNS resolution of the API endpoint.
-  #        By default, use Resolv::DNS.
-  #
   # +headers+: A set of additional HTTP headers to be sent to the server when
   #            fetching the gem.
 
-  def initialize(proxy=nil, dns=Resolv::DNS.new, headers={})
+  def initialize(proxy=nil, dns=nil, headers={})
     require 'net/http'
     require 'stringio'
     require 'time'
@@ -90,34 +87,9 @@ def initialize(proxy=nil, dns=Resolv::DNS.new, headers={})
     @pool_lock = Mutex.new
     @cert_files = Gem::Request.get_cert_files
 
-    @dns = dns
     @headers = headers
   end
 
-  ##
-  # Given a source at +uri+, calculate what hostname to actually
-  # connect to query the data for it.
-
-  def api_endpoint(uri)
-    host = uri.host
-
-    begin
-      res = @dns.getresource "_rubygems._tcp.#{host}",
-                             Resolv::DNS::Resource::IN::SRV
-    rescue Resolv::ResolvError => e
-      verbose "Getting SRV record failed: #{e}"
-      uri
-    else
-      target = res.target.to_s.strip
-
-      if URI("http://" + target).host.end_with?(".#{host}")
-        return URI.parse "#{uri.scheme}://#{target}#{uri.path}"
-      end
-
-      uri
-    end
-  end
-
   ##
   # Given a name and requirement, downloads this gem into cache and returns the
   # filename. Returns nil if the gem cannot be located.
@@ -125,7 +97,7 @@ def api_endpoint(uri)
   # Should probably be integrated with #download below, but that will be a
   # larger, more encompassing effort. -erikh
 
-  def download_to_cache dependency
+  def download_to_cache(dependency)
     found, _ = Gem::SpecFetcher.fetcher.spec_for_dependency dependency
 
     return if found.empty?
@@ -142,9 +114,9 @@ def download_to_cache dependency
 
   def download(spec, source_uri, install_dir = Gem.dir)
     cache_dir =
-      if Dir.pwd == install_dir then # see fetch_command
+      if Dir.pwd == install_dir  # see fetch_command
         install_dir
-      elsif File.writable? install_dir then
+      elsif File.writable? install_dir
         File.join install_dir, "cache"
       else
         File.join Gem.user_dir, "cache"
@@ -164,9 +136,7 @@ def download(spec, source_uri, install_dir = Gem.dir)
       begin
         source_uri = URI.parse(source_uri)
       rescue
-        source_uri = URI.parse(URI.const_defined?(:DEFAULT_PARSER) ?
-                               URI::DEFAULT_PARSER.escape(source_uri.to_s) :
-                               URI.escape(source_uri.to_s))
+        source_uri = URI.parse(URI::DEFAULT_PARSER.escape(source_uri.to_s))
       end
     end
 
@@ -179,7 +149,7 @@ def download(spec, source_uri, install_dir = Gem.dir)
     # REFACTOR: be sure to clean up fake fetcher when you do this... cleaner
     case scheme
     when 'http', 'https', 's3' then
-      unless File.exist? local_gem_path then
+      unless File.exist? local_gem_path
         begin
           verbose "Downloading gem #{gem_file_name}"
 
@@ -213,7 +183,7 @@ def download(spec, source_uri, install_dir = Gem.dir)
       verbose "Using local gem #{local_gem_path}"
     when nil then # TODO test for local overriding cache
       source_path = if Gem.win_platform? && source_uri.scheme &&
-                       !source_uri.path.include?(':') then
+                       !source_uri.path.include?(':')
                       "#{source_uri.scheme}:#{source_uri.path}"
                     else
                       source_uri.path
@@ -239,14 +209,14 @@ def download(spec, source_uri, install_dir = Gem.dir)
   ##
   # File Fetcher. Dispatched by +fetch_path+. Use it instead.
 
-  def fetch_file uri, *_
+  def fetch_file(uri, *_)
     Gem.read_binary correct_for_windows_path uri.path
   end
 
   ##
   # HTTP Fetcher. Dispatched by +fetch_path+. Use it instead.
 
-  def fetch_http uri, last_modified = nil, head = false, depth = 0
+  def fetch_http(uri, last_modified = nil, head = false, depth = 0)
     fetch_type = head ? Net::HTTP::Head : Net::HTTP::Get
     response   = request uri, fetch_type, last_modified do |req|
       headers.each { |k,v| req.add_field(k,v) }
@@ -304,7 +274,8 @@ def fetch_path(uri, mtime = nil, head = false)
     raise
   rescue Timeout::Error
     raise UnknownHostError.new('timed out', uri.to_s)
-  rescue IOError, SocketError, SystemCallError => e
+  rescue IOError, SocketError, SystemCallError,
+    *(OpenSSL::SSL::SSLError if defined?(OpenSSL)) => e
     if e.message =~ /getaddrinfo/
       raise UnknownHostError.new('no such name', uri.to_s)
     else
@@ -321,7 +292,7 @@ def fetch_s3(uri, mtime = nil, head = false)
   # Downloads +uri+ to +path+ if necessary. If no path is given, it just
   # passes the data.
 
-  def cache_update_path uri, path = nil, update = true
+  def cache_update_path(uri, path = nil, update = true)
     mtime = path && File.stat(path).mtime rescue nil
 
     data = fetch_path(uri, mtime)
@@ -386,17 +357,15 @@ def sign_s3_url(uri, expiration = nil)
     require 'base64'
     require 'openssl'
 
-    unless uri.user && uri.password
-      raise FetchError.new("credentials needed in s3 source, like s3://key:secret@bucket-name/", uri.to_s)
-    end
+    id, secret = s3_source_auth uri
 
     expiration ||= s3_expiration
     canonical_path = "/#{uri.host}#{uri.path}"
     payload = "GET\n\n\n#{expiration}\n#{canonical_path}"
-    digest = OpenSSL::HMAC.digest('sha1', uri.password, payload)
+    digest = OpenSSL::HMAC.digest('sha1', secret, payload)
     # URI.escape is deprecated, and there isn't yet a replacement that does quite what we want
     signature = Base64.encode64(digest).gsub("\n", '').gsub(/[\+\/=]/) { |c| BASE64_URI_TRANSLATE[c] }
-    URI.parse("https://#{uri.host}.s3.amazonaws.com#{uri.path}?AWSAccessKeyId=#{uri.user}&Expires=#{expiration}&Signature=#{signature}")
+    URI.parse("https://#{uri.host}.s3.amazonaws.com#{uri.path}?AWSAccessKeyId=#{id}&Expires=#{expiration}&Signature=#{signature}")
   end
 
   def s3_expiration
@@ -407,13 +376,30 @@ def s3_expiration
 
   private
 
-  def proxy_for proxy, uri
+  def proxy_for(proxy, uri)
     Gem::Request.proxy_uri(proxy || Gem::Request.get_proxy_from_env(uri.scheme))
   end
 
-  def pools_for proxy
+  def pools_for(proxy)
     @pool_lock.synchronize do
       @pools[proxy] ||= Gem::Request::ConnectionPools.new proxy, @cert_files
     end
   end
+
+  def s3_source_auth(uri)
+    return [uri.user, uri.password] if uri.user && uri.password
+
+    s3_source = Gem.configuration[:s3_source] || Gem.configuration['s3_source']
+    host = uri.host
+    raise FetchError.new("no s3_source key exists in .gemrc", "s3://#{host}") unless s3_source
+
+    auth = s3_source[host] || s3_source[host.to_sym]
+    raise FetchError.new("no key for host #{host} in s3_source in .gemrc", "s3://#{host}") unless auth
+
+    id = auth[:id] || auth['id']
+    secret = auth[:secret] || auth['secret']
+    raise FetchError.new("s3_source for #{host} missing id or secret", "s3://#{host}") unless id and secret
+
+    [id, secret]
+  end
 end
diff --git a/lib/ruby/stdlib/rubygems/request.rb b/lib/ruby/stdlib/rubygems/request.rb
index 81699b98fef..fb164d79cfe 100644
--- a/lib/ruby/stdlib/rubygems/request.rb
+++ b/lib/ruby/stdlib/rubygems/request.rb
@@ -1,6 +1,5 @@
 # frozen_string_literal: true
 require 'net/http'
-require 'thread'
 require 'time'
 require 'rubygems/user_interaction'
 
@@ -11,7 +10,7 @@ class Gem::Request
 
   ###
   # Legacy.  This is used in tests.
-  def self.create_with_proxy uri, request_class, last_modified, proxy # :nodoc:
+  def self.create_with_proxy(uri, request_class, last_modified, proxy) # :nodoc:
     cert_files = get_cert_files
     proxy ||= get_proxy_from_env(uri.scheme)
     pool       = ConnectionPools.new proxy_uri(proxy), cert_files
@@ -19,7 +18,7 @@ def self.create_with_proxy uri, request_class, last_modified, proxy # :nodoc:
     new(uri, request_class, last_modified, pool.pool_for(uri))
   end
 
-  def self.proxy_uri proxy # :nodoc:
+  def self.proxy_uri(proxy) # :nodoc:
     case proxy
     when :no_proxy then nil
     when URI::HTTP then proxy
@@ -52,7 +51,7 @@ def self.configure_connection_for_https(connection, cert_files)
       Gem.configuration.ssl_verify_mode || OpenSSL::SSL::VERIFY_PEER
     store = OpenSSL::X509::Store.new
 
-    if Gem.configuration.ssl_client_cert then
+    if Gem.configuration.ssl_client_cert
       pem = File.read Gem.configuration.ssl_client_cert
       connection.cert = OpenSSL::X509::Certificate.new pem
       connection.key = OpenSSL::PKey::RSA.new pem
@@ -86,7 +85,7 @@ def self.configure_connection_for_https(connection, cert_files)
             'Unable to require openssl, install OpenSSL and rebuild Ruby (preferred) or use non-HTTPS sources')
   end
 
-  def self.verify_certificate store_context
+  def self.verify_certificate(store_context)
     depth  = store_context.error_depth
     error  = store_context.error_string
     number = store_context.error
@@ -99,7 +98,7 @@ def self.verify_certificate store_context
     ui.alert_error extra_message if extra_message
   end
 
-  def self.verify_certificate_message error_number, cert
+  def self.verify_certificate_message(error_number, cert)
     return unless cert
     case error_number
     when OpenSSL::X509::V_ERR_CERT_HAS_EXPIRED then
@@ -118,9 +117,11 @@ def self.verify_certificate_message error_number, cert
       "Certificate #{cert.subject} has an invalid purpose"
     when OpenSSL::X509::V_ERR_SELF_SIGNED_CERT_IN_CHAIN then
       "Root certificate is not trusted (#{cert.subject})"
-    when OpenSSL::X509::V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY,
-      OpenSSL::X509::V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE then
+    when OpenSSL::X509::V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY then
       "You must add #{cert.issuer} to your local trusted store"
+    when
+      OpenSSL::X509::V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE then
+      "Cannot verify certificate issued by #{cert.issuer}"
     end
   end
 
@@ -138,7 +139,7 @@ def connection_for(uri)
   def fetch
     request = @request_class.new @uri.request_uri
 
-    unless @uri.nil? || @uri.user.nil? || @uri.user.empty? then
+    unless @uri.nil? || @uri.user.nil? || @uri.user.empty?
       request.basic_auth Gem::UriFormatter.new(@uri.user).unescape,
                          Gem::UriFormatter.new(@uri.password).unescape
     end
@@ -147,7 +148,7 @@ def fetch
     request.add_field 'Connection', 'keep-alive'
     request.add_field 'Keep-Alive', '30'
 
-    if @last_modified then
+    if @last_modified
       request.add_field 'If-Modified-Since', @last_modified.httpdate
     end
 
@@ -160,7 +161,7 @@ def fetch
   # Returns a proxy URI for the given +scheme+ if one is set in the
   # environment variables.
 
-  def self.get_proxy_from_env scheme = 'http'
+  def self.get_proxy_from_env(scheme = 'http')
     _scheme = scheme.downcase
     _SCHEME = scheme.upcase
     env_proxy = ENV["#{_scheme}_proxy"] || ENV["#{_SCHEME}_PROXY"]
@@ -172,7 +173,7 @@ def self.get_proxy_from_env scheme = 'http'
 
     uri = URI(Gem::UriFormatter.new(env_proxy).normalize)
 
-    if uri and uri.user.nil? and uri.password.nil? then
+    if uri and uri.user.nil? and uri.password.nil?
       user     = ENV["#{_scheme}_proxy_user"] || ENV["#{_SCHEME}_PROXY_USER"]
       password = ENV["#{_scheme}_proxy_pass"] || ENV["#{_SCHEME}_PROXY_PASS"]
 
@@ -183,7 +184,7 @@ def self.get_proxy_from_env scheme = 'http'
     uri
   end
 
-  def perform_request request # :nodoc:
+  def perform_request(request) # :nodoc:
     connection = connection_for @uri
 
     retried = false
@@ -275,9 +276,9 @@ def user_agent
     ruby_version += 'dev' if RUBY_PATCHLEVEL == -1
 
     ua << " Ruby/#{ruby_version} (#{RUBY_RELEASE_DATE}"
-    if RUBY_PATCHLEVEL >= 0 then
+    if RUBY_PATCHLEVEL >= 0
       ua << " patchlevel #{RUBY_PATCHLEVEL}"
-    elsif defined?(RUBY_REVISION) then
+    elsif defined?(RUBY_REVISION)
       ua << " revision #{RUBY_REVISION}"
     end
     ua << ")"
diff --git a/lib/ruby/stdlib/rubygems/request/connection_pools.rb b/lib/ruby/stdlib/rubygems/request/connection_pools.rb
index 31fc609800c..c02f083b638 100644
--- a/lib/ruby/stdlib/rubygems/request/connection_pools.rb
+++ b/lib/ruby/stdlib/rubygems/request/connection_pools.rb
@@ -1,5 +1,4 @@
 # frozen_string_literal: true
-require 'thread'
 
 class Gem::Request::ConnectionPools # :nodoc:
 
@@ -9,19 +8,19 @@ class << self
     attr_accessor :client
   end
 
-  def initialize proxy_uri, cert_files
+  def initialize(proxy_uri, cert_files)
     @proxy_uri  = proxy_uri
     @cert_files = cert_files
     @pools      = {}
     @pool_mutex = Mutex.new
   end
 
-  def pool_for uri
+  def pool_for(uri)
     http_args = net_http_args(uri, @proxy_uri)
     key       = http_args + [https?(uri)]
     @pool_mutex.synchronize do
       @pools[key] ||=
-        if https? uri then
+        if https? uri
           Gem::Request::HTTPSPool.new(http_args, @cert_files, @proxy_uri)
         else
           Gem::Request::HTTPPool.new(http_args, @cert_files, @proxy_uri)
@@ -46,22 +45,35 @@ def get_no_proxy_from_env
     env_no_proxy.split(/\s*,\s*/)
   end
 
-  def https? uri
+  def https?(uri)
     uri.scheme.downcase == 'https'
   end
 
-  def no_proxy? host, env_no_proxy
+  def no_proxy?(host, env_no_proxy)
     host = host.downcase
 
     env_no_proxy.any? do |pattern|
-      pattern = pattern.downcase
+      env_no_proxy_pattern = pattern.downcase.dup
 
-      host[-pattern.length, pattern.length] == pattern or
-        (pattern.start_with? '.' and pattern[1..-1] == host)
+      # Remove dot in front of pattern for wildcard matching
+      env_no_proxy_pattern[0] = "" if env_no_proxy_pattern[0] == "."
+
+      host_tokens = host.split(".")
+      pattern_tokens = env_no_proxy_pattern.split(".")
+
+      intersection = (host_tokens - pattern_tokens) | (pattern_tokens - host_tokens)
+
+      # When we do the split into tokens we miss a dot character, so add it back if we need it
+      missing_dot = intersection.length > 0 ? 1 : 0
+      start = intersection.join(".").size + missing_dot
+
+      no_proxy_host = host[start..-1]
+
+      env_no_proxy_pattern == no_proxy_host
     end
   end
 
-  def net_http_args uri, proxy_uri
+  def net_http_args(uri, proxy_uri)
     # URI::Generic#hostname was added in ruby 1.9.3, use it if exists, otherwise
     # don't support IPv6 literals and use host.
     hostname = uri.respond_to?(:hostname) ? uri.hostname : uri.host
@@ -69,7 +81,7 @@ def net_http_args uri, proxy_uri
 
     no_proxy = get_no_proxy_from_env
 
-    if proxy_uri and not no_proxy?(hostname, no_proxy) then
+    if proxy_uri and not no_proxy?(hostname, no_proxy)
       proxy_hostname = proxy_uri.respond_to?(:hostname) ? proxy_uri.hostname : proxy_uri.host
       net_http_args + [
         proxy_hostname,
@@ -77,7 +89,7 @@ def net_http_args uri, proxy_uri
         Gem::UriFormatter.new(proxy_uri.user).unescape,
         Gem::UriFormatter.new(proxy_uri.password).unescape,
       ]
-    elsif no_proxy? hostname, no_proxy then
+    elsif no_proxy? hostname, no_proxy
       net_http_args + [nil, nil]
     else
       net_http_args
@@ -85,4 +97,3 @@ def net_http_args uri, proxy_uri
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/request/http_pool.rb b/lib/ruby/stdlib/rubygems/request/http_pool.rb
index bfcd15399d5..a85fc2bdf65 100644
--- a/lib/ruby/stdlib/rubygems/request/http_pool.rb
+++ b/lib/ruby/stdlib/rubygems/request/http_pool.rb
@@ -8,7 +8,7 @@
 class Gem::Request::HTTPPool # :nodoc:
   attr_reader :cert_files, :proxy_uri
 
-  def initialize http_args, cert_files, proxy_uri
+  def initialize(http_args, cert_files, proxy_uri)
     @http_args  = http_args
     @cert_files = cert_files
     @proxy_uri  = proxy_uri
@@ -20,7 +20,7 @@ def checkout
     @queue.pop || make_connection
   end
 
-  def checkin connection
+  def checkin(connection)
     @queue.push connection
   end
 
@@ -39,10 +39,9 @@ def make_connection
     setup_connection Gem::Request::ConnectionPools.client.new(*@http_args)
   end
 
-  def setup_connection connection
+  def setup_connection(connection)
     connection.start
     connection
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/request/https_pool.rb b/lib/ruby/stdlib/rubygems/request/https_pool.rb
index e82c2440e1c..50f42d9e0d1 100644
--- a/lib/ruby/stdlib/rubygems/request/https_pool.rb
+++ b/lib/ruby/stdlib/rubygems/request/https_pool.rb
@@ -2,10 +2,8 @@
 class Gem::Request::HTTPSPool < Gem::Request::HTTPPool # :nodoc:
   private
 
-  def setup_connection connection
+  def setup_connection(connection)
     Gem::Request.configure_connection_for_https(connection, @cert_files)
     super
   end
 end
-
-
diff --git a/lib/ruby/stdlib/rubygems/request_set.rb b/lib/ruby/stdlib/rubygems/request_set.rb
index 89f47616eca..6017d15d13e 100644
--- a/lib/ruby/stdlib/rubygems/request_set.rb
+++ b/lib/ruby/stdlib/rubygems/request_set.rb
@@ -91,7 +91,7 @@ class Gem::RequestSet
   #
   #   set = Gem::RequestSet.new nokogiri, pg
 
-  def initialize *deps
+  def initialize(*deps)
     @dependencies = deps
 
     @always_install      = []
@@ -119,8 +119,8 @@ def initialize *deps
   ##
   # Declare that a gem of name +name+ with +reqs+ requirements is needed.
 
-  def gem name, *reqs
-    if dep = @dependency_names[name] then
+  def gem(name, *reqs)
+    if dep = @dependency_names[name]
       dep.requirement.concat reqs
     else
       dep = Gem::Dependency.new name, *reqs
@@ -132,7 +132,7 @@ def gem name, *reqs
   ##
   # Add +deps+ Gem::Dependency objects to the set.
 
-  def import deps
+  def import(deps)
     @dependencies.concat deps
   end
 
@@ -143,7 +143,7 @@ def import deps
   # The +installer+ will be +nil+ if a gem matching the request was already
   # installed.
 
-  def install options, &block # :yields: request, installer
+  def install(options, &block) # :yields: request, installer
     if dir = options[:install_dir]
       requests = install_into dir, false, options, &block
       return requests
@@ -152,12 +152,39 @@ def install options, &block # :yields: request, installer
     @prerelease = options[:prerelease]
 
     requests = []
+    download_queue = Queue.new
 
+    # Create a thread-safe list of gems to download
     sorted_requests.each do |req|
-      if req.installed? then
+      download_queue << req
+    end
+
+    # Create N threads in a pool, have them download all the gems
+    threads = Gem.configuration.concurrent_downloads.times.map do
+      # When a thread pops this item, it knows to stop running. The symbol
+      # is queued here so that there will be one symbol per thread.
+      download_queue << :stop
+
+      Thread.new do
+        # The pop method will block waiting for items, so the only way
+        # to stop a thread from running is to provide a final item that
+        # means the thread should stop.
+        while req = download_queue.pop
+          break if req == :stop
+          req.spec.download options unless req.installed?
+        end
+      end
+    end
+
+    # Wait for all the downloads to finish before continuing
+    threads.each(&:value)
+
+    # Install requested gems after they have been downloaded
+    sorted_requests.each do |req|
+      if req.installed?
         req.spec.spec.build_extensions
 
-        if @always_install.none? { |spec| spec == req.spec.spec } then
+        if @always_install.none? { |spec| spec == req.spec.spec }
           yield req, nil if block_given?
           next
         end
@@ -203,7 +230,7 @@ def install options, &block # :yields: request, installer
   # If +:without_groups+ is given in the +options+, those groups in the gem
   # dependencies file are not used.  See Gem::Installer for other +options+.
 
-  def install_from_gemdeps options, &block
+  def install_from_gemdeps(options, &block)
     gemdeps = options[:gemdeps]
 
     @install_dir = options[:install_dir] || Gem.dir
@@ -228,7 +255,7 @@ def install_from_gemdeps options, &block
     else
       installed = install options, &block
 
-      if options.fetch :lock, true then
+      if options.fetch :lock, true
         lockfile =
           Gem::RequestSet::Lockfile.build self, gemdeps, gem_deps_api.dependencies
         lockfile.write
@@ -238,7 +265,7 @@ def install_from_gemdeps options, &block
     end
   end
 
-  def install_into dir, force = true, options = {}
+  def install_into(dir, force = true, options = {})
     gem_home, ENV['GEM_HOME'] = ENV['GEM_HOME'], dir
 
     existing = force ? [] : specs_in(dir)
@@ -256,7 +283,7 @@ def install_into dir, force = true, options = {}
     sorted_requests.each do |request|
       spec = request.spec
 
-      if existing.find { |s| s.full_name == spec.full_name } then
+      if existing.find { |s| s.full_name == spec.full_name }
         yield request, nil if block_given?
         next
       end
@@ -278,7 +305,7 @@ def install_into dir, force = true, options = {}
   ##
   # Call hooks on installed gems
 
-  def install_hooks requests, options
+  def install_hooks(requests, options)
     specs = requests.map do |request|
       case request
       when Gem::Resolver::ActivationRequest then
@@ -300,7 +327,7 @@ def install_hooks requests, options
   ##
   # Load a dependency management file.
 
-  def load_gemdeps path, without_groups = [], installing = false
+  def load_gemdeps(path, without_groups = [], installing = false)
     @git_set    = Gem::Resolver::GitSet.new
     @vendor_set = Gem::Resolver::VendorSet.new
     @source_set = Gem::Resolver::SourceSet.new
@@ -321,29 +348,29 @@ def load_gemdeps path, without_groups = [], installing = false
     gf.load
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[RequestSet:', ']' do
       q.breakable
 
-      if @remote then
+      if @remote
         q.text 'remote'
         q.breakable
       end
 
-      if @prerelease then
+      if @prerelease
         q.text 'prerelease'
         q.breakable
       end
 
-      if @development_shallow then
+      if @development_shallow
         q.text 'shallow development'
         q.breakable
-      elsif @development then
+      elsif @development
         q.text 'development'
         q.breakable
       end
 
-      if @soft_missing then
+      if @soft_missing
         q.text 'soft missing'
       end
 
@@ -367,7 +394,7 @@ def pretty_print q # :nodoc:
   # Resolve the requested dependencies and return an Array of Specification
   # objects to be activated.
 
-  def resolve set = Gem::Resolver::BestSet.new
+  def resolve(set = Gem::Resolver::BestSet.new)
     @sets << set
     @sets << @git_set
     @sets << @vendor_set
@@ -416,17 +443,17 @@ def specs
     @specs ||= @requests.map { |r| r.full_spec }
   end
 
-  def specs_in dir
-    Dir["#{dir}/specifications/*.gemspec"].map do |g|
+  def specs_in(dir)
+    Gem::Util.glob_files_in_dir("*.gemspec", File.join(dir, "specifications")).map do |g|
       Gem::Specification.load g
     end
   end
 
-  def tsort_each_node &block # :nodoc:
+  def tsort_each_node(&block) # :nodoc:
     @requests.each(&block)
   end
 
-  def tsort_each_child node # :nodoc:
+  def tsort_each_child(node) # :nodoc:
     node.spec.dependencies.each do |dep|
       next if dep.type == :development and not @development
 
@@ -434,7 +461,7 @@ def tsort_each_child node # :nodoc:
         dep.match? r.spec.name, r.spec.version, @prerelease
       }
 
-      unless match then
+      unless match
         next if dep.type == :development and @development_shallow
         next if @soft_missing
         raise Gem::DependencyError,
diff --git a/lib/ruby/stdlib/rubygems/request_set/gem_dependency_api.rb b/lib/ruby/stdlib/rubygems/request_set/gem_dependency_api.rb
index 867086cc0e3..3892e7aa5f2 100644
--- a/lib/ruby/stdlib/rubygems/request_set/gem_dependency_api.rb
+++ b/lib/ruby/stdlib/rubygems/request_set/gem_dependency_api.rb
@@ -48,7 +48,7 @@ class Gem::RequestSet::GemDependencyAPI
     :ruby_19      => %w[ruby rbx maglev],
     :ruby_20      => %w[ruby rbx maglev],
     :ruby_21      => %w[ruby rbx maglev],
-  }
+  }.freeze
 
   mswin     = Gem::Platform.new 'x86-mswin32'
   mswin64   = Gem::Platform.new 'x64-mswin64'
@@ -88,7 +88,7 @@ class Gem::RequestSet::GemDependencyAPI
     :x64_mingw    => x64_mingw,
     :x64_mingw_20 => x64_mingw,
     :x64_mingw_21 => x64_mingw
-  }
+  }.freeze
 
   gt_eq_0        = Gem::Requirement.new '>= 0'
   tilde_gt_1_8_0 = Gem::Requirement.new '~> 1.8.0'
@@ -129,7 +129,7 @@ class Gem::RequestSet::GemDependencyAPI
     :x64_mingw    => gt_eq_0,
     :x64_mingw_20 => tilde_gt_2_0_0,
     :x64_mingw_21 => tilde_gt_2_1_0,
-  }
+  }.freeze
 
   WINDOWS = { # :nodoc:
     :mingw        => :only,
@@ -160,7 +160,7 @@ class Gem::RequestSet::GemDependencyAPI
     :x64_mingw    => :only,
     :x64_mingw_20 => :only,
     :x64_mingw_21 => :only,
-  }
+  }.freeze
 
   ##
   # The gems required by #gem statements in the gem.deps.rb file
@@ -191,7 +191,7 @@ class Gem::RequestSet::GemDependencyAPI
   # Creates a new GemDependencyAPI that will add dependencies to the
   # Gem::RequestSet +set+ based on the dependency API description in +path+.
 
-  def initialize set, path
+  def initialize(set, path)
     @set = set
     @path = path
 
@@ -228,7 +228,7 @@ def initialize set, path
   # Adds +dependencies+ to the request set if any of the +groups+ are allowed.
   # This is used for gemspec dependencies.
 
-  def add_dependencies groups, dependencies # :nodoc:
+  def add_dependencies(groups, dependencies) # :nodoc:
     return unless (groups & @without_groups).empty?
 
     dependencies.each do |dep|
@@ -241,7 +241,7 @@ def add_dependencies groups, dependencies # :nodoc:
   ##
   # Finds a gemspec with the given +name+ that lives at +path+.
 
-  def find_gemspec name, path # :nodoc:
+  def find_gemspec(name, path) # :nodoc:
     glob = File.join path, "#{name}.gemspec"
 
     spec_files = Dir[glob]
@@ -269,7 +269,7 @@ def find_gemspec name, path # :nodoc:
   # In installing mode certain restrictions are ignored such as ruby version
   # mismatch checks.
 
-  def installing= installing # :nodoc:
+  def installing=(installing) # :nodoc:
     @installing = installing
   end
 
@@ -353,7 +353,7 @@ def load
   # tag: ::
   #   Use the given tag for git:, gist: and github: dependencies.
 
-  def gem name, *requirements
+  def gem(name, *requirements)
     options = requirements.pop if requirements.last.kind_of?(Hash)
     options ||= {}
 
@@ -369,9 +369,9 @@ def gem name, *requirements
     duplicate = @dependencies.include? name
 
     @dependencies[name] =
-      if requirements.empty? and not source_set then
+      if requirements.empty? and not source_set
         Gem::Requirement.default
-      elsif source_set then
+      elsif source_set
         Gem::Requirement.source_set
       else
         Gem::Requirement.create requirements
@@ -387,7 +387,7 @@ def gem name, *requirements
 
     gem_requires name, options
 
-    if duplicate then
+    if duplicate
       warn <<-WARNING
 Gem dependencies file #{@path} requires #{name} more than once.
       WARNING
@@ -401,8 +401,8 @@ def gem name, *requirements
   #
   # Returns +true+ if the gist or git option was handled.
 
-  def gem_git name, options # :nodoc:
-    if gist = options.delete(:gist) then
+  def gem_git(name, options) # :nodoc:
+    if gist = options.delete(:gist)
       options[:git] = "https://gist.github.com/#{gist}.git"
     end
 
@@ -424,7 +424,7 @@ def gem_git name, options # :nodoc:
   #
   # Returns reference for the git gem.
 
-  def gem_git_reference options # :nodoc:
+  def gem_git_reference(options) # :nodoc:
     ref    = options.delete :ref
     branch = options.delete :branch
     tag    = options.delete :tag
@@ -457,7 +457,7 @@ def gem_git_reference options # :nodoc:
   #
   # Returns +true+ if the custom source option was handled.
 
-  def gem_git_source name, options # :nodoc:
+  def gem_git_source(name, options) # :nodoc:
     return unless git_source = (@git_sources.keys & options.keys).last
 
     source_callback = @git_sources[git_source]
@@ -478,7 +478,7 @@ def gem_git_source name, options # :nodoc:
   # Handles the :group and :groups +options+ for the gem with the given
   # +name+.
 
-  def gem_group name, options # :nodoc:
+  def gem_group(name, options) # :nodoc:
     g = options.delete :group
     all_groups  = g ? Array(g) : []
 
@@ -497,7 +497,7 @@ def gem_group name, options # :nodoc:
   #
   # Returns +true+ if the path option was handled.
 
-  def gem_path name, options # :nodoc:
+  def gem_path(name, options) # :nodoc:
     return unless directory = options.delete(:path)
 
     pin_gem_source name, :path, directory
@@ -514,7 +514,7 @@ def gem_path name, options # :nodoc:
   #
   # Returns +true+ if the source option was handled.
 
-  def gem_source name, options # :nodoc:
+  def gem_source(name, options) # :nodoc:
     return unless source = options.delete(:source)
 
     pin_gem_source name, :source, source
@@ -530,7 +530,7 @@ def gem_source name, options # :nodoc:
   # Handles the platforms: option from +options+.  Returns true if the
   # platform matches the current platform.
 
-  def gem_platforms options # :nodoc:
+  def gem_platforms(options) # :nodoc:
     platform_names = Array(options.delete :platform)
     platform_names.concat Array(options.delete :platforms)
     platform_names.concat @current_platforms if @current_platforms
@@ -543,7 +543,7 @@ def gem_platforms options # :nodoc:
 
       next false unless Gem::Platform.match platform
 
-      if engines = ENGINE_MAP[platform_name] then
+      if engines = ENGINE_MAP[platform_name]
         next false unless engines.include? Gem.ruby_engine
       end
 
@@ -564,9 +564,9 @@ def gem_platforms options # :nodoc:
   # Records the require: option from +options+ and adds those files, or the
   # default file to the require list for +name+.
 
-  def gem_requires name, options # :nodoc:
-    if options.include? :require then
-      if requires = options.delete(:require) then
+  def gem_requires(name, options) # :nodoc:
+    if options.include? :require
+      if requires = options.delete(:require)
         @requires[name].concat Array requires
       end
     else
@@ -587,7 +587,7 @@ def gem_requires name, options # :nodoc:
   #     gem 'activerecord'
   #   end
 
-  def git repository
+  def git(repository)
     @current_repository = repository
 
     yield
@@ -601,7 +601,7 @@ def git repository
   # for use in gems built from git repositories.  You must provide a block
   # that accepts a git repository name for expansion.
 
-  def git_source name, &callback
+  def git_source(name, &callback)
     @git_sources[name] = callback
   end
 
@@ -634,7 +634,7 @@ def gem_deps_file # :nodoc:
   #   The group to add development dependencies to.  By default this is
   #   :development.  Only one group may be specified.
 
-  def gemspec options = {}
+  def gemspec(options = {})
     name              = options.delete(:name) || '{,*}'
     path              = options.delete(:path) || '.'
     development_group = options.delete(:development_group) || :development
@@ -679,7 +679,7 @@ def gemspec options = {}
   # development`.  See `gem help install` and `gem help gem_dependencies` for
   # further details.
 
-  def group *groups
+  def group(*groups)
     @current_groups = groups
 
     yield
@@ -692,7 +692,7 @@ def group *groups
   # Pins the gem +name+ to the given +source+.  Adding a gem with the same
   # name from a different +source+ will raise an exception.
 
-  def pin_gem_source name, type = :default, source = nil
+  def pin_gem_source(name, type = :default, source = nil)
     source_description =
       case type
       when :default then '(default)'
@@ -754,7 +754,7 @@ def pin_gem_source name, type = :default, source = nil
   # NOTE:  There is inconsistency in what environment a platform matches.  You
   # may need to read the source to know the exact details.
 
-  def platform *platforms
+  def platform(*platforms)
     @current_platforms = platforms
 
     yield
@@ -781,7 +781,7 @@ def platform *platforms
   # version.  This matching is performed by using the RUBY_ENGINE and
   # engine_specific VERSION constants.  (For JRuby, JRUBY_VERSION).
 
-  def ruby version, options = {}
+  def ruby(version, options = {})
     engine         = options[:engine]
     engine_version = options[:engine_version]
 
@@ -791,24 +791,24 @@ def ruby version, options = {}
 
     return true if @installing
 
-    unless RUBY_VERSION == version then
+    unless RUBY_VERSION == version
       message = "Your Ruby version is #{RUBY_VERSION}, " +
                 "but your #{gem_deps_file} requires #{version}"
 
       raise Gem::RubyVersionMismatch, message
     end
 
-    if engine and engine != Gem.ruby_engine then
+    if engine and engine != Gem.ruby_engine
       message = "Your Ruby engine is #{Gem.ruby_engine}, " +
                 "but your #{gem_deps_file} requires #{engine}"
 
       raise Gem::RubyVersionMismatch, message
     end
 
-    if engine_version then
+    if engine_version
       my_engine_version = Object.const_get "#{Gem.ruby_engine.upcase}_VERSION"
 
-      if engine_version != my_engine_version then
+      if engine_version != my_engine_version
         message =
           "Your Ruby engine version is #{Gem.ruby_engine} #{my_engine_version}, " +
           "but your #{gem_deps_file} requires #{engine} #{engine_version}"
@@ -834,7 +834,7 @@ def ruby version, options = {}
   # * The +prepend:+ option is not supported.  If you wish to order sources
   #   then list them in your preferred order.
 
-  def source url
+  def source(url)
     Gem.sources.clear if @default_sources
 
     @default_sources = false
@@ -842,8 +842,4 @@ def source url
     Gem.sources << url
   end
 
-  # TODO: remove this typo name at RubyGems 3.0
-
-  Gem::RequestSet::GemDepedencyAPI = self # :nodoc:
-
 end
diff --git a/lib/ruby/stdlib/rubygems/request_set/lockfile.rb b/lib/ruby/stdlib/rubygems/request_set/lockfile.rb
index 76ad17d4862..1b374660f0f 100644
--- a/lib/ruby/stdlib/rubygems/request_set/lockfile.rb
+++ b/lib/ruby/stdlib/rubygems/request_set/lockfile.rb
@@ -29,7 +29,7 @@ class ParseError < Gem::Exception
     # Raises a ParseError with the given +message+ which was encountered at a
     # +line+ and +column+ while parsing.
 
-    def initialize message, column, line, path
+    def initialize(message, column, line, path)
       @line   = line
       @column = column
       @path   = path
@@ -41,13 +41,13 @@ def initialize message, column, line, path
   # Creates a new Lockfile for the given +request_set+ and +gem_deps_file+
   # location.
 
-  def self.build request_set, gem_deps_file, dependencies = nil
+  def self.build(request_set, gem_deps_file, dependencies = nil)
     request_set.resolve
     dependencies ||= requests_to_deps request_set.sorted_requests
     new request_set, gem_deps_file, dependencies
   end
 
-  def self.requests_to_deps requests # :nodoc:
+  def self.requests_to_deps(requests) # :nodoc:
     deps = {}
 
     requests.each do |request|
@@ -56,7 +56,7 @@ def self.requests_to_deps requests # :nodoc:
       requirement = request.request.dependency.requirement
 
       deps[name] = if [Gem::Resolver::VendorSpecification,
-                       Gem::Resolver::GitSpecification].include? spec.class then
+                       Gem::Resolver::GitSpecification].include? spec.class
                      Gem::Requirement.source_set
                    else
                      requirement
@@ -71,7 +71,7 @@ def self.requests_to_deps requests # :nodoc:
 
   attr_reader :platforms
 
-  def initialize request_set, gem_deps_file, dependencies
+  def initialize(request_set, gem_deps_file, dependencies)
     @set           = request_set
     @dependencies  = dependencies
     @gem_deps_file = File.expand_path(gem_deps_file)
@@ -82,7 +82,7 @@ def initialize request_set, gem_deps_file, dependencies
     @platforms      = []
   end
 
-  def add_DEPENDENCIES out # :nodoc:
+  def add_DEPENDENCIES(out) # :nodoc:
     out << "DEPENDENCIES"
 
     out.concat @dependencies.sort_by { |name,| name }.map { |name, requirement|
@@ -92,7 +92,7 @@ def add_DEPENDENCIES out # :nodoc:
     out << nil
   end
 
-  def add_GEM out, spec_groups # :nodoc:
+  def add_GEM(out, spec_groups) # :nodoc:
     return if spec_groups.empty?
 
     source_groups = spec_groups.values.flatten.group_by do |request|
@@ -122,7 +122,7 @@ def add_GEM out, spec_groups # :nodoc:
     end
   end
 
-  def add_GIT out, git_requests
+  def add_GIT(out, git_requests)
     return if git_requests.empty?
 
     by_repository_revision = git_requests.group_by do |request|
@@ -148,11 +148,11 @@ def add_GIT out, git_requests
     end
   end
 
-  def relative_path_from dest, base # :nodoc:
+  def relative_path_from(dest, base) # :nodoc:
     dest = File.expand_path(dest)
     base = File.expand_path(base)
 
-    if dest.index(base) == 0 then
+    if dest.index(base) == 0
       offset = dest[base.size+1..-1]
 
       return '.' unless offset
@@ -163,7 +163,7 @@ def relative_path_from dest, base # :nodoc:
     end
   end
 
-  def add_PATH out, path_requests # :nodoc:
+  def add_PATH(out, path_requests) # :nodoc:
     return if path_requests.empty?
 
     out << "PATH"
@@ -178,7 +178,7 @@ def add_PATH out, path_requests # :nodoc:
     out << nil
   end
 
-  def add_PLATFORMS out # :nodoc:
+  def add_PLATFORMS(out) # :nodoc:
     out << "PLATFORMS"
 
     platforms = requests.map { |request| request.spec.platform }.uniq
diff --git a/lib/ruby/stdlib/rubygems/request_set/lockfile/parser.rb b/lib/ruby/stdlib/rubygems/request_set/lockfile/parser.rb
index ebea9401882..0fe0405e321 100644
--- a/lib/ruby/stdlib/rubygems/request_set/lockfile/parser.rb
+++ b/lib/ruby/stdlib/rubygems/request_set/lockfile/parser.rb
@@ -3,7 +3,7 @@ class Gem::RequestSet::Lockfile::Parser
   ###
   # Parses lockfiles
 
-  def initialize tokenizer, set, platforms, filename = nil
+  def initialize(tokenizer, set, platforms, filename = nil)
     @tokens    = tokenizer
     @filename  = filename
     @set       = set
@@ -41,10 +41,10 @@ def parse
   ##
   # Gets the next token for a Lockfile
 
-  def get expected_types = nil, expected_value = nil # :nodoc:
+  def get(expected_types = nil, expected_value = nil) # :nodoc:
     token = @tokens.shift
 
-    if expected_types and not Array(expected_types).include? token.type then
+    if expected_types and not Array(expected_types).include? token.type
       unget token
 
       message = "unexpected token [#{token.type.inspect}, #{token.value.inspect}], " +
@@ -53,7 +53,7 @@ def get expected_types = nil, expected_value = nil # :nodoc:
       raise Gem::RequestSet::Lockfile::ParseError.new message, token.column, token.line, @filename
     end
 
-    if expected_value and expected_value != token.value then
+    if expected_value and expected_value != token.value
       unget token
 
       message = "unexpected token [#{token.type.inspect}, #{token.value.inspect}], " +
@@ -93,7 +93,7 @@ def parse_DEPENDENCIES # :nodoc:
 
         get :r_paren
 
-        if peek[0] == :bang then
+        if peek[0] == :bang
           requirements.clear
           requirements << pinned_requirement(token.value)
 
@@ -144,7 +144,7 @@ def parse_GEM # :nodoc:
         type = token.type
         data = token.value
 
-        if type == :text and column == 4 then
+        if type == :text and column == 4
           version, platform = data.split '-', 2
 
           platform =
@@ -183,7 +183,7 @@ def parse_GIT # :nodoc:
 
     type = peek.type
     value = peek.value
-    if type == :entry and %w[branch ref tag].include? value then
+    if type == :entry and %w[branch ref tag].include? value
       get
       get :text
 
@@ -214,7 +214,7 @@ def parse_GIT # :nodoc:
         type = token.type
         data = token.value
 
-        if type == :text and column == 4 then
+        if type == :text and column == 4
           last_spec = set.add_git_spec name, data, repository, revision, true
         else
           dependency = parse_dependency name, data
@@ -261,7 +261,7 @@ def parse_PATH # :nodoc:
         type = token.type
         data = token.value
 
-        if type == :text and column == 4 then
+        if type == :text and column == 4
           last_spec = set.add_vendor_gem name, directory
         else
           dependency = parse_dependency name, data
@@ -294,7 +294,7 @@ def parse_PLATFORMS # :nodoc:
   # Parses the requirements following the dependency +name+ and the +op+ for
   # the first token of the requirements and returns a Gem::Dependency object.
 
-  def parse_dependency name, op # :nodoc:
+  def parse_dependency(name, op) # :nodoc:
     return Gem::Dependency.new name, op unless peek[0] == :text
 
     version = get(:text).value
@@ -314,7 +314,7 @@ def parse_dependency name, op # :nodoc:
 
   private
 
-  def skip type # :nodoc:
+  def skip(type) # :nodoc:
     @tokens.skip type
   end
 
@@ -325,30 +325,19 @@ def peek # :nodoc:
     @tokens.peek
   end
 
-  if [].respond_to? :flat_map
-    def pinned_requirement name # :nodoc:
-      requirement = Gem::Dependency.new name
-      specification = @set.sets.flat_map { |set|
-        set.find_all(requirement)
-      }.compact.first
+  def pinned_requirement(name) # :nodoc:
+    requirement = Gem::Dependency.new name
+    specification = @set.sets.flat_map { |set|
+      set.find_all(requirement)
+    }.compact.first
 
-      specification && specification.version
-    end
-  else # FIXME: remove when 1.8 is dropped
-    def pinned_requirement name # :nodoc:
-      requirement = Gem::Dependency.new name
-      specification = @set.sets.map { |set|
-        set.find_all(requirement)
-      }.flatten(1).compact.first
-
-      specification && specification.version
-    end
+    specification && specification.version
   end
 
   ##
   # Ungets the last token retrieved by #get
 
-  def unget token # :nodoc:
+  def unget(token) # :nodoc:
     @tokens.unshift token
   end
 end
diff --git a/lib/ruby/stdlib/rubygems/request_set/lockfile/tokenizer.rb b/lib/ruby/stdlib/rubygems/request_set/lockfile/tokenizer.rb
index a758743dda8..bb69c85fb45 100644
--- a/lib/ruby/stdlib/rubygems/request_set/lockfile/tokenizer.rb
+++ b/lib/ruby/stdlib/rubygems/request_set/lockfile/tokenizer.rb
@@ -5,11 +5,11 @@ class Gem::RequestSet::Lockfile::Tokenizer
   Token = Struct.new :type, :value, :column, :line
   EOF   = Token.new :EOF
 
-  def self.from_file file
+  def self.from_file(file)
     new File.read(file), file
   end
 
-  def initialize input, filename = nil, line = 0, pos = 0
+  def initialize(input, filename = nil, line = 0, pos = 0)
     @line     = line
     @line_pos = pos
     @tokens   = []
@@ -17,7 +17,7 @@ def initialize input, filename = nil, line = 0, pos = 0
     tokenize input
   end
 
-  def make_parser set, platforms
+  def make_parser(set, platforms)
     Gem::RequestSet::Lockfile::Parser.new self, set, platforms, @filename
   end
 
@@ -25,7 +25,7 @@ def to_a
     @tokens.map { |token| [token.type, token.value, token.column, token.line] }
   end
 
-  def skip type
+  def skip(type)
     @tokens.shift while not @tokens.empty? and peek.type == type
   end
 
@@ -33,7 +33,7 @@ def skip type
   # Calculates the column (by byte) and the line of the current token based on
   # +byte_offset+.
 
-  def token_pos byte_offset # :nodoc:
+  def token_pos(byte_offset) # :nodoc:
     [byte_offset - @line_pos, @line]
   end
 
@@ -41,7 +41,7 @@ def empty?
     @tokens.empty?
   end
 
-  def unshift token
+  def unshift(token)
     @tokens.unshift token
   end
 
@@ -56,7 +56,7 @@ def peek
 
   private
 
-  def tokenize input
+  def tokenize(input)
     require 'strscan'
     s = StringScanner.new input
 
@@ -65,7 +65,7 @@ def tokenize input
 
       pos = s.pos if leading_whitespace = s.scan(/ +/)
 
-      if s.scan(/[<|=>]{7}/) then
+      if s.scan(/[<|=>]{7}/)
         message = "your #{@filename} contains merge conflict markers"
         column, line = token_pos pos
 
@@ -80,7 +80,7 @@ def tokenize input
           @line += 1
           token
         when s.scan(/[A-Z]+/) then
-          if leading_whitespace then
+          if leading_whitespace
             text = s.matched
             text += s.scan(/[^\s)]*/).to_s # in case of no match
             Token.new(:text, text, *token_pos(pos))
diff --git a/lib/ruby/stdlib/rubygems/requirement.rb b/lib/ruby/stdlib/rubygems/requirement.rb
index 430f3512808..1a73274c015 100644
--- a/lib/ruby/stdlib/rubygems/requirement.rb
+++ b/lib/ruby/stdlib/rubygems/requirement.rb
@@ -22,22 +22,22 @@ class Gem::Requirement
     ">=" =>  lambda { |v, r| v >= r },
     "<=" =>  lambda { |v, r| v <= r },
     "~>" =>  lambda { |v, r| v >= r && v.release < r.bump }
-  }
+  }.freeze
 
   SOURCE_SET_REQUIREMENT = Struct.new(:for_lockfile).new "!" # :nodoc:
 
   quoted  = OPS.keys.map { |k| Regexp.quote k }.join "|"
-  PATTERN_RAW = "\\s*(#{quoted})?\\s*(#{Gem::Version::VERSION_PATTERN})\\s*" # :nodoc:
+  PATTERN_RAW = "\\s*(#{quoted})?\\s*(#{Gem::Version::VERSION_PATTERN})\\s*".freeze # :nodoc:
 
   ##
   # A regular expression that matches a requirement
 
-  PATTERN = /\A#{PATTERN_RAW}\z/
+  PATTERN = /\A#{PATTERN_RAW}\z/.freeze
 
   ##
   # The default requirement matches any version
 
-  DefaultRequirement = [">=", Gem::Version.new(0)]
+  DefaultRequirement = [">=", Gem::Version.new(0)].freeze
 
   ##
   # Raised when a bad requirement is encountered
@@ -51,7 +51,7 @@ class BadRequirementError < ArgumentError; end
   # If the input is "weird", the default version requirement is
   # returned.
 
-  def self.create *inputs
+  def self.create(*inputs)
     return new inputs if inputs.length > 1
 
     input = inputs.shift
@@ -64,7 +64,7 @@ def self.create *inputs
     when '!' then
       source_set
     else
-      if input.respond_to? :to_str then
+      if input.respond_to? :to_str
         new [input.to_str]
       else
         default
@@ -98,7 +98,7 @@ def self.source_set # :nodoc:
   #     parse("1.0")                   # => ["=", Gem::Version.new("1.0")]
   #     parse(Gem::Version.new("1.0")) # => ["=,  Gem::Version.new("1.0")]
 
-  def self.parse obj
+  def self.parse(obj)
     return ["=", obj] if Gem::Version === obj
 
     unless PATTERN =~ obj.to_s
@@ -124,7 +124,7 @@ def self.parse obj
   # requirements are ignored. An empty set of +requirements+ is the
   # same as <tt>">= 0"</tt>.
 
-  def initialize *requirements
+  def initialize(*requirements)
     requirements = requirements.flatten
     requirements.compact!
     requirements.uniq!
@@ -140,7 +140,7 @@ def initialize *requirements
   ##
   # Concatenates the +new+ requirements onto this requirement.
 
-  def concat new
+  def concat(new)
     new = new.flatten
     new.compact!
     new.uniq!
@@ -198,7 +198,7 @@ def marshal_dump # :nodoc:
     [@requirements]
   end
 
-  def marshal_load array # :nodoc:
+  def marshal_load(array) # :nodoc:
     @requirements = array[0]
 
     fix_syck_default_key_in_requirements
@@ -213,7 +213,7 @@ def yaml_initialize(tag, vals) # :nodoc:
     fix_syck_default_key_in_requirements
   end
 
-  def init_with coder # :nodoc:
+  def init_with(coder) # :nodoc:
     yaml_initialize coder.tag, coder.map
   end
 
@@ -221,7 +221,7 @@ def to_yaml_properties # :nodoc:
     ["@requirements"]
   end
 
-  def encode_with coder # :nodoc:
+  def encode_with(coder) # :nodoc:
     coder.add 'requirements', @requirements
   end
 
@@ -233,7 +233,7 @@ def prerelease?
     requirements.any? { |r| r.last.prerelease? }
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 1, 'Gem::Requirement.new(', ')' do
       q.pp as_list
     end
@@ -242,7 +242,7 @@ def pretty_print q # :nodoc:
   ##
   # True if +version+ satisfies this Requirement.
 
-  def satisfied_by? version
+  def satisfied_by?(version)
     raise ArgumentError, "Need a Gem::Version: #{version.inspect}" unless
       Gem::Version === version
     # #28965: syck has a bug with unquoted '=' YAML.loading as YAML::DefaultKey
@@ -265,7 +265,7 @@ def to_s # :nodoc:
     as_list.join ", "
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     return unless Gem::Requirement === other
     requirements == other.requirements
   end
@@ -284,7 +284,7 @@ def fix_syck_default_key_in_requirements # :nodoc:
   end
 
   def sort_requirements! # :nodoc:
-    @requirements.sort! do |l, r| 
+    @requirements.sort! do |l, r|
       comp = l.last <=> r.last # first, sort by the requirement's version
       next comp unless comp == 0
       l.first <=> r.first # then, sort by the operator (for stability)
diff --git a/lib/ruby/stdlib/rubygems/resolver.rb b/lib/ruby/stdlib/rubygems/resolver.rb
index 13ee035e4c2..46276f3260e 100644
--- a/lib/ruby/stdlib/rubygems/resolver.rb
+++ b/lib/ruby/stdlib/rubygems/resolver.rb
@@ -59,7 +59,7 @@ class Gem::Resolver
   # uniform manner.  If one of the +sets+ is itself a ComposedSet its sets are
   # flattened into the result ComposedSet.
 
-  def self.compose_sets *sets
+  def self.compose_sets(*sets)
     sets.compact!
 
     sets = sets.map do |set|
@@ -87,7 +87,7 @@ def self.compose_sets *sets
   # Creates a Resolver that queries only against the already installed gems
   # for the +needed+ dependencies.
 
-  def self.for_current_gems needed
+  def self.for_current_gems(needed)
     new needed, Gem::Resolver::CurrentSet.new
   end
 
@@ -99,7 +99,7 @@ def self.for_current_gems needed
   # satisfy the Dependencies. This defaults to IndexSet, which will query
   # rubygems.org.
 
-  def initialize needed, set = nil
+  def initialize(needed, set = nil)
     @set = set || Gem::Resolver::IndexSet.new
     @needed = needed
 
@@ -112,14 +112,14 @@ def initialize needed, set = nil
     @stats               = Gem::Resolver::Stats.new
   end
 
-  def explain stage, *data # :nodoc:
+  def explain(stage, *data) # :nodoc:
     return unless DEBUG_RESOLVER
 
     d = data.map { |x| x.pretty_inspect }.join(", ")
     $stderr.printf "%10s %s\n", stage.to_s.upcase, d
   end
 
-  def explain_list stage # :nodoc:
+  def explain_list(stage) # :nodoc:
     return unless DEBUG_RESOLVER
 
     data = yield
@@ -133,7 +133,7 @@ def explain_list stage # :nodoc:
   #
   # Returns the Specification and the ActivationRequest
 
-  def activation_request dep, possible # :nodoc:
+  def activation_request(dep, possible) # :nodoc:
     spec = possible.pop
 
     explain :activate, [spec.full_name, possible.size]
@@ -145,7 +145,7 @@ def activation_request dep, possible # :nodoc:
     return spec, activation_request
   end
 
-  def requests s, act, reqs=[] # :nodoc:
+  def requests(s, act, reqs=[]) # :nodoc:
     return reqs if @ignore_dependencies
 
     s.fetch_development_dependencies if @development
@@ -171,7 +171,7 @@ def requests s, act, reqs=[] # :nodoc:
   include Molinillo::UI
 
   def output
-    @output ||= debug? ? $stdout : File.open(Gem::Util::NULL_DEVICE, 'w')
+    @output ||= debug? ? $stdout : File.open(IO::NULL, 'w')
   end
 
   def debug?
@@ -197,7 +197,7 @@ def resolve
   # Extracts the specifications that may be able to fulfill +dependency+ and
   # returns those that match the local platform and all those that match.
 
-  def find_possible dependency # :nodoc:
+  def find_possible(dependency) # :nodoc:
     all = @set.find_all dependency
 
     if (skip_dep_gems = skip_gems[dependency.name]) && !skip_dep_gems.empty?
@@ -216,7 +216,7 @@ def find_possible dependency # :nodoc:
   ##
   # Returns the gems in +specs+ that match the local platform.
 
-  def select_local_platforms specs # :nodoc:
+  def select_local_platforms(specs) # :nodoc:
     specs.select do |spec|
       Gem::Platform.installable? spec
     end
@@ -314,11 +314,6 @@ def amount_constrained(dependency)
 
 end
 
-##
-# TODO remove in RubyGems 3
-
-Gem::DependencyResolver = Gem::Resolver # :nodoc:
-
 require 'rubygems/resolver/activation_request'
 require 'rubygems/resolver/conflict'
 require 'rubygems/resolver/dependency_request'
diff --git a/lib/ruby/stdlib/rubygems/resolver/activation_request.rb b/lib/ruby/stdlib/rubygems/resolver/activation_request.rb
index 135d75d6bc7..b28e1bef32f 100644
--- a/lib/ruby/stdlib/rubygems/resolver/activation_request.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/activation_request.rb
@@ -22,13 +22,13 @@ class Gem::Resolver::ActivationRequest
   # +others_possible+ indicates that other specifications may also match this
   # activation request.
 
-  def initialize spec, request, others_possible = true
+  def initialize(spec, request, others_possible = true)
     @spec = spec
     @request = request
     @others_possible = others_possible
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     case other
     when Gem::Specification
       @spec == other
@@ -49,7 +49,7 @@ def development?
   ##
   # Downloads a gem at +path+ and returns the file path.
 
-  def download path
+  def download(path)
     Gem.ensure_gem_subdirectories path
 
     if @spec.respond_to? :sources
@@ -97,7 +97,7 @@ def inspect # :nodoc:
       when false then # TODO remove at RubyGems 3
         nil
       else
-        unless @others_possible.empty? then
+        unless @others_possible.empty?
           others = @others_possible.map { |s| s.full_name }
           " (others possible: #{others.join ', '})"
         end
@@ -152,7 +152,7 @@ def parent
     @request.requester
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[Activation request', ']' do
       q.breakable
       q.pp @spec
@@ -167,7 +167,7 @@ def pretty_print q # :nodoc:
         q.breakable
         q.text 'others possible'
       else
-        unless @others_possible.empty? then
+        unless @others_possible.empty?
           q.breakable
           q.text 'others '
           q.pp @others_possible.map { |s| s.full_name }
diff --git a/lib/ruby/stdlib/rubygems/resolver/api_set.rb b/lib/ruby/stdlib/rubygems/resolver/api_set.rb
index ee3046af637..6fd91e3b730 100644
--- a/lib/ruby/stdlib/rubygems/resolver/api_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/api_set.rb
@@ -25,7 +25,7 @@ class Gem::Resolver::APISet < Gem::Resolver::Set
   # API URL +dep_uri+ which is described at
   # http://guides.rubygems.org/rubygems-org-api
 
-  def initialize dep_uri = 'https://rubygems.org/api/v1/dependencies'
+  def initialize(dep_uri = 'https://rubygems.org/api/v1/dependencies')
     super()
 
     dep_uri = URI dep_uri unless URI === dep_uri # for ruby 1.8
@@ -43,7 +43,7 @@ def initialize dep_uri = 'https://rubygems.org/api/v1/dependencies'
   # Return an array of APISpecification objects matching
   # DependencyRequest +req+.
 
-  def find_all req
+  def find_all(req)
     res = []
 
     return res unless @remote
@@ -65,7 +65,7 @@ def find_all req
   # A hint run by the resolver to allow the Set to fetch
   # data for DependencyRequests +reqs+.
 
-  def prefetch reqs
+  def prefetch(reqs)
     return unless @remote
     names = reqs.map { |r| r.dependency.name }
     needed = names - @data.keys - @to_fetch
@@ -93,7 +93,7 @@ def prefetch_now # :nodoc:
     end
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[APISet', ']' do
       q.breakable
       q.text "URI: #{@dep_uri}"
@@ -107,7 +107,7 @@ def pretty_print q # :nodoc:
   ##
   # Return data for all versions of the gem +name+.
 
-  def versions name # :nodoc:
+  def versions(name) # :nodoc:
     if @data.key?(name)
       return @data[name]
     end
@@ -123,4 +123,3 @@ def versions name # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/api_specification.rb b/lib/ruby/stdlib/rubygems/resolver/api_specification.rb
index c4e8a7cb546..9bbc0957886 100644
--- a/lib/ruby/stdlib/rubygems/resolver/api_specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/api_specification.rb
@@ -27,7 +27,7 @@ def initialize(set, api_data)
     end
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     self.class === other and
       @set          == other.set and
       @name         == other.name and
@@ -46,7 +46,7 @@ def installable_platform? # :nodoc:
     Gem::Platform.match @platform
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[APISpecification', ']' do
       q.breakable
       q.text "name: #{name}"
@@ -88,4 +88,3 @@ def source # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/best_set.rb b/lib/ruby/stdlib/rubygems/resolver/best_set.rb
index 4479535abe3..cc91b65c0bc 100644
--- a/lib/ruby/stdlib/rubygems/resolver/best_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/best_set.rb
@@ -10,7 +10,7 @@ class Gem::Resolver::BestSet < Gem::Resolver::ComposedSet
   # Creates a BestSet for the given +sources+ or Gem::sources if none are
   # specified.  +sources+ must be a Gem::SourceList.
 
-  def initialize sources = Gem.sources
+  def initialize(sources = Gem.sources)
     super()
 
     @sources = sources
@@ -25,7 +25,7 @@ def pick_sets # :nodoc:
     end
   end
 
-  def find_all req # :nodoc:
+  def find_all(req) # :nodoc:
     pick_sets if @remote and @sets.empty?
 
     super
@@ -35,13 +35,13 @@ def find_all req # :nodoc:
     retry
   end
 
-  def prefetch reqs # :nodoc:
+  def prefetch(reqs) # :nodoc:
     pick_sets if @remote and @sets.empty?
 
     super
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[BestSet', ']' do
       q.breakable
       q.text 'sets:'
@@ -58,7 +58,7 @@ def pretty_print q # :nodoc:
   #
   # The calling method must retry the exception to repeat the lookup.
 
-  def replace_failed_api_set error # :nodoc:
+  def replace_failed_api_set(error) # :nodoc:
     uri = error.uri
     uri = URI uri unless URI === uri
     uri.query = nil
@@ -76,4 +76,3 @@ def replace_failed_api_set error # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/composed_set.rb b/lib/ruby/stdlib/rubygems/resolver/composed_set.rb
index 0b65942dcae..4baac9c75ba 100644
--- a/lib/ruby/stdlib/rubygems/resolver/composed_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/composed_set.rb
@@ -16,7 +16,7 @@ class Gem::Resolver::ComposedSet < Gem::Resolver::Set
   # Creates a new ComposedSet containing +sets+.  Use
   # Gem::Resolver::compose_sets instead.
 
-  def initialize *sets
+  def initialize(*sets)
     super()
 
     @sets = sets
@@ -26,7 +26,7 @@ def initialize *sets
   # When +allow_prerelease+ is set to +true+ prereleases gems are allowed to
   # match dependencies.
 
-  def prerelease= allow_prerelease
+  def prerelease=(allow_prerelease)
     super
 
     sets.each do |set|
@@ -37,7 +37,7 @@ def prerelease= allow_prerelease
   ##
   # Sets the remote network access for all composed sets.
 
-  def remote= remote
+  def remote=(remote)
     super
 
     @sets.each { |set| set.remote = remote }
@@ -50,7 +50,7 @@ def errors
   ##
   # Finds all specs matching +req+ in all sets.
 
-  def find_all req
+  def find_all(req)
     @sets.map do |s|
       s.find_all req
     end.flatten
@@ -59,9 +59,8 @@ def find_all req
   ##
   # Prefetches +reqs+ in all sets.
 
-  def prefetch reqs
+  def prefetch(reqs)
     @sets.each { |s| s.prefetch(reqs) }
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/conflict.rb b/lib/ruby/stdlib/rubygems/resolver/conflict.rb
index 7997f92950d..fb1e661b214 100644
--- a/lib/ruby/stdlib/rubygems/resolver/conflict.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/conflict.rb
@@ -27,7 +27,7 @@ def initialize(dependency, activated, failed_dep=dependency)
     @failed_dep = failed_dep
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     self.class === other and
       @dependency == other.dependency and
       @activated  == other.activated  and
@@ -57,7 +57,7 @@ def explanation
     requirement = dependency.requirement
     alternates  = dependency.matching_specs.map { |spec| spec.full_name }
 
-    unless alternates.empty? then
+    unless alternates.empty?
       matching = <<-MATCHING.chomp
 
   Gems matching %s:
@@ -97,7 +97,7 @@ def for_spec?(spec)
     @dependency.name == spec.name
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[Dependency conflict: ', ']' do
       q.breakable
 
@@ -109,7 +109,7 @@ def pretty_print q # :nodoc:
       q.pp @dependency
 
       q.breakable
-      if @dependency == @failed_dep then
+      if @dependency == @failed_dep
         q.text ' failed'
       else
         q.text ' failed dependency '
@@ -121,7 +121,7 @@ def pretty_print q # :nodoc:
   ##
   # Path of activations from the +current+ list.
 
-  def request_path current
+  def request_path(current)
     path = []
 
     while current do
diff --git a/lib/ruby/stdlib/rubygems/resolver/current_set.rb b/lib/ruby/stdlib/rubygems/resolver/current_set.rb
index 265c639f153..d60e46389d1 100644
--- a/lib/ruby/stdlib/rubygems/resolver/current_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/current_set.rb
@@ -6,9 +6,8 @@
 
 class Gem::Resolver::CurrentSet < Gem::Resolver::Set
 
-  def find_all req
+  def find_all(req)
     req.dependency.matching_specs
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/dependency_request.rb b/lib/ruby/stdlib/rubygems/resolver/dependency_request.rb
index c2918911cd3..1984aa9ddc6 100644
--- a/lib/ruby/stdlib/rubygems/resolver/dependency_request.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/dependency_request.rb
@@ -19,12 +19,12 @@ class Gem::Resolver::DependencyRequest
   # Creates a new DependencyRequest for +dependency+ from +requester+.
   # +requester may be nil if the request came from a user.
 
-  def initialize dependency, requester
+  def initialize(dependency, requester)
     @dependency = dependency
     @requester  = requester
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     case other
     when Gem::Dependency
       @dependency == other
@@ -48,7 +48,7 @@ def development?
   # NOTE:  #match? only matches prerelease versions when #dependency is a
   # prerelease dependency.
 
-  def match? spec, allow_prerelease = false
+  def match?(spec, allow_prerelease = false)
     @dependency.match? spec, nil, allow_prerelease
   end
 
@@ -95,7 +95,7 @@ def request_context
     @requester ? @requester.request : "(unknown)"
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[Dependency request ', ']' do
       q.breakable
       q.text @dependency.to_s
diff --git a/lib/ruby/stdlib/rubygems/resolver/git_set.rb b/lib/ruby/stdlib/rubygems/resolver/git_set.rb
index 723a202d7aa..6340b92faec 100644
--- a/lib/ruby/stdlib/rubygems/resolver/git_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/git_set.rb
@@ -43,7 +43,7 @@ def initialize # :nodoc:
     @specs           = {}
   end
 
-  def add_git_gem name, repository, reference, submodules # :nodoc:
+  def add_git_gem(name, repository, reference, submodules) # :nodoc:
     @repositories[name] = [repository, reference]
     @need_submodules[repository] = submodules
   end
@@ -56,7 +56,7 @@ def add_git_gem name, repository, reference, submodules # :nodoc:
   # This fills in the prefetch information as enough information about the gem
   # is present in the arguments.
 
-  def add_git_spec name, version, repository, reference, submodules # :nodoc:
+  def add_git_spec(name, version, repository, reference, submodules) # :nodoc:
     add_git_gem name, repository, reference, submodules
 
     source = Gem::Source::Git.new name, repository, reference
@@ -77,7 +77,7 @@ def add_git_spec name, version, repository, reference, submodules # :nodoc:
   ##
   # Finds all git gems matching +req+
 
-  def find_all req
+  def find_all(req)
     prefetch nil
 
     specs.values.select do |spec|
@@ -88,7 +88,7 @@ def find_all req
   ##
   # Prefetches specifications from the git repositories in this set.
 
-  def prefetch reqs
+  def prefetch(reqs)
     return unless @specs.empty?
 
     @repositories.each do |name, (repository, reference)|
@@ -104,7 +104,7 @@ def prefetch reqs
     end
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[GitSet', ']' do
       next if @repositories.empty?
       q.breakable
@@ -120,4 +120,3 @@ def pretty_print q # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/git_specification.rb b/lib/ruby/stdlib/rubygems/resolver/git_specification.rb
index 2448797d3fd..f43cfba853e 100644
--- a/lib/ruby/stdlib/rubygems/resolver/git_specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/git_specification.rb
@@ -6,14 +6,14 @@
 
 class Gem::Resolver::GitSpecification < Gem::Resolver::SpecSpecification
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     self.class === other and
       @set  == other.set and
       @spec == other.spec and
       @source == other.source
   end
 
-  def add_dependency dependency # :nodoc:
+  def add_dependency(dependency) # :nodoc:
     spec.dependencies << dependency
   end
 
@@ -21,7 +21,7 @@ def add_dependency dependency # :nodoc:
   # Installing a git gem only involves building the extensions and generating
   # the executables.
 
-  def install options = {}
+  def install(options = {})
     require 'rubygems/installer'
 
     installer = Gem::Installer.for_spec spec, options
@@ -35,7 +35,7 @@ def install options = {}
     installer.run_post_install_hooks
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[GitSpecification', ']' do
       q.breakable
       q.text "name: #{name}"
@@ -56,4 +56,3 @@ def pretty_print q # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/index_set.rb b/lib/ruby/stdlib/rubygems/resolver/index_set.rb
index 2450f14b4f8..e32e1fa5baf 100644
--- a/lib/ruby/stdlib/rubygems/resolver/index_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/index_set.rb
@@ -5,11 +5,11 @@
 
 class Gem::Resolver::IndexSet < Gem::Resolver::Set
 
-  def initialize source = nil # :nodoc:
+  def initialize(source = nil) # :nodoc:
     super()
 
     @f =
-      if source then
+      if source
         sources = Gem::SourceList.from [source]
 
         Gem::SpecFetcher.new sources
@@ -36,7 +36,7 @@ def initialize source = nil # :nodoc:
   # Return an array of IndexSpecification objects matching
   # DependencyRequest +req+.
 
-  def find_all req
+  def find_all(req)
     res = []
 
     return res unless @remote
@@ -44,7 +44,7 @@ def find_all req
     name = req.dependency.name
 
     @all[name].each do |uri, n|
-      if req.match? n, @prerelease then
+      if req.match? n, @prerelease
         res << Gem::Resolver::IndexSpecification.new(
           self, n.name, n.version, uri, n.platform)
       end
@@ -53,7 +53,7 @@ def find_all req
     res
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[IndexSet', ']' do
       q.breakable
       q.text 'sources:'
@@ -78,4 +78,3 @@ def pretty_print q # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/index_specification.rb b/lib/ruby/stdlib/rubygems/resolver/index_specification.rb
index 4340f46943a..ed9423791c4 100644
--- a/lib/ruby/stdlib/rubygems/resolver/index_specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/index_specification.rb
@@ -15,7 +15,7 @@ class Gem::Resolver::IndexSpecification < Gem::Resolver::Specification
   # The +name+, +version+ and +platform+ are the name, version and platform of
   # the gem.
 
-  def initialize set, name, version, source, platform
+  def initialize(set, name, version, source, platform)
     super()
 
     @set = set
@@ -38,12 +38,12 @@ def inspect # :nodoc:
     '#<%s %s source %s>' % [self.class, full_name, @source]
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[Index specification', ']' do
       q.breakable
       q.text full_name
 
-      unless Gem::Platform::RUBY == @platform then
+      unless Gem::Platform::RUBY == @platform
         q.breakable
         q.text @platform.to_s
       end
@@ -67,4 +67,3 @@ def spec # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/installed_specification.rb b/lib/ruby/stdlib/rubygems/resolver/installed_specification.rb
index d9c6a5e5cf7..9d996fc1daf 100644
--- a/lib/ruby/stdlib/rubygems/resolver/installed_specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/installed_specification.rb
@@ -5,7 +5,7 @@
 
 class Gem::Resolver::InstalledSpecification < Gem::Resolver::SpecSpecification
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     self.class === other and
       @set  == other.set and
       @spec == other.spec
@@ -15,7 +15,7 @@ def == other # :nodoc:
   # This is a null install as this specification is already installed.
   # +options+ are ignored.
 
-  def install options = {}
+  def install(options = {})
     yield nil
   end
 
@@ -30,7 +30,7 @@ def installable_platform?
     super
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[InstalledSpecification', ']' do
       q.breakable
       q.text "name: #{name}"
@@ -56,4 +56,3 @@ def source
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/installer_set.rb b/lib/ruby/stdlib/rubygems/resolver/installer_set.rb
index f24293c0a03..f3827ad4e9c 100644
--- a/lib/ruby/stdlib/rubygems/resolver/installer_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/installer_set.rb
@@ -29,7 +29,7 @@ class Gem::Resolver::InstallerSet < Gem::Resolver::Set
   ##
   # Creates a new InstallerSet that will look for gems in +domain+.
 
-  def initialize domain
+  def initialize(domain)
     super()
 
     @domain = domain
@@ -50,7 +50,7 @@ def initialize domain
   # Looks up the latest specification for +dependency+ and adds it to the
   # always_install list.
 
-  def add_always_install dependency
+  def add_always_install(dependency)
     request = Gem::Resolver::DependencyRequest.new dependency, nil
 
     found = find_all request
@@ -65,7 +65,7 @@ def add_always_install dependency
         Gem::Platform.local === s.platform
     end
 
-    if found.empty? then
+    if found.empty?
       exc = Gem::UnsatisfiableDependencyError.new request
       exc.errors = errors
 
@@ -83,7 +83,7 @@ def add_always_install dependency
   # Adds a local gem requested using +dep_name+ with the given +spec+ that can
   # be loaded and installed using the +source+.
 
-  def add_local dep_name, spec, source
+  def add_local(dep_name, spec, source)
     @local[dep_name] = [spec, source]
   end
 
@@ -112,7 +112,7 @@ def errors
   # Returns an array of IndexSpecification objects matching DependencyRequest
   # +req+.
 
-  def find_all req
+  def find_all(req)
     res = []
 
     dep  = req.dependency
@@ -128,7 +128,7 @@ def find_all req
       res << Gem::Resolver::InstalledSpecification.new(self, gemspec)
     end unless @ignore_installed
 
-    if consider_local? then
+    if consider_local?
       matching_local = @local.values.select do |spec, _|
         req.match? spec
       end.map do |spec, source|
@@ -138,7 +138,7 @@ def find_all req
       res.concat matching_local
 
       begin
-        if local_spec = @local_source.find_gem(name, dep.requirement) then
+        if local_spec = @local_source.find_gem(name, dep.requirement)
           res << Gem::Resolver::IndexSpecification.new(
             self, local_spec.name, local_spec.version,
             @local_source, local_spec.platform)
@@ -161,7 +161,7 @@ def prefetch(reqs)
     @remote_set.prefetch(reqs) if consider_remote?
   end
 
-  def prerelease= allow_prerelease
+  def prerelease=(allow_prerelease)
     super
 
     @remote_set.prerelease = allow_prerelease
@@ -179,7 +179,7 @@ def inspect # :nodoc:
   # Called from IndexSpecification to get a true Specification
   # object.
 
-  def load_spec name, ver, platform, source # :nodoc:
+  def load_spec(name, ver, platform, source) # :nodoc:
     key = "#{name}-#{ver}-#{platform}"
 
     @specs.fetch key do
@@ -192,13 +192,13 @@ def load_spec name, ver, platform, source # :nodoc:
   ##
   # Has a local gem for +dep_name+ been added to this set?
 
-  def local? dep_name # :nodoc:
+  def local?(dep_name) # :nodoc:
     spec, _ = @local[dep_name]
 
     spec
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[InstallerSet', ']' do
       q.breakable
       q.text "domain: #{@domain}"
@@ -213,7 +213,7 @@ def pretty_print q # :nodoc:
     end
   end
 
-  def remote= remote # :nodoc:
+  def remote=(remote) # :nodoc:
     case @domain
     when :local then
       @domain = :both if remote
diff --git a/lib/ruby/stdlib/rubygems/resolver/local_specification.rb b/lib/ruby/stdlib/rubygems/resolver/local_specification.rb
index 1d9d22f0acb..7418cfcc864 100644
--- a/lib/ruby/stdlib/rubygems/resolver/local_specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/local_specification.rb
@@ -17,7 +17,7 @@ def local? # :nodoc:
     true
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[LocalSpecification', ']' do
       q.breakable
       q.text "name: #{name}"
@@ -39,4 +39,3 @@ def pretty_print q # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/lock_set.rb b/lib/ruby/stdlib/rubygems/resolver/lock_set.rb
index 7fddc93e1c1..4002a963a46 100644
--- a/lib/ruby/stdlib/rubygems/resolver/lock_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/lock_set.rb
@@ -9,7 +9,7 @@ class Gem::Resolver::LockSet < Gem::Resolver::Set
   ##
   # Creates a new LockSet from the given +sources+
 
-  def initialize sources
+  def initialize(sources)
     super()
 
     @sources = sources.map do |source|
@@ -26,7 +26,7 @@ def initialize sources
   # The specification's set will be the current set, and the source will be
   # the current set's source.
 
-  def add name, version, platform # :nodoc:
+  def add(name, version, platform) # :nodoc:
     version = Gem::Version.new version
     specs = [
       Gem::Resolver::LockSpecification.new(self, name, version, @sources, platform)
@@ -41,7 +41,7 @@ def add name, version, platform # :nodoc:
   # Returns an Array of IndexSpecification objects matching the
   # DependencyRequest +req+.
 
-  def find_all req
+  def find_all(req)
     @specs.select do |spec|
       req.match? spec
     end
@@ -51,7 +51,7 @@ def find_all req
   # Loads a Gem::Specification with the given +name+, +version+ and
   # +platform+.  +source+ is ignored.
 
-  def load_spec name, version, platform, source # :nodoc:
+  def load_spec(name, version, platform, source) # :nodoc:
     dep = Gem::Dependency.new name, version
 
     found = @specs.find do |spec|
@@ -63,7 +63,7 @@ def load_spec name, version, platform, source # :nodoc:
     found.source.fetch_spec tuple
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[LockSet', ']' do
       q.breakable
       q.text 'source:'
@@ -80,4 +80,3 @@ def pretty_print q # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/lock_specification.rb b/lib/ruby/stdlib/rubygems/resolver/lock_specification.rb
index f4856756731..e29b567de4e 100644
--- a/lib/ruby/stdlib/rubygems/resolver/lock_specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/lock_specification.rb
@@ -9,7 +9,7 @@ class Gem::Resolver::LockSpecification < Gem::Resolver::Specification
 
   attr_reader :sources
 
-  def initialize set, name, version, sources, platform
+  def initialize(set, name, version, sources, platform)
     super()
 
     @name     = name
@@ -27,10 +27,10 @@ def initialize set, name, version, sources, platform
   # This is a null install as a locked specification is considered installed.
   # +options+ are ignored.
 
-  def install options = {}
+  def install(options = {})
     destination = options[:install_dir] || Gem.dir
 
-    if File.exist? File.join(destination, 'specifications', spec.spec_name) then
+    if File.exist? File.join(destination, 'specifications', spec.spec_name)
       yield nil
       return
     end
@@ -41,11 +41,11 @@ def install options = {}
   ##
   # Adds +dependency+ from the lockfile to this specification
 
-  def add_dependency dependency # :nodoc:
+  def add_dependency(dependency) # :nodoc:
     @dependencies << dependency
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[LockSpecification', ']' do
       q.breakable
       q.text "name: #{@name}"
@@ -53,12 +53,12 @@ def pretty_print q # :nodoc:
       q.breakable
       q.text "version: #{@version}"
 
-      unless @platform == Gem::Platform::RUBY then
+      unless @platform == Gem::Platform::RUBY
         q.breakable
         q.text "platform: #{@platform}"
       end
 
-      unless @dependencies.empty? then
+      unless @dependencies.empty?
         q.breakable
         q.text 'dependencies:'
         q.breakable
@@ -85,4 +85,3 @@ def spec
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/requirement_list.rb b/lib/ruby/stdlib/rubygems/resolver/requirement_list.rb
index 2768c80170d..98d086e63cd 100644
--- a/lib/ruby/stdlib/rubygems/resolver/requirement_list.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/requirement_list.rb
@@ -18,7 +18,7 @@ def initialize
     @list = []
   end
 
-  def initialize_copy other # :nodoc:
+  def initialize_copy(other) # :nodoc:
     @exact = @exact.dup
     @list = @list.dup
   end
diff --git a/lib/ruby/stdlib/rubygems/resolver/set.rb b/lib/ruby/stdlib/rubygems/resolver/set.rb
index 11704d5c4c3..242f9cd3dc9 100644
--- a/lib/ruby/stdlib/rubygems/resolver/set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/set.rb
@@ -31,7 +31,7 @@ def initialize # :nodoc:
   # The find_all method must be implemented.  It returns all Resolver
   # Specification objects matching the given DependencyRequest +req+.
 
-  def find_all req
+  def find_all(req)
     raise NotImplementedError
   end
 
@@ -43,7 +43,7 @@ def find_all req
   # When overridden, the #prefetch method should look up specifications
   # matching +reqs+.
 
-  def prefetch reqs
+  def prefetch(reqs)
   end
 
   ##
diff --git a/lib/ruby/stdlib/rubygems/resolver/source_set.rb b/lib/ruby/stdlib/rubygems/resolver/source_set.rb
index 66f5963e54a..8e799514fd6 100644
--- a/lib/ruby/stdlib/rubygems/resolver/source_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/source_set.rb
@@ -16,7 +16,7 @@ def initialize
     @sets  = {}
   end
 
-  def find_all req # :nodoc:
+  def find_all(req) # :nodoc:
     if set = get_set(req.dependency.name)
       set.find_all req
     else
@@ -25,7 +25,7 @@ def find_all req # :nodoc:
   end
 
   # potentially no-op
-  def prefetch reqs # :nodoc:
+  def prefetch(reqs) # :nodoc:
     reqs.each do |req|
       if set = get_set(req.dependency.name)
         set.prefetch reqs
@@ -33,11 +33,11 @@ def prefetch reqs # :nodoc:
     end
   end
 
-  def add_source_gem name, source
+  def add_source_gem(name, source)
     @links[name] = source
   end
 
-private
+  private
 
   def get_set(name)
     link = @links[name]
@@ -45,4 +45,3 @@ def get_set(name)
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/spec_specification.rb b/lib/ruby/stdlib/rubygems/resolver/spec_specification.rb
index 35ee8cc247a..d0e744f3a7b 100644
--- a/lib/ruby/stdlib/rubygems/resolver/spec_specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/spec_specification.rb
@@ -10,7 +10,7 @@ class Gem::Resolver::SpecSpecification < Gem::Resolver::Specification
   # +spec+.  The +source+ is either where the +spec+ came from, or should be
   # loaded from.
 
-  def initialize set, spec, source = nil
+  def initialize(set, spec, source = nil)
     @set    = set
     @source = source
     @spec   = spec
@@ -54,4 +54,3 @@ def version
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/specification.rb b/lib/ruby/stdlib/rubygems/resolver/specification.rb
index 44989d39ae7..7c1e9be702c 100644
--- a/lib/ruby/stdlib/rubygems/resolver/specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/specification.rb
@@ -81,14 +81,10 @@ def full_name
   # After installation #spec is updated to point to the just-installed
   # specification.
 
-  def install options = {}
+  def install(options = {})
     require 'rubygems/installer'
 
-    destination = options[:install_dir] || Gem.dir
-
-    Gem.ensure_gem_subdirectories destination
-
-    gem = source.download spec, destination
+    gem = download options
 
     installer = Gem::Installer.at gem, options
 
@@ -97,6 +93,14 @@ def install options = {}
     @spec = installer.install
   end
 
+  def download(options)
+    dir = options[:install_dir] || Gem.dir
+
+    Gem.ensure_gem_subdirectories dir
+
+    source.download spec, dir
+  end
+
   ##
   # Returns true if this specification is installable on this platform.
 
@@ -108,4 +112,3 @@ def local? # :nodoc:
     false
   end
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/stats.rb b/lib/ruby/stdlib/rubygems/resolver/stats.rb
index 3b95efebf72..64b458f5040 100644
--- a/lib/ruby/stdlib/rubygems/resolver/stats.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/stats.rb
@@ -32,7 +32,7 @@ def iteration!
     @iterations += 1
   end
 
-  PATTERN = "%20s: %d\n"
+  PATTERN = "%20s: %d\n".freeze
 
   def display
     $stdout.puts "=== Resolver Statistics ==="
diff --git a/lib/ruby/stdlib/rubygems/resolver/vendor_set.rb b/lib/ruby/stdlib/rubygems/resolver/vendor_set.rb
index f30ce534af3..7e2e917d5c3 100644
--- a/lib/ruby/stdlib/rubygems/resolver/vendor_set.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/vendor_set.rb
@@ -32,7 +32,7 @@ def initialize # :nodoc:
   # Adds a specification to the set with the given +name+ which has been
   # unpacked into the given +directory+.
 
-  def add_vendor_gem name, directory # :nodoc:
+  def add_vendor_gem(name, directory) # :nodoc:
     gemspec = File.join directory, "#{name}.gemspec"
 
     spec = Gem::Specification.load gemspec
@@ -52,7 +52,7 @@ def add_vendor_gem name, directory # :nodoc:
   # Returns an Array of VendorSpecification objects matching the
   # DependencyRequest +req+.
 
-  def find_all req
+  def find_all(req)
     @specs.values.select do |spec|
       req.match? spec
     end.map do |spec|
@@ -65,11 +65,11 @@ def find_all req
   # Loads a spec with the given +name+. +version+, +platform+ and +source+ are
   # ignored.
 
-  def load_spec name, version, platform, source # :nodoc:
+  def load_spec(name, version, platform, source) # :nodoc:
     @specs.fetch name
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[VendorSet', ']' do
       next if @directories.empty?
       q.breakable
@@ -85,4 +85,3 @@ def pretty_print q # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/resolver/vendor_specification.rb b/lib/ruby/stdlib/rubygems/resolver/vendor_specification.rb
index c624f3e8347..56f2e6eb2cf 100644
--- a/lib/ruby/stdlib/rubygems/resolver/vendor_specification.rb
+++ b/lib/ruby/stdlib/rubygems/resolver/vendor_specification.rb
@@ -6,7 +6,7 @@
 
 class Gem::Resolver::VendorSpecification < Gem::Resolver::SpecSpecification
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     self.class === other and
       @set  == other.set and
       @spec == other.spec and
@@ -17,9 +17,8 @@ def == other # :nodoc:
   # This is a null install as this gem was unpacked into a directory.
   # +options+ are ignored.
 
-  def install options = {}
+  def install(options = {})
     yield nil
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/safe_yaml.rb b/lib/ruby/stdlib/rubygems/safe_yaml.rb
index 789bb5e25af..3540fd74dde 100644
--- a/lib/ruby/stdlib/rubygems/safe_yaml.rb
+++ b/lib/ruby/stdlib/rubygems/safe_yaml.rb
@@ -7,7 +7,7 @@ module Gem
   # Psych.safe_load
 
   module SafeYAML
-    WHITELISTED_CLASSES = %w(
+    PERMITTED_CLASSES = %w(
       Symbol
       Time
       Date
@@ -19,31 +19,39 @@ module SafeYAML
       Gem::Version::Requirement
       YAML::Syck::DefaultKey
       Syck::DefaultKey
-    )
+    ).freeze
 
-    WHITELISTED_SYMBOLS = %w(
+    PERMITTED_SYMBOLS = %w(
       development
       runtime
-    )
+    ).freeze
 
     if ::YAML.respond_to? :safe_load
-      def self.safe_load input
-        ::YAML.safe_load(input, WHITELISTED_CLASSES, WHITELISTED_SYMBOLS, true)
+      def self.safe_load(input)
+        if Gem::Version.new(Psych::VERSION) >= Gem::Version.new('3.1.0.pre1')
+          ::YAML.safe_load(input, permitted_classes: PERMITTED_CLASSES, permitted_symbols: PERMITTED_SYMBOLS, aliases: true)
+        else
+          ::YAML.safe_load(input, PERMITTED_CLASSES, PERMITTED_SYMBOLS, true)
+        end
       end
 
-      def self.load input
-        ::YAML.safe_load(input, [::Symbol])
+      def self.load(input)
+        if Gem::Version.new(Psych::VERSION) >= Gem::Version.new('3.1.0.pre1')
+          ::YAML.safe_load(input, permitted_classes: [::Symbol])
+        else
+          ::YAML.safe_load(input, [::Symbol])
+        end
       end
     else
       unless Gem::Deprecate.skip
         warn "YAML safe loading is not available. Please upgrade psych to a version that supports safe loading (>= 2.0)."
       end
 
-      def self.safe_load input, *args
+      def self.safe_load(input, *args)
         ::YAML.load input
       end
 
-      def self.load input
+      def self.load(input)
         ::YAML.load input
       end
     end
diff --git a/lib/ruby/stdlib/rubygems/security.rb b/lib/ruby/stdlib/rubygems/security.rb
index dc5e91a6f48..7b0a0b3c6af 100644
--- a/lib/ruby/stdlib/rubygems/security.rb
+++ b/lib/ruby/stdlib/rubygems/security.rb
@@ -340,9 +340,9 @@ class Exception < Gem::Exception; end
   # Digest algorithm used to sign gems
 
   DIGEST_ALGORITHM =
-    if defined?(OpenSSL::Digest::SHA256) then
+    if defined?(OpenSSL::Digest::SHA256)
       OpenSSL::Digest::SHA256
-    elsif defined?(OpenSSL::Digest::SHA1) then
+    elsif defined?(OpenSSL::Digest::SHA1)
       OpenSSL::Digest::SHA1
     else
       require 'digest'
@@ -353,7 +353,7 @@ class Exception < Gem::Exception; end
   # Used internally to select the signing digest from all computed digests
 
   DIGEST_NAME = # :nodoc:
-    if DIGEST_ALGORITHM.method_defined? :name then
+    if DIGEST_ALGORITHM.method_defined? :name
       DIGEST_ALGORITHM.new.name
     else
       DIGEST_ALGORITHM.name[/::([^:]+)\z/, 1]
@@ -363,7 +363,7 @@ class Exception < Gem::Exception; end
   # Algorithm for creating the key pair used to sign gems
 
   KEY_ALGORITHM =
-    if defined?(OpenSSL::PKey::RSA) then
+    if defined?(OpenSSL::PKey::RSA)
       OpenSSL::PKey::RSA
     end
 
@@ -401,9 +401,9 @@ class Exception < Gem::Exception; end
     'keyUsage'             =>
       'keyEncipherment,dataEncipherment,digitalSignature',
     'subjectKeyIdentifier' => 'hash',
-  }
+  }.freeze
 
-  def self.alt_name_or_x509_entry certificate, x509_entry
+  def self.alt_name_or_x509_entry(certificate, x509_entry)
     alt_name = certificate.extensions.find do |extension|
       extension.oid == "#{x509_entry}AltName"
     end
@@ -419,8 +419,8 @@ def self.alt_name_or_x509_entry certificate, x509_entry
   #
   # The +extensions+ restrict the key to the indicated uses.
 
-  def self.create_cert subject, key, age = ONE_YEAR, extensions = EXTENSIONS,
-                       serial = 1
+  def self.create_cert(subject, key, age = ONE_YEAR, extensions = EXTENSIONS,
+                       serial = 1)
     cert = OpenSSL::X509::Certificate.new
 
     cert.public_key = key.public_key
@@ -446,7 +446,7 @@ def self.create_cert subject, key, age = ONE_YEAR, extensions = EXTENSIONS,
   # a subject alternative name of +email+ and the given +extensions+ for the
   # +key+.
 
-  def self.create_cert_email email, key, age = ONE_YEAR, extensions = EXTENSIONS
+  def self.create_cert_email(email, key, age = ONE_YEAR, extensions = EXTENSIONS)
     subject = email_to_name email
 
     extensions = extensions.merge "subjectAltName" => "email:#{email}"
@@ -458,8 +458,8 @@ def self.create_cert_email email, key, age = ONE_YEAR, extensions = EXTENSIONS
   # Creates a self-signed certificate with an issuer and subject of +subject+
   # and the given +extensions+ for the +key+.
 
-  def self.create_cert_self_signed subject, key, age = ONE_YEAR,
-                                   extensions = EXTENSIONS, serial = 1
+  def self.create_cert_self_signed(subject, key, age = ONE_YEAR,
+                                   extensions = EXTENSIONS, serial = 1)
     certificate = create_cert subject, key, age, extensions
 
     sign certificate, key, certificate, age, extensions, serial
@@ -469,14 +469,14 @@ def self.create_cert_self_signed subject, key, age = ONE_YEAR,
   # Creates a new key pair of the specified +length+ and +algorithm+.  The
   # default is a 3072 bit RSA key.
 
-  def self.create_key length = KEY_LENGTH, algorithm = KEY_ALGORITHM
+  def self.create_key(length = KEY_LENGTH, algorithm = KEY_ALGORITHM)
     algorithm.new length
   end
 
   ##
   # Turns +email_address+ into an OpenSSL::X509::Name
 
-  def self.email_to_name email_address
+  def self.email_to_name(email_address)
     email_address = email_address.gsub(/[^\w@.-]+/i, '_')
 
     cn, dcs = email_address.split '@'
@@ -494,15 +494,15 @@ def self.email_to_name email_address
   #--
   # TODO increment serial
 
-  def self.re_sign expired_certificate, private_key, age = ONE_YEAR,
-                   extensions = EXTENSIONS
+  def self.re_sign(expired_certificate, private_key, age = ONE_YEAR,
+                   extensions = EXTENSIONS)
     raise Gem::Security::Exception,
           "incorrect signing key for re-signing " +
           "#{expired_certificate.subject}" unless
       expired_certificate.public_key.to_pem == private_key.public_key.to_pem
 
     unless expired_certificate.subject.to_s ==
-           expired_certificate.issuer.to_s then
+           expired_certificate.issuer.to_s
       subject = alt_name_or_x509_entry expired_certificate, :subject
       issuer  = alt_name_or_x509_entry expired_certificate, :issuer
 
@@ -531,8 +531,8 @@ def self.reset
   #
   # Returns the newly signed certificate.
 
-  def self.sign certificate, signing_key, signing_cert,
-                age = ONE_YEAR, extensions = EXTENSIONS, serial = 1
+  def self.sign(certificate, signing_key, signing_cert,
+                age = ONE_YEAR, extensions = EXTENSIONS, serial = 1)
     signee_subject = certificate.subject
     signee_key     = certificate.public_key
 
@@ -571,7 +571,7 @@ def self.trust_dir
   ##
   # Enumerates the trusted certificates via Gem::Security::TrustDir.
 
-  def self.trusted_certificates &block
+  def self.trusted_certificates(&block)
     trust_dir.each_certificate(&block)
   end
 
@@ -580,7 +580,7 @@ def self.trusted_certificates &block
   # +permissions+. If passed +cipher+ and +passphrase+ those arguments will be
   # passed to +to_pem+.
 
-  def self.write pemmable, path, permissions = 0600, passphrase = nil, cipher = KEY_CIPHER
+  def self.write(pemmable, path, permissions = 0600, passphrase = nil, cipher = KEY_CIPHER)
     path = File.expand_path path
 
     File.open path, 'wb', permissions do |io|
@@ -598,11 +598,10 @@ def self.write pemmable, path, permissions = 0600, passphrase = nil, cipher = KE
 
 end
 
-if defined?(OpenSSL::SSL) then
+if defined?(OpenSSL::SSL)
   require 'rubygems/security/policy'
   require 'rubygems/security/policies'
   require 'rubygems/security/trust_dir'
 end
 
 require 'rubygems/security/signer'
-
diff --git a/lib/ruby/stdlib/rubygems/security/policies.rb b/lib/ruby/stdlib/rubygems/security/policies.rb
index f16c46306aa..8f6ad993160 100644
--- a/lib/ruby/stdlib/rubygems/security/policies.rb
+++ b/lib/ruby/stdlib/rubygems/security/policies.rb
@@ -110,7 +110,6 @@ module Gem::Security
     'MediumSecurity'   => MediumSecurity,
     'HighSecurity'     => HighSecurity,
     # SigningPolicy is not intended for use by `gem -P` so do not list it
-  }
+  }.freeze
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/security/policy.rb b/lib/ruby/stdlib/rubygems/security/policy.rb
index f43e6c8c969..1aa6eab18ca 100644
--- a/lib/ruby/stdlib/rubygems/security/policy.rb
+++ b/lib/ruby/stdlib/rubygems/security/policy.rb
@@ -24,7 +24,7 @@ class Gem::Security::Policy
   # Create a new Gem::Security::Policy object with the given mode and
   # options.
 
-  def initialize name, policy = {}, opt = {}
+  def initialize(name, policy = {}, opt = {})
     require 'openssl'
 
     @name = name
@@ -55,7 +55,7 @@ def initialize name, policy = {}, opt = {}
   # Verifies each certificate in +chain+ has signed the following certificate
   # and is valid for the given +time+.
 
-  def check_chain chain, time
+  def check_chain(chain, time)
     raise Gem::Security::Exception, 'missing signing chain' unless chain
     raise Gem::Security::Exception, 'empty signing chain' if chain.empty?
 
@@ -74,7 +74,7 @@ def check_chain chain, time
   # Verifies that +data+ matches the +signature+ created by +public_key+ and
   # the +digest+ algorithm.
 
-  def check_data public_key, digest, signature, data
+  def check_data(public_key, digest, signature, data)
     raise Gem::Security::Exception, "invalid signature" unless
       public_key.verify digest.new, signature, data.digest
 
@@ -85,22 +85,22 @@ def check_data public_key, digest, signature, data
   # Ensures that +signer+ is valid for +time+ and was signed by the +issuer+.
   # If the +issuer+ is +nil+ no verification is performed.
 
-  def check_cert signer, issuer, time
+  def check_cert(signer, issuer, time)
     raise Gem::Security::Exception, 'missing signing certificate' unless
       signer
 
     message = "certificate #{signer.subject}"
 
-    if not_before = signer.not_before and not_before > time then
+    if not_before = signer.not_before and not_before > time
       raise Gem::Security::Exception,
             "#{message} not valid before #{not_before}"
     end
 
-    if not_after = signer.not_after and not_after < time then
+    if not_after = signer.not_after and not_after < time
       raise Gem::Security::Exception, "#{message} not valid after #{not_after}"
     end
 
-    if issuer and not signer.verify issuer.public_key then
+    if issuer and not signer.verify issuer.public_key
       raise Gem::Security::Exception,
             "#{message} was not issued by #{issuer.subject}"
     end
@@ -111,8 +111,8 @@ def check_cert signer, issuer, time
   ##
   # Ensures the public key of +key+ matches the public key in +signer+
 
-  def check_key signer, key
-    unless signer and key then
+  def check_key(signer, key)
+    unless signer and key
       return true unless @only_signed
 
       raise Gem::Security::Exception, 'missing key or signature'
@@ -129,7 +129,7 @@ def check_key signer, key
   # Ensures the root certificate in +chain+ is self-signed and valid for
   # +time+.
 
-  def check_root chain, time
+  def check_root(chain, time)
     raise Gem::Security::Exception, 'missing signing chain' unless chain
 
     root = chain.first
@@ -148,7 +148,7 @@ def check_root chain, time
   # Ensures the root of +chain+ has a trusted certificate in +trust_dir+ and
   # the digests of the two certificates match according to +digester+
 
-  def check_trust chain, digester, trust_dir
+  def check_trust(chain, digester, trust_dir)
     raise Gem::Security::Exception, 'missing signing chain' unless chain
 
     root = chain.first
@@ -157,7 +157,7 @@ def check_trust chain, digester, trust_dir
 
     path = Gem::Security.trust_dir.cert_path root
 
-    unless File.exist? path then
+    unless File.exist? path
       message = "root cert #{root.subject} is not trusted".dup
 
       message << " (root of signing cert #{chain.last.subject})" if
@@ -183,7 +183,7 @@ def check_trust chain, digester, trust_dir
   ##
   # Extracts the email or subject from +certificate+
 
-  def subject certificate # :nodoc:
+  def subject(certificate) # :nodoc:
     certificate.extensions.each do |extension|
       next unless extension.oid == 'subjectAltName'
 
@@ -196,9 +196,9 @@ def subject certificate # :nodoc:
   def inspect # :nodoc:
     ("[Policy: %s - data: %p signer: %p chain: %p root: %p " +
      "signed-only: %p trusted-only: %p]") % [
-      @name, @verify_chain, @verify_data, @verify_root, @verify_signer,
-      @only_signed, @only_trusted,
-    ]
+       @name, @verify_chain, @verify_data, @verify_root, @verify_signer,
+       @only_signed, @only_trusted,
+     ]
   end
 
   ##
@@ -208,13 +208,13 @@ def inspect # :nodoc:
   #
   # If +key+ is given it is used to validate the signing certificate.
 
-  def verify chain, key = nil, digests = {}, signatures = {},
-             full_name = '(unknown)'
-    if signatures.empty? then
-      if @only_signed then
+  def verify(chain, key = nil, digests = {}, signatures = {},
+             full_name = '(unknown)')
+    if signatures.empty?
+      if @only_signed
         raise Gem::Security::Exception,
           "unsigned gems are not allowed by the #{name} policy"
-      elsif digests.empty? then
+      elsif digests.empty?
         # lack of signatures is irrelevant if there is nothing to check
         # against
       else
@@ -232,7 +232,7 @@ def verify chain, key = nil, digests = {}, signatures = {},
       file_digests.values.first.name == Gem::Security::DIGEST_NAME
     end
 
-    if @verify_data then
+    if @verify_data
       raise Gem::Security::Exception, 'no digests provided (probable bug)' if
         signer_digests.nil? or signer_digests.empty?
     else
@@ -249,9 +249,9 @@ def verify chain, key = nil, digests = {}, signatures = {},
 
     check_root chain, time if @verify_root
 
-    if @only_trusted then
+    if @only_trusted
       check_trust chain, digester, trust_dir
-    elsif signatures.empty? and digests.empty? then
+    elsif signatures.empty? and digests.empty?
       # trust is irrelevant if there's no signatures to verify
     else
       alert_warning "#{subject signer} is not trusted for #{full_name}"
@@ -280,7 +280,7 @@ def verify chain, key = nil, digests = {}, signatures = {},
   # Extracts the certificate chain from the +spec+ and calls #verify to ensure
   # the signatures and certificate chain is valid according to the policy..
 
-  def verify_signatures spec, digests, signatures
+  def verify_signatures(spec, digests, signatures)
     chain = spec.cert_chain.map do |cert_pem|
       OpenSSL::X509::Certificate.new cert_pem
     end
diff --git a/lib/ruby/stdlib/rubygems/security/signer.rb b/lib/ruby/stdlib/rubygems/security/signer.rb
index 0c6ef60a9ac..34e86e921a4 100644
--- a/lib/ruby/stdlib/rubygems/security/signer.rb
+++ b/lib/ruby/stdlib/rubygems/security/signer.rb
@@ -2,8 +2,12 @@
 ##
 # Basic OpenSSL-based package signing class.
 
+require "rubygems/user_interaction"
+
 class Gem::Security::Signer
 
+  include Gem::UserInteraction
+
   ##
   # The chain of certificates for signing including the signing certificate
 
@@ -25,21 +29,54 @@ class Gem::Security::Signer
 
   attr_reader :digest_name # :nodoc:
 
+  ##
+  # Gem::Security::Signer options
+
+  attr_reader :options
+
+  DEFAULT_OPTIONS = {
+    expiration_length_days: 365
+  }.freeze
+
+  ##
+  # Attemps to re-sign an expired cert with a given private key
+  def self.re_sign_cert(expired_cert, expired_cert_path, private_key)
+    return unless expired_cert.not_after < Time.now
+
+    expiry = expired_cert.not_after.strftime('%Y%m%d%H%M%S')
+    expired_cert_file = "#{File.basename(expired_cert_path)}.expired.#{expiry}"
+    new_expired_cert_path = File.join(Gem.user_home, ".gem", expired_cert_file)
+
+    Gem::Security.write(expired_cert, new_expired_cert_path)
+
+    re_signed_cert = Gem::Security.re_sign(
+      expired_cert,
+      private_key,
+      (Gem::Security::ONE_DAY * Gem.configuration.cert_expiration_length_days)
+    )
+
+    Gem::Security.write(re_signed_cert, expired_cert_path)
+
+    yield(expired_cert_path, new_expired_cert_path) if block_given?
+  end
+
   ##
   # Creates a new signer with an RSA +key+ or path to a key, and a certificate
   # +chain+ containing X509 certificates, encoding certificates or paths to
   # certificates.
 
-  def initialize key, cert_chain, passphrase = nil
+  def initialize(key, cert_chain, passphrase = nil, options = {})
     @cert_chain = cert_chain
     @key        = key
+    @passphrase = passphrase
+    @options = DEFAULT_OPTIONS.merge(options)
 
-    unless @key then
+    unless @key
       default_key  = File.join Gem.default_key_path
       @key = default_key if File.exist? default_key
     end
 
-    unless @cert_chain then
+    unless @cert_chain
       default_cert = File.join Gem.default_cert_path
       @cert_chain = [default_cert] if File.exist? default_cert
     end
@@ -47,10 +84,12 @@ def initialize key, cert_chain, passphrase = nil
     @digest_algorithm = Gem::Security::DIGEST_ALGORITHM
     @digest_name      = Gem::Security::DIGEST_NAME
 
-    @key = OpenSSL::PKey::RSA.new File.read(@key), passphrase if
-      @key and not OpenSSL::PKey::RSA === @key
+    if @key && !@key.is_a?(OpenSSL::PKey::RSA)
+      @passphrase ||= ask_for_password("Enter PEM pass phrase:")
+      @key = OpenSSL::PKey::RSA.new(File.read(@key), @passphrase)
+    end
 
-    if @cert_chain then
+    if @cert_chain
       @cert_chain = @cert_chain.compact.map do |cert|
         next cert if OpenSSL::X509::Certificate === cert
 
@@ -67,10 +106,10 @@ def initialize key, cert_chain, passphrase = nil
   # Extracts the full name of +cert+.  If the certificate has a subjectAltName
   # this value is preferred, otherwise the subject is used.
 
-  def extract_name cert # :nodoc:
+  def extract_name(cert) # :nodoc:
     subject_alt_name = cert.extensions.find { |e| 'subjectAltName' == e.oid }
 
-    if subject_alt_name then
+    if subject_alt_name
       /\Aemail:/ =~ subject_alt_name.value
 
       $' || subject_alt_name.value
@@ -99,13 +138,15 @@ def load_cert_chain # :nodoc:
   ##
   # Sign data with given digest algorithm
 
-  def sign data
+  def sign(data)
     return unless @key
 
     raise Gem::Security::Exception, 'no certs provided' if @cert_chain.empty?
 
-    if @cert_chain.length == 1 and @cert_chain.last.not_after < Time.now then
-      re_sign_key
+    if @cert_chain.length == 1 and @cert_chain.last.not_after < Time.now
+      re_sign_key(
+        expiration_length: (Gem::Security::ONE_DAY * options[:expiration_length_days])
+      )
     end
 
     full_name = extract_name @cert_chain.last
@@ -121,6 +162,7 @@ def sign data
   # The key will be re-signed if:
   # * The expired certificate is self-signed
   # * The expired certificate is saved at ~/.gem/gem-public_cert.pem
+  #   and the private key is saved at ~/.gem/gem-private_key.pem
   # * There is no file matching the expiry date at
   #   ~/.gem/gem-public_cert.pem.expired.%Y%m%d%H%M%S
   #
@@ -128,25 +170,32 @@ def sign data
   # be saved as ~/.gem/gem-public_cert.pem.expired.%Y%m%d%H%M%S where the
   # expiry time (not after) is used for the timestamp.
 
-  def re_sign_key # :nodoc:
+  def re_sign_key(expiration_length: Gem::Security::ONE_YEAR) # :nodoc:
     old_cert = @cert_chain.last
 
-    disk_cert_path = File.join Gem.default_cert_path
-    disk_cert = File.read disk_cert_path rescue nil
-    disk_key  =
-      File.read File.join(Gem.default_key_path) rescue nil
+    disk_cert_path = File.join(Gem.default_cert_path)
+    disk_cert = File.read(disk_cert_path) rescue nil
 
-    if disk_key == @key.to_pem and disk_cert == old_cert.to_pem then
-      expiry = old_cert.not_after.strftime '%Y%m%d%H%M%S'
+    disk_key_path = File.join(Gem.default_key_path)
+    disk_key =
+      OpenSSL::PKey::RSA.new(File.read(disk_key_path), @passphrase) rescue nil
+
+    return unless disk_key
+
+    if disk_key.to_pem == @key.to_pem && disk_cert == old_cert.to_pem
+      expiry = old_cert.not_after.strftime('%Y%m%d%H%M%S')
       old_cert_file = "gem-public_cert.pem.expired.#{expiry}"
-      old_cert_path = File.join Gem.user_home, ".gem", old_cert_file
+      old_cert_path = File.join(Gem.user_home, ".gem", old_cert_file)
 
-      unless File.exist? old_cert_path then
-        Gem::Security.write old_cert, old_cert_path
+      unless File.exist?(old_cert_path)
+        Gem::Security.write(old_cert, old_cert_path)
 
-        cert = Gem::Security.re_sign old_cert, @key
+        cert = Gem::Security.re_sign(old_cert, @key, expiration_length)
 
-        Gem::Security.write cert, disk_cert_path
+        Gem::Security.write(cert, disk_cert_path)
+
+        alert("Your cert: #{disk_cert_path} has been auto re-signed with the key: #{disk_key_path}")
+        alert("Your expired cert will be located at: #{old_cert_path}")
 
         @cert_chain = [cert]
       end
@@ -154,4 +203,3 @@ def re_sign_key # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/security/trust_dir.rb b/lib/ruby/stdlib/rubygems/security/trust_dir.rb
index 849cf3cd3e8..98031ea22b6 100644
--- a/lib/ruby/stdlib/rubygems/security/trust_dir.rb
+++ b/lib/ruby/stdlib/rubygems/security/trust_dir.rb
@@ -11,7 +11,7 @@ class Gem::Security::TrustDir
   DEFAULT_PERMISSIONS = {
     :trust_dir    => 0700,
     :trusted_cert => 0600,
-  }
+  }.freeze
 
   ##
   # The directory where trusted certificates will be stored.
@@ -22,7 +22,7 @@ class Gem::Security::TrustDir
   # Creates a new TrustDir using +dir+ where the directory and file
   # permissions will be checked according to +permissions+
 
-  def initialize dir, permissions = DEFAULT_PERMISSIONS
+  def initialize(dir, permissions = DEFAULT_PERMISSIONS)
     @dir = dir
     @permissions = permissions
 
@@ -32,7 +32,7 @@ def initialize dir, permissions = DEFAULT_PERMISSIONS
   ##
   # Returns the path to the trusted +certificate+
 
-  def cert_path certificate
+  def cert_path(certificate)
     name_path certificate.subject
   end
 
@@ -59,7 +59,7 @@ def each_certificate
   # Returns the issuer certificate of the given +certificate+ if it exists in
   # the trust directory.
 
-  def issuer_of certificate
+  def issuer_of(certificate)
     path = name_path certificate.issuer
 
     return unless File.exist? path
@@ -70,7 +70,7 @@ def issuer_of certificate
   ##
   # Returns the path to the trusted certificate with the given ASN.1 +name+
 
-  def name_path name
+  def name_path(name)
     digest = @digester.hexdigest name.to_s
 
     File.join @dir, "cert-#{digest}.pem"
@@ -79,7 +79,7 @@ def name_path name
   ##
   # Loads the given +certificate_file+
 
-  def load_certificate certificate_file
+  def load_certificate(certificate_file)
     pem = File.read certificate_file
 
     OpenSSL::X509::Certificate.new pem
@@ -88,13 +88,14 @@ def load_certificate certificate_file
   ##
   # Add a certificate to trusted certificate list.
 
-  def trust_cert certificate
+  def trust_cert(certificate)
     verify
 
     destination = cert_path certificate
 
-    File.open destination, 'wb', @permissions[:trusted_cert] do |io|
+    File.open destination, 'wb', 0600 do |io|
       io.write certificate.to_pem
+      io.chmod(@permissions[:trusted_cert])
     end
   end
 
@@ -104,7 +105,7 @@ def trust_cert certificate
   # permissions.
 
   def verify
-    if File.exist? @dir then
+    if File.exist? @dir
       raise Gem::Security::Exception,
         "trust directory #{@dir} is not a directory" unless
           File.directory? @dir
@@ -116,4 +117,3 @@ def verify
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/server.rb b/lib/ruby/stdlib/rubygems/server.rb
index 9ebd2f5e44f..1453bf23235 100644
--- a/lib/ruby/stdlib/rubygems/server.rb
+++ b/lib/ruby/stdlib/rubygems/server.rb
@@ -35,7 +35,7 @@ class Gem::Server
   include ERB::Util
   include Gem::UserInteraction
 
-  SEARCH = <<-ERB
+  SEARCH = <<-ERB.freeze
       <form class="headerSearch" name="headerSearchForm" method="get" action="/rdoc">
         <div id="search" style="float:right">
           <label for="q">Filter/Search</label>
@@ -45,7 +45,7 @@ class Gem::Server
       </form>
   ERB
 
-  DOC_TEMPLATE = <<-'ERB'
+  DOC_TEMPLATE = <<-'ERB'.freeze
   <?xml version="1.0" encoding="iso-8859-1"?>
   <!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
@@ -129,7 +129,7 @@ class Gem::Server
   ERB
 
   # CSS is copy & paste from rdoc-style.css, RDoc V1.0.1 - 20041108
-  RDOC_CSS = <<-CSS
+  RDOC_CSS = <<-CSS.freeze
 body {
     font-family: Verdana,Arial,Helvetica,sans-serif;
     font-size:   90%;
@@ -339,7 +339,7 @@ class Gem::Server
 .ruby-value   { color: #7fffd4; background: transparent; }
   CSS
 
-  RDOC_NO_DOCUMENTATION = <<-'ERB'
+  RDOC_NO_DOCUMENTATION = <<-'ERB'.freeze
 <?xml version="1.0" encoding="iso-8859-1"?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
           "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -373,7 +373,7 @@ class Gem::Server
 </html>
   ERB
 
-  RDOC_SEARCH_TEMPLATE = <<-'ERB'
+  RDOC_SEARCH_TEMPLATE = <<-'ERB'.freeze
 <?xml version="1.0" encoding="iso-8859-1"?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
           "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -450,7 +450,7 @@ def initialize(gem_dirs, port, daemon, launch = nil, addresses = nil)
     @have_rdoc_4_plus = nil
   end
 
-  def add_date res
+  def add_date(res)
     res['date'] = @spec_dirs.map do |spec_dir|
       File.stat(spec_dir).mtime
     end.max
@@ -462,8 +462,8 @@ def uri_encode(str)
     end
   end
 
-  def doc_root gem_name
-    if have_rdoc_4_plus? then
+  def doc_root(gem_name)
+    if have_rdoc_4_plus?
       "/doc_root/#{u gem_name}/"
     else
       "/doc_root/#{u gem_name}/rdoc/index.html"
@@ -491,14 +491,14 @@ def latest_specs(req, res)
 
     specs = Marshal.dump specs
 
-    if req.path =~ /\.gz$/ then
+    if req.path =~ /\.gz$/
       specs = Gem::Util.gzip specs
       res['content-type'] = 'application/x-gzip'
     else
       res['content-type'] = 'application/octet-stream'
     end
 
-    if req.request_method == 'HEAD' then
+    if req.request_method == 'HEAD'
       res['content-length'] = specs.length
     else
       res.body << specs
@@ -509,7 +509,7 @@ def latest_specs(req, res)
   # Creates server sockets based on the addresses option.  If no addresses
   # were given a server socket for all interfaces is created.
 
-  def listen addresses = @addresses
+  def listen(addresses = @addresses)
     addresses = [nil] unless addresses
 
     listeners = 0
@@ -529,14 +529,14 @@ def listen addresses = @addresses
       end
     end
 
-    if @server.listeners.empty? then
+    if @server.listeners.empty?
       say "Unable to start a server."
       say "Check for running servers or your --bind and --port arguments"
       terminate_interaction 1
     end
   end
 
-  def prerelease_specs req, res
+  def prerelease_specs(req, res)
     reset_gems
 
     res['content-type'] = 'application/x-gzip'
@@ -552,14 +552,14 @@ def prerelease_specs req, res
 
     specs = Marshal.dump specs
 
-    if req.path =~ /\.gz$/ then
+    if req.path =~ /\.gz$/
       specs = Gem::Util.gzip specs
       res['content-type'] = 'application/x-gzip'
     else
       res['content-type'] = 'application/octet-stream'
     end
 
-    if req.request_method == 'HEAD' then
+    if req.request_method == 'HEAD'
       res['content-length'] = specs.length
     else
       res.body << specs
@@ -579,13 +579,13 @@ def quick(req, res)
 
       selector = full_name.inspect
 
-      if specs.empty? then
+      if specs.empty?
         res.status = 404
         res.body = "No gems found matching #{selector}"
-      elsif specs.length > 1 then
+      elsif specs.length > 1
         res.status = 500
         res.body = "Multiple gems found matching #{selector}"
-      elsif marshal_format then
+      elsif marshal_format
         res['content-type'] = 'application/x-deflate'
         res.body << Gem.deflate(Marshal.dump(specs.first))
       end
@@ -818,7 +818,7 @@ def run
       '/gems' => '/cache/',
     }
 
-    if have_rdoc_4_plus? then
+    if have_rdoc_4_plus?
       @server.mount '/doc_root', RDoc::Servlet, '/doc_root'
     else
       file_handlers['/doc_root'] = '/doc/'
@@ -851,14 +851,14 @@ def specs(req, res)
 
     specs = Marshal.dump specs
 
-    if req.path =~ /\.gz$/ then
+    if req.path =~ /\.gz$/
       specs = Gem::Util.gzip specs
       res['content-type'] = 'application/x-gzip'
     else
       res['content-type'] = 'application/octet-stream'
     end
 
-    if req.request_method == 'HEAD' then
+    if req.request_method == 'HEAD'
       res['content-length'] = specs.length
     else
       res.body << specs
diff --git a/lib/ruby/stdlib/rubygems/source.rb b/lib/ruby/stdlib/rubygems/source.rb
index 7f38b6325f3..faed7bd350c 100644
--- a/lib/ruby/stdlib/rubygems/source.rb
+++ b/lib/ruby/stdlib/rubygems/source.rb
@@ -16,7 +16,7 @@ class Gem::Source
     :released   => 'specs',
     :latest     => 'latest_specs',
     :prerelease => 'prerelease_specs',
-  }
+  }.freeze
 
   ##
   # The URI this source will fetch gems from.
@@ -36,15 +36,6 @@ def initialize(uri)
     end
 
     @uri = uri
-    @api_uri = nil
-  end
-
-  ##
-  # Use an SRV record on the host to look up the true endpoint for the index.
-
-  def api_uri # :nodoc:
-    require 'rubygems/remote_fetcher'
-    @api_uri ||= Gem::RemoteFetcher.fetcher.api_endpoint uri
   end
 
   ##
@@ -77,7 +68,7 @@ def <=>(other)
     end
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     self.class === other and @uri == other.uri
   end
 
@@ -87,9 +78,9 @@ def == other # :nodoc:
   # Returns a Set that can fetch specifications from this source.
 
   def dependency_resolver_set # :nodoc:
-    return Gem::Resolver::IndexSet.new self if 'file' == api_uri.scheme
+    return Gem::Resolver::IndexSet.new self if 'file' == uri.scheme
 
-    bundler_api_uri = api_uri + './api/v1/dependencies'
+    bundler_api_uri = uri + './api/v1/dependencies'
 
     begin
       fetcher = Gem::RemoteFetcher.fetcher
@@ -97,7 +88,7 @@ def dependency_resolver_set # :nodoc:
     rescue Gem::RemoteFetcher::FetchError
       Gem::Resolver::IndexSet.new self
     else
-      if response.respond_to? :uri then
+      if response.respond_to? :uri
         Gem::Resolver::APISet.new response.uri
       else
         Gem::Resolver::APISet.new bundler_api_uri
@@ -135,29 +126,29 @@ def update_cache?
   ##
   # Fetches a specification for the given +name_tuple+.
 
-  def fetch_spec name_tuple
+  def fetch_spec(name_tuple)
     fetcher = Gem::RemoteFetcher.fetcher
 
     spec_file_name = name_tuple.spec_name
 
-    uri = api_uri + "#{Gem::MARSHAL_SPEC_DIR}#{spec_file_name}"
+    source_uri = uri + "#{Gem::MARSHAL_SPEC_DIR}#{spec_file_name}"
 
-    cache_dir = cache_dir uri
+    cache_dir = cache_dir source_uri
 
     local_spec = File.join cache_dir, spec_file_name
 
-    if File.exist? local_spec then
+    if File.exist? local_spec
       spec = Gem.read_binary local_spec
       spec = Marshal.load(spec) rescue nil
       return spec if spec
     end
 
-    uri.path << '.rz'
+    source_uri.path << '.rz'
 
-    spec = fetcher.fetch_path uri
+    spec = fetcher.fetch_path source_uri
     spec = Gem::Util.inflate spec
 
-    if update_cache? then
+    if update_cache?
       FileUtils.mkdir_p cache_dir
 
       File.open local_spec, 'wb' do |io|
@@ -184,7 +175,7 @@ def load_specs(type)
     file       = FILES[type]
     fetcher    = Gem::RemoteFetcher.fetcher
     file_name  = "#{file}.#{Gem.marshal_version}"
-    spec_path  = api_uri + "#{file_name}.gz"
+    spec_path  = uri + "#{file_name}.gz"
     cache_dir  = cache_dir spec_path
     local_file = File.join(cache_dir, file_name)
     retried    = false
@@ -212,15 +203,15 @@ def load_specs(type)
 
   def download(spec, dir=Dir.pwd)
     fetcher = Gem::RemoteFetcher.fetcher
-    fetcher.download spec, api_uri.to_s, dir
+    fetcher.download spec, uri.to_s, dir
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[Remote:', ']' do
       q.breakable
       q.text @uri.to_s
 
-      if api = api_uri
+      if api = uri
         q.breakable
         q.text 'API URI: '
         q.text api.to_s
diff --git a/lib/ruby/stdlib/rubygems/source/git.rb b/lib/ruby/stdlib/rubygems/source/git.rb
index 23f8928a4eb..0b8a4339cc7 100644
--- a/lib/ruby/stdlib/rubygems/source/git.rb
+++ b/lib/ruby/stdlib/rubygems/source/git.rb
@@ -50,7 +50,7 @@ class Gem::Source::Git < Gem::Source
   # repository may contain multiple gems.  If +submodules+ is true, submodules
   # will be checked out when the gem is installed.
 
-  def initialize name, repository, reference, submodules = false
+  def initialize(name, repository, reference, submodules = false)
     super repository
 
     @name            = name
@@ -63,7 +63,7 @@ def initialize name, repository, reference, submodules = false
     @git      = ENV['git'] || 'git'
   end
 
-  def <=> other
+  def <=>(other)
     case other
     when Gem::Source::Git then
       0
@@ -77,7 +77,7 @@ def <=> other
     end
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     super and
       @name            == other.name and
       @repository      == other.repository and
@@ -93,7 +93,7 @@ def checkout # :nodoc:
 
     return false unless File.exist? repo_cache_dir
 
-    unless File.exist? install_dir then
+    unless File.exist? install_dir
       system @git, 'clone', '--quiet', '--no-checkout',
              repo_cache_dir, install_dir
     end
@@ -117,7 +117,7 @@ def checkout # :nodoc:
   def cache # :nodoc:
     return unless @remote
 
-    if File.exist? repo_cache_dir then
+    if File.exist? repo_cache_dir
       Dir.chdir repo_cache_dir do
         system @git, 'fetch', '--quiet', '--force', '--tags',
                @repository, 'refs/heads/*:refs/heads/*'
@@ -145,7 +145,7 @@ def dir_shortref # :nodoc:
   ##
   # Nothing to download for git gems
 
-  def download full_spec, path # :nodoc:
+  def download(full_spec, path) # :nodoc:
   end
 
   ##
@@ -157,7 +157,7 @@ def install_dir # :nodoc:
     File.join base_dir, 'gems', "#{@name}-#{dir_shortref}"
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[Git: ', ']' do
       q.breakable
       q.text @repository
@@ -206,7 +206,7 @@ def specs
 
         Dir.chdir directory do
           spec = Gem::Specification.load file
-          if spec then
+          if spec
             spec.base_dir = base_dir
 
             spec.extension_dir =
@@ -228,7 +228,7 @@ def uri_hash # :nodoc:
     require 'digest' # required here to avoid deadlocking in Gem.activate_bin_path (because digest is a gem on 2.5+)
 
     normalized =
-      if @repository =~ %r%^\w+://(\w+@)?% then
+      if @repository =~ %r%^\w+://(\w+@)?%
         uri = URI(@repository).normalize.to_s.sub %r%/$%,''
         uri.sub(/\A(\w+)/) { $1.downcase }
       else
@@ -239,4 +239,3 @@ def uri_hash # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/source/installed.rb b/lib/ruby/stdlib/rubygems/source/installed.rb
index 300491e4676..8e20cbd76d8 100644
--- a/lib/ruby/stdlib/rubygems/source/installed.rb
+++ b/lib/ruby/stdlib/rubygems/source/installed.rb
@@ -11,7 +11,7 @@ def initialize # :nodoc:
   ##
   # Installed sources sort before all other sources
 
-  def <=> other
+  def <=>(other)
     case other
     when Gem::Source::Git,
          Gem::Source::Lock,
@@ -29,13 +29,12 @@ def <=> other
   ##
   # We don't need to download an installed gem
 
-  def download spec, path
+  def download(spec, path)
     nil
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.text '[Installed]'
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/source/local.rb b/lib/ruby/stdlib/rubygems/source/local.rb
index 5ab7a467b57..875e992d85a 100644
--- a/lib/ruby/stdlib/rubygems/source/local.rb
+++ b/lib/ruby/stdlib/rubygems/source/local.rb
@@ -15,7 +15,7 @@ def initialize # :nodoc:
   ##
   # Local sorts before Gem::Source and after Gem::Source::Installed
 
-  def <=> other
+  def <=>(other)
     case other
     when Gem::Source::Installed,
          Gem::Source::Lock then
@@ -34,7 +34,7 @@ def inspect # :nodoc:
     "#<%s specs: %p>" % [self.class, keys]
   end
 
-  def load_specs type # :nodoc:
+  def load_specs(type) # :nodoc:
     @load_specs_names[type] ||= begin
       names = []
 
@@ -78,8 +78,8 @@ def load_specs type # :nodoc:
     end
   end
 
-  def find_gem gem_name, version = Gem::Requirement.default, # :nodoc:
-               prerelease = false
+  def find_gem(gem_name, version = Gem::Requirement.default, # :nodoc:
+               prerelease = false)
     load_specs :complete
 
     found = []
@@ -101,7 +101,7 @@ def find_gem gem_name, version = Gem::Requirement.default, # :nodoc:
     found.max_by { |s| s.version }
   end
 
-  def fetch_spec name # :nodoc:
+  def fetch_spec(name) # :nodoc:
     load_specs :complete
 
     if data = @specs[name]
@@ -111,7 +111,7 @@ def fetch_spec name # :nodoc:
     end
   end
 
-  def download spec, cache_dir = nil # :nodoc:
+  def download(spec, cache_dir = nil) # :nodoc:
     load_specs :complete
 
     @specs.each do |name, data|
@@ -121,7 +121,7 @@ def download spec, cache_dir = nil # :nodoc:
     raise Gem::Exception, "Unable to find file for '#{spec.full_name}'"
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[Local gems:', ']' do
       q.breakable
       q.seplist @specs.keys do |v|
diff --git a/lib/ruby/stdlib/rubygems/source/lock.rb b/lib/ruby/stdlib/rubygems/source/lock.rb
index 59717be2c0b..3b3f491750e 100644
--- a/lib/ruby/stdlib/rubygems/source/lock.rb
+++ b/lib/ruby/stdlib/rubygems/source/lock.rb
@@ -15,11 +15,11 @@ class Gem::Source::Lock < Gem::Source
   # Creates a new Lock source that wraps +source+ and moves it earlier in the
   # sort list.
 
-  def initialize source
+  def initialize(source)
     @wrapped = source
   end
 
-  def <=> other # :nodoc:
+  def <=>(other) # :nodoc:
     case other
     when Gem::Source::Lock then
       @wrapped <=> other.wrapped
@@ -30,7 +30,7 @@ def <=> other # :nodoc:
     end
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     0 == (self <=> other)
   end
 
@@ -41,7 +41,7 @@ def hash # :nodoc:
   ##
   # Delegates to the wrapped source's fetch_spec method.
 
-  def fetch_spec name_tuple
+  def fetch_spec(name_tuple)
     @wrapped.fetch_spec name_tuple
   end
 
diff --git a/lib/ruby/stdlib/rubygems/source/specific_file.rb b/lib/ruby/stdlib/rubygems/source/specific_file.rb
index 459c803e1aa..a22772b9c0b 100644
--- a/lib/ruby/stdlib/rubygems/source/specific_file.rb
+++ b/lib/ruby/stdlib/rubygems/source/specific_file.rb
@@ -27,22 +27,22 @@ def initialize(file)
 
   attr_reader :spec
 
-  def load_specs *a # :nodoc:
+  def load_specs(*a) # :nodoc:
     [@name]
   end
 
-  def fetch_spec name # :nodoc:
+  def fetch_spec(name) # :nodoc:
     return @spec if name == @name
     raise Gem::Exception, "Unable to find '#{name}'"
     @spec
   end
 
-  def download spec, dir = nil # :nodoc:
+  def download(spec, dir = nil) # :nodoc:
     return @path if spec == @spec
     raise Gem::Exception, "Unable to download '#{spec.full_name}'"
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[SpecificFile:', ']' do
       q.breakable
       q.text @path
@@ -59,7 +59,7 @@ def pretty_print q # :nodoc:
   #
   # Otherwise Gem::Source#<=> is used.
 
-  def <=> other
+  def <=>(other)
     case other
     when Gem::Source::SpecificFile then
       return nil if @spec.name != other.spec.name
diff --git a/lib/ruby/stdlib/rubygems/source/vendor.rb b/lib/ruby/stdlib/rubygems/source/vendor.rb
index e1b36986074..a87fa633312 100644
--- a/lib/ruby/stdlib/rubygems/source/vendor.rb
+++ b/lib/ruby/stdlib/rubygems/source/vendor.rb
@@ -7,11 +7,11 @@ class Gem::Source::Vendor < Gem::Source::Installed
   ##
   # Creates a new Vendor source for a gem that was unpacked at +path+.
 
-  def initialize path
+  def initialize(path)
     @uri = path
   end
 
-  def <=> other
+  def <=>(other)
     case other
     when Gem::Source::Lock then
       -1
@@ -25,4 +25,3 @@ def <=> other
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/source_list.rb b/lib/ruby/stdlib/rubygems/source_list.rb
index 66ce4d57ed7..83b689f78e2 100644
--- a/lib/ruby/stdlib/rubygems/source_list.rb
+++ b/lib/ruby/stdlib/rubygems/source_list.rb
@@ -105,7 +105,7 @@ def empty?
     @sources.empty?
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     to_a == other
   end
 
@@ -140,7 +140,7 @@ def include?(other)
   ##
   # Deletes +source+ from the source list which may be a Gem::Source or a URI.
 
-  def delete source
+  def delete(source)
     if source.kind_of? Gem::Source
       @sources.delete source
     else
diff --git a/lib/ruby/stdlib/rubygems/source_local.rb b/lib/ruby/stdlib/rubygems/source_local.rb
index 9869158e7d7..5107069fd03 100644
--- a/lib/ruby/stdlib/rubygems/source_local.rb
+++ b/lib/ruby/stdlib/rubygems/source_local.rb
@@ -5,4 +5,3 @@
 unless Gem::Deprecate.skip
   Kernel.warn "#{Gem.location_of_caller(3).join(':')}: Warning: Requiring rubygems/source_local is deprecated; please use rubygems/source/local instead."
 end
-
diff --git a/lib/ruby/stdlib/rubygems/spec_fetcher.rb b/lib/ruby/stdlib/rubygems/spec_fetcher.rb
index 919276e1132..ca901cb8bf1 100644
--- a/lib/ruby/stdlib/rubygems/spec_fetcher.rb
+++ b/lib/ruby/stdlib/rubygems/spec_fetcher.rb
@@ -54,7 +54,7 @@ def self.fetcher=(fetcher) # :nodoc:
   # If you need to retrieve specifications from a different +source+, you can
   # send it as an argument.
 
-  def initialize sources = nil
+  def initialize(sources = nil)
     @sources = sources || Gem.sources
 
     @update_cache =
@@ -202,10 +202,10 @@ def suggest_gems_from_name(gem_name, type = :latest)
     }.compact
 
     matches = if matches.empty? && type != :prerelease
-      suggest_gems_from_name gem_name, :prerelease
-    else
-      matches.uniq.sort_by { |name, dist| dist }
-    end
+                suggest_gems_from_name gem_name, :prerelease
+              else
+                matches.uniq.sort_by { |name, dist| dist }
+              end
 
     matches.first(5).map { |name, dist| name }
   end
@@ -271,4 +271,3 @@ def tuples_for(source, type, gracefully_ignore=false) # :nodoc:
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/specification.rb b/lib/ruby/stdlib/rubygems/specification.rb
index 49cd50794fc..bba3ffeab54 100644
--- a/lib/ruby/stdlib/rubygems/specification.rb
+++ b/lib/ruby/stdlib/rubygems/specification.rb
@@ -1,5 +1,5 @@
-# -*- coding: utf-8 -*-
 # frozen_string_literal: true
+# -*- coding: utf-8 -*-
 #--
 # Copyright 2006 by Chad Fowler, Rich Kilmer, Jim Weirich and others.
 # All rights reserved.
@@ -13,9 +13,9 @@
 require 'rubygems/deprecate'
 require 'rubygems/basic_specification'
 require 'rubygems/stub_specification'
+require 'rubygems/specification_policy'
 require 'rubygems/util/list'
 require 'stringio'
-require 'uri'
 
 ##
 # The Specification class contains the information for a Gem.  Typically
@@ -89,13 +89,13 @@ class Gem::Specification < Gem::BasicSpecification
       'Added "required_rubygems_version"',
       'Now forward-compatible with future versions',
     ],
-    3 => [
-       'Added Fixnum validation to the specification_version'
+    3  => [
+      'Added Fixnum validation to the specification_version'
     ],
-    4 => [
+    4  => [
       'Added sandboxed freeform metadata to the specification version.'
     ]
-  }
+  }.freeze
 
   MARSHAL_FIELDS = { # :nodoc:
     -1 => 16,
@@ -103,16 +103,18 @@ class Gem::Specification < Gem::BasicSpecification
      2 => 16,
      3 => 17,
      4 => 18,
-  }
+  }.freeze
 
   today = Time.now.utc
   TODAY = Time.utc(today.year, today.month, today.day) # :nodoc:
 
+  # rubocop:disable Style/MutableConstant
   LOAD_CACHE = {} # :nodoc:
+  # rubocop:enable Style/MutableConstant
 
   private_constant :LOAD_CACHE if defined? private_constant
 
-  VALID_NAME_PATTERN = /\A[a-zA-Z0-9\.\-\_]+\z/ # :nodoc:
+  VALID_NAME_PATTERN = /\A[a-zA-Z0-9\.\-\_]+\z/.freeze # :nodoc:
 
   # :startdoc:
 
@@ -135,7 +137,7 @@ class Gem::Specification < Gem::BasicSpecification
     :autorequire               => nil,
     :bindir                    => 'bin',
     :cert_chain                => [],
-    :date                      => TODAY,
+    :date                      => nil,
     :dependencies              => [],
     :description               => nil,
     :email                     => nil,
@@ -154,7 +156,6 @@ class Gem::Specification < Gem::BasicSpecification
     :required_ruby_version     => Gem::Requirement.default,
     :required_rubygems_version => Gem::Requirement.default,
     :requirements              => [],
-    :rubyforge_project         => nil,
     :rubygems_version          => Gem::VERSION,
     :signing_key               => nil,
     :specification_version     => CURRENT_SPECIFICATION_VERSION,
@@ -163,19 +164,21 @@ class Gem::Specification < Gem::BasicSpecification
     :version                   => nil,
   }.freeze
 
+  # rubocop:disable Style/MutableConstant
   INITIALIZE_CODE_FOR_DEFAULTS = { } # :nodoc:
+  # rubocop:enable Style/MutableConstant
 
   @@default_value.each do |k,v|
     INITIALIZE_CODE_FOR_DEFAULTS[k] = case v
-    when [], {}, true, false, nil, Numeric, Symbol
-      v.inspect
-    when String
-      v.dump
-    when Numeric
-       "default_value(:#{k})"
-    else
-       "default_value(:#{k}).dup"
-    end
+                                      when [], {}, true, false, nil, Numeric, Symbol
+                                        v.inspect
+                                      when String
+                                        v.dump
+                                      when Numeric
+                                        "default_value(:#{k})"
+                                      else
+                                        "default_value(:#{k}).dup"
+                                      end
   end
 
   @@attributes = @@default_value.keys.sort_by { |s| s.to_s }
@@ -260,31 +263,23 @@ def files
              ].flatten.compact.uniq.sort
   end
 
-  ######################################################################
-  # :section: Recommended gemspec attributes
-
   ##
-  # Singular writer for #authors
+  # A list of authors for this gem.
   #
-  # Usage:
-  #
-  #   spec.author = 'John Jones'
-
-  def author= o
-    self.authors = [o]
-  end
-
-  ##
-  # Sets the list of authors, ensuring it is an array.
+  # Alternatively, a single author can be specified by assigning a string to
+  # `spec.author`
   #
   # Usage:
   #
   #   spec.authors = ['John Jones', 'Mary Smith']
 
-  def authors= value
+  def authors=(value)
     @authors = Array(value).flatten.grep(String)
   end
 
+  ######################################################################
+  # :section: Recommended gemspec attributes
+
   ##
   # A long description of this gem
   #
@@ -346,7 +341,7 @@ def authors= value
   # Usage:
   #   spec.license = 'MIT'
 
-  def license=o
+  def license=(o)
     self.licenses = [o]
   end
 
@@ -363,7 +358,7 @@ def license=o
   # Usage:
   #   spec.licenses = ['MIT', 'GPL-2.0']
 
-  def licenses= licenses
+  def licenses=(licenses)
     @licenses = Array licenses
   end
 
@@ -403,6 +398,17 @@ def licenses= licenses
   ######################################################################
   # :section: Optional gemspec attributes
 
+  ##
+  # Singular (alternative) writer for #authors
+  #
+  # Usage:
+  #
+  #   spec.author = 'John Jones'
+
+  def author=(o)
+    self.authors = [o]
+  end
+
   ##
   # The path in the gem for executable scripts.  Usually 'bin'
   #
@@ -450,9 +456,9 @@ def licenses= licenses
   #
   #   spec.platform = Gem::Platform.local
 
-  def platform= platform
+  def platform=(platform)
     if @original_platform.nil? or
-       @original_platform == Gem::Platform::RUBY then
+       @original_platform == Gem::Platform::RUBY
       @original_platform = platform
     end
 
@@ -618,7 +624,7 @@ def installed_by_version # :nodoc:
   # Sets the version of RubyGems that installed this gem.  See also
   # #installed_by_version.
 
-  def installed_by_version= version # :nodoc:
+  def installed_by_version=(version) # :nodoc:
     @installed_by_version = Gem::Version.new version
   end
 
@@ -643,9 +649,7 @@ def rdoc_options
   #   ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]
   #   #<Gem::Version "2.0.0.247">
   #
-  # Because patch-level is taken into account, be very careful specifying using
-  # `<=`: `<= 2.2.2` will not match any patch-level of 2.2.2 after the `p0`
-  # release. It is much safer to specify `< 2.2.3` instead
+  # Prereleases can also be specified.
   #
   # Usage:
   #
@@ -655,17 +659,17 @@ def rdoc_options
   #  # Only with ruby 2.0.x
   #  spec.required_ruby_version = '~> 2.0'
   #
-  #  # Only with ruby between 2.2.0 and 2.2.2
-  #  spec.required_ruby_version = ['>= 2.2.0', '< 2.2.3']
+  #  # Only prereleases or final releases after 2.6.0.preview2
+  #  spec.required_ruby_version = '> 2.6.0.preview2'
 
-  def required_ruby_version= req
+  def required_ruby_version=(req)
     @required_ruby_version = Gem::Requirement.create req
   end
 
   ##
   # The RubyGems version required by this gem
 
-  def required_rubygems_version= req
+  def required_rubygems_version=(req)
     @required_rubygems_version = Gem::Requirement.create req
   end
 
@@ -690,7 +694,7 @@ def requirements
   #   spec.test_files = Dir.glob('test/tc_*.rb')
   #   spec.test_files = ['tests/test-suite.rb']
 
-  def test_files= files # :nodoc:
+  def test_files=(files) # :nodoc:
     @test_files = Array files
   end
 
@@ -725,12 +729,11 @@ def test_files= files # :nodoc:
   attr_writer :original_platform # :nodoc:
 
   ##
-  # The rubyforge project this gem lives under.  i.e. RubyGems'
-  # rubyforge_project is "rubygems".
+  # Deprecated and ignored.
   #
-  # This option is deprecated.
+  # Formerly used to set rubyforge project.
 
-  attr_accessor :rubyforge_project
+  attr_writer :rubyforge_project
 
   ##
   # The Gem::Specification version of this gemspec.
@@ -740,7 +743,7 @@ def test_files= files # :nodoc:
   attr_accessor :specification_version
 
   def self._all # :nodoc:
-    unless defined?(@@all) && @@all then
+    unless defined?(@@all) && @@all
       @@all = stubs.map(&:to_spec)
       if @@all.any?(&:nil?) # TODO: remove once we're happy
         raise "pid: #{$$} nil spec! included in #{stubs.inspect}"
@@ -761,18 +764,18 @@ def self._clear_load_cache # :nodoc:
 
   def self.each_gemspec(dirs) # :nodoc:
     dirs.each do |dir|
-      Dir[File.join(dir, "*.gemspec")].each do |path|
+      Gem::Util.glob_files_in_dir("*.gemspec", dir).each do |path|
         yield path.untaint
       end
     end
   end
 
-  def self.gemspec_stubs_in dir, pattern
-    Dir[File.join(dir, pattern)].map { |path| yield path }.select(&:valid?)
+  def self.gemspec_stubs_in(dir, pattern)
+    Gem::Util.glob_files_in_dir(pattern, dir).map { |path| yield path }.select(&:valid?)
   end
   private_class_method :gemspec_stubs_in
 
-  def self.default_stubs pattern
+  def self.default_stubs(pattern)
     base_dir = Gem.default_dir
     gems_dir = File.join base_dir, "gems"
     gemspec_stubs_in(default_specifications_dir, pattern) do |path|
@@ -781,59 +784,29 @@ def self.default_stubs pattern
   end
   private_class_method :default_stubs
 
-  def self.installed_stubs dirs, pattern
+  def self.installed_stubs(dirs, pattern)
     map_stubs(dirs, pattern) do |path, base_dir, gems_dir|
       Gem::StubSpecification.gemspec_stub(path, base_dir, gems_dir)
     end
   end
   private_class_method :installed_stubs
 
-  if [].respond_to? :flat_map
-    def self.map_stubs(dirs, pattern) # :nodoc:
-      dirs.flat_map { |dir|
-        base_dir = File.dirname dir
-        gems_dir = File.join base_dir, "gems"
-        gemspec_stubs_in(dir, pattern) { |path| yield path, base_dir, gems_dir }
-      }
-    end
-  else # FIXME: remove when 1.8 is dropped
-    def self.map_stubs(dirs, pattern) # :nodoc:
-      dirs.map { |dir|
-        base_dir = File.dirname dir
-        gems_dir = File.join base_dir, "gems"
-        gemspec_stubs_in(dir, pattern) { |path| yield path, base_dir, gems_dir }
-      }.flatten 1
-    end
+  def self.map_stubs(dirs, pattern) # :nodoc:
+    dirs.flat_map { |dir|
+      base_dir = File.dirname dir
+      gems_dir = File.join base_dir, "gems"
+      gemspec_stubs_in(dir, pattern) { |path| yield path, base_dir, gems_dir }
+    }
   end
   private_class_method :map_stubs
 
-  uniq_takes_a_block = false
-  [1,2].uniq { uniq_takes_a_block = true }
-
-  if uniq_takes_a_block
-    def self.uniq_by(list, &block) # :nodoc:
-      list.uniq(&block)
-    end
-  else # FIXME: remove when 1.8 is dropped
-    def self.uniq_by(list) # :nodoc:
-      values = {}
-      list.each { |item|
-        value = yield item
-        values[value] ||= item
-      }
-      values.values
-    end
+  def self.uniq_by(list, &block) # :nodoc:
+    list.uniq(&block)
   end
   private_class_method :uniq_by
 
-  if [].respond_to? :sort_by!
-    def self.sort_by! list, &block
-      list.sort_by!(&block)
-    end
-  else # FIXME: remove when 1.8 is dropped
-    def self.sort_by! list, &block
-      list.replace list.sort_by(&block)
-    end
+  def self.sort_by!(list, &block)
+    list.sort_by!(&block)
   end
   private_class_method :sort_by!
 
@@ -850,11 +823,11 @@ def self.each_spec(dirs) # :nodoc:
   def self.stubs
     @@stubs ||= begin
       pattern = "*.gemspec"
-      stubs = default_stubs(pattern).concat installed_stubs(dirs, pattern)
+      stubs = Gem.loaded_specs.values + default_stubs(pattern) + installed_stubs(dirs, pattern)
       stubs = uniq_by(stubs) { |stub| stub.full_name }
 
       _resort!(stubs)
-      @@stubs_by_name = stubs.group_by(&:name)
+      @@stubs_by_name = stubs.select { |s| Gem::Platform.match s.platform }.group_by(&:name)
       stubs
     end
   end
@@ -863,13 +836,15 @@ def self.stubs
 
   ##
   # Returns a Gem::StubSpecification for installed gem named +name+
+  # only returns stubs that match Gem.platforms
 
-  def self.stubs_for name
+  def self.stubs_for(name)
     if @@stubs
       @@stubs_by_name[name] || []
     else
       pattern = "#{name}-*.gemspec"
-      stubs = default_stubs(pattern) + installed_stubs(dirs, pattern)
+      stubs = Gem.loaded_specs.values + default_stubs(pattern) +
+        installed_stubs(dirs, pattern).select { |s| Gem::Platform.match s.platform }
       stubs = uniq_by(stubs) { |stub| stub.full_name }.group_by(&:name)
       stubs.each_value { |v| _resort!(v) }
 
@@ -901,7 +876,7 @@ def self.load_defaults
   # Adds +spec+ to the known specifications, keeping the collection
   # properly sorted.
 
-  def self.add_spec spec
+  def self.add_spec(spec)
     warn "Gem::Specification.add_spec is deprecated and will be removed in RubyGems 3.0" unless Gem::Deprecate.skip
     # TODO: find all extraneous adds
     # puts
@@ -926,7 +901,7 @@ def self.add_spec spec
   ##
   # Adds multiple specs to the known specifications.
 
-  def self.add_specs *specs
+  def self.add_specs(*specs)
     warn "Gem::Specification.add_specs is deprecated and will be removed in RubyGems 3.0" unless Gem::Deprecate.skip
 
     raise "nil spec!" if specs.any?(&:nil?) # TODO: remove once we're happy
@@ -964,7 +939,7 @@ def self.all
   #
   # -- wilsonb
 
-  def self.all= specs
+  def self.all=(specs)
     raise "nil spec!" if specs.any?(&:nil?) # TODO: remove once we're happy
     @@stubs_by_name = specs.group_by(&:name)
     @@all = @@stubs = specs
@@ -1008,7 +983,7 @@ def self.dirs
   # Set the directories that Specification uses to find specs. Setting
   # this resets the list of known specs.
 
-  def self.dirs= dirs
+  def self.dirs=(dirs)
     self.reset
 
     @@dirs = Array(dirs).map { |dir| File.join dir, "specifications" }
@@ -1031,7 +1006,7 @@ def self.each
   ##
   # Returns every spec that matches +name+ and optional +requirements+.
 
-  def self.find_all_by_name name, *requirements
+  def self.find_all_by_name(name, *requirements)
     requirements = Gem::Requirement.default if requirements.empty?
 
     # TODO: maybe try: find_all { |s| spec === dep }
@@ -1050,7 +1025,7 @@ def self.find_all_by_full_name(full_name)
   # Find the best specification matching a +name+ and +requirements+. Raises
   # if the dependency doesn't resolve to a valid specification.
 
-  def self.find_by_name name, *requirements
+  def self.find_by_name(name, *requirements)
     requirements = Gem::Requirement.default if requirements.empty?
 
     # TODO: maybe try: find { |s| spec === dep }
@@ -1061,7 +1036,7 @@ def self.find_by_name name, *requirements
   ##
   # Return the best specification that contains the file matching +path+.
 
-  def self.find_by_path path
+  def self.find_by_path(path)
     path = path.dup.freeze
     spec = @@spec_with_requirable_file[path] ||= (stubs.find { |s|
       next unless Gem::BundlerVersionFinder.compatible?(s)
@@ -1074,7 +1049,7 @@ def self.find_by_path path
   # Return the best specification that contains the file matching +path+
   # amongst the specs that are not activated.
 
-  def self.find_inactive_by_path path
+  def self.find_inactive_by_path(path)
     stub = stubs.find { |s|
       next if s.activated?
       next unless Gem::BundlerVersionFinder.compatible?(s)
@@ -1083,7 +1058,7 @@ def self.find_inactive_by_path path
     stub && stub.to_spec
   end
 
-  def self.find_active_stub_by_path path
+  def self.find_active_stub_by_path(path)
     stub = @@active_stub_with_requirable_file[path] ||= (stubs.find { |s|
       s.activated? and s.contains_requirable_file? path
     } || NOT_FOUND)
@@ -1093,7 +1068,7 @@ def self.find_active_stub_by_path path
   ##
   # Return currently unresolved specs that contain the file matching +path+.
 
-  def self.find_in_unresolved path
+  def self.find_in_unresolved(path)
     # TODO: do we need these?? Kill it
     specs = unresolved_deps.values.map { |dep| dep.to_specs }.flatten
 
@@ -1104,7 +1079,7 @@ def self.find_in_unresolved path
   # Search through all unresolved deps and sub-dependencies and return
   # specs that contain the file matching +path+.
 
-  def self.find_in_unresolved_tree path
+  def self.find_in_unresolved_tree(path)
     specs = unresolved_deps.values.map { |dep| dep.to_specs }.flatten
 
     specs.each do |spec|
@@ -1134,11 +1109,11 @@ def self.from_yaml(input)
     input = normalize_yaml_input input
     spec = Gem::SafeYAML.safe_load input
 
-    if spec && spec.class == FalseClass then
+    if spec && spec.class == FalseClass
       raise Gem::EndOfYAMLException
     end
 
-    unless Gem::Specification === spec then
+    unless Gem::Specification === spec
       raise Gem::Exception, "YAML data doesn't evaluate to gem specification"
     end
 
@@ -1152,11 +1127,11 @@ def self.from_yaml(input)
   # Return the latest specs, optionally including prerelease specs if
   # +prerelease+ is true.
 
-  def self.latest_specs prerelease = false
+  def self.latest_specs(prerelease = false)
     _latest_specs Gem::Specification._all, prerelease
   end
 
-  def self._latest_specs specs, prerelease = false # :nodoc:
+  def self._latest_specs(specs, prerelease = false) # :nodoc:
     result = Hash.new { |h,k| h[k] = {} }
     native = {}
 
@@ -1176,7 +1151,7 @@ def self._latest_specs specs, prerelease = false # :nodoc:
   ##
   # Loads Ruby format gemspec from +file+.
 
-  def self.load file
+  def self.load(file)
     return unless file
 
     _spec = LOAD_CACHE[file]
@@ -1185,11 +1160,7 @@ def self.load file
     file = file.dup.untaint
     return unless File.file?(file)
 
-    code = if defined? Encoding
-             File.read file, :mode => 'r:UTF-8:-'
-           else
-             File.read file
-           end
+    code = File.read file, :mode => 'r:UTF-8:-'
 
     code.untaint
 
@@ -1276,7 +1247,7 @@ def self.outdated_and_latest_version
   ##
   # Removes +spec+ from the known specs.
 
-  def self.remove_spec spec
+  def self.remove_spec(spec)
     warn "Gem::Specification.remove_spec is deprecated and will be removed in RubyGems 3.0" unless Gem::Deprecate.skip
     _all.delete spec
     stubs.delete_if { |s| s.full_name == spec.full_name }
@@ -1312,13 +1283,19 @@ def self.reset
     @@active_stub_with_requirable_file   = {}
     _clear_load_cache
     unresolved = unresolved_deps
-    unless unresolved.empty? then
+    unless unresolved.empty?
       w = "W" + "ARN"
-      warn "#{w}: Unresolved specs during Gem::Specification.reset:"
+      warn "#{w}: Unresolved or ambigious specs during Gem::Specification.reset:"
       unresolved.values.each do |dep|
         warn "      #{dep}"
+
+        versions = find_all_by_name(dep.name)
+        unless versions.empty?
+          warn "      Available/installed versions of this gem:"
+          versions.each { |s| warn "      - #{s.version}" }
+        end
       end
-      warn "#{w}: Clearing out unresolved specs."
+      warn "#{w}: Clearing out unresolved specs. Try 'gem cleanup <gem>'"
       warn "Please report a bug if this causes problems."
       unresolved.clear
     end
@@ -1341,7 +1318,7 @@ def self._load(str)
 
     current_version = CURRENT_SPECIFICATION_VERSION
 
-    field_count = if spec.specification_version > current_version then
+    field_count = if spec.specification_version > current_version
                     spec.instance_variable_set :@specification_version,
                                                current_version
                     MARSHAL_FIELDS[current_version]
@@ -1349,7 +1326,7 @@ def self._load(str)
                     MARSHAL_FIELDS[spec.specification_version]
                   end
 
-    if array.size < field_count then
+    if array.size < field_count
       raise TypeError, "invalid Gem::Specification format #{array.inspect}"
     end
 
@@ -1368,7 +1345,7 @@ def self._load(str)
     spec.instance_variable_set :@required_rubygems_version, array[7]
     spec.instance_variable_set :@original_platform,         array[8]
     spec.instance_variable_set :@dependencies,              array[9]
-    spec.instance_variable_set :@rubyforge_project,         array[10]
+    # offset due to rubyforge_project removal
     spec.instance_variable_set :@email,                     array[11]
     spec.instance_variable_set :@authors,                   array[12]
     spec.instance_variable_set :@description,               array[13]
@@ -1388,7 +1365,7 @@ def <=>(other) # :nodoc:
     sort_obj <=> other.sort_obj
   end
 
-  def == other # :nodoc:
+  def ==(other) # :nodoc:
     self.class === other &&
       name == other.name &&
       version == other.version &&
@@ -1413,7 +1390,7 @@ def _dump(limit)
       @required_rubygems_version,
       @original_platform,
       @dependencies,
-      @rubyforge_project,
+      '', # rubyforge_project
       @email,
       @authors,
       @description,
@@ -1433,7 +1410,7 @@ def _dump(limit)
 
   def activate
     other = Gem.loaded_specs[self.name]
-    if other then
+    if other
       check_version_conflict other
       return false
     end
@@ -1471,7 +1448,7 @@ def activate_dependencies
 
       specs = spec_dep.to_specs
 
-      if specs.size == 1 then
+      if specs.size == 1
         specs.first.activate
       else
         name = spec_dep.name
@@ -1533,7 +1510,7 @@ def sanitize_string(string)
   def add_bindir(executables)
     return nil if executables.nil?
 
-    if @bindir then
+    if @bindir
       Array(executables).map { |e| File.join(@bindir, e) }
     else
       executables
@@ -1548,7 +1525,7 @@ def add_bindir(executables)
   # <tt>:development</tt>.
 
   def add_dependency_with_type(dependency, type, requirements)
-    requirements = if requirements.empty? then
+    requirements = if requirements.empty?
                      Gem::Requirement.default
                    else
                      requirements.flatten
@@ -1577,7 +1554,7 @@ def add_self_to_load_path
     # gem directories must come after -I and ENV['RUBYLIB']
     insert_index = Gem.load_path_insert_index
 
-    if insert_index then
+    if insert_index
       # gem directories must come after -I and ENV['RUBYLIB']
       $LOAD_PATH.insert(insert_index, *paths)
     else
@@ -1615,7 +1592,7 @@ def bin_dir
   ##
   # Returns the full path to an executable named +name+ in this gem.
 
-  def bin_file name
+  def bin_file(name)
     File.join bin_dir, name
   end
 
@@ -1681,16 +1658,6 @@ def build_info_file
     File.join build_info_dir, "#{full_name}.info"
   end
 
-  ##
-  # Used to detect if the gem is bundled in older version of Ruby, but not
-  # detectable as default gem (see BasicSpecification#default_gem?).
-
-  def bundled_gem_in_old_ruby?
-    !default_gem? &&
-      RUBY_VERSION < "2.0.0" &&
-      summary == "This #{name} is bundled with Ruby"
-  end
-
   ##
   # Returns the full path to the cache directory containing this
   # spec's cached gem.
@@ -1738,7 +1705,7 @@ def conficts_when_loaded_with?(list_of_specs) # :nodoc:
   def has_conflicts?
     return true unless Gem.env_requirement(name).satisfied_by?(version)
     self.dependencies.any? { |dep|
-      if dep.runtime? then
+      if dep.runtime?
         spec = Gem.loaded_specs[dep.name]
         spec and not spec.satisfies_requirement? dep
       else
@@ -1747,13 +1714,16 @@ def has_conflicts?
     }
   end
 
-  ##
-  # The date this gem was created.  Lazily defaults to the current UTC date.
+  # The date this gem was created.
   #
-  # There is no need to set this in your gem specification.
+  # If SOURCE_DATE_EPOCH is set as an environment variable, use that to support
+  # reproducible builds; otherwise, default to the current UTC date.
+  #
+  # Details on SOURCE_DATE_EPOCH:
+  # https://reproducible-builds.org/specs/source-date-epoch/
 
   def date
-    @date ||= TODAY
+    @date ||= ENV["SOURCE_DATE_EPOCH"] ? Time.utc(*Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc.to_a[3..5].reverse) : TODAY
   end
 
   DateLike = Object.new # :nodoc:
@@ -1765,26 +1735,26 @@ def DateLike.===(obj) # :nodoc:
     /\A
      (\d{4})-(\d{2})-(\d{2})
      (\s+ \d{2}:\d{2}:\d{2}\.\d+ \s* (Z | [-+]\d\d:\d\d) )?
-     \Z/x
+     \Z/x.freeze
 
   ##
   # The date this gem was created
   #
   # DO NOT set this, it is set automatically when the gem is packaged.
 
-  def date= date
+  def date=(date)
     # We want to end up with a Time object with one-day resolution.
     # This is the cleanest, most-readable, faster-than-using-Date
     # way to do it.
     @date = case date
             when String then
-              if DateTimeFormat =~ date then
+              if DateTimeFormat =~ date
                 Time.utc($1.to_i, $2.to_i, $3.to_i)
 
               # Workaround for where the date format output from psych isn't
               # parsed as a Time object by syck and thus comes through as a
               # string.
-              elsif /\A(\d{4})-(\d{2})-(\d{2}) \d{2}:\d{2}:\d{2}\.\d+?Z\z/ =~ date then
+              elsif /\A(\d{4})-(\d{2})-(\d{2}) \d{2}:\d{2}:\d{2}\.\d+?Z\z/ =~ date
                 Time.utc($1.to_i, $2.to_i, $3.to_i)
               else
                 raise(Gem::InvalidSpecificationException,
@@ -1818,7 +1788,7 @@ def default_executable # :nodoc:
   ##
   # The default value for specification attribute +name+
 
-  def default_value name
+  def default_value(name)
     @@default_value[name]
   end
 
@@ -1842,7 +1812,7 @@ def dependent_gems
     out = []
     Gem::Specification.each do |spec|
       spec.dependencies.each do |dep|
-        if self.satisfies_requirement?(dep) then
+        if self.satisfies_requirement?(dep)
           sats = []
           find_all_satisfiers(dep) do |sat|
             sats << sat
@@ -1864,7 +1834,7 @@ def dependent_specs
   ##
   # A detailed description of this gem.  See also #summary
 
-  def description= str
+  def description=(str)
     @description = str.to_s
   end
 
@@ -1883,17 +1853,17 @@ def development_dependencies
   #
   #   spec.doc_dir 'ri' # => "/path/to/gem_repo/doc/a-1/ri"
 
-  def doc_dir type = nil
+  def doc_dir(type = nil)
     @doc_dir ||= File.join base_dir, 'doc', full_name
 
-    if type then
+    if type
       File.join @doc_dir, type
     else
       @doc_dir
     end
   end
 
-  def encode_with coder # :nodoc:
+  def encode_with(coder) # :nodoc:
     mark_version
 
     coder.add 'name', @name
@@ -1914,7 +1884,7 @@ def encode_with coder # :nodoc:
     end
   end
 
-  def eql? other # :nodoc:
+  def eql?(other) # :nodoc:
     self.class === other && same_attributes?(other)
   end
 
@@ -1928,7 +1898,7 @@ def executable
   ##
   # Singular accessor for #executables
 
-  def executable=o
+  def executable=(o)
     self.executables = [o]
   end
 
@@ -1936,7 +1906,7 @@ def executable=o
   # Sets executables to +value+, ensuring it is an array. Don't
   # use this, push onto the array instead.
 
-  def executables= value
+  def executables=(value)
     # TODO: warn about setting instead of pushing
     @executables = Array(value)
   end
@@ -1945,7 +1915,7 @@ def executables= value
   # Sets extensions to +extensions+, ensuring it is an array. Don't
   # use this, push onto the array instead.
 
-  def extensions= extensions
+  def extensions=(extensions)
     # TODO: warn about setting instead of pushing
     @extensions = Array extensions
   end
@@ -1954,7 +1924,7 @@ def extensions= extensions
   # Sets extra_rdoc_files to +files+, ensuring it is an array. Don't
   # use this, push onto the array instead.
 
-  def extra_rdoc_files= files
+  def extra_rdoc_files=(files)
     # TODO: warn about setting instead of pushing
     @extra_rdoc_files = Array files
   end
@@ -1971,14 +1941,14 @@ def file_name
   ##
   # Sets files to +files+, ensuring it is an array.
 
-  def files= files
+  def files=(files)
     @files = Array files
   end
 
   ##
   # Finds all gems that satisfy +dep+
 
-  def find_all_satisfiers dep
+  def find_all_satisfiers(dep)
     Gem::Specification.each do |spec|
       yield spec if spec.satisfies_requirement? dep
     end
@@ -2029,7 +1999,7 @@ def has_rdoc # :nodoc:
   #
   # Formerly used to indicate this gem was RDoc-capable.
 
-  def has_rdoc= ignored # :nodoc:
+  def has_rdoc=(ignored) # :nodoc:
     @has_rdoc = true
   end
   deprecate :has_rdoc=,           :none,       2018, 12
@@ -2052,7 +2022,7 @@ def hash # :nodoc:
     name.hash ^ version.hash
   end
 
-  def init_with coder # :nodoc:
+  def init_with(coder) # :nodoc:
     @installed_by_version ||= nil
     yaml_initialize coder.tag, coder.map
   end
@@ -2076,7 +2046,7 @@ def set_not_nil_attributes_to_default_values
   # and yields itself for further initialization.  Optionally takes +name+ and
   # +version+.
 
-  def initialize name = nil, version = nil
+  def initialize(name = nil, version = nil)
     super()
     @gems_dir              = nil
     @base_dir              = nil
@@ -2100,14 +2070,14 @@ def initialize name = nil, version = nil
   ##
   # Duplicates array_attributes from +other_spec+ so state isn't shared.
 
-  def initialize_copy other_spec
+  def initialize_copy(other_spec)
     self.class.array_attributes.each do |name|
       name = :"@#{name}"
       next unless other_spec.instance_variable_defined? name
 
       begin
         val = other_spec.instance_variable_get(name)
-        if val then
+        if val
           instance_variable_set name, val.dup
         elsif Gem.configuration.really_verbose
           warn "WARNING: #{full_name} has an invalid nil value for #{name}"
@@ -2124,7 +2094,7 @@ def initialize_copy other_spec
 
   def base_dir
     return Gem.dir unless loaded_from
-    @base_dir ||= if default_gem? then
+    @base_dir ||= if default_gem?
                     File.dirname File.dirname File.dirname loaded_from
                   else
                     File.dirname File.dirname loaded_from
@@ -2200,7 +2170,7 @@ def mark_version
 
   def method_missing(sym, *a, &b) # :nodoc:
     if @specification_version > CURRENT_SPECIFICATION_VERSION and
-      sym.to_s =~ /=$/ then
+      sym.to_s =~ /=$/
       warn "ignoring #{sym} loading #{full_name}" if $DEBUG
     else
       super
@@ -2227,7 +2197,7 @@ def missing_extensions?
   #   file list.
 
   def normalize
-    if defined?(@extra_rdoc_files) and @extra_rdoc_files then
+    if defined?(@extra_rdoc_files) and @extra_rdoc_files
       @extra_rdoc_files.uniq!
       @files ||= []
       @files.concat(@extra_rdoc_files)
@@ -2252,7 +2222,7 @@ def name_tuple
   # platform.  For use with legacy gems.
 
   def original_name # :nodoc:
-    if platform == Gem::Platform::RUBY or platform.nil? then
+    if platform == Gem::Platform::RUBY or platform.nil?
       "#{@name}-#{@version}"
     else
       "#{@name}-#{@version}-#{@original_platform}"
@@ -2285,11 +2255,11 @@ def pretty_print(q) # :nodoc:
       attributes.each do |attr_name|
         current_value = self.send attr_name
         if current_value != default_value(attr_name) or
-           self.class.required_attribute? attr_name then
+           self.class.required_attribute? attr_name
 
           q.text "s.#{attr_name} = "
 
-          if attr_name == :date then
+          if attr_name == :date
             current_value = current_value.utc
 
             q.text "Time.utc(#{current_value.year}, #{current_value.month}, #{current_value.day})"
@@ -2307,7 +2277,7 @@ def pretty_print(q) # :nodoc:
   # Raise an exception if the version of this spec conflicts with the one
   # that is already loaded (+other+)
 
-  def check_version_conflict other # :nodoc:
+  def check_version_conflict(other) # :nodoc:
     return if self.version == other.version
 
     # This gem is already loaded.  If the currently loaded gem is not in the
@@ -2328,7 +2298,7 @@ def check_version_conflict other # :nodoc:
   # Check the spec for possible conflicts and freak out if there are any.
 
   def raise_if_conflicts # :nodoc:
-    if has_conflicts? then
+    if has_conflicts?
       raise Gem::ConflictError.new self, conflicts
     end
   end
@@ -2337,7 +2307,7 @@ def raise_if_conflicts # :nodoc:
   # Sets rdoc_options to +value+, ensuring it is an array. Don't
   # use this, push onto the array instead.
 
-  def rdoc_options= options
+  def rdoc_options=(options)
     # TODO: warn about setting instead of pushing
     @rdoc_options = Array options
   end
@@ -2352,7 +2322,7 @@ def require_path
   ##
   # Singular accessor for #require_paths
 
-  def require_path= path
+  def require_path=(path)
     self.require_paths = Array(path)
   end
 
@@ -2360,12 +2330,12 @@ def require_path= path
   # Set requirements to +req+, ensuring it is an array. Don't
   # use this, push onto the array instead.
 
-  def requirements= req
+  def requirements=(req)
     # TODO: warn about setting instead of pushing
     @requirements = Array req
   end
 
-  def respond_to_missing? m, include_private = false # :nodoc:
+  def respond_to_missing?(m, include_private = false) # :nodoc:
     false
   end
 
@@ -2412,7 +2382,7 @@ def runtime_dependencies
   ##
   # True if this gem has the same attributes as +other+.
 
-  def same_attributes? spec
+  def same_attributes?(spec)
     @@attributes.all? { |name, default| self.send(name) == spec.send(name) }
   end
 
@@ -2421,7 +2391,7 @@ def same_attributes? spec
   ##
   # Checks if this specification meets the requirement of +dependency+.
 
-  def satisfies_requirement? dependency
+  def satisfies_requirement?(dependency)
     return @name == dependency.name &&
       dependency.requirement.satisfied_by?(@version)
   end
@@ -2468,7 +2438,7 @@ def spec_name
   ##
   # A short summary of this gem's description.
 
-  def summary= str
+  def summary=(str)
     @summary = str.to_s.strip.
       gsub(/(\w-)\n[ \t]*(\w)/, '\1\2').gsub(/\n[ \t]*/, " ") # so. weird.
   end
@@ -2483,7 +2453,7 @@ def test_file # :nodoc:
   ##
   # Singular mutator for #test_files
 
-  def test_file= file # :nodoc:
+  def test_file=(file) # :nodoc:
     self.test_files = [file]
   end
 
@@ -2495,11 +2465,11 @@ def test_files # :nodoc:
     # Handle the possibility that we have @test_suite_file but not
     # @test_files.  This will happen when an old gem is loaded via
     # YAML.
-    if defined? @test_suite_file then
+    if defined? @test_suite_file
       @test_files = [@test_suite_file].flatten
       @test_suite_file = nil
     end
-    if defined?(@test_files) and @test_files then
+    if defined?(@test_files) and @test_files
       @test_files
     else
       @test_files = []
@@ -2523,7 +2493,7 @@ def to_ruby
 
     result << "  s.name = #{ruby_code name}"
     result << "  s.version = #{ruby_code version}"
-    unless platform.nil? or platform == Gem::Platform::RUBY then
+    unless platform.nil? or platform == Gem::Platform::RUBY
       result << "  s.platform = #{ruby_code original_platform}"
     end
     result << ""
@@ -2551,17 +2521,17 @@ def to_ruby
       next if handled.include? attr_name
       current_value = self.send(attr_name)
       if current_value != default_value(attr_name) or
-         self.class.required_attribute? attr_name then
+         self.class.required_attribute? attr_name
         result << "  s.#{attr_name} = #{ruby_code current_value}"
       end
     end
 
-    if @installed_by_version then
+    if @installed_by_version
       result << nil
       result << "  s.installed_by_version = \"#{Gem::VERSION}\" if s.respond_to? :installed_by_version"
     end
 
-    unless dependencies.empty? then
+    unless dependencies.empty?
       result << nil
       result << "  if s.respond_to? :specification_version then"
       result << "    s.specification_version = #{specification_version}"
@@ -2620,39 +2590,30 @@ def to_spec
   end
 
   def to_yaml(opts = {}) # :nodoc:
-    if (YAML.const_defined?(:ENGINE) && !YAML::ENGINE.syck?) ||
-        (defined?(Psych) && YAML == Psych) then
-      # Because the user can switch the YAML engine behind our
-      # back, we have to check again here to make sure that our
-      # psych code was properly loaded, and load it if not.
-      unless Gem.const_defined?(:NoAliasYAMLTree)
-        require 'rubygems/psych_tree'
-      end
+    # Because the user can switch the YAML engine behind our
+    # back, we have to check again here to make sure that our
+    # psych code was properly loaded, and load it if not.
+    unless Gem.const_defined?(:NoAliasYAMLTree)
+      require 'rubygems/psych_tree'
+    end
 
-      builder = Gem::NoAliasYAMLTree.create
-      builder << self
-      ast = builder.tree
+    builder = Gem::NoAliasYAMLTree.create
+    builder << self
+    ast = builder.tree
 
-      io = StringIO.new
-      io.set_encoding Encoding::UTF_8 if Object.const_defined? :Encoding
+    io = StringIO.new
+    io.set_encoding Encoding::UTF_8
 
-      Psych::Visitors::Emitter.new(io).accept(ast)
+    Psych::Visitors::Emitter.new(io).accept(ast)
 
-      io.string.gsub(/ !!null \n/, " \n")
-    else
-      YAML.quick_emit object_id, opts do |out|
-        out.map taguri, to_yaml_style do |map|
-          encode_with map
-        end
-      end
-    end
+    io.string.gsub(/ !!null \n/, " \n")
   end
 
   ##
   # Recursively walk dependencies of this spec, executing the +block+ for each
   # hop.
 
-  def traverse trail = [], visited = {}, &block
+  def traverse(trail = [], visited = {}, &block)
     trail.push(self)
     begin
       dependencies.each do |dep|
@@ -2685,336 +2646,40 @@ def traverse trail = [], visited = {}, &block
   # Raises InvalidSpecificationException if the spec does not pass the
   # checks..
 
-  def validate packaging = true
-    @warnings = 0
+  def validate(packaging = true, strict = false)
     require 'rubygems/user_interaction'
     extend Gem::UserInteraction
     normalize
 
-    nil_attributes = self.class.non_nil_attributes.find_all do |attrname|
-      instance_variable_get("@#{attrname}").nil?
-    end
-
-    unless nil_attributes.empty? then
-      raise Gem::InvalidSpecificationException,
-        "#{nil_attributes.join ', '} must not be nil"
-    end
-
-    if packaging and rubygems_version != Gem::VERSION then
-      raise Gem::InvalidSpecificationException,
-            "expected RubyGems version #{Gem::VERSION}, was #{rubygems_version}"
-    end
-
-    @@required_attributes.each do |symbol|
-      unless self.send symbol then
-        raise Gem::InvalidSpecificationException,
-              "missing value for attribute #{symbol}"
-      end
-    end
-
-    if !name.is_a?(String) then
-      raise Gem::InvalidSpecificationException,
-            "invalid value for attribute name: \"#{name.inspect}\" must be a string"
-    elsif name !~ /[a-zA-Z]/ then
-      raise Gem::InvalidSpecificationException,
-            "invalid value for attribute name: #{name.dump} must include at least one letter"
-    elsif name !~ VALID_NAME_PATTERN then
-      raise Gem::InvalidSpecificationException,
-            "invalid value for attribute name: #{name.dump} can only include letters, numbers, dashes, and underscores"
-    end
-
-    if raw_require_paths.empty? then
-      raise Gem::InvalidSpecificationException,
-            'specification must have at least one require_path'
-    end
+    validation_policy = Gem::SpecificationPolicy.new(self)
+    validation_policy.packaging = packaging
+    validation_policy.validate(strict)
+  end
 
-    @files.delete_if            { |x| File.directory?(x) && !File.symlink?(x) }
-    @test_files.delete_if       { |x| File.directory?(x) && !File.symlink?(x) }
+  def keep_only_files_and_directories
     @executables.delete_if      { |x| File.directory?(File.join(@bindir, x)) }
-    @extra_rdoc_files.delete_if { |x| File.directory?(x) && !File.symlink?(x) }
     @extensions.delete_if       { |x| File.directory?(x) && !File.symlink?(x) }
-
-    non_files = files.reject { |x| File.file?(x) || File.symlink?(x) }
-
-    unless not packaging or non_files.empty? then
-      raise Gem::InvalidSpecificationException,
-            "[\"#{non_files.join "\", \""}\"] are not files"
-    end
-
-    if files.include? file_name then
-      raise Gem::InvalidSpecificationException,
-            "#{full_name} contains itself (#{file_name}), check your files list"
-    end
-
-    unless specification_version.is_a?(Integer)
-      raise Gem::InvalidSpecificationException,
-            'specification_version must be an Integer (did you mean version?)'
-    end
-
-    case platform
-    when Gem::Platform, Gem::Platform::RUBY then # ok
-    else
-      raise Gem::InvalidSpecificationException,
-            "invalid platform #{platform.inspect}, see Gem::Platform"
-    end
-
-    self.class.array_attributes.each do |field|
-      val = self.send field
-      klass = case field
-              when :dependencies
-                Gem::Dependency
-              else
-                String
-              end
-
-      unless Array === val and val.all? { |x| x.kind_of?(klass) } then
-        raise(Gem::InvalidSpecificationException,
-              "#{field} must be an Array of #{klass}")
-      end
-    end
-
-    [:authors].each do |field|
-      val = self.send field
-      raise Gem::InvalidSpecificationException, "#{field} may not be empty" if
-        val.empty?
-    end
-
-    unless Hash === metadata
-      raise Gem::InvalidSpecificationException,
-              'metadata must be a hash'
-    end
-
-    validate_metadata
-
-    licenses.each { |license|
-      if license.length > 64
-        raise Gem::InvalidSpecificationException,
-          "each license must be 64 characters or less"
-      end
-
-      if !Gem::Licenses.match?(license)
-        suggestions = Gem::Licenses.suggestions(license)
-        message = <<-warning
-license value '#{license}' is invalid.  Use a license identifier from
-http://spdx.org/licenses or '#{Gem::Licenses::NONSTANDARD}' for a nonstandard license.
-        warning
-        message += "Did you mean #{suggestions.map { |s| "'#{s}'"}.join(', ')}?\n" unless suggestions.nil?
-        warning(message)
-      end
-    }
-
-    warning <<-warning if licenses.empty?
-licenses is empty, but is recommended.  Use a license identifier from
-http://spdx.org/licenses or '#{Gem::Licenses::NONSTANDARD}' for a nonstandard license.
-    warning
-
-    validate_permissions
-
-    # reject lazy developers:
-
-    lazy = '"FIxxxXME" or "TOxxxDO"'.gsub(/xxx/, '')
-
-    unless authors.grep(/FI XME|TO DO/x).empty? then
-      raise Gem::InvalidSpecificationException, "#{lazy} is not an author"
-    end
-
-    unless Array(email).grep(/FI XME|TO DO/x).empty? then
-      raise Gem::InvalidSpecificationException, "#{lazy} is not an email"
-    end
-
-    if description =~ /FI XME|TO DO/x then
-      raise Gem::InvalidSpecificationException, "#{lazy} is not a description"
-    end
-
-    if summary =~ /FI XME|TO DO/x then
-      raise Gem::InvalidSpecificationException, "#{lazy} is not a summary"
-    end
-
-    # Make sure a homepage is valid HTTP/HTTPS URI
-    if homepage and not homepage.empty?
-      begin
-        homepage_uri = URI.parse(homepage)
-        unless [URI::HTTP, URI::HTTPS].member? homepage_uri.class
-          raise Gem::InvalidSpecificationException, "\"#{homepage}\" is not a valid HTTP URI"
-        end
-      rescue URI::InvalidURIError
-        raise Gem::InvalidSpecificationException, "\"#{homepage}\" is not a valid HTTP URI"
-      end
-    end
-
-    # Warnings
-
-    %w[author homepage summary files].each do |attribute|
-      value = self.send attribute
-      warning "no #{attribute} specified" if value.nil? or value.empty?
-    end
-
-    if description == summary then
-      warning 'description and summary are identical'
-    end
-
-    # TODO: raise at some given date
-    warning "deprecated autorequire specified" if autorequire
-
-    executables.each do |executable|
-      executable_path = File.join(bindir, executable)
-      shebang = File.read(executable_path, 2) == '#!'
-
-      warning "#{executable_path} is missing #! line" unless shebang
-    end
-
-    files.each do |file|
-      next unless File.symlink?(file)
-      warning "#{file} is a symlink, which is not supported on all platforms"
-    end
-
-    validate_dependencies
-
-    true
-  ensure
-    if $! or @warnings > 0 then
-      alert_warning "See http://guides.rubygems.org/specification-reference/ for help"
-    end
+    @extra_rdoc_files.delete_if { |x| File.directory?(x) && !File.symlink?(x) }
+    @files.delete_if            { |x| File.directory?(x) && !File.symlink?(x) }
+    @test_files.delete_if       { |x| File.directory?(x) && !File.symlink?(x) }
   end
 
   def validate_metadata
-    url_validation_regex = %r{\Ahttps?:\/\/([^\s:@]+:[^\s:@]*@)?[A-Za-z\d\-]+(\.[A-Za-z\d\-]+)+\.?(:\d{1,5})?([\/?]\S*)?\z}
-    link_keys = %w(
-      bug_tracker_uri
-      changelog_uri
-      documentation_uri
-      homepage_uri
-      mailing_list_uri
-      source_code_uri
-      wiki_uri
-    )
-
-    metadata.each do|key, value|
-      if !key.kind_of?(String)
-        raise Gem::InvalidSpecificationException,
-                "metadata keys must be a String"
-      end
-
-      if key.size > 128
-        raise Gem::InvalidSpecificationException,
-                "metadata key too large (#{key.size} > 128)"
-      end
-
-      if !value.kind_of?(String)
-        raise Gem::InvalidSpecificationException,
-                "metadata values must be a String"
-      end
-
-      if value.size > 1024
-        raise Gem::InvalidSpecificationException,
-                "metadata value too large (#{value.size} > 1024)"
-      end
-
-      if link_keys.include? key
-        if value !~ url_validation_regex
-          raise Gem::InvalidSpecificationException,
-                 "metadata['#{key}'] has invalid link: #{value.inspect}"
-        end
-      end
-    end
+    Gem::SpecificationPolicy.new(self).validate_metadata
   end
 
   ##
   # Checks that dependencies use requirements as we recommend.  Warnings are
   # issued when dependencies are open-ended or overly strict for semantic
   # versioning.
-
-  def validate_dependencies # :nodoc:
-    # NOTE: see REFACTOR note in Gem::Dependency about types - this might be brittle
-    seen = Gem::Dependency::TYPES.inject({}) { |types, type| types.merge({ type => {}}) }
-
-    error_messages = []
-    warning_messages = []
-    dependencies.each do |dep|
-      if prev = seen[dep.type][dep.name] then
-        error_messages << <<-MESSAGE
-duplicate dependency on #{dep}, (#{prev.requirement}) use:
-    add_#{dep.type}_dependency '#{dep.name}', '#{dep.requirement}', '#{prev.requirement}'
-        MESSAGE
-      end
-
-      seen[dep.type][dep.name] = dep
-
-      prerelease_dep = dep.requirements_list.any? do |req|
-        Gem::Requirement.new(req).prerelease?
-      end
-
-      warning_messages << "prerelease dependency on #{dep} is not recommended" if
-        prerelease_dep && !version.prerelease?
-
-      overly_strict = dep.requirement.requirements.length == 1 &&
-        dep.requirement.requirements.any? do |op, version|
-          op == '~>' and
-            not version.prerelease? and
-            version.segments.length > 2 and
-            version.segments.first != 0
-        end
-
-      if overly_strict then
-        _, dep_version = dep.requirement.requirements.first
-
-        base = dep_version.segments.first 2
-
-        warning_messages << <<-WARNING
-pessimistic dependency on #{dep} may be overly strict
-  if #{dep.name} is semantically versioned, use:
-    add_#{dep.type}_dependency '#{dep.name}', '~> #{base.join '.'}', '>= #{dep_version}'
-        WARNING
-      end
-
-      open_ended = dep.requirement.requirements.all? do |op, version|
-        not version.prerelease? and (op == '>' or op == '>=')
-      end
-
-      if open_ended then
-        op, dep_version = dep.requirement.requirements.first
-
-        base = dep_version.segments.first 2
-
-        bugfix = if op == '>' then
-                   ", '> #{dep_version}'"
-                 elsif op == '>=' and base != dep_version.segments then
-                   ", '>= #{dep_version}'"
-                 end
-
-        warning_messages << <<-WARNING
-open-ended dependency on #{dep} is not recommended
-  if #{dep.name} is semantically versioned, use:
-    add_#{dep.type}_dependency '#{dep.name}', '~> #{base.join '.'}'#{bugfix}
-        WARNING
-      end
-    end
-    if error_messages.any?
-      raise Gem::InvalidSpecificationException, error_messages.join
-    end
-    if warning_messages.any?
-      warning_messages.each { |warning_message| warning warning_message }
-    end
+  def validate_dependencies
+    Gem::SpecificationPolicy.new(self).validate_dependencies
   end
 
   ##
   # Checks to see if the files to be packaged are world-readable.
-
   def validate_permissions
-    return if Gem.win_platform?
-
-    files.each do |file|
-      next unless File.file?(file)
-      next if File.stat(file).mode & 0444 == 0444
-      warning "#{file} is not world-readable"
-    end
-
-    executables.each do |name|
-      exec = File.join @bindir, name
-      next unless File.file?(exec)
-      next if File.stat(exec).executable?
-      warning "#{exec} is not executable"
-    end
+    Gem::SpecificationPolicy.new(self).validate_permissions
   end
 
   ##
@@ -3022,9 +2687,13 @@ def validate_permissions
   # required_rubygems_version if +version+ indicates it is a
   # prerelease.
 
-  def version= version
+  def version=(version)
     @version = Gem::Version.create(version)
-    self.required_rubygems_version = '> 1.3.1' if @version.prerelease?
+    # skip to set required_ruby_version when pre-released rubygems.
+    # It caused to raise CircularDependencyError
+    if @version.prerelease? && (@name.nil? || @name.strip != "rubygems")
+      self.required_rubygems_version = '> 1.3.1'
+    end
     invalidate_memoized_attributes
 
     return @version
@@ -3071,12 +2740,6 @@ def reset_nil_attributes_to_default
     @installed_by_version ||= nil
   end
 
-  def warning statement # :nodoc:
-    @warnings += 1
-
-    alert_warning statement
-  end
-
   def raw_require_paths # :nodoc:
     @require_paths
   end
diff --git a/lib/ruby/stdlib/rubygems/specification_policy.rb b/lib/ruby/stdlib/rubygems/specification_policy.rb
new file mode 100644
index 00000000000..4b79c1ac619
--- /dev/null
+++ b/lib/ruby/stdlib/rubygems/specification_policy.rb
@@ -0,0 +1,407 @@
+require 'delegate'
+require 'uri'
+
+class Gem::SpecificationPolicy < SimpleDelegator
+  VALID_NAME_PATTERN = /\A[a-zA-Z0-9\.\-\_]+\z/.freeze # :nodoc:
+
+  SPECIAL_CHARACTERS = /\A[#{Regexp.escape('.-_')}]+/.freeze # :nodoc:
+
+  VALID_URI_PATTERN = %r{\Ahttps?:\/\/([^\s:@]+:[^\s:@]*@)?[A-Za-z\d\-]+(\.[A-Za-z\d\-]+)+\.?(:\d{1,5})?([\/?]\S*)?\z}.freeze  # :nodoc:
+
+  METADATA_LINK_KEYS = %w[
+    bug_tracker_uri
+    changelog_uri
+    documentation_uri
+    homepage_uri
+    mailing_list_uri
+    source_code_uri
+    wiki_uri
+  ].freeze # :nodoc:
+
+  def initialize(specification)
+    @warnings = 0
+
+    super(specification)
+  end
+
+  ##
+  # If set to true, run packaging-specific checks, as well.
+
+  attr_accessor :packaging
+
+  ##
+  # Checks that the specification contains all required fields, and does a
+  # very basic sanity check.
+  #
+  # Raises InvalidSpecificationException if the spec does not pass the
+  # checks.
+
+  def validate(strict = false)
+    validate_nil_attributes
+
+    validate_rubygems_version
+
+    validate_required_attributes
+
+    validate_name
+
+    validate_require_paths
+
+    keep_only_files_and_directories
+
+    validate_non_files
+
+    validate_self_inclusion_in_files_list
+
+    validate_specification_version
+
+    validate_platform
+
+    validate_array_attributes
+
+    validate_authors_field
+
+    validate_metadata
+
+    validate_licenses
+
+    validate_permissions
+
+    validate_lazy_metadata
+
+    validate_values
+
+    validate_dependencies
+
+    if @warnings > 0
+      if strict
+        error "specification has warnings"
+      else
+        alert_warning help_text
+      end
+    end
+
+    true
+  end
+
+  ##
+  # Implementation for Specification#validate_metadata
+
+  def validate_metadata
+    unless Hash === metadata
+      error 'metadata must be a hash'
+    end
+
+    metadata.each do |key, value|
+      if !key.kind_of?(String)
+        error "metadata keys must be a String"
+      end
+
+      if key.size > 128
+        error "metadata key too large (#{key.size} > 128)"
+      end
+
+      if !value.kind_of?(String)
+        error "metadata values must be a String"
+      end
+
+      if value.size > 1024
+        error "metadata value too large (#{value.size} > 1024)"
+      end
+
+      if METADATA_LINK_KEYS.include? key
+        if value !~ VALID_URI_PATTERN
+          error "metadata['#{key}'] has invalid link: #{value.inspect}"
+        end
+      end
+    end
+  end
+
+  ##
+  # Implementation for Specification#validate_dependencies
+
+  def validate_dependencies # :nodoc:
+    # NOTE: see REFACTOR note in Gem::Dependency about types - this might be brittle
+    seen = Gem::Dependency::TYPES.inject({}) { |types, type| types.merge({ type => {}}) }
+
+    error_messages = []
+    warning_messages = []
+    dependencies.each do |dep|
+      if prev = seen[dep.type][dep.name]
+        error_messages << <<-MESSAGE
+duplicate dependency on #{dep}, (#{prev.requirement}) use:
+    add_#{dep.type}_dependency '#{dep.name}', '#{dep.requirement}', '#{prev.requirement}'
+        MESSAGE
+      end
+
+      seen[dep.type][dep.name] = dep
+
+      prerelease_dep = dep.requirements_list.any? do |req|
+        Gem::Requirement.new(req).prerelease?
+      end
+
+      warning_messages << "prerelease dependency on #{dep} is not recommended" if
+          prerelease_dep && !version.prerelease?
+
+      open_ended = dep.requirement.requirements.all? do |op, version|
+        not version.prerelease? and (op == '>' or op == '>=')
+      end
+
+      if open_ended
+        op, dep_version = dep.requirement.requirements.first
+
+        segments = dep_version.segments
+
+        base = segments.first 2
+
+        recommendation = if (op == '>' || op == '>=') && segments == [0]
+                           "  use a bounded requirement, such as '~> x.y'"
+                         else
+                           bugfix = if op == '>'
+                                      ", '> #{dep_version}'"
+                                    elsif op == '>=' and base != segments
+                                      ", '>= #{dep_version}'"
+                                    end
+
+                           "  if #{dep.name} is semantically versioned, use:\n" \
+                           "    add_#{dep.type}_dependency '#{dep.name}', '~> #{base.join '.'}'#{bugfix}"
+                         end
+
+        warning_messages << ["open-ended dependency on #{dep} is not recommended", recommendation].join("\n") + "\n"
+      end
+    end
+    if error_messages.any?
+      error error_messages.join
+    end
+    if warning_messages.any?
+      warning_messages.each { |warning_message| warning warning_message }
+    end
+  end
+
+  ##
+  # Issues a warning for each file to be packaged which is world-readable.
+  #
+  # Implementation for Specification#validate_permissions
+
+  def validate_permissions
+    return if Gem.win_platform?
+
+    files.each do |file|
+      next unless File.file?(file)
+      next if File.stat(file).mode & 0444 == 0444
+      warning "#{file} is not world-readable"
+    end
+
+    executables.each do |name|
+      exec = File.join bindir, name
+      next unless File.file?(exec)
+      next if File.stat(exec).executable?
+      warning "#{exec} is not executable"
+    end
+  end
+
+  private
+
+  def validate_nil_attributes
+    nil_attributes = Gem::Specification.non_nil_attributes.select do |attrname|
+      __getobj__.instance_variable_get("@#{attrname}").nil?
+    end
+    return if nil_attributes.empty?
+    error "#{nil_attributes.join ', '} must not be nil"
+  end
+
+  def validate_rubygems_version
+    return unless packaging
+    return if rubygems_version == Gem::VERSION
+
+    error "expected RubyGems version #{Gem::VERSION}, was #{rubygems_version}"
+  end
+
+  def validate_required_attributes
+    Gem::Specification.required_attributes.each do |symbol|
+      unless send symbol
+        error "missing value for attribute #{symbol}"
+      end
+    end
+  end
+
+  def validate_name
+    if !name.is_a?(String)
+      error "invalid value for attribute name: \"#{name.inspect}\" must be a string"
+    elsif name !~ /[a-zA-Z]/
+      error "invalid value for attribute name: #{name.dump} must include at least one letter"
+    elsif name !~ VALID_NAME_PATTERN
+      error "invalid value for attribute name: #{name.dump} can only include letters, numbers, dashes, and underscores"
+    elsif name =~ SPECIAL_CHARACTERS
+      error "invalid value for attribute name: #{name.dump} can not begin with a period, dash, or underscore"
+    end
+  end
+
+  def validate_require_paths
+    return unless raw_require_paths.empty?
+
+    error 'specification must have at least one require_path'
+  end
+
+  def validate_non_files
+    return unless packaging
+    non_files = files.reject {|x| File.file?(x) || File.symlink?(x)}
+
+    unless non_files.empty?
+      error "[\"#{non_files.join "\", \""}\"] are not files"
+    end
+  end
+
+  def validate_self_inclusion_in_files_list
+    return unless files.include?(file_name)
+
+    error "#{full_name} contains itself (#{file_name}), check your files list"
+  end
+
+  def validate_specification_version
+    return if specification_version.is_a?(Integer)
+
+    error 'specification_version must be an Integer (did you mean version?)'
+  end
+
+  def validate_platform
+    case platform
+    when Gem::Platform, Gem::Platform::RUBY  # ok
+    else
+      error "invalid platform #{platform.inspect}, see Gem::Platform"
+    end
+  end
+
+  def validate_array_attributes
+    Gem::Specification.array_attributes.each do |field|
+      validate_array_attribute(field)
+    end
+  end
+
+  def validate_array_attribute(field)
+    val = self.send(field)
+    klass = case field
+            when :dependencies then
+              Gem::Dependency
+            else
+              String
+            end
+
+    unless Array === val and val.all? {|x| x.kind_of?(klass)}
+      raise(Gem::InvalidSpecificationException,
+            "#{field} must be an Array of #{klass}")
+    end
+  end
+
+  def validate_authors_field
+    return unless authors.empty?
+
+    error "authors may not be empty"
+  end
+
+  def validate_licenses
+    licenses.each { |license|
+      if license.length > 64
+        error "each license must be 64 characters or less"
+      end
+
+      if !Gem::Licenses.match?(license)
+        suggestions = Gem::Licenses.suggestions(license)
+        message = <<-warning
+license value '#{license}' is invalid.  Use a license identifier from
+http://spdx.org/licenses or '#{Gem::Licenses::NONSTANDARD}' for a nonstandard license.
+        warning
+        message += "Did you mean #{suggestions.map { |s| "'#{s}'"}.join(', ')}?\n" unless suggestions.nil?
+        warning(message)
+      end
+    }
+
+    warning <<-warning if licenses.empty?
+licenses is empty, but is recommended.  Use a license identifier from
+http://spdx.org/licenses or '#{Gem::Licenses::NONSTANDARD}' for a nonstandard license.
+    warning
+  end
+
+  LAZY = '"FIxxxXME" or "TOxxxDO"'.gsub(/xxx/, '')
+  LAZY_PATTERN = /FI XME|TO DO/x.freeze
+  HOMEPAGE_URI_PATTERN = /\A[a-z][a-z\d+.-]*:/i.freeze
+
+  def validate_lazy_metadata
+    unless authors.grep(LAZY_PATTERN).empty?
+      error "#{LAZY} is not an author"
+    end
+
+    unless Array(email).grep(LAZY_PATTERN).empty?
+      error "#{LAZY} is not an email"
+    end
+
+    if description =~ LAZY_PATTERN
+      error "#{LAZY} is not a description"
+    end
+
+    if summary =~ LAZY_PATTERN
+      error "#{LAZY} is not a summary"
+    end
+
+    # Make sure a homepage is valid HTTP/HTTPS URI
+    if homepage and not homepage.empty?
+      begin
+        homepage_uri = URI.parse(homepage)
+        unless [URI::HTTP, URI::HTTPS].member? homepage_uri.class
+          error "\"#{homepage}\" is not a valid HTTP URI"
+        end
+      rescue URI::InvalidURIError
+        error "\"#{homepage}\" is not a valid HTTP URI"
+      end
+    end
+  end
+
+  def validate_values
+    %w[author homepage summary files].each do |attribute|
+      validate_attribute_present(attribute)
+    end
+
+    if description == summary
+      warning "description and summary are identical"
+    end
+
+    # TODO: raise at some given date
+    warning "deprecated autorequire specified" if autorequire
+
+    executables.each do |executable|
+      validate_shebang_line_in(executable)
+    end
+
+    files.select { |f| File.symlink?(f) }.each do |file|
+      warning "#{file} is a symlink, which is not supported on all platforms"
+    end
+  end
+
+  def validate_attribute_present(attribute)
+    value = self.send attribute
+    warning("no #{attribute} specified") if value.nil? || value.empty?
+  end
+
+  def validate_shebang_line_in(executable)
+    executable_path = File.join(bindir, executable)
+    return if File.read(executable_path, 2) == '#!'
+
+    warning "#{executable_path} is missing #! line"
+  end
+
+  def warning(statement) # :nodoc:
+    @warnings += 1
+
+    alert_warning statement
+  end
+
+  def error(statement) # :nodoc:
+    raise Gem::InvalidSpecificationException, statement
+  ensure
+    alert_warning help_text
+  end
+
+  def help_text # :nodoc:
+    "See http://guides.rubygems.org/specification-reference/ for help"
+  end
+end
diff --git a/lib/ruby/stdlib/rubygems/stub_specification.rb b/lib/ruby/stdlib/rubygems/stub_specification.rb
index ae2effbc846..022da9185d9 100644
--- a/lib/ruby/stdlib/rubygems/stub_specification.rb
+++ b/lib/ruby/stdlib/rubygems/stub_specification.rb
@@ -6,14 +6,10 @@
 
 class Gem::StubSpecification < Gem::BasicSpecification
   # :nodoc:
-  PREFIX = "# stub: "
+  PREFIX = "# stub: ".freeze
 
-  OPEN_MODE = # :nodoc:
-    if Object.const_defined? :Encoding then
-      'r:UTF-8:-'
-    else
-      'r'
-    end
+  # :nodoc:
+  OPEN_MODE = 'r:UTF-8:-'.freeze
 
   class StubLine # :nodoc: all
     attr_reader :name, :version, :platform, :require_paths, :extensions,
@@ -26,7 +22,7 @@ class StubLine # :nodoc: all
       'lib'  => 'lib'.freeze,
       'test' => 'test'.freeze,
       'ext'  => 'ext'.freeze,
-    }
+    }.freeze
 
     # These are common require path lists.  This hash is used to optimize
     # and consolidate require_path objects.  Most specs just specify "lib"
@@ -34,9 +30,9 @@ class StubLine # :nodoc: all
     # a require path list for that case.
     REQUIRE_PATH_LIST = { # :nodoc:
       'lib' => ['lib'].freeze
-    }
+    }.freeze
 
-    def initialize data, extensions
+    def initialize(data, extensions)
       parts          = data[PREFIX.length..-1].split(" ".freeze, 4)
       @name          = parts[0].freeze
       @version       = if Gem::Version.correct?(parts[1])
@@ -60,17 +56,17 @@ def initialize data, extensions
     end
   end
 
-  def self.default_gemspec_stub filename, base_dir, gems_dir
+  def self.default_gemspec_stub(filename, base_dir, gems_dir)
     new filename, base_dir, gems_dir, true
   end
 
-  def self.gemspec_stub filename, base_dir, gems_dir
+  def self.gemspec_stub(filename, base_dir, gems_dir)
     new filename, base_dir, gems_dir, false
   end
 
   attr_reader :base_dir, :gems_dir
 
-  def initialize filename, base_dir, gems_dir, default_gem
+  def initialize(filename, base_dir, gems_dir, default_gem)
     super()
     filename.untaint
 
@@ -119,7 +115,7 @@ def data
           begin
             file.readline # discard encoding line
             stubline = file.readline.chomp
-            if stubline.start_with?(PREFIX) then
+            if stubline.start_with?(PREFIX)
               extensions = if /\A#{PREFIX}/ =~ file.readline.chomp
                              $'.split "\0"
                            else
@@ -189,7 +185,7 @@ def full_name
   # The full Gem::Specification for this gem, loaded from evalling its gemspec
 
   def to_spec
-    @spec ||= if @data then
+    @spec ||= if @data
                 loaded = Gem.loaded_specs[name]
                 loaded if loaded && loaded.version == version
               end
diff --git a/lib/ruby/stdlib/rubygems/test_case.rb b/lib/ruby/stdlib/rubygems/test_case.rb
index 3fabe96b22f..7648ffdc847 100644
--- a/lib/ruby/stdlib/rubygems/test_case.rb
+++ b/lib/ruby/stdlib/rubygems/test_case.rb
@@ -2,7 +2,7 @@
 # TODO: $SAFE = 1
 
 begin
-  gem 'minitest', '~> 4.0'
+  gem 'minitest', '~> 5.0'
 rescue NoMethodError, Gem::LoadError
   # for ruby tests
 end
@@ -13,11 +13,30 @@
   require 'rubygems'
 end
 
+# If bundler gemspec exists, add to stubs
+bundler_gemspec = File.expand_path("../../../bundler/bundler.gemspec", __FILE__)
+if File.exist?(bundler_gemspec)
+  Gem::Specification.dirs.unshift File.dirname(bundler_gemspec)
+  Gem::Specification.class_variable_set :@@stubs, nil
+  Gem::Specification.stubs
+  Gem::Specification.dirs.shift
+end
+
 begin
   gem 'minitest'
 rescue Gem::LoadError
 end
 
+begin
+  require 'simplecov'
+  SimpleCov.start do
+    add_filter "/test/"
+    add_filter "/bundler/"
+    add_filter "/lib/rubygems/resolver/molinillo"
+  end
+rescue LoadError
+end
+
 # We have to load these up front because otherwise we'll try to load
 # them while we're testing rubygems, and thus we can't actually load them.
 unless Gem::Dependency.new('rdoc', '>= 3.10').matching_specs.empty?
@@ -65,7 +84,7 @@ def self.win_platform=(val)
   # Allows setting path to Ruby.  This method is available when requiring
   # 'rubygems/test_case'
 
-  def self.ruby= ruby
+  def self.ruby=(ruby)
     @ruby = ruby
   end
 
@@ -96,7 +115,7 @@ class Gem::TestCase < (defined?(Minitest::Test) ? Minitest::Test : MiniTest::Uni
 
   attr_accessor :uri # :nodoc:
 
-  def assert_activate expected, *specs
+  def assert_activate(expected, *specs)
     specs.each do |spec|
       case spec
       when String then
@@ -114,7 +133,7 @@ def assert_activate expected, *specs
   end
 
   # TODO: move to minitest
-  def assert_path_exists path, msg = nil
+  def assert_path_exists(path, msg = nil)
     msg = message(msg) { "Expected path '#{path}' to exist" }
     assert File.exist?(path), msg
   end
@@ -123,13 +142,13 @@ def assert_path_exists path, msg = nil
   # Sets the ENABLE_SHARED entry in RbConfig::CONFIG to +value+ and restores
   # the original value when the block ends
 
-  def enable_shared value
+  def enable_shared(value)
     enable_shared = RbConfig::CONFIG['ENABLE_SHARED']
     RbConfig::CONFIG['ENABLE_SHARED'] = value
 
     yield
   ensure
-    if enable_shared then
+    if enable_shared
       RbConfig::CONFIG['enable_shared'] = enable_shared
     else
       RbConfig::CONFIG.delete 'enable_shared'
@@ -137,7 +156,7 @@ def enable_shared value
   end
 
   # TODO: move to minitest
-  def refute_path_exists path, msg = nil
+  def refute_path_exists(path, msg = nil)
     msg = message(msg) { "Expected path '#{path}' to not exist" }
     refute File.exist?(path), msg
   end
@@ -251,7 +270,7 @@ def setup
     tmpdir = File.expand_path Dir.tmpdir
     tmpdir.untaint
 
-    if ENV['KEEP_FILES'] then
+    if ENV['KEEP_FILES']
       @tempdir = File.join(tmpdir, "test_rubygems_#{$$}.#{Time.now.to_i}")
     else
       @tempdir = File.join(tmpdir, "test_rubygems_#{$$}")
@@ -285,7 +304,7 @@ def setup
     @userhome = File.join @tempdir, 'userhome'
     ENV["GEM_SPEC_CACHE"] = File.join @tempdir, 'spec_cache'
 
-    @orig_ruby = if ENV['RUBY'] then
+    @orig_ruby = if ENV['RUBY']
                    ruby = Gem.ruby
                    Gem.ruby = ENV['RUBY']
                    ruby
@@ -372,6 +391,11 @@ def setup
       util_set_arch 'i686-darwin8.10.1'
     end
 
+    @orig_hooks = {}
+    %w[post_install_hooks done_installing_hooks post_uninstall_hooks pre_uninstall_hooks pre_install_hooks pre_reset_hooks post_reset_hooks post_build_hooks].each do |name|
+      @orig_hooks[name] = Gem.send(name).dup
+    end
+
     @marshal_version = "#{Marshal::MAJOR_VERSION}.#{Marshal::MINOR_VERSION}"
     @orig_LOADED_FEATURES = $LOADED_FEATURES.dup
   end
@@ -402,7 +426,7 @@ def teardown
     end
     RbConfig::CONFIG['arch'] = @orig_arch
 
-    if defined? Gem::RemoteFetcher then
+    if defined? Gem::RemoteFetcher
       Gem::RemoteFetcher.fetcher = nil
     end
 
@@ -425,7 +449,7 @@ def teardown
 
     Gem.ruby = @orig_ruby if @orig_ruby
 
-    if @orig_ENV_HOME then
+    if @orig_ENV_HOME
       ENV['HOME'] = @orig_ENV_HOME
     else
       ENV.delete 'HOME'
@@ -439,6 +463,10 @@ def teardown
     Gem::Specification.unresolved_deps.clear
     Gem::refresh
 
+    @orig_hooks.each do |name, hooks|
+      Gem.send(name).replace hooks
+    end
+
     @back_ui.close
   end
 
@@ -485,7 +513,7 @@ def common_installer_teardown
   #
   # Yields the +specification+ to the block, if given
 
-  def git_gem name = 'a', version = 1
+  def git_gem(name = 'a', version = 1)
     have_git?
 
     directory = File.join 'git', name
@@ -506,7 +534,7 @@ def git_gem name = 'a', version = 1
     head = nil
 
     Dir.chdir directory do
-      unless File.exist? '.git' then
+      unless File.exist? '.git'
         system @git, 'init', '--quiet'
         system @git, 'config', 'user.name',  'RubyGems Tests'
         system @git, 'config', 'user.email', 'rubygems@example'
@@ -529,7 +557,7 @@ def have_git?
     skip 'cannot find git executable, use GIT environment variable to set'
   end
 
-  def in_path? executable # :nodoc:
+  def in_path?(executable) # :nodoc:
     return true if %r%\A([A-Z]:|/)% =~ executable and File.exist? executable
 
     ENV['PATH'].split(File::PATH_SEPARATOR).any? do |directory|
@@ -540,12 +568,12 @@ def in_path? executable # :nodoc:
   ##
   # Builds and installs the Gem::Specification +spec+
 
-  def install_gem spec, options = {}
+  def install_gem(spec, options = {})
     require 'rubygems/installer'
 
     gem = File.join @tempdir, "gems", "#{spec.full_name}.gem"
 
-    unless File.exist? gem then
+    unless File.exist? gem
       use_ui Gem::MockGemUi.new do
         Dir.chdir @tempdir do
           Gem::Package.build spec
@@ -561,17 +589,17 @@ def install_gem spec, options = {}
   ##
   # Builds and installs the Gem::Specification +spec+ into the user dir
 
-  def install_gem_user spec
+  def install_gem_user(spec)
     install_gem spec, :user_install => true
   end
 
   ##
   # Uninstalls the Gem::Specification +spec+
-  def uninstall_gem spec
+  def uninstall_gem(spec)
     require 'rubygems/uninstaller'
 
     Class.new(Gem::Uninstaller) {
-      def ask_if_ok spec
+      def ask_if_ok(spec)
         true
       end
     }.new(spec.name, :executables => true, :user_install => true).uninstall
@@ -595,7 +623,7 @@ def create_tmpdir
   def mu_pp(obj)
     s = String.new
     s = PP.pp obj, s
-    s = s.force_encoding(Encoding.default_external) if defined? Encoding
+    s = s.force_encoding(Encoding.default_external)
     s.chomp
   end
 
@@ -676,7 +704,7 @@ def quick_gem(name, version='2')
   ##
   # TODO:  remove in RubyGems 4.0
 
-  def quick_spec name, version = '2' # :nodoc:
+  def quick_spec(name, version = '2') # :nodoc:
     util_spec name, version
   end
   deprecate :quick_spec, :util_spec, 2018, 12
@@ -780,7 +808,7 @@ def save_loaded_features
   #
   # TODO:  remove in RubyGems 4.0
 
-  def new_spec name, version, deps = nil, *files # :nodoc:
+  def new_spec(name, version, deps = nil, *files) # :nodoc:
     require 'rubygems/specification'
 
     spec = Gem::Specification.new do |s|
@@ -804,7 +832,7 @@ def new_spec name, version, deps = nil, *files # :nodoc:
 
     spec.loaded_from = spec.spec_file
 
-    unless files.empty? then
+    unless files.empty?
       write_file spec.spec_file do |io|
         io.write spec.to_ruby_for_cache
       end
@@ -819,8 +847,7 @@ def new_spec name, version, deps = nil, *files # :nodoc:
 
     spec
   end
-  # TODO: mark deprecate after replacing util_spec from new_spec
-  # deprecate :new_spec, :none, 2018, 12
+  deprecate :new_spec, :none, 2018, 12
 
   def new_default_spec(name, version, deps = nil, *files)
     spec = util_spec name, version, deps
@@ -845,7 +872,7 @@ def new_default_spec(name, version, deps = nil, *files)
   # Creates a spec with +name+, +version+.  +deps+ can specify the dependency
   # or a +block+ can be given for full customization of the specification.
 
-  def util_spec name, version = 2, deps = nil # :yields: specification
+  def util_spec(name, version = 2, deps = nil, *files) # :yields: specification
     raise "deps or block, not both" if deps and block_given?
 
     spec = Gem::Specification.new do |s|
@@ -858,10 +885,12 @@ def util_spec name, version = 2, deps = nil # :yields: specification
       s.summary     = "this is a summary"
       s.description = "This is a test description"
 
+      s.files.push(*files) unless files.empty?
+
       yield s if block_given?
     end
 
-    if deps then
+    if deps
       # Since Hash#each is unordered in 1.8, sort the keys and iterate that
       # way so the tests are deterministic on all implementations.
       deps.keys.sort.each do |n|
@@ -869,6 +898,19 @@ def util_spec name, version = 2, deps = nil # :yields: specification
       end
     end
 
+    unless files.empty?
+      write_file spec.spec_file do |io|
+        io.write spec.to_ruby_for_cache
+      end
+
+      util_build_gem spec
+
+      cache_file = File.join @tempdir, 'gems', "#{spec.full_name}.gem"
+      FileUtils.mkdir_p File.dirname cache_file
+      FileUtils.mv spec.cache_file, cache_file
+      FileUtils.rm spec.spec_file
+    end
+
     Gem::Specification.reset
 
     return spec
@@ -884,7 +926,7 @@ def util_gem(name, version, deps = nil, &block)
     # TODO: deprecate
     raise "deps or block, not both" if deps and block
 
-    if deps then
+    if deps
       block = proc do |s|
         # Since Hash#each is unordered in 1.8, sort
         # the keys and iterate that way so the tests are
@@ -1080,7 +1122,7 @@ def util_setup_spec_fetcher(*specs)
     end
 
     # HACK for test_download_to_cache
-    unless Gem::RemoteFetcher === @fetcher then
+    unless Gem::RemoteFetcher === @fetcher
       v = Gem.marshal_version
 
       specs = all.map { |spec| spec.name_tuple }
@@ -1119,35 +1161,51 @@ def util_zip(data)
     Zlib::Deflate.deflate data
   end
 
-  def util_set_RUBY_VERSION(version, patchlevel = nil, revision = nil)
+  def util_set_RUBY_VERSION(version, patchlevel = nil, revision = nil, description = nil, engine = "ruby", engine_version = nil)
     if Gem.instance_variables.include? :@ruby_version or
-       Gem.instance_variables.include? '@ruby_version' then
+       Gem.instance_variables.include? '@ruby_version'
       Gem.send :remove_instance_variable, :@ruby_version
     end
 
-    @RUBY_VERSION    = RUBY_VERSION
-    @RUBY_PATCHLEVEL = RUBY_PATCHLEVEL if defined?(RUBY_PATCHLEVEL)
-    @RUBY_REVISION   = RUBY_REVISION   if defined?(RUBY_REVISION)
+    @RUBY_VERSION        = RUBY_VERSION
+    @RUBY_PATCHLEVEL     = RUBY_PATCHLEVEL     if defined?(RUBY_PATCHLEVEL)
+    @RUBY_REVISION       = RUBY_REVISION       if defined?(RUBY_REVISION)
+    @RUBY_DESCRIPTION    = RUBY_DESCRIPTION    if defined?(RUBY_DESCRIPTION)
+    @RUBY_ENGINE         = RUBY_ENGINE
+    @RUBY_ENGINE_VERSION = RUBY_ENGINE_VERSION if defined?(RUBY_ENGINE_VERSION)
 
-    Object.send :remove_const, :RUBY_VERSION
-    Object.send :remove_const, :RUBY_PATCHLEVEL if defined?(RUBY_PATCHLEVEL)
-    Object.send :remove_const, :RUBY_REVISION   if defined?(RUBY_REVISION)
+    util_clear_RUBY_VERSION
 
-    Object.const_set :RUBY_VERSION,    version
-    Object.const_set :RUBY_PATCHLEVEL, patchlevel if patchlevel
-    Object.const_set :RUBY_REVISION,   revision   if revision
+    Object.const_set :RUBY_VERSION,        version
+    Object.const_set :RUBY_PATCHLEVEL,     patchlevel     if patchlevel
+    Object.const_set :RUBY_REVISION,       revision       if revision
+    Object.const_set :RUBY_DESCRIPTION,    description    if description
+    Object.const_set :RUBY_ENGINE,         engine
+    Object.const_set :RUBY_ENGINE_VERSION, engine_version if engine_version
   end
 
   def util_restore_RUBY_VERSION
-    Object.send :remove_const, :RUBY_VERSION
-    Object.send :remove_const, :RUBY_PATCHLEVEL if defined?(RUBY_PATCHLEVEL)
-    Object.send :remove_const, :RUBY_REVISION   if defined?(RUBY_REVISION)
+    util_clear_RUBY_VERSION
 
-    Object.const_set :RUBY_VERSION,    @RUBY_VERSION
-    Object.const_set :RUBY_PATCHLEVEL, @RUBY_PATCHLEVEL if
+    Object.const_set :RUBY_VERSION,        @RUBY_VERSION
+    Object.const_set :RUBY_PATCHLEVEL,     @RUBY_PATCHLEVEL  if
       defined?(@RUBY_PATCHLEVEL)
-    Object.const_set :RUBY_REVISION,   @RUBY_REVISION   if
+    Object.const_set :RUBY_REVISION,       @RUBY_REVISION    if
       defined?(@RUBY_REVISION)
+    Object.const_set :RUBY_DESCRIPTION,    @RUBY_DESCRIPTION if
+      defined?(@RUBY_DESCRIPTION)
+    Object.const_set :RUBY_ENGINE,         @RUBY_ENGINE
+    Object.const_set :RUBY_ENGINE_VERSION, @RUBY_ENGINE_VERSION if
+      defined?(@RUBY_ENGINE_VERSION)
+  end
+
+  def util_clear_RUBY_VERSION
+    Object.send :remove_const, :RUBY_VERSION
+    Object.send :remove_const, :RUBY_PATCHLEVEL     if defined?(RUBY_PATCHLEVEL)
+    Object.send :remove_const, :RUBY_REVISION       if defined?(RUBY_REVISION)
+    Object.send :remove_const, :RUBY_DESCRIPTION    if defined?(RUBY_DESCRIPTION)
+    Object.send :remove_const, :RUBY_ENGINE
+    Object.send :remove_const, :RUBY_ENGINE_VERSION if defined?(RUBY_ENGINE_VERSION)
   end
 
   ##
@@ -1277,14 +1335,31 @@ def self.rubybin
     end
   end
 
+  class << self
+    # :nodoc:
+    ##
+    # Return the join path, with escaping backticks, dollars, and
+    # double-quotes.  Unlike `shellescape`, equal-sign is not escaped.
+    private
+    def escape_path(*path)
+      path = File.join(*path)
+      if %r'\A[-+:/=@,.\w]+\z' =~ path
+        path
+      else
+        "\"#{path.gsub(/[`$"]/, '\\&')}\""
+      end
+    end
+  end
+
   @@ruby = rubybin
-  @@good_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/good_rake.rb', __FILE__)}\""
-  @@bad_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/bad_rake.rb', __FILE__)}\""
+  gempath = File.expand_path('../../../test/rubygems', __FILE__)
+  @@good_rake = "#{rubybin} #{escape_path(gempath, 'good_rake.rb')}"
+  @@bad_rake = "#{rubybin} #{escape_path(gempath, 'bad_rake.rb')}"
 
   ##
   # Construct a new Gem::Dependency.
 
-  def dep name, *requirements
+  def dep(name, *requirements)
     Gem::Dependency.new name, *requirements
   end
 
@@ -1293,10 +1368,10 @@ def dep name, *requirements
   # Gem::Dependency +dep+, a +from_name+ and +from_version+ requesting the
   # dependency and a +parent+ DependencyRequest
 
-  def dependency_request dep, from_name, from_version, parent = nil
+  def dependency_request(dep, from_name, from_version, parent = nil)
     remote = Gem::Source.new @uri
 
-    unless parent then
+    unless parent
       parent_dep = dep from_name, from_version
       parent = Gem::Resolver::DependencyRequest.new parent_dep, nil
     end
@@ -1311,7 +1386,7 @@ def dependency_request dep, from_name, from_version, parent = nil
   ##
   # Constructs a new Gem::Requirement.
 
-  def req *requirements
+  def req(*requirements)
     return requirements.first if Gem::Requirement === requirements.first
     Gem::Requirement.create requirements
   end
@@ -1319,7 +1394,7 @@ def req *requirements
   ##
   # Constructs a new Gem::Specification.
 
-  def spec name, version, &block
+  def spec(name, version, &block)
     Gem::Specification.new name, v(version), &block
   end
 
@@ -1343,7 +1418,7 @@ def spec name, version, &block
   #     end
   #   end
 
-  def spec_fetcher repository = @gem_repo
+  def spec_fetcher(repository = @gem_repo)
     Gem::TestCase::SpecFetcherSetup.declare self, repository do |spec_fetcher_setup|
       yield spec_fetcher_setup if block_given?
     end
@@ -1352,7 +1427,7 @@ def spec_fetcher repository = @gem_repo
   ##
   # Construct a new Gem::Version.
 
-  def v string
+  def v(string)
     Gem::Version.create string
   end
 
@@ -1362,7 +1437,7 @@ def v string
   #
   # Yields the +specification+ to the block, if given
 
-  def vendor_gem name = 'a', version = 1
+  def vendor_gem(name = 'a', version = 1)
     directory = File.join 'vendor', name
 
     FileUtils.mkdir_p directory
@@ -1376,7 +1451,7 @@ def vendor_gem name = 'a', version = 1
   #
   # Yields the +specification+ to the block, if given
 
-  def save_gemspec name = 'a', version = 1, directory = '.'
+  def save_gemspec(name = 'a', version = 1, directory = '.')
     vendor_spec = Gem::Specification.new name, version do |specification|
       yield specification if block_given?
     end
@@ -1413,7 +1488,7 @@ def initialize(specs)
     ##
     # Adds +spec+ to this set.
 
-    def add spec
+    def add(spec)
       @specs << spec
     end
 
@@ -1437,7 +1512,7 @@ def find_all(dep)
     # Loads a Gem::Specification from this set which has the given +name+,
     # version +ver+, +platform+.  The +source+ is ignored.
 
-    def load_spec name, ver, platform, source
+    def load_spec(name, ver, platform, source)
       dep = Gem::Dependency.new name, ver
       spec = find_spec dep
 
@@ -1446,14 +1521,14 @@ def load_spec name, ver, platform, source
       end
     end
 
-    def prefetch reqs # :nodoc:
+    def prefetch(reqs) # :nodoc:
     end
   end
 
   ##
   # Loads certificate named +cert_name+ from <tt>test/rubygems/</tt>.
 
-  def self.load_cert cert_name
+  def self.load_cert(cert_name)
     cert_file = cert_path cert_name
 
     cert = File.read cert_file
@@ -1465,8 +1540,8 @@ def self.load_cert cert_name
   # Returns the path to the certificate named +cert_name+ from
   # <tt>test/rubygems/</tt>.
 
-  def self.cert_path cert_name
-    if 32 == (Time.at(2**32) rescue 32) then
+  def self.cert_path(cert_name)
+    if 32 == (Time.at(2**32) rescue 32)
       cert_file =
         File.expand_path "../../../test/rubygems/#{cert_name}_cert_32.pem",
                          __FILE__
@@ -1480,7 +1555,7 @@ def self.cert_path cert_name
   ##
   # Loads an RSA private key named +key_name+ with +passphrase+ in <tt>test/rubygems/</tt>
 
-  def self.load_key key_name, passphrase = nil
+  def self.load_key(key_name, passphrase = nil)
     key_file = key_path key_name
 
     key = File.read key_file
@@ -1491,14 +1566,14 @@ def self.load_key key_name, passphrase = nil
   ##
   # Returns the path to the key named +key_name+ from <tt>test/rubygems</tt>
 
-  def self.key_path key_name
+  def self.key_path(key_name)
     File.expand_path "../../../test/rubygems/#{key_name}_key.pem", __FILE__
   end
 
   # :stopdoc:
   # only available in RubyGems tests
 
-  PRIVATE_KEY_PASSPHRASE      = 'Foo bar'
+  PRIVATE_KEY_PASSPHRASE      = 'Foo bar'.freeze
 
   begin
     PRIVATE_KEY                 = load_key 'private'
diff --git a/lib/ruby/stdlib/rubygems/test_utilities.rb b/lib/ruby/stdlib/rubygems/test_utilities.rb
index 3e17973dd4f..d5312398125 100644
--- a/lib/ruby/stdlib/rubygems/test_utilities.rb
+++ b/lib/ruby/stdlib/rubygems/test_utilities.rb
@@ -25,23 +25,17 @@ class Gem::FakeFetcher
 
   attr_reader :data
   attr_reader :last_request
-  attr_reader :api_endpoints
   attr_accessor :paths
 
   def initialize
     @data = {}
     @paths = []
-    @api_endpoints = {}
-  end
-
-  def api_endpoint(uri)
-    @api_endpoints[uri] || uri
   end
 
   def find_data(path)
     return File.read path.path if URI === path and 'file' == path.scheme
 
-    if URI === path and "URI::#{path.scheme.upcase}" != path.class.name then
+    if URI === path and "URI::#{path.scheme.upcase}" != path.class.name
       raise ArgumentError,
         "mismatch for scheme #{path.scheme} and class #{path.class}"
     end
@@ -50,20 +44,20 @@ def find_data(path)
     @paths << path
     raise ArgumentError, 'need full URI' unless path =~ %r'^https?://'
 
-    unless @data.key? path then
+    unless @data.key? path
       raise Gem::RemoteFetcher::FetchError.new("no data for #{path}", path)
     end
 
     @data[path]
   end
 
-  def fetch_path path, mtime = nil, head = false
+  def fetch_path(path, mtime = nil, head = false)
     data = find_data(path)
 
-    if data.respond_to?(:call) then
+    if data.respond_to?(:call)
       data.call
     else
-      if path.to_s =~ /gz$/ and not data.nil? and not data.empty? then
+      if path.to_s =~ /gz$/ and not data.nil? and not data.empty?
         data = Gem::Util.gunzip data
       end
 
@@ -71,7 +65,7 @@ def fetch_path path, mtime = nil, head = false
     end
   end
 
-  def cache_update_path uri, path = nil, update = true
+  def cache_update_path(uri, path = nil, update = true)
     if data = fetch_path(uri)
       open(path, 'wb') { |io| io.write data } if path and update
       data
@@ -93,7 +87,7 @@ def open_uri_or_path(path)
 
   def request(uri, request_class, last_modified = nil)
     data = find_data(uri)
-    body, code, msg = data
+    body, code, msg = (data.respond_to?(:call) ? data.call : data)
 
     @last_request = request_class.new uri.request_uri
     yield @last_request if block_given?
@@ -104,21 +98,13 @@ def request(uri, request_class, last_modified = nil)
     response
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.group 2, '[FakeFetcher', ']' do
       q.breakable
       q.text 'URIs:'
 
       q.breakable
       q.pp @data.keys
-
-      unless @api_endpoints.empty? then
-        q.breakable
-        q.text 'API endpoints:'
-
-        q.breakable
-        q.pp @api_endpoints.keys
-      end
     end
   end
 
@@ -128,7 +114,7 @@ def fetch_size(path)
 
     raise ArgumentError, 'need full URI' unless path =~ %r'^http://'
 
-    unless @data.key? path then
+    unless @data.key? path
       raise Gem::RemoteFetcher::FetchError.new("no data for #{path}", path)
     end
 
@@ -137,9 +123,9 @@ def fetch_size(path)
     data.respond_to?(:call) ? data.call : data.length
   end
 
-  def download spec, source_uri, install_dir = Gem.dir
+  def download(spec, source_uri, install_dir = Gem.dir)
     name = File.basename spec.cache_file
-    path = if Dir.pwd == install_dir then # see fetch_command
+    path = if Dir.pwd == install_dir  # see fetch_command
              install_dir
            else
              File.join install_dir, "cache"
@@ -147,7 +133,7 @@ def download spec, source_uri, install_dir = Gem.dir
 
     path = File.join path, name
 
-    if source_uri =~ /^http/ then
+    if source_uri =~ /^http/
       File.open(path, "wb") do |f|
         f.write fetch_path(File.join(source_uri, "gems", name))
       end
@@ -158,7 +144,7 @@ def download spec, source_uri, install_dir = Gem.dir
     path
   end
 
-  def download_to_cache dependency
+  def download_to_cache(dependency)
     found, _ = Gem::SpecFetcher.fetcher.spec_for_dependency dependency
 
     return if found.empty?
@@ -201,7 +187,7 @@ class Gem::TestCase::SpecFetcherSetup
   # Executes a SpecFetcher setup block.  Yields an instance then creates the
   # gems and specifications defined in the instance.
 
-  def self.declare test, repository
+  def self.declare(test, repository)
     setup = new test, repository
 
     yield setup
@@ -209,7 +195,7 @@ def self.declare test, repository
     setup.execute
   end
 
-  def initialize test, repository # :nodoc:
+  def initialize(test, repository) # :nodoc:
     @test       = test
     @repository = repository
 
@@ -277,7 +263,7 @@ def execute_operations # :nodoc:
   # The specification will be yielded before gem creation for customization,
   # but only the block or the dependencies may be set, not both.
 
-  def gem name, version, dependencies = nil, &block
+  def gem(name, version, dependencies = nil, &block)
     @operations << [:gem, name, version, dependencies, block]
   end
 
@@ -288,7 +274,7 @@ def gem name, version, dependencies = nil, &block
   # The specification will be yielded before gem creation for customization,
   # but only the block or the dependencies may be set, not both.
 
-  def download name, version, dependencies = nil, &block
+  def download(name, version, dependencies = nil, &block)
     @operations << [:download, name, version, dependencies, block]
   end
 
@@ -307,7 +293,7 @@ def setup_fetcher # :nodoc:
     require 'socket'
     require 'rubygems/remote_fetcher'
 
-    unless @test.fetcher then
+    unless @test.fetcher
       @test.fetcher = Gem::FakeFetcher.new
       Gem::RemoteFetcher.fetcher = @test.fetcher
     end
@@ -341,11 +327,11 @@ def setup_fetcher # :nodoc:
   # The specification will be yielded before creation for customization,
   # but only the block or the dependencies may be set, not both.
 
-  def spec name, version, dependencies = nil, &block
+  def spec(name, version, dependencies = nil, &block)
     @operations << [:spec, name, version, dependencies, block]
   end
 
-  def write_spec spec # :nodoc:
+  def write_spec(spec) # :nodoc:
     File.open spec.spec_file, 'w' do |io|
       io.write spec.to_ruby_for_cache
     end
@@ -381,4 +367,3 @@ def string
     Gem.read_binary path
   end
 end
-
diff --git a/lib/ruby/stdlib/rubygems/text.rb b/lib/ruby/stdlib/rubygems/text.rb
index b944b62c27c..5d346b496b9 100644
--- a/lib/ruby/stdlib/rubygems/text.rb
+++ b/lib/ruby/stdlib/rubygems/text.rb
@@ -28,7 +28,7 @@ def format_text(text, wrap, indent=0)
     work = clean_text(text)
 
     while work.length > wrap do
-      if work =~ /^(.{0,#{wrap}})[ \n]/ then
+      if work =~ /^(.{0,#{wrap}})[ \n]/
         result << $1.rstrip
         work.slice!(0, $&.length)
       else
@@ -40,10 +40,10 @@ def format_text(text, wrap, indent=0)
     result.join("\n").gsub(/^/, " " * indent)
   end
 
-  def min3 a, b, c # :nodoc:
-    if a < b && a < c then
+  def min3(a, b, c) # :nodoc:
+    if a < b && a < c
       a
-    elsif b < c then
+    elsif b < c
       b
     else
       c
@@ -52,7 +52,7 @@ def min3 a, b, c # :nodoc:
 
   # This code is based directly on the Text gem implementation
   # Returns a value representing the "cost" of transforming str1 into str2
-  def levenshtein_distance str1, str2
+  def levenshtein_distance(str1, str2)
     s = str1
     t = str2
     n = s.length
@@ -73,7 +73,7 @@ def levenshtein_distance str1, str2
              d[j+1] + 1, # insertion
              e + 1,      # deletion
              d[j] + cost # substitution
-            )
+           )
         d[j] = e
         e = x
       end
diff --git a/lib/ruby/stdlib/rubygems/uninstaller.rb b/lib/ruby/stdlib/rubygems/uninstaller.rb
index 89f47a45fe9..c213cf656e8 100644
--- a/lib/ruby/stdlib/rubygems/uninstaller.rb
+++ b/lib/ruby/stdlib/rubygems/uninstaller.rb
@@ -99,7 +99,7 @@ def uninstall
 
     list.sort!
 
-    if list.empty? then
+    if list.empty?
       if other_repo_specs.empty?
         if default_specs.empty?
           raise Gem::InstallError, "gem #{@gem.inspect} is not installed"
@@ -119,19 +119,19 @@ def uninstall
       }
 
       raise Gem::InstallError, message.join("\n")
-    elsif @force_all then
+    elsif @force_all
       remove_all list
 
-    elsif list.size > 1 then
+    elsif list.size > 1
       gem_names = list.map { |gem| gem.full_name }
       gem_names << "All versions"
 
       say
       _, index = choose_from_list "Select gem to uninstall:", gem_names
 
-      if index == list.size then
+      if index == list.size
         remove_all list
-      elsif index >= 0 && index < list.size then
+      elsif index >= 0 && index < list.size
         uninstall_gem list[index]
       else
         say "Error: must enter a number [1-#{list.size+1}]"
@@ -194,7 +194,7 @@ def remove_executables(spec)
 
     executables = executables.map { |exec| formatted_program_filename exec }
 
-    remove = if @force_executables.nil? then
+    remove = if @force_executables.nil?
                ask_yes_no("Remove executables:\n" +
                           "\t#{executables.join ', '}\n\n" +
                           "in addition to the gem?",
@@ -203,7 +203,7 @@ def remove_executables(spec)
                @force_executables
              end
 
-    if remove then
+    if remove
       bin_dir = @bin_dir || Gem.bindir(spec.base_dir)
 
       raise Gem::FilePermissionError, bin_dir unless File.writable? bin_dir
@@ -213,8 +213,8 @@ def remove_executables(spec)
 
         exe_file = File.join bin_dir, exe_name
 
-        FileUtils.rm_f exe_file
-        FileUtils.rm_f "#{exe_file}.bat"
+        safe_delete { FileUtils.rm exe_file }
+        safe_delete { FileUtils.rm "#{exe_file}.bat" }
       end
     else
       say "Executables and scripts will remain installed."
@@ -239,7 +239,7 @@ def remove_all(list)
 
   def remove(spec)
     unless path_ok?(@gem_home, spec) or
-           (@user_install and path_ok?(Gem.user_dir, spec)) then
+           (@user_install and path_ok?(Gem.user_dir, spec))
       e = Gem::GemNotInHomeException.new \
             "Gem '#{spec.full_name}' is not installed in directory #{@gem_home}"
       e.spec = spec
@@ -250,26 +250,26 @@ def remove(spec)
     raise Gem::FilePermissionError, spec.base_dir unless
       File.writable?(spec.base_dir)
 
-    FileUtils.rm_rf spec.full_gem_path
-    FileUtils.rm_rf spec.extension_dir
+    safe_delete { FileUtils.rm_r spec.full_gem_path }
+    safe_delete { FileUtils.rm_r spec.extension_dir }
 
     old_platform_name = spec.original_name
-    gemspec           = spec.spec_file
-
-    unless File.exist? gemspec then
-      gemspec = File.join(File.dirname(gemspec), "#{old_platform_name}.gemspec")
-    end
-
-    FileUtils.rm_rf gemspec
 
     gem = spec.cache_file
     gem = File.join(spec.cache_dir, "#{old_platform_name}.gem") unless
       File.exist? gem
 
-    FileUtils.rm_rf gem
+    safe_delete { FileUtils.rm_r gem }
 
     Gem::RDoc.new(spec).remove
 
+    gemspec = spec.spec_file
+
+    unless File.exist? gemspec
+      gemspec = File.join(File.dirname(gemspec), "#{old_platform_name}.gemspec")
+    end
+
+    safe_delete { FileUtils.rm_r gemspec }
     say "Successfully uninstalled #{spec.full_name}"
 
     Gem::Specification.reset
@@ -289,7 +289,7 @@ def path_ok?(gem_dir, spec)
   # Returns true if it is OK to remove +spec+ or this is a forced
   # uninstallation.
 
-  def dependencies_ok? spec # :nodoc:
+  def dependencies_ok?(spec) # :nodoc:
     return true if @force_ignore
 
     deplist = Gem::DependencyList.from_specs
@@ -308,15 +308,15 @@ def abort_on_dependent? # :nodoc:
   ##
   # Asks if it is OK to remove +spec+.  Returns true if it is OK.
 
-  def ask_if_ok spec # :nodoc:
+  def ask_if_ok(spec) # :nodoc:
     msg = ['']
     msg << 'You have requested to uninstall the gem:'
     msg << "\t#{spec.full_name}"
     msg << ''
 
     siblings = Gem::Specification.select do |s|
-                 s.name == spec.name && s.full_name != spec.full_name
-               end
+      s.name == spec.name && s.full_name != spec.full_name
+    end
 
     spec.dependent_gems.each do |dep_spec, dep, satlist|
       unless siblings.any? { |s| s.satisfies_requirement? dep }
@@ -332,15 +332,26 @@ def ask_if_ok spec # :nodoc:
   ##
   # Returns the formatted version of the executable +filename+
 
-  def formatted_program_filename filename # :nodoc:
+  def formatted_program_filename(filename) # :nodoc:
     # TODO perhaps the installer should leave a small manifest
     # of what it did for us to find rather than trying to recreate
     # it again.
-    if @format_executable then
+    if @format_executable
       require 'rubygems/installer'
       Gem::Installer.exec_format % File.basename(filename)
     else
       filename
     end
   end
+
+  def safe_delete(&block)
+    block.call
+  rescue Errno::ENOENT
+    nil
+  rescue Errno::EPERM
+    e = Gem::UninstallError.new
+    e.spec = @spec
+
+    raise e
+  end
 end
diff --git a/lib/ruby/stdlib/rubygems/uri_formatter.rb b/lib/ruby/stdlib/rubygems/uri_formatter.rb
index bb128e4ef95..0a24dde24d4 100644
--- a/lib/ruby/stdlib/rubygems/uri_formatter.rb
+++ b/lib/ruby/stdlib/rubygems/uri_formatter.rb
@@ -19,7 +19,7 @@ class Gem::UriFormatter
   ##
   # Creates a new URI formatter for +uri+.
 
-  def initialize uri
+  def initialize(uri)
     @uri = uri
   end
 
@@ -47,4 +47,3 @@ def unescape
   end
 
 end
-
diff --git a/lib/ruby/stdlib/rubygems/user_interaction.rb b/lib/ruby/stdlib/rubygems/user_interaction.rb
index 373e15f65ca..03eac76ea82 100644
--- a/lib/ruby/stdlib/rubygems/user_interaction.rb
+++ b/lib/ruby/stdlib/rubygems/user_interaction.rb
@@ -7,7 +7,6 @@
 
 require 'rubygems/util'
 require 'rubygems/deprecate'
-require 'rubygems/text'
 
 ##
 # Module that defines the default UserInteraction.  Any class including this
@@ -15,8 +14,6 @@
 
 module Gem::DefaultUserInteraction
 
-  include Gem::Text
-
   ##
   # The default UI is a class variable of the singleton class for this
   # module.
@@ -98,7 +95,7 @@ module Gem::UserInteraction
   ##
   # Displays an alert +statement+.  Asks a +question+ if given.
 
-  def alert statement, question = nil
+  def alert(statement, question = nil)
     ui.alert statement, question
   end
 
@@ -106,7 +103,7 @@ def alert statement, question = nil
   # Displays an error +statement+ to the error output location.  Asks a
   # +question+ if given.
 
-  def alert_error statement, question = nil
+  def alert_error(statement, question = nil)
     ui.alert_error statement, question
   end
 
@@ -114,49 +111,49 @@ def alert_error statement, question = nil
   # Displays a warning +statement+ to the warning output location.  Asks a
   # +question+ if given.
 
-  def alert_warning statement, question = nil
+  def alert_warning(statement, question = nil)
     ui.alert_warning statement, question
   end
 
   ##
   # Asks a +question+ and returns the answer.
 
-  def ask question
+  def ask(question)
     ui.ask question
   end
 
   ##
   # Asks for a password with a +prompt+
 
-  def ask_for_password prompt
+  def ask_for_password(prompt)
     ui.ask_for_password prompt
   end
 
   ##
   # Asks a yes or no +question+.  Returns true for yes, false for no.
 
-  def ask_yes_no question, default = nil
+  def ask_yes_no(question, default = nil)
     ui.ask_yes_no question, default
   end
 
   ##
   # Asks the user to answer +question+ with an answer from the given +list+.
 
-  def choose_from_list question, list
+  def choose_from_list(question, list)
     ui.choose_from_list question, list
   end
 
   ##
   # Displays the given +statement+ on the standard output (or equivalent).
 
-  def say statement = ''
+  def say(statement = '')
     ui.say statement
   end
 
   ##
   # Terminates the RubyGems process with the given +exit_code+
 
-  def terminate_interaction exit_code = 0
+  def terminate_interaction(exit_code = 0)
     ui.terminate_interaction exit_code
   end
 
@@ -165,7 +162,7 @@ def terminate_interaction exit_code = 0
   # is true.
 
   def verbose(msg = nil)
-    say(clean_text(msg || yield)) if Gem.configuration.really_verbose
+    say(msg || yield) if Gem.configuration.really_verbose
   end
 end
 
@@ -208,18 +205,14 @@ def initialize(in_stream, out_stream, err_stream=STDERR, usetty=true)
   # Returns true if TTY methods should be used on this StreamUI.
 
   def tty?
-    if RUBY_VERSION < '1.9.3' and RUBY_PLATFORM =~ /mingw|mswin/ then
-      @usetty
-    else
-      @usetty && @ins.tty?
-    end
+    @usetty && @ins.tty?
   end
 
   ##
   # Prints a formatted backtrace to the errors stream if backtraces are
   # enabled.
 
-  def backtrace exception
+  def backtrace(exception)
     return unless Gem.configuration.backtrace
 
     @errs.puts "\t#{exception.backtrace.join "\n\t"}"
@@ -254,8 +247,8 @@ def choose_from_list(question, list)
   # default.
 
   def ask_yes_no(question, default=nil)
-    unless tty? then
-      if default.nil? then
+    unless tty?
+      if default.nil?
         raise Gem::OperationNotSupportedError,
               "Not connected to a tty and no default specified"
       else
@@ -327,29 +320,7 @@ def require_io_console
 
   def _gets_noecho
     require_io_console
-    if IO.method_defined?(:noecho) then
-      @ins.noecho {@ins.gets}
-    elsif Gem.win_platform?
-      require "Win32API"
-      password = ''
-
-      while char = Win32API.new("crtdll", "_getch", [ ], "L").Call do
-        break if char == 10 || char == 13 # received carriage return or newline
-        if char == 127 || char == 8 # backspace and delete
-          password.slice!(-1, 1)
-        else
-          password << char.chr
-        end
-      end
-      password
-    else
-      system "stty -echo"
-      begin
-        @ins.gets
-      ensure
-        system "stty echo"
-      end
-    end
+    @ins.noecho {@ins.gets}
   end
 
   ##
@@ -541,11 +512,10 @@ def done
   # Return a download reporter object chosen from the current verbosity
 
   def download_reporter(*args)
-    case Gem.configuration.verbose
-    when nil, false
+    if [nil, false].include?(Gem.configuration.verbose) || !@outs.tty?
       SilentDownloadReporter.new(@outs, *args)
     else
-      VerboseDownloadReporter.new(@outs, *args)
+      ThreadedDownloadReporter.new(@outs, *args)
     end
   end
 
@@ -582,9 +552,11 @@ def done
   end
 
   ##
-  # A progress reporter that prints out messages about the current progress.
+  # A progress reporter that behaves nicely with threaded downloading.
+
+  class ThreadedDownloadReporter
 
-  class VerboseDownloadReporter
+    MUTEX = Mutex.new
 
     ##
     # The current file name being displayed
@@ -592,71 +564,44 @@ class VerboseDownloadReporter
     attr_reader :file_name
 
     ##
-    # The total bytes in the file
-
-    attr_reader :total_bytes
-
-    ##
-    # The current progress (0 to 100)
-
-    attr_reader :progress
-
-    ##
-    # Creates a new verbose download reporter that will display on
+    # Creates a new threaded download reporter that will display on
     # +out_stream+.  The other arguments are ignored.
 
     def initialize(out_stream, *args)
+      @file_name = nil
       @out = out_stream
-      @progress = 0
     end
 
     ##
-    # Tells the download reporter that the +file_name+ is being fetched and
-    # contains +total_bytes+.
-
-    def fetch(file_name, total_bytes)
-      @file_name = file_name
-      @total_bytes = total_bytes.to_i
-      @units = @total_bytes.zero? ? 'B' : '%'
+    # Tells the download reporter that the +file_name+ is being fetched.
+    # The other arguments are ignored.
 
-      update_display(false)
+    def fetch(file_name, *args)
+      if @file_name.nil?
+        @file_name = file_name
+        locked_puts "Fetching #{@file_name}"
+      end
     end
 
     ##
-    # Updates the verbose download reporter for the given number of +bytes+.
+    # Updates the threaded download reporter for the given number of +bytes+.
 
     def update(bytes)
-      new_progress = if @units == 'B' then
-                       bytes
-                     else
-                       ((bytes.to_f * 100) / total_bytes.to_f).ceil
-                     end
-
-      return if new_progress == @progress
-
-      @progress = new_progress
-      update_display
+      # Do nothing.
     end
 
     ##
     # Indicates the download is complete.
 
     def done
-      @progress = 100 if @units == '%'
-      update_display(true, true)
+      # Do nothing.
     end
 
     private
-
-    def update_display(show_progress = true, new_line = false) # :nodoc:
-      return unless @out.tty?
-
-      if show_progress then
-        @out.print "\rFetching: %s (%3d%s)" % [@file_name, @progress, @units]
-      else
-        @out.print "Fetching: %s" % @file_name
+    def locked_puts(message)
+      MUTEX.synchronize do
+        @out.puts message
       end
-      @out.puts if new_line
     end
   end
 end
@@ -687,8 +632,8 @@ class Gem::SilentUI < Gem::StreamUI
   def initialize
     reader, writer = nil, nil
 
-    reader = File.open(Gem::Util::NULL_DEVICE, 'r')
-    writer = File.open(Gem::Util::NULL_DEVICE, 'w')
+    reader = File.open(IO::NULL, 'r')
+    writer = File.open(IO::NULL, 'w')
 
     super reader, writer, writer, false
   end
diff --git a/lib/ruby/stdlib/rubygems/util.rb b/lib/ruby/stdlib/rubygems/util.rb
index 6c759100040..b9e5dfc8c7c 100644
--- a/lib/ruby/stdlib/rubygems/util.rb
+++ b/lib/ruby/stdlib/rubygems/util.rb
@@ -15,7 +15,7 @@ def self.gunzip(data)
     data = StringIO.new(data, 'r')
 
     unzipped = Zlib::GzipReader.new(data).read
-    unzipped.force_encoding Encoding::BINARY if Object.const_defined? :Encoding
+    unzipped.force_encoding Encoding::BINARY
     unzipped
   end
 
@@ -26,7 +26,7 @@ def self.gzip(data)
     require 'zlib'
     require 'stringio'
     zipped = StringIO.new(String.new, 'w')
-    zipped.set_encoding Encoding::BINARY if Object.const_defined? :Encoding
+    zipped.set_encoding Encoding::BINARY
 
     Zlib::GzipWriter.wrap zipped do |io| io.write data end
 
@@ -46,7 +46,7 @@ def self.inflate(data)
   # and implements an IO.popen-like behavior where it does not accept an array
   # for a command.
 
-  def self.popen *command
+  def self.popen(*command)
     IO.popen command, &:read
   rescue TypeError # ruby 1.8 only supports string command
     r, w = IO.pipe
@@ -67,13 +67,11 @@ def self.popen *command
     end
   end
 
-  NULL_DEVICE = defined?(IO::NULL) ? IO::NULL : Gem.win_platform? ? 'NUL' : '/dev/null'
-
   ##
   # Invokes system, but silences all output.
 
-  def self.silent_system *command
-    opt = {:out => NULL_DEVICE, :err => [:child, :out]}
+  def self.silent_system(*command)
+    opt = {:out => IO::NULL, :err => [:child, :out]}
     if Hash === command.last
       opt.update(command.last)
       cmds = command[0...-1]
@@ -82,19 +80,15 @@ def self.silent_system *command
     end
     return system(*(cmds << opt))
   rescue TypeError
-    require 'thread'
-
     @silent_mutex ||= Mutex.new
 
-    null_device = NULL_DEVICE
-
     @silent_mutex.synchronize do
       begin
         stdout = STDOUT.dup
         stderr = STDERR.dup
 
-        STDOUT.reopen null_device, 'w'
-        STDERR.reopen null_device, 'w'
+        STDOUT.reopen IO::NULL, 'w'
+        STDERR.reopen IO::NULL, 'w'
 
         return system(*command)
       ensure
@@ -109,7 +103,7 @@ def self.silent_system *command
   ##
   # Enumerates the parents of +directory+.
 
-  def self.traverse_parents directory, &block
+  def self.traverse_parents(directory, &block)
     return enum_for __method__, directory unless block_given?
 
     here = File.expand_path directory
@@ -122,4 +116,16 @@ def self.traverse_parents directory, &block
     end
   end
 
+  ##
+  # Globs for files matching +pattern+ inside of +directory+,
+  # returning absolute paths to the matching files.
+
+  def self.glob_files_in_dir(glob, base_path)
+    if RUBY_VERSION >= "2.5"
+      Dir.glob(glob, base: base_path).map! {|f| File.expand_path(f, base_path) }
+    else
+      Dir.glob(File.expand_path(glob, base_path))
+    end
+  end
+
 end
diff --git a/lib/ruby/stdlib/rubygems/util/licenses.rb b/lib/ruby/stdlib/rubygems/util/licenses.rb
index 3ebdc994b7a..2a536575c06 100644
--- a/lib/ruby/stdlib/rubygems/util/licenses.rb
+++ b/lib/ruby/stdlib/rubygems/util/licenses.rb
@@ -19,6 +19,8 @@ class Gem::Licenses
       AFL-3.0
       AGPL-1.0
       AGPL-3.0
+      AGPL-3.0-only
+      AGPL-3.0-or-later
       AMDPLPA
       AML
       AMPAS
@@ -41,9 +43,11 @@ class Gem::Licenses
       Artistic-1.0-Perl
       Artistic-1.0-cl8
       Artistic-2.0
+      BSD-1-Clause
       BSD-2-Clause
       BSD-2-Clause-FreeBSD
       BSD-2-Clause-NetBSD
+      BSD-2-Clause-Patent
       BSD-3-Clause
       BSD-3-Clause-Attribution
       BSD-3-Clause-Clear
@@ -96,6 +100,8 @@ class Gem::Licenses
       CC0-1.0
       CDDL-1.0
       CDDL-1.1
+      CDLA-Permissive-1.0
+      CDLA-Sharing-1.0
       CECILL-1.0
       CECILL-1.1
       CECILL-2.0
@@ -124,9 +130,11 @@ class Gem::Licenses
       EFL-1.0
       EFL-2.0
       EPL-1.0
+      EPL-2.0
       EUDatagrid
       EUPL-1.0
       EUPL-1.1
+      EUPL-1.2
       Entessa
       ErlPL-1.1
       Eurosym
@@ -138,13 +146,23 @@ class Gem::Licenses
       Frameworx-1.0
       FreeImage
       GFDL-1.1
+      GFDL-1.1-only
+      GFDL-1.1-or-later
       GFDL-1.2
+      GFDL-1.2-only
+      GFDL-1.2-or-later
       GFDL-1.3
+      GFDL-1.3-only
+      GFDL-1.3-or-later
       GL2PS
       GPL-1.0
       GPL-1.0+
+      GPL-1.0-only
+      GPL-1.0-or-later
       GPL-2.0
       GPL-2.0+
+      GPL-2.0-only
+      GPL-2.0-or-later
       GPL-2.0-with-GCC-exception
       GPL-2.0-with-autoconf-exception
       GPL-2.0-with-bison-exception
@@ -152,6 +170,8 @@ class Gem::Licenses
       GPL-2.0-with-font-exception
       GPL-3.0
       GPL-3.0+
+      GPL-3.0-only
+      GPL-3.0-or-later
       GPL-3.0-with-GCC-exception
       GPL-3.0-with-autoconf-exception
       Giftware
@@ -177,10 +197,16 @@ class Gem::Licenses
       LAL-1.3
       LGPL-2.0
       LGPL-2.0+
+      LGPL-2.0-only
+      LGPL-2.0-or-later
       LGPL-2.1
       LGPL-2.1+
+      LGPL-2.1-only
+      LGPL-2.1-or-later
       LGPL-3.0
       LGPL-3.0+
+      LGPL-3.0-only
+      LGPL-3.0-or-later
       LGPLLR
       LPL-1.0
       LPL-1.02
@@ -317,7 +343,6 @@ class Gem::Licenses
       W3C-19980720
       W3C-20150513
       WTFPL
-      WXwindows
       Watcom-1.0
       Wsuipa
       X11
@@ -349,6 +374,7 @@ class Gem::Licenses
       mpich2
       psfrag
       psutils
+      wxWindows
       xinetd
       xpp
       zlib-acknowledgement
diff --git a/lib/ruby/stdlib/rubygems/util/list.rb b/lib/ruby/stdlib/rubygems/util/list.rb
index 9c25f6b6dcf..33c40af4bbf 100644
--- a/lib/ruby/stdlib/rubygems/util/list.rb
+++ b/lib/ruby/stdlib/rubygems/util/list.rb
@@ -25,7 +25,7 @@ def prepend(value)
       List.new value, self
     end
 
-    def pretty_print q # :nodoc:
+    def pretty_print(q) # :nodoc:
       q.pp to_a
     end
 
diff --git a/lib/ruby/stdlib/rubygems/validator.rb b/lib/ruby/stdlib/rubygems/validator.rb
index 6842e4fa9c8..828497f7002 100644
--- a/lib/ruby/stdlib/rubygems/validator.rb
+++ b/lib/ruby/stdlib/rubygems/validator.rb
@@ -62,7 +62,7 @@ def find_files_for_gem(gem_directory)
   # Describes a problem with a file in a gem.
 
   ErrorData = Struct.new :path, :problem do
-    def <=> other # :nodoc:
+    def <=>(other) # :nodoc:
       return nil unless self.class === other
 
       [path, problem] <=> [other.path, other.problem]
@@ -94,13 +94,13 @@ def alien(gems=[])
       spec_path     = spec.spec_file
       gem_directory = spec.full_gem_path
 
-      unless File.directory? gem_directory then
+      unless File.directory? gem_directory
         errors[gem_name][spec.full_name] =
           "Gem registered but doesn't exist at #{gem_directory}"
         next
       end
 
-      unless File.exist? spec_path then
+      unless File.exist? spec_path
         errors[gem_name][spec_path] = "Spec file missing for installed gem"
       end
 
@@ -135,7 +135,7 @@ def alien(gems=[])
               source = File.join gem_directory, entry['path']
 
               File.open source, Gem.binary_mode do |f|
-                unless f.read == data then
+                unless f.read == data
                   errors[gem_name][entry['path']] = "Modified from original"
                 end
               end
@@ -163,4 +163,3 @@ def alien(gems=[])
     errors
   end
 end
-
diff --git a/lib/ruby/stdlib/rubygems/version.rb b/lib/ruby/stdlib/rubygems/version.rb
index 08f0d1e7a5b..f2f10569e88 100644
--- a/lib/ruby/stdlib/rubygems/version.rb
+++ b/lib/ruby/stdlib/rubygems/version.rb
@@ -154,8 +154,8 @@ class Gem::Version
 
   include Comparable
 
-  VERSION_PATTERN = '[0-9]+(?>\.[0-9a-zA-Z]+)*(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?' # :nodoc:
-  ANCHORED_VERSION_PATTERN = /\A\s*(#{VERSION_PATTERN})?\s*\z/ # :nodoc:
+  VERSION_PATTERN = '[0-9]+(?>\.[0-9a-zA-Z]+)*(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?'.freeze # :nodoc:
+  ANCHORED_VERSION_PATTERN = /\A\s*(#{VERSION_PATTERN})?\s*\z/.freeze # :nodoc:
 
   ##
   # A string representation of this Version.
@@ -169,7 +169,7 @@ def version
   ##
   # True if the +version+ string matches RubyGems' requirements.
 
-  def self.correct? version
+  def self.correct?(version)
     unless Gem::Deprecate.skip
       warn "nil versions are discouraged and will be deprecated in Rubygems 4" if version.nil?
     end
@@ -185,10 +185,10 @@ def self.correct? version
   #   ver2 = Version.create(ver1)       # -> (ver1)
   #   ver3 = Version.create(nil)        # -> nil
 
-  def self.create input
-    if self === input then # check yourself before you wreck yourself
+  def self.create(input)
+    if self === input  # check yourself before you wreck yourself
       input
-    elsif input.nil? then
+    elsif input.nil?
       nil
     else
       new input
@@ -197,7 +197,7 @@ def self.create input
 
   @@all = {}
 
-  def self.new version # :nodoc:
+  def self.new(version) # :nodoc:
     return super unless Gem::Version == self
 
     @@all[version] ||= super
@@ -207,13 +207,13 @@ def self.new version # :nodoc:
   # Constructs a Version from the +version+ string.  A version string is a
   # series of digits or ASCII letters separated by dots.
 
-  def initialize version
+  def initialize(version)
     unless self.class.correct?(version)
       raise ArgumentError, "Malformed version number string #{version}"
     end
 
     # If version is an empty string convert it to 0
-    version = 0 if version =~ /\A\s*\Z/
+    version = 0 if version.is_a?(String) && version =~ /\A\s*\Z/
 
     @version = version.to_s.strip.gsub("-",".pre.")
     @segments = nil
@@ -240,7 +240,7 @@ def bump
   # A Version is only eql? to another version if it's specified to the
   # same precision. Version "1.0" is not the same as version "1".
 
-  def eql? other
+  def eql?(other)
     self.class === other and @version == other._version
   end
 
@@ -248,7 +248,7 @@ def hash # :nodoc:
     canonical_segments.hash
   end
 
-  def init_with coder # :nodoc:
+  def init_with(coder) # :nodoc:
     yaml_initialize coder.tag, coder.map
   end
 
@@ -268,7 +268,7 @@ def marshal_dump
   # Load custom marshal format. It's a string for backwards (RubyGems
   # 1.3.5 and earlier) compatibility.
 
-  def marshal_load array
+  def marshal_load(array)
     initialize array[0]
   end
 
@@ -282,7 +282,7 @@ def to_yaml_properties # :nodoc:
     ["@version"]
   end
 
-  def encode_with coder # :nodoc:
+  def encode_with(coder) # :nodoc:
     coder.add 'version', @version
   end
 
@@ -296,7 +296,7 @@ def prerelease?
     @prerelease
   end
 
-  def pretty_print q # :nodoc:
+  def pretty_print(q) # :nodoc:
     q.text "Gem::Version.new(#{version.inspect})"
   end
 
@@ -339,7 +339,7 @@ def approximate_recommendation
   # one. Attempts to compare to something that's not a
   # <tt>Gem::Version</tt> return +nil+.
 
-  def <=> other
+  def <=>(other)
     return unless Gem::Version === other
     return 0 if @version == other._version || canonical_segments == other.canonical_segments
 
diff --git a/lib/ruby/stdlib/rubygems/version_option.rb b/lib/ruby/stdlib/rubygems/version_option.rb
index c4d3306652f..458a7a66014 100644
--- a/lib/ruby/stdlib/rubygems/version_option.rb
+++ b/lib/ruby/stdlib/rubygems/version_option.rb
@@ -17,7 +17,7 @@ module Gem::VersionOption
 
   def add_platform_option(task = command, *wrap)
     OptionParser.accept Gem::Platform do |value|
-      if value == Gem::Platform::RUBY then
+      if value == Gem::Platform::RUBY
         value
       else
         Gem::Platform.new value
@@ -27,7 +27,7 @@ def add_platform_option(task = command, *wrap)
     add_option('--platform PLATFORM', Gem::Platform,
                "Specify the platform of gem to #{task}", *wrap) do
                  |value, options|
-      unless options[:added_platform] then
+      unless options[:added_platform]
         Gem.platforms = [Gem::Platform::RUBY]
         options[:added_platform] = true
       end
@@ -74,4 +74,3 @@ def add_version_option(task = command, *wrap)
   end
 
 end
-
diff --git a/lib/ruby/stdlib/shell.rb b/lib/ruby/stdlib/shell.rb
index fb63717391a..77b3b97ed37 100644
--- a/lib/ruby/stdlib/shell.rb
+++ b/lib/ruby/stdlib/shell.rb
@@ -17,6 +17,7 @@
 require "shell/error"
 require "shell/command-processor"
 require "shell/process-controller"
+require "shell/version"
 
 # Shell implements an idiomatic Ruby interface for common UNIX shell commands.
 #
diff --git a/lib/ruby/stdlib/shell/builtin-command.rb b/lib/ruby/stdlib/shell/builtin-command.rb
index e419a68c33c..a6a9d232ade 100644
--- a/lib/ruby/stdlib/shell/builtin-command.rb
+++ b/lib/ruby/stdlib/shell/builtin-command.rb
@@ -10,7 +10,7 @@
 #
 #
 
-require "shell/filter"
+require_relative "filter"
 
 class Shell
   class BuiltInCommand < Filter
diff --git a/lib/ruby/stdlib/shell/command-processor.rb b/lib/ruby/stdlib/shell/command-processor.rb
index 08ea5c874c1..82af76dd5ed 100644
--- a/lib/ruby/stdlib/shell/command-processor.rb
+++ b/lib/ruby/stdlib/shell/command-processor.rb
@@ -12,10 +12,10 @@
 
 require "e2mmap"
 
-require "shell/error"
-require "shell/filter"
-require "shell/system-command"
-require "shell/builtin-command"
+require_relative "error"
+require_relative "filter"
+require_relative "system-command"
+require_relative "builtin-command"
 
 class Shell
   # In order to execute a command on your OS, you need to define it as a
diff --git a/lib/ruby/stdlib/shell/shell.gemspec b/lib/ruby/stdlib/shell/shell.gemspec
new file mode 100644
index 00000000000..1c27670ca49
--- /dev/null
+++ b/lib/ruby/stdlib/shell/shell.gemspec
@@ -0,0 +1,26 @@
+begin
+  require_relative "lib/shell/version"
+rescue LoadError
+  # for Ruby core repository
+  require_relative "version"
+end
+
+Gem::Specification.new do |spec|
+  spec.name          = "shell"
+  spec.version       = Shell::VERSION
+  spec.authors       = ["Keiju ISHITSUKA"]
+  spec.email         = ["keiju@ruby-lang.org"]
+
+  spec.summary       = %q{An idiomatic Ruby interface for common UNIX shell commands.}
+  spec.description   = %q{An idiomatic Ruby interface for common UNIX shell commands.}
+  spec.homepage      = "https://github.com/ruby/shell"
+  spec.license       = "BSD-2-Clause"
+
+  spec.files         = [".gitignore", ".travis.yml", "Gemfile", "LICENSE.txt", "README.md", "Rakefile", "bin/console", "bin/setup", "lib/shell.rb", "lib/shell/builtin-command.rb", "lib/shell/command-processor.rb", "lib/shell/error.rb", "lib/shell/filter.rb", "lib/shell/process-controller.rb", "lib/shell/system-command.rb", "lib/shell/version.rb", "shell.gemspec"]
+  spec.bindir        = "exe"
+  spec.executables   = spec.files.grep(%r{^exe/}) { |f| File.basename(f) }
+  spec.require_paths = ["lib"]
+
+  spec.add_development_dependency "bundler"
+  spec.add_development_dependency "rake"
+end
diff --git a/lib/ruby/stdlib/shell/system-command.rb b/lib/ruby/stdlib/shell/system-command.rb
index af22ed90d75..767a9ee12cf 100644
--- a/lib/ruby/stdlib/shell/system-command.rb
+++ b/lib/ruby/stdlib/shell/system-command.rb
@@ -10,7 +10,7 @@
 #
 #
 
-require "shell/filter"
+require_relative "filter"
 
 class Shell
   class SystemCommand < Filter
diff --git a/lib/ruby/stdlib/shell/version.rb b/lib/ruby/stdlib/shell/version.rb
index bb4e7dfb8ed..f48f781b2c6 100644
--- a/lib/ruby/stdlib/shell/version.rb
+++ b/lib/ruby/stdlib/shell/version.rb
@@ -11,6 +11,7 @@
 #
 
 class Shell # :nodoc:
-  @RELEASE_VERSION = "0.7"
+  VERSION = "0.7"
+  @RELEASE_VERSION = VERSION
   @LAST_UPDATE_DATE = "07/03/20"
 end
diff --git a/lib/ruby/stdlib/socket.rb b/lib/ruby/stdlib/socket.rb
index c8754cef57a..08b0b3a5510 100644
--- a/lib/ruby/stdlib/socket.rb
+++ b/lib/ruby/stdlib/socket.rb
@@ -79,7 +79,7 @@ def connect_internal(local_addrinfo, timeout=nil) # :yields: socket
       sock
     end
   end
-  private :connect_internal
+  protected :connect_internal
 
   # :call-seq:
   #   addrinfo.connect_from([local_addr_args], [opts]) {|socket| ... }
@@ -160,7 +160,7 @@ def connect(timeout: nil, &block)
   #
   def connect_to(*args, timeout: nil, &block)
     remote_addrinfo = family_addrinfo(*args)
-    remote_addrinfo.send(:connect_internal, self, timeout, &block)
+    remote_addrinfo.connect_internal(self, timeout, &block)
   end
 
   # creates a socket bound to self.
diff --git a/lib/ruby/stdlib/sync.rb b/lib/ruby/stdlib/sync.rb
index 40a48ac985c..998e2b7b928 100644
--- a/lib/ruby/stdlib/sync.rb
+++ b/lib/ruby/stdlib/sync.rb
@@ -38,10 +38,6 @@
 #
 #
 
-unless defined? Thread
-  raise "Thread not available for this ruby interpreter"
-end
-
 ##
 # A module that provides a two-phase lock with a counter.
 
@@ -320,6 +316,9 @@ def sync_try_lock_sub(m)
 # details.
 
 class Sync
+
+  VERSION = "0.5.0"
+
   include Sync_m
 end
 
diff --git a/lib/ruby/stdlib/tempfile.rb b/lib/ruby/stdlib/tempfile.rb
index 6b1f4395749..3236a460449 100644
--- a/lib/ruby/stdlib/tempfile.rb
+++ b/lib/ruby/stdlib/tempfile.rb
@@ -1,20 +1,111 @@
-# JRuby 1.7.x and lower implements most of tempfile as a JRuby ext. This
-# file simple loads that ext and then adds the additional functions that
-# control how tempfile name is generated.
+# frozen_string_literal: true
+#
+# tempfile - manipulates temporary files
+#
+# $Id$
+#
 
-require 'delegate' # Unused; here for compatibility
+# require 'delegate' # JRuby: unused
 require 'tmpdir'
-require 'thread' # Unused; here for compatibility
 
-# Load built-in tempfile library
+# JRuby: load built-in tempfile library
 JRuby::Util.load_ext("org.jruby.ext.tempfile.TempfileLibrary")
 
+# A utility class for managing temporary files. When you create a Tempfile
+# object, it will create a temporary file with a unique filename. A Tempfile
+# objects behaves just like a File object, and you can perform all the usual
+# file operations on it: reading data, writing data, changing its permissions,
+# etc. So although this class does not explicitly document all instance methods
+# supported by File, you can in fact call any File instance method on a
+# Tempfile object.
+#
+# == Synopsis
+#
+#   require 'tempfile'
+#
+#   file = Tempfile.new('foo')
+#   file.path      # => A unique filename in the OS's temp directory,
+#                  #    e.g.: "/tmp/foo.24722.0"
+#                  #    This filename contains 'foo' in its basename.
+#   file.write("hello world")
+#   file.rewind
+#   file.read      # => "hello world"
+#   file.close
+#   file.unlink    # deletes the temp file
+#
+# == Good practices
+#
+# === Explicit close
+#
+# When a Tempfile object is garbage collected, or when the Ruby interpreter
+# exits, its associated temporary file is automatically deleted. This means
+# that's it's unnecessary to explicitly delete a Tempfile after use, though
+# it's good practice to do so: not explicitly deleting unused Tempfiles can
+# potentially leave behind large amounts of tempfiles on the filesystem
+# until they're garbage collected. The existence of these temp files can make
+# it harder to determine a new Tempfile filename.
+#
+# Therefore, one should always call #unlink or close in an ensure block, like
+# this:
+#
+#   file = Tempfile.new('foo')
+#   begin
+#      # ...do something with file...
+#   ensure
+#      file.close
+#      file.unlink   # deletes the temp file
+#   end
+#
+# === Unlink after creation
+#
+# On POSIX systems, it's possible to unlink a file right after creating it,
+# and before closing it. This removes the filesystem entry without closing
+# the file handle, so it ensures that only the processes that already had
+# the file handle open can access the file's contents. It's strongly
+# recommended that you do this if you do not want any other processes to
+# be able to read from or write to the Tempfile, and you do not need to
+# know the Tempfile's filename either.
+#
+# For example, a practical use case for unlink-after-creation would be this:
+# you need a large byte buffer that's too large to comfortably fit in RAM,
+# e.g. when you're writing a web server and you want to buffer the client's
+# file upload data.
+#
+# Please refer to #unlink for more information and a code example.
+#
+# == Minor notes
+#
+# Tempfile's filename picking method is both thread-safe and inter-process-safe:
+# it guarantees that no other threads or processes will pick the same filename.
+#
+# Tempfile itself however may not be entirely thread-safe. If you access the
+# same Tempfile object from multiple threads then you should protect it with a
+# mutex.
 class Tempfile
-  include Dir::Tmpname
+  # class Remover # :nodoc:
+  #   def initialize(tmpfile)
+  #     @pid = Process.pid
+  #     @tmpfile = tmpfile
+  #   end
+  #
+  #   def call(*args)
+  #     return if @pid != Process.pid
+  #
+  #     $stderr.puts "removing #{@tmpfile.path}..." if $DEBUG
+  #
+  #     @tmpfile.close
+  #     begin
+  #       File.unlink(@tmpfile.path)
+  #     rescue Errno::ENOENT
+  #     end
+  #
+  #     $stderr.puts "done" if $DEBUG
+  #   end
+  # end
 end
 
-# Creates a temporally file as usual File object (not Tempfile).
-# It don't use finalizer and delegation.
+# Creates a temporary file as usual File object (not Tempfile).
+# It doesn't use finalizer and delegation.
 #
 # If no block is given, this is similar to Tempfile.new except
 # creating File instead of Tempfile.
@@ -24,13 +115,14 @@ class Tempfile
 # If a block is given, then a File object will be constructed,
 # and the block is invoked with the object as the argument.
 # The File object will be automatically closed and
-# the temporally file is removed after the block terminates.
+# the temporary file is removed after the block terminates.
 # The call returns the value of the block.
 #
-# In any case, all arguments (+*args+) will be treated as Tempfile.new.
+# In any case, all arguments (+basename+, +tmpdir+, +mode+, and
+# <code>**options</code>) will be treated as Tempfile.new.
 #
 #   Tempfile.create('foo', '/home/temp') do |f|
-#      ... do something with f ...
+#      # ... do something with f ...
 #   end
 #
 def Tempfile.create(basename="", tmpdir=nil, mode: 0, **options)
diff --git a/lib/ruby/stdlib/thwait.rb b/lib/ruby/stdlib/thwait.rb
index 8f9e0c2a785..541fe1e3c3b 100644
--- a/lib/ruby/stdlib/thwait.rb
+++ b/lib/ruby/stdlib/thwait.rb
@@ -5,7 +5,7 @@
 #       $Revision: 1.3 $
 #       by Keiju ISHITSUKA(Nihon Rational Software Co.,Ltd.)
 
-require "e2mmap.rb"
+require "e2mmap"
 
 #
 # This class watches for termination of multiple threads.  Basic functionality
diff --git a/lib/ruby/stdlib/time.rb b/lib/ruby/stdlib/time.rb
index eb46a03ad38..81c0ebd7baf 100644
--- a/lib/ruby/stdlib/time.rb
+++ b/lib/ruby/stdlib/time.rb
@@ -2,6 +2,8 @@
 
 require 'date'
 
+# :stopdoc:
+
 # = time.rb
 #
 # When 'time' is required, Time is extended with additional methods for parsing
@@ -18,73 +20,8 @@
 #   8601}[http://www.iso.org/iso/date_and_time_format])
 # * various formats handled by Date._parse
 # * custom formats handled by Date._strptime
-#
-# == Examples
-#
-# All examples assume you have loaded Time with:
-#
-#   require 'time'
-#
-# All of these examples were done using the EST timezone which is GMT-5.
-#
-# === Converting to a String
-#
-#   t = Time.now
-#   t.iso8601  # => "2011-10-05T22:26:12-04:00"
-#   t.rfc2822  # => "Wed, 05 Oct 2011 22:26:12 -0400"
-#   t.httpdate # => "Thu, 06 Oct 2011 02:26:12 GMT"
-#
-# === Time.parse
-#
-# #parse takes a string representation of a Time and attempts to parse it
-# using a heuristic.
-#
-#   Time.parse("2010-10-31") #=> 2010-10-31 00:00:00 -0500
-#
-# Any missing pieces of the date are inferred based on the current date.
-#
-#   # assuming the current date is "2011-10-31"
-#   Time.parse("12:00") #=> 2011-10-31 12:00:00 -0500
-#
-# We can change the date used to infer our missing elements by passing a second
-# object that responds to #mon, #day and #year, such as Date, Time or DateTime.
-# We can also use our own object.
-#
-#   class MyDate
-#     attr_reader :mon, :day, :year
-#
-#     def initialize(mon, day, year)
-#       @mon, @day, @year = mon, day, year
-#     end
-#   end
-#
-#   d  = Date.parse("2010-10-28")
-#   t  = Time.parse("2010-10-29")
-#   dt = DateTime.parse("2010-10-30")
-#   md = MyDate.new(10,31,2010)
-#
-#   Time.parse("12:00", d)  #=> 2010-10-28 12:00:00 -0500
-#   Time.parse("12:00", t)  #=> 2010-10-29 12:00:00 -0500
-#   Time.parse("12:00", dt) #=> 2010-10-30 12:00:00 -0500
-#   Time.parse("12:00", md) #=> 2010-10-31 12:00:00 -0500
-#
-# #parse also accepts an optional block. You can use this block to specify how
-# to handle the year component of the date. This is specifically designed for
-# handling two digit years. For example, if you wanted to treat all two digit
-# years prior to 70 as the year 2000+ you could write this:
-#
-#   Time.parse("01-10-31") {|year| year + (year < 70 ? 2000 : 1900)}
-#   #=> 2001-10-31 00:00:00 -0500
-#   Time.parse("70-10-31") {|year| year + (year < 70 ? 2000 : 1900)}
-#   #=> 1970-10-31 00:00:00 -0500
-#
-# === Time.strptime
-#
-# #strptime works similar to +parse+ except that instead of using a heuristic
-# to detect the format of the input string, you provide a second argument that
-# describes the format of the string. For example:
-#
-#   Time.strptime("2000-10-31", "%Y-%m-%d") #=> 2000-10-31 00:00:00 -0500
+
+# :startdoc:
 
 class Time
   class << Time
@@ -131,12 +68,19 @@ class << Time
     #
     # If +zone_offset+ is unable to determine the offset, nil will be
     # returned.
+    #
+    #     require 'time'
+    #
+    #     Time.zone_offset("EST") #=> -18000
+    #
+    # You must require 'time' to use this method.
+    #
     def zone_offset(zone, year=self.now.year)
       off = nil
       zone = zone.upcase
       if /\A([+-])(\d\d)(:?)(\d\d)(?:\3(\d\d))?\z/ =~ zone
         off = ($1 == '-' ? -1 : 1) * (($2.to_i * 60 + $4.to_i) * 60 + $5.to_i)
-      elsif /\A[+-]\d\d\z/ =~ zone
+      elsif zone.match?(/\A[+-]\d\d\z/)
         off = zone.to_i * 3600
       elsif ZoneOffset.include?(zone)
         off = ZoneOffset[zone] * 3600
@@ -168,11 +112,7 @@ def zone_utc?(zone)
       #   They are not appropriate for specific time zone such as
       #   Europe/London because time zone neutral,
       #   So -00:00 and -0000 are treated as UTC.
-      if /\A(?:-00:00|-0000|-00|UTC|Z|UT)\z/i =~ zone
-        true
-      else
-        false
-      end
+      zone.match?(/\A(?:-00:00|-0000|-00|UTC|Z|UT)\z/i)
     end
     private :zone_utc?
 
@@ -249,8 +189,8 @@ def apply_offset(year, mon, day, hour, min, sec, off)
     end
     private :apply_offset
 
-    def make_time(date, year, mon, day, hour, min, sec, sec_fraction, zone, now)
-      if !year && !mon && !day && !hour && !min && !sec && !sec_fraction
+    def make_time(date, year, yday, mon, day, hour, min, sec, sec_fraction, zone, now)
+      if !year && !yday && !mon && !day && !hour && !min && !sec && !sec_fraction
         raise ArgumentError, "no time information in #{date.inspect}"
       end
 
@@ -260,7 +200,27 @@ def make_time(date, year, mon, day, hour, min, sec, sec_fraction, zone, now)
         off = zone_offset(zone, off_year) if zone
       end
 
-      if now
+      if yday
+        unless (1..366) === yday
+          raise ArgumentError, "yday #{yday} out of range"
+        end
+        mon, day = (yday-1).divmod(31)
+        mon += 1
+        day += 1
+        t = make_time(date, year, nil, mon, day, hour, min, sec, sec_fraction, zone, now)
+        diff = yday - t.yday
+        return t if diff.zero?
+        day += diff
+        if day > 28 and day > (mday = month_days(off_year, mon))
+          if (mon += 1) > 12
+            raise ArgumentError, "yday #{yday} out of range"
+          end
+          day -= mday
+        end
+        return make_time(date, year, nil, mon, day, hour, min, sec, sec_fraction, zone, now)
+      end
+
+      if now and now.respond_to?(:getlocal)
         if off
           now = now.getlocal(off) if now.utc_offset != off
         else
@@ -309,17 +269,62 @@ def make_time(date, year, mon, day, hour, min, sec, sec_fraction, zone, now)
     private :make_time
 
     #
-    # Parses +date+ using Date._parse and converts it to a Time object.
+    # Takes a string representation of a Time and attempts to parse it
+    # using a heuristic.
     #
-    # If a block is given, the year described in +date+ is converted by the
-    # block.  For example:
+    #     require 'time'
+    #
+    #     Time.parse("2010-10-31") #=> 2010-10-31 00:00:00 -0500
+    #
+    # Any missing pieces of the date are inferred based on the current date.
+    #
+    #     require 'time'
+    #
+    #     # assuming the current date is "2011-10-31"
+    #     Time.parse("12:00") #=> 2011-10-31 12:00:00 -0500
+    #
+    # We can change the date used to infer our missing elements by passing a second
+    # object that responds to #mon, #day and #year, such as Date, Time or DateTime.
+    # We can also use our own object.
+    #
+    #     require 'time'
+    #
+    #     class MyDate
+    #       attr_reader :mon, :day, :year
     #
-    #     Time.parse(...) {|y| 0 <= y && y < 100 ? (y >= 69 ? y + 1900 : y + 2000) : y}
+    #       def initialize(mon, day, year)
+    #         @mon, @day, @year = mon, day, year
+    #       end
+    #     end
+    #
+    #     d  = Date.parse("2010-10-28")
+    #     t  = Time.parse("2010-10-29")
+    #     dt = DateTime.parse("2010-10-30")
+    #     md = MyDate.new(10,31,2010)
+    #
+    #     Time.parse("12:00", d)  #=> 2010-10-28 12:00:00 -0500
+    #     Time.parse("12:00", t)  #=> 2010-10-29 12:00:00 -0500
+    #     Time.parse("12:00", dt) #=> 2010-10-30 12:00:00 -0500
+    #     Time.parse("12:00", md) #=> 2010-10-31 12:00:00 -0500
+    #
+    # If a block is given, the year described in +date+ is converted
+    # by the block.  This is specifically designed for handling two
+    # digit years. For example, if you wanted to treat all two digit
+    # years prior to 70 as the year 2000+ you could write this:
+    #
+    #     require 'time'
+    #
+    #     Time.parse("01-10-31") {|year| year + (year < 70 ? 2000 : 1900)}
+    #     #=> 2001-10-31 00:00:00 -0500
+    #     Time.parse("70-10-31") {|year| year + (year < 70 ? 2000 : 1900)}
+    #     #=> 1970-10-31 00:00:00 -0500
     #
     # If the upper components of the given time are broken or missing, they are
     # supplied with those of +now+.  For the lower components, the minimum
     # values (1 or 0) are assumed if broken or missing.  For example:
     #
+    #     require 'time'
+    #
     #     # Suppose it is "Thu Nov 29 14:33:20 2001" now and
     #     # your time zone is EST which is GMT-5.
     #     now = Time.parse("Thu Nov 29 14:33:20 2001")
@@ -367,11 +372,13 @@ def parse(date, now=self.now)
       d = Date._parse(date, comp)
       year = d[:year]
       year = yield(year) if year && !comp
-      make_time(date, year, d[:mon], d[:mday], d[:hour], d[:min], d[:sec], d[:sec_fraction], d[:zone], now)
+      make_time(date, year, d[:yday], d[:mon], d[:mday], d[:hour], d[:min], d[:sec], d[:sec_fraction], d[:zone], now)
     end
 
     #
-    # Parses +date+ using Date._strptime and converts it to a Time object.
+    # Works similar to +parse+ except that instead of using a
+    # heuristic to detect the format of the input string, you provide
+    # a second argument that describes the format of the string.
     #
     # If a block is given, the year described in +date+ is converted by the
     # block.  For example:
@@ -400,12 +407,10 @@ def parse(date, now=self.now)
     # %m :: Month of the year (01..12)
     # %M :: Minute of the hour (00..59)
     # %n :: Newline (\n)
-    # %N :: Fractional seconds digits, default is 9 digits (nanosecond)
-    #       %3N :: millisecond (3 digits)
-    #       %6N :: microsecond (6 digits)
-    #       %9N :: nanosecond (9 digits)
+    # %N :: Fractional seconds digits
     # %p :: Meridian indicator ("AM" or "PM")
     # %P :: Meridian indicator ("am" or "pm")
+    # %Q :: Number of milliseconds since 1970-01-01 00:00:00 UTC.
     # %r :: time, 12-hour (same as %I:%M:%S %p)
     # %R :: time, 24-hour (%H:%M)
     # %s :: Number of seconds since 1970-01-01 00:00:00 UTC.
@@ -427,10 +432,17 @@ def parse(date, now=self.now)
     # %z :: Time zone as  hour offset from UTC (e.g. +0900)
     # %Z :: Time zone name
     # %% :: Literal "%" character
-
+    # %+ :: date(1) (%a %b %e %H:%M:%S %Z %Y)
+    #
+    #     require 'time'
+    #
+    #     Time.strptime("2000-10-31", "%Y-%m-%d") #=> 2000-10-31 00:00:00 -0500
+    #
+    # You must require 'time' to use this method.
+    #
     def strptime(date, format, now=self.now)
       d = Date._strptime(date, format)
-      raise ArgumentError, "invalid strptime format - `#{format}'" unless d
+      raise ArgumentError, "invalid date or strptime format - `#{date}' `#{format}'" unless d
       if seconds = d[:seconds]
         if sec_fraction = d[:sec_fraction]
           usec = sec_fraction * 1000000
@@ -445,7 +457,7 @@ def strptime(date, format, now=self.now)
       else
         year = d[:year]
         year = yield(year) if year && block_given?
-        t = make_time(date, year, d[:mon], d[:mday], d[:hour], d[:min], d[:sec], d[:sec_fraction], d[:zone], now)
+        t = make_time(date, year, d[:yday], d[:mon], d[:mday], d[:hour], d[:min], d[:sec], d[:sec_fraction], d[:zone], now)
       end
       t
     end
@@ -465,6 +477,11 @@ def strptime(date, format, now=self.now)
     #
     # See #rfc2822 for more information on this format.
     #
+    #     require 'time'
+    #
+    #     Time.rfc2822("Wed, 05 Oct 2011 22:26:12 -0400")
+    #     #=> 2010-10-05 22:26:12 -0400
+    #
     # You must require 'time' to use this method.
     #
     def rfc2822(date)
@@ -518,17 +535,22 @@ def rfc2822(date)
     #
     # See #httpdate for more information on this format.
     #
+    #     require 'time'
+    #
+    #     Time.httpdate("Thu, 06 Oct 2011 02:26:12 GMT")
+    #     #=> 2011-10-06 02:26:12 UTC
+    #
     # You must require 'time' to use this method.
     #
     def httpdate(date)
-      if /\A\s*
+      if date.match?(/\A\s*
           (?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),\x20
           (\d{2})\x20
           (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\x20
           (\d{4})\x20
           (\d{2}):(\d{2}):(\d{2})\x20
           GMT
-          \s*\z/ix =~ date
+          \s*\z/ix)
         self.rfc2822(date).utc
       elsif /\A\s*
              (?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday),\x20
@@ -567,6 +589,11 @@ def httpdate(date)
     #
     # See #xmlschema for more information on this format.
     #
+    #     require 'time'
+    #
+    #     Time.xmlschema("2011-10-05T22:26:12-04:00")
+    #     #=> 2011-10-05 22:26:12-04:00
+    #
     # You must require 'time' to use this method.
     #
     def xmlschema(date)
@@ -614,6 +641,11 @@ def xmlschema(date)
   #
   # If +self+ is a UTC time, -0000 is used as zone.
   #
+  #     require 'time'
+  #
+  #     t = Time.now
+  #     t.rfc2822  # => "Wed, 05 Oct 2011 22:26:12 -0400"
+  #
   # You must require 'time' to use this method.
   #
   def rfc2822
@@ -649,6 +681,11 @@ def rfc2822
   #
   # Note that the result is always UTC (GMT).
   #
+  #     require 'time'
+  #
+  #     t = Time.now
+  #     t.httpdate # => "Thu, 06 Oct 2011 02:26:12 GMT"
+  #
   # You must require 'time' to use this method.
   #
   def httpdate
@@ -673,6 +710,11 @@ def httpdate
   # +fractional_digits+ specifies a number of digits to use for fractional
   # seconds.  Its default value is 0.
   #
+  #     require 'time'
+  #
+  #     t = Time.now
+  #     t.iso8601  # => "2011-10-05T22:26:12-04:00"
+  #
   # You must require 'time' to use this method.
   #
   def xmlschema(fraction_digits=0)
diff --git a/lib/ruby/stdlib/tracer.rb b/lib/ruby/stdlib/tracer.rb
index 45e227bb627..b44e0f7cb7f 100644
--- a/lib/ruby/stdlib/tracer.rb
+++ b/lib/ruby/stdlib/tracer.rb
@@ -60,6 +60,7 @@
 # by Keiju ISHITSUKA(keiju@ishitsuka.com)
 #
 class Tracer
+
   class << self
     # display additional debug information (defaults to false)
     attr_accessor :verbose
diff --git a/lib/ruby/stdlib/un.rb b/lib/ruby/stdlib/un.rb
index c445dba4ec5..14f5b10fecc 100644
--- a/lib/ruby/stdlib/un.rb
+++ b/lib/ruby/stdlib/un.rb
@@ -47,7 +47,7 @@ def setup(options = "", *long_options)
     end
     long_options.each do |s|
       opt_name, arg_name = s.split(/(?=[\s=])/, 2)
-      opt_name.sub!(/\A--/, '')
+      opt_name.delete_prefix!('--')
       s = "--#{opt_name.gsub(/([A-Z]+|[a-z])([A-Z])/, '\1-\2').downcase}#{arg_name}"
       puts "#{opt_name}=>#{s}" if $DEBUG
       opt_name = opt_name.intern
@@ -313,6 +313,8 @@ def mkmf
 #   --do-not-reverse-lookup     disable reverse lookup
 #   --request-timeout=SECOND    request timeout in seconds
 #   --http-version=VERSION      HTTP version
+#   --server-name=NAME          name of the server host
+#   --server-software=NAME      name and version of the server
 #   --ssl-certificate=CERT      The SSL certificate file for the server
 #   --ssl-private-key=KEY       The SSL private key file for the server certificate
 #   -v                          verbose
@@ -321,6 +323,7 @@ def mkmf
 def httpd
   setup("", "BindAddress=ADDR", "Port=PORT", "MaxClients=NUM", "TempDir=DIR",
         "DoNotReverseLookup", "RequestTimeout=SECOND", "HTTPVersion=VERSION",
+        "ServerName=NAME", "ServerSoftware=NAME",
         "SSLCertificate=CERT", "SSLPrivateKey=KEY") do
     |argv, options|
     require 'webrick'
diff --git a/lib/ruby/stdlib/unicode_normalize/normalize.rb b/lib/ruby/stdlib/unicode_normalize/normalize.rb
index a2f7a29c88e..b27cdadaaac 100644
--- a/lib/ruby/stdlib/unicode_normalize/normalize.rb
+++ b/lib/ruby/stdlib/unicode_normalize/normalize.rb
@@ -18,7 +18,7 @@
 # content are purely an implementation detail, and should not be exposed in
 # any test or spec or otherwise.
 
-require 'unicode_normalize/tables.rb'
+require_relative 'tables'
 
 
 module UnicodeNormalize  # :nodoc:
@@ -70,7 +70,7 @@ def self.hangul_comp_one(string)
     if length>1 and 0 <= (lead =string[0].ord-LBASE) and lead  < LCOUNT and
                     0 <= (vowel=string[1].ord-VBASE) and vowel < VCOUNT
       lead_vowel = SBASE + (lead * VCOUNT + vowel) * TCOUNT
-      if length>2 and 0 <= (trail=string[2].ord-TBASE) and trail < TCOUNT
+      if length>2 and 0 < (trail=string[2].ord-TBASE) and trail < TCOUNT
         (lead_vowel + trail).chr(Encoding::UTF_8) + string[3..-1]
       else
         lead_vowel.chr(Encoding::UTF_8) + string[2..-1]
diff --git a/lib/ruby/stdlib/unicode_normalize/tables.rb b/lib/ruby/stdlib/unicode_normalize/tables.rb
index 4984e3d3291..a36daa84e60 100644
--- a/lib/ruby/stdlib/unicode_normalize/tables.rb
+++ b/lib/ruby/stdlib/unicode_normalize/tables.rb
@@ -5,1166 +5,9035 @@
 
 module UnicodeNormalize  # :nodoc:
   accents = "" \
-    "[\u0300-\u034E\u0350-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7" \
-    "\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711" \
-    "\u0730-\u074A\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D4-\u08E1" \
-    "\u08E3-\u08FF\u093C\u094D\u0951-\u0954\u09BC\u09BE\u09CD\u09D7" \
-    "\u0A3C\u0A4D\u0ABC\u0ACD\u0B3C\u0B3E\u0B4D\u0B56\u0B57" \
-    "\u0BBE\u0BCD\u0BD7\u0C4D\u0C55\u0C56\u0CBC\u0CC2\u0CCD" \
-    "\u0CD5\u0CD6\u0D3B\u0D3C\u0D3E\u0D4D\u0D57\u0DCA\u0DCF\u0DDF" \
-    "\u0E38-\u0E3A\u0E48-\u0E4B\u0EB8\u0EB9\u0EC8-\u0ECB\u0F18\u0F19\u0F35\u0F37\u0F39" \
-    "\u0F71\u0F72\u0F74\u0F7A-\u0F7D\u0F80\u0F82-\u0F84\u0F86\u0F87\u0FC6\u102E" \
-    "\u1037\u1039\u103A\u108D\u135D-\u135F\u1714\u1734\u17D2\u17DD" \
-    "\u18A9\u1939-\u193B\u1A17\u1A18\u1A60\u1A75-\u1A7C\u1A7F\u1AB0-\u1ABD\u1B34\u1B35" \
-    "\u1B44\u1B6B-\u1B73\u1BAA\u1BAB\u1BE6\u1BF2\u1BF3\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0" \
-    "\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u20D0-\u20DC\u20E1" \
-    "\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F\uA674-\uA67D" \
-    "\uA69E\uA69F\uA6F0\uA6F1\uA806\uA8C4\uA8E0-\uA8F1\uA92B-\uA92D\uA953\uA9B3" \
-    "\uA9C0\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAF6\uABED" \
-    "\uFB1E\uFE20-\uFE2F\u{101FD}\u{102E0}\u{10376}-\u{1037A}\u{10A0D}\u{10A0F}\u{10A38}-\u{10A3A}" \
-    "\u{10A3F}\u{10AE5}\u{10AE6}\u{11046}\u{1107F}\u{110B9}\u{110BA}\u{11100}-\u{11102}\u{11127}\u{11133}\u{11134}" \
-    "\u{11173}\u{111C0}\u{111CA}\u{11235}\u{11236}\u{112E9}\u{112EA}\u{1133C}\u{1133E}\u{1134D}" \
-    "\u{11357}\u{11366}-\u{1136C}\u{11370}-\u{11374}\u{11442}\u{11446}\u{114B0}\u{114BA}\u{114BD}" \
-    "\u{114C2}\u{114C3}\u{115AF}\u{115BF}\u{115C0}\u{1163F}\u{116B6}\u{116B7}\u{1172B}\u{11A34}\u{11A47}" \
-    "\u{11A99}\u{11C3F}\u{11D42}\u{11D44}\u{11D45}\u{16AF0}-\u{16AF4}\u{16B30}-\u{16B36}\u{1BC9E}\u{1D165}-\u{1D169}" \
-    "\u{1D16D}-\u{1D172}\u{1D17B}-\u{1D182}\u{1D185}-\u{1D18B}\u{1D1AA}-\u{1D1AD}\u{1D242}-\u{1D244}\u{1E000}-\u{1E006}\u{1E008}-\u{1E018}\u{1E01B}-\u{1E021}" \
-    "\u{1E023}\u{1E024}\u{1E026}-\u{1E02A}\u{1E8D0}-\u{1E8D6}\u{1E944}-\u{1E94A}" \
+    "[\u0300-\u034E" \
+    "\u0350-\u036F" \
+    "\u0483-\u0487" \
+    "\u0591-\u05BD" \
+    "\u05BF" \
+    "\u05C1\u05C2" \
+    "\u05C4\u05C5" \
+    "\u05C7" \
+    "\u0610-\u061A" \
+    "\u064B-\u065F" \
+    "\u0670" \
+    "\u06D6-\u06DC" \
+    "\u06DF-\u06E4" \
+    "\u06E7\u06E8" \
+    "\u06EA-\u06ED" \
+    "\u0711" \
+    "\u0730-\u074A" \
+    "\u07EB-\u07F3" \
+    "\u07FD" \
+    "\u0816-\u0819" \
+    "\u081B-\u0823" \
+    "\u0825-\u0827" \
+    "\u0829-\u082D" \
+    "\u0859-\u085B" \
+    "\u08D3-\u08E1" \
+    "\u08E3-\u08FF" \
+    "\u093C" \
+    "\u094D" \
+    "\u0951-\u0954" \
+    "\u09BC" \
+    "\u09BE" \
+    "\u09CD" \
+    "\u09D7" \
+    "\u09FE" \
+    "\u0A3C" \
+    "\u0A4D" \
+    "\u0ABC" \
+    "\u0ACD" \
+    "\u0B3C" \
+    "\u0B3E" \
+    "\u0B4D" \
+    "\u0B56\u0B57" \
+    "\u0BBE" \
+    "\u0BCD" \
+    "\u0BD7" \
+    "\u0C4D" \
+    "\u0C55\u0C56" \
+    "\u0CBC" \
+    "\u0CC2" \
+    "\u0CCD" \
+    "\u0CD5\u0CD6" \
+    "\u0D3B\u0D3C" \
+    "\u0D3E" \
+    "\u0D4D" \
+    "\u0D57" \
+    "\u0DCA" \
+    "\u0DCF" \
+    "\u0DDF" \
+    "\u0E38-\u0E3A" \
+    "\u0E48-\u0E4B" \
+    "\u0EB8-\u0EBA" \
+    "\u0EC8-\u0ECB" \
+    "\u0F18\u0F19" \
+    "\u0F35" \
+    "\u0F37" \
+    "\u0F39" \
+    "\u0F71\u0F72" \
+    "\u0F74" \
+    "\u0F7A-\u0F7D" \
+    "\u0F80" \
+    "\u0F82-\u0F84" \
+    "\u0F86\u0F87" \
+    "\u0FC6" \
+    "\u102E" \
+    "\u1037" \
+    "\u1039\u103A" \
+    "\u108D" \
+    "\u135D-\u135F" \
+    "\u1714" \
+    "\u1734" \
+    "\u17D2" \
+    "\u17DD" \
+    "\u18A9" \
+    "\u1939-\u193B" \
+    "\u1A17\u1A18" \
+    "\u1A60" \
+    "\u1A75-\u1A7C" \
+    "\u1A7F" \
+    "\u1AB0-\u1ABD" \
+    "\u1B34\u1B35" \
+    "\u1B44" \
+    "\u1B6B-\u1B73" \
+    "\u1BAA\u1BAB" \
+    "\u1BE6" \
+    "\u1BF2\u1BF3" \
+    "\u1C37" \
+    "\u1CD0-\u1CD2" \
+    "\u1CD4-\u1CE0" \
+    "\u1CE2-\u1CE8" \
+    "\u1CED" \
+    "\u1CF4" \
+    "\u1CF8\u1CF9" \
+    "\u1DC0-\u1DF9" \
+    "\u1DFB-\u1DFF" \
+    "\u20D0-\u20DC" \
+    "\u20E1" \
+    "\u20E5-\u20F0" \
+    "\u2CEF-\u2CF1" \
+    "\u2D7F" \
+    "\u2DE0-\u2DFF" \
+    "\u302A-\u302F" \
+    "\u3099\u309A" \
+    "\uA66F" \
+    "\uA674-\uA67D" \
+    "\uA69E\uA69F" \
+    "\uA6F0\uA6F1" \
+    "\uA806" \
+    "\uA8C4" \
+    "\uA8E0-\uA8F1" \
+    "\uA92B-\uA92D" \
+    "\uA953" \
+    "\uA9B3" \
+    "\uA9C0" \
+    "\uAAB0" \
+    "\uAAB2-\uAAB4" \
+    "\uAAB7\uAAB8" \
+    "\uAABE\uAABF" \
+    "\uAAC1" \
+    "\uAAF6" \
+    "\uABED" \
+    "\uFB1E" \
+    "\uFE20-\uFE2F" \
+    "\u{101FD}" \
+    "\u{102E0}" \
+    "\u{10376}-\u{1037A}" \
+    "\u{10A0D}" \
+    "\u{10A0F}" \
+    "\u{10A38}-\u{10A3A}" \
+    "\u{10A3F}" \
+    "\u{10AE5}\u{10AE6}" \
+    "\u{10D24}-\u{10D27}" \
+    "\u{10F46}-\u{10F50}" \
+    "\u{11046}" \
+    "\u{1107F}" \
+    "\u{110B9}\u{110BA}" \
+    "\u{11100}-\u{11102}" \
+    "\u{11127}" \
+    "\u{11133}\u{11134}" \
+    "\u{11173}" \
+    "\u{111C0}" \
+    "\u{111CA}" \
+    "\u{11235}\u{11236}" \
+    "\u{112E9}\u{112EA}" \
+    "\u{1133B}\u{1133C}" \
+    "\u{1133E}" \
+    "\u{1134D}" \
+    "\u{11357}" \
+    "\u{11366}-\u{1136C}" \
+    "\u{11370}-\u{11374}" \
+    "\u{11442}" \
+    "\u{11446}" \
+    "\u{1145E}" \
+    "\u{114B0}" \
+    "\u{114BA}" \
+    "\u{114BD}" \
+    "\u{114C2}\u{114C3}" \
+    "\u{115AF}" \
+    "\u{115BF}\u{115C0}" \
+    "\u{1163F}" \
+    "\u{116B6}\u{116B7}" \
+    "\u{1172B}" \
+    "\u{11839}\u{1183A}" \
+    "\u{119E0}" \
+    "\u{11A34}" \
+    "\u{11A47}" \
+    "\u{11A99}" \
+    "\u{11C3F}" \
+    "\u{11D42}" \
+    "\u{11D44}\u{11D45}" \
+    "\u{11D97}" \
+    "\u{16AF0}-\u{16AF4}" \
+    "\u{16B30}-\u{16B36}" \
+    "\u{1BC9E}" \
+    "\u{1D165}-\u{1D169}" \
+    "\u{1D16D}-\u{1D172}" \
+    "\u{1D17B}-\u{1D182}" \
+    "\u{1D185}-\u{1D18B}" \
+    "\u{1D1AA}-\u{1D1AD}" \
+    "\u{1D242}-\u{1D244}" \
+    "\u{1E000}-\u{1E006}" \
+    "\u{1E008}-\u{1E018}" \
+    "\u{1E01B}-\u{1E021}" \
+    "\u{1E023}\u{1E024}" \
+    "\u{1E026}-\u{1E02A}" \
+    "\u{1E130}-\u{1E136}" \
+    "\u{1E2EC}-\u{1E2EF}" \
+    "\u{1E8D0}-\u{1E8D6}" \
+    "\u{1E944}-\u{1E94A}" \
     "]"
   ACCENTS = accents
   REGEXP_D_STRING = "#{''  # composition starters and composition exclusions
     }" \
-    "[\u00C0-\u00C5\u00C7-\u00CF\u00D1-\u00D6\u00D9-\u00DD\u00E0-\u00E5\u00E7-\u00EF\u00F1-\u00F6\u00F9-\u00FD" \
-    "\u00FF-\u010F\u0112-\u0125\u0128-\u0130\u0134-\u0137\u0139-\u013E\u0143-\u0148\u014C-\u0151\u0154-\u0165" \
-    "\u0168-\u017E\u01A0\u01A1\u01AF\u01B0\u01CD-\u01DC\u01DE-\u01E3\u01E6-\u01F0\u01F4\u01F5\u01F8-\u021B" \
-    "\u021E\u021F\u0226-\u0233\u0340\u0341\u0343\u0344\u0374\u037E\u0385-\u038A\u038C" \
-    "\u038E-\u0390\u03AA-\u03B0\u03CA-\u03CE\u03D3\u03D4\u0400\u0401\u0403\u0407\u040C-\u040E" \
-    "\u0419\u0439\u0450\u0451\u0453\u0457\u045C-\u045E\u0476\u0477\u04C1\u04C2" \
-    "\u04D0-\u04D3\u04D6\u04D7\u04DA-\u04DF\u04E2-\u04E7\u04EA-\u04F5\u04F8\u04F9\u0622-\u0626\u06C0" \
-    "\u06C2\u06D3\u0929\u0931\u0934\u0958-\u095F\u09CB\u09CC\u09DC\u09DD" \
-    "\u09DF\u0A33\u0A36\u0A59-\u0A5B\u0A5E\u0B48\u0B4B\u0B4C\u0B5C\u0B5D" \
-    "\u0B94\u0BCA-\u0BCC\u0C48\u0CC0\u0CC7\u0CC8\u0CCA\u0CCB\u0D4A-\u0D4C\u0DDA" \
-    "\u0DDC-\u0DDE\u0F43\u0F4D\u0F52\u0F57\u0F5C\u0F69\u0F73" \
-    "\u0F75\u0F76\u0F78\u0F81\u0F93\u0F9D\u0FA2\u0FA7\u0FAC" \
-    "\u0FB9\u1026\u1B06\u1B08\u1B0A\u1B0C\u1B0E\u1B12" \
-    "\u1B3B\u1B3D\u1B40\u1B41\u1B43\u1E00-\u1E99\u1E9B\u1EA0-\u1EF9\u1F00-\u1F15" \
-    "\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D" \
-    "\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC1-\u1FC4\u1FC6-\u1FD3\u1FD6-\u1FDB\u1FDD-\u1FEF\u1FF2-\u1FF4" \
-    "\u1FF6-\u1FFD\u2000\u2001\u2126\u212A\u212B\u219A\u219B\u21AE\u21CD-\u21CF\u2204" \
-    "\u2209\u220C\u2224\u2226\u2241\u2244\u2247\u2249" \
-    "\u2260\u2262\u226D-\u2271\u2274\u2275\u2278\u2279\u2280\u2281\u2284\u2285\u2288\u2289" \
-    "\u22AC-\u22AF\u22E0-\u22E3\u22EA-\u22ED\u2329\u232A\u2ADC\u304C\u304E\u3050" \
-    "\u3052\u3054\u3056\u3058\u305A\u305C\u305E\u3060" \
-    "\u3062\u3065\u3067\u3069\u3070\u3071\u3073\u3074\u3076\u3077\u3079\u307A" \
-    "\u307C\u307D\u3094\u309E\u30AC\u30AE\u30B0\u30B2\u30B4" \
-    "\u30B6\u30B8\u30BA\u30BC\u30BE\u30C0\u30C2\u30C5" \
-    "\u30C7\u30C9\u30D0\u30D1\u30D3\u30D4\u30D6\u30D7\u30D9\u30DA\u30DC\u30DD\u30F4" \
-    "\u30F7-\u30FA\u30FE\uF900-\uFA0D\uFA10\uFA12\uFA15-\uFA1E\uFA20\uFA22" \
-    "\uFA25\uFA26\uFA2A-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E" \
-    "\uFB40\uFB41\uFB43\uFB44\uFB46-\uFB4E\u{1109A}\u{1109C}\u{110AB}\u{1112E}\u{1112F}\u{1134B}\u{1134C}" \
-    "\u{114BB}\u{114BC}\u{114BE}\u{115BA}\u{115BB}\u{1D15E}-\u{1D164}\u{1D1BB}-\u{1D1C0}\u{2F800}-\u{2FA1D}" \
+    "[\u00C0-\u00C5" \
+    "\u00C7-\u00CF" \
+    "\u00D1-\u00D6" \
+    "\u00D9-\u00DD" \
+    "\u00E0-\u00E5" \
+    "\u00E7-\u00EF" \
+    "\u00F1-\u00F6" \
+    "\u00F9-\u00FD" \
+    "\u00FF-\u010F" \
+    "\u0112-\u0125" \
+    "\u0128-\u0130" \
+    "\u0134-\u0137" \
+    "\u0139-\u013E" \
+    "\u0143-\u0148" \
+    "\u014C-\u0151" \
+    "\u0154-\u0165" \
+    "\u0168-\u017E" \
+    "\u01A0\u01A1" \
+    "\u01AF\u01B0" \
+    "\u01CD-\u01DC" \
+    "\u01DE-\u01E3" \
+    "\u01E6-\u01F0" \
+    "\u01F4\u01F5" \
+    "\u01F8-\u021B" \
+    "\u021E\u021F" \
+    "\u0226-\u0233" \
+    "\u0340\u0341" \
+    "\u0343\u0344" \
+    "\u0374" \
+    "\u037E" \
+    "\u0385-\u038A" \
+    "\u038C" \
+    "\u038E-\u0390" \
+    "\u03AA-\u03B0" \
+    "\u03CA-\u03CE" \
+    "\u03D3\u03D4" \
+    "\u0400\u0401" \
+    "\u0403" \
+    "\u0407" \
+    "\u040C-\u040E" \
+    "\u0419" \
+    "\u0439" \
+    "\u0450\u0451" \
+    "\u0453" \
+    "\u0457" \
+    "\u045C-\u045E" \
+    "\u0476\u0477" \
+    "\u04C1\u04C2" \
+    "\u04D0-\u04D3" \
+    "\u04D6\u04D7" \
+    "\u04DA-\u04DF" \
+    "\u04E2-\u04E7" \
+    "\u04EA-\u04F5" \
+    "\u04F8\u04F9" \
+    "\u0622-\u0626" \
+    "\u06C0" \
+    "\u06C2" \
+    "\u06D3" \
+    "\u0929" \
+    "\u0931" \
+    "\u0934" \
+    "\u0958-\u095F" \
+    "\u09CB\u09CC" \
+    "\u09DC\u09DD" \
+    "\u09DF" \
+    "\u0A33" \
+    "\u0A36" \
+    "\u0A59-\u0A5B" \
+    "\u0A5E" \
+    "\u0B48" \
+    "\u0B4B\u0B4C" \
+    "\u0B5C\u0B5D" \
+    "\u0B94" \
+    "\u0BCA-\u0BCC" \
+    "\u0C48" \
+    "\u0CC0" \
+    "\u0CC7\u0CC8" \
+    "\u0CCA\u0CCB" \
+    "\u0D4A-\u0D4C" \
+    "\u0DDA" \
+    "\u0DDC-\u0DDE" \
+    "\u0F43" \
+    "\u0F4D" \
+    "\u0F52" \
+    "\u0F57" \
+    "\u0F5C" \
+    "\u0F69" \
+    "\u0F73" \
+    "\u0F75\u0F76" \
+    "\u0F78" \
+    "\u0F81" \
+    "\u0F93" \
+    "\u0F9D" \
+    "\u0FA2" \
+    "\u0FA7" \
+    "\u0FAC" \
+    "\u0FB9" \
+    "\u1026" \
+    "\u1B06" \
+    "\u1B08" \
+    "\u1B0A" \
+    "\u1B0C" \
+    "\u1B0E" \
+    "\u1B12" \
+    "\u1B3B" \
+    "\u1B3D" \
+    "\u1B40\u1B41" \
+    "\u1B43" \
+    "\u1E00-\u1E99" \
+    "\u1E9B" \
+    "\u1EA0-\u1EF9" \
+    "\u1F00-\u1F15" \
+    "\u1F18-\u1F1D" \
+    "\u1F20-\u1F45" \
+    "\u1F48-\u1F4D" \
+    "\u1F50-\u1F57" \
+    "\u1F59" \
+    "\u1F5B" \
+    "\u1F5D" \
+    "\u1F5F-\u1F7D" \
+    "\u1F80-\u1FB4" \
+    "\u1FB6-\u1FBC" \
+    "\u1FBE" \
+    "\u1FC1-\u1FC4" \
+    "\u1FC6-\u1FD3" \
+    "\u1FD6-\u1FDB" \
+    "\u1FDD-\u1FEF" \
+    "\u1FF2-\u1FF4" \
+    "\u1FF6-\u1FFD" \
+    "\u2000\u2001" \
+    "\u2126" \
+    "\u212A\u212B" \
+    "\u219A\u219B" \
+    "\u21AE" \
+    "\u21CD-\u21CF" \
+    "\u2204" \
+    "\u2209" \
+    "\u220C" \
+    "\u2224" \
+    "\u2226" \
+    "\u2241" \
+    "\u2244" \
+    "\u2247" \
+    "\u2249" \
+    "\u2260" \
+    "\u2262" \
+    "\u226D-\u2271" \
+    "\u2274\u2275" \
+    "\u2278\u2279" \
+    "\u2280\u2281" \
+    "\u2284\u2285" \
+    "\u2288\u2289" \
+    "\u22AC-\u22AF" \
+    "\u22E0-\u22E3" \
+    "\u22EA-\u22ED" \
+    "\u2329\u232A" \
+    "\u2ADC" \
+    "\u304C" \
+    "\u304E" \
+    "\u3050" \
+    "\u3052" \
+    "\u3054" \
+    "\u3056" \
+    "\u3058" \
+    "\u305A" \
+    "\u305C" \
+    "\u305E" \
+    "\u3060" \
+    "\u3062" \
+    "\u3065" \
+    "\u3067" \
+    "\u3069" \
+    "\u3070\u3071" \
+    "\u3073\u3074" \
+    "\u3076\u3077" \
+    "\u3079\u307A" \
+    "\u307C\u307D" \
+    "\u3094" \
+    "\u309E" \
+    "\u30AC" \
+    "\u30AE" \
+    "\u30B0" \
+    "\u30B2" \
+    "\u30B4" \
+    "\u30B6" \
+    "\u30B8" \
+    "\u30BA" \
+    "\u30BC" \
+    "\u30BE" \
+    "\u30C0" \
+    "\u30C2" \
+    "\u30C5" \
+    "\u30C7" \
+    "\u30C9" \
+    "\u30D0\u30D1" \
+    "\u30D3\u30D4" \
+    "\u30D6\u30D7" \
+    "\u30D9\u30DA" \
+    "\u30DC\u30DD" \
+    "\u30F4" \
+    "\u30F7-\u30FA" \
+    "\u30FE" \
+    "\uF900-\uFA0D" \
+    "\uFA10" \
+    "\uFA12" \
+    "\uFA15-\uFA1E" \
+    "\uFA20" \
+    "\uFA22" \
+    "\uFA25\uFA26" \
+    "\uFA2A-\uFA6D" \
+    "\uFA70-\uFAD9" \
+    "\uFB1D" \
+    "\uFB1F" \
+    "\uFB2A-\uFB36" \
+    "\uFB38-\uFB3C" \
+    "\uFB3E" \
+    "\uFB40\uFB41" \
+    "\uFB43\uFB44" \
+    "\uFB46-\uFB4E" \
+    "\u{1109A}" \
+    "\u{1109C}" \
+    "\u{110AB}" \
+    "\u{1112E}\u{1112F}" \
+    "\u{1134B}\u{1134C}" \
+    "\u{114BB}\u{114BC}" \
+    "\u{114BE}" \
+    "\u{115BA}\u{115BB}" \
+    "\u{1D15E}-\u{1D164}" \
+    "\u{1D1BB}-\u{1D1C0}" \
+    "\u{2F800}-\u{2FA1D}" \
     "]#{accents}*" \
     "|#{''  # characters that can be the result of a composition, except composition starters
     }" \
-    "[<->A-PR-Za-pr-z\u00A8\u00C6\u00D8" \
-    "\u00E6\u00F8\u017F\u01B7\u0292\u0391\u0395\u0397" \
-    "\u0399\u039F\u03A1\u03A5\u03A9\u03B1\u03B5\u03B7" \
-    "\u03B9\u03BF\u03C1\u03C5\u03C9\u03D2\u0406\u0410" \
-    "\u0413\u0415-\u0418\u041A\u041E\u0423\u0427\u042B\u042D" \
-    "\u0430\u0433\u0435-\u0438\u043A\u043E\u0443\u0447\u044B" \
-    "\u044D\u0456\u0474\u0475\u04D8\u04D9\u04E8\u04E9\u0627\u0648\u064A" \
-    "\u06C1\u06D2\u06D5\u0928\u0930\u0933\u09C7\u0B47" \
-    "\u0B92\u0BC6\u0BC7\u0C46\u0CBF\u0CC6\u0D46\u0D47\u0DD9\u1025" \
-    "\u1B05\u1B07\u1B09\u1B0B\u1B0D\u1B11\u1B3A\u1B3C" \
-    "\u1B3E\u1B3F\u1B42\u1FBF\u1FFE\u2190\u2192\u2194\u21D0" \
-    "\u21D2\u21D4\u2203\u2208\u220B\u2223\u2225\u223C" \
-    "\u2243\u2245\u2248\u224D\u2261\u2264\u2265\u2272\u2273\u2276\u2277" \
-    "\u227A-\u227D\u2282\u2283\u2286\u2287\u2291\u2292\u22A2\u22A8\u22A9\u22AB\u22B2-\u22B5" \
-    "\u3046\u304B\u304D\u304F\u3051\u3053\u3055\u3057" \
-    "\u3059\u305B\u305D\u305F\u3061\u3064\u3066\u3068" \
-    "\u306F\u3072\u3075\u3078\u307B\u309D\u30A6\u30AB" \
-    "\u30AD\u30AF\u30B1\u30B3\u30B5\u30B7\u30B9\u30BB" \
-    "\u30BD\u30BF\u30C1\u30C4\u30C6\u30C8\u30CF\u30D2" \
-    "\u30D5\u30D8\u30DB\u30EF-\u30F2\u30FD\u{11099}\u{1109B}\u{110A5}" \
-    "\u{11131}\u{11132}\u{11347}\u{114B9}\u{115B8}\u{115B9}" \
+    "[<->" \
+    "A-P" \
+    "R-Z" \
+    "a-p" \
+    "r-z" \
+    "\u00A8" \
+    "\u00C6" \
+    "\u00D8" \
+    "\u00E6" \
+    "\u00F8" \
+    "\u017F" \
+    "\u01B7" \
+    "\u0292" \
+    "\u0391" \
+    "\u0395" \
+    "\u0397" \
+    "\u0399" \
+    "\u039F" \
+    "\u03A1" \
+    "\u03A5" \
+    "\u03A9" \
+    "\u03B1" \
+    "\u03B5" \
+    "\u03B7" \
+    "\u03B9" \
+    "\u03BF" \
+    "\u03C1" \
+    "\u03C5" \
+    "\u03C9" \
+    "\u03D2" \
+    "\u0406" \
+    "\u0410" \
+    "\u0413" \
+    "\u0415-\u0418" \
+    "\u041A" \
+    "\u041E" \
+    "\u0423" \
+    "\u0427" \
+    "\u042B" \
+    "\u042D" \
+    "\u0430" \
+    "\u0433" \
+    "\u0435-\u0438" \
+    "\u043A" \
+    "\u043E" \
+    "\u0443" \
+    "\u0447" \
+    "\u044B" \
+    "\u044D" \
+    "\u0456" \
+    "\u0474\u0475" \
+    "\u04D8\u04D9" \
+    "\u04E8\u04E9" \
+    "\u0627" \
+    "\u0648" \
+    "\u064A" \
+    "\u06C1" \
+    "\u06D2" \
+    "\u06D5" \
+    "\u0928" \
+    "\u0930" \
+    "\u0933" \
+    "\u09C7" \
+    "\u0B47" \
+    "\u0B92" \
+    "\u0BC6\u0BC7" \
+    "\u0C46" \
+    "\u0CBF" \
+    "\u0CC6" \
+    "\u0D46\u0D47" \
+    "\u0DD9" \
+    "\u1025" \
+    "\u1B05" \
+    "\u1B07" \
+    "\u1B09" \
+    "\u1B0B" \
+    "\u1B0D" \
+    "\u1B11" \
+    "\u1B3A" \
+    "\u1B3C" \
+    "\u1B3E\u1B3F" \
+    "\u1B42" \
+    "\u1FBF" \
+    "\u1FFE" \
+    "\u2190" \
+    "\u2192" \
+    "\u2194" \
+    "\u21D0" \
+    "\u21D2" \
+    "\u21D4" \
+    "\u2203" \
+    "\u2208" \
+    "\u220B" \
+    "\u2223" \
+    "\u2225" \
+    "\u223C" \
+    "\u2243" \
+    "\u2245" \
+    "\u2248" \
+    "\u224D" \
+    "\u2261" \
+    "\u2264\u2265" \
+    "\u2272\u2273" \
+    "\u2276\u2277" \
+    "\u227A-\u227D" \
+    "\u2282\u2283" \
+    "\u2286\u2287" \
+    "\u2291\u2292" \
+    "\u22A2" \
+    "\u22A8\u22A9" \
+    "\u22AB" \
+    "\u22B2-\u22B5" \
+    "\u3046" \
+    "\u304B" \
+    "\u304D" \
+    "\u304F" \
+    "\u3051" \
+    "\u3053" \
+    "\u3055" \
+    "\u3057" \
+    "\u3059" \
+    "\u305B" \
+    "\u305D" \
+    "\u305F" \
+    "\u3061" \
+    "\u3064" \
+    "\u3066" \
+    "\u3068" \
+    "\u306F" \
+    "\u3072" \
+    "\u3075" \
+    "\u3078" \
+    "\u307B" \
+    "\u309D" \
+    "\u30A6" \
+    "\u30AB" \
+    "\u30AD" \
+    "\u30AF" \
+    "\u30B1" \
+    "\u30B3" \
+    "\u30B5" \
+    "\u30B7" \
+    "\u30B9" \
+    "\u30BB" \
+    "\u30BD" \
+    "\u30BF" \
+    "\u30C1" \
+    "\u30C4" \
+    "\u30C6" \
+    "\u30C8" \
+    "\u30CF" \
+    "\u30D2" \
+    "\u30D5" \
+    "\u30D8" \
+    "\u30DB" \
+    "\u30EF-\u30F2" \
+    "\u30FD" \
+    "\u{11099}" \
+    "\u{1109B}" \
+    "\u{110A5}" \
+    "\u{11131}\u{11132}" \
+    "\u{11347}" \
+    "\u{114B9}" \
+    "\u{115B8}\u{115B9}" \
     "]?#{accents}+" \
     "|#{''  # precomposed Hangul syllables
     }" \
     "[\u{AC00}-\u{D7A4}]"
   REGEXP_C_STRING = "#{''  # composition exclusions
     }" \
-    "[\u0340\u0341\u0343\u0344\u0374\u037E\u0387\u0958-\u095F\u09DC\u09DD\u09DF" \
-    "\u0A33\u0A36\u0A59-\u0A5B\u0A5E\u0B5C\u0B5D\u0F43\u0F4D\u0F52" \
-    "\u0F57\u0F5C\u0F69\u0F73\u0F75\u0F76\u0F78\u0F81\u0F93" \
-    "\u0F9D\u0FA2\u0FA7\u0FAC\u0FB9\u1F71\u1F73\u1F75" \
-    "\u1F77\u1F79\u1F7B\u1F7D\u1FBB\u1FBE\u1FC9\u1FCB" \
-    "\u1FD3\u1FDB\u1FE3\u1FEB\u1FEE\u1FEF\u1FF9\u1FFB\u1FFD" \
-    "\u2000\u2001\u2126\u212A\u212B\u2329\u232A\u2ADC\uF900-\uFA0D\uFA10\uFA12" \
-    "\uFA15-\uFA1E\uFA20\uFA22\uFA25\uFA26\uFA2A-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F" \
-    "\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFB4E\u{1D15E}-\u{1D164}\u{1D1BB}-\u{1D1C0}" \
+    "[\u0340\u0341" \
+    "\u0343\u0344" \
+    "\u0374" \
+    "\u037E" \
+    "\u0387" \
+    "\u0958-\u095F" \
+    "\u09DC\u09DD" \
+    "\u09DF" \
+    "\u0A33" \
+    "\u0A36" \
+    "\u0A59-\u0A5B" \
+    "\u0A5E" \
+    "\u0B5C\u0B5D" \
+    "\u0F43" \
+    "\u0F4D" \
+    "\u0F52" \
+    "\u0F57" \
+    "\u0F5C" \
+    "\u0F69" \
+    "\u0F73" \
+    "\u0F75\u0F76" \
+    "\u0F78" \
+    "\u0F81" \
+    "\u0F93" \
+    "\u0F9D" \
+    "\u0FA2" \
+    "\u0FA7" \
+    "\u0FAC" \
+    "\u0FB9" \
+    "\u1F71" \
+    "\u1F73" \
+    "\u1F75" \
+    "\u1F77" \
+    "\u1F79" \
+    "\u1F7B" \
+    "\u1F7D" \
+    "\u1FBB" \
+    "\u1FBE" \
+    "\u1FC9" \
+    "\u1FCB" \
+    "\u1FD3" \
+    "\u1FDB" \
+    "\u1FE3" \
+    "\u1FEB" \
+    "\u1FEE\u1FEF" \
+    "\u1FF9" \
+    "\u1FFB" \
+    "\u1FFD" \
+    "\u2000\u2001" \
+    "\u2126" \
+    "\u212A\u212B" \
+    "\u2329\u232A" \
+    "\u2ADC" \
+    "\uF900-\uFA0D" \
+    "\uFA10" \
+    "\uFA12" \
+    "\uFA15-\uFA1E" \
+    "\uFA20" \
+    "\uFA22" \
+    "\uFA25\uFA26" \
+    "\uFA2A-\uFA6D" \
+    "\uFA70-\uFAD9" \
+    "\uFB1D" \
+    "\uFB1F" \
+    "\uFB2A-\uFB36" \
+    "\uFB38-\uFB3C" \
+    "\uFB3E" \
+    "\uFB40\uFB41" \
+    "\uFB43\uFB44" \
+    "\uFB46-\uFB4E" \
+    "\u{1D15E}-\u{1D164}" \
+    "\u{1D1BB}-\u{1D1C0}" \
     "\u{2F800}-\u{2FA1D}" \
     "]#{accents}*" \
     "|#{''  # composition starters and characters that can be the result of a composition
     }" \
-    "[<->A-PR-Za-pr-z\u00A8\u00C0-\u00CF\u00D1-\u00D6" \
-    "\u00D8-\u00DD\u00E0-\u00EF\u00F1-\u00F6\u00F8-\u00FD\u00FF-\u010F\u0112-\u0125\u0128-\u0130\u0134-\u0137" \
-    "\u0139-\u013E\u0143-\u0148\u014C-\u0151\u0154-\u0165\u0168-\u017F\u01A0\u01A1\u01AF\u01B0\u01B7" \
-    "\u01CD-\u01DC\u01DE-\u01E3\u01E6-\u01F0\u01F4\u01F5\u01F8-\u021B\u021E\u021F\u0226-\u0233\u0292" \
-    "\u0385\u0386\u0388-\u038A\u038C\u038E-\u0391\u0395\u0397\u0399\u039F" \
-    "\u03A1\u03A5\u03A9-\u03B1\u03B5\u03B7\u03B9\u03BF\u03C1" \
-    "\u03C5\u03C9-\u03CE\u03D2-\u03D4\u0400\u0401\u0403\u0406\u0407\u040C-\u040E\u0410" \
-    "\u0413\u0415-\u041A\u041E\u0423\u0427\u042B\u042D\u0430" \
-    "\u0433\u0435-\u043A\u043E\u0443\u0447\u044B\u044D\u0450\u0451" \
-    "\u0453\u0456\u0457\u045C-\u045E\u0474-\u0477\u04C1\u04C2\u04D0-\u04D3\u04D6-\u04DF\u04E2-\u04F5" \
-    "\u04F8\u04F9\u0622-\u0627\u0648\u064A\u06C0-\u06C2\u06D2\u06D3\u06D5\u0928\u0929" \
-    "\u0930\u0931\u0933\u0934\u09C7\u09CB\u09CC\u0B47\u0B48\u0B4B\u0B4C\u0B92\u0B94" \
-    "\u0BC6\u0BC7\u0BCA-\u0BCC\u0C46\u0C48\u0CBF\u0CC0\u0CC6-\u0CC8\u0CCA\u0CCB\u0D46\u0D47" \
-    "\u0D4A-\u0D4C\u0DD9\u0DDA\u0DDC-\u0DDE\u1025\u1026\u1B05-\u1B0E\u1B11\u1B12\u1B3A-\u1B43\u1E00-\u1E99" \
-    "\u1E9B\u1EA0-\u1EF9\u1F00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59" \
-    "\u1F5B\u1F5D\u1F5F-\u1F70\u1F72\u1F74\u1F76\u1F78\u1F7A" \
-    "\u1F7C\u1F80-\u1FB4\u1FB6-\u1FBA\u1FBC\u1FBF\u1FC1-\u1FC4\u1FC6-\u1FC8\u1FCA" \
-    "\u1FCC-\u1FD2\u1FD6-\u1FDA\u1FDD-\u1FE2\u1FE4-\u1FEA\u1FEC\u1FED\u1FF2-\u1FF4\u1FF6-\u1FF8\u1FFA" \
-    "\u1FFC\u1FFE\u2190\u2192\u2194\u219A\u219B\u21AE\u21CD-\u21D0" \
-    "\u21D2\u21D4\u2203\u2204\u2208\u2209\u220B\u220C\u2223-\u2226\u223C\u2241" \
-    "\u2243-\u2245\u2247-\u2249\u224D\u2260-\u2262\u2264\u2265\u226D-\u227D\u2280-\u2289\u2291\u2292" \
-    "\u22A2\u22A8\u22A9\u22AB-\u22AF\u22B2-\u22B5\u22E0-\u22E3\u22EA-\u22ED\u3046\u304B-\u3062" \
-    "\u3064-\u3069\u306F-\u307D\u3094\u309D\u309E\u30A6\u30AB-\u30C2\u30C4-\u30C9\u30CF-\u30DD" \
-    "\u30EF-\u30F2\u30F4\u30F7-\u30FA\u30FD\u30FE\u{11099}-\u{1109C}\u{110A5}\u{110AB}\u{1112E}\u{1112F}" \
-    "\u{11131}\u{11132}\u{11347}\u{1134B}\u{1134C}\u{114B9}\u{114BB}\u{114BC}\u{114BE}\u{115B8}-\u{115BB}" \
+    "[<->" \
+    "A-P" \
+    "R-Z" \
+    "a-p" \
+    "r-z" \
+    "\u00A8" \
+    "\u00C0-\u00CF" \
+    "\u00D1-\u00D6" \
+    "\u00D8-\u00DD" \
+    "\u00E0-\u00EF" \
+    "\u00F1-\u00F6" \
+    "\u00F8-\u00FD" \
+    "\u00FF-\u010F" \
+    "\u0112-\u0125" \
+    "\u0128-\u0130" \
+    "\u0134-\u0137" \
+    "\u0139-\u013E" \
+    "\u0143-\u0148" \
+    "\u014C-\u0151" \
+    "\u0154-\u0165" \
+    "\u0168-\u017F" \
+    "\u01A0\u01A1" \
+    "\u01AF\u01B0" \
+    "\u01B7" \
+    "\u01CD-\u01DC" \
+    "\u01DE-\u01E3" \
+    "\u01E6-\u01F0" \
+    "\u01F4\u01F5" \
+    "\u01F8-\u021B" \
+    "\u021E\u021F" \
+    "\u0226-\u0233" \
+    "\u0292" \
+    "\u0385\u0386" \
+    "\u0388-\u038A" \
+    "\u038C" \
+    "\u038E-\u0391" \
+    "\u0395" \
+    "\u0397" \
+    "\u0399" \
+    "\u039F" \
+    "\u03A1" \
+    "\u03A5" \
+    "\u03A9-\u03B1" \
+    "\u03B5" \
+    "\u03B7" \
+    "\u03B9" \
+    "\u03BF" \
+    "\u03C1" \
+    "\u03C5" \
+    "\u03C9-\u03CE" \
+    "\u03D2-\u03D4" \
+    "\u0400\u0401" \
+    "\u0403" \
+    "\u0406\u0407" \
+    "\u040C-\u040E" \
+    "\u0410" \
+    "\u0413" \
+    "\u0415-\u041A" \
+    "\u041E" \
+    "\u0423" \
+    "\u0427" \
+    "\u042B" \
+    "\u042D" \
+    "\u0430" \
+    "\u0433" \
+    "\u0435-\u043A" \
+    "\u043E" \
+    "\u0443" \
+    "\u0447" \
+    "\u044B" \
+    "\u044D" \
+    "\u0450\u0451" \
+    "\u0453" \
+    "\u0456\u0457" \
+    "\u045C-\u045E" \
+    "\u0474-\u0477" \
+    "\u04C1\u04C2" \
+    "\u04D0-\u04D3" \
+    "\u04D6-\u04DF" \
+    "\u04E2-\u04F5" \
+    "\u04F8\u04F9" \
+    "\u0622-\u0627" \
+    "\u0648" \
+    "\u064A" \
+    "\u06C0-\u06C2" \
+    "\u06D2\u06D3" \
+    "\u06D5" \
+    "\u0928\u0929" \
+    "\u0930\u0931" \
+    "\u0933\u0934" \
+    "\u09C7" \
+    "\u09CB\u09CC" \
+    "\u0B47\u0B48" \
+    "\u0B4B\u0B4C" \
+    "\u0B92" \
+    "\u0B94" \
+    "\u0BC6\u0BC7" \
+    "\u0BCA-\u0BCC" \
+    "\u0C46" \
+    "\u0C48" \
+    "\u0CBF\u0CC0" \
+    "\u0CC6-\u0CC8" \
+    "\u0CCA\u0CCB" \
+    "\u0D46\u0D47" \
+    "\u0D4A-\u0D4C" \
+    "\u0DD9\u0DDA" \
+    "\u0DDC-\u0DDE" \
+    "\u1025\u1026" \
+    "\u1B05-\u1B0E" \
+    "\u1B11\u1B12" \
+    "\u1B3A-\u1B43" \
+    "\u1E00-\u1E99" \
+    "\u1E9B" \
+    "\u1EA0-\u1EF9" \
+    "\u1F00-\u1F15" \
+    "\u1F18-\u1F1D" \
+    "\u1F20-\u1F45" \
+    "\u1F48-\u1F4D" \
+    "\u1F50-\u1F57" \
+    "\u1F59" \
+    "\u1F5B" \
+    "\u1F5D" \
+    "\u1F5F-\u1F70" \
+    "\u1F72" \
+    "\u1F74" \
+    "\u1F76" \
+    "\u1F78" \
+    "\u1F7A" \
+    "\u1F7C" \
+    "\u1F80-\u1FB4" \
+    "\u1FB6-\u1FBA" \
+    "\u1FBC" \
+    "\u1FBF" \
+    "\u1FC1-\u1FC4" \
+    "\u1FC6-\u1FC8" \
+    "\u1FCA" \
+    "\u1FCC-\u1FD2" \
+    "\u1FD6-\u1FDA" \
+    "\u1FDD-\u1FE2" \
+    "\u1FE4-\u1FEA" \
+    "\u1FEC\u1FED" \
+    "\u1FF2-\u1FF4" \
+    "\u1FF6-\u1FF8" \
+    "\u1FFA" \
+    "\u1FFC" \
+    "\u1FFE" \
+    "\u2190" \
+    "\u2192" \
+    "\u2194" \
+    "\u219A\u219B" \
+    "\u21AE" \
+    "\u21CD-\u21D0" \
+    "\u21D2" \
+    "\u21D4" \
+    "\u2203\u2204" \
+    "\u2208\u2209" \
+    "\u220B\u220C" \
+    "\u2223-\u2226" \
+    "\u223C" \
+    "\u2241" \
+    "\u2243-\u2245" \
+    "\u2247-\u2249" \
+    "\u224D" \
+    "\u2260-\u2262" \
+    "\u2264\u2265" \
+    "\u226D-\u227D" \
+    "\u2280-\u2289" \
+    "\u2291\u2292" \
+    "\u22A2" \
+    "\u22A8\u22A9" \
+    "\u22AB-\u22AF" \
+    "\u22B2-\u22B5" \
+    "\u22E0-\u22E3" \
+    "\u22EA-\u22ED" \
+    "\u3046" \
+    "\u304B-\u3062" \
+    "\u3064-\u3069" \
+    "\u306F-\u307D" \
+    "\u3094" \
+    "\u309D\u309E" \
+    "\u30A6" \
+    "\u30AB-\u30C2" \
+    "\u30C4-\u30C9" \
+    "\u30CF-\u30DD" \
+    "\u30EF-\u30F2" \
+    "\u30F4" \
+    "\u30F7-\u30FA" \
+    "\u30FD\u30FE" \
+    "\u{11099}-\u{1109C}" \
+    "\u{110A5}" \
+    "\u{110AB}" \
+    "\u{1112E}\u{1112F}" \
+    "\u{11131}\u{11132}" \
+    "\u{11347}" \
+    "\u{1134B}\u{1134C}" \
+    "\u{114B9}" \
+    "\u{114BB}\u{114BC}" \
+    "\u{114BE}" \
+    "\u{115B8}-\u{115BB}" \
     "]?#{accents}+" \
     "|#{''  # Hangul syllables with separate trailer
     }" \
-    "[\uAC00\uAC1C\uAC38\uAC54\uAC70\uAC8C\uACA8\uACC4" \
-    "\uACE0\uACFC\uAD18\uAD34\uAD50\uAD6C\uAD88\uADA4" \
-    "\uADC0\uADDC\uADF8\uAE14\uAE30\uAE4C\uAE68\uAE84" \
-    "\uAEA0\uAEBC\uAED8\uAEF4\uAF10\uAF2C\uAF48\uAF64" \
-    "\uAF80\uAF9C\uAFB8\uAFD4\uAFF0\uB00C\uB028\uB044" \
-    "\uB060\uB07C\uB098\uB0B4\uB0D0\uB0EC\uB108\uB124" \
-    "\uB140\uB15C\uB178\uB194\uB1B0\uB1CC\uB1E8\uB204" \
-    "\uB220\uB23C\uB258\uB274\uB290\uB2AC\uB2C8\uB2E4" \
-    "\uB300\uB31C\uB338\uB354\uB370\uB38C\uB3A8\uB3C4" \
-    "\uB3E0\uB3FC\uB418\uB434\uB450\uB46C\uB488\uB4A4" \
-    "\uB4C0\uB4DC\uB4F8\uB514\uB530\uB54C\uB568\uB584" \
-    "\uB5A0\uB5BC\uB5D8\uB5F4\uB610\uB62C\uB648\uB664" \
-    "\uB680\uB69C\uB6B8\uB6D4\uB6F0\uB70C\uB728\uB744" \
-    "\uB760\uB77C\uB798\uB7B4\uB7D0\uB7EC\uB808\uB824" \
-    "\uB840\uB85C\uB878\uB894\uB8B0\uB8CC\uB8E8\uB904" \
-    "\uB920\uB93C\uB958\uB974\uB990\uB9AC\uB9C8\uB9E4" \
-    "\uBA00\uBA1C\uBA38\uBA54\uBA70\uBA8C\uBAA8\uBAC4" \
-    "\uBAE0\uBAFC\uBB18\uBB34\uBB50\uBB6C\uBB88\uBBA4" \
-    "\uBBC0\uBBDC\uBBF8\uBC14\uBC30\uBC4C\uBC68\uBC84" \
-    "\uBCA0\uBCBC\uBCD8\uBCF4\uBD10\uBD2C\uBD48\uBD64" \
-    "\uBD80\uBD9C\uBDB8\uBDD4\uBDF0\uBE0C\uBE28\uBE44" \
-    "\uBE60\uBE7C\uBE98\uBEB4\uBED0\uBEEC\uBF08\uBF24" \
-    "\uBF40\uBF5C\uBF78\uBF94\uBFB0\uBFCC\uBFE8\uC004" \
-    "\uC020\uC03C\uC058\uC074\uC090\uC0AC\uC0C8\uC0E4" \
-    "\uC100\uC11C\uC138\uC154\uC170\uC18C\uC1A8\uC1C4" \
-    "\uC1E0\uC1FC\uC218\uC234\uC250\uC26C\uC288\uC2A4" \
-    "\uC2C0\uC2DC\uC2F8\uC314\uC330\uC34C\uC368\uC384" \
-    "\uC3A0\uC3BC\uC3D8\uC3F4\uC410\uC42C\uC448\uC464" \
-    "\uC480\uC49C\uC4B8\uC4D4\uC4F0\uC50C\uC528\uC544" \
-    "\uC560\uC57C\uC598\uC5B4\uC5D0\uC5EC\uC608\uC624" \
-    "\uC640\uC65C\uC678\uC694\uC6B0\uC6CC\uC6E8\uC704" \
-    "\uC720\uC73C\uC758\uC774\uC790\uC7AC\uC7C8\uC7E4" \
-    "\uC800\uC81C\uC838\uC854\uC870\uC88C\uC8A8\uC8C4" \
-    "\uC8E0\uC8FC\uC918\uC934\uC950\uC96C\uC988\uC9A4" \
-    "\uC9C0\uC9DC\uC9F8\uCA14\uCA30\uCA4C\uCA68\uCA84" \
-    "\uCAA0\uCABC\uCAD8\uCAF4\uCB10\uCB2C\uCB48\uCB64" \
-    "\uCB80\uCB9C\uCBB8\uCBD4\uCBF0\uCC0C\uCC28\uCC44" \
-    "\uCC60\uCC7C\uCC98\uCCB4\uCCD0\uCCEC\uCD08\uCD24" \
-    "\uCD40\uCD5C\uCD78\uCD94\uCDB0\uCDCC\uCDE8\uCE04" \
-    "\uCE20\uCE3C\uCE58\uCE74\uCE90\uCEAC\uCEC8\uCEE4" \
-    "\uCF00\uCF1C\uCF38\uCF54\uCF70\uCF8C\uCFA8\uCFC4" \
-    "\uCFE0\uCFFC\uD018\uD034\uD050\uD06C\uD088\uD0A4" \
-    "\uD0C0\uD0DC\uD0F8\uD114\uD130\uD14C\uD168\uD184" \
-    "\uD1A0\uD1BC\uD1D8\uD1F4\uD210\uD22C\uD248\uD264" \
-    "\uD280\uD29C\uD2B8\uD2D4\uD2F0\uD30C\uD328\uD344" \
-    "\uD360\uD37C\uD398\uD3B4\uD3D0\uD3EC\uD408\uD424" \
-    "\uD440\uD45C\uD478\uD494\uD4B0\uD4CC\uD4E8\uD504" \
-    "\uD520\uD53C\uD558\uD574\uD590\uD5AC\uD5C8\uD5E4" \
-    "\uD600\uD61C\uD638\uD654\uD670\uD68C\uD6A8\uD6C4" \
-    "\uD6E0\uD6FC\uD718\uD734\uD750\uD76C\uD788" \
+    "[\uAC00" \
+    "\uAC1C" \
+    "\uAC38" \
+    "\uAC54" \
+    "\uAC70" \
+    "\uAC8C" \
+    "\uACA8" \
+    "\uACC4" \
+    "\uACE0" \
+    "\uACFC" \
+    "\uAD18" \
+    "\uAD34" \
+    "\uAD50" \
+    "\uAD6C" \
+    "\uAD88" \
+    "\uADA4" \
+    "\uADC0" \
+    "\uADDC" \
+    "\uADF8" \
+    "\uAE14" \
+    "\uAE30" \
+    "\uAE4C" \
+    "\uAE68" \
+    "\uAE84" \
+    "\uAEA0" \
+    "\uAEBC" \
+    "\uAED8" \
+    "\uAEF4" \
+    "\uAF10" \
+    "\uAF2C" \
+    "\uAF48" \
+    "\uAF64" \
+    "\uAF80" \
+    "\uAF9C" \
+    "\uAFB8" \
+    "\uAFD4" \
+    "\uAFF0" \
+    "\uB00C" \
+    "\uB028" \
+    "\uB044" \
+    "\uB060" \
+    "\uB07C" \
+    "\uB098" \
+    "\uB0B4" \
+    "\uB0D0" \
+    "\uB0EC" \
+    "\uB108" \
+    "\uB124" \
+    "\uB140" \
+    "\uB15C" \
+    "\uB178" \
+    "\uB194" \
+    "\uB1B0" \
+    "\uB1CC" \
+    "\uB1E8" \
+    "\uB204" \
+    "\uB220" \
+    "\uB23C" \
+    "\uB258" \
+    "\uB274" \
+    "\uB290" \
+    "\uB2AC" \
+    "\uB2C8" \
+    "\uB2E4" \
+    "\uB300" \
+    "\uB31C" \
+    "\uB338" \
+    "\uB354" \
+    "\uB370" \
+    "\uB38C" \
+    "\uB3A8" \
+    "\uB3C4" \
+    "\uB3E0" \
+    "\uB3FC" \
+    "\uB418" \
+    "\uB434" \
+    "\uB450" \
+    "\uB46C" \
+    "\uB488" \
+    "\uB4A4" \
+    "\uB4C0" \
+    "\uB4DC" \
+    "\uB4F8" \
+    "\uB514" \
+    "\uB530" \
+    "\uB54C" \
+    "\uB568" \
+    "\uB584" \
+    "\uB5A0" \
+    "\uB5BC" \
+    "\uB5D8" \
+    "\uB5F4" \
+    "\uB610" \
+    "\uB62C" \
+    "\uB648" \
+    "\uB664" \
+    "\uB680" \
+    "\uB69C" \
+    "\uB6B8" \
+    "\uB6D4" \
+    "\uB6F0" \
+    "\uB70C" \
+    "\uB728" \
+    "\uB744" \
+    "\uB760" \
+    "\uB77C" \
+    "\uB798" \
+    "\uB7B4" \
+    "\uB7D0" \
+    "\uB7EC" \
+    "\uB808" \
+    "\uB824" \
+    "\uB840" \
+    "\uB85C" \
+    "\uB878" \
+    "\uB894" \
+    "\uB8B0" \
+    "\uB8CC" \
+    "\uB8E8" \
+    "\uB904" \
+    "\uB920" \
+    "\uB93C" \
+    "\uB958" \
+    "\uB974" \
+    "\uB990" \
+    "\uB9AC" \
+    "\uB9C8" \
+    "\uB9E4" \
+    "\uBA00" \
+    "\uBA1C" \
+    "\uBA38" \
+    "\uBA54" \
+    "\uBA70" \
+    "\uBA8C" \
+    "\uBAA8" \
+    "\uBAC4" \
+    "\uBAE0" \
+    "\uBAFC" \
+    "\uBB18" \
+    "\uBB34" \
+    "\uBB50" \
+    "\uBB6C" \
+    "\uBB88" \
+    "\uBBA4" \
+    "\uBBC0" \
+    "\uBBDC" \
+    "\uBBF8" \
+    "\uBC14" \
+    "\uBC30" \
+    "\uBC4C" \
+    "\uBC68" \
+    "\uBC84" \
+    "\uBCA0" \
+    "\uBCBC" \
+    "\uBCD8" \
+    "\uBCF4" \
+    "\uBD10" \
+    "\uBD2C" \
+    "\uBD48" \
+    "\uBD64" \
+    "\uBD80" \
+    "\uBD9C" \
+    "\uBDB8" \
+    "\uBDD4" \
+    "\uBDF0" \
+    "\uBE0C" \
+    "\uBE28" \
+    "\uBE44" \
+    "\uBE60" \
+    "\uBE7C" \
+    "\uBE98" \
+    "\uBEB4" \
+    "\uBED0" \
+    "\uBEEC" \
+    "\uBF08" \
+    "\uBF24" \
+    "\uBF40" \
+    "\uBF5C" \
+    "\uBF78" \
+    "\uBF94" \
+    "\uBFB0" \
+    "\uBFCC" \
+    "\uBFE8" \
+    "\uC004" \
+    "\uC020" \
+    "\uC03C" \
+    "\uC058" \
+    "\uC074" \
+    "\uC090" \
+    "\uC0AC" \
+    "\uC0C8" \
+    "\uC0E4" \
+    "\uC100" \
+    "\uC11C" \
+    "\uC138" \
+    "\uC154" \
+    "\uC170" \
+    "\uC18C" \
+    "\uC1A8" \
+    "\uC1C4" \
+    "\uC1E0" \
+    "\uC1FC" \
+    "\uC218" \
+    "\uC234" \
+    "\uC250" \
+    "\uC26C" \
+    "\uC288" \
+    "\uC2A4" \
+    "\uC2C0" \
+    "\uC2DC" \
+    "\uC2F8" \
+    "\uC314" \
+    "\uC330" \
+    "\uC34C" \
+    "\uC368" \
+    "\uC384" \
+    "\uC3A0" \
+    "\uC3BC" \
+    "\uC3D8" \
+    "\uC3F4" \
+    "\uC410" \
+    "\uC42C" \
+    "\uC448" \
+    "\uC464" \
+    "\uC480" \
+    "\uC49C" \
+    "\uC4B8" \
+    "\uC4D4" \
+    "\uC4F0" \
+    "\uC50C" \
+    "\uC528" \
+    "\uC544" \
+    "\uC560" \
+    "\uC57C" \
+    "\uC598" \
+    "\uC5B4" \
+    "\uC5D0" \
+    "\uC5EC" \
+    "\uC608" \
+    "\uC624" \
+    "\uC640" \
+    "\uC65C" \
+    "\uC678" \
+    "\uC694" \
+    "\uC6B0" \
+    "\uC6CC" \
+    "\uC6E8" \
+    "\uC704" \
+    "\uC720" \
+    "\uC73C" \
+    "\uC758" \
+    "\uC774" \
+    "\uC790" \
+    "\uC7AC" \
+    "\uC7C8" \
+    "\uC7E4" \
+    "\uC800" \
+    "\uC81C" \
+    "\uC838" \
+    "\uC854" \
+    "\uC870" \
+    "\uC88C" \
+    "\uC8A8" \
+    "\uC8C4" \
+    "\uC8E0" \
+    "\uC8FC" \
+    "\uC918" \
+    "\uC934" \
+    "\uC950" \
+    "\uC96C" \
+    "\uC988" \
+    "\uC9A4" \
+    "\uC9C0" \
+    "\uC9DC" \
+    "\uC9F8" \
+    "\uCA14" \
+    "\uCA30" \
+    "\uCA4C" \
+    "\uCA68" \
+    "\uCA84" \
+    "\uCAA0" \
+    "\uCABC" \
+    "\uCAD8" \
+    "\uCAF4" \
+    "\uCB10" \
+    "\uCB2C" \
+    "\uCB48" \
+    "\uCB64" \
+    "\uCB80" \
+    "\uCB9C" \
+    "\uCBB8" \
+    "\uCBD4" \
+    "\uCBF0" \
+    "\uCC0C" \
+    "\uCC28" \
+    "\uCC44" \
+    "\uCC60" \
+    "\uCC7C" \
+    "\uCC98" \
+    "\uCCB4" \
+    "\uCCD0" \
+    "\uCCEC" \
+    "\uCD08" \
+    "\uCD24" \
+    "\uCD40" \
+    "\uCD5C" \
+    "\uCD78" \
+    "\uCD94" \
+    "\uCDB0" \
+    "\uCDCC" \
+    "\uCDE8" \
+    "\uCE04" \
+    "\uCE20" \
+    "\uCE3C" \
+    "\uCE58" \
+    "\uCE74" \
+    "\uCE90" \
+    "\uCEAC" \
+    "\uCEC8" \
+    "\uCEE4" \
+    "\uCF00" \
+    "\uCF1C" \
+    "\uCF38" \
+    "\uCF54" \
+    "\uCF70" \
+    "\uCF8C" \
+    "\uCFA8" \
+    "\uCFC4" \
+    "\uCFE0" \
+    "\uCFFC" \
+    "\uD018" \
+    "\uD034" \
+    "\uD050" \
+    "\uD06C" \
+    "\uD088" \
+    "\uD0A4" \
+    "\uD0C0" \
+    "\uD0DC" \
+    "\uD0F8" \
+    "\uD114" \
+    "\uD130" \
+    "\uD14C" \
+    "\uD168" \
+    "\uD184" \
+    "\uD1A0" \
+    "\uD1BC" \
+    "\uD1D8" \
+    "\uD1F4" \
+    "\uD210" \
+    "\uD22C" \
+    "\uD248" \
+    "\uD264" \
+    "\uD280" \
+    "\uD29C" \
+    "\uD2B8" \
+    "\uD2D4" \
+    "\uD2F0" \
+    "\uD30C" \
+    "\uD328" \
+    "\uD344" \
+    "\uD360" \
+    "\uD37C" \
+    "\uD398" \
+    "\uD3B4" \
+    "\uD3D0" \
+    "\uD3EC" \
+    "\uD408" \
+    "\uD424" \
+    "\uD440" \
+    "\uD45C" \
+    "\uD478" \
+    "\uD494" \
+    "\uD4B0" \
+    "\uD4CC" \
+    "\uD4E8" \
+    "\uD504" \
+    "\uD520" \
+    "\uD53C" \
+    "\uD558" \
+    "\uD574" \
+    "\uD590" \
+    "\uD5AC" \
+    "\uD5C8" \
+    "\uD5E4" \
+    "\uD600" \
+    "\uD61C" \
+    "\uD638" \
+    "\uD654" \
+    "\uD670" \
+    "\uD68C" \
+    "\uD6A8" \
+    "\uD6C4" \
+    "\uD6E0" \
+    "\uD6FC" \
+    "\uD718" \
+    "\uD734" \
+    "\uD750" \
+    "\uD76C" \
+    "\uD788" \
     "][\u11A8-\u11C2]" \
     "|#{''  # decomposed Hangul syllables
     }" \
     "[\u1100-\u1112][\u1161-\u1175][\u11A8-\u11C2]?"
   REGEXP_K_STRING = "" \
-    "[\u00A0\u00A8\u00AA\u00AF\u00B2-\u00B5\u00B8-\u00BA\u00BC-\u00BE\u0132\u0133" \
-    "\u013F\u0140\u0149\u017F\u01C4-\u01CC\u01F1-\u01F3\u02B0-\u02B8\u02D8-\u02DD\u02E0-\u02E4" \
-    "\u037A\u0384\u0385\u03D0-\u03D6\u03F0-\u03F2\u03F4\u03F5\u03F9\u0587\u0675-\u0678" \
-    "\u0E33\u0EB3\u0EDC\u0EDD\u0F0C\u0F77\u0F79\u10FC\u1D2C-\u1D2E" \
-    "\u1D30-\u1D3A\u1D3C-\u1D4D\u1D4F-\u1D6A\u1D78\u1D9B-\u1DBF\u1E9A\u1E9B\u1FBD\u1FBF-\u1FC1" \
-    "\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED\u1FEE\u1FFD\u1FFE\u2000-\u200A\u2011\u2017\u2024-\u2026" \
-    "\u202F\u2033\u2034\u2036\u2037\u203C\u203E\u2047-\u2049\u2057\u205F" \
-    "\u2070\u2071\u2074-\u208E\u2090-\u209C\u20A8\u2100-\u2103\u2105-\u2107\u2109-\u2113\u2115\u2116" \
-    "\u2119-\u211D\u2120-\u2122\u2124\u2128\u212C\u212D\u212F-\u2131\u2133-\u2139\u213B-\u2140" \
-    "\u2145-\u2149\u2150-\u217F\u2189\u222C\u222D\u222F\u2230\u2460-\u24EA\u2A0C\u2A74-\u2A76" \
-    "\u2C7C\u2C7D\u2D6F\u2E9F\u2EF3\u2F00-\u2FD5\u3000\u3036\u3038-\u303A" \
-    "\u309B\u309C\u309F\u30FF\u3131-\u318E\u3192-\u319F\u3200-\u321E\u3220-\u3247\u3250-\u327E" \
-    "\u3280-\u32FE\u3300-\u33FF\uA69C\uA69D\uA770\uA7F8\uA7F9\uAB5C-\uAB5F\uFB00-\uFB06\uFB13-\uFB17" \
-    "\uFB20-\uFB29\uFB4F-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFC\uFE10-\uFE19\uFE30-\uFE44" \
-    "\uFE47-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFE70-\uFE72\uFE74\uFE76-\uFEFC\uFF01-\uFFBE\uFFC2-\uFFC7" \
-    "\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC\uFFE0-\uFFE6\uFFE8-\uFFEE\u{1D400}-\u{1D454}\u{1D456}-\u{1D49C}\u{1D49E}\u{1D49F}" \
-    "\u{1D4A2}\u{1D4A5}\u{1D4A6}\u{1D4A9}-\u{1D4AC}\u{1D4AE}-\u{1D4B9}\u{1D4BB}\u{1D4BD}-\u{1D4C3}\u{1D4C5}-\u{1D505}\u{1D507}-\u{1D50A}" \
-    "\u{1D50D}-\u{1D514}\u{1D516}-\u{1D51C}\u{1D51E}-\u{1D539}\u{1D53B}-\u{1D53E}\u{1D540}-\u{1D544}\u{1D546}\u{1D54A}-\u{1D550}\u{1D552}-\u{1D6A5}" \
-    "\u{1D6A8}-\u{1D7CB}\u{1D7CE}-\u{1D7FF}\u{1EE00}-\u{1EE03}\u{1EE05}-\u{1EE1F}\u{1EE21}\u{1EE22}\u{1EE24}\u{1EE27}\u{1EE29}-\u{1EE32}" \
-    "\u{1EE34}-\u{1EE37}\u{1EE39}\u{1EE3B}\u{1EE42}\u{1EE47}\u{1EE49}\u{1EE4B}\u{1EE4D}-\u{1EE4F}" \
-    "\u{1EE51}\u{1EE52}\u{1EE54}\u{1EE57}\u{1EE59}\u{1EE5B}\u{1EE5D}\u{1EE5F}\u{1EE61}\u{1EE62}" \
-    "\u{1EE64}\u{1EE67}-\u{1EE6A}\u{1EE6C}-\u{1EE72}\u{1EE74}-\u{1EE77}\u{1EE79}-\u{1EE7C}\u{1EE7E}\u{1EE80}-\u{1EE89}\u{1EE8B}-\u{1EE9B}" \
-    "\u{1EEA1}-\u{1EEA3}\u{1EEA5}-\u{1EEA9}\u{1EEAB}-\u{1EEBB}\u{1F100}-\u{1F10A}\u{1F110}-\u{1F12E}\u{1F130}-\u{1F14F}\u{1F16A}\u{1F16B}\u{1F190}" \
-    "\u{1F200}-\u{1F202}\u{1F210}-\u{1F23B}\u{1F240}-\u{1F248}\u{1F250}\u{1F251}" \
+    "[\u00A0" \
+    "\u00A8" \
+    "\u00AA" \
+    "\u00AF" \
+    "\u00B2-\u00B5" \
+    "\u00B8-\u00BA" \
+    "\u00BC-\u00BE" \
+    "\u0132\u0133" \
+    "\u013F\u0140" \
+    "\u0149" \
+    "\u017F" \
+    "\u01C4-\u01CC" \
+    "\u01F1-\u01F3" \
+    "\u02B0-\u02B8" \
+    "\u02D8-\u02DD" \
+    "\u02E0-\u02E4" \
+    "\u037A" \
+    "\u0384\u0385" \
+    "\u03D0-\u03D6" \
+    "\u03F0-\u03F2" \
+    "\u03F4\u03F5" \
+    "\u03F9" \
+    "\u0587" \
+    "\u0675-\u0678" \
+    "\u0E33" \
+    "\u0EB3" \
+    "\u0EDC\u0EDD" \
+    "\u0F0C" \
+    "\u0F77" \
+    "\u0F79" \
+    "\u10FC" \
+    "\u1D2C-\u1D2E" \
+    "\u1D30-\u1D3A" \
+    "\u1D3C-\u1D4D" \
+    "\u1D4F-\u1D6A" \
+    "\u1D78" \
+    "\u1D9B-\u1DBF" \
+    "\u1E9A\u1E9B" \
+    "\u1FBD" \
+    "\u1FBF-\u1FC1" \
+    "\u1FCD-\u1FCF" \
+    "\u1FDD-\u1FDF" \
+    "\u1FED\u1FEE" \
+    "\u1FFD\u1FFE" \
+    "\u2000-\u200A" \
+    "\u2011" \
+    "\u2017" \
+    "\u2024-\u2026" \
+    "\u202F" \
+    "\u2033\u2034" \
+    "\u2036\u2037" \
+    "\u203C" \
+    "\u203E" \
+    "\u2047-\u2049" \
+    "\u2057" \
+    "\u205F" \
+    "\u2070\u2071" \
+    "\u2074-\u208E" \
+    "\u2090-\u209C" \
+    "\u20A8" \
+    "\u2100-\u2103" \
+    "\u2105-\u2107" \
+    "\u2109-\u2113" \
+    "\u2115\u2116" \
+    "\u2119-\u211D" \
+    "\u2120-\u2122" \
+    "\u2124" \
+    "\u2128" \
+    "\u212C\u212D" \
+    "\u212F-\u2131" \
+    "\u2133-\u2139" \
+    "\u213B-\u2140" \
+    "\u2145-\u2149" \
+    "\u2150-\u217F" \
+    "\u2189" \
+    "\u222C\u222D" \
+    "\u222F\u2230" \
+    "\u2460-\u24EA" \
+    "\u2A0C" \
+    "\u2A74-\u2A76" \
+    "\u2C7C\u2C7D" \
+    "\u2D6F" \
+    "\u2E9F" \
+    "\u2EF3" \
+    "\u2F00-\u2FD5" \
+    "\u3000" \
+    "\u3036" \
+    "\u3038-\u303A" \
+    "\u309B\u309C" \
+    "\u309F" \
+    "\u30FF" \
+    "\u3131-\u318E" \
+    "\u3192-\u319F" \
+    "\u3200-\u321E" \
+    "\u3220-\u3247" \
+    "\u3250-\u327E" \
+    "\u3280-\u33FF" \
+    "\uA69C\uA69D" \
+    "\uA770" \
+    "\uA7F8\uA7F9" \
+    "\uAB5C-\uAB5F" \
+    "\uFB00-\uFB06" \
+    "\uFB13-\uFB17" \
+    "\uFB20-\uFB29" \
+    "\uFB4F-\uFBB1" \
+    "\uFBD3-\uFD3D" \
+    "\uFD50-\uFD8F" \
+    "\uFD92-\uFDC7" \
+    "\uFDF0-\uFDFC" \
+    "\uFE10-\uFE19" \
+    "\uFE30-\uFE44" \
+    "\uFE47-\uFE52" \
+    "\uFE54-\uFE66" \
+    "\uFE68-\uFE6B" \
+    "\uFE70-\uFE72" \
+    "\uFE74" \
+    "\uFE76-\uFEFC" \
+    "\uFF01-\uFFBE" \
+    "\uFFC2-\uFFC7" \
+    "\uFFCA-\uFFCF" \
+    "\uFFD2-\uFFD7" \
+    "\uFFDA-\uFFDC" \
+    "\uFFE0-\uFFE6" \
+    "\uFFE8-\uFFEE" \
+    "\u{1D400}-\u{1D454}" \
+    "\u{1D456}-\u{1D49C}" \
+    "\u{1D49E}\u{1D49F}" \
+    "\u{1D4A2}" \
+    "\u{1D4A5}\u{1D4A6}" \
+    "\u{1D4A9}-\u{1D4AC}" \
+    "\u{1D4AE}-\u{1D4B9}" \
+    "\u{1D4BB}" \
+    "\u{1D4BD}-\u{1D4C3}" \
+    "\u{1D4C5}-\u{1D505}" \
+    "\u{1D507}-\u{1D50A}" \
+    "\u{1D50D}-\u{1D514}" \
+    "\u{1D516}-\u{1D51C}" \
+    "\u{1D51E}-\u{1D539}" \
+    "\u{1D53B}-\u{1D53E}" \
+    "\u{1D540}-\u{1D544}" \
+    "\u{1D546}" \
+    "\u{1D54A}-\u{1D550}" \
+    "\u{1D552}-\u{1D6A5}" \
+    "\u{1D6A8}-\u{1D7CB}" \
+    "\u{1D7CE}-\u{1D7FF}" \
+    "\u{1EE00}-\u{1EE03}" \
+    "\u{1EE05}-\u{1EE1F}" \
+    "\u{1EE21}\u{1EE22}" \
+    "\u{1EE24}" \
+    "\u{1EE27}" \
+    "\u{1EE29}-\u{1EE32}" \
+    "\u{1EE34}-\u{1EE37}" \
+    "\u{1EE39}" \
+    "\u{1EE3B}" \
+    "\u{1EE42}" \
+    "\u{1EE47}" \
+    "\u{1EE49}" \
+    "\u{1EE4B}" \
+    "\u{1EE4D}-\u{1EE4F}" \
+    "\u{1EE51}\u{1EE52}" \
+    "\u{1EE54}" \
+    "\u{1EE57}" \
+    "\u{1EE59}" \
+    "\u{1EE5B}" \
+    "\u{1EE5D}" \
+    "\u{1EE5F}" \
+    "\u{1EE61}\u{1EE62}" \
+    "\u{1EE64}" \
+    "\u{1EE67}-\u{1EE6A}" \
+    "\u{1EE6C}-\u{1EE72}" \
+    "\u{1EE74}-\u{1EE77}" \
+    "\u{1EE79}-\u{1EE7C}" \
+    "\u{1EE7E}" \
+    "\u{1EE80}-\u{1EE89}" \
+    "\u{1EE8B}-\u{1EE9B}" \
+    "\u{1EEA1}-\u{1EEA3}" \
+    "\u{1EEA5}-\u{1EEA9}" \
+    "\u{1EEAB}-\u{1EEBB}" \
+    "\u{1F100}-\u{1F10A}" \
+    "\u{1F110}-\u{1F12E}" \
+    "\u{1F130}-\u{1F14F}" \
+    "\u{1F16A}-\u{1F16C}" \
+    "\u{1F190}" \
+    "\u{1F200}-\u{1F202}" \
+    "\u{1F210}-\u{1F23B}" \
+    "\u{1F240}-\u{1F248}" \
+    "\u{1F250}\u{1F251}" \
     "]"
 
   class_table = {
-    "\u0300"=>230, "\u0301"=>230, "\u0302"=>230, "\u0303"=>230, "\u0304"=>230, "\u0305"=>230, "\u0306"=>230, "\u0307"=>230,
-    "\u0308"=>230, "\u0309"=>230, "\u030A"=>230, "\u030B"=>230, "\u030C"=>230, "\u030D"=>230, "\u030E"=>230, "\u030F"=>230,
-    "\u0310"=>230, "\u0311"=>230, "\u0312"=>230, "\u0313"=>230, "\u0314"=>230, "\u0315"=>232, "\u0316"=>220, "\u0317"=>220,
-    "\u0318"=>220, "\u0319"=>220, "\u031A"=>232, "\u031B"=>216, "\u031C"=>220, "\u031D"=>220, "\u031E"=>220, "\u031F"=>220,
-    "\u0320"=>220, "\u0321"=>202, "\u0322"=>202, "\u0323"=>220, "\u0324"=>220, "\u0325"=>220, "\u0326"=>220, "\u0327"=>202,
-    "\u0328"=>202, "\u0329"=>220, "\u032A"=>220, "\u032B"=>220, "\u032C"=>220, "\u032D"=>220, "\u032E"=>220, "\u032F"=>220,
-    "\u0330"=>220, "\u0331"=>220, "\u0332"=>220, "\u0333"=>220, "\u0334"=>1, "\u0335"=>1, "\u0336"=>1, "\u0337"=>1,
-    "\u0338"=>1, "\u0339"=>220, "\u033A"=>220, "\u033B"=>220, "\u033C"=>220, "\u033D"=>230, "\u033E"=>230, "\u033F"=>230,
-    "\u0340"=>230, "\u0341"=>230, "\u0342"=>230, "\u0343"=>230, "\u0344"=>230, "\u0345"=>240, "\u0346"=>230, "\u0347"=>220,
-    "\u0348"=>220, "\u0349"=>220, "\u034A"=>230, "\u034B"=>230, "\u034C"=>230, "\u034D"=>220, "\u034E"=>220, "\u0350"=>230,
-    "\u0351"=>230, "\u0352"=>230, "\u0353"=>220, "\u0354"=>220, "\u0355"=>220, "\u0356"=>220, "\u0357"=>230, "\u0358"=>232,
-    "\u0359"=>220, "\u035A"=>220, "\u035B"=>230, "\u035C"=>233, "\u035D"=>234, "\u035E"=>234, "\u035F"=>233, "\u0360"=>234,
-    "\u0361"=>234, "\u0362"=>233, "\u0363"=>230, "\u0364"=>230, "\u0365"=>230, "\u0366"=>230, "\u0367"=>230, "\u0368"=>230,
-    "\u0369"=>230, "\u036A"=>230, "\u036B"=>230, "\u036C"=>230, "\u036D"=>230, "\u036E"=>230, "\u036F"=>230, "\u0483"=>230,
-    "\u0484"=>230, "\u0485"=>230, "\u0486"=>230, "\u0487"=>230, "\u0591"=>220, "\u0592"=>230, "\u0593"=>230, "\u0594"=>230,
-    "\u0595"=>230, "\u0596"=>220, "\u0597"=>230, "\u0598"=>230, "\u0599"=>230, "\u059A"=>222, "\u059B"=>220, "\u059C"=>230,
-    "\u059D"=>230, "\u059E"=>230, "\u059F"=>230, "\u05A0"=>230, "\u05A1"=>230, "\u05A2"=>220, "\u05A3"=>220, "\u05A4"=>220,
-    "\u05A5"=>220, "\u05A6"=>220, "\u05A7"=>220, "\u05A8"=>230, "\u05A9"=>230, "\u05AA"=>220, "\u05AB"=>230, "\u05AC"=>230,
-    "\u05AD"=>222, "\u05AE"=>228, "\u05AF"=>230, "\u05B0"=>10, "\u05B1"=>11, "\u05B2"=>12, "\u05B3"=>13, "\u05B4"=>14,
-    "\u05B5"=>15, "\u05B6"=>16, "\u05B7"=>17, "\u05B8"=>18, "\u05B9"=>19, "\u05BA"=>19, "\u05BB"=>20, "\u05BC"=>21,
-    "\u05BD"=>22, "\u05BF"=>23, "\u05C1"=>24, "\u05C2"=>25, "\u05C4"=>230, "\u05C5"=>220, "\u05C7"=>18, "\u0610"=>230,
-    "\u0611"=>230, "\u0612"=>230, "\u0613"=>230, "\u0614"=>230, "\u0615"=>230, "\u0616"=>230, "\u0617"=>230, "\u0618"=>30,
-    "\u0619"=>31, "\u061A"=>32, "\u064B"=>27, "\u064C"=>28, "\u064D"=>29, "\u064E"=>30, "\u064F"=>31, "\u0650"=>32,
-    "\u0651"=>33, "\u0652"=>34, "\u0653"=>230, "\u0654"=>230, "\u0655"=>220, "\u0656"=>220, "\u0657"=>230, "\u0658"=>230,
-    "\u0659"=>230, "\u065A"=>230, "\u065B"=>230, "\u065C"=>220, "\u065D"=>230, "\u065E"=>230, "\u065F"=>220, "\u0670"=>35,
-    "\u06D6"=>230, "\u06D7"=>230, "\u06D8"=>230, "\u06D9"=>230, "\u06DA"=>230, "\u06DB"=>230, "\u06DC"=>230, "\u06DF"=>230,
-    "\u06E0"=>230, "\u06E1"=>230, "\u06E2"=>230, "\u06E3"=>220, "\u06E4"=>230, "\u06E7"=>230, "\u06E8"=>230, "\u06EA"=>220,
-    "\u06EB"=>230, "\u06EC"=>230, "\u06ED"=>220, "\u0711"=>36, "\u0730"=>230, "\u0731"=>220, "\u0732"=>230, "\u0733"=>230,
-    "\u0734"=>220, "\u0735"=>230, "\u0736"=>230, "\u0737"=>220, "\u0738"=>220, "\u0739"=>220, "\u073A"=>230, "\u073B"=>220,
-    "\u073C"=>220, "\u073D"=>230, "\u073E"=>220, "\u073F"=>230, "\u0740"=>230, "\u0741"=>230, "\u0742"=>220, "\u0743"=>230,
-    "\u0744"=>220, "\u0745"=>230, "\u0746"=>220, "\u0747"=>230, "\u0748"=>220, "\u0749"=>230, "\u074A"=>230, "\u07EB"=>230,
-    "\u07EC"=>230, "\u07ED"=>230, "\u07EE"=>230, "\u07EF"=>230, "\u07F0"=>230, "\u07F1"=>230, "\u07F2"=>220, "\u07F3"=>230,
-    "\u0816"=>230, "\u0817"=>230, "\u0818"=>230, "\u0819"=>230, "\u081B"=>230, "\u081C"=>230, "\u081D"=>230, "\u081E"=>230,
-    "\u081F"=>230, "\u0820"=>230, "\u0821"=>230, "\u0822"=>230, "\u0823"=>230, "\u0825"=>230, "\u0826"=>230, "\u0827"=>230,
-    "\u0829"=>230, "\u082A"=>230, "\u082B"=>230, "\u082C"=>230, "\u082D"=>230, "\u0859"=>220, "\u085A"=>220, "\u085B"=>220,
-    "\u08D4"=>230, "\u08D5"=>230, "\u08D6"=>230, "\u08D7"=>230, "\u08D8"=>230, "\u08D9"=>230, "\u08DA"=>230, "\u08DB"=>230,
-    "\u08DC"=>230, "\u08DD"=>230, "\u08DE"=>230, "\u08DF"=>230, "\u08E0"=>230, "\u08E1"=>230, "\u08E3"=>220, "\u08E4"=>230,
-    "\u08E5"=>230, "\u08E6"=>220, "\u08E7"=>230, "\u08E8"=>230, "\u08E9"=>220, "\u08EA"=>230, "\u08EB"=>230, "\u08EC"=>230,
-    "\u08ED"=>220, "\u08EE"=>220, "\u08EF"=>220, "\u08F0"=>27, "\u08F1"=>28, "\u08F2"=>29, "\u08F3"=>230, "\u08F4"=>230,
-    "\u08F5"=>230, "\u08F6"=>220, "\u08F7"=>230, "\u08F8"=>230, "\u08F9"=>220, "\u08FA"=>220, "\u08FB"=>230, "\u08FC"=>230,
-    "\u08FD"=>230, "\u08FE"=>230, "\u08FF"=>230, "\u093C"=>7, "\u094D"=>9, "\u0951"=>230, "\u0952"=>220, "\u0953"=>230,
-    "\u0954"=>230, "\u09BC"=>7, "\u09CD"=>9, "\u0A3C"=>7, "\u0A4D"=>9, "\u0ABC"=>7, "\u0ACD"=>9, "\u0B3C"=>7,
-    "\u0B4D"=>9, "\u0BCD"=>9, "\u0C4D"=>9, "\u0C55"=>84, "\u0C56"=>91, "\u0CBC"=>7, "\u0CCD"=>9, "\u0D3B"=>9,
-    "\u0D3C"=>9, "\u0D4D"=>9, "\u0DCA"=>9, "\u0E38"=>103, "\u0E39"=>103, "\u0E3A"=>9, "\u0E48"=>107, "\u0E49"=>107,
-    "\u0E4A"=>107, "\u0E4B"=>107, "\u0EB8"=>118, "\u0EB9"=>118, "\u0EC8"=>122, "\u0EC9"=>122, "\u0ECA"=>122, "\u0ECB"=>122,
-    "\u0F18"=>220, "\u0F19"=>220, "\u0F35"=>220, "\u0F37"=>220, "\u0F39"=>216, "\u0F71"=>129, "\u0F72"=>130, "\u0F74"=>132,
-    "\u0F7A"=>130, "\u0F7B"=>130, "\u0F7C"=>130, "\u0F7D"=>130, "\u0F80"=>130, "\u0F82"=>230, "\u0F83"=>230, "\u0F84"=>9,
-    "\u0F86"=>230, "\u0F87"=>230, "\u0FC6"=>220, "\u1037"=>7, "\u1039"=>9, "\u103A"=>9, "\u108D"=>220, "\u135D"=>230,
-    "\u135E"=>230, "\u135F"=>230, "\u1714"=>9, "\u1734"=>9, "\u17D2"=>9, "\u17DD"=>230, "\u18A9"=>228, "\u1939"=>222,
-    "\u193A"=>230, "\u193B"=>220, "\u1A17"=>230, "\u1A18"=>220, "\u1A60"=>9, "\u1A75"=>230, "\u1A76"=>230, "\u1A77"=>230,
-    "\u1A78"=>230, "\u1A79"=>230, "\u1A7A"=>230, "\u1A7B"=>230, "\u1A7C"=>230, "\u1A7F"=>220, "\u1AB0"=>230, "\u1AB1"=>230,
-    "\u1AB2"=>230, "\u1AB3"=>230, "\u1AB4"=>230, "\u1AB5"=>220, "\u1AB6"=>220, "\u1AB7"=>220, "\u1AB8"=>220, "\u1AB9"=>220,
-    "\u1ABA"=>220, "\u1ABB"=>230, "\u1ABC"=>230, "\u1ABD"=>220, "\u1B34"=>7, "\u1B44"=>9, "\u1B6B"=>230, "\u1B6C"=>220,
-    "\u1B6D"=>230, "\u1B6E"=>230, "\u1B6F"=>230, "\u1B70"=>230, "\u1B71"=>230, "\u1B72"=>230, "\u1B73"=>230, "\u1BAA"=>9,
-    "\u1BAB"=>9, "\u1BE6"=>7, "\u1BF2"=>9, "\u1BF3"=>9, "\u1C37"=>7, "\u1CD0"=>230, "\u1CD1"=>230, "\u1CD2"=>230,
-    "\u1CD4"=>1, "\u1CD5"=>220, "\u1CD6"=>220, "\u1CD7"=>220, "\u1CD8"=>220, "\u1CD9"=>220, "\u1CDA"=>230, "\u1CDB"=>230,
-    "\u1CDC"=>220, "\u1CDD"=>220, "\u1CDE"=>220, "\u1CDF"=>220, "\u1CE0"=>230, "\u1CE2"=>1, "\u1CE3"=>1, "\u1CE4"=>1,
-    "\u1CE5"=>1, "\u1CE6"=>1, "\u1CE7"=>1, "\u1CE8"=>1, "\u1CED"=>220, "\u1CF4"=>230, "\u1CF8"=>230, "\u1CF9"=>230,
-    "\u1DC0"=>230, "\u1DC1"=>230, "\u1DC2"=>220, "\u1DC3"=>230, "\u1DC4"=>230, "\u1DC5"=>230, "\u1DC6"=>230, "\u1DC7"=>230,
-    "\u1DC8"=>230, "\u1DC9"=>230, "\u1DCA"=>220, "\u1DCB"=>230, "\u1DCC"=>230, "\u1DCD"=>234, "\u1DCE"=>214, "\u1DCF"=>220,
-    "\u1DD0"=>202, "\u1DD1"=>230, "\u1DD2"=>230, "\u1DD3"=>230, "\u1DD4"=>230, "\u1DD5"=>230, "\u1DD6"=>230, "\u1DD7"=>230,
-    "\u1DD8"=>230, "\u1DD9"=>230, "\u1DDA"=>230, "\u1DDB"=>230, "\u1DDC"=>230, "\u1DDD"=>230, "\u1DDE"=>230, "\u1DDF"=>230,
-    "\u1DE0"=>230, "\u1DE1"=>230, "\u1DE2"=>230, "\u1DE3"=>230, "\u1DE4"=>230, "\u1DE5"=>230, "\u1DE6"=>230, "\u1DE7"=>230,
-    "\u1DE8"=>230, "\u1DE9"=>230, "\u1DEA"=>230, "\u1DEB"=>230, "\u1DEC"=>230, "\u1DED"=>230, "\u1DEE"=>230, "\u1DEF"=>230,
-    "\u1DF0"=>230, "\u1DF1"=>230, "\u1DF2"=>230, "\u1DF3"=>230, "\u1DF4"=>230, "\u1DF5"=>230, "\u1DF6"=>232, "\u1DF7"=>228,
-    "\u1DF8"=>228, "\u1DF9"=>220, "\u1DFB"=>230, "\u1DFC"=>233, "\u1DFD"=>220, "\u1DFE"=>230, "\u1DFF"=>220, "\u20D0"=>230,
-    "\u20D1"=>230, "\u20D2"=>1, "\u20D3"=>1, "\u20D4"=>230, "\u20D5"=>230, "\u20D6"=>230, "\u20D7"=>230, "\u20D8"=>1,
-    "\u20D9"=>1, "\u20DA"=>1, "\u20DB"=>230, "\u20DC"=>230, "\u20E1"=>230, "\u20E5"=>1, "\u20E6"=>1, "\u20E7"=>230,
-    "\u20E8"=>220, "\u20E9"=>230, "\u20EA"=>1, "\u20EB"=>1, "\u20EC"=>220, "\u20ED"=>220, "\u20EE"=>220, "\u20EF"=>220,
-    "\u20F0"=>230, "\u2CEF"=>230, "\u2CF0"=>230, "\u2CF1"=>230, "\u2D7F"=>9, "\u2DE0"=>230, "\u2DE1"=>230, "\u2DE2"=>230,
-    "\u2DE3"=>230, "\u2DE4"=>230, "\u2DE5"=>230, "\u2DE6"=>230, "\u2DE7"=>230, "\u2DE8"=>230, "\u2DE9"=>230, "\u2DEA"=>230,
-    "\u2DEB"=>230, "\u2DEC"=>230, "\u2DED"=>230, "\u2DEE"=>230, "\u2DEF"=>230, "\u2DF0"=>230, "\u2DF1"=>230, "\u2DF2"=>230,
-    "\u2DF3"=>230, "\u2DF4"=>230, "\u2DF5"=>230, "\u2DF6"=>230, "\u2DF7"=>230, "\u2DF8"=>230, "\u2DF9"=>230, "\u2DFA"=>230,
-    "\u2DFB"=>230, "\u2DFC"=>230, "\u2DFD"=>230, "\u2DFE"=>230, "\u2DFF"=>230, "\u302A"=>218, "\u302B"=>228, "\u302C"=>232,
-    "\u302D"=>222, "\u302E"=>224, "\u302F"=>224, "\u3099"=>8, "\u309A"=>8, "\uA66F"=>230, "\uA674"=>230, "\uA675"=>230,
-    "\uA676"=>230, "\uA677"=>230, "\uA678"=>230, "\uA679"=>230, "\uA67A"=>230, "\uA67B"=>230, "\uA67C"=>230, "\uA67D"=>230,
-    "\uA69E"=>230, "\uA69F"=>230, "\uA6F0"=>230, "\uA6F1"=>230, "\uA806"=>9, "\uA8C4"=>9, "\uA8E0"=>230, "\uA8E1"=>230,
-    "\uA8E2"=>230, "\uA8E3"=>230, "\uA8E4"=>230, "\uA8E5"=>230, "\uA8E6"=>230, "\uA8E7"=>230, "\uA8E8"=>230, "\uA8E9"=>230,
-    "\uA8EA"=>230, "\uA8EB"=>230, "\uA8EC"=>230, "\uA8ED"=>230, "\uA8EE"=>230, "\uA8EF"=>230, "\uA8F0"=>230, "\uA8F1"=>230,
-    "\uA92B"=>220, "\uA92C"=>220, "\uA92D"=>220, "\uA953"=>9, "\uA9B3"=>7, "\uA9C0"=>9, "\uAAB0"=>230, "\uAAB2"=>230,
-    "\uAAB3"=>230, "\uAAB4"=>220, "\uAAB7"=>230, "\uAAB8"=>230, "\uAABE"=>230, "\uAABF"=>230, "\uAAC1"=>230, "\uAAF6"=>9,
-    "\uABED"=>9, "\uFB1E"=>26, "\uFE20"=>230, "\uFE21"=>230, "\uFE22"=>230, "\uFE23"=>230, "\uFE24"=>230, "\uFE25"=>230,
-    "\uFE26"=>230, "\uFE27"=>220, "\uFE28"=>220, "\uFE29"=>220, "\uFE2A"=>220, "\uFE2B"=>220, "\uFE2C"=>220, "\uFE2D"=>220,
-    "\uFE2E"=>230, "\uFE2F"=>230, "\u{101FD}"=>220, "\u{102E0}"=>220, "\u{10376}"=>230, "\u{10377}"=>230, "\u{10378}"=>230, "\u{10379}"=>230,
-    "\u{1037A}"=>230, "\u{10A0D}"=>220, "\u{10A0F}"=>230, "\u{10A38}"=>230, "\u{10A39}"=>1, "\u{10A3A}"=>220, "\u{10A3F}"=>9, "\u{10AE5}"=>230,
-    "\u{10AE6}"=>220, "\u{11046}"=>9, "\u{1107F}"=>9, "\u{110B9}"=>9, "\u{110BA}"=>7, "\u{11100}"=>230, "\u{11101}"=>230, "\u{11102}"=>230,
-    "\u{11133}"=>9, "\u{11134}"=>9, "\u{11173}"=>7, "\u{111C0}"=>9, "\u{111CA}"=>7, "\u{11235}"=>9, "\u{11236}"=>7, "\u{112E9}"=>7,
-    "\u{112EA}"=>9, "\u{1133C}"=>7, "\u{1134D}"=>9, "\u{11366}"=>230, "\u{11367}"=>230, "\u{11368}"=>230, "\u{11369}"=>230, "\u{1136A}"=>230,
-    "\u{1136B}"=>230, "\u{1136C}"=>230, "\u{11370}"=>230, "\u{11371}"=>230, "\u{11372}"=>230, "\u{11373}"=>230, "\u{11374}"=>230, "\u{11442}"=>9,
-    "\u{11446}"=>7, "\u{114C2}"=>9, "\u{114C3}"=>7, "\u{115BF}"=>9, "\u{115C0}"=>7, "\u{1163F}"=>9, "\u{116B6}"=>9, "\u{116B7}"=>7,
-    "\u{1172B}"=>9, "\u{11A34}"=>9, "\u{11A47}"=>9, "\u{11A99}"=>9, "\u{11C3F}"=>9, "\u{11D42}"=>7, "\u{11D44}"=>9, "\u{11D45}"=>9,
-    "\u{16AF0}"=>1, "\u{16AF1}"=>1, "\u{16AF2}"=>1, "\u{16AF3}"=>1, "\u{16AF4}"=>1, "\u{16B30}"=>230, "\u{16B31}"=>230, "\u{16B32}"=>230,
-    "\u{16B33}"=>230, "\u{16B34}"=>230, "\u{16B35}"=>230, "\u{16B36}"=>230, "\u{1BC9E}"=>1, "\u{1D165}"=>216, "\u{1D166}"=>216, "\u{1D167}"=>1,
-    "\u{1D168}"=>1, "\u{1D169}"=>1, "\u{1D16D}"=>226, "\u{1D16E}"=>216, "\u{1D16F}"=>216, "\u{1D170}"=>216, "\u{1D171}"=>216, "\u{1D172}"=>216,
-    "\u{1D17B}"=>220, "\u{1D17C}"=>220, "\u{1D17D}"=>220, "\u{1D17E}"=>220, "\u{1D17F}"=>220, "\u{1D180}"=>220, "\u{1D181}"=>220, "\u{1D182}"=>220,
-    "\u{1D185}"=>230, "\u{1D186}"=>230, "\u{1D187}"=>230, "\u{1D188}"=>230, "\u{1D189}"=>230, "\u{1D18A}"=>220, "\u{1D18B}"=>220, "\u{1D1AA}"=>230,
-    "\u{1D1AB}"=>230, "\u{1D1AC}"=>230, "\u{1D1AD}"=>230, "\u{1D242}"=>230, "\u{1D243}"=>230, "\u{1D244}"=>230, "\u{1E000}"=>230, "\u{1E001}"=>230,
-    "\u{1E002}"=>230, "\u{1E003}"=>230, "\u{1E004}"=>230, "\u{1E005}"=>230, "\u{1E006}"=>230, "\u{1E008}"=>230, "\u{1E009}"=>230, "\u{1E00A}"=>230,
-    "\u{1E00B}"=>230, "\u{1E00C}"=>230, "\u{1E00D}"=>230, "\u{1E00E}"=>230, "\u{1E00F}"=>230, "\u{1E010}"=>230, "\u{1E011}"=>230, "\u{1E012}"=>230,
-    "\u{1E013}"=>230, "\u{1E014}"=>230, "\u{1E015}"=>230, "\u{1E016}"=>230, "\u{1E017}"=>230, "\u{1E018}"=>230, "\u{1E01B}"=>230, "\u{1E01C}"=>230,
-    "\u{1E01D}"=>230, "\u{1E01E}"=>230, "\u{1E01F}"=>230, "\u{1E020}"=>230, "\u{1E021}"=>230, "\u{1E023}"=>230, "\u{1E024}"=>230, "\u{1E026}"=>230,
-    "\u{1E027}"=>230, "\u{1E028}"=>230, "\u{1E029}"=>230, "\u{1E02A}"=>230, "\u{1E8D0}"=>220, "\u{1E8D1}"=>220, "\u{1E8D2}"=>220, "\u{1E8D3}"=>220,
-    "\u{1E8D4}"=>220, "\u{1E8D5}"=>220, "\u{1E8D6}"=>220, "\u{1E944}"=>230, "\u{1E945}"=>230, "\u{1E946}"=>230, "\u{1E947}"=>230, "\u{1E948}"=>230,
-    "\u{1E949}"=>230, "\u{1E94A}"=>7,
+    "\u0300"=>230,
+    "\u0301"=>230,
+    "\u0302"=>230,
+    "\u0303"=>230,
+    "\u0304"=>230,
+    "\u0305"=>230,
+    "\u0306"=>230,
+    "\u0307"=>230,
+    "\u0308"=>230,
+    "\u0309"=>230,
+    "\u030A"=>230,
+    "\u030B"=>230,
+    "\u030C"=>230,
+    "\u030D"=>230,
+    "\u030E"=>230,
+    "\u030F"=>230,
+    "\u0310"=>230,
+    "\u0311"=>230,
+    "\u0312"=>230,
+    "\u0313"=>230,
+    "\u0314"=>230,
+    "\u0315"=>232,
+    "\u0316"=>220,
+    "\u0317"=>220,
+    "\u0318"=>220,
+    "\u0319"=>220,
+    "\u031A"=>232,
+    "\u031B"=>216,
+    "\u031C"=>220,
+    "\u031D"=>220,
+    "\u031E"=>220,
+    "\u031F"=>220,
+    "\u0320"=>220,
+    "\u0321"=>202,
+    "\u0322"=>202,
+    "\u0323"=>220,
+    "\u0324"=>220,
+    "\u0325"=>220,
+    "\u0326"=>220,
+    "\u0327"=>202,
+    "\u0328"=>202,
+    "\u0329"=>220,
+    "\u032A"=>220,
+    "\u032B"=>220,
+    "\u032C"=>220,
+    "\u032D"=>220,
+    "\u032E"=>220,
+    "\u032F"=>220,
+    "\u0330"=>220,
+    "\u0331"=>220,
+    "\u0332"=>220,
+    "\u0333"=>220,
+    "\u0334"=>1,
+    "\u0335"=>1,
+    "\u0336"=>1,
+    "\u0337"=>1,
+    "\u0338"=>1,
+    "\u0339"=>220,
+    "\u033A"=>220,
+    "\u033B"=>220,
+    "\u033C"=>220,
+    "\u033D"=>230,
+    "\u033E"=>230,
+    "\u033F"=>230,
+    "\u0340"=>230,
+    "\u0341"=>230,
+    "\u0342"=>230,
+    "\u0343"=>230,
+    "\u0344"=>230,
+    "\u0345"=>240,
+    "\u0346"=>230,
+    "\u0347"=>220,
+    "\u0348"=>220,
+    "\u0349"=>220,
+    "\u034A"=>230,
+    "\u034B"=>230,
+    "\u034C"=>230,
+    "\u034D"=>220,
+    "\u034E"=>220,
+    "\u0350"=>230,
+    "\u0351"=>230,
+    "\u0352"=>230,
+    "\u0353"=>220,
+    "\u0354"=>220,
+    "\u0355"=>220,
+    "\u0356"=>220,
+    "\u0357"=>230,
+    "\u0358"=>232,
+    "\u0359"=>220,
+    "\u035A"=>220,
+    "\u035B"=>230,
+    "\u035C"=>233,
+    "\u035D"=>234,
+    "\u035E"=>234,
+    "\u035F"=>233,
+    "\u0360"=>234,
+    "\u0361"=>234,
+    "\u0362"=>233,
+    "\u0363"=>230,
+    "\u0364"=>230,
+    "\u0365"=>230,
+    "\u0366"=>230,
+    "\u0367"=>230,
+    "\u0368"=>230,
+    "\u0369"=>230,
+    "\u036A"=>230,
+    "\u036B"=>230,
+    "\u036C"=>230,
+    "\u036D"=>230,
+    "\u036E"=>230,
+    "\u036F"=>230,
+    "\u0483"=>230,
+    "\u0484"=>230,
+    "\u0485"=>230,
+    "\u0486"=>230,
+    "\u0487"=>230,
+    "\u0591"=>220,
+    "\u0592"=>230,
+    "\u0593"=>230,
+    "\u0594"=>230,
+    "\u0595"=>230,
+    "\u0596"=>220,
+    "\u0597"=>230,
+    "\u0598"=>230,
+    "\u0599"=>230,
+    "\u059A"=>222,
+    "\u059B"=>220,
+    "\u059C"=>230,
+    "\u059D"=>230,
+    "\u059E"=>230,
+    "\u059F"=>230,
+    "\u05A0"=>230,
+    "\u05A1"=>230,
+    "\u05A2"=>220,
+    "\u05A3"=>220,
+    "\u05A4"=>220,
+    "\u05A5"=>220,
+    "\u05A6"=>220,
+    "\u05A7"=>220,
+    "\u05A8"=>230,
+    "\u05A9"=>230,
+    "\u05AA"=>220,
+    "\u05AB"=>230,
+    "\u05AC"=>230,
+    "\u05AD"=>222,
+    "\u05AE"=>228,
+    "\u05AF"=>230,
+    "\u05B0"=>10,
+    "\u05B1"=>11,
+    "\u05B2"=>12,
+    "\u05B3"=>13,
+    "\u05B4"=>14,
+    "\u05B5"=>15,
+    "\u05B6"=>16,
+    "\u05B7"=>17,
+    "\u05B8"=>18,
+    "\u05B9"=>19,
+    "\u05BA"=>19,
+    "\u05BB"=>20,
+    "\u05BC"=>21,
+    "\u05BD"=>22,
+    "\u05BF"=>23,
+    "\u05C1"=>24,
+    "\u05C2"=>25,
+    "\u05C4"=>230,
+    "\u05C5"=>220,
+    "\u05C7"=>18,
+    "\u0610"=>230,
+    "\u0611"=>230,
+    "\u0612"=>230,
+    "\u0613"=>230,
+    "\u0614"=>230,
+    "\u0615"=>230,
+    "\u0616"=>230,
+    "\u0617"=>230,
+    "\u0618"=>30,
+    "\u0619"=>31,
+    "\u061A"=>32,
+    "\u064B"=>27,
+    "\u064C"=>28,
+    "\u064D"=>29,
+    "\u064E"=>30,
+    "\u064F"=>31,
+    "\u0650"=>32,
+    "\u0651"=>33,
+    "\u0652"=>34,
+    "\u0653"=>230,
+    "\u0654"=>230,
+    "\u0655"=>220,
+    "\u0656"=>220,
+    "\u0657"=>230,
+    "\u0658"=>230,
+    "\u0659"=>230,
+    "\u065A"=>230,
+    "\u065B"=>230,
+    "\u065C"=>220,
+    "\u065D"=>230,
+    "\u065E"=>230,
+    "\u065F"=>220,
+    "\u0670"=>35,
+    "\u06D6"=>230,
+    "\u06D7"=>230,
+    "\u06D8"=>230,
+    "\u06D9"=>230,
+    "\u06DA"=>230,
+    "\u06DB"=>230,
+    "\u06DC"=>230,
+    "\u06DF"=>230,
+    "\u06E0"=>230,
+    "\u06E1"=>230,
+    "\u06E2"=>230,
+    "\u06E3"=>220,
+    "\u06E4"=>230,
+    "\u06E7"=>230,
+    "\u06E8"=>230,
+    "\u06EA"=>220,
+    "\u06EB"=>230,
+    "\u06EC"=>230,
+    "\u06ED"=>220,
+    "\u0711"=>36,
+    "\u0730"=>230,
+    "\u0731"=>220,
+    "\u0732"=>230,
+    "\u0733"=>230,
+    "\u0734"=>220,
+    "\u0735"=>230,
+    "\u0736"=>230,
+    "\u0737"=>220,
+    "\u0738"=>220,
+    "\u0739"=>220,
+    "\u073A"=>230,
+    "\u073B"=>220,
+    "\u073C"=>220,
+    "\u073D"=>230,
+    "\u073E"=>220,
+    "\u073F"=>230,
+    "\u0740"=>230,
+    "\u0741"=>230,
+    "\u0742"=>220,
+    "\u0743"=>230,
+    "\u0744"=>220,
+    "\u0745"=>230,
+    "\u0746"=>220,
+    "\u0747"=>230,
+    "\u0748"=>220,
+    "\u0749"=>230,
+    "\u074A"=>230,
+    "\u07EB"=>230,
+    "\u07EC"=>230,
+    "\u07ED"=>230,
+    "\u07EE"=>230,
+    "\u07EF"=>230,
+    "\u07F0"=>230,
+    "\u07F1"=>230,
+    "\u07F2"=>220,
+    "\u07F3"=>230,
+    "\u07FD"=>220,
+    "\u0816"=>230,
+    "\u0817"=>230,
+    "\u0818"=>230,
+    "\u0819"=>230,
+    "\u081B"=>230,
+    "\u081C"=>230,
+    "\u081D"=>230,
+    "\u081E"=>230,
+    "\u081F"=>230,
+    "\u0820"=>230,
+    "\u0821"=>230,
+    "\u0822"=>230,
+    "\u0823"=>230,
+    "\u0825"=>230,
+    "\u0826"=>230,
+    "\u0827"=>230,
+    "\u0829"=>230,
+    "\u082A"=>230,
+    "\u082B"=>230,
+    "\u082C"=>230,
+    "\u082D"=>230,
+    "\u0859"=>220,
+    "\u085A"=>220,
+    "\u085B"=>220,
+    "\u08D3"=>220,
+    "\u08D4"=>230,
+    "\u08D5"=>230,
+    "\u08D6"=>230,
+    "\u08D7"=>230,
+    "\u08D8"=>230,
+    "\u08D9"=>230,
+    "\u08DA"=>230,
+    "\u08DB"=>230,
+    "\u08DC"=>230,
+    "\u08DD"=>230,
+    "\u08DE"=>230,
+    "\u08DF"=>230,
+    "\u08E0"=>230,
+    "\u08E1"=>230,
+    "\u08E3"=>220,
+    "\u08E4"=>230,
+    "\u08E5"=>230,
+    "\u08E6"=>220,
+    "\u08E7"=>230,
+    "\u08E8"=>230,
+    "\u08E9"=>220,
+    "\u08EA"=>230,
+    "\u08EB"=>230,
+    "\u08EC"=>230,
+    "\u08ED"=>220,
+    "\u08EE"=>220,
+    "\u08EF"=>220,
+    "\u08F0"=>27,
+    "\u08F1"=>28,
+    "\u08F2"=>29,
+    "\u08F3"=>230,
+    "\u08F4"=>230,
+    "\u08F5"=>230,
+    "\u08F6"=>220,
+    "\u08F7"=>230,
+    "\u08F8"=>230,
+    "\u08F9"=>220,
+    "\u08FA"=>220,
+    "\u08FB"=>230,
+    "\u08FC"=>230,
+    "\u08FD"=>230,
+    "\u08FE"=>230,
+    "\u08FF"=>230,
+    "\u093C"=>7,
+    "\u094D"=>9,
+    "\u0951"=>230,
+    "\u0952"=>220,
+    "\u0953"=>230,
+    "\u0954"=>230,
+    "\u09BC"=>7,
+    "\u09CD"=>9,
+    "\u09FE"=>230,
+    "\u0A3C"=>7,
+    "\u0A4D"=>9,
+    "\u0ABC"=>7,
+    "\u0ACD"=>9,
+    "\u0B3C"=>7,
+    "\u0B4D"=>9,
+    "\u0BCD"=>9,
+    "\u0C4D"=>9,
+    "\u0C55"=>84,
+    "\u0C56"=>91,
+    "\u0CBC"=>7,
+    "\u0CCD"=>9,
+    "\u0D3B"=>9,
+    "\u0D3C"=>9,
+    "\u0D4D"=>9,
+    "\u0DCA"=>9,
+    "\u0E38"=>103,
+    "\u0E39"=>103,
+    "\u0E3A"=>9,
+    "\u0E48"=>107,
+    "\u0E49"=>107,
+    "\u0E4A"=>107,
+    "\u0E4B"=>107,
+    "\u0EB8"=>118,
+    "\u0EB9"=>118,
+    "\u0EBA"=>9,
+    "\u0EC8"=>122,
+    "\u0EC9"=>122,
+    "\u0ECA"=>122,
+    "\u0ECB"=>122,
+    "\u0F18"=>220,
+    "\u0F19"=>220,
+    "\u0F35"=>220,
+    "\u0F37"=>220,
+    "\u0F39"=>216,
+    "\u0F71"=>129,
+    "\u0F72"=>130,
+    "\u0F74"=>132,
+    "\u0F7A"=>130,
+    "\u0F7B"=>130,
+    "\u0F7C"=>130,
+    "\u0F7D"=>130,
+    "\u0F80"=>130,
+    "\u0F82"=>230,
+    "\u0F83"=>230,
+    "\u0F84"=>9,
+    "\u0F86"=>230,
+    "\u0F87"=>230,
+    "\u0FC6"=>220,
+    "\u1037"=>7,
+    "\u1039"=>9,
+    "\u103A"=>9,
+    "\u108D"=>220,
+    "\u135D"=>230,
+    "\u135E"=>230,
+    "\u135F"=>230,
+    "\u1714"=>9,
+    "\u1734"=>9,
+    "\u17D2"=>9,
+    "\u17DD"=>230,
+    "\u18A9"=>228,
+    "\u1939"=>222,
+    "\u193A"=>230,
+    "\u193B"=>220,
+    "\u1A17"=>230,
+    "\u1A18"=>220,
+    "\u1A60"=>9,
+    "\u1A75"=>230,
+    "\u1A76"=>230,
+    "\u1A77"=>230,
+    "\u1A78"=>230,
+    "\u1A79"=>230,
+    "\u1A7A"=>230,
+    "\u1A7B"=>230,
+    "\u1A7C"=>230,
+    "\u1A7F"=>220,
+    "\u1AB0"=>230,
+    "\u1AB1"=>230,
+    "\u1AB2"=>230,
+    "\u1AB3"=>230,
+    "\u1AB4"=>230,
+    "\u1AB5"=>220,
+    "\u1AB6"=>220,
+    "\u1AB7"=>220,
+    "\u1AB8"=>220,
+    "\u1AB9"=>220,
+    "\u1ABA"=>220,
+    "\u1ABB"=>230,
+    "\u1ABC"=>230,
+    "\u1ABD"=>220,
+    "\u1B34"=>7,
+    "\u1B44"=>9,
+    "\u1B6B"=>230,
+    "\u1B6C"=>220,
+    "\u1B6D"=>230,
+    "\u1B6E"=>230,
+    "\u1B6F"=>230,
+    "\u1B70"=>230,
+    "\u1B71"=>230,
+    "\u1B72"=>230,
+    "\u1B73"=>230,
+    "\u1BAA"=>9,
+    "\u1BAB"=>9,
+    "\u1BE6"=>7,
+    "\u1BF2"=>9,
+    "\u1BF3"=>9,
+    "\u1C37"=>7,
+    "\u1CD0"=>230,
+    "\u1CD1"=>230,
+    "\u1CD2"=>230,
+    "\u1CD4"=>1,
+    "\u1CD5"=>220,
+    "\u1CD6"=>220,
+    "\u1CD7"=>220,
+    "\u1CD8"=>220,
+    "\u1CD9"=>220,
+    "\u1CDA"=>230,
+    "\u1CDB"=>230,
+    "\u1CDC"=>220,
+    "\u1CDD"=>220,
+    "\u1CDE"=>220,
+    "\u1CDF"=>220,
+    "\u1CE0"=>230,
+    "\u1CE2"=>1,
+    "\u1CE3"=>1,
+    "\u1CE4"=>1,
+    "\u1CE5"=>1,
+    "\u1CE6"=>1,
+    "\u1CE7"=>1,
+    "\u1CE8"=>1,
+    "\u1CED"=>220,
+    "\u1CF4"=>230,
+    "\u1CF8"=>230,
+    "\u1CF9"=>230,
+    "\u1DC0"=>230,
+    "\u1DC1"=>230,
+    "\u1DC2"=>220,
+    "\u1DC3"=>230,
+    "\u1DC4"=>230,
+    "\u1DC5"=>230,
+    "\u1DC6"=>230,
+    "\u1DC7"=>230,
+    "\u1DC8"=>230,
+    "\u1DC9"=>230,
+    "\u1DCA"=>220,
+    "\u1DCB"=>230,
+    "\u1DCC"=>230,
+    "\u1DCD"=>234,
+    "\u1DCE"=>214,
+    "\u1DCF"=>220,
+    "\u1DD0"=>202,
+    "\u1DD1"=>230,
+    "\u1DD2"=>230,
+    "\u1DD3"=>230,
+    "\u1DD4"=>230,
+    "\u1DD5"=>230,
+    "\u1DD6"=>230,
+    "\u1DD7"=>230,
+    "\u1DD8"=>230,
+    "\u1DD9"=>230,
+    "\u1DDA"=>230,
+    "\u1DDB"=>230,
+    "\u1DDC"=>230,
+    "\u1DDD"=>230,
+    "\u1DDE"=>230,
+    "\u1DDF"=>230,
+    "\u1DE0"=>230,
+    "\u1DE1"=>230,
+    "\u1DE2"=>230,
+    "\u1DE3"=>230,
+    "\u1DE4"=>230,
+    "\u1DE5"=>230,
+    "\u1DE6"=>230,
+    "\u1DE7"=>230,
+    "\u1DE8"=>230,
+    "\u1DE9"=>230,
+    "\u1DEA"=>230,
+    "\u1DEB"=>230,
+    "\u1DEC"=>230,
+    "\u1DED"=>230,
+    "\u1DEE"=>230,
+    "\u1DEF"=>230,
+    "\u1DF0"=>230,
+    "\u1DF1"=>230,
+    "\u1DF2"=>230,
+    "\u1DF3"=>230,
+    "\u1DF4"=>230,
+    "\u1DF5"=>230,
+    "\u1DF6"=>232,
+    "\u1DF7"=>228,
+    "\u1DF8"=>228,
+    "\u1DF9"=>220,
+    "\u1DFB"=>230,
+    "\u1DFC"=>233,
+    "\u1DFD"=>220,
+    "\u1DFE"=>230,
+    "\u1DFF"=>220,
+    "\u20D0"=>230,
+    "\u20D1"=>230,
+    "\u20D2"=>1,
+    "\u20D3"=>1,
+    "\u20D4"=>230,
+    "\u20D5"=>230,
+    "\u20D6"=>230,
+    "\u20D7"=>230,
+    "\u20D8"=>1,
+    "\u20D9"=>1,
+    "\u20DA"=>1,
+    "\u20DB"=>230,
+    "\u20DC"=>230,
+    "\u20E1"=>230,
+    "\u20E5"=>1,
+    "\u20E6"=>1,
+    "\u20E7"=>230,
+    "\u20E8"=>220,
+    "\u20E9"=>230,
+    "\u20EA"=>1,
+    "\u20EB"=>1,
+    "\u20EC"=>220,
+    "\u20ED"=>220,
+    "\u20EE"=>220,
+    "\u20EF"=>220,
+    "\u20F0"=>230,
+    "\u2CEF"=>230,
+    "\u2CF0"=>230,
+    "\u2CF1"=>230,
+    "\u2D7F"=>9,
+    "\u2DE0"=>230,
+    "\u2DE1"=>230,
+    "\u2DE2"=>230,
+    "\u2DE3"=>230,
+    "\u2DE4"=>230,
+    "\u2DE5"=>230,
+    "\u2DE6"=>230,
+    "\u2DE7"=>230,
+    "\u2DE8"=>230,
+    "\u2DE9"=>230,
+    "\u2DEA"=>230,
+    "\u2DEB"=>230,
+    "\u2DEC"=>230,
+    "\u2DED"=>230,
+    "\u2DEE"=>230,
+    "\u2DEF"=>230,
+    "\u2DF0"=>230,
+    "\u2DF1"=>230,
+    "\u2DF2"=>230,
+    "\u2DF3"=>230,
+    "\u2DF4"=>230,
+    "\u2DF5"=>230,
+    "\u2DF6"=>230,
+    "\u2DF7"=>230,
+    "\u2DF8"=>230,
+    "\u2DF9"=>230,
+    "\u2DFA"=>230,
+    "\u2DFB"=>230,
+    "\u2DFC"=>230,
+    "\u2DFD"=>230,
+    "\u2DFE"=>230,
+    "\u2DFF"=>230,
+    "\u302A"=>218,
+    "\u302B"=>228,
+    "\u302C"=>232,
+    "\u302D"=>222,
+    "\u302E"=>224,
+    "\u302F"=>224,
+    "\u3099"=>8,
+    "\u309A"=>8,
+    "\uA66F"=>230,
+    "\uA674"=>230,
+    "\uA675"=>230,
+    "\uA676"=>230,
+    "\uA677"=>230,
+    "\uA678"=>230,
+    "\uA679"=>230,
+    "\uA67A"=>230,
+    "\uA67B"=>230,
+    "\uA67C"=>230,
+    "\uA67D"=>230,
+    "\uA69E"=>230,
+    "\uA69F"=>230,
+    "\uA6F0"=>230,
+    "\uA6F1"=>230,
+    "\uA806"=>9,
+    "\uA8C4"=>9,
+    "\uA8E0"=>230,
+    "\uA8E1"=>230,
+    "\uA8E2"=>230,
+    "\uA8E3"=>230,
+    "\uA8E4"=>230,
+    "\uA8E5"=>230,
+    "\uA8E6"=>230,
+    "\uA8E7"=>230,
+    "\uA8E8"=>230,
+    "\uA8E9"=>230,
+    "\uA8EA"=>230,
+    "\uA8EB"=>230,
+    "\uA8EC"=>230,
+    "\uA8ED"=>230,
+    "\uA8EE"=>230,
+    "\uA8EF"=>230,
+    "\uA8F0"=>230,
+    "\uA8F1"=>230,
+    "\uA92B"=>220,
+    "\uA92C"=>220,
+    "\uA92D"=>220,
+    "\uA953"=>9,
+    "\uA9B3"=>7,
+    "\uA9C0"=>9,
+    "\uAAB0"=>230,
+    "\uAAB2"=>230,
+    "\uAAB3"=>230,
+    "\uAAB4"=>220,
+    "\uAAB7"=>230,
+    "\uAAB8"=>230,
+    "\uAABE"=>230,
+    "\uAABF"=>230,
+    "\uAAC1"=>230,
+    "\uAAF6"=>9,
+    "\uABED"=>9,
+    "\uFB1E"=>26,
+    "\uFE20"=>230,
+    "\uFE21"=>230,
+    "\uFE22"=>230,
+    "\uFE23"=>230,
+    "\uFE24"=>230,
+    "\uFE25"=>230,
+    "\uFE26"=>230,
+    "\uFE27"=>220,
+    "\uFE28"=>220,
+    "\uFE29"=>220,
+    "\uFE2A"=>220,
+    "\uFE2B"=>220,
+    "\uFE2C"=>220,
+    "\uFE2D"=>220,
+    "\uFE2E"=>230,
+    "\uFE2F"=>230,
+    "\u{101FD}"=>220,
+    "\u{102E0}"=>220,
+    "\u{10376}"=>230,
+    "\u{10377}"=>230,
+    "\u{10378}"=>230,
+    "\u{10379}"=>230,
+    "\u{1037A}"=>230,
+    "\u{10A0D}"=>220,
+    "\u{10A0F}"=>230,
+    "\u{10A38}"=>230,
+    "\u{10A39}"=>1,
+    "\u{10A3A}"=>220,
+    "\u{10A3F}"=>9,
+    "\u{10AE5}"=>230,
+    "\u{10AE6}"=>220,
+    "\u{10D24}"=>230,
+    "\u{10D25}"=>230,
+    "\u{10D26}"=>230,
+    "\u{10D27}"=>230,
+    "\u{10F46}"=>220,
+    "\u{10F47}"=>220,
+    "\u{10F48}"=>230,
+    "\u{10F49}"=>230,
+    "\u{10F4A}"=>230,
+    "\u{10F4B}"=>220,
+    "\u{10F4C}"=>230,
+    "\u{10F4D}"=>220,
+    "\u{10F4E}"=>220,
+    "\u{10F4F}"=>220,
+    "\u{10F50}"=>220,
+    "\u{11046}"=>9,
+    "\u{1107F}"=>9,
+    "\u{110B9}"=>9,
+    "\u{110BA}"=>7,
+    "\u{11100}"=>230,
+    "\u{11101}"=>230,
+    "\u{11102}"=>230,
+    "\u{11133}"=>9,
+    "\u{11134}"=>9,
+    "\u{11173}"=>7,
+    "\u{111C0}"=>9,
+    "\u{111CA}"=>7,
+    "\u{11235}"=>9,
+    "\u{11236}"=>7,
+    "\u{112E9}"=>7,
+    "\u{112EA}"=>9,
+    "\u{1133B}"=>7,
+    "\u{1133C}"=>7,
+    "\u{1134D}"=>9,
+    "\u{11366}"=>230,
+    "\u{11367}"=>230,
+    "\u{11368}"=>230,
+    "\u{11369}"=>230,
+    "\u{1136A}"=>230,
+    "\u{1136B}"=>230,
+    "\u{1136C}"=>230,
+    "\u{11370}"=>230,
+    "\u{11371}"=>230,
+    "\u{11372}"=>230,
+    "\u{11373}"=>230,
+    "\u{11374}"=>230,
+    "\u{11442}"=>9,
+    "\u{11446}"=>7,
+    "\u{1145E}"=>230,
+    "\u{114C2}"=>9,
+    "\u{114C3}"=>7,
+    "\u{115BF}"=>9,
+    "\u{115C0}"=>7,
+    "\u{1163F}"=>9,
+    "\u{116B6}"=>9,
+    "\u{116B7}"=>7,
+    "\u{1172B}"=>9,
+    "\u{11839}"=>9,
+    "\u{1183A}"=>7,
+    "\u{119E0}"=>9,
+    "\u{11A34}"=>9,
+    "\u{11A47}"=>9,
+    "\u{11A99}"=>9,
+    "\u{11C3F}"=>9,
+    "\u{11D42}"=>7,
+    "\u{11D44}"=>9,
+    "\u{11D45}"=>9,
+    "\u{11D97}"=>9,
+    "\u{16AF0}"=>1,
+    "\u{16AF1}"=>1,
+    "\u{16AF2}"=>1,
+    "\u{16AF3}"=>1,
+    "\u{16AF4}"=>1,
+    "\u{16B30}"=>230,
+    "\u{16B31}"=>230,
+    "\u{16B32}"=>230,
+    "\u{16B33}"=>230,
+    "\u{16B34}"=>230,
+    "\u{16B35}"=>230,
+    "\u{16B36}"=>230,
+    "\u{1BC9E}"=>1,
+    "\u{1D165}"=>216,
+    "\u{1D166}"=>216,
+    "\u{1D167}"=>1,
+    "\u{1D168}"=>1,
+    "\u{1D169}"=>1,
+    "\u{1D16D}"=>226,
+    "\u{1D16E}"=>216,
+    "\u{1D16F}"=>216,
+    "\u{1D170}"=>216,
+    "\u{1D171}"=>216,
+    "\u{1D172}"=>216,
+    "\u{1D17B}"=>220,
+    "\u{1D17C}"=>220,
+    "\u{1D17D}"=>220,
+    "\u{1D17E}"=>220,
+    "\u{1D17F}"=>220,
+    "\u{1D180}"=>220,
+    "\u{1D181}"=>220,
+    "\u{1D182}"=>220,
+    "\u{1D185}"=>230,
+    "\u{1D186}"=>230,
+    "\u{1D187}"=>230,
+    "\u{1D188}"=>230,
+    "\u{1D189}"=>230,
+    "\u{1D18A}"=>220,
+    "\u{1D18B}"=>220,
+    "\u{1D1AA}"=>230,
+    "\u{1D1AB}"=>230,
+    "\u{1D1AC}"=>230,
+    "\u{1D1AD}"=>230,
+    "\u{1D242}"=>230,
+    "\u{1D243}"=>230,
+    "\u{1D244}"=>230,
+    "\u{1E000}"=>230,
+    "\u{1E001}"=>230,
+    "\u{1E002}"=>230,
+    "\u{1E003}"=>230,
+    "\u{1E004}"=>230,
+    "\u{1E005}"=>230,
+    "\u{1E006}"=>230,
+    "\u{1E008}"=>230,
+    "\u{1E009}"=>230,
+    "\u{1E00A}"=>230,
+    "\u{1E00B}"=>230,
+    "\u{1E00C}"=>230,
+    "\u{1E00D}"=>230,
+    "\u{1E00E}"=>230,
+    "\u{1E00F}"=>230,
+    "\u{1E010}"=>230,
+    "\u{1E011}"=>230,
+    "\u{1E012}"=>230,
+    "\u{1E013}"=>230,
+    "\u{1E014}"=>230,
+    "\u{1E015}"=>230,
+    "\u{1E016}"=>230,
+    "\u{1E017}"=>230,
+    "\u{1E018}"=>230,
+    "\u{1E01B}"=>230,
+    "\u{1E01C}"=>230,
+    "\u{1E01D}"=>230,
+    "\u{1E01E}"=>230,
+    "\u{1E01F}"=>230,
+    "\u{1E020}"=>230,
+    "\u{1E021}"=>230,
+    "\u{1E023}"=>230,
+    "\u{1E024}"=>230,
+    "\u{1E026}"=>230,
+    "\u{1E027}"=>230,
+    "\u{1E028}"=>230,
+    "\u{1E029}"=>230,
+    "\u{1E02A}"=>230,
+    "\u{1E130}"=>230,
+    "\u{1E131}"=>230,
+    "\u{1E132}"=>230,
+    "\u{1E133}"=>230,
+    "\u{1E134}"=>230,
+    "\u{1E135}"=>230,
+    "\u{1E136}"=>230,
+    "\u{1E2EC}"=>230,
+    "\u{1E2ED}"=>230,
+    "\u{1E2EE}"=>230,
+    "\u{1E2EF}"=>230,
+    "\u{1E8D0}"=>220,
+    "\u{1E8D1}"=>220,
+    "\u{1E8D2}"=>220,
+    "\u{1E8D3}"=>220,
+    "\u{1E8D4}"=>220,
+    "\u{1E8D5}"=>220,
+    "\u{1E8D6}"=>220,
+    "\u{1E944}"=>230,
+    "\u{1E945}"=>230,
+    "\u{1E946}"=>230,
+    "\u{1E947}"=>230,
+    "\u{1E948}"=>230,
+    "\u{1E949}"=>230,
+    "\u{1E94A}"=>7,
   }
   class_table.default = 0
   CLASS_TABLE = class_table.freeze
 
   DECOMPOSITION_TABLE = {
-    "\u00C0"=>"A\u0300", "\u00C1"=>"A\u0301", "\u00C2"=>"A\u0302", "\u00C3"=>"A\u0303", "\u00C4"=>"A\u0308", "\u00C5"=>"A\u030A", "\u00C7"=>"C\u0327", "\u00C8"=>"E\u0300",
-    "\u00C9"=>"E\u0301", "\u00CA"=>"E\u0302", "\u00CB"=>"E\u0308", "\u00CC"=>"I\u0300", "\u00CD"=>"I\u0301", "\u00CE"=>"I\u0302", "\u00CF"=>"I\u0308", "\u00D1"=>"N\u0303",
-    "\u00D2"=>"O\u0300", "\u00D3"=>"O\u0301", "\u00D4"=>"O\u0302", "\u00D5"=>"O\u0303", "\u00D6"=>"O\u0308", "\u00D9"=>"U\u0300", "\u00DA"=>"U\u0301", "\u00DB"=>"U\u0302",
-    "\u00DC"=>"U\u0308", "\u00DD"=>"Y\u0301", "\u00E0"=>"a\u0300", "\u00E1"=>"a\u0301", "\u00E2"=>"a\u0302", "\u00E3"=>"a\u0303", "\u00E4"=>"a\u0308", "\u00E5"=>"a\u030A",
-    "\u00E7"=>"c\u0327", "\u00E8"=>"e\u0300", "\u00E9"=>"e\u0301", "\u00EA"=>"e\u0302", "\u00EB"=>"e\u0308", "\u00EC"=>"i\u0300", "\u00ED"=>"i\u0301", "\u00EE"=>"i\u0302",
-    "\u00EF"=>"i\u0308", "\u00F1"=>"n\u0303", "\u00F2"=>"o\u0300", "\u00F3"=>"o\u0301", "\u00F4"=>"o\u0302", "\u00F5"=>"o\u0303", "\u00F6"=>"o\u0308", "\u00F9"=>"u\u0300",
-    "\u00FA"=>"u\u0301", "\u00FB"=>"u\u0302", "\u00FC"=>"u\u0308", "\u00FD"=>"y\u0301", "\u00FF"=>"y\u0308", "\u0100"=>"A\u0304", "\u0101"=>"a\u0304", "\u0102"=>"A\u0306",
-    "\u0103"=>"a\u0306", "\u0104"=>"A\u0328", "\u0105"=>"a\u0328", "\u0106"=>"C\u0301", "\u0107"=>"c\u0301", "\u0108"=>"C\u0302", "\u0109"=>"c\u0302", "\u010A"=>"C\u0307",
-    "\u010B"=>"c\u0307", "\u010C"=>"C\u030C", "\u010D"=>"c\u030C", "\u010E"=>"D\u030C", "\u010F"=>"d\u030C", "\u0112"=>"E\u0304", "\u0113"=>"e\u0304", "\u0114"=>"E\u0306",
-    "\u0115"=>"e\u0306", "\u0116"=>"E\u0307", "\u0117"=>"e\u0307", "\u0118"=>"E\u0328", "\u0119"=>"e\u0328", "\u011A"=>"E\u030C", "\u011B"=>"e\u030C", "\u011C"=>"G\u0302",
-    "\u011D"=>"g\u0302", "\u011E"=>"G\u0306", "\u011F"=>"g\u0306", "\u0120"=>"G\u0307", "\u0121"=>"g\u0307", "\u0122"=>"G\u0327", "\u0123"=>"g\u0327", "\u0124"=>"H\u0302",
-    "\u0125"=>"h\u0302", "\u0128"=>"I\u0303", "\u0129"=>"i\u0303", "\u012A"=>"I\u0304", "\u012B"=>"i\u0304", "\u012C"=>"I\u0306", "\u012D"=>"i\u0306", "\u012E"=>"I\u0328",
-    "\u012F"=>"i\u0328", "\u0130"=>"I\u0307", "\u0134"=>"J\u0302", "\u0135"=>"j\u0302", "\u0136"=>"K\u0327", "\u0137"=>"k\u0327", "\u0139"=>"L\u0301", "\u013A"=>"l\u0301",
-    "\u013B"=>"L\u0327", "\u013C"=>"l\u0327", "\u013D"=>"L\u030C", "\u013E"=>"l\u030C", "\u0143"=>"N\u0301", "\u0144"=>"n\u0301", "\u0145"=>"N\u0327", "\u0146"=>"n\u0327",
-    "\u0147"=>"N\u030C", "\u0148"=>"n\u030C", "\u014C"=>"O\u0304", "\u014D"=>"o\u0304", "\u014E"=>"O\u0306", "\u014F"=>"o\u0306", "\u0150"=>"O\u030B", "\u0151"=>"o\u030B",
-    "\u0154"=>"R\u0301", "\u0155"=>"r\u0301", "\u0156"=>"R\u0327", "\u0157"=>"r\u0327", "\u0158"=>"R\u030C", "\u0159"=>"r\u030C", "\u015A"=>"S\u0301", "\u015B"=>"s\u0301",
-    "\u015C"=>"S\u0302", "\u015D"=>"s\u0302", "\u015E"=>"S\u0327", "\u015F"=>"s\u0327", "\u0160"=>"S\u030C", "\u0161"=>"s\u030C", "\u0162"=>"T\u0327", "\u0163"=>"t\u0327",
-    "\u0164"=>"T\u030C", "\u0165"=>"t\u030C", "\u0168"=>"U\u0303", "\u0169"=>"u\u0303", "\u016A"=>"U\u0304", "\u016B"=>"u\u0304", "\u016C"=>"U\u0306", "\u016D"=>"u\u0306",
-    "\u016E"=>"U\u030A", "\u016F"=>"u\u030A", "\u0170"=>"U\u030B", "\u0171"=>"u\u030B", "\u0172"=>"U\u0328", "\u0173"=>"u\u0328", "\u0174"=>"W\u0302", "\u0175"=>"w\u0302",
-    "\u0176"=>"Y\u0302", "\u0177"=>"y\u0302", "\u0178"=>"Y\u0308", "\u0179"=>"Z\u0301", "\u017A"=>"z\u0301", "\u017B"=>"Z\u0307", "\u017C"=>"z\u0307", "\u017D"=>"Z\u030C",
-    "\u017E"=>"z\u030C", "\u01A0"=>"O\u031B", "\u01A1"=>"o\u031B", "\u01AF"=>"U\u031B", "\u01B0"=>"u\u031B", "\u01CD"=>"A\u030C", "\u01CE"=>"a\u030C", "\u01CF"=>"I\u030C",
-    "\u01D0"=>"i\u030C", "\u01D1"=>"O\u030C", "\u01D2"=>"o\u030C", "\u01D3"=>"U\u030C", "\u01D4"=>"u\u030C", "\u01D5"=>"U\u0308\u0304", "\u01D6"=>"u\u0308\u0304", "\u01D7"=>"U\u0308\u0301",
-    "\u01D8"=>"u\u0308\u0301", "\u01D9"=>"U\u0308\u030C", "\u01DA"=>"u\u0308\u030C", "\u01DB"=>"U\u0308\u0300", "\u01DC"=>"u\u0308\u0300", "\u01DE"=>"A\u0308\u0304", "\u01DF"=>"a\u0308\u0304", "\u01E0"=>"A\u0307\u0304",
-    "\u01E1"=>"a\u0307\u0304", "\u01E2"=>"\u00C6\u0304", "\u01E3"=>"\u00E6\u0304", "\u01E6"=>"G\u030C", "\u01E7"=>"g\u030C", "\u01E8"=>"K\u030C", "\u01E9"=>"k\u030C", "\u01EA"=>"O\u0328",
-    "\u01EB"=>"o\u0328", "\u01EC"=>"O\u0328\u0304", "\u01ED"=>"o\u0328\u0304", "\u01EE"=>"\u01B7\u030C", "\u01EF"=>"\u0292\u030C", "\u01F0"=>"j\u030C", "\u01F4"=>"G\u0301", "\u01F5"=>"g\u0301",
-    "\u01F8"=>"N\u0300", "\u01F9"=>"n\u0300", "\u01FA"=>"A\u030A\u0301", "\u01FB"=>"a\u030A\u0301", "\u01FC"=>"\u00C6\u0301", "\u01FD"=>"\u00E6\u0301", "\u01FE"=>"\u00D8\u0301", "\u01FF"=>"\u00F8\u0301",
-    "\u0200"=>"A\u030F", "\u0201"=>"a\u030F", "\u0202"=>"A\u0311", "\u0203"=>"a\u0311", "\u0204"=>"E\u030F", "\u0205"=>"e\u030F", "\u0206"=>"E\u0311", "\u0207"=>"e\u0311",
-    "\u0208"=>"I\u030F", "\u0209"=>"i\u030F", "\u020A"=>"I\u0311", "\u020B"=>"i\u0311", "\u020C"=>"O\u030F", "\u020D"=>"o\u030F", "\u020E"=>"O\u0311", "\u020F"=>"o\u0311",
-    "\u0210"=>"R\u030F", "\u0211"=>"r\u030F", "\u0212"=>"R\u0311", "\u0213"=>"r\u0311", "\u0214"=>"U\u030F", "\u0215"=>"u\u030F", "\u0216"=>"U\u0311", "\u0217"=>"u\u0311",
-    "\u0218"=>"S\u0326", "\u0219"=>"s\u0326", "\u021A"=>"T\u0326", "\u021B"=>"t\u0326", "\u021E"=>"H\u030C", "\u021F"=>"h\u030C", "\u0226"=>"A\u0307", "\u0227"=>"a\u0307",
-    "\u0228"=>"E\u0327", "\u0229"=>"e\u0327", "\u022A"=>"O\u0308\u0304", "\u022B"=>"o\u0308\u0304", "\u022C"=>"O\u0303\u0304", "\u022D"=>"o\u0303\u0304", "\u022E"=>"O\u0307", "\u022F"=>"o\u0307",
-    "\u0230"=>"O\u0307\u0304", "\u0231"=>"o\u0307\u0304", "\u0232"=>"Y\u0304", "\u0233"=>"y\u0304", "\u0340"=>"\u0300", "\u0341"=>"\u0301", "\u0343"=>"\u0313", "\u0344"=>"\u0308\u0301",
-    "\u0374"=>"\u02B9", "\u037E"=>";", "\u0385"=>"\u00A8\u0301", "\u0386"=>"\u0391\u0301", "\u0387"=>"\u00B7", "\u0388"=>"\u0395\u0301", "\u0389"=>"\u0397\u0301", "\u038A"=>"\u0399\u0301",
-    "\u038C"=>"\u039F\u0301", "\u038E"=>"\u03A5\u0301", "\u038F"=>"\u03A9\u0301", "\u0390"=>"\u03B9\u0308\u0301", "\u03AA"=>"\u0399\u0308", "\u03AB"=>"\u03A5\u0308", "\u03AC"=>"\u03B1\u0301", "\u03AD"=>"\u03B5\u0301",
-    "\u03AE"=>"\u03B7\u0301", "\u03AF"=>"\u03B9\u0301", "\u03B0"=>"\u03C5\u0308\u0301", "\u03CA"=>"\u03B9\u0308", "\u03CB"=>"\u03C5\u0308", "\u03CC"=>"\u03BF\u0301", "\u03CD"=>"\u03C5\u0301", "\u03CE"=>"\u03C9\u0301",
-    "\u03D3"=>"\u03D2\u0301", "\u03D4"=>"\u03D2\u0308", "\u0400"=>"\u0415\u0300", "\u0401"=>"\u0415\u0308", "\u0403"=>"\u0413\u0301", "\u0407"=>"\u0406\u0308", "\u040C"=>"\u041A\u0301", "\u040D"=>"\u0418\u0300",
-    "\u040E"=>"\u0423\u0306", "\u0419"=>"\u0418\u0306", "\u0439"=>"\u0438\u0306", "\u0450"=>"\u0435\u0300", "\u0451"=>"\u0435\u0308", "\u0453"=>"\u0433\u0301", "\u0457"=>"\u0456\u0308", "\u045C"=>"\u043A\u0301",
-    "\u045D"=>"\u0438\u0300", "\u045E"=>"\u0443\u0306", "\u0476"=>"\u0474\u030F", "\u0477"=>"\u0475\u030F", "\u04C1"=>"\u0416\u0306", "\u04C2"=>"\u0436\u0306", "\u04D0"=>"\u0410\u0306", "\u04D1"=>"\u0430\u0306",
-    "\u04D2"=>"\u0410\u0308", "\u04D3"=>"\u0430\u0308", "\u04D6"=>"\u0415\u0306", "\u04D7"=>"\u0435\u0306", "\u04DA"=>"\u04D8\u0308", "\u04DB"=>"\u04D9\u0308", "\u04DC"=>"\u0416\u0308", "\u04DD"=>"\u0436\u0308",
-    "\u04DE"=>"\u0417\u0308", "\u04DF"=>"\u0437\u0308", "\u04E2"=>"\u0418\u0304", "\u04E3"=>"\u0438\u0304", "\u04E4"=>"\u0418\u0308", "\u04E5"=>"\u0438\u0308", "\u04E6"=>"\u041E\u0308", "\u04E7"=>"\u043E\u0308",
-    "\u04EA"=>"\u04E8\u0308", "\u04EB"=>"\u04E9\u0308", "\u04EC"=>"\u042D\u0308", "\u04ED"=>"\u044D\u0308", "\u04EE"=>"\u0423\u0304", "\u04EF"=>"\u0443\u0304", "\u04F0"=>"\u0423\u0308", "\u04F1"=>"\u0443\u0308",
-    "\u04F2"=>"\u0423\u030B", "\u04F3"=>"\u0443\u030B", "\u04F4"=>"\u0427\u0308", "\u04F5"=>"\u0447\u0308", "\u04F8"=>"\u042B\u0308", "\u04F9"=>"\u044B\u0308", "\u0622"=>"\u0627\u0653", "\u0623"=>"\u0627\u0654",
-    "\u0624"=>"\u0648\u0654", "\u0625"=>"\u0627\u0655", "\u0626"=>"\u064A\u0654", "\u06C0"=>"\u06D5\u0654", "\u06C2"=>"\u06C1\u0654", "\u06D3"=>"\u06D2\u0654", "\u0929"=>"\u0928\u093C", "\u0931"=>"\u0930\u093C",
-    "\u0934"=>"\u0933\u093C", "\u0958"=>"\u0915\u093C", "\u0959"=>"\u0916\u093C", "\u095A"=>"\u0917\u093C", "\u095B"=>"\u091C\u093C", "\u095C"=>"\u0921\u093C", "\u095D"=>"\u0922\u093C", "\u095E"=>"\u092B\u093C",
-    "\u095F"=>"\u092F\u093C", "\u09CB"=>"\u09C7\u09BE", "\u09CC"=>"\u09C7\u09D7", "\u09DC"=>"\u09A1\u09BC", "\u09DD"=>"\u09A2\u09BC", "\u09DF"=>"\u09AF\u09BC", "\u0A33"=>"\u0A32\u0A3C", "\u0A36"=>"\u0A38\u0A3C",
-    "\u0A59"=>"\u0A16\u0A3C", "\u0A5A"=>"\u0A17\u0A3C", "\u0A5B"=>"\u0A1C\u0A3C", "\u0A5E"=>"\u0A2B\u0A3C", "\u0B48"=>"\u0B47\u0B56", "\u0B4B"=>"\u0B47\u0B3E", "\u0B4C"=>"\u0B47\u0B57", "\u0B5C"=>"\u0B21\u0B3C",
-    "\u0B5D"=>"\u0B22\u0B3C", "\u0B94"=>"\u0B92\u0BD7", "\u0BCA"=>"\u0BC6\u0BBE", "\u0BCB"=>"\u0BC7\u0BBE", "\u0BCC"=>"\u0BC6\u0BD7", "\u0C48"=>"\u0C46\u0C56", "\u0CC0"=>"\u0CBF\u0CD5", "\u0CC7"=>"\u0CC6\u0CD5",
-    "\u0CC8"=>"\u0CC6\u0CD6", "\u0CCA"=>"\u0CC6\u0CC2", "\u0CCB"=>"\u0CC6\u0CC2\u0CD5", "\u0D4A"=>"\u0D46\u0D3E", "\u0D4B"=>"\u0D47\u0D3E", "\u0D4C"=>"\u0D46\u0D57", "\u0DDA"=>"\u0DD9\u0DCA", "\u0DDC"=>"\u0DD9\u0DCF",
-    "\u0DDD"=>"\u0DD9\u0DCF\u0DCA", "\u0DDE"=>"\u0DD9\u0DDF", "\u0F43"=>"\u0F42\u0FB7", "\u0F4D"=>"\u0F4C\u0FB7", "\u0F52"=>"\u0F51\u0FB7", "\u0F57"=>"\u0F56\u0FB7", "\u0F5C"=>"\u0F5B\u0FB7", "\u0F69"=>"\u0F40\u0FB5",
-    "\u0F73"=>"\u0F71\u0F72", "\u0F75"=>"\u0F71\u0F74", "\u0F76"=>"\u0FB2\u0F80", "\u0F78"=>"\u0FB3\u0F80", "\u0F81"=>"\u0F71\u0F80", "\u0F93"=>"\u0F92\u0FB7", "\u0F9D"=>"\u0F9C\u0FB7", "\u0FA2"=>"\u0FA1\u0FB7",
-    "\u0FA7"=>"\u0FA6\u0FB7", "\u0FAC"=>"\u0FAB\u0FB7", "\u0FB9"=>"\u0F90\u0FB5", "\u1026"=>"\u1025\u102E", "\u1B06"=>"\u1B05\u1B35", "\u1B08"=>"\u1B07\u1B35", "\u1B0A"=>"\u1B09\u1B35", "\u1B0C"=>"\u1B0B\u1B35",
-    "\u1B0E"=>"\u1B0D\u1B35", "\u1B12"=>"\u1B11\u1B35", "\u1B3B"=>"\u1B3A\u1B35", "\u1B3D"=>"\u1B3C\u1B35", "\u1B40"=>"\u1B3E\u1B35", "\u1B41"=>"\u1B3F\u1B35", "\u1B43"=>"\u1B42\u1B35", "\u1E00"=>"A\u0325",
-    "\u1E01"=>"a\u0325", "\u1E02"=>"B\u0307", "\u1E03"=>"b\u0307", "\u1E04"=>"B\u0323", "\u1E05"=>"b\u0323", "\u1E06"=>"B\u0331", "\u1E07"=>"b\u0331", "\u1E08"=>"C\u0327\u0301",
-    "\u1E09"=>"c\u0327\u0301", "\u1E0A"=>"D\u0307", "\u1E0B"=>"d\u0307", "\u1E0C"=>"D\u0323", "\u1E0D"=>"d\u0323", "\u1E0E"=>"D\u0331", "\u1E0F"=>"d\u0331", "\u1E10"=>"D\u0327",
-    "\u1E11"=>"d\u0327", "\u1E12"=>"D\u032D", "\u1E13"=>"d\u032D", "\u1E14"=>"E\u0304\u0300", "\u1E15"=>"e\u0304\u0300", "\u1E16"=>"E\u0304\u0301", "\u1E17"=>"e\u0304\u0301", "\u1E18"=>"E\u032D",
-    "\u1E19"=>"e\u032D", "\u1E1A"=>"E\u0330", "\u1E1B"=>"e\u0330", "\u1E1C"=>"E\u0327\u0306", "\u1E1D"=>"e\u0327\u0306", "\u1E1E"=>"F\u0307", "\u1E1F"=>"f\u0307", "\u1E20"=>"G\u0304",
-    "\u1E21"=>"g\u0304", "\u1E22"=>"H\u0307", "\u1E23"=>"h\u0307", "\u1E24"=>"H\u0323", "\u1E25"=>"h\u0323", "\u1E26"=>"H\u0308", "\u1E27"=>"h\u0308", "\u1E28"=>"H\u0327",
-    "\u1E29"=>"h\u0327", "\u1E2A"=>"H\u032E", "\u1E2B"=>"h\u032E", "\u1E2C"=>"I\u0330", "\u1E2D"=>"i\u0330", "\u1E2E"=>"I\u0308\u0301", "\u1E2F"=>"i\u0308\u0301", "\u1E30"=>"K\u0301",
-    "\u1E31"=>"k\u0301", "\u1E32"=>"K\u0323", "\u1E33"=>"k\u0323", "\u1E34"=>"K\u0331", "\u1E35"=>"k\u0331", "\u1E36"=>"L\u0323", "\u1E37"=>"l\u0323", "\u1E38"=>"L\u0323\u0304",
-    "\u1E39"=>"l\u0323\u0304", "\u1E3A"=>"L\u0331", "\u1E3B"=>"l\u0331", "\u1E3C"=>"L\u032D", "\u1E3D"=>"l\u032D", "\u1E3E"=>"M\u0301", "\u1E3F"=>"m\u0301", "\u1E40"=>"M\u0307",
-    "\u1E41"=>"m\u0307", "\u1E42"=>"M\u0323", "\u1E43"=>"m\u0323", "\u1E44"=>"N\u0307", "\u1E45"=>"n\u0307", "\u1E46"=>"N\u0323", "\u1E47"=>"n\u0323", "\u1E48"=>"N\u0331",
-    "\u1E49"=>"n\u0331", "\u1E4A"=>"N\u032D", "\u1E4B"=>"n\u032D", "\u1E4C"=>"O\u0303\u0301", "\u1E4D"=>"o\u0303\u0301", "\u1E4E"=>"O\u0303\u0308", "\u1E4F"=>"o\u0303\u0308", "\u1E50"=>"O\u0304\u0300",
-    "\u1E51"=>"o\u0304\u0300", "\u1E52"=>"O\u0304\u0301", "\u1E53"=>"o\u0304\u0301", "\u1E54"=>"P\u0301", "\u1E55"=>"p\u0301", "\u1E56"=>"P\u0307", "\u1E57"=>"p\u0307", "\u1E58"=>"R\u0307",
-    "\u1E59"=>"r\u0307", "\u1E5A"=>"R\u0323", "\u1E5B"=>"r\u0323", "\u1E5C"=>"R\u0323\u0304", "\u1E5D"=>"r\u0323\u0304", "\u1E5E"=>"R\u0331", "\u1E5F"=>"r\u0331", "\u1E60"=>"S\u0307",
-    "\u1E61"=>"s\u0307", "\u1E62"=>"S\u0323", "\u1E63"=>"s\u0323", "\u1E64"=>"S\u0301\u0307", "\u1E65"=>"s\u0301\u0307", "\u1E66"=>"S\u030C\u0307", "\u1E67"=>"s\u030C\u0307", "\u1E68"=>"S\u0323\u0307",
-    "\u1E69"=>"s\u0323\u0307", "\u1E6A"=>"T\u0307", "\u1E6B"=>"t\u0307", "\u1E6C"=>"T\u0323", "\u1E6D"=>"t\u0323", "\u1E6E"=>"T\u0331", "\u1E6F"=>"t\u0331", "\u1E70"=>"T\u032D",
-    "\u1E71"=>"t\u032D", "\u1E72"=>"U\u0324", "\u1E73"=>"u\u0324", "\u1E74"=>"U\u0330", "\u1E75"=>"u\u0330", "\u1E76"=>"U\u032D", "\u1E77"=>"u\u032D", "\u1E78"=>"U\u0303\u0301",
-    "\u1E79"=>"u\u0303\u0301", "\u1E7A"=>"U\u0304\u0308", "\u1E7B"=>"u\u0304\u0308", "\u1E7C"=>"V\u0303", "\u1E7D"=>"v\u0303", "\u1E7E"=>"V\u0323", "\u1E7F"=>"v\u0323", "\u1E80"=>"W\u0300",
-    "\u1E81"=>"w\u0300", "\u1E82"=>"W\u0301", "\u1E83"=>"w\u0301", "\u1E84"=>"W\u0308", "\u1E85"=>"w\u0308", "\u1E86"=>"W\u0307", "\u1E87"=>"w\u0307", "\u1E88"=>"W\u0323",
-    "\u1E89"=>"w\u0323", "\u1E8A"=>"X\u0307", "\u1E8B"=>"x\u0307", "\u1E8C"=>"X\u0308", "\u1E8D"=>"x\u0308", "\u1E8E"=>"Y\u0307", "\u1E8F"=>"y\u0307", "\u1E90"=>"Z\u0302",
-    "\u1E91"=>"z\u0302", "\u1E92"=>"Z\u0323", "\u1E93"=>"z\u0323", "\u1E94"=>"Z\u0331", "\u1E95"=>"z\u0331", "\u1E96"=>"h\u0331", "\u1E97"=>"t\u0308", "\u1E98"=>"w\u030A",
-    "\u1E99"=>"y\u030A", "\u1E9B"=>"\u017F\u0307", "\u1EA0"=>"A\u0323", "\u1EA1"=>"a\u0323", "\u1EA2"=>"A\u0309", "\u1EA3"=>"a\u0309", "\u1EA4"=>"A\u0302\u0301", "\u1EA5"=>"a\u0302\u0301",
-    "\u1EA6"=>"A\u0302\u0300", "\u1EA7"=>"a\u0302\u0300", "\u1EA8"=>"A\u0302\u0309", "\u1EA9"=>"a\u0302\u0309", "\u1EAA"=>"A\u0302\u0303", "\u1EAB"=>"a\u0302\u0303", "\u1EAC"=>"A\u0323\u0302", "\u1EAD"=>"a\u0323\u0302",
-    "\u1EAE"=>"A\u0306\u0301", "\u1EAF"=>"a\u0306\u0301", "\u1EB0"=>"A\u0306\u0300", "\u1EB1"=>"a\u0306\u0300", "\u1EB2"=>"A\u0306\u0309", "\u1EB3"=>"a\u0306\u0309", "\u1EB4"=>"A\u0306\u0303", "\u1EB5"=>"a\u0306\u0303",
-    "\u1EB6"=>"A\u0323\u0306", "\u1EB7"=>"a\u0323\u0306", "\u1EB8"=>"E\u0323", "\u1EB9"=>"e\u0323", "\u1EBA"=>"E\u0309", "\u1EBB"=>"e\u0309", "\u1EBC"=>"E\u0303", "\u1EBD"=>"e\u0303",
-    "\u1EBE"=>"E\u0302\u0301", "\u1EBF"=>"e\u0302\u0301", "\u1EC0"=>"E\u0302\u0300", "\u1EC1"=>"e\u0302\u0300", "\u1EC2"=>"E\u0302\u0309", "\u1EC3"=>"e\u0302\u0309", "\u1EC4"=>"E\u0302\u0303", "\u1EC5"=>"e\u0302\u0303",
-    "\u1EC6"=>"E\u0323\u0302", "\u1EC7"=>"e\u0323\u0302", "\u1EC8"=>"I\u0309", "\u1EC9"=>"i\u0309", "\u1ECA"=>"I\u0323", "\u1ECB"=>"i\u0323", "\u1ECC"=>"O\u0323", "\u1ECD"=>"o\u0323",
-    "\u1ECE"=>"O\u0309", "\u1ECF"=>"o\u0309", "\u1ED0"=>"O\u0302\u0301", "\u1ED1"=>"o\u0302\u0301", "\u1ED2"=>"O\u0302\u0300", "\u1ED3"=>"o\u0302\u0300", "\u1ED4"=>"O\u0302\u0309", "\u1ED5"=>"o\u0302\u0309",
-    "\u1ED6"=>"O\u0302\u0303", "\u1ED7"=>"o\u0302\u0303", "\u1ED8"=>"O\u0323\u0302", "\u1ED9"=>"o\u0323\u0302", "\u1EDA"=>"O\u031B\u0301", "\u1EDB"=>"o\u031B\u0301", "\u1EDC"=>"O\u031B\u0300", "\u1EDD"=>"o\u031B\u0300",
-    "\u1EDE"=>"O\u031B\u0309", "\u1EDF"=>"o\u031B\u0309", "\u1EE0"=>"O\u031B\u0303", "\u1EE1"=>"o\u031B\u0303", "\u1EE2"=>"O\u031B\u0323", "\u1EE3"=>"o\u031B\u0323", "\u1EE4"=>"U\u0323", "\u1EE5"=>"u\u0323",
-    "\u1EE6"=>"U\u0309", "\u1EE7"=>"u\u0309", "\u1EE8"=>"U\u031B\u0301", "\u1EE9"=>"u\u031B\u0301", "\u1EEA"=>"U\u031B\u0300", "\u1EEB"=>"u\u031B\u0300", "\u1EEC"=>"U\u031B\u0309", "\u1EED"=>"u\u031B\u0309",
-    "\u1EEE"=>"U\u031B\u0303", "\u1EEF"=>"u\u031B\u0303", "\u1EF0"=>"U\u031B\u0323", "\u1EF1"=>"u\u031B\u0323", "\u1EF2"=>"Y\u0300", "\u1EF3"=>"y\u0300", "\u1EF4"=>"Y\u0323", "\u1EF5"=>"y\u0323",
-    "\u1EF6"=>"Y\u0309", "\u1EF7"=>"y\u0309", "\u1EF8"=>"Y\u0303", "\u1EF9"=>"y\u0303", "\u1F00"=>"\u03B1\u0313", "\u1F01"=>"\u03B1\u0314", "\u1F02"=>"\u03B1\u0313\u0300", "\u1F03"=>"\u03B1\u0314\u0300",
-    "\u1F04"=>"\u03B1\u0313\u0301", "\u1F05"=>"\u03B1\u0314\u0301", "\u1F06"=>"\u03B1\u0313\u0342", "\u1F07"=>"\u03B1\u0314\u0342", "\u1F08"=>"\u0391\u0313", "\u1F09"=>"\u0391\u0314", "\u1F0A"=>"\u0391\u0313\u0300", "\u1F0B"=>"\u0391\u0314\u0300",
-    "\u1F0C"=>"\u0391\u0313\u0301", "\u1F0D"=>"\u0391\u0314\u0301", "\u1F0E"=>"\u0391\u0313\u0342", "\u1F0F"=>"\u0391\u0314\u0342", "\u1F10"=>"\u03B5\u0313", "\u1F11"=>"\u03B5\u0314", "\u1F12"=>"\u03B5\u0313\u0300", "\u1F13"=>"\u03B5\u0314\u0300",
-    "\u1F14"=>"\u03B5\u0313\u0301", "\u1F15"=>"\u03B5\u0314\u0301", "\u1F18"=>"\u0395\u0313", "\u1F19"=>"\u0395\u0314", "\u1F1A"=>"\u0395\u0313\u0300", "\u1F1B"=>"\u0395\u0314\u0300", "\u1F1C"=>"\u0395\u0313\u0301", "\u1F1D"=>"\u0395\u0314\u0301",
-    "\u1F20"=>"\u03B7\u0313", "\u1F21"=>"\u03B7\u0314", "\u1F22"=>"\u03B7\u0313\u0300", "\u1F23"=>"\u03B7\u0314\u0300", "\u1F24"=>"\u03B7\u0313\u0301", "\u1F25"=>"\u03B7\u0314\u0301", "\u1F26"=>"\u03B7\u0313\u0342", "\u1F27"=>"\u03B7\u0314\u0342",
-    "\u1F28"=>"\u0397\u0313", "\u1F29"=>"\u0397\u0314", "\u1F2A"=>"\u0397\u0313\u0300", "\u1F2B"=>"\u0397\u0314\u0300", "\u1F2C"=>"\u0397\u0313\u0301", "\u1F2D"=>"\u0397\u0314\u0301", "\u1F2E"=>"\u0397\u0313\u0342", "\u1F2F"=>"\u0397\u0314\u0342",
-    "\u1F30"=>"\u03B9\u0313", "\u1F31"=>"\u03B9\u0314", "\u1F32"=>"\u03B9\u0313\u0300", "\u1F33"=>"\u03B9\u0314\u0300", "\u1F34"=>"\u03B9\u0313\u0301", "\u1F35"=>"\u03B9\u0314\u0301", "\u1F36"=>"\u03B9\u0313\u0342", "\u1F37"=>"\u03B9\u0314\u0342",
-    "\u1F38"=>"\u0399\u0313", "\u1F39"=>"\u0399\u0314", "\u1F3A"=>"\u0399\u0313\u0300", "\u1F3B"=>"\u0399\u0314\u0300", "\u1F3C"=>"\u0399\u0313\u0301", "\u1F3D"=>"\u0399\u0314\u0301", "\u1F3E"=>"\u0399\u0313\u0342", "\u1F3F"=>"\u0399\u0314\u0342",
-    "\u1F40"=>"\u03BF\u0313", "\u1F41"=>"\u03BF\u0314", "\u1F42"=>"\u03BF\u0313\u0300", "\u1F43"=>"\u03BF\u0314\u0300", "\u1F44"=>"\u03BF\u0313\u0301", "\u1F45"=>"\u03BF\u0314\u0301", "\u1F48"=>"\u039F\u0313", "\u1F49"=>"\u039F\u0314",
-    "\u1F4A"=>"\u039F\u0313\u0300", "\u1F4B"=>"\u039F\u0314\u0300", "\u1F4C"=>"\u039F\u0313\u0301", "\u1F4D"=>"\u039F\u0314\u0301", "\u1F50"=>"\u03C5\u0313", "\u1F51"=>"\u03C5\u0314", "\u1F52"=>"\u03C5\u0313\u0300", "\u1F53"=>"\u03C5\u0314\u0300",
-    "\u1F54"=>"\u03C5\u0313\u0301", "\u1F55"=>"\u03C5\u0314\u0301", "\u1F56"=>"\u03C5\u0313\u0342", "\u1F57"=>"\u03C5\u0314\u0342", "\u1F59"=>"\u03A5\u0314", "\u1F5B"=>"\u03A5\u0314\u0300", "\u1F5D"=>"\u03A5\u0314\u0301", "\u1F5F"=>"\u03A5\u0314\u0342",
-    "\u1F60"=>"\u03C9\u0313", "\u1F61"=>"\u03C9\u0314", "\u1F62"=>"\u03C9\u0313\u0300", "\u1F63"=>"\u03C9\u0314\u0300", "\u1F64"=>"\u03C9\u0313\u0301", "\u1F65"=>"\u03C9\u0314\u0301", "\u1F66"=>"\u03C9\u0313\u0342", "\u1F67"=>"\u03C9\u0314\u0342",
-    "\u1F68"=>"\u03A9\u0313", "\u1F69"=>"\u03A9\u0314", "\u1F6A"=>"\u03A9\u0313\u0300", "\u1F6B"=>"\u03A9\u0314\u0300", "\u1F6C"=>"\u03A9\u0313\u0301", "\u1F6D"=>"\u03A9\u0314\u0301", "\u1F6E"=>"\u03A9\u0313\u0342", "\u1F6F"=>"\u03A9\u0314\u0342",
-    "\u1F70"=>"\u03B1\u0300", "\u1F71"=>"\u03B1\u0301", "\u1F72"=>"\u03B5\u0300", "\u1F73"=>"\u03B5\u0301", "\u1F74"=>"\u03B7\u0300", "\u1F75"=>"\u03B7\u0301", "\u1F76"=>"\u03B9\u0300", "\u1F77"=>"\u03B9\u0301",
-    "\u1F78"=>"\u03BF\u0300", "\u1F79"=>"\u03BF\u0301", "\u1F7A"=>"\u03C5\u0300", "\u1F7B"=>"\u03C5\u0301", "\u1F7C"=>"\u03C9\u0300", "\u1F7D"=>"\u03C9\u0301", "\u1F80"=>"\u03B1\u0313\u0345", "\u1F81"=>"\u03B1\u0314\u0345",
-    "\u1F82"=>"\u03B1\u0313\u0300\u0345", "\u1F83"=>"\u03B1\u0314\u0300\u0345", "\u1F84"=>"\u03B1\u0313\u0301\u0345", "\u1F85"=>"\u03B1\u0314\u0301\u0345", "\u1F86"=>"\u03B1\u0313\u0342\u0345", "\u1F87"=>"\u03B1\u0314\u0342\u0345", "\u1F88"=>"\u0391\u0313\u0345", "\u1F89"=>"\u0391\u0314\u0345",
-    "\u1F8A"=>"\u0391\u0313\u0300\u0345", "\u1F8B"=>"\u0391\u0314\u0300\u0345", "\u1F8C"=>"\u0391\u0313\u0301\u0345", "\u1F8D"=>"\u0391\u0314\u0301\u0345", "\u1F8E"=>"\u0391\u0313\u0342\u0345", "\u1F8F"=>"\u0391\u0314\u0342\u0345", "\u1F90"=>"\u03B7\u0313\u0345", "\u1F91"=>"\u03B7\u0314\u0345",
-    "\u1F92"=>"\u03B7\u0313\u0300\u0345", "\u1F93"=>"\u03B7\u0314\u0300\u0345", "\u1F94"=>"\u03B7\u0313\u0301\u0345", "\u1F95"=>"\u03B7\u0314\u0301\u0345", "\u1F96"=>"\u03B7\u0313\u0342\u0345", "\u1F97"=>"\u03B7\u0314\u0342\u0345", "\u1F98"=>"\u0397\u0313\u0345", "\u1F99"=>"\u0397\u0314\u0345",
-    "\u1F9A"=>"\u0397\u0313\u0300\u0345", "\u1F9B"=>"\u0397\u0314\u0300\u0345", "\u1F9C"=>"\u0397\u0313\u0301\u0345", "\u1F9D"=>"\u0397\u0314\u0301\u0345", "\u1F9E"=>"\u0397\u0313\u0342\u0345", "\u1F9F"=>"\u0397\u0314\u0342\u0345", "\u1FA0"=>"\u03C9\u0313\u0345", "\u1FA1"=>"\u03C9\u0314\u0345",
-    "\u1FA2"=>"\u03C9\u0313\u0300\u0345", "\u1FA3"=>"\u03C9\u0314\u0300\u0345", "\u1FA4"=>"\u03C9\u0313\u0301\u0345", "\u1FA5"=>"\u03C9\u0314\u0301\u0345", "\u1FA6"=>"\u03C9\u0313\u0342\u0345", "\u1FA7"=>"\u03C9\u0314\u0342\u0345", "\u1FA8"=>"\u03A9\u0313\u0345", "\u1FA9"=>"\u03A9\u0314\u0345",
-    "\u1FAA"=>"\u03A9\u0313\u0300\u0345", "\u1FAB"=>"\u03A9\u0314\u0300\u0345", "\u1FAC"=>"\u03A9\u0313\u0301\u0345", "\u1FAD"=>"\u03A9\u0314\u0301\u0345", "\u1FAE"=>"\u03A9\u0313\u0342\u0345", "\u1FAF"=>"\u03A9\u0314\u0342\u0345", "\u1FB0"=>"\u03B1\u0306", "\u1FB1"=>"\u03B1\u0304",
-    "\u1FB2"=>"\u03B1\u0300\u0345", "\u1FB3"=>"\u03B1\u0345", "\u1FB4"=>"\u03B1\u0301\u0345", "\u1FB6"=>"\u03B1\u0342", "\u1FB7"=>"\u03B1\u0342\u0345", "\u1FB8"=>"\u0391\u0306", "\u1FB9"=>"\u0391\u0304", "\u1FBA"=>"\u0391\u0300",
-    "\u1FBB"=>"\u0391\u0301", "\u1FBC"=>"\u0391\u0345", "\u1FBE"=>"\u03B9", "\u1FC1"=>"\u00A8\u0342", "\u1FC2"=>"\u03B7\u0300\u0345", "\u1FC3"=>"\u03B7\u0345", "\u1FC4"=>"\u03B7\u0301\u0345", "\u1FC6"=>"\u03B7\u0342",
-    "\u1FC7"=>"\u03B7\u0342\u0345", "\u1FC8"=>"\u0395\u0300", "\u1FC9"=>"\u0395\u0301", "\u1FCA"=>"\u0397\u0300", "\u1FCB"=>"\u0397\u0301", "\u1FCC"=>"\u0397\u0345", "\u1FCD"=>"\u1FBF\u0300", "\u1FCE"=>"\u1FBF\u0301",
-    "\u1FCF"=>"\u1FBF\u0342", "\u1FD0"=>"\u03B9\u0306", "\u1FD1"=>"\u03B9\u0304", "\u1FD2"=>"\u03B9\u0308\u0300", "\u1FD3"=>"\u03B9\u0308\u0301", "\u1FD6"=>"\u03B9\u0342", "\u1FD7"=>"\u03B9\u0308\u0342", "\u1FD8"=>"\u0399\u0306",
-    "\u1FD9"=>"\u0399\u0304", "\u1FDA"=>"\u0399\u0300", "\u1FDB"=>"\u0399\u0301", "\u1FDD"=>"\u1FFE\u0300", "\u1FDE"=>"\u1FFE\u0301", "\u1FDF"=>"\u1FFE\u0342", "\u1FE0"=>"\u03C5\u0306", "\u1FE1"=>"\u03C5\u0304",
-    "\u1FE2"=>"\u03C5\u0308\u0300", "\u1FE3"=>"\u03C5\u0308\u0301", "\u1FE4"=>"\u03C1\u0313", "\u1FE5"=>"\u03C1\u0314", "\u1FE6"=>"\u03C5\u0342", "\u1FE7"=>"\u03C5\u0308\u0342", "\u1FE8"=>"\u03A5\u0306", "\u1FE9"=>"\u03A5\u0304",
-    "\u1FEA"=>"\u03A5\u0300", "\u1FEB"=>"\u03A5\u0301", "\u1FEC"=>"\u03A1\u0314", "\u1FED"=>"\u00A8\u0300", "\u1FEE"=>"\u00A8\u0301", "\u1FEF"=>"`", "\u1FF2"=>"\u03C9\u0300\u0345", "\u1FF3"=>"\u03C9\u0345",
-    "\u1FF4"=>"\u03C9\u0301\u0345", "\u1FF6"=>"\u03C9\u0342", "\u1FF7"=>"\u03C9\u0342\u0345", "\u1FF8"=>"\u039F\u0300", "\u1FF9"=>"\u039F\u0301", "\u1FFA"=>"\u03A9\u0300", "\u1FFB"=>"\u03A9\u0301", "\u1FFC"=>"\u03A9\u0345",
-    "\u1FFD"=>"\u00B4", "\u2000"=>"\u2002", "\u2001"=>"\u2003", "\u2126"=>"\u03A9", "\u212A"=>"K", "\u212B"=>"A\u030A", "\u219A"=>"\u2190\u0338", "\u219B"=>"\u2192\u0338",
-    "\u21AE"=>"\u2194\u0338", "\u21CD"=>"\u21D0\u0338", "\u21CE"=>"\u21D4\u0338", "\u21CF"=>"\u21D2\u0338", "\u2204"=>"\u2203\u0338", "\u2209"=>"\u2208\u0338", "\u220C"=>"\u220B\u0338", "\u2224"=>"\u2223\u0338",
-    "\u2226"=>"\u2225\u0338", "\u2241"=>"\u223C\u0338", "\u2244"=>"\u2243\u0338", "\u2247"=>"\u2245\u0338", "\u2249"=>"\u2248\u0338", "\u2260"=>"=\u0338", "\u2262"=>"\u2261\u0338", "\u226D"=>"\u224D\u0338",
-    "\u226E"=>"<\u0338", "\u226F"=>">\u0338", "\u2270"=>"\u2264\u0338", "\u2271"=>"\u2265\u0338", "\u2274"=>"\u2272\u0338", "\u2275"=>"\u2273\u0338", "\u2278"=>"\u2276\u0338", "\u2279"=>"\u2277\u0338",
-    "\u2280"=>"\u227A\u0338", "\u2281"=>"\u227B\u0338", "\u2284"=>"\u2282\u0338", "\u2285"=>"\u2283\u0338", "\u2288"=>"\u2286\u0338", "\u2289"=>"\u2287\u0338", "\u22AC"=>"\u22A2\u0338", "\u22AD"=>"\u22A8\u0338",
-    "\u22AE"=>"\u22A9\u0338", "\u22AF"=>"\u22AB\u0338", "\u22E0"=>"\u227C\u0338", "\u22E1"=>"\u227D\u0338", "\u22E2"=>"\u2291\u0338", "\u22E3"=>"\u2292\u0338", "\u22EA"=>"\u22B2\u0338", "\u22EB"=>"\u22B3\u0338",
-    "\u22EC"=>"\u22B4\u0338", "\u22ED"=>"\u22B5\u0338", "\u2329"=>"\u3008", "\u232A"=>"\u3009", "\u2ADC"=>"\u2ADD\u0338", "\u304C"=>"\u304B\u3099", "\u304E"=>"\u304D\u3099", "\u3050"=>"\u304F\u3099",
-    "\u3052"=>"\u3051\u3099", "\u3054"=>"\u3053\u3099", "\u3056"=>"\u3055\u3099", "\u3058"=>"\u3057\u3099", "\u305A"=>"\u3059\u3099", "\u305C"=>"\u305B\u3099", "\u305E"=>"\u305D\u3099", "\u3060"=>"\u305F\u3099",
-    "\u3062"=>"\u3061\u3099", "\u3065"=>"\u3064\u3099", "\u3067"=>"\u3066\u3099", "\u3069"=>"\u3068\u3099", "\u3070"=>"\u306F\u3099", "\u3071"=>"\u306F\u309A", "\u3073"=>"\u3072\u3099", "\u3074"=>"\u3072\u309A",
-    "\u3076"=>"\u3075\u3099", "\u3077"=>"\u3075\u309A", "\u3079"=>"\u3078\u3099", "\u307A"=>"\u3078\u309A", "\u307C"=>"\u307B\u3099", "\u307D"=>"\u307B\u309A", "\u3094"=>"\u3046\u3099", "\u309E"=>"\u309D\u3099",
-    "\u30AC"=>"\u30AB\u3099", "\u30AE"=>"\u30AD\u3099", "\u30B0"=>"\u30AF\u3099", "\u30B2"=>"\u30B1\u3099", "\u30B4"=>"\u30B3\u3099", "\u30B6"=>"\u30B5\u3099", "\u30B8"=>"\u30B7\u3099", "\u30BA"=>"\u30B9\u3099",
-    "\u30BC"=>"\u30BB\u3099", "\u30BE"=>"\u30BD\u3099", "\u30C0"=>"\u30BF\u3099", "\u30C2"=>"\u30C1\u3099", "\u30C5"=>"\u30C4\u3099", "\u30C7"=>"\u30C6\u3099", "\u30C9"=>"\u30C8\u3099", "\u30D0"=>"\u30CF\u3099",
-    "\u30D1"=>"\u30CF\u309A", "\u30D3"=>"\u30D2\u3099", "\u30D4"=>"\u30D2\u309A", "\u30D6"=>"\u30D5\u3099", "\u30D7"=>"\u30D5\u309A", "\u30D9"=>"\u30D8\u3099", "\u30DA"=>"\u30D8\u309A", "\u30DC"=>"\u30DB\u3099",
-    "\u30DD"=>"\u30DB\u309A", "\u30F4"=>"\u30A6\u3099", "\u30F7"=>"\u30EF\u3099", "\u30F8"=>"\u30F0\u3099", "\u30F9"=>"\u30F1\u3099", "\u30FA"=>"\u30F2\u3099", "\u30FE"=>"\u30FD\u3099", "\uF900"=>"\u8C48",
-    "\uF901"=>"\u66F4", "\uF902"=>"\u8ECA", "\uF903"=>"\u8CC8", "\uF904"=>"\u6ED1", "\uF905"=>"\u4E32", "\uF906"=>"\u53E5", "\uF907"=>"\u9F9C", "\uF908"=>"\u9F9C",
-    "\uF909"=>"\u5951", "\uF90A"=>"\u91D1", "\uF90B"=>"\u5587", "\uF90C"=>"\u5948", "\uF90D"=>"\u61F6", "\uF90E"=>"\u7669", "\uF90F"=>"\u7F85", "\uF910"=>"\u863F",
-    "\uF911"=>"\u87BA", "\uF912"=>"\u88F8", "\uF913"=>"\u908F", "\uF914"=>"\u6A02", "\uF915"=>"\u6D1B", "\uF916"=>"\u70D9", "\uF917"=>"\u73DE", "\uF918"=>"\u843D",
-    "\uF919"=>"\u916A", "\uF91A"=>"\u99F1", "\uF91B"=>"\u4E82", "\uF91C"=>"\u5375", "\uF91D"=>"\u6B04", "\uF91E"=>"\u721B", "\uF91F"=>"\u862D", "\uF920"=>"\u9E1E",
-    "\uF921"=>"\u5D50", "\uF922"=>"\u6FEB", "\uF923"=>"\u85CD", "\uF924"=>"\u8964", "\uF925"=>"\u62C9", "\uF926"=>"\u81D8", "\uF927"=>"\u881F", "\uF928"=>"\u5ECA",
-    "\uF929"=>"\u6717", "\uF92A"=>"\u6D6A", "\uF92B"=>"\u72FC", "\uF92C"=>"\u90CE", "\uF92D"=>"\u4F86", "\uF92E"=>"\u51B7", "\uF92F"=>"\u52DE", "\uF930"=>"\u64C4",
-    "\uF931"=>"\u6AD3", "\uF932"=>"\u7210", "\uF933"=>"\u76E7", "\uF934"=>"\u8001", "\uF935"=>"\u8606", "\uF936"=>"\u865C", "\uF937"=>"\u8DEF", "\uF938"=>"\u9732",
-    "\uF939"=>"\u9B6F", "\uF93A"=>"\u9DFA", "\uF93B"=>"\u788C", "\uF93C"=>"\u797F", "\uF93D"=>"\u7DA0", "\uF93E"=>"\u83C9", "\uF93F"=>"\u9304", "\uF940"=>"\u9E7F",
-    "\uF941"=>"\u8AD6", "\uF942"=>"\u58DF", "\uF943"=>"\u5F04", "\uF944"=>"\u7C60", "\uF945"=>"\u807E", "\uF946"=>"\u7262", "\uF947"=>"\u78CA", "\uF948"=>"\u8CC2",
-    "\uF949"=>"\u96F7", "\uF94A"=>"\u58D8", "\uF94B"=>"\u5C62", "\uF94C"=>"\u6A13", "\uF94D"=>"\u6DDA", "\uF94E"=>"\u6F0F", "\uF94F"=>"\u7D2F", "\uF950"=>"\u7E37",
-    "\uF951"=>"\u964B", "\uF952"=>"\u52D2", "\uF953"=>"\u808B", "\uF954"=>"\u51DC", "\uF955"=>"\u51CC", "\uF956"=>"\u7A1C", "\uF957"=>"\u7DBE", "\uF958"=>"\u83F1",
-    "\uF959"=>"\u9675", "\uF95A"=>"\u8B80", "\uF95B"=>"\u62CF", "\uF95C"=>"\u6A02", "\uF95D"=>"\u8AFE", "\uF95E"=>"\u4E39", "\uF95F"=>"\u5BE7", "\uF960"=>"\u6012",
-    "\uF961"=>"\u7387", "\uF962"=>"\u7570", "\uF963"=>"\u5317", "\uF964"=>"\u78FB", "\uF965"=>"\u4FBF", "\uF966"=>"\u5FA9", "\uF967"=>"\u4E0D", "\uF968"=>"\u6CCC",
-    "\uF969"=>"\u6578", "\uF96A"=>"\u7D22", "\uF96B"=>"\u53C3", "\uF96C"=>"\u585E", "\uF96D"=>"\u7701", "\uF96E"=>"\u8449", "\uF96F"=>"\u8AAA", "\uF970"=>"\u6BBA",
-    "\uF971"=>"\u8FB0", "\uF972"=>"\u6C88", "\uF973"=>"\u62FE", "\uF974"=>"\u82E5", "\uF975"=>"\u63A0", "\uF976"=>"\u7565", "\uF977"=>"\u4EAE", "\uF978"=>"\u5169",
-    "\uF979"=>"\u51C9", "\uF97A"=>"\u6881", "\uF97B"=>"\u7CE7", "\uF97C"=>"\u826F", "\uF97D"=>"\u8AD2", "\uF97E"=>"\u91CF", "\uF97F"=>"\u52F5", "\uF980"=>"\u5442",
-    "\uF981"=>"\u5973", "\uF982"=>"\u5EEC", "\uF983"=>"\u65C5", "\uF984"=>"\u6FFE", "\uF985"=>"\u792A", "\uF986"=>"\u95AD", "\uF987"=>"\u9A6A", "\uF988"=>"\u9E97",
-    "\uF989"=>"\u9ECE", "\uF98A"=>"\u529B", "\uF98B"=>"\u66C6", "\uF98C"=>"\u6B77", "\uF98D"=>"\u8F62", "\uF98E"=>"\u5E74", "\uF98F"=>"\u6190", "\uF990"=>"\u6200",
-    "\uF991"=>"\u649A", "\uF992"=>"\u6F23", "\uF993"=>"\u7149", "\uF994"=>"\u7489", "\uF995"=>"\u79CA", "\uF996"=>"\u7DF4", "\uF997"=>"\u806F", "\uF998"=>"\u8F26",
-    "\uF999"=>"\u84EE", "\uF99A"=>"\u9023", "\uF99B"=>"\u934A", "\uF99C"=>"\u5217", "\uF99D"=>"\u52A3", "\uF99E"=>"\u54BD", "\uF99F"=>"\u70C8", "\uF9A0"=>"\u88C2",
-    "\uF9A1"=>"\u8AAA", "\uF9A2"=>"\u5EC9", "\uF9A3"=>"\u5FF5", "\uF9A4"=>"\u637B", "\uF9A5"=>"\u6BAE", "\uF9A6"=>"\u7C3E", "\uF9A7"=>"\u7375", "\uF9A8"=>"\u4EE4",
-    "\uF9A9"=>"\u56F9", "\uF9AA"=>"\u5BE7", "\uF9AB"=>"\u5DBA", "\uF9AC"=>"\u601C", "\uF9AD"=>"\u73B2", "\uF9AE"=>"\u7469", "\uF9AF"=>"\u7F9A", "\uF9B0"=>"\u8046",
-    "\uF9B1"=>"\u9234", "\uF9B2"=>"\u96F6", "\uF9B3"=>"\u9748", "\uF9B4"=>"\u9818", "\uF9B5"=>"\u4F8B", "\uF9B6"=>"\u79AE", "\uF9B7"=>"\u91B4", "\uF9B8"=>"\u96B8",
-    "\uF9B9"=>"\u60E1", "\uF9BA"=>"\u4E86", "\uF9BB"=>"\u50DA", "\uF9BC"=>"\u5BEE", "\uF9BD"=>"\u5C3F", "\uF9BE"=>"\u6599", "\uF9BF"=>"\u6A02", "\uF9C0"=>"\u71CE",
-    "\uF9C1"=>"\u7642", "\uF9C2"=>"\u84FC", "\uF9C3"=>"\u907C", "\uF9C4"=>"\u9F8D", "\uF9C5"=>"\u6688", "\uF9C6"=>"\u962E", "\uF9C7"=>"\u5289", "\uF9C8"=>"\u677B",
-    "\uF9C9"=>"\u67F3", "\uF9CA"=>"\u6D41", "\uF9CB"=>"\u6E9C", "\uF9CC"=>"\u7409", "\uF9CD"=>"\u7559", "\uF9CE"=>"\u786B", "\uF9CF"=>"\u7D10", "\uF9D0"=>"\u985E",
-    "\uF9D1"=>"\u516D", "\uF9D2"=>"\u622E", "\uF9D3"=>"\u9678", "\uF9D4"=>"\u502B", "\uF9D5"=>"\u5D19", "\uF9D6"=>"\u6DEA", "\uF9D7"=>"\u8F2A", "\uF9D8"=>"\u5F8B",
-    "\uF9D9"=>"\u6144", "\uF9DA"=>"\u6817", "\uF9DB"=>"\u7387", "\uF9DC"=>"\u9686", "\uF9DD"=>"\u5229", "\uF9DE"=>"\u540F", "\uF9DF"=>"\u5C65", "\uF9E0"=>"\u6613",
-    "\uF9E1"=>"\u674E", "\uF9E2"=>"\u68A8", "\uF9E3"=>"\u6CE5", "\uF9E4"=>"\u7406", "\uF9E5"=>"\u75E2", "\uF9E6"=>"\u7F79", "\uF9E7"=>"\u88CF", "\uF9E8"=>"\u88E1",
-    "\uF9E9"=>"\u91CC", "\uF9EA"=>"\u96E2", "\uF9EB"=>"\u533F", "\uF9EC"=>"\u6EBA", "\uF9ED"=>"\u541D", "\uF9EE"=>"\u71D0", "\uF9EF"=>"\u7498", "\uF9F0"=>"\u85FA",
-    "\uF9F1"=>"\u96A3", "\uF9F2"=>"\u9C57", "\uF9F3"=>"\u9E9F", "\uF9F4"=>"\u6797", "\uF9F5"=>"\u6DCB", "\uF9F6"=>"\u81E8", "\uF9F7"=>"\u7ACB", "\uF9F8"=>"\u7B20",
-    "\uF9F9"=>"\u7C92", "\uF9FA"=>"\u72C0", "\uF9FB"=>"\u7099", "\uF9FC"=>"\u8B58", "\uF9FD"=>"\u4EC0", "\uF9FE"=>"\u8336", "\uF9FF"=>"\u523A", "\uFA00"=>"\u5207",
-    "\uFA01"=>"\u5EA6", "\uFA02"=>"\u62D3", "\uFA03"=>"\u7CD6", "\uFA04"=>"\u5B85", "\uFA05"=>"\u6D1E", "\uFA06"=>"\u66B4", "\uFA07"=>"\u8F3B", "\uFA08"=>"\u884C",
-    "\uFA09"=>"\u964D", "\uFA0A"=>"\u898B", "\uFA0B"=>"\u5ED3", "\uFA0C"=>"\u5140", "\uFA0D"=>"\u55C0", "\uFA10"=>"\u585A", "\uFA12"=>"\u6674", "\uFA15"=>"\u51DE",
-    "\uFA16"=>"\u732A", "\uFA17"=>"\u76CA", "\uFA18"=>"\u793C", "\uFA19"=>"\u795E", "\uFA1A"=>"\u7965", "\uFA1B"=>"\u798F", "\uFA1C"=>"\u9756", "\uFA1D"=>"\u7CBE",
-    "\uFA1E"=>"\u7FBD", "\uFA20"=>"\u8612", "\uFA22"=>"\u8AF8", "\uFA25"=>"\u9038", "\uFA26"=>"\u90FD", "\uFA2A"=>"\u98EF", "\uFA2B"=>"\u98FC", "\uFA2C"=>"\u9928",
-    "\uFA2D"=>"\u9DB4", "\uFA2E"=>"\u90DE", "\uFA2F"=>"\u96B7", "\uFA30"=>"\u4FAE", "\uFA31"=>"\u50E7", "\uFA32"=>"\u514D", "\uFA33"=>"\u52C9", "\uFA34"=>"\u52E4",
-    "\uFA35"=>"\u5351", "\uFA36"=>"\u559D", "\uFA37"=>"\u5606", "\uFA38"=>"\u5668", "\uFA39"=>"\u5840", "\uFA3A"=>"\u58A8", "\uFA3B"=>"\u5C64", "\uFA3C"=>"\u5C6E",
-    "\uFA3D"=>"\u6094", "\uFA3E"=>"\u6168", "\uFA3F"=>"\u618E", "\uFA40"=>"\u61F2", "\uFA41"=>"\u654F", "\uFA42"=>"\u65E2", "\uFA43"=>"\u6691", "\uFA44"=>"\u6885",
-    "\uFA45"=>"\u6D77", "\uFA46"=>"\u6E1A", "\uFA47"=>"\u6F22", "\uFA48"=>"\u716E", "\uFA49"=>"\u722B", "\uFA4A"=>"\u7422", "\uFA4B"=>"\u7891", "\uFA4C"=>"\u793E",
-    "\uFA4D"=>"\u7949", "\uFA4E"=>"\u7948", "\uFA4F"=>"\u7950", "\uFA50"=>"\u7956", "\uFA51"=>"\u795D", "\uFA52"=>"\u798D", "\uFA53"=>"\u798E", "\uFA54"=>"\u7A40",
-    "\uFA55"=>"\u7A81", "\uFA56"=>"\u7BC0", "\uFA57"=>"\u7DF4", "\uFA58"=>"\u7E09", "\uFA59"=>"\u7E41", "\uFA5A"=>"\u7F72", "\uFA5B"=>"\u8005", "\uFA5C"=>"\u81ED",
-    "\uFA5D"=>"\u8279", "\uFA5E"=>"\u8279", "\uFA5F"=>"\u8457", "\uFA60"=>"\u8910", "\uFA61"=>"\u8996", "\uFA62"=>"\u8B01", "\uFA63"=>"\u8B39", "\uFA64"=>"\u8CD3",
-    "\uFA65"=>"\u8D08", "\uFA66"=>"\u8FB6", "\uFA67"=>"\u9038", "\uFA68"=>"\u96E3", "\uFA69"=>"\u97FF", "\uFA6A"=>"\u983B", "\uFA6B"=>"\u6075", "\uFA6C"=>"\u{242EE}",
-    "\uFA6D"=>"\u8218", "\uFA70"=>"\u4E26", "\uFA71"=>"\u51B5", "\uFA72"=>"\u5168", "\uFA73"=>"\u4F80", "\uFA74"=>"\u5145", "\uFA75"=>"\u5180", "\uFA76"=>"\u52C7",
-    "\uFA77"=>"\u52FA", "\uFA78"=>"\u559D", "\uFA79"=>"\u5555", "\uFA7A"=>"\u5599", "\uFA7B"=>"\u55E2", "\uFA7C"=>"\u585A", "\uFA7D"=>"\u58B3", "\uFA7E"=>"\u5944",
-    "\uFA7F"=>"\u5954", "\uFA80"=>"\u5A62", "\uFA81"=>"\u5B28", "\uFA82"=>"\u5ED2", "\uFA83"=>"\u5ED9", "\uFA84"=>"\u5F69", "\uFA85"=>"\u5FAD", "\uFA86"=>"\u60D8",
-    "\uFA87"=>"\u614E", "\uFA88"=>"\u6108", "\uFA89"=>"\u618E", "\uFA8A"=>"\u6160", "\uFA8B"=>"\u61F2", "\uFA8C"=>"\u6234", "\uFA8D"=>"\u63C4", "\uFA8E"=>"\u641C",
-    "\uFA8F"=>"\u6452", "\uFA90"=>"\u6556", "\uFA91"=>"\u6674", "\uFA92"=>"\u6717", "\uFA93"=>"\u671B", "\uFA94"=>"\u6756", "\uFA95"=>"\u6B79", "\uFA96"=>"\u6BBA",
-    "\uFA97"=>"\u6D41", "\uFA98"=>"\u6EDB", "\uFA99"=>"\u6ECB", "\uFA9A"=>"\u6F22", "\uFA9B"=>"\u701E", "\uFA9C"=>"\u716E", "\uFA9D"=>"\u77A7", "\uFA9E"=>"\u7235",
-    "\uFA9F"=>"\u72AF", "\uFAA0"=>"\u732A", "\uFAA1"=>"\u7471", "\uFAA2"=>"\u7506", "\uFAA3"=>"\u753B", "\uFAA4"=>"\u761D", "\uFAA5"=>"\u761F", "\uFAA6"=>"\u76CA",
-    "\uFAA7"=>"\u76DB", "\uFAA8"=>"\u76F4", "\uFAA9"=>"\u774A", "\uFAAA"=>"\u7740", "\uFAAB"=>"\u78CC", "\uFAAC"=>"\u7AB1", "\uFAAD"=>"\u7BC0", "\uFAAE"=>"\u7C7B",
-    "\uFAAF"=>"\u7D5B", "\uFAB0"=>"\u7DF4", "\uFAB1"=>"\u7F3E", "\uFAB2"=>"\u8005", "\uFAB3"=>"\u8352", "\uFAB4"=>"\u83EF", "\uFAB5"=>"\u8779", "\uFAB6"=>"\u8941",
-    "\uFAB7"=>"\u8986", "\uFAB8"=>"\u8996", "\uFAB9"=>"\u8ABF", "\uFABA"=>"\u8AF8", "\uFABB"=>"\u8ACB", "\uFABC"=>"\u8B01", "\uFABD"=>"\u8AFE", "\uFABE"=>"\u8AED",
-    "\uFABF"=>"\u8B39", "\uFAC0"=>"\u8B8A", "\uFAC1"=>"\u8D08", "\uFAC2"=>"\u8F38", "\uFAC3"=>"\u9072", "\uFAC4"=>"\u9199", "\uFAC5"=>"\u9276", "\uFAC6"=>"\u967C",
-    "\uFAC7"=>"\u96E3", "\uFAC8"=>"\u9756", "\uFAC9"=>"\u97DB", "\uFACA"=>"\u97FF", "\uFACB"=>"\u980B", "\uFACC"=>"\u983B", "\uFACD"=>"\u9B12", "\uFACE"=>"\u9F9C",
-    "\uFACF"=>"\u{2284A}", "\uFAD0"=>"\u{22844}", "\uFAD1"=>"\u{233D5}", "\uFAD2"=>"\u3B9D", "\uFAD3"=>"\u4018", "\uFAD4"=>"\u4039", "\uFAD5"=>"\u{25249}", "\uFAD6"=>"\u{25CD0}",
-    "\uFAD7"=>"\u{27ED3}", "\uFAD8"=>"\u9F43", "\uFAD9"=>"\u9F8E", "\uFB1D"=>"\u05D9\u05B4", "\uFB1F"=>"\u05F2\u05B7", "\uFB2A"=>"\u05E9\u05C1", "\uFB2B"=>"\u05E9\u05C2", "\uFB2C"=>"\u05E9\u05BC\u05C1",
-    "\uFB2D"=>"\u05E9\u05BC\u05C2", "\uFB2E"=>"\u05D0\u05B7", "\uFB2F"=>"\u05D0\u05B8", "\uFB30"=>"\u05D0\u05BC", "\uFB31"=>"\u05D1\u05BC", "\uFB32"=>"\u05D2\u05BC", "\uFB33"=>"\u05D3\u05BC", "\uFB34"=>"\u05D4\u05BC",
-    "\uFB35"=>"\u05D5\u05BC", "\uFB36"=>"\u05D6\u05BC", "\uFB38"=>"\u05D8\u05BC", "\uFB39"=>"\u05D9\u05BC", "\uFB3A"=>"\u05DA\u05BC", "\uFB3B"=>"\u05DB\u05BC", "\uFB3C"=>"\u05DC\u05BC", "\uFB3E"=>"\u05DE\u05BC",
-    "\uFB40"=>"\u05E0\u05BC", "\uFB41"=>"\u05E1\u05BC", "\uFB43"=>"\u05E3\u05BC", "\uFB44"=>"\u05E4\u05BC", "\uFB46"=>"\u05E6\u05BC", "\uFB47"=>"\u05E7\u05BC", "\uFB48"=>"\u05E8\u05BC", "\uFB49"=>"\u05E9\u05BC",
-    "\uFB4A"=>"\u05EA\u05BC", "\uFB4B"=>"\u05D5\u05B9", "\uFB4C"=>"\u05D1\u05BF", "\uFB4D"=>"\u05DB\u05BF", "\uFB4E"=>"\u05E4\u05BF", "\u{1109A}"=>"\u{11099}\u{110BA}", "\u{1109C}"=>"\u{1109B}\u{110BA}", "\u{110AB}"=>"\u{110A5}\u{110BA}",
-    "\u{1112E}"=>"\u{11131}\u{11127}", "\u{1112F}"=>"\u{11132}\u{11127}", "\u{1134B}"=>"\u{11347}\u{1133E}", "\u{1134C}"=>"\u{11347}\u{11357}", "\u{114BB}"=>"\u{114B9}\u{114BA}", "\u{114BC}"=>"\u{114B9}\u{114B0}", "\u{114BE}"=>"\u{114B9}\u{114BD}", "\u{115BA}"=>"\u{115B8}\u{115AF}",
-    "\u{115BB}"=>"\u{115B9}\u{115AF}", "\u{1D15E}"=>"\u{1D157}\u{1D165}", "\u{1D15F}"=>"\u{1D158}\u{1D165}", "\u{1D160}"=>"\u{1D158}\u{1D165}\u{1D16E}", "\u{1D161}"=>"\u{1D158}\u{1D165}\u{1D16F}", "\u{1D162}"=>"\u{1D158}\u{1D165}\u{1D170}", "\u{1D163}"=>"\u{1D158}\u{1D165}\u{1D171}", "\u{1D164}"=>"\u{1D158}\u{1D165}\u{1D172}",
-    "\u{1D1BB}"=>"\u{1D1B9}\u{1D165}", "\u{1D1BC}"=>"\u{1D1BA}\u{1D165}", "\u{1D1BD}"=>"\u{1D1B9}\u{1D165}\u{1D16E}", "\u{1D1BE}"=>"\u{1D1BA}\u{1D165}\u{1D16E}", "\u{1D1BF}"=>"\u{1D1B9}\u{1D165}\u{1D16F}", "\u{1D1C0}"=>"\u{1D1BA}\u{1D165}\u{1D16F}", "\u{2F800}"=>"\u4E3D", "\u{2F801}"=>"\u4E38",
-    "\u{2F802}"=>"\u4E41", "\u{2F803}"=>"\u{20122}", "\u{2F804}"=>"\u4F60", "\u{2F805}"=>"\u4FAE", "\u{2F806}"=>"\u4FBB", "\u{2F807}"=>"\u5002", "\u{2F808}"=>"\u507A", "\u{2F809}"=>"\u5099",
-    "\u{2F80A}"=>"\u50E7", "\u{2F80B}"=>"\u50CF", "\u{2F80C}"=>"\u349E", "\u{2F80D}"=>"\u{2063A}", "\u{2F80E}"=>"\u514D", "\u{2F80F}"=>"\u5154", "\u{2F810}"=>"\u5164", "\u{2F811}"=>"\u5177",
-    "\u{2F812}"=>"\u{2051C}", "\u{2F813}"=>"\u34B9", "\u{2F814}"=>"\u5167", "\u{2F815}"=>"\u518D", "\u{2F816}"=>"\u{2054B}", "\u{2F817}"=>"\u5197", "\u{2F818}"=>"\u51A4", "\u{2F819}"=>"\u4ECC",
-    "\u{2F81A}"=>"\u51AC", "\u{2F81B}"=>"\u51B5", "\u{2F81C}"=>"\u{291DF}", "\u{2F81D}"=>"\u51F5", "\u{2F81E}"=>"\u5203", "\u{2F81F}"=>"\u34DF", "\u{2F820}"=>"\u523B", "\u{2F821}"=>"\u5246",
-    "\u{2F822}"=>"\u5272", "\u{2F823}"=>"\u5277", "\u{2F824}"=>"\u3515", "\u{2F825}"=>"\u52C7", "\u{2F826}"=>"\u52C9", "\u{2F827}"=>"\u52E4", "\u{2F828}"=>"\u52FA", "\u{2F829}"=>"\u5305",
-    "\u{2F82A}"=>"\u5306", "\u{2F82B}"=>"\u5317", "\u{2F82C}"=>"\u5349", "\u{2F82D}"=>"\u5351", "\u{2F82E}"=>"\u535A", "\u{2F82F}"=>"\u5373", "\u{2F830}"=>"\u537D", "\u{2F831}"=>"\u537F",
-    "\u{2F832}"=>"\u537F", "\u{2F833}"=>"\u537F", "\u{2F834}"=>"\u{20A2C}", "\u{2F835}"=>"\u7070", "\u{2F836}"=>"\u53CA", "\u{2F837}"=>"\u53DF", "\u{2F838}"=>"\u{20B63}", "\u{2F839}"=>"\u53EB",
-    "\u{2F83A}"=>"\u53F1", "\u{2F83B}"=>"\u5406", "\u{2F83C}"=>"\u549E", "\u{2F83D}"=>"\u5438", "\u{2F83E}"=>"\u5448", "\u{2F83F}"=>"\u5468", "\u{2F840}"=>"\u54A2", "\u{2F841}"=>"\u54F6",
-    "\u{2F842}"=>"\u5510", "\u{2F843}"=>"\u5553", "\u{2F844}"=>"\u5563", "\u{2F845}"=>"\u5584", "\u{2F846}"=>"\u5584", "\u{2F847}"=>"\u5599", "\u{2F848}"=>"\u55AB", "\u{2F849}"=>"\u55B3",
-    "\u{2F84A}"=>"\u55C2", "\u{2F84B}"=>"\u5716", "\u{2F84C}"=>"\u5606", "\u{2F84D}"=>"\u5717", "\u{2F84E}"=>"\u5651", "\u{2F84F}"=>"\u5674", "\u{2F850}"=>"\u5207", "\u{2F851}"=>"\u58EE",
-    "\u{2F852}"=>"\u57CE", "\u{2F853}"=>"\u57F4", "\u{2F854}"=>"\u580D", "\u{2F855}"=>"\u578B", "\u{2F856}"=>"\u5832", "\u{2F857}"=>"\u5831", "\u{2F858}"=>"\u58AC", "\u{2F859}"=>"\u{214E4}",
-    "\u{2F85A}"=>"\u58F2", "\u{2F85B}"=>"\u58F7", "\u{2F85C}"=>"\u5906", "\u{2F85D}"=>"\u591A", "\u{2F85E}"=>"\u5922", "\u{2F85F}"=>"\u5962", "\u{2F860}"=>"\u{216A8}", "\u{2F861}"=>"\u{216EA}",
-    "\u{2F862}"=>"\u59EC", "\u{2F863}"=>"\u5A1B", "\u{2F864}"=>"\u5A27", "\u{2F865}"=>"\u59D8", "\u{2F866}"=>"\u5A66", "\u{2F867}"=>"\u36EE", "\u{2F868}"=>"\u36FC", "\u{2F869}"=>"\u5B08",
-    "\u{2F86A}"=>"\u5B3E", "\u{2F86B}"=>"\u5B3E", "\u{2F86C}"=>"\u{219C8}", "\u{2F86D}"=>"\u5BC3", "\u{2F86E}"=>"\u5BD8", "\u{2F86F}"=>"\u5BE7", "\u{2F870}"=>"\u5BF3", "\u{2F871}"=>"\u{21B18}",
-    "\u{2F872}"=>"\u5BFF", "\u{2F873}"=>"\u5C06", "\u{2F874}"=>"\u5F53", "\u{2F875}"=>"\u5C22", "\u{2F876}"=>"\u3781", "\u{2F877}"=>"\u5C60", "\u{2F878}"=>"\u5C6E", "\u{2F879}"=>"\u5CC0",
-    "\u{2F87A}"=>"\u5C8D", "\u{2F87B}"=>"\u{21DE4}", "\u{2F87C}"=>"\u5D43", "\u{2F87D}"=>"\u{21DE6}", "\u{2F87E}"=>"\u5D6E", "\u{2F87F}"=>"\u5D6B", "\u{2F880}"=>"\u5D7C", "\u{2F881}"=>"\u5DE1",
-    "\u{2F882}"=>"\u5DE2", "\u{2F883}"=>"\u382F", "\u{2F884}"=>"\u5DFD", "\u{2F885}"=>"\u5E28", "\u{2F886}"=>"\u5E3D", "\u{2F887}"=>"\u5E69", "\u{2F888}"=>"\u3862", "\u{2F889}"=>"\u{22183}",
-    "\u{2F88A}"=>"\u387C", "\u{2F88B}"=>"\u5EB0", "\u{2F88C}"=>"\u5EB3", "\u{2F88D}"=>"\u5EB6", "\u{2F88E}"=>"\u5ECA", "\u{2F88F}"=>"\u{2A392}", "\u{2F890}"=>"\u5EFE", "\u{2F891}"=>"\u{22331}",
-    "\u{2F892}"=>"\u{22331}", "\u{2F893}"=>"\u8201", "\u{2F894}"=>"\u5F22", "\u{2F895}"=>"\u5F22", "\u{2F896}"=>"\u38C7", "\u{2F897}"=>"\u{232B8}", "\u{2F898}"=>"\u{261DA}", "\u{2F899}"=>"\u5F62",
-    "\u{2F89A}"=>"\u5F6B", "\u{2F89B}"=>"\u38E3", "\u{2F89C}"=>"\u5F9A", "\u{2F89D}"=>"\u5FCD", "\u{2F89E}"=>"\u5FD7", "\u{2F89F}"=>"\u5FF9", "\u{2F8A0}"=>"\u6081", "\u{2F8A1}"=>"\u393A",
-    "\u{2F8A2}"=>"\u391C", "\u{2F8A3}"=>"\u6094", "\u{2F8A4}"=>"\u{226D4}", "\u{2F8A5}"=>"\u60C7", "\u{2F8A6}"=>"\u6148", "\u{2F8A7}"=>"\u614C", "\u{2F8A8}"=>"\u614E", "\u{2F8A9}"=>"\u614C",
-    "\u{2F8AA}"=>"\u617A", "\u{2F8AB}"=>"\u618E", "\u{2F8AC}"=>"\u61B2", "\u{2F8AD}"=>"\u61A4", "\u{2F8AE}"=>"\u61AF", "\u{2F8AF}"=>"\u61DE", "\u{2F8B0}"=>"\u61F2", "\u{2F8B1}"=>"\u61F6",
-    "\u{2F8B2}"=>"\u6210", "\u{2F8B3}"=>"\u621B", "\u{2F8B4}"=>"\u625D", "\u{2F8B5}"=>"\u62B1", "\u{2F8B6}"=>"\u62D4", "\u{2F8B7}"=>"\u6350", "\u{2F8B8}"=>"\u{22B0C}", "\u{2F8B9}"=>"\u633D",
-    "\u{2F8BA}"=>"\u62FC", "\u{2F8BB}"=>"\u6368", "\u{2F8BC}"=>"\u6383", "\u{2F8BD}"=>"\u63E4", "\u{2F8BE}"=>"\u{22BF1}", "\u{2F8BF}"=>"\u6422", "\u{2F8C0}"=>"\u63C5", "\u{2F8C1}"=>"\u63A9",
-    "\u{2F8C2}"=>"\u3A2E", "\u{2F8C3}"=>"\u6469", "\u{2F8C4}"=>"\u647E", "\u{2F8C5}"=>"\u649D", "\u{2F8C6}"=>"\u6477", "\u{2F8C7}"=>"\u3A6C", "\u{2F8C8}"=>"\u654F", "\u{2F8C9}"=>"\u656C",
-    "\u{2F8CA}"=>"\u{2300A}", "\u{2F8CB}"=>"\u65E3", "\u{2F8CC}"=>"\u66F8", "\u{2F8CD}"=>"\u6649", "\u{2F8CE}"=>"\u3B19", "\u{2F8CF}"=>"\u6691", "\u{2F8D0}"=>"\u3B08", "\u{2F8D1}"=>"\u3AE4",
-    "\u{2F8D2}"=>"\u5192", "\u{2F8D3}"=>"\u5195", "\u{2F8D4}"=>"\u6700", "\u{2F8D5}"=>"\u669C", "\u{2F8D6}"=>"\u80AD", "\u{2F8D7}"=>"\u43D9", "\u{2F8D8}"=>"\u6717", "\u{2F8D9}"=>"\u671B",
-    "\u{2F8DA}"=>"\u6721", "\u{2F8DB}"=>"\u675E", "\u{2F8DC}"=>"\u6753", "\u{2F8DD}"=>"\u{233C3}", "\u{2F8DE}"=>"\u3B49", "\u{2F8DF}"=>"\u67FA", "\u{2F8E0}"=>"\u6785", "\u{2F8E1}"=>"\u6852",
-    "\u{2F8E2}"=>"\u6885", "\u{2F8E3}"=>"\u{2346D}", "\u{2F8E4}"=>"\u688E", "\u{2F8E5}"=>"\u681F", "\u{2F8E6}"=>"\u6914", "\u{2F8E7}"=>"\u3B9D", "\u{2F8E8}"=>"\u6942", "\u{2F8E9}"=>"\u69A3",
-    "\u{2F8EA}"=>"\u69EA", "\u{2F8EB}"=>"\u6AA8", "\u{2F8EC}"=>"\u{236A3}", "\u{2F8ED}"=>"\u6ADB", "\u{2F8EE}"=>"\u3C18", "\u{2F8EF}"=>"\u6B21", "\u{2F8F0}"=>"\u{238A7}", "\u{2F8F1}"=>"\u6B54",
-    "\u{2F8F2}"=>"\u3C4E", "\u{2F8F3}"=>"\u6B72", "\u{2F8F4}"=>"\u6B9F", "\u{2F8F5}"=>"\u6BBA", "\u{2F8F6}"=>"\u6BBB", "\u{2F8F7}"=>"\u{23A8D}", "\u{2F8F8}"=>"\u{21D0B}", "\u{2F8F9}"=>"\u{23AFA}",
-    "\u{2F8FA}"=>"\u6C4E", "\u{2F8FB}"=>"\u{23CBC}", "\u{2F8FC}"=>"\u6CBF", "\u{2F8FD}"=>"\u6CCD", "\u{2F8FE}"=>"\u6C67", "\u{2F8FF}"=>"\u6D16", "\u{2F900}"=>"\u6D3E", "\u{2F901}"=>"\u6D77",
-    "\u{2F902}"=>"\u6D41", "\u{2F903}"=>"\u6D69", "\u{2F904}"=>"\u6D78", "\u{2F905}"=>"\u6D85", "\u{2F906}"=>"\u{23D1E}", "\u{2F907}"=>"\u6D34", "\u{2F908}"=>"\u6E2F", "\u{2F909}"=>"\u6E6E",
-    "\u{2F90A}"=>"\u3D33", "\u{2F90B}"=>"\u6ECB", "\u{2F90C}"=>"\u6EC7", "\u{2F90D}"=>"\u{23ED1}", "\u{2F90E}"=>"\u6DF9", "\u{2F90F}"=>"\u6F6E", "\u{2F910}"=>"\u{23F5E}", "\u{2F911}"=>"\u{23F8E}",
-    "\u{2F912}"=>"\u6FC6", "\u{2F913}"=>"\u7039", "\u{2F914}"=>"\u701E", "\u{2F915}"=>"\u701B", "\u{2F916}"=>"\u3D96", "\u{2F917}"=>"\u704A", "\u{2F918}"=>"\u707D", "\u{2F919}"=>"\u7077",
-    "\u{2F91A}"=>"\u70AD", "\u{2F91B}"=>"\u{20525}", "\u{2F91C}"=>"\u7145", "\u{2F91D}"=>"\u{24263}", "\u{2F91E}"=>"\u719C", "\u{2F91F}"=>"\u{243AB}", "\u{2F920}"=>"\u7228", "\u{2F921}"=>"\u7235",
-    "\u{2F922}"=>"\u7250", "\u{2F923}"=>"\u{24608}", "\u{2F924}"=>"\u7280", "\u{2F925}"=>"\u7295", "\u{2F926}"=>"\u{24735}", "\u{2F927}"=>"\u{24814}", "\u{2F928}"=>"\u737A", "\u{2F929}"=>"\u738B",
-    "\u{2F92A}"=>"\u3EAC", "\u{2F92B}"=>"\u73A5", "\u{2F92C}"=>"\u3EB8", "\u{2F92D}"=>"\u3EB8", "\u{2F92E}"=>"\u7447", "\u{2F92F}"=>"\u745C", "\u{2F930}"=>"\u7471", "\u{2F931}"=>"\u7485",
-    "\u{2F932}"=>"\u74CA", "\u{2F933}"=>"\u3F1B", "\u{2F934}"=>"\u7524", "\u{2F935}"=>"\u{24C36}", "\u{2F936}"=>"\u753E", "\u{2F937}"=>"\u{24C92}", "\u{2F938}"=>"\u7570", "\u{2F939}"=>"\u{2219F}",
-    "\u{2F93A}"=>"\u7610", "\u{2F93B}"=>"\u{24FA1}", "\u{2F93C}"=>"\u{24FB8}", "\u{2F93D}"=>"\u{25044}", "\u{2F93E}"=>"\u3FFC", "\u{2F93F}"=>"\u4008", "\u{2F940}"=>"\u76F4", "\u{2F941}"=>"\u{250F3}",
-    "\u{2F942}"=>"\u{250F2}", "\u{2F943}"=>"\u{25119}", "\u{2F944}"=>"\u{25133}", "\u{2F945}"=>"\u771E", "\u{2F946}"=>"\u771F", "\u{2F947}"=>"\u771F", "\u{2F948}"=>"\u774A", "\u{2F949}"=>"\u4039",
-    "\u{2F94A}"=>"\u778B", "\u{2F94B}"=>"\u4046", "\u{2F94C}"=>"\u4096", "\u{2F94D}"=>"\u{2541D}", "\u{2F94E}"=>"\u784E", "\u{2F94F}"=>"\u788C", "\u{2F950}"=>"\u78CC", "\u{2F951}"=>"\u40E3",
-    "\u{2F952}"=>"\u{25626}", "\u{2F953}"=>"\u7956", "\u{2F954}"=>"\u{2569A}", "\u{2F955}"=>"\u{256C5}", "\u{2F956}"=>"\u798F", "\u{2F957}"=>"\u79EB", "\u{2F958}"=>"\u412F", "\u{2F959}"=>"\u7A40",
-    "\u{2F95A}"=>"\u7A4A", "\u{2F95B}"=>"\u7A4F", "\u{2F95C}"=>"\u{2597C}", "\u{2F95D}"=>"\u{25AA7}", "\u{2F95E}"=>"\u{25AA7}", "\u{2F95F}"=>"\u7AEE", "\u{2F960}"=>"\u4202", "\u{2F961}"=>"\u{25BAB}",
-    "\u{2F962}"=>"\u7BC6", "\u{2F963}"=>"\u7BC9", "\u{2F964}"=>"\u4227", "\u{2F965}"=>"\u{25C80}", "\u{2F966}"=>"\u7CD2", "\u{2F967}"=>"\u42A0", "\u{2F968}"=>"\u7CE8", "\u{2F969}"=>"\u7CE3",
-    "\u{2F96A}"=>"\u7D00", "\u{2F96B}"=>"\u{25F86}", "\u{2F96C}"=>"\u7D63", "\u{2F96D}"=>"\u4301", "\u{2F96E}"=>"\u7DC7", "\u{2F96F}"=>"\u7E02", "\u{2F970}"=>"\u7E45", "\u{2F971}"=>"\u4334",
-    "\u{2F972}"=>"\u{26228}", "\u{2F973}"=>"\u{26247}", "\u{2F974}"=>"\u4359", "\u{2F975}"=>"\u{262D9}", "\u{2F976}"=>"\u7F7A", "\u{2F977}"=>"\u{2633E}", "\u{2F978}"=>"\u7F95", "\u{2F979}"=>"\u7FFA",
-    "\u{2F97A}"=>"\u8005", "\u{2F97B}"=>"\u{264DA}", "\u{2F97C}"=>"\u{26523}", "\u{2F97D}"=>"\u8060", "\u{2F97E}"=>"\u{265A8}", "\u{2F97F}"=>"\u8070", "\u{2F980}"=>"\u{2335F}", "\u{2F981}"=>"\u43D5",
-    "\u{2F982}"=>"\u80B2", "\u{2F983}"=>"\u8103", "\u{2F984}"=>"\u440B", "\u{2F985}"=>"\u813E", "\u{2F986}"=>"\u5AB5", "\u{2F987}"=>"\u{267A7}", "\u{2F988}"=>"\u{267B5}", "\u{2F989}"=>"\u{23393}",
-    "\u{2F98A}"=>"\u{2339C}", "\u{2F98B}"=>"\u8201", "\u{2F98C}"=>"\u8204", "\u{2F98D}"=>"\u8F9E", "\u{2F98E}"=>"\u446B", "\u{2F98F}"=>"\u8291", "\u{2F990}"=>"\u828B", "\u{2F991}"=>"\u829D",
-    "\u{2F992}"=>"\u52B3", "\u{2F993}"=>"\u82B1", "\u{2F994}"=>"\u82B3", "\u{2F995}"=>"\u82BD", "\u{2F996}"=>"\u82E6", "\u{2F997}"=>"\u{26B3C}", "\u{2F998}"=>"\u82E5", "\u{2F999}"=>"\u831D",
-    "\u{2F99A}"=>"\u8363", "\u{2F99B}"=>"\u83AD", "\u{2F99C}"=>"\u8323", "\u{2F99D}"=>"\u83BD", "\u{2F99E}"=>"\u83E7", "\u{2F99F}"=>"\u8457", "\u{2F9A0}"=>"\u8353", "\u{2F9A1}"=>"\u83CA",
-    "\u{2F9A2}"=>"\u83CC", "\u{2F9A3}"=>"\u83DC", "\u{2F9A4}"=>"\u{26C36}", "\u{2F9A5}"=>"\u{26D6B}", "\u{2F9A6}"=>"\u{26CD5}", "\u{2F9A7}"=>"\u452B", "\u{2F9A8}"=>"\u84F1", "\u{2F9A9}"=>"\u84F3",
-    "\u{2F9AA}"=>"\u8516", "\u{2F9AB}"=>"\u{273CA}", "\u{2F9AC}"=>"\u8564", "\u{2F9AD}"=>"\u{26F2C}", "\u{2F9AE}"=>"\u455D", "\u{2F9AF}"=>"\u4561", "\u{2F9B0}"=>"\u{26FB1}", "\u{2F9B1}"=>"\u{270D2}",
-    "\u{2F9B2}"=>"\u456B", "\u{2F9B3}"=>"\u8650", "\u{2F9B4}"=>"\u865C", "\u{2F9B5}"=>"\u8667", "\u{2F9B6}"=>"\u8669", "\u{2F9B7}"=>"\u86A9", "\u{2F9B8}"=>"\u8688", "\u{2F9B9}"=>"\u870E",
-    "\u{2F9BA}"=>"\u86E2", "\u{2F9BB}"=>"\u8779", "\u{2F9BC}"=>"\u8728", "\u{2F9BD}"=>"\u876B", "\u{2F9BE}"=>"\u8786", "\u{2F9BF}"=>"\u45D7", "\u{2F9C0}"=>"\u87E1", "\u{2F9C1}"=>"\u8801",
-    "\u{2F9C2}"=>"\u45F9", "\u{2F9C3}"=>"\u8860", "\u{2F9C4}"=>"\u8863", "\u{2F9C5}"=>"\u{27667}", "\u{2F9C6}"=>"\u88D7", "\u{2F9C7}"=>"\u88DE", "\u{2F9C8}"=>"\u4635", "\u{2F9C9}"=>"\u88FA",
-    "\u{2F9CA}"=>"\u34BB", "\u{2F9CB}"=>"\u{278AE}", "\u{2F9CC}"=>"\u{27966}", "\u{2F9CD}"=>"\u46BE", "\u{2F9CE}"=>"\u46C7", "\u{2F9CF}"=>"\u8AA0", "\u{2F9D0}"=>"\u8AED", "\u{2F9D1}"=>"\u8B8A",
-    "\u{2F9D2}"=>"\u8C55", "\u{2F9D3}"=>"\u{27CA8}", "\u{2F9D4}"=>"\u8CAB", "\u{2F9D5}"=>"\u8CC1", "\u{2F9D6}"=>"\u8D1B", "\u{2F9D7}"=>"\u8D77", "\u{2F9D8}"=>"\u{27F2F}", "\u{2F9D9}"=>"\u{20804}",
-    "\u{2F9DA}"=>"\u8DCB", "\u{2F9DB}"=>"\u8DBC", "\u{2F9DC}"=>"\u8DF0", "\u{2F9DD}"=>"\u{208DE}", "\u{2F9DE}"=>"\u8ED4", "\u{2F9DF}"=>"\u8F38", "\u{2F9E0}"=>"\u{285D2}", "\u{2F9E1}"=>"\u{285ED}",
-    "\u{2F9E2}"=>"\u9094", "\u{2F9E3}"=>"\u90F1", "\u{2F9E4}"=>"\u9111", "\u{2F9E5}"=>"\u{2872E}", "\u{2F9E6}"=>"\u911B", "\u{2F9E7}"=>"\u9238", "\u{2F9E8}"=>"\u92D7", "\u{2F9E9}"=>"\u92D8",
-    "\u{2F9EA}"=>"\u927C", "\u{2F9EB}"=>"\u93F9", "\u{2F9EC}"=>"\u9415", "\u{2F9ED}"=>"\u{28BFA}", "\u{2F9EE}"=>"\u958B", "\u{2F9EF}"=>"\u4995", "\u{2F9F0}"=>"\u95B7", "\u{2F9F1}"=>"\u{28D77}",
-    "\u{2F9F2}"=>"\u49E6", "\u{2F9F3}"=>"\u96C3", "\u{2F9F4}"=>"\u5DB2", "\u{2F9F5}"=>"\u9723", "\u{2F9F6}"=>"\u{29145}", "\u{2F9F7}"=>"\u{2921A}", "\u{2F9F8}"=>"\u4A6E", "\u{2F9F9}"=>"\u4A76",
-    "\u{2F9FA}"=>"\u97E0", "\u{2F9FB}"=>"\u{2940A}", "\u{2F9FC}"=>"\u4AB2", "\u{2F9FD}"=>"\u{29496}", "\u{2F9FE}"=>"\u980B", "\u{2F9FF}"=>"\u980B", "\u{2FA00}"=>"\u9829", "\u{2FA01}"=>"\u{295B6}",
-    "\u{2FA02}"=>"\u98E2", "\u{2FA03}"=>"\u4B33", "\u{2FA04}"=>"\u9929", "\u{2FA05}"=>"\u99A7", "\u{2FA06}"=>"\u99C2", "\u{2FA07}"=>"\u99FE", "\u{2FA08}"=>"\u4BCE", "\u{2FA09}"=>"\u{29B30}",
-    "\u{2FA0A}"=>"\u9B12", "\u{2FA0B}"=>"\u9C40", "\u{2FA0C}"=>"\u9CFD", "\u{2FA0D}"=>"\u4CCE", "\u{2FA0E}"=>"\u4CED", "\u{2FA0F}"=>"\u9D67", "\u{2FA10}"=>"\u{2A0CE}", "\u{2FA11}"=>"\u4CF8",
-    "\u{2FA12}"=>"\u{2A105}", "\u{2FA13}"=>"\u{2A20E}", "\u{2FA14}"=>"\u{2A291}", "\u{2FA15}"=>"\u9EBB", "\u{2FA16}"=>"\u4D56", "\u{2FA17}"=>"\u9EF9", "\u{2FA18}"=>"\u9EFE", "\u{2FA19}"=>"\u9F05",
-    "\u{2FA1A}"=>"\u9F0F", "\u{2FA1B}"=>"\u9F16", "\u{2FA1C}"=>"\u9F3B", "\u{2FA1D}"=>"\u{2A600}",
+    "\u00C0"=>"A\u0300",
+    "\u00C1"=>"A\u0301",
+    "\u00C2"=>"A\u0302",
+    "\u00C3"=>"A\u0303",
+    "\u00C4"=>"A\u0308",
+    "\u00C5"=>"A\u030A",
+    "\u00C7"=>"C\u0327",
+    "\u00C8"=>"E\u0300",
+    "\u00C9"=>"E\u0301",
+    "\u00CA"=>"E\u0302",
+    "\u00CB"=>"E\u0308",
+    "\u00CC"=>"I\u0300",
+    "\u00CD"=>"I\u0301",
+    "\u00CE"=>"I\u0302",
+    "\u00CF"=>"I\u0308",
+    "\u00D1"=>"N\u0303",
+    "\u00D2"=>"O\u0300",
+    "\u00D3"=>"O\u0301",
+    "\u00D4"=>"O\u0302",
+    "\u00D5"=>"O\u0303",
+    "\u00D6"=>"O\u0308",
+    "\u00D9"=>"U\u0300",
+    "\u00DA"=>"U\u0301",
+    "\u00DB"=>"U\u0302",
+    "\u00DC"=>"U\u0308",
+    "\u00DD"=>"Y\u0301",
+    "\u00E0"=>"a\u0300",
+    "\u00E1"=>"a\u0301",
+    "\u00E2"=>"a\u0302",
+    "\u00E3"=>"a\u0303",
+    "\u00E4"=>"a\u0308",
+    "\u00E5"=>"a\u030A",
+    "\u00E7"=>"c\u0327",
+    "\u00E8"=>"e\u0300",
+    "\u00E9"=>"e\u0301",
+    "\u00EA"=>"e\u0302",
+    "\u00EB"=>"e\u0308",
+    "\u00EC"=>"i\u0300",
+    "\u00ED"=>"i\u0301",
+    "\u00EE"=>"i\u0302",
+    "\u00EF"=>"i\u0308",
+    "\u00F1"=>"n\u0303",
+    "\u00F2"=>"o\u0300",
+    "\u00F3"=>"o\u0301",
+    "\u00F4"=>"o\u0302",
+    "\u00F5"=>"o\u0303",
+    "\u00F6"=>"o\u0308",
+    "\u00F9"=>"u\u0300",
+    "\u00FA"=>"u\u0301",
+    "\u00FB"=>"u\u0302",
+    "\u00FC"=>"u\u0308",
+    "\u00FD"=>"y\u0301",
+    "\u00FF"=>"y\u0308",
+    "\u0100"=>"A\u0304",
+    "\u0101"=>"a\u0304",
+    "\u0102"=>"A\u0306",
+    "\u0103"=>"a\u0306",
+    "\u0104"=>"A\u0328",
+    "\u0105"=>"a\u0328",
+    "\u0106"=>"C\u0301",
+    "\u0107"=>"c\u0301",
+    "\u0108"=>"C\u0302",
+    "\u0109"=>"c\u0302",
+    "\u010A"=>"C\u0307",
+    "\u010B"=>"c\u0307",
+    "\u010C"=>"C\u030C",
+    "\u010D"=>"c\u030C",
+    "\u010E"=>"D\u030C",
+    "\u010F"=>"d\u030C",
+    "\u0112"=>"E\u0304",
+    "\u0113"=>"e\u0304",
+    "\u0114"=>"E\u0306",
+    "\u0115"=>"e\u0306",
+    "\u0116"=>"E\u0307",
+    "\u0117"=>"e\u0307",
+    "\u0118"=>"E\u0328",
+    "\u0119"=>"e\u0328",
+    "\u011A"=>"E\u030C",
+    "\u011B"=>"e\u030C",
+    "\u011C"=>"G\u0302",
+    "\u011D"=>"g\u0302",
+    "\u011E"=>"G\u0306",
+    "\u011F"=>"g\u0306",
+    "\u0120"=>"G\u0307",
+    "\u0121"=>"g\u0307",
+    "\u0122"=>"G\u0327",
+    "\u0123"=>"g\u0327",
+    "\u0124"=>"H\u0302",
+    "\u0125"=>"h\u0302",
+    "\u0128"=>"I\u0303",
+    "\u0129"=>"i\u0303",
+    "\u012A"=>"I\u0304",
+    "\u012B"=>"i\u0304",
+    "\u012C"=>"I\u0306",
+    "\u012D"=>"i\u0306",
+    "\u012E"=>"I\u0328",
+    "\u012F"=>"i\u0328",
+    "\u0130"=>"I\u0307",
+    "\u0134"=>"J\u0302",
+    "\u0135"=>"j\u0302",
+    "\u0136"=>"K\u0327",
+    "\u0137"=>"k\u0327",
+    "\u0139"=>"L\u0301",
+    "\u013A"=>"l\u0301",
+    "\u013B"=>"L\u0327",
+    "\u013C"=>"l\u0327",
+    "\u013D"=>"L\u030C",
+    "\u013E"=>"l\u030C",
+    "\u0143"=>"N\u0301",
+    "\u0144"=>"n\u0301",
+    "\u0145"=>"N\u0327",
+    "\u0146"=>"n\u0327",
+    "\u0147"=>"N\u030C",
+    "\u0148"=>"n\u030C",
+    "\u014C"=>"O\u0304",
+    "\u014D"=>"o\u0304",
+    "\u014E"=>"O\u0306",
+    "\u014F"=>"o\u0306",
+    "\u0150"=>"O\u030B",
+    "\u0151"=>"o\u030B",
+    "\u0154"=>"R\u0301",
+    "\u0155"=>"r\u0301",
+    "\u0156"=>"R\u0327",
+    "\u0157"=>"r\u0327",
+    "\u0158"=>"R\u030C",
+    "\u0159"=>"r\u030C",
+    "\u015A"=>"S\u0301",
+    "\u015B"=>"s\u0301",
+    "\u015C"=>"S\u0302",
+    "\u015D"=>"s\u0302",
+    "\u015E"=>"S\u0327",
+    "\u015F"=>"s\u0327",
+    "\u0160"=>"S\u030C",
+    "\u0161"=>"s\u030C",
+    "\u0162"=>"T\u0327",
+    "\u0163"=>"t\u0327",
+    "\u0164"=>"T\u030C",
+    "\u0165"=>"t\u030C",
+    "\u0168"=>"U\u0303",
+    "\u0169"=>"u\u0303",
+    "\u016A"=>"U\u0304",
+    "\u016B"=>"u\u0304",
+    "\u016C"=>"U\u0306",
+    "\u016D"=>"u\u0306",
+    "\u016E"=>"U\u030A",
+    "\u016F"=>"u\u030A",
+    "\u0170"=>"U\u030B",
+    "\u0171"=>"u\u030B",
+    "\u0172"=>"U\u0328",
+    "\u0173"=>"u\u0328",
+    "\u0174"=>"W\u0302",
+    "\u0175"=>"w\u0302",
+    "\u0176"=>"Y\u0302",
+    "\u0177"=>"y\u0302",
+    "\u0178"=>"Y\u0308",
+    "\u0179"=>"Z\u0301",
+    "\u017A"=>"z\u0301",
+    "\u017B"=>"Z\u0307",
+    "\u017C"=>"z\u0307",
+    "\u017D"=>"Z\u030C",
+    "\u017E"=>"z\u030C",
+    "\u01A0"=>"O\u031B",
+    "\u01A1"=>"o\u031B",
+    "\u01AF"=>"U\u031B",
+    "\u01B0"=>"u\u031B",
+    "\u01CD"=>"A\u030C",
+    "\u01CE"=>"a\u030C",
+    "\u01CF"=>"I\u030C",
+    "\u01D0"=>"i\u030C",
+    "\u01D1"=>"O\u030C",
+    "\u01D2"=>"o\u030C",
+    "\u01D3"=>"U\u030C",
+    "\u01D4"=>"u\u030C",
+    "\u01D5"=>"U\u0308\u0304",
+    "\u01D6"=>"u\u0308\u0304",
+    "\u01D7"=>"U\u0308\u0301",
+    "\u01D8"=>"u\u0308\u0301",
+    "\u01D9"=>"U\u0308\u030C",
+    "\u01DA"=>"u\u0308\u030C",
+    "\u01DB"=>"U\u0308\u0300",
+    "\u01DC"=>"u\u0308\u0300",
+    "\u01DE"=>"A\u0308\u0304",
+    "\u01DF"=>"a\u0308\u0304",
+    "\u01E0"=>"A\u0307\u0304",
+    "\u01E1"=>"a\u0307\u0304",
+    "\u01E2"=>"\u00C6\u0304",
+    "\u01E3"=>"\u00E6\u0304",
+    "\u01E6"=>"G\u030C",
+    "\u01E7"=>"g\u030C",
+    "\u01E8"=>"K\u030C",
+    "\u01E9"=>"k\u030C",
+    "\u01EA"=>"O\u0328",
+    "\u01EB"=>"o\u0328",
+    "\u01EC"=>"O\u0328\u0304",
+    "\u01ED"=>"o\u0328\u0304",
+    "\u01EE"=>"\u01B7\u030C",
+    "\u01EF"=>"\u0292\u030C",
+    "\u01F0"=>"j\u030C",
+    "\u01F4"=>"G\u0301",
+    "\u01F5"=>"g\u0301",
+    "\u01F8"=>"N\u0300",
+    "\u01F9"=>"n\u0300",
+    "\u01FA"=>"A\u030A\u0301",
+    "\u01FB"=>"a\u030A\u0301",
+    "\u01FC"=>"\u00C6\u0301",
+    "\u01FD"=>"\u00E6\u0301",
+    "\u01FE"=>"\u00D8\u0301",
+    "\u01FF"=>"\u00F8\u0301",
+    "\u0200"=>"A\u030F",
+    "\u0201"=>"a\u030F",
+    "\u0202"=>"A\u0311",
+    "\u0203"=>"a\u0311",
+    "\u0204"=>"E\u030F",
+    "\u0205"=>"e\u030F",
+    "\u0206"=>"E\u0311",
+    "\u0207"=>"e\u0311",
+    "\u0208"=>"I\u030F",
+    "\u0209"=>"i\u030F",
+    "\u020A"=>"I\u0311",
+    "\u020B"=>"i\u0311",
+    "\u020C"=>"O\u030F",
+    "\u020D"=>"o\u030F",
+    "\u020E"=>"O\u0311",
+    "\u020F"=>"o\u0311",
+    "\u0210"=>"R\u030F",
+    "\u0211"=>"r\u030F",
+    "\u0212"=>"R\u0311",
+    "\u0213"=>"r\u0311",
+    "\u0214"=>"U\u030F",
+    "\u0215"=>"u\u030F",
+    "\u0216"=>"U\u0311",
+    "\u0217"=>"u\u0311",
+    "\u0218"=>"S\u0326",
+    "\u0219"=>"s\u0326",
+    "\u021A"=>"T\u0326",
+    "\u021B"=>"t\u0326",
+    "\u021E"=>"H\u030C",
+    "\u021F"=>"h\u030C",
+    "\u0226"=>"A\u0307",
+    "\u0227"=>"a\u0307",
+    "\u0228"=>"E\u0327",
+    "\u0229"=>"e\u0327",
+    "\u022A"=>"O\u0308\u0304",
+    "\u022B"=>"o\u0308\u0304",
+    "\u022C"=>"O\u0303\u0304",
+    "\u022D"=>"o\u0303\u0304",
+    "\u022E"=>"O\u0307",
+    "\u022F"=>"o\u0307",
+    "\u0230"=>"O\u0307\u0304",
+    "\u0231"=>"o\u0307\u0304",
+    "\u0232"=>"Y\u0304",
+    "\u0233"=>"y\u0304",
+    "\u0340"=>"\u0300",
+    "\u0341"=>"\u0301",
+    "\u0343"=>"\u0313",
+    "\u0344"=>"\u0308\u0301",
+    "\u0374"=>"\u02B9",
+    "\u037E"=>";",
+    "\u0385"=>"\u00A8\u0301",
+    "\u0386"=>"\u0391\u0301",
+    "\u0387"=>"\u00B7",
+    "\u0388"=>"\u0395\u0301",
+    "\u0389"=>"\u0397\u0301",
+    "\u038A"=>"\u0399\u0301",
+    "\u038C"=>"\u039F\u0301",
+    "\u038E"=>"\u03A5\u0301",
+    "\u038F"=>"\u03A9\u0301",
+    "\u0390"=>"\u03B9\u0308\u0301",
+    "\u03AA"=>"\u0399\u0308",
+    "\u03AB"=>"\u03A5\u0308",
+    "\u03AC"=>"\u03B1\u0301",
+    "\u03AD"=>"\u03B5\u0301",
+    "\u03AE"=>"\u03B7\u0301",
+    "\u03AF"=>"\u03B9\u0301",
+    "\u03B0"=>"\u03C5\u0308\u0301",
+    "\u03CA"=>"\u03B9\u0308",
+    "\u03CB"=>"\u03C5\u0308",
+    "\u03CC"=>"\u03BF\u0301",
+    "\u03CD"=>"\u03C5\u0301",
+    "\u03CE"=>"\u03C9\u0301",
+    "\u03D3"=>"\u03D2\u0301",
+    "\u03D4"=>"\u03D2\u0308",
+    "\u0400"=>"\u0415\u0300",
+    "\u0401"=>"\u0415\u0308",
+    "\u0403"=>"\u0413\u0301",
+    "\u0407"=>"\u0406\u0308",
+    "\u040C"=>"\u041A\u0301",
+    "\u040D"=>"\u0418\u0300",
+    "\u040E"=>"\u0423\u0306",
+    "\u0419"=>"\u0418\u0306",
+    "\u0439"=>"\u0438\u0306",
+    "\u0450"=>"\u0435\u0300",
+    "\u0451"=>"\u0435\u0308",
+    "\u0453"=>"\u0433\u0301",
+    "\u0457"=>"\u0456\u0308",
+    "\u045C"=>"\u043A\u0301",
+    "\u045D"=>"\u0438\u0300",
+    "\u045E"=>"\u0443\u0306",
+    "\u0476"=>"\u0474\u030F",
+    "\u0477"=>"\u0475\u030F",
+    "\u04C1"=>"\u0416\u0306",
+    "\u04C2"=>"\u0436\u0306",
+    "\u04D0"=>"\u0410\u0306",
+    "\u04D1"=>"\u0430\u0306",
+    "\u04D2"=>"\u0410\u0308",
+    "\u04D3"=>"\u0430\u0308",
+    "\u04D6"=>"\u0415\u0306",
+    "\u04D7"=>"\u0435\u0306",
+    "\u04DA"=>"\u04D8\u0308",
+    "\u04DB"=>"\u04D9\u0308",
+    "\u04DC"=>"\u0416\u0308",
+    "\u04DD"=>"\u0436\u0308",
+    "\u04DE"=>"\u0417\u0308",
+    "\u04DF"=>"\u0437\u0308",
+    "\u04E2"=>"\u0418\u0304",
+    "\u04E3"=>"\u0438\u0304",
+    "\u04E4"=>"\u0418\u0308",
+    "\u04E5"=>"\u0438\u0308",
+    "\u04E6"=>"\u041E\u0308",
+    "\u04E7"=>"\u043E\u0308",
+    "\u04EA"=>"\u04E8\u0308",
+    "\u04EB"=>"\u04E9\u0308",
+    "\u04EC"=>"\u042D\u0308",
+    "\u04ED"=>"\u044D\u0308",
+    "\u04EE"=>"\u0423\u0304",
+    "\u04EF"=>"\u0443\u0304",
+    "\u04F0"=>"\u0423\u0308",
+    "\u04F1"=>"\u0443\u0308",
+    "\u04F2"=>"\u0423\u030B",
+    "\u04F3"=>"\u0443\u030B",
+    "\u04F4"=>"\u0427\u0308",
+    "\u04F5"=>"\u0447\u0308",
+    "\u04F8"=>"\u042B\u0308",
+    "\u04F9"=>"\u044B\u0308",
+    "\u0622"=>"\u0627\u0653",
+    "\u0623"=>"\u0627\u0654",
+    "\u0624"=>"\u0648\u0654",
+    "\u0625"=>"\u0627\u0655",
+    "\u0626"=>"\u064A\u0654",
+    "\u06C0"=>"\u06D5\u0654",
+    "\u06C2"=>"\u06C1\u0654",
+    "\u06D3"=>"\u06D2\u0654",
+    "\u0929"=>"\u0928\u093C",
+    "\u0931"=>"\u0930\u093C",
+    "\u0934"=>"\u0933\u093C",
+    "\u0958"=>"\u0915\u093C",
+    "\u0959"=>"\u0916\u093C",
+    "\u095A"=>"\u0917\u093C",
+    "\u095B"=>"\u091C\u093C",
+    "\u095C"=>"\u0921\u093C",
+    "\u095D"=>"\u0922\u093C",
+    "\u095E"=>"\u092B\u093C",
+    "\u095F"=>"\u092F\u093C",
+    "\u09CB"=>"\u09C7\u09BE",
+    "\u09CC"=>"\u09C7\u09D7",
+    "\u09DC"=>"\u09A1\u09BC",
+    "\u09DD"=>"\u09A2\u09BC",
+    "\u09DF"=>"\u09AF\u09BC",
+    "\u0A33"=>"\u0A32\u0A3C",
+    "\u0A36"=>"\u0A38\u0A3C",
+    "\u0A59"=>"\u0A16\u0A3C",
+    "\u0A5A"=>"\u0A17\u0A3C",
+    "\u0A5B"=>"\u0A1C\u0A3C",
+    "\u0A5E"=>"\u0A2B\u0A3C",
+    "\u0B48"=>"\u0B47\u0B56",
+    "\u0B4B"=>"\u0B47\u0B3E",
+    "\u0B4C"=>"\u0B47\u0B57",
+    "\u0B5C"=>"\u0B21\u0B3C",
+    "\u0B5D"=>"\u0B22\u0B3C",
+    "\u0B94"=>"\u0B92\u0BD7",
+    "\u0BCA"=>"\u0BC6\u0BBE",
+    "\u0BCB"=>"\u0BC7\u0BBE",
+    "\u0BCC"=>"\u0BC6\u0BD7",
+    "\u0C48"=>"\u0C46\u0C56",
+    "\u0CC0"=>"\u0CBF\u0CD5",
+    "\u0CC7"=>"\u0CC6\u0CD5",
+    "\u0CC8"=>"\u0CC6\u0CD6",
+    "\u0CCA"=>"\u0CC6\u0CC2",
+    "\u0CCB"=>"\u0CC6\u0CC2\u0CD5",
+    "\u0D4A"=>"\u0D46\u0D3E",
+    "\u0D4B"=>"\u0D47\u0D3E",
+    "\u0D4C"=>"\u0D46\u0D57",
+    "\u0DDA"=>"\u0DD9\u0DCA",
+    "\u0DDC"=>"\u0DD9\u0DCF",
+    "\u0DDD"=>"\u0DD9\u0DCF\u0DCA",
+    "\u0DDE"=>"\u0DD9\u0DDF",
+    "\u0F43"=>"\u0F42\u0FB7",
+    "\u0F4D"=>"\u0F4C\u0FB7",
+    "\u0F52"=>"\u0F51\u0FB7",
+    "\u0F57"=>"\u0F56\u0FB7",
+    "\u0F5C"=>"\u0F5B\u0FB7",
+    "\u0F69"=>"\u0F40\u0FB5",
+    "\u0F73"=>"\u0F71\u0F72",
+    "\u0F75"=>"\u0F71\u0F74",
+    "\u0F76"=>"\u0FB2\u0F80",
+    "\u0F78"=>"\u0FB3\u0F80",
+    "\u0F81"=>"\u0F71\u0F80",
+    "\u0F93"=>"\u0F92\u0FB7",
+    "\u0F9D"=>"\u0F9C\u0FB7",
+    "\u0FA2"=>"\u0FA1\u0FB7",
+    "\u0FA7"=>"\u0FA6\u0FB7",
+    "\u0FAC"=>"\u0FAB\u0FB7",
+    "\u0FB9"=>"\u0F90\u0FB5",
+    "\u1026"=>"\u1025\u102E",
+    "\u1B06"=>"\u1B05\u1B35",
+    "\u1B08"=>"\u1B07\u1B35",
+    "\u1B0A"=>"\u1B09\u1B35",
+    "\u1B0C"=>"\u1B0B\u1B35",
+    "\u1B0E"=>"\u1B0D\u1B35",
+    "\u1B12"=>"\u1B11\u1B35",
+    "\u1B3B"=>"\u1B3A\u1B35",
+    "\u1B3D"=>"\u1B3C\u1B35",
+    "\u1B40"=>"\u1B3E\u1B35",
+    "\u1B41"=>"\u1B3F\u1B35",
+    "\u1B43"=>"\u1B42\u1B35",
+    "\u1E00"=>"A\u0325",
+    "\u1E01"=>"a\u0325",
+    "\u1E02"=>"B\u0307",
+    "\u1E03"=>"b\u0307",
+    "\u1E04"=>"B\u0323",
+    "\u1E05"=>"b\u0323",
+    "\u1E06"=>"B\u0331",
+    "\u1E07"=>"b\u0331",
+    "\u1E08"=>"C\u0327\u0301",
+    "\u1E09"=>"c\u0327\u0301",
+    "\u1E0A"=>"D\u0307",
+    "\u1E0B"=>"d\u0307",
+    "\u1E0C"=>"D\u0323",
+    "\u1E0D"=>"d\u0323",
+    "\u1E0E"=>"D\u0331",
+    "\u1E0F"=>"d\u0331",
+    "\u1E10"=>"D\u0327",
+    "\u1E11"=>"d\u0327",
+    "\u1E12"=>"D\u032D",
+    "\u1E13"=>"d\u032D",
+    "\u1E14"=>"E\u0304\u0300",
+    "\u1E15"=>"e\u0304\u0300",
+    "\u1E16"=>"E\u0304\u0301",
+    "\u1E17"=>"e\u0304\u0301",
+    "\u1E18"=>"E\u032D",
+    "\u1E19"=>"e\u032D",
+    "\u1E1A"=>"E\u0330",
+    "\u1E1B"=>"e\u0330",
+    "\u1E1C"=>"E\u0327\u0306",
+    "\u1E1D"=>"e\u0327\u0306",
+    "\u1E1E"=>"F\u0307",
+    "\u1E1F"=>"f\u0307",
+    "\u1E20"=>"G\u0304",
+    "\u1E21"=>"g\u0304",
+    "\u1E22"=>"H\u0307",
+    "\u1E23"=>"h\u0307",
+    "\u1E24"=>"H\u0323",
+    "\u1E25"=>"h\u0323",
+    "\u1E26"=>"H\u0308",
+    "\u1E27"=>"h\u0308",
+    "\u1E28"=>"H\u0327",
+    "\u1E29"=>"h\u0327",
+    "\u1E2A"=>"H\u032E",
+    "\u1E2B"=>"h\u032E",
+    "\u1E2C"=>"I\u0330",
+    "\u1E2D"=>"i\u0330",
+    "\u1E2E"=>"I\u0308\u0301",
+    "\u1E2F"=>"i\u0308\u0301",
+    "\u1E30"=>"K\u0301",
+    "\u1E31"=>"k\u0301",
+    "\u1E32"=>"K\u0323",
+    "\u1E33"=>"k\u0323",
+    "\u1E34"=>"K\u0331",
+    "\u1E35"=>"k\u0331",
+    "\u1E36"=>"L\u0323",
+    "\u1E37"=>"l\u0323",
+    "\u1E38"=>"L\u0323\u0304",
+    "\u1E39"=>"l\u0323\u0304",
+    "\u1E3A"=>"L\u0331",
+    "\u1E3B"=>"l\u0331",
+    "\u1E3C"=>"L\u032D",
+    "\u1E3D"=>"l\u032D",
+    "\u1E3E"=>"M\u0301",
+    "\u1E3F"=>"m\u0301",
+    "\u1E40"=>"M\u0307",
+    "\u1E41"=>"m\u0307",
+    "\u1E42"=>"M\u0323",
+    "\u1E43"=>"m\u0323",
+    "\u1E44"=>"N\u0307",
+    "\u1E45"=>"n\u0307",
+    "\u1E46"=>"N\u0323",
+    "\u1E47"=>"n\u0323",
+    "\u1E48"=>"N\u0331",
+    "\u1E49"=>"n\u0331",
+    "\u1E4A"=>"N\u032D",
+    "\u1E4B"=>"n\u032D",
+    "\u1E4C"=>"O\u0303\u0301",
+    "\u1E4D"=>"o\u0303\u0301",
+    "\u1E4E"=>"O\u0303\u0308",
+    "\u1E4F"=>"o\u0303\u0308",
+    "\u1E50"=>"O\u0304\u0300",
+    "\u1E51"=>"o\u0304\u0300",
+    "\u1E52"=>"O\u0304\u0301",
+    "\u1E53"=>"o\u0304\u0301",
+    "\u1E54"=>"P\u0301",
+    "\u1E55"=>"p\u0301",
+    "\u1E56"=>"P\u0307",
+    "\u1E57"=>"p\u0307",
+    "\u1E58"=>"R\u0307",
+    "\u1E59"=>"r\u0307",
+    "\u1E5A"=>"R\u0323",
+    "\u1E5B"=>"r\u0323",
+    "\u1E5C"=>"R\u0323\u0304",
+    "\u1E5D"=>"r\u0323\u0304",
+    "\u1E5E"=>"R\u0331",
+    "\u1E5F"=>"r\u0331",
+    "\u1E60"=>"S\u0307",
+    "\u1E61"=>"s\u0307",
+    "\u1E62"=>"S\u0323",
+    "\u1E63"=>"s\u0323",
+    "\u1E64"=>"S\u0301\u0307",
+    "\u1E65"=>"s\u0301\u0307",
+    "\u1E66"=>"S\u030C\u0307",
+    "\u1E67"=>"s\u030C\u0307",
+    "\u1E68"=>"S\u0323\u0307",
+    "\u1E69"=>"s\u0323\u0307",
+    "\u1E6A"=>"T\u0307",
+    "\u1E6B"=>"t\u0307",
+    "\u1E6C"=>"T\u0323",
+    "\u1E6D"=>"t\u0323",
+    "\u1E6E"=>"T\u0331",
+    "\u1E6F"=>"t\u0331",
+    "\u1E70"=>"T\u032D",
+    "\u1E71"=>"t\u032D",
+    "\u1E72"=>"U\u0324",
+    "\u1E73"=>"u\u0324",
+    "\u1E74"=>"U\u0330",
+    "\u1E75"=>"u\u0330",
+    "\u1E76"=>"U\u032D",
+    "\u1E77"=>"u\u032D",
+    "\u1E78"=>"U\u0303\u0301",
+    "\u1E79"=>"u\u0303\u0301",
+    "\u1E7A"=>"U\u0304\u0308",
+    "\u1E7B"=>"u\u0304\u0308",
+    "\u1E7C"=>"V\u0303",
+    "\u1E7D"=>"v\u0303",
+    "\u1E7E"=>"V\u0323",
+    "\u1E7F"=>"v\u0323",
+    "\u1E80"=>"W\u0300",
+    "\u1E81"=>"w\u0300",
+    "\u1E82"=>"W\u0301",
+    "\u1E83"=>"w\u0301",
+    "\u1E84"=>"W\u0308",
+    "\u1E85"=>"w\u0308",
+    "\u1E86"=>"W\u0307",
+    "\u1E87"=>"w\u0307",
+    "\u1E88"=>"W\u0323",
+    "\u1E89"=>"w\u0323",
+    "\u1E8A"=>"X\u0307",
+    "\u1E8B"=>"x\u0307",
+    "\u1E8C"=>"X\u0308",
+    "\u1E8D"=>"x\u0308",
+    "\u1E8E"=>"Y\u0307",
+    "\u1E8F"=>"y\u0307",
+    "\u1E90"=>"Z\u0302",
+    "\u1E91"=>"z\u0302",
+    "\u1E92"=>"Z\u0323",
+    "\u1E93"=>"z\u0323",
+    "\u1E94"=>"Z\u0331",
+    "\u1E95"=>"z\u0331",
+    "\u1E96"=>"h\u0331",
+    "\u1E97"=>"t\u0308",
+    "\u1E98"=>"w\u030A",
+    "\u1E99"=>"y\u030A",
+    "\u1E9B"=>"\u017F\u0307",
+    "\u1EA0"=>"A\u0323",
+    "\u1EA1"=>"a\u0323",
+    "\u1EA2"=>"A\u0309",
+    "\u1EA3"=>"a\u0309",
+    "\u1EA4"=>"A\u0302\u0301",
+    "\u1EA5"=>"a\u0302\u0301",
+    "\u1EA6"=>"A\u0302\u0300",
+    "\u1EA7"=>"a\u0302\u0300",
+    "\u1EA8"=>"A\u0302\u0309",
+    "\u1EA9"=>"a\u0302\u0309",
+    "\u1EAA"=>"A\u0302\u0303",
+    "\u1EAB"=>"a\u0302\u0303",
+    "\u1EAC"=>"A\u0323\u0302",
+    "\u1EAD"=>"a\u0323\u0302",
+    "\u1EAE"=>"A\u0306\u0301",
+    "\u1EAF"=>"a\u0306\u0301",
+    "\u1EB0"=>"A\u0306\u0300",
+    "\u1EB1"=>"a\u0306\u0300",
+    "\u1EB2"=>"A\u0306\u0309",
+    "\u1EB3"=>"a\u0306\u0309",
+    "\u1EB4"=>"A\u0306\u0303",
+    "\u1EB5"=>"a\u0306\u0303",
+    "\u1EB6"=>"A\u0323\u0306",
+    "\u1EB7"=>"a\u0323\u0306",
+    "\u1EB8"=>"E\u0323",
+    "\u1EB9"=>"e\u0323",
+    "\u1EBA"=>"E\u0309",
+    "\u1EBB"=>"e\u0309",
+    "\u1EBC"=>"E\u0303",
+    "\u1EBD"=>"e\u0303",
+    "\u1EBE"=>"E\u0302\u0301",
+    "\u1EBF"=>"e\u0302\u0301",
+    "\u1EC0"=>"E\u0302\u0300",
+    "\u1EC1"=>"e\u0302\u0300",
+    "\u1EC2"=>"E\u0302\u0309",
+    "\u1EC3"=>"e\u0302\u0309",
+    "\u1EC4"=>"E\u0302\u0303",
+    "\u1EC5"=>"e\u0302\u0303",
+    "\u1EC6"=>"E\u0323\u0302",
+    "\u1EC7"=>"e\u0323\u0302",
+    "\u1EC8"=>"I\u0309",
+    "\u1EC9"=>"i\u0309",
+    "\u1ECA"=>"I\u0323",
+    "\u1ECB"=>"i\u0323",
+    "\u1ECC"=>"O\u0323",
+    "\u1ECD"=>"o\u0323",
+    "\u1ECE"=>"O\u0309",
+    "\u1ECF"=>"o\u0309",
+    "\u1ED0"=>"O\u0302\u0301",
+    "\u1ED1"=>"o\u0302\u0301",
+    "\u1ED2"=>"O\u0302\u0300",
+    "\u1ED3"=>"o\u0302\u0300",
+    "\u1ED4"=>"O\u0302\u0309",
+    "\u1ED5"=>"o\u0302\u0309",
+    "\u1ED6"=>"O\u0302\u0303",
+    "\u1ED7"=>"o\u0302\u0303",
+    "\u1ED8"=>"O\u0323\u0302",
+    "\u1ED9"=>"o\u0323\u0302",
+    "\u1EDA"=>"O\u031B\u0301",
+    "\u1EDB"=>"o\u031B\u0301",
+    "\u1EDC"=>"O\u031B\u0300",
+    "\u1EDD"=>"o\u031B\u0300",
+    "\u1EDE"=>"O\u031B\u0309",
+    "\u1EDF"=>"o\u031B\u0309",
+    "\u1EE0"=>"O\u031B\u0303",
+    "\u1EE1"=>"o\u031B\u0303",
+    "\u1EE2"=>"O\u031B\u0323",
+    "\u1EE3"=>"o\u031B\u0323",
+    "\u1EE4"=>"U\u0323",
+    "\u1EE5"=>"u\u0323",
+    "\u1EE6"=>"U\u0309",
+    "\u1EE7"=>"u\u0309",
+    "\u1EE8"=>"U\u031B\u0301",
+    "\u1EE9"=>"u\u031B\u0301",
+    "\u1EEA"=>"U\u031B\u0300",
+    "\u1EEB"=>"u\u031B\u0300",
+    "\u1EEC"=>"U\u031B\u0309",
+    "\u1EED"=>"u\u031B\u0309",
+    "\u1EEE"=>"U\u031B\u0303",
+    "\u1EEF"=>"u\u031B\u0303",
+    "\u1EF0"=>"U\u031B\u0323",
+    "\u1EF1"=>"u\u031B\u0323",
+    "\u1EF2"=>"Y\u0300",
+    "\u1EF3"=>"y\u0300",
+    "\u1EF4"=>"Y\u0323",
+    "\u1EF5"=>"y\u0323",
+    "\u1EF6"=>"Y\u0309",
+    "\u1EF7"=>"y\u0309",
+    "\u1EF8"=>"Y\u0303",
+    "\u1EF9"=>"y\u0303",
+    "\u1F00"=>"\u03B1\u0313",
+    "\u1F01"=>"\u03B1\u0314",
+    "\u1F02"=>"\u03B1\u0313\u0300",
+    "\u1F03"=>"\u03B1\u0314\u0300",
+    "\u1F04"=>"\u03B1\u0313\u0301",
+    "\u1F05"=>"\u03B1\u0314\u0301",
+    "\u1F06"=>"\u03B1\u0313\u0342",
+    "\u1F07"=>"\u03B1\u0314\u0342",
+    "\u1F08"=>"\u0391\u0313",
+    "\u1F09"=>"\u0391\u0314",
+    "\u1F0A"=>"\u0391\u0313\u0300",
+    "\u1F0B"=>"\u0391\u0314\u0300",
+    "\u1F0C"=>"\u0391\u0313\u0301",
+    "\u1F0D"=>"\u0391\u0314\u0301",
+    "\u1F0E"=>"\u0391\u0313\u0342",
+    "\u1F0F"=>"\u0391\u0314\u0342",
+    "\u1F10"=>"\u03B5\u0313",
+    "\u1F11"=>"\u03B5\u0314",
+    "\u1F12"=>"\u03B5\u0313\u0300",
+    "\u1F13"=>"\u03B5\u0314\u0300",
+    "\u1F14"=>"\u03B5\u0313\u0301",
+    "\u1F15"=>"\u03B5\u0314\u0301",
+    "\u1F18"=>"\u0395\u0313",
+    "\u1F19"=>"\u0395\u0314",
+    "\u1F1A"=>"\u0395\u0313\u0300",
+    "\u1F1B"=>"\u0395\u0314\u0300",
+    "\u1F1C"=>"\u0395\u0313\u0301",
+    "\u1F1D"=>"\u0395\u0314\u0301",
+    "\u1F20"=>"\u03B7\u0313",
+    "\u1F21"=>"\u03B7\u0314",
+    "\u1F22"=>"\u03B7\u0313\u0300",
+    "\u1F23"=>"\u03B7\u0314\u0300",
+    "\u1F24"=>"\u03B7\u0313\u0301",
+    "\u1F25"=>"\u03B7\u0314\u0301",
+    "\u1F26"=>"\u03B7\u0313\u0342",
+    "\u1F27"=>"\u03B7\u0314\u0342",
+    "\u1F28"=>"\u0397\u0313",
+    "\u1F29"=>"\u0397\u0314",
+    "\u1F2A"=>"\u0397\u0313\u0300",
+    "\u1F2B"=>"\u0397\u0314\u0300",
+    "\u1F2C"=>"\u0397\u0313\u0301",
+    "\u1F2D"=>"\u0397\u0314\u0301",
+    "\u1F2E"=>"\u0397\u0313\u0342",
+    "\u1F2F"=>"\u0397\u0314\u0342",
+    "\u1F30"=>"\u03B9\u0313",
+    "\u1F31"=>"\u03B9\u0314",
+    "\u1F32"=>"\u03B9\u0313\u0300",
+    "\u1F33"=>"\u03B9\u0314\u0300",
+    "\u1F34"=>"\u03B9\u0313\u0301",
+    "\u1F35"=>"\u03B9\u0314\u0301",
+    "\u1F36"=>"\u03B9\u0313\u0342",
+    "\u1F37"=>"\u03B9\u0314\u0342",
+    "\u1F38"=>"\u0399\u0313",
+    "\u1F39"=>"\u0399\u0314",
+    "\u1F3A"=>"\u0399\u0313\u0300",
+    "\u1F3B"=>"\u0399\u0314\u0300",
+    "\u1F3C"=>"\u0399\u0313\u0301",
+    "\u1F3D"=>"\u0399\u0314\u0301",
+    "\u1F3E"=>"\u0399\u0313\u0342",
+    "\u1F3F"=>"\u0399\u0314\u0342",
+    "\u1F40"=>"\u03BF\u0313",
+    "\u1F41"=>"\u03BF\u0314",
+    "\u1F42"=>"\u03BF\u0313\u0300",
+    "\u1F43"=>"\u03BF\u0314\u0300",
+    "\u1F44"=>"\u03BF\u0313\u0301",
+    "\u1F45"=>"\u03BF\u0314\u0301",
+    "\u1F48"=>"\u039F\u0313",
+    "\u1F49"=>"\u039F\u0314",
+    "\u1F4A"=>"\u039F\u0313\u0300",
+    "\u1F4B"=>"\u039F\u0314\u0300",
+    "\u1F4C"=>"\u039F\u0313\u0301",
+    "\u1F4D"=>"\u039F\u0314\u0301",
+    "\u1F50"=>"\u03C5\u0313",
+    "\u1F51"=>"\u03C5\u0314",
+    "\u1F52"=>"\u03C5\u0313\u0300",
+    "\u1F53"=>"\u03C5\u0314\u0300",
+    "\u1F54"=>"\u03C5\u0313\u0301",
+    "\u1F55"=>"\u03C5\u0314\u0301",
+    "\u1F56"=>"\u03C5\u0313\u0342",
+    "\u1F57"=>"\u03C5\u0314\u0342",
+    "\u1F59"=>"\u03A5\u0314",
+    "\u1F5B"=>"\u03A5\u0314\u0300",
+    "\u1F5D"=>"\u03A5\u0314\u0301",
+    "\u1F5F"=>"\u03A5\u0314\u0342",
+    "\u1F60"=>"\u03C9\u0313",
+    "\u1F61"=>"\u03C9\u0314",
+    "\u1F62"=>"\u03C9\u0313\u0300",
+    "\u1F63"=>"\u03C9\u0314\u0300",
+    "\u1F64"=>"\u03C9\u0313\u0301",
+    "\u1F65"=>"\u03C9\u0314\u0301",
+    "\u1F66"=>"\u03C9\u0313\u0342",
+    "\u1F67"=>"\u03C9\u0314\u0342",
+    "\u1F68"=>"\u03A9\u0313",
+    "\u1F69"=>"\u03A9\u0314",
+    "\u1F6A"=>"\u03A9\u0313\u0300",
+    "\u1F6B"=>"\u03A9\u0314\u0300",
+    "\u1F6C"=>"\u03A9\u0313\u0301",
+    "\u1F6D"=>"\u03A9\u0314\u0301",
+    "\u1F6E"=>"\u03A9\u0313\u0342",
+    "\u1F6F"=>"\u03A9\u0314\u0342",
+    "\u1F70"=>"\u03B1\u0300",
+    "\u1F71"=>"\u03B1\u0301",
+    "\u1F72"=>"\u03B5\u0300",
+    "\u1F73"=>"\u03B5\u0301",
+    "\u1F74"=>"\u03B7\u0300",
+    "\u1F75"=>"\u03B7\u0301",
+    "\u1F76"=>"\u03B9\u0300",
+    "\u1F77"=>"\u03B9\u0301",
+    "\u1F78"=>"\u03BF\u0300",
+    "\u1F79"=>"\u03BF\u0301",
+    "\u1F7A"=>"\u03C5\u0300",
+    "\u1F7B"=>"\u03C5\u0301",
+    "\u1F7C"=>"\u03C9\u0300",
+    "\u1F7D"=>"\u03C9\u0301",
+    "\u1F80"=>"\u03B1\u0313\u0345",
+    "\u1F81"=>"\u03B1\u0314\u0345",
+    "\u1F82"=>"\u03B1\u0313\u0300\u0345",
+    "\u1F83"=>"\u03B1\u0314\u0300\u0345",
+    "\u1F84"=>"\u03B1\u0313\u0301\u0345",
+    "\u1F85"=>"\u03B1\u0314\u0301\u0345",
+    "\u1F86"=>"\u03B1\u0313\u0342\u0345",
+    "\u1F87"=>"\u03B1\u0314\u0342\u0345",
+    "\u1F88"=>"\u0391\u0313\u0345",
+    "\u1F89"=>"\u0391\u0314\u0345",
+    "\u1F8A"=>"\u0391\u0313\u0300\u0345",
+    "\u1F8B"=>"\u0391\u0314\u0300\u0345",
+    "\u1F8C"=>"\u0391\u0313\u0301\u0345",
+    "\u1F8D"=>"\u0391\u0314\u0301\u0345",
+    "\u1F8E"=>"\u0391\u0313\u0342\u0345",
+    "\u1F8F"=>"\u0391\u0314\u0342\u0345",
+    "\u1F90"=>"\u03B7\u0313\u0345",
+    "\u1F91"=>"\u03B7\u0314\u0345",
+    "\u1F92"=>"\u03B7\u0313\u0300\u0345",
+    "\u1F93"=>"\u03B7\u0314\u0300\u0345",
+    "\u1F94"=>"\u03B7\u0313\u0301\u0345",
+    "\u1F95"=>"\u03B7\u0314\u0301\u0345",
+    "\u1F96"=>"\u03B7\u0313\u0342\u0345",
+    "\u1F97"=>"\u03B7\u0314\u0342\u0345",
+    "\u1F98"=>"\u0397\u0313\u0345",
+    "\u1F99"=>"\u0397\u0314\u0345",
+    "\u1F9A"=>"\u0397\u0313\u0300\u0345",
+    "\u1F9B"=>"\u0397\u0314\u0300\u0345",
+    "\u1F9C"=>"\u0397\u0313\u0301\u0345",
+    "\u1F9D"=>"\u0397\u0314\u0301\u0345",
+    "\u1F9E"=>"\u0397\u0313\u0342\u0345",
+    "\u1F9F"=>"\u0397\u0314\u0342\u0345",
+    "\u1FA0"=>"\u03C9\u0313\u0345",
+    "\u1FA1"=>"\u03C9\u0314\u0345",
+    "\u1FA2"=>"\u03C9\u0313\u0300\u0345",
+    "\u1FA3"=>"\u03C9\u0314\u0300\u0345",
+    "\u1FA4"=>"\u03C9\u0313\u0301\u0345",
+    "\u1FA5"=>"\u03C9\u0314\u0301\u0345",
+    "\u1FA6"=>"\u03C9\u0313\u0342\u0345",
+    "\u1FA7"=>"\u03C9\u0314\u0342\u0345",
+    "\u1FA8"=>"\u03A9\u0313\u0345",
+    "\u1FA9"=>"\u03A9\u0314\u0345",
+    "\u1FAA"=>"\u03A9\u0313\u0300\u0345",
+    "\u1FAB"=>"\u03A9\u0314\u0300\u0345",
+    "\u1FAC"=>"\u03A9\u0313\u0301\u0345",
+    "\u1FAD"=>"\u03A9\u0314\u0301\u0345",
+    "\u1FAE"=>"\u03A9\u0313\u0342\u0345",
+    "\u1FAF"=>"\u03A9\u0314\u0342\u0345",
+    "\u1FB0"=>"\u03B1\u0306",
+    "\u1FB1"=>"\u03B1\u0304",
+    "\u1FB2"=>"\u03B1\u0300\u0345",
+    "\u1FB3"=>"\u03B1\u0345",
+    "\u1FB4"=>"\u03B1\u0301\u0345",
+    "\u1FB6"=>"\u03B1\u0342",
+    "\u1FB7"=>"\u03B1\u0342\u0345",
+    "\u1FB8"=>"\u0391\u0306",
+    "\u1FB9"=>"\u0391\u0304",
+    "\u1FBA"=>"\u0391\u0300",
+    "\u1FBB"=>"\u0391\u0301",
+    "\u1FBC"=>"\u0391\u0345",
+    "\u1FBE"=>"\u03B9",
+    "\u1FC1"=>"\u00A8\u0342",
+    "\u1FC2"=>"\u03B7\u0300\u0345",
+    "\u1FC3"=>"\u03B7\u0345",
+    "\u1FC4"=>"\u03B7\u0301\u0345",
+    "\u1FC6"=>"\u03B7\u0342",
+    "\u1FC7"=>"\u03B7\u0342\u0345",
+    "\u1FC8"=>"\u0395\u0300",
+    "\u1FC9"=>"\u0395\u0301",
+    "\u1FCA"=>"\u0397\u0300",
+    "\u1FCB"=>"\u0397\u0301",
+    "\u1FCC"=>"\u0397\u0345",
+    "\u1FCD"=>"\u1FBF\u0300",
+    "\u1FCE"=>"\u1FBF\u0301",
+    "\u1FCF"=>"\u1FBF\u0342",
+    "\u1FD0"=>"\u03B9\u0306",
+    "\u1FD1"=>"\u03B9\u0304",
+    "\u1FD2"=>"\u03B9\u0308\u0300",
+    "\u1FD3"=>"\u03B9\u0308\u0301",
+    "\u1FD6"=>"\u03B9\u0342",
+    "\u1FD7"=>"\u03B9\u0308\u0342",
+    "\u1FD8"=>"\u0399\u0306",
+    "\u1FD9"=>"\u0399\u0304",
+    "\u1FDA"=>"\u0399\u0300",
+    "\u1FDB"=>"\u0399\u0301",
+    "\u1FDD"=>"\u1FFE\u0300",
+    "\u1FDE"=>"\u1FFE\u0301",
+    "\u1FDF"=>"\u1FFE\u0342",
+    "\u1FE0"=>"\u03C5\u0306",
+    "\u1FE1"=>"\u03C5\u0304",
+    "\u1FE2"=>"\u03C5\u0308\u0300",
+    "\u1FE3"=>"\u03C5\u0308\u0301",
+    "\u1FE4"=>"\u03C1\u0313",
+    "\u1FE5"=>"\u03C1\u0314",
+    "\u1FE6"=>"\u03C5\u0342",
+    "\u1FE7"=>"\u03C5\u0308\u0342",
+    "\u1FE8"=>"\u03A5\u0306",
+    "\u1FE9"=>"\u03A5\u0304",
+    "\u1FEA"=>"\u03A5\u0300",
+    "\u1FEB"=>"\u03A5\u0301",
+    "\u1FEC"=>"\u03A1\u0314",
+    "\u1FED"=>"\u00A8\u0300",
+    "\u1FEE"=>"\u00A8\u0301",
+    "\u1FEF"=>"`",
+    "\u1FF2"=>"\u03C9\u0300\u0345",
+    "\u1FF3"=>"\u03C9\u0345",
+    "\u1FF4"=>"\u03C9\u0301\u0345",
+    "\u1FF6"=>"\u03C9\u0342",
+    "\u1FF7"=>"\u03C9\u0342\u0345",
+    "\u1FF8"=>"\u039F\u0300",
+    "\u1FF9"=>"\u039F\u0301",
+    "\u1FFA"=>"\u03A9\u0300",
+    "\u1FFB"=>"\u03A9\u0301",
+    "\u1FFC"=>"\u03A9\u0345",
+    "\u1FFD"=>"\u00B4",
+    "\u2000"=>"\u2002",
+    "\u2001"=>"\u2003",
+    "\u2126"=>"\u03A9",
+    "\u212A"=>"K",
+    "\u212B"=>"A\u030A",
+    "\u219A"=>"\u2190\u0338",
+    "\u219B"=>"\u2192\u0338",
+    "\u21AE"=>"\u2194\u0338",
+    "\u21CD"=>"\u21D0\u0338",
+    "\u21CE"=>"\u21D4\u0338",
+    "\u21CF"=>"\u21D2\u0338",
+    "\u2204"=>"\u2203\u0338",
+    "\u2209"=>"\u2208\u0338",
+    "\u220C"=>"\u220B\u0338",
+    "\u2224"=>"\u2223\u0338",
+    "\u2226"=>"\u2225\u0338",
+    "\u2241"=>"\u223C\u0338",
+    "\u2244"=>"\u2243\u0338",
+    "\u2247"=>"\u2245\u0338",
+    "\u2249"=>"\u2248\u0338",
+    "\u2260"=>"=\u0338",
+    "\u2262"=>"\u2261\u0338",
+    "\u226D"=>"\u224D\u0338",
+    "\u226E"=>"<\u0338",
+    "\u226F"=>">\u0338",
+    "\u2270"=>"\u2264\u0338",
+    "\u2271"=>"\u2265\u0338",
+    "\u2274"=>"\u2272\u0338",
+    "\u2275"=>"\u2273\u0338",
+    "\u2278"=>"\u2276\u0338",
+    "\u2279"=>"\u2277\u0338",
+    "\u2280"=>"\u227A\u0338",
+    "\u2281"=>"\u227B\u0338",
+    "\u2284"=>"\u2282\u0338",
+    "\u2285"=>"\u2283\u0338",
+    "\u2288"=>"\u2286\u0338",
+    "\u2289"=>"\u2287\u0338",
+    "\u22AC"=>"\u22A2\u0338",
+    "\u22AD"=>"\u22A8\u0338",
+    "\u22AE"=>"\u22A9\u0338",
+    "\u22AF"=>"\u22AB\u0338",
+    "\u22E0"=>"\u227C\u0338",
+    "\u22E1"=>"\u227D\u0338",
+    "\u22E2"=>"\u2291\u0338",
+    "\u22E3"=>"\u2292\u0338",
+    "\u22EA"=>"\u22B2\u0338",
+    "\u22EB"=>"\u22B3\u0338",
+    "\u22EC"=>"\u22B4\u0338",
+    "\u22ED"=>"\u22B5\u0338",
+    "\u2329"=>"\u3008",
+    "\u232A"=>"\u3009",
+    "\u2ADC"=>"\u2ADD\u0338",
+    "\u304C"=>"\u304B\u3099",
+    "\u304E"=>"\u304D\u3099",
+    "\u3050"=>"\u304F\u3099",
+    "\u3052"=>"\u3051\u3099",
+    "\u3054"=>"\u3053\u3099",
+    "\u3056"=>"\u3055\u3099",
+    "\u3058"=>"\u3057\u3099",
+    "\u305A"=>"\u3059\u3099",
+    "\u305C"=>"\u305B\u3099",
+    "\u305E"=>"\u305D\u3099",
+    "\u3060"=>"\u305F\u3099",
+    "\u3062"=>"\u3061\u3099",
+    "\u3065"=>"\u3064\u3099",
+    "\u3067"=>"\u3066\u3099",
+    "\u3069"=>"\u3068\u3099",
+    "\u3070"=>"\u306F\u3099",
+    "\u3071"=>"\u306F\u309A",
+    "\u3073"=>"\u3072\u3099",
+    "\u3074"=>"\u3072\u309A",
+    "\u3076"=>"\u3075\u3099",
+    "\u3077"=>"\u3075\u309A",
+    "\u3079"=>"\u3078\u3099",
+    "\u307A"=>"\u3078\u309A",
+    "\u307C"=>"\u307B\u3099",
+    "\u307D"=>"\u307B\u309A",
+    "\u3094"=>"\u3046\u3099",
+    "\u309E"=>"\u309D\u3099",
+    "\u30AC"=>"\u30AB\u3099",
+    "\u30AE"=>"\u30AD\u3099",
+    "\u30B0"=>"\u30AF\u3099",
+    "\u30B2"=>"\u30B1\u3099",
+    "\u30B4"=>"\u30B3\u3099",
+    "\u30B6"=>"\u30B5\u3099",
+    "\u30B8"=>"\u30B7\u3099",
+    "\u30BA"=>"\u30B9\u3099",
+    "\u30BC"=>"\u30BB\u3099",
+    "\u30BE"=>"\u30BD\u3099",
+    "\u30C0"=>"\u30BF\u3099",
+    "\u30C2"=>"\u30C1\u3099",
+    "\u30C5"=>"\u30C4\u3099",
+    "\u30C7"=>"\u30C6\u3099",
+    "\u30C9"=>"\u30C8\u3099",
+    "\u30D0"=>"\u30CF\u3099",
+    "\u30D1"=>"\u30CF\u309A",
+    "\u30D3"=>"\u30D2\u3099",
+    "\u30D4"=>"\u30D2\u309A",
+    "\u30D6"=>"\u30D5\u3099",
+    "\u30D7"=>"\u30D5\u309A",
+    "\u30D9"=>"\u30D8\u3099",
+    "\u30DA"=>"\u30D8\u309A",
+    "\u30DC"=>"\u30DB\u3099",
+    "\u30DD"=>"\u30DB\u309A",
+    "\u30F4"=>"\u30A6\u3099",
+    "\u30F7"=>"\u30EF\u3099",
+    "\u30F8"=>"\u30F0\u3099",
+    "\u30F9"=>"\u30F1\u3099",
+    "\u30FA"=>"\u30F2\u3099",
+    "\u30FE"=>"\u30FD\u3099",
+    "\uF900"=>"\u8C48",
+    "\uF901"=>"\u66F4",
+    "\uF902"=>"\u8ECA",
+    "\uF903"=>"\u8CC8",
+    "\uF904"=>"\u6ED1",
+    "\uF905"=>"\u4E32",
+    "\uF906"=>"\u53E5",
+    "\uF907"=>"\u9F9C",
+    "\uF908"=>"\u9F9C",
+    "\uF909"=>"\u5951",
+    "\uF90A"=>"\u91D1",
+    "\uF90B"=>"\u5587",
+    "\uF90C"=>"\u5948",
+    "\uF90D"=>"\u61F6",
+    "\uF90E"=>"\u7669",
+    "\uF90F"=>"\u7F85",
+    "\uF910"=>"\u863F",
+    "\uF911"=>"\u87BA",
+    "\uF912"=>"\u88F8",
+    "\uF913"=>"\u908F",
+    "\uF914"=>"\u6A02",
+    "\uF915"=>"\u6D1B",
+    "\uF916"=>"\u70D9",
+    "\uF917"=>"\u73DE",
+    "\uF918"=>"\u843D",
+    "\uF919"=>"\u916A",
+    "\uF91A"=>"\u99F1",
+    "\uF91B"=>"\u4E82",
+    "\uF91C"=>"\u5375",
+    "\uF91D"=>"\u6B04",
+    "\uF91E"=>"\u721B",
+    "\uF91F"=>"\u862D",
+    "\uF920"=>"\u9E1E",
+    "\uF921"=>"\u5D50",
+    "\uF922"=>"\u6FEB",
+    "\uF923"=>"\u85CD",
+    "\uF924"=>"\u8964",
+    "\uF925"=>"\u62C9",
+    "\uF926"=>"\u81D8",
+    "\uF927"=>"\u881F",
+    "\uF928"=>"\u5ECA",
+    "\uF929"=>"\u6717",
+    "\uF92A"=>"\u6D6A",
+    "\uF92B"=>"\u72FC",
+    "\uF92C"=>"\u90CE",
+    "\uF92D"=>"\u4F86",
+    "\uF92E"=>"\u51B7",
+    "\uF92F"=>"\u52DE",
+    "\uF930"=>"\u64C4",
+    "\uF931"=>"\u6AD3",
+    "\uF932"=>"\u7210",
+    "\uF933"=>"\u76E7",
+    "\uF934"=>"\u8001",
+    "\uF935"=>"\u8606",
+    "\uF936"=>"\u865C",
+    "\uF937"=>"\u8DEF",
+    "\uF938"=>"\u9732",
+    "\uF939"=>"\u9B6F",
+    "\uF93A"=>"\u9DFA",
+    "\uF93B"=>"\u788C",
+    "\uF93C"=>"\u797F",
+    "\uF93D"=>"\u7DA0",
+    "\uF93E"=>"\u83C9",
+    "\uF93F"=>"\u9304",
+    "\uF940"=>"\u9E7F",
+    "\uF941"=>"\u8AD6",
+    "\uF942"=>"\u58DF",
+    "\uF943"=>"\u5F04",
+    "\uF944"=>"\u7C60",
+    "\uF945"=>"\u807E",
+    "\uF946"=>"\u7262",
+    "\uF947"=>"\u78CA",
+    "\uF948"=>"\u8CC2",
+    "\uF949"=>"\u96F7",
+    "\uF94A"=>"\u58D8",
+    "\uF94B"=>"\u5C62",
+    "\uF94C"=>"\u6A13",
+    "\uF94D"=>"\u6DDA",
+    "\uF94E"=>"\u6F0F",
+    "\uF94F"=>"\u7D2F",
+    "\uF950"=>"\u7E37",
+    "\uF951"=>"\u964B",
+    "\uF952"=>"\u52D2",
+    "\uF953"=>"\u808B",
+    "\uF954"=>"\u51DC",
+    "\uF955"=>"\u51CC",
+    "\uF956"=>"\u7A1C",
+    "\uF957"=>"\u7DBE",
+    "\uF958"=>"\u83F1",
+    "\uF959"=>"\u9675",
+    "\uF95A"=>"\u8B80",
+    "\uF95B"=>"\u62CF",
+    "\uF95C"=>"\u6A02",
+    "\uF95D"=>"\u8AFE",
+    "\uF95E"=>"\u4E39",
+    "\uF95F"=>"\u5BE7",
+    "\uF960"=>"\u6012",
+    "\uF961"=>"\u7387",
+    "\uF962"=>"\u7570",
+    "\uF963"=>"\u5317",
+    "\uF964"=>"\u78FB",
+    "\uF965"=>"\u4FBF",
+    "\uF966"=>"\u5FA9",
+    "\uF967"=>"\u4E0D",
+    "\uF968"=>"\u6CCC",
+    "\uF969"=>"\u6578",
+    "\uF96A"=>"\u7D22",
+    "\uF96B"=>"\u53C3",
+    "\uF96C"=>"\u585E",
+    "\uF96D"=>"\u7701",
+    "\uF96E"=>"\u8449",
+    "\uF96F"=>"\u8AAA",
+    "\uF970"=>"\u6BBA",
+    "\uF971"=>"\u8FB0",
+    "\uF972"=>"\u6C88",
+    "\uF973"=>"\u62FE",
+    "\uF974"=>"\u82E5",
+    "\uF975"=>"\u63A0",
+    "\uF976"=>"\u7565",
+    "\uF977"=>"\u4EAE",
+    "\uF978"=>"\u5169",
+    "\uF979"=>"\u51C9",
+    "\uF97A"=>"\u6881",
+    "\uF97B"=>"\u7CE7",
+    "\uF97C"=>"\u826F",
+    "\uF97D"=>"\u8AD2",
+    "\uF97E"=>"\u91CF",
+    "\uF97F"=>"\u52F5",
+    "\uF980"=>"\u5442",
+    "\uF981"=>"\u5973",
+    "\uF982"=>"\u5EEC",
+    "\uF983"=>"\u65C5",
+    "\uF984"=>"\u6FFE",
+    "\uF985"=>"\u792A",
+    "\uF986"=>"\u95AD",
+    "\uF987"=>"\u9A6A",
+    "\uF988"=>"\u9E97",
+    "\uF989"=>"\u9ECE",
+    "\uF98A"=>"\u529B",
+    "\uF98B"=>"\u66C6",
+    "\uF98C"=>"\u6B77",
+    "\uF98D"=>"\u8F62",
+    "\uF98E"=>"\u5E74",
+    "\uF98F"=>"\u6190",
+    "\uF990"=>"\u6200",
+    "\uF991"=>"\u649A",
+    "\uF992"=>"\u6F23",
+    "\uF993"=>"\u7149",
+    "\uF994"=>"\u7489",
+    "\uF995"=>"\u79CA",
+    "\uF996"=>"\u7DF4",
+    "\uF997"=>"\u806F",
+    "\uF998"=>"\u8F26",
+    "\uF999"=>"\u84EE",
+    "\uF99A"=>"\u9023",
+    "\uF99B"=>"\u934A",
+    "\uF99C"=>"\u5217",
+    "\uF99D"=>"\u52A3",
+    "\uF99E"=>"\u54BD",
+    "\uF99F"=>"\u70C8",
+    "\uF9A0"=>"\u88C2",
+    "\uF9A1"=>"\u8AAA",
+    "\uF9A2"=>"\u5EC9",
+    "\uF9A3"=>"\u5FF5",
+    "\uF9A4"=>"\u637B",
+    "\uF9A5"=>"\u6BAE",
+    "\uF9A6"=>"\u7C3E",
+    "\uF9A7"=>"\u7375",
+    "\uF9A8"=>"\u4EE4",
+    "\uF9A9"=>"\u56F9",
+    "\uF9AA"=>"\u5BE7",
+    "\uF9AB"=>"\u5DBA",
+    "\uF9AC"=>"\u601C",
+    "\uF9AD"=>"\u73B2",
+    "\uF9AE"=>"\u7469",
+    "\uF9AF"=>"\u7F9A",
+    "\uF9B0"=>"\u8046",
+    "\uF9B1"=>"\u9234",
+    "\uF9B2"=>"\u96F6",
+    "\uF9B3"=>"\u9748",
+    "\uF9B4"=>"\u9818",
+    "\uF9B5"=>"\u4F8B",
+    "\uF9B6"=>"\u79AE",
+    "\uF9B7"=>"\u91B4",
+    "\uF9B8"=>"\u96B8",
+    "\uF9B9"=>"\u60E1",
+    "\uF9BA"=>"\u4E86",
+    "\uF9BB"=>"\u50DA",
+    "\uF9BC"=>"\u5BEE",
+    "\uF9BD"=>"\u5C3F",
+    "\uF9BE"=>"\u6599",
+    "\uF9BF"=>"\u6A02",
+    "\uF9C0"=>"\u71CE",
+    "\uF9C1"=>"\u7642",
+    "\uF9C2"=>"\u84FC",
+    "\uF9C3"=>"\u907C",
+    "\uF9C4"=>"\u9F8D",
+    "\uF9C5"=>"\u6688",
+    "\uF9C6"=>"\u962E",
+    "\uF9C7"=>"\u5289",
+    "\uF9C8"=>"\u677B",
+    "\uF9C9"=>"\u67F3",
+    "\uF9CA"=>"\u6D41",
+    "\uF9CB"=>"\u6E9C",
+    "\uF9CC"=>"\u7409",
+    "\uF9CD"=>"\u7559",
+    "\uF9CE"=>"\u786B",
+    "\uF9CF"=>"\u7D10",
+    "\uF9D0"=>"\u985E",
+    "\uF9D1"=>"\u516D",
+    "\uF9D2"=>"\u622E",
+    "\uF9D3"=>"\u9678",
+    "\uF9D4"=>"\u502B",
+    "\uF9D5"=>"\u5D19",
+    "\uF9D6"=>"\u6DEA",
+    "\uF9D7"=>"\u8F2A",
+    "\uF9D8"=>"\u5F8B",
+    "\uF9D9"=>"\u6144",
+    "\uF9DA"=>"\u6817",
+    "\uF9DB"=>"\u7387",
+    "\uF9DC"=>"\u9686",
+    "\uF9DD"=>"\u5229",
+    "\uF9DE"=>"\u540F",
+    "\uF9DF"=>"\u5C65",
+    "\uF9E0"=>"\u6613",
+    "\uF9E1"=>"\u674E",
+    "\uF9E2"=>"\u68A8",
+    "\uF9E3"=>"\u6CE5",
+    "\uF9E4"=>"\u7406",
+    "\uF9E5"=>"\u75E2",
+    "\uF9E6"=>"\u7F79",
+    "\uF9E7"=>"\u88CF",
+    "\uF9E8"=>"\u88E1",
+    "\uF9E9"=>"\u91CC",
+    "\uF9EA"=>"\u96E2",
+    "\uF9EB"=>"\u533F",
+    "\uF9EC"=>"\u6EBA",
+    "\uF9ED"=>"\u541D",
+    "\uF9EE"=>"\u71D0",
+    "\uF9EF"=>"\u7498",
+    "\uF9F0"=>"\u85FA",
+    "\uF9F1"=>"\u96A3",
+    "\uF9F2"=>"\u9C57",
+    "\uF9F3"=>"\u9E9F",
+    "\uF9F4"=>"\u6797",
+    "\uF9F5"=>"\u6DCB",
+    "\uF9F6"=>"\u81E8",
+    "\uF9F7"=>"\u7ACB",
+    "\uF9F8"=>"\u7B20",
+    "\uF9F9"=>"\u7C92",
+    "\uF9FA"=>"\u72C0",
+    "\uF9FB"=>"\u7099",
+    "\uF9FC"=>"\u8B58",
+    "\uF9FD"=>"\u4EC0",
+    "\uF9FE"=>"\u8336",
+    "\uF9FF"=>"\u523A",
+    "\uFA00"=>"\u5207",
+    "\uFA01"=>"\u5EA6",
+    "\uFA02"=>"\u62D3",
+    "\uFA03"=>"\u7CD6",
+    "\uFA04"=>"\u5B85",
+    "\uFA05"=>"\u6D1E",
+    "\uFA06"=>"\u66B4",
+    "\uFA07"=>"\u8F3B",
+    "\uFA08"=>"\u884C",
+    "\uFA09"=>"\u964D",
+    "\uFA0A"=>"\u898B",
+    "\uFA0B"=>"\u5ED3",
+    "\uFA0C"=>"\u5140",
+    "\uFA0D"=>"\u55C0",
+    "\uFA10"=>"\u585A",
+    "\uFA12"=>"\u6674",
+    "\uFA15"=>"\u51DE",
+    "\uFA16"=>"\u732A",
+    "\uFA17"=>"\u76CA",
+    "\uFA18"=>"\u793C",
+    "\uFA19"=>"\u795E",
+    "\uFA1A"=>"\u7965",
+    "\uFA1B"=>"\u798F",
+    "\uFA1C"=>"\u9756",
+    "\uFA1D"=>"\u7CBE",
+    "\uFA1E"=>"\u7FBD",
+    "\uFA20"=>"\u8612",
+    "\uFA22"=>"\u8AF8",
+    "\uFA25"=>"\u9038",
+    "\uFA26"=>"\u90FD",
+    "\uFA2A"=>"\u98EF",
+    "\uFA2B"=>"\u98FC",
+    "\uFA2C"=>"\u9928",
+    "\uFA2D"=>"\u9DB4",
+    "\uFA2E"=>"\u90DE",
+    "\uFA2F"=>"\u96B7",
+    "\uFA30"=>"\u4FAE",
+    "\uFA31"=>"\u50E7",
+    "\uFA32"=>"\u514D",
+    "\uFA33"=>"\u52C9",
+    "\uFA34"=>"\u52E4",
+    "\uFA35"=>"\u5351",
+    "\uFA36"=>"\u559D",
+    "\uFA37"=>"\u5606",
+    "\uFA38"=>"\u5668",
+    "\uFA39"=>"\u5840",
+    "\uFA3A"=>"\u58A8",
+    "\uFA3B"=>"\u5C64",
+    "\uFA3C"=>"\u5C6E",
+    "\uFA3D"=>"\u6094",
+    "\uFA3E"=>"\u6168",
+    "\uFA3F"=>"\u618E",
+    "\uFA40"=>"\u61F2",
+    "\uFA41"=>"\u654F",
+    "\uFA42"=>"\u65E2",
+    "\uFA43"=>"\u6691",
+    "\uFA44"=>"\u6885",
+    "\uFA45"=>"\u6D77",
+    "\uFA46"=>"\u6E1A",
+    "\uFA47"=>"\u6F22",
+    "\uFA48"=>"\u716E",
+    "\uFA49"=>"\u722B",
+    "\uFA4A"=>"\u7422",
+    "\uFA4B"=>"\u7891",
+    "\uFA4C"=>"\u793E",
+    "\uFA4D"=>"\u7949",
+    "\uFA4E"=>"\u7948",
+    "\uFA4F"=>"\u7950",
+    "\uFA50"=>"\u7956",
+    "\uFA51"=>"\u795D",
+    "\uFA52"=>"\u798D",
+    "\uFA53"=>"\u798E",
+    "\uFA54"=>"\u7A40",
+    "\uFA55"=>"\u7A81",
+    "\uFA56"=>"\u7BC0",
+    "\uFA57"=>"\u7DF4",
+    "\uFA58"=>"\u7E09",
+    "\uFA59"=>"\u7E41",
+    "\uFA5A"=>"\u7F72",
+    "\uFA5B"=>"\u8005",
+    "\uFA5C"=>"\u81ED",
+    "\uFA5D"=>"\u8279",
+    "\uFA5E"=>"\u8279",
+    "\uFA5F"=>"\u8457",
+    "\uFA60"=>"\u8910",
+    "\uFA61"=>"\u8996",
+    "\uFA62"=>"\u8B01",
+    "\uFA63"=>"\u8B39",
+    "\uFA64"=>"\u8CD3",
+    "\uFA65"=>"\u8D08",
+    "\uFA66"=>"\u8FB6",
+    "\uFA67"=>"\u9038",
+    "\uFA68"=>"\u96E3",
+    "\uFA69"=>"\u97FF",
+    "\uFA6A"=>"\u983B",
+    "\uFA6B"=>"\u6075",
+    "\uFA6C"=>"\u{242EE}",
+    "\uFA6D"=>"\u8218",
+    "\uFA70"=>"\u4E26",
+    "\uFA71"=>"\u51B5",
+    "\uFA72"=>"\u5168",
+    "\uFA73"=>"\u4F80",
+    "\uFA74"=>"\u5145",
+    "\uFA75"=>"\u5180",
+    "\uFA76"=>"\u52C7",
+    "\uFA77"=>"\u52FA",
+    "\uFA78"=>"\u559D",
+    "\uFA79"=>"\u5555",
+    "\uFA7A"=>"\u5599",
+    "\uFA7B"=>"\u55E2",
+    "\uFA7C"=>"\u585A",
+    "\uFA7D"=>"\u58B3",
+    "\uFA7E"=>"\u5944",
+    "\uFA7F"=>"\u5954",
+    "\uFA80"=>"\u5A62",
+    "\uFA81"=>"\u5B28",
+    "\uFA82"=>"\u5ED2",
+    "\uFA83"=>"\u5ED9",
+    "\uFA84"=>"\u5F69",
+    "\uFA85"=>"\u5FAD",
+    "\uFA86"=>"\u60D8",
+    "\uFA87"=>"\u614E",
+    "\uFA88"=>"\u6108",
+    "\uFA89"=>"\u618E",
+    "\uFA8A"=>"\u6160",
+    "\uFA8B"=>"\u61F2",
+    "\uFA8C"=>"\u6234",
+    "\uFA8D"=>"\u63C4",
+    "\uFA8E"=>"\u641C",
+    "\uFA8F"=>"\u6452",
+    "\uFA90"=>"\u6556",
+    "\uFA91"=>"\u6674",
+    "\uFA92"=>"\u6717",
+    "\uFA93"=>"\u671B",
+    "\uFA94"=>"\u6756",
+    "\uFA95"=>"\u6B79",
+    "\uFA96"=>"\u6BBA",
+    "\uFA97"=>"\u6D41",
+    "\uFA98"=>"\u6EDB",
+    "\uFA99"=>"\u6ECB",
+    "\uFA9A"=>"\u6F22",
+    "\uFA9B"=>"\u701E",
+    "\uFA9C"=>"\u716E",
+    "\uFA9D"=>"\u77A7",
+    "\uFA9E"=>"\u7235",
+    "\uFA9F"=>"\u72AF",
+    "\uFAA0"=>"\u732A",
+    "\uFAA1"=>"\u7471",
+    "\uFAA2"=>"\u7506",
+    "\uFAA3"=>"\u753B",
+    "\uFAA4"=>"\u761D",
+    "\uFAA5"=>"\u761F",
+    "\uFAA6"=>"\u76CA",
+    "\uFAA7"=>"\u76DB",
+    "\uFAA8"=>"\u76F4",
+    "\uFAA9"=>"\u774A",
+    "\uFAAA"=>"\u7740",
+    "\uFAAB"=>"\u78CC",
+    "\uFAAC"=>"\u7AB1",
+    "\uFAAD"=>"\u7BC0",
+    "\uFAAE"=>"\u7C7B",
+    "\uFAAF"=>"\u7D5B",
+    "\uFAB0"=>"\u7DF4",
+    "\uFAB1"=>"\u7F3E",
+    "\uFAB2"=>"\u8005",
+    "\uFAB3"=>"\u8352",
+    "\uFAB4"=>"\u83EF",
+    "\uFAB5"=>"\u8779",
+    "\uFAB6"=>"\u8941",
+    "\uFAB7"=>"\u8986",
+    "\uFAB8"=>"\u8996",
+    "\uFAB9"=>"\u8ABF",
+    "\uFABA"=>"\u8AF8",
+    "\uFABB"=>"\u8ACB",
+    "\uFABC"=>"\u8B01",
+    "\uFABD"=>"\u8AFE",
+    "\uFABE"=>"\u8AED",
+    "\uFABF"=>"\u8B39",
+    "\uFAC0"=>"\u8B8A",
+    "\uFAC1"=>"\u8D08",
+    "\uFAC2"=>"\u8F38",
+    "\uFAC3"=>"\u9072",
+    "\uFAC4"=>"\u9199",
+    "\uFAC5"=>"\u9276",
+    "\uFAC6"=>"\u967C",
+    "\uFAC7"=>"\u96E3",
+    "\uFAC8"=>"\u9756",
+    "\uFAC9"=>"\u97DB",
+    "\uFACA"=>"\u97FF",
+    "\uFACB"=>"\u980B",
+    "\uFACC"=>"\u983B",
+    "\uFACD"=>"\u9B12",
+    "\uFACE"=>"\u9F9C",
+    "\uFACF"=>"\u{2284A}",
+    "\uFAD0"=>"\u{22844}",
+    "\uFAD1"=>"\u{233D5}",
+    "\uFAD2"=>"\u3B9D",
+    "\uFAD3"=>"\u4018",
+    "\uFAD4"=>"\u4039",
+    "\uFAD5"=>"\u{25249}",
+    "\uFAD6"=>"\u{25CD0}",
+    "\uFAD7"=>"\u{27ED3}",
+    "\uFAD8"=>"\u9F43",
+    "\uFAD9"=>"\u9F8E",
+    "\uFB1D"=>"\u05D9\u05B4",
+    "\uFB1F"=>"\u05F2\u05B7",
+    "\uFB2A"=>"\u05E9\u05C1",
+    "\uFB2B"=>"\u05E9\u05C2",
+    "\uFB2C"=>"\u05E9\u05BC\u05C1",
+    "\uFB2D"=>"\u05E9\u05BC\u05C2",
+    "\uFB2E"=>"\u05D0\u05B7",
+    "\uFB2F"=>"\u05D0\u05B8",
+    "\uFB30"=>"\u05D0\u05BC",
+    "\uFB31"=>"\u05D1\u05BC",
+    "\uFB32"=>"\u05D2\u05BC",
+    "\uFB33"=>"\u05D3\u05BC",
+    "\uFB34"=>"\u05D4\u05BC",
+    "\uFB35"=>"\u05D5\u05BC",
+    "\uFB36"=>"\u05D6\u05BC",
+    "\uFB38"=>"\u05D8\u05BC",
+    "\uFB39"=>"\u05D9\u05BC",
+    "\uFB3A"=>"\u05DA\u05BC",
+    "\uFB3B"=>"\u05DB\u05BC",
+    "\uFB3C"=>"\u05DC\u05BC",
+    "\uFB3E"=>"\u05DE\u05BC",
+    "\uFB40"=>"\u05E0\u05BC",
+    "\uFB41"=>"\u05E1\u05BC",
+    "\uFB43"=>"\u05E3\u05BC",
+    "\uFB44"=>"\u05E4\u05BC",
+    "\uFB46"=>"\u05E6\u05BC",
+    "\uFB47"=>"\u05E7\u05BC",
+    "\uFB48"=>"\u05E8\u05BC",
+    "\uFB49"=>"\u05E9\u05BC",
+    "\uFB4A"=>"\u05EA\u05BC",
+    "\uFB4B"=>"\u05D5\u05B9",
+    "\uFB4C"=>"\u05D1\u05BF",
+    "\uFB4D"=>"\u05DB\u05BF",
+    "\uFB4E"=>"\u05E4\u05BF",
+    "\u{1109A}"=>"\u{11099}\u{110BA}",
+    "\u{1109C}"=>"\u{1109B}\u{110BA}",
+    "\u{110AB}"=>"\u{110A5}\u{110BA}",
+    "\u{1112E}"=>"\u{11131}\u{11127}",
+    "\u{1112F}"=>"\u{11132}\u{11127}",
+    "\u{1134B}"=>"\u{11347}\u{1133E}",
+    "\u{1134C}"=>"\u{11347}\u{11357}",
+    "\u{114BB}"=>"\u{114B9}\u{114BA}",
+    "\u{114BC}"=>"\u{114B9}\u{114B0}",
+    "\u{114BE}"=>"\u{114B9}\u{114BD}",
+    "\u{115BA}"=>"\u{115B8}\u{115AF}",
+    "\u{115BB}"=>"\u{115B9}\u{115AF}",
+    "\u{1D15E}"=>"\u{1D157}\u{1D165}",
+    "\u{1D15F}"=>"\u{1D158}\u{1D165}",
+    "\u{1D160}"=>"\u{1D158}\u{1D165}\u{1D16E}",
+    "\u{1D161}"=>"\u{1D158}\u{1D165}\u{1D16F}",
+    "\u{1D162}"=>"\u{1D158}\u{1D165}\u{1D170}",
+    "\u{1D163}"=>"\u{1D158}\u{1D165}\u{1D171}",
+    "\u{1D164}"=>"\u{1D158}\u{1D165}\u{1D172}",
+    "\u{1D1BB}"=>"\u{1D1B9}\u{1D165}",
+    "\u{1D1BC}"=>"\u{1D1BA}\u{1D165}",
+    "\u{1D1BD}"=>"\u{1D1B9}\u{1D165}\u{1D16E}",
+    "\u{1D1BE}"=>"\u{1D1BA}\u{1D165}\u{1D16E}",
+    "\u{1D1BF}"=>"\u{1D1B9}\u{1D165}\u{1D16F}",
+    "\u{1D1C0}"=>"\u{1D1BA}\u{1D165}\u{1D16F}",
+    "\u{2F800}"=>"\u4E3D",
+    "\u{2F801}"=>"\u4E38",
+    "\u{2F802}"=>"\u4E41",
+    "\u{2F803}"=>"\u{20122}",
+    "\u{2F804}"=>"\u4F60",
+    "\u{2F805}"=>"\u4FAE",
+    "\u{2F806}"=>"\u4FBB",
+    "\u{2F807}"=>"\u5002",
+    "\u{2F808}"=>"\u507A",
+    "\u{2F809}"=>"\u5099",
+    "\u{2F80A}"=>"\u50E7",
+    "\u{2F80B}"=>"\u50CF",
+    "\u{2F80C}"=>"\u349E",
+    "\u{2F80D}"=>"\u{2063A}",
+    "\u{2F80E}"=>"\u514D",
+    "\u{2F80F}"=>"\u5154",
+    "\u{2F810}"=>"\u5164",
+    "\u{2F811}"=>"\u5177",
+    "\u{2F812}"=>"\u{2051C}",
+    "\u{2F813}"=>"\u34B9",
+    "\u{2F814}"=>"\u5167",
+    "\u{2F815}"=>"\u518D",
+    "\u{2F816}"=>"\u{2054B}",
+    "\u{2F817}"=>"\u5197",
+    "\u{2F818}"=>"\u51A4",
+    "\u{2F819}"=>"\u4ECC",
+    "\u{2F81A}"=>"\u51AC",
+    "\u{2F81B}"=>"\u51B5",
+    "\u{2F81C}"=>"\u{291DF}",
+    "\u{2F81D}"=>"\u51F5",
+    "\u{2F81E}"=>"\u5203",
+    "\u{2F81F}"=>"\u34DF",
+    "\u{2F820}"=>"\u523B",
+    "\u{2F821}"=>"\u5246",
+    "\u{2F822}"=>"\u5272",
+    "\u{2F823}"=>"\u5277",
+    "\u{2F824}"=>"\u3515",
+    "\u{2F825}"=>"\u52C7",
+    "\u{2F826}"=>"\u52C9",
+    "\u{2F827}"=>"\u52E4",
+    "\u{2F828}"=>"\u52FA",
+    "\u{2F829}"=>"\u5305",
+    "\u{2F82A}"=>"\u5306",
+    "\u{2F82B}"=>"\u5317",
+    "\u{2F82C}"=>"\u5349",
+    "\u{2F82D}"=>"\u5351",
+    "\u{2F82E}"=>"\u535A",
+    "\u{2F82F}"=>"\u5373",
+    "\u{2F830}"=>"\u537D",
+    "\u{2F831}"=>"\u537F",
+    "\u{2F832}"=>"\u537F",
+    "\u{2F833}"=>"\u537F",
+    "\u{2F834}"=>"\u{20A2C}",
+    "\u{2F835}"=>"\u7070",
+    "\u{2F836}"=>"\u53CA",
+    "\u{2F837}"=>"\u53DF",
+    "\u{2F838}"=>"\u{20B63}",
+    "\u{2F839}"=>"\u53EB",
+    "\u{2F83A}"=>"\u53F1",
+    "\u{2F83B}"=>"\u5406",
+    "\u{2F83C}"=>"\u549E",
+    "\u{2F83D}"=>"\u5438",
+    "\u{2F83E}"=>"\u5448",
+    "\u{2F83F}"=>"\u5468",
+    "\u{2F840}"=>"\u54A2",
+    "\u{2F841}"=>"\u54F6",
+    "\u{2F842}"=>"\u5510",
+    "\u{2F843}"=>"\u5553",
+    "\u{2F844}"=>"\u5563",
+    "\u{2F845}"=>"\u5584",
+    "\u{2F846}"=>"\u5584",
+    "\u{2F847}"=>"\u5599",
+    "\u{2F848}"=>"\u55AB",
+    "\u{2F849}"=>"\u55B3",
+    "\u{2F84A}"=>"\u55C2",
+    "\u{2F84B}"=>"\u5716",
+    "\u{2F84C}"=>"\u5606",
+    "\u{2F84D}"=>"\u5717",
+    "\u{2F84E}"=>"\u5651",
+    "\u{2F84F}"=>"\u5674",
+    "\u{2F850}"=>"\u5207",
+    "\u{2F851}"=>"\u58EE",
+    "\u{2F852}"=>"\u57CE",
+    "\u{2F853}"=>"\u57F4",
+    "\u{2F854}"=>"\u580D",
+    "\u{2F855}"=>"\u578B",
+    "\u{2F856}"=>"\u5832",
+    "\u{2F857}"=>"\u5831",
+    "\u{2F858}"=>"\u58AC",
+    "\u{2F859}"=>"\u{214E4}",
+    "\u{2F85A}"=>"\u58F2",
+    "\u{2F85B}"=>"\u58F7",
+    "\u{2F85C}"=>"\u5906",
+    "\u{2F85D}"=>"\u591A",
+    "\u{2F85E}"=>"\u5922",
+    "\u{2F85F}"=>"\u5962",
+    "\u{2F860}"=>"\u{216A8}",
+    "\u{2F861}"=>"\u{216EA}",
+    "\u{2F862}"=>"\u59EC",
+    "\u{2F863}"=>"\u5A1B",
+    "\u{2F864}"=>"\u5A27",
+    "\u{2F865}"=>"\u59D8",
+    "\u{2F866}"=>"\u5A66",
+    "\u{2F867}"=>"\u36EE",
+    "\u{2F868}"=>"\u36FC",
+    "\u{2F869}"=>"\u5B08",
+    "\u{2F86A}"=>"\u5B3E",
+    "\u{2F86B}"=>"\u5B3E",
+    "\u{2F86C}"=>"\u{219C8}",
+    "\u{2F86D}"=>"\u5BC3",
+    "\u{2F86E}"=>"\u5BD8",
+    "\u{2F86F}"=>"\u5BE7",
+    "\u{2F870}"=>"\u5BF3",
+    "\u{2F871}"=>"\u{21B18}",
+    "\u{2F872}"=>"\u5BFF",
+    "\u{2F873}"=>"\u5C06",
+    "\u{2F874}"=>"\u5F53",
+    "\u{2F875}"=>"\u5C22",
+    "\u{2F876}"=>"\u3781",
+    "\u{2F877}"=>"\u5C60",
+    "\u{2F878}"=>"\u5C6E",
+    "\u{2F879}"=>"\u5CC0",
+    "\u{2F87A}"=>"\u5C8D",
+    "\u{2F87B}"=>"\u{21DE4}",
+    "\u{2F87C}"=>"\u5D43",
+    "\u{2F87D}"=>"\u{21DE6}",
+    "\u{2F87E}"=>"\u5D6E",
+    "\u{2F87F}"=>"\u5D6B",
+    "\u{2F880}"=>"\u5D7C",
+    "\u{2F881}"=>"\u5DE1",
+    "\u{2F882}"=>"\u5DE2",
+    "\u{2F883}"=>"\u382F",
+    "\u{2F884}"=>"\u5DFD",
+    "\u{2F885}"=>"\u5E28",
+    "\u{2F886}"=>"\u5E3D",
+    "\u{2F887}"=>"\u5E69",
+    "\u{2F888}"=>"\u3862",
+    "\u{2F889}"=>"\u{22183}",
+    "\u{2F88A}"=>"\u387C",
+    "\u{2F88B}"=>"\u5EB0",
+    "\u{2F88C}"=>"\u5EB3",
+    "\u{2F88D}"=>"\u5EB6",
+    "\u{2F88E}"=>"\u5ECA",
+    "\u{2F88F}"=>"\u{2A392}",
+    "\u{2F890}"=>"\u5EFE",
+    "\u{2F891}"=>"\u{22331}",
+    "\u{2F892}"=>"\u{22331}",
+    "\u{2F893}"=>"\u8201",
+    "\u{2F894}"=>"\u5F22",
+    "\u{2F895}"=>"\u5F22",
+    "\u{2F896}"=>"\u38C7",
+    "\u{2F897}"=>"\u{232B8}",
+    "\u{2F898}"=>"\u{261DA}",
+    "\u{2F899}"=>"\u5F62",
+    "\u{2F89A}"=>"\u5F6B",
+    "\u{2F89B}"=>"\u38E3",
+    "\u{2F89C}"=>"\u5F9A",
+    "\u{2F89D}"=>"\u5FCD",
+    "\u{2F89E}"=>"\u5FD7",
+    "\u{2F89F}"=>"\u5FF9",
+    "\u{2F8A0}"=>"\u6081",
+    "\u{2F8A1}"=>"\u393A",
+    "\u{2F8A2}"=>"\u391C",
+    "\u{2F8A3}"=>"\u6094",
+    "\u{2F8A4}"=>"\u{226D4}",
+    "\u{2F8A5}"=>"\u60C7",
+    "\u{2F8A6}"=>"\u6148",
+    "\u{2F8A7}"=>"\u614C",
+    "\u{2F8A8}"=>"\u614E",
+    "\u{2F8A9}"=>"\u614C",
+    "\u{2F8AA}"=>"\u617A",
+    "\u{2F8AB}"=>"\u618E",
+    "\u{2F8AC}"=>"\u61B2",
+    "\u{2F8AD}"=>"\u61A4",
+    "\u{2F8AE}"=>"\u61AF",
+    "\u{2F8AF}"=>"\u61DE",
+    "\u{2F8B0}"=>"\u61F2",
+    "\u{2F8B1}"=>"\u61F6",
+    "\u{2F8B2}"=>"\u6210",
+    "\u{2F8B3}"=>"\u621B",
+    "\u{2F8B4}"=>"\u625D",
+    "\u{2F8B5}"=>"\u62B1",
+    "\u{2F8B6}"=>"\u62D4",
+    "\u{2F8B7}"=>"\u6350",
+    "\u{2F8B8}"=>"\u{22B0C}",
+    "\u{2F8B9}"=>"\u633D",
+    "\u{2F8BA}"=>"\u62FC",
+    "\u{2F8BB}"=>"\u6368",
+    "\u{2F8BC}"=>"\u6383",
+    "\u{2F8BD}"=>"\u63E4",
+    "\u{2F8BE}"=>"\u{22BF1}",
+    "\u{2F8BF}"=>"\u6422",
+    "\u{2F8C0}"=>"\u63C5",
+    "\u{2F8C1}"=>"\u63A9",
+    "\u{2F8C2}"=>"\u3A2E",
+    "\u{2F8C3}"=>"\u6469",
+    "\u{2F8C4}"=>"\u647E",
+    "\u{2F8C5}"=>"\u649D",
+    "\u{2F8C6}"=>"\u6477",
+    "\u{2F8C7}"=>"\u3A6C",
+    "\u{2F8C8}"=>"\u654F",
+    "\u{2F8C9}"=>"\u656C",
+    "\u{2F8CA}"=>"\u{2300A}",
+    "\u{2F8CB}"=>"\u65E3",
+    "\u{2F8CC}"=>"\u66F8",
+    "\u{2F8CD}"=>"\u6649",
+    "\u{2F8CE}"=>"\u3B19",
+    "\u{2F8CF}"=>"\u6691",
+    "\u{2F8D0}"=>"\u3B08",
+    "\u{2F8D1}"=>"\u3AE4",
+    "\u{2F8D2}"=>"\u5192",
+    "\u{2F8D3}"=>"\u5195",
+    "\u{2F8D4}"=>"\u6700",
+    "\u{2F8D5}"=>"\u669C",
+    "\u{2F8D6}"=>"\u80AD",
+    "\u{2F8D7}"=>"\u43D9",
+    "\u{2F8D8}"=>"\u6717",
+    "\u{2F8D9}"=>"\u671B",
+    "\u{2F8DA}"=>"\u6721",
+    "\u{2F8DB}"=>"\u675E",
+    "\u{2F8DC}"=>"\u6753",
+    "\u{2F8DD}"=>"\u{233C3}",
+    "\u{2F8DE}"=>"\u3B49",
+    "\u{2F8DF}"=>"\u67FA",
+    "\u{2F8E0}"=>"\u6785",
+    "\u{2F8E1}"=>"\u6852",
+    "\u{2F8E2}"=>"\u6885",
+    "\u{2F8E3}"=>"\u{2346D}",
+    "\u{2F8E4}"=>"\u688E",
+    "\u{2F8E5}"=>"\u681F",
+    "\u{2F8E6}"=>"\u6914",
+    "\u{2F8E7}"=>"\u3B9D",
+    "\u{2F8E8}"=>"\u6942",
+    "\u{2F8E9}"=>"\u69A3",
+    "\u{2F8EA}"=>"\u69EA",
+    "\u{2F8EB}"=>"\u6AA8",
+    "\u{2F8EC}"=>"\u{236A3}",
+    "\u{2F8ED}"=>"\u6ADB",
+    "\u{2F8EE}"=>"\u3C18",
+    "\u{2F8EF}"=>"\u6B21",
+    "\u{2F8F0}"=>"\u{238A7}",
+    "\u{2F8F1}"=>"\u6B54",
+    "\u{2F8F2}"=>"\u3C4E",
+    "\u{2F8F3}"=>"\u6B72",
+    "\u{2F8F4}"=>"\u6B9F",
+    "\u{2F8F5}"=>"\u6BBA",
+    "\u{2F8F6}"=>"\u6BBB",
+    "\u{2F8F7}"=>"\u{23A8D}",
+    "\u{2F8F8}"=>"\u{21D0B}",
+    "\u{2F8F9}"=>"\u{23AFA}",
+    "\u{2F8FA}"=>"\u6C4E",
+    "\u{2F8FB}"=>"\u{23CBC}",
+    "\u{2F8FC}"=>"\u6CBF",
+    "\u{2F8FD}"=>"\u6CCD",
+    "\u{2F8FE}"=>"\u6C67",
+    "\u{2F8FF}"=>"\u6D16",
+    "\u{2F900}"=>"\u6D3E",
+    "\u{2F901}"=>"\u6D77",
+    "\u{2F902}"=>"\u6D41",
+    "\u{2F903}"=>"\u6D69",
+    "\u{2F904}"=>"\u6D78",
+    "\u{2F905}"=>"\u6D85",
+    "\u{2F906}"=>"\u{23D1E}",
+    "\u{2F907}"=>"\u6D34",
+    "\u{2F908}"=>"\u6E2F",
+    "\u{2F909}"=>"\u6E6E",
+    "\u{2F90A}"=>"\u3D33",
+    "\u{2F90B}"=>"\u6ECB",
+    "\u{2F90C}"=>"\u6EC7",
+    "\u{2F90D}"=>"\u{23ED1}",
+    "\u{2F90E}"=>"\u6DF9",
+    "\u{2F90F}"=>"\u6F6E",
+    "\u{2F910}"=>"\u{23F5E}",
+    "\u{2F911}"=>"\u{23F8E}",
+    "\u{2F912}"=>"\u6FC6",
+    "\u{2F913}"=>"\u7039",
+    "\u{2F914}"=>"\u701E",
+    "\u{2F915}"=>"\u701B",
+    "\u{2F916}"=>"\u3D96",
+    "\u{2F917}"=>"\u704A",
+    "\u{2F918}"=>"\u707D",
+    "\u{2F919}"=>"\u7077",
+    "\u{2F91A}"=>"\u70AD",
+    "\u{2F91B}"=>"\u{20525}",
+    "\u{2F91C}"=>"\u7145",
+    "\u{2F91D}"=>"\u{24263}",
+    "\u{2F91E}"=>"\u719C",
+    "\u{2F91F}"=>"\u{243AB}",
+    "\u{2F920}"=>"\u7228",
+    "\u{2F921}"=>"\u7235",
+    "\u{2F922}"=>"\u7250",
+    "\u{2F923}"=>"\u{24608}",
+    "\u{2F924}"=>"\u7280",
+    "\u{2F925}"=>"\u7295",
+    "\u{2F926}"=>"\u{24735}",
+    "\u{2F927}"=>"\u{24814}",
+    "\u{2F928}"=>"\u737A",
+    "\u{2F929}"=>"\u738B",
+    "\u{2F92A}"=>"\u3EAC",
+    "\u{2F92B}"=>"\u73A5",
+    "\u{2F92C}"=>"\u3EB8",
+    "\u{2F92D}"=>"\u3EB8",
+    "\u{2F92E}"=>"\u7447",
+    "\u{2F92F}"=>"\u745C",
+    "\u{2F930}"=>"\u7471",
+    "\u{2F931}"=>"\u7485",
+    "\u{2F932}"=>"\u74CA",
+    "\u{2F933}"=>"\u3F1B",
+    "\u{2F934}"=>"\u7524",
+    "\u{2F935}"=>"\u{24C36}",
+    "\u{2F936}"=>"\u753E",
+    "\u{2F937}"=>"\u{24C92}",
+    "\u{2F938}"=>"\u7570",
+    "\u{2F939}"=>"\u{2219F}",
+    "\u{2F93A}"=>"\u7610",
+    "\u{2F93B}"=>"\u{24FA1}",
+    "\u{2F93C}"=>"\u{24FB8}",
+    "\u{2F93D}"=>"\u{25044}",
+    "\u{2F93E}"=>"\u3FFC",
+    "\u{2F93F}"=>"\u4008",
+    "\u{2F940}"=>"\u76F4",
+    "\u{2F941}"=>"\u{250F3}",
+    "\u{2F942}"=>"\u{250F2}",
+    "\u{2F943}"=>"\u{25119}",
+    "\u{2F944}"=>"\u{25133}",
+    "\u{2F945}"=>"\u771E",
+    "\u{2F946}"=>"\u771F",
+    "\u{2F947}"=>"\u771F",
+    "\u{2F948}"=>"\u774A",
+    "\u{2F949}"=>"\u4039",
+    "\u{2F94A}"=>"\u778B",
+    "\u{2F94B}"=>"\u4046",
+    "\u{2F94C}"=>"\u4096",
+    "\u{2F94D}"=>"\u{2541D}",
+    "\u{2F94E}"=>"\u784E",
+    "\u{2F94F}"=>"\u788C",
+    "\u{2F950}"=>"\u78CC",
+    "\u{2F951}"=>"\u40E3",
+    "\u{2F952}"=>"\u{25626}",
+    "\u{2F953}"=>"\u7956",
+    "\u{2F954}"=>"\u{2569A}",
+    "\u{2F955}"=>"\u{256C5}",
+    "\u{2F956}"=>"\u798F",
+    "\u{2F957}"=>"\u79EB",
+    "\u{2F958}"=>"\u412F",
+    "\u{2F959}"=>"\u7A40",
+    "\u{2F95A}"=>"\u7A4A",
+    "\u{2F95B}"=>"\u7A4F",
+    "\u{2F95C}"=>"\u{2597C}",
+    "\u{2F95D}"=>"\u{25AA7}",
+    "\u{2F95E}"=>"\u{25AA7}",
+    "\u{2F95F}"=>"\u7AEE",
+    "\u{2F960}"=>"\u4202",
+    "\u{2F961}"=>"\u{25BAB}",
+    "\u{2F962}"=>"\u7BC6",
+    "\u{2F963}"=>"\u7BC9",
+    "\u{2F964}"=>"\u4227",
+    "\u{2F965}"=>"\u{25C80}",
+    "\u{2F966}"=>"\u7CD2",
+    "\u{2F967}"=>"\u42A0",
+    "\u{2F968}"=>"\u7CE8",
+    "\u{2F969}"=>"\u7CE3",
+    "\u{2F96A}"=>"\u7D00",
+    "\u{2F96B}"=>"\u{25F86}",
+    "\u{2F96C}"=>"\u7D63",
+    "\u{2F96D}"=>"\u4301",
+    "\u{2F96E}"=>"\u7DC7",
+    "\u{2F96F}"=>"\u7E02",
+    "\u{2F970}"=>"\u7E45",
+    "\u{2F971}"=>"\u4334",
+    "\u{2F972}"=>"\u{26228}",
+    "\u{2F973}"=>"\u{26247}",
+    "\u{2F974}"=>"\u4359",
+    "\u{2F975}"=>"\u{262D9}",
+    "\u{2F976}"=>"\u7F7A",
+    "\u{2F977}"=>"\u{2633E}",
+    "\u{2F978}"=>"\u7F95",
+    "\u{2F979}"=>"\u7FFA",
+    "\u{2F97A}"=>"\u8005",
+    "\u{2F97B}"=>"\u{264DA}",
+    "\u{2F97C}"=>"\u{26523}",
+    "\u{2F97D}"=>"\u8060",
+    "\u{2F97E}"=>"\u{265A8}",
+    "\u{2F97F}"=>"\u8070",
+    "\u{2F980}"=>"\u{2335F}",
+    "\u{2F981}"=>"\u43D5",
+    "\u{2F982}"=>"\u80B2",
+    "\u{2F983}"=>"\u8103",
+    "\u{2F984}"=>"\u440B",
+    "\u{2F985}"=>"\u813E",
+    "\u{2F986}"=>"\u5AB5",
+    "\u{2F987}"=>"\u{267A7}",
+    "\u{2F988}"=>"\u{267B5}",
+    "\u{2F989}"=>"\u{23393}",
+    "\u{2F98A}"=>"\u{2339C}",
+    "\u{2F98B}"=>"\u8201",
+    "\u{2F98C}"=>"\u8204",
+    "\u{2F98D}"=>"\u8F9E",
+    "\u{2F98E}"=>"\u446B",
+    "\u{2F98F}"=>"\u8291",
+    "\u{2F990}"=>"\u828B",
+    "\u{2F991}"=>"\u829D",
+    "\u{2F992}"=>"\u52B3",
+    "\u{2F993}"=>"\u82B1",
+    "\u{2F994}"=>"\u82B3",
+    "\u{2F995}"=>"\u82BD",
+    "\u{2F996}"=>"\u82E6",
+    "\u{2F997}"=>"\u{26B3C}",
+    "\u{2F998}"=>"\u82E5",
+    "\u{2F999}"=>"\u831D",
+    "\u{2F99A}"=>"\u8363",
+    "\u{2F99B}"=>"\u83AD",
+    "\u{2F99C}"=>"\u8323",
+    "\u{2F99D}"=>"\u83BD",
+    "\u{2F99E}"=>"\u83E7",
+    "\u{2F99F}"=>"\u8457",
+    "\u{2F9A0}"=>"\u8353",
+    "\u{2F9A1}"=>"\u83CA",
+    "\u{2F9A2}"=>"\u83CC",
+    "\u{2F9A3}"=>"\u83DC",
+    "\u{2F9A4}"=>"\u{26C36}",
+    "\u{2F9A5}"=>"\u{26D6B}",
+    "\u{2F9A6}"=>"\u{26CD5}",
+    "\u{2F9A7}"=>"\u452B",
+    "\u{2F9A8}"=>"\u84F1",
+    "\u{2F9A9}"=>"\u84F3",
+    "\u{2F9AA}"=>"\u8516",
+    "\u{2F9AB}"=>"\u{273CA}",
+    "\u{2F9AC}"=>"\u8564",
+    "\u{2F9AD}"=>"\u{26F2C}",
+    "\u{2F9AE}"=>"\u455D",
+    "\u{2F9AF}"=>"\u4561",
+    "\u{2F9B0}"=>"\u{26FB1}",
+    "\u{2F9B1}"=>"\u{270D2}",
+    "\u{2F9B2}"=>"\u456B",
+    "\u{2F9B3}"=>"\u8650",
+    "\u{2F9B4}"=>"\u865C",
+    "\u{2F9B5}"=>"\u8667",
+    "\u{2F9B6}"=>"\u8669",
+    "\u{2F9B7}"=>"\u86A9",
+    "\u{2F9B8}"=>"\u8688",
+    "\u{2F9B9}"=>"\u870E",
+    "\u{2F9BA}"=>"\u86E2",
+    "\u{2F9BB}"=>"\u8779",
+    "\u{2F9BC}"=>"\u8728",
+    "\u{2F9BD}"=>"\u876B",
+    "\u{2F9BE}"=>"\u8786",
+    "\u{2F9BF}"=>"\u45D7",
+    "\u{2F9C0}"=>"\u87E1",
+    "\u{2F9C1}"=>"\u8801",
+    "\u{2F9C2}"=>"\u45F9",
+    "\u{2F9C3}"=>"\u8860",
+    "\u{2F9C4}"=>"\u8863",
+    "\u{2F9C5}"=>"\u{27667}",
+    "\u{2F9C6}"=>"\u88D7",
+    "\u{2F9C7}"=>"\u88DE",
+    "\u{2F9C8}"=>"\u4635",
+    "\u{2F9C9}"=>"\u88FA",
+    "\u{2F9CA}"=>"\u34BB",
+    "\u{2F9CB}"=>"\u{278AE}",
+    "\u{2F9CC}"=>"\u{27966}",
+    "\u{2F9CD}"=>"\u46BE",
+    "\u{2F9CE}"=>"\u46C7",
+    "\u{2F9CF}"=>"\u8AA0",
+    "\u{2F9D0}"=>"\u8AED",
+    "\u{2F9D1}"=>"\u8B8A",
+    "\u{2F9D2}"=>"\u8C55",
+    "\u{2F9D3}"=>"\u{27CA8}",
+    "\u{2F9D4}"=>"\u8CAB",
+    "\u{2F9D5}"=>"\u8CC1",
+    "\u{2F9D6}"=>"\u8D1B",
+    "\u{2F9D7}"=>"\u8D77",
+    "\u{2F9D8}"=>"\u{27F2F}",
+    "\u{2F9D9}"=>"\u{20804}",
+    "\u{2F9DA}"=>"\u8DCB",
+    "\u{2F9DB}"=>"\u8DBC",
+    "\u{2F9DC}"=>"\u8DF0",
+    "\u{2F9DD}"=>"\u{208DE}",
+    "\u{2F9DE}"=>"\u8ED4",
+    "\u{2F9DF}"=>"\u8F38",
+    "\u{2F9E0}"=>"\u{285D2}",
+    "\u{2F9E1}"=>"\u{285ED}",
+    "\u{2F9E2}"=>"\u9094",
+    "\u{2F9E3}"=>"\u90F1",
+    "\u{2F9E4}"=>"\u9111",
+    "\u{2F9E5}"=>"\u{2872E}",
+    "\u{2F9E6}"=>"\u911B",
+    "\u{2F9E7}"=>"\u9238",
+    "\u{2F9E8}"=>"\u92D7",
+    "\u{2F9E9}"=>"\u92D8",
+    "\u{2F9EA}"=>"\u927C",
+    "\u{2F9EB}"=>"\u93F9",
+    "\u{2F9EC}"=>"\u9415",
+    "\u{2F9ED}"=>"\u{28BFA}",
+    "\u{2F9EE}"=>"\u958B",
+    "\u{2F9EF}"=>"\u4995",
+    "\u{2F9F0}"=>"\u95B7",
+    "\u{2F9F1}"=>"\u{28D77}",
+    "\u{2F9F2}"=>"\u49E6",
+    "\u{2F9F3}"=>"\u96C3",
+    "\u{2F9F4}"=>"\u5DB2",
+    "\u{2F9F5}"=>"\u9723",
+    "\u{2F9F6}"=>"\u{29145}",
+    "\u{2F9F7}"=>"\u{2921A}",
+    "\u{2F9F8}"=>"\u4A6E",
+    "\u{2F9F9}"=>"\u4A76",
+    "\u{2F9FA}"=>"\u97E0",
+    "\u{2F9FB}"=>"\u{2940A}",
+    "\u{2F9FC}"=>"\u4AB2",
+    "\u{2F9FD}"=>"\u{29496}",
+    "\u{2F9FE}"=>"\u980B",
+    "\u{2F9FF}"=>"\u980B",
+    "\u{2FA00}"=>"\u9829",
+    "\u{2FA01}"=>"\u{295B6}",
+    "\u{2FA02}"=>"\u98E2",
+    "\u{2FA03}"=>"\u4B33",
+    "\u{2FA04}"=>"\u9929",
+    "\u{2FA05}"=>"\u99A7",
+    "\u{2FA06}"=>"\u99C2",
+    "\u{2FA07}"=>"\u99FE",
+    "\u{2FA08}"=>"\u4BCE",
+    "\u{2FA09}"=>"\u{29B30}",
+    "\u{2FA0A}"=>"\u9B12",
+    "\u{2FA0B}"=>"\u9C40",
+    "\u{2FA0C}"=>"\u9CFD",
+    "\u{2FA0D}"=>"\u4CCE",
+    "\u{2FA0E}"=>"\u4CED",
+    "\u{2FA0F}"=>"\u9D67",
+    "\u{2FA10}"=>"\u{2A0CE}",
+    "\u{2FA11}"=>"\u4CF8",
+    "\u{2FA12}"=>"\u{2A105}",
+    "\u{2FA13}"=>"\u{2A20E}",
+    "\u{2FA14}"=>"\u{2A291}",
+    "\u{2FA15}"=>"\u9EBB",
+    "\u{2FA16}"=>"\u4D56",
+    "\u{2FA17}"=>"\u9EF9",
+    "\u{2FA18}"=>"\u9EFE",
+    "\u{2FA19}"=>"\u9F05",
+    "\u{2FA1A}"=>"\u9F0F",
+    "\u{2FA1B}"=>"\u9F16",
+    "\u{2FA1C}"=>"\u9F3B",
+    "\u{2FA1D}"=>"\u{2A600}",
   }.freeze
 
   KOMPATIBLE_TABLE = {
-    "\u00A0"=>" ", "\u00A8"=>" \u0308", "\u00AA"=>"a", "\u00AF"=>" \u0304", "\u00B2"=>"2", "\u00B3"=>"3", "\u00B4"=>" \u0301", "\u00B5"=>"\u03BC",
-    "\u00B8"=>" \u0327", "\u00B9"=>"1", "\u00BA"=>"o", "\u00BC"=>"1\u20444", "\u00BD"=>"1\u20442", "\u00BE"=>"3\u20444", "\u0132"=>"IJ", "\u0133"=>"ij",
-    "\u013F"=>"L\u00B7", "\u0140"=>"l\u00B7", "\u0149"=>"\u02BCn", "\u017F"=>"s", "\u01C4"=>"D\u017D", "\u01C5"=>"D\u017E", "\u01C6"=>"d\u017E", "\u01C7"=>"LJ",
-    "\u01C8"=>"Lj", "\u01C9"=>"lj", "\u01CA"=>"NJ", "\u01CB"=>"Nj", "\u01CC"=>"nj", "\u01F1"=>"DZ", "\u01F2"=>"Dz", "\u01F3"=>"dz",
-    "\u02B0"=>"h", "\u02B1"=>"\u0266", "\u02B2"=>"j", "\u02B3"=>"r", "\u02B4"=>"\u0279", "\u02B5"=>"\u027B", "\u02B6"=>"\u0281", "\u02B7"=>"w",
-    "\u02B8"=>"y", "\u02D8"=>" \u0306", "\u02D9"=>" \u0307", "\u02DA"=>" \u030A", "\u02DB"=>" \u0328", "\u02DC"=>" \u0303", "\u02DD"=>" \u030B", "\u02E0"=>"\u0263",
-    "\u02E1"=>"l", "\u02E2"=>"s", "\u02E3"=>"x", "\u02E4"=>"\u0295", "\u037A"=>" \u0345", "\u0384"=>" \u0301", "\u03D0"=>"\u03B2", "\u03D1"=>"\u03B8",
-    "\u03D2"=>"\u03A5", "\u03D5"=>"\u03C6", "\u03D6"=>"\u03C0", "\u03F0"=>"\u03BA", "\u03F1"=>"\u03C1", "\u03F2"=>"\u03C2", "\u03F4"=>"\u0398", "\u03F5"=>"\u03B5",
-    "\u03F9"=>"\u03A3", "\u0587"=>"\u0565\u0582", "\u0675"=>"\u0627\u0674", "\u0676"=>"\u0648\u0674", "\u0677"=>"\u06C7\u0674", "\u0678"=>"\u064A\u0674", "\u0E33"=>"\u0E4D\u0E32", "\u0EB3"=>"\u0ECD\u0EB2",
-    "\u0EDC"=>"\u0EAB\u0E99", "\u0EDD"=>"\u0EAB\u0EA1", "\u0F0C"=>"\u0F0B", "\u0F77"=>"\u0FB2\u0F81", "\u0F79"=>"\u0FB3\u0F81", "\u10FC"=>"\u10DC", "\u1D2C"=>"A", "\u1D2D"=>"\u00C6",
-    "\u1D2E"=>"B", "\u1D30"=>"D", "\u1D31"=>"E", "\u1D32"=>"\u018E", "\u1D33"=>"G", "\u1D34"=>"H", "\u1D35"=>"I", "\u1D36"=>"J",
-    "\u1D37"=>"K", "\u1D38"=>"L", "\u1D39"=>"M", "\u1D3A"=>"N", "\u1D3C"=>"O", "\u1D3D"=>"\u0222", "\u1D3E"=>"P", "\u1D3F"=>"R",
-    "\u1D40"=>"T", "\u1D41"=>"U", "\u1D42"=>"W", "\u1D43"=>"a", "\u1D44"=>"\u0250", "\u1D45"=>"\u0251", "\u1D46"=>"\u1D02", "\u1D47"=>"b",
-    "\u1D48"=>"d", "\u1D49"=>"e", "\u1D4A"=>"\u0259", "\u1D4B"=>"\u025B", "\u1D4C"=>"\u025C", "\u1D4D"=>"g", "\u1D4F"=>"k", "\u1D50"=>"m",
-    "\u1D51"=>"\u014B", "\u1D52"=>"o", "\u1D53"=>"\u0254", "\u1D54"=>"\u1D16", "\u1D55"=>"\u1D17", "\u1D56"=>"p", "\u1D57"=>"t", "\u1D58"=>"u",
-    "\u1D59"=>"\u1D1D", "\u1D5A"=>"\u026F", "\u1D5B"=>"v", "\u1D5C"=>"\u1D25", "\u1D5D"=>"\u03B2", "\u1D5E"=>"\u03B3", "\u1D5F"=>"\u03B4", "\u1D60"=>"\u03C6",
-    "\u1D61"=>"\u03C7", "\u1D62"=>"i", "\u1D63"=>"r", "\u1D64"=>"u", "\u1D65"=>"v", "\u1D66"=>"\u03B2", "\u1D67"=>"\u03B3", "\u1D68"=>"\u03C1",
-    "\u1D69"=>"\u03C6", "\u1D6A"=>"\u03C7", "\u1D78"=>"\u043D", "\u1D9B"=>"\u0252", "\u1D9C"=>"c", "\u1D9D"=>"\u0255", "\u1D9E"=>"\u00F0", "\u1D9F"=>"\u025C",
-    "\u1DA0"=>"f", "\u1DA1"=>"\u025F", "\u1DA2"=>"\u0261", "\u1DA3"=>"\u0265", "\u1DA4"=>"\u0268", "\u1DA5"=>"\u0269", "\u1DA6"=>"\u026A", "\u1DA7"=>"\u1D7B",
-    "\u1DA8"=>"\u029D", "\u1DA9"=>"\u026D", "\u1DAA"=>"\u1D85", "\u1DAB"=>"\u029F", "\u1DAC"=>"\u0271", "\u1DAD"=>"\u0270", "\u1DAE"=>"\u0272", "\u1DAF"=>"\u0273",
-    "\u1DB0"=>"\u0274", "\u1DB1"=>"\u0275", "\u1DB2"=>"\u0278", "\u1DB3"=>"\u0282", "\u1DB4"=>"\u0283", "\u1DB5"=>"\u01AB", "\u1DB6"=>"\u0289", "\u1DB7"=>"\u028A",
-    "\u1DB8"=>"\u1D1C", "\u1DB9"=>"\u028B", "\u1DBA"=>"\u028C", "\u1DBB"=>"z", "\u1DBC"=>"\u0290", "\u1DBD"=>"\u0291", "\u1DBE"=>"\u0292", "\u1DBF"=>"\u03B8",
-    "\u1E9A"=>"a\u02BE", "\u1FBD"=>" \u0313", "\u1FBF"=>" \u0313", "\u1FC0"=>" \u0342", "\u1FFE"=>" \u0314", "\u2002"=>" ", "\u2003"=>" ", "\u2004"=>" ",
-    "\u2005"=>" ", "\u2006"=>" ", "\u2007"=>" ", "\u2008"=>" ", "\u2009"=>" ", "\u200A"=>" ", "\u2011"=>"\u2010", "\u2017"=>" \u0333",
-    "\u2024"=>".", "\u2025"=>"..", "\u2026"=>"...", "\u202F"=>" ", "\u2033"=>"\u2032\u2032", "\u2034"=>"\u2032\u2032\u2032", "\u2036"=>"\u2035\u2035", "\u2037"=>"\u2035\u2035\u2035",
-    "\u203C"=>"!!", "\u203E"=>" \u0305", "\u2047"=>"??", "\u2048"=>"?!", "\u2049"=>"!?", "\u2057"=>"\u2032\u2032\u2032\u2032", "\u205F"=>" ", "\u2070"=>"0",
-    "\u2071"=>"i", "\u2074"=>"4", "\u2075"=>"5", "\u2076"=>"6", "\u2077"=>"7", "\u2078"=>"8", "\u2079"=>"9", "\u207A"=>"+",
-    "\u207B"=>"\u2212", "\u207C"=>"=", "\u207D"=>"(", "\u207E"=>")", "\u207F"=>"n", "\u2080"=>"0", "\u2081"=>"1", "\u2082"=>"2",
-    "\u2083"=>"3", "\u2084"=>"4", "\u2085"=>"5", "\u2086"=>"6", "\u2087"=>"7", "\u2088"=>"8", "\u2089"=>"9", "\u208A"=>"+",
-    "\u208B"=>"\u2212", "\u208C"=>"=", "\u208D"=>"(", "\u208E"=>")", "\u2090"=>"a", "\u2091"=>"e", "\u2092"=>"o", "\u2093"=>"x",
-    "\u2094"=>"\u0259", "\u2095"=>"h", "\u2096"=>"k", "\u2097"=>"l", "\u2098"=>"m", "\u2099"=>"n", "\u209A"=>"p", "\u209B"=>"s",
-    "\u209C"=>"t", "\u20A8"=>"Rs", "\u2100"=>"a/c", "\u2101"=>"a/s", "\u2102"=>"C", "\u2103"=>"\u00B0C", "\u2105"=>"c/o", "\u2106"=>"c/u",
-    "\u2107"=>"\u0190", "\u2109"=>"\u00B0F", "\u210A"=>"g", "\u210B"=>"H", "\u210C"=>"H", "\u210D"=>"H", "\u210E"=>"h", "\u210F"=>"\u0127",
-    "\u2110"=>"I", "\u2111"=>"I", "\u2112"=>"L", "\u2113"=>"l", "\u2115"=>"N", "\u2116"=>"No", "\u2119"=>"P", "\u211A"=>"Q",
-    "\u211B"=>"R", "\u211C"=>"R", "\u211D"=>"R", "\u2120"=>"SM", "\u2121"=>"TEL", "\u2122"=>"TM", "\u2124"=>"Z", "\u2128"=>"Z",
-    "\u212C"=>"B", "\u212D"=>"C", "\u212F"=>"e", "\u2130"=>"E", "\u2131"=>"F", "\u2133"=>"M", "\u2134"=>"o", "\u2135"=>"\u05D0",
-    "\u2136"=>"\u05D1", "\u2137"=>"\u05D2", "\u2138"=>"\u05D3", "\u2139"=>"i", "\u213B"=>"FAX", "\u213C"=>"\u03C0", "\u213D"=>"\u03B3", "\u213E"=>"\u0393",
-    "\u213F"=>"\u03A0", "\u2140"=>"\u2211", "\u2145"=>"D", "\u2146"=>"d", "\u2147"=>"e", "\u2148"=>"i", "\u2149"=>"j", "\u2150"=>"1\u20447",
-    "\u2151"=>"1\u20449", "\u2152"=>"1\u204410", "\u2153"=>"1\u20443", "\u2154"=>"2\u20443", "\u2155"=>"1\u20445", "\u2156"=>"2\u20445", "\u2157"=>"3\u20445", "\u2158"=>"4\u20445",
-    "\u2159"=>"1\u20446", "\u215A"=>"5\u20446", "\u215B"=>"1\u20448", "\u215C"=>"3\u20448", "\u215D"=>"5\u20448", "\u215E"=>"7\u20448", "\u215F"=>"1\u2044", "\u2160"=>"I",
-    "\u2161"=>"II", "\u2162"=>"III", "\u2163"=>"IV", "\u2164"=>"V", "\u2165"=>"VI", "\u2166"=>"VII", "\u2167"=>"VIII", "\u2168"=>"IX",
-    "\u2169"=>"X", "\u216A"=>"XI", "\u216B"=>"XII", "\u216C"=>"L", "\u216D"=>"C", "\u216E"=>"D", "\u216F"=>"M", "\u2170"=>"i",
-    "\u2171"=>"ii", "\u2172"=>"iii", "\u2173"=>"iv", "\u2174"=>"v", "\u2175"=>"vi", "\u2176"=>"vii", "\u2177"=>"viii", "\u2178"=>"ix",
-    "\u2179"=>"x", "\u217A"=>"xi", "\u217B"=>"xii", "\u217C"=>"l", "\u217D"=>"c", "\u217E"=>"d", "\u217F"=>"m", "\u2189"=>"0\u20443",
-    "\u222C"=>"\u222B\u222B", "\u222D"=>"\u222B\u222B\u222B", "\u222F"=>"\u222E\u222E", "\u2230"=>"\u222E\u222E\u222E", "\u2460"=>"1", "\u2461"=>"2", "\u2462"=>"3", "\u2463"=>"4",
-    "\u2464"=>"5", "\u2465"=>"6", "\u2466"=>"7", "\u2467"=>"8", "\u2468"=>"9", "\u2469"=>"10", "\u246A"=>"11", "\u246B"=>"12",
-    "\u246C"=>"13", "\u246D"=>"14", "\u246E"=>"15", "\u246F"=>"16", "\u2470"=>"17", "\u2471"=>"18", "\u2472"=>"19", "\u2473"=>"20",
-    "\u2474"=>"(1)", "\u2475"=>"(2)", "\u2476"=>"(3)", "\u2477"=>"(4)", "\u2478"=>"(5)", "\u2479"=>"(6)", "\u247A"=>"(7)", "\u247B"=>"(8)",
-    "\u247C"=>"(9)", "\u247D"=>"(10)", "\u247E"=>"(11)", "\u247F"=>"(12)", "\u2480"=>"(13)", "\u2481"=>"(14)", "\u2482"=>"(15)", "\u2483"=>"(16)",
-    "\u2484"=>"(17)", "\u2485"=>"(18)", "\u2486"=>"(19)", "\u2487"=>"(20)", "\u2488"=>"1.", "\u2489"=>"2.", "\u248A"=>"3.", "\u248B"=>"4.",
-    "\u248C"=>"5.", "\u248D"=>"6.", "\u248E"=>"7.", "\u248F"=>"8.", "\u2490"=>"9.", "\u2491"=>"10.", "\u2492"=>"11.", "\u2493"=>"12.",
-    "\u2494"=>"13.", "\u2495"=>"14.", "\u2496"=>"15.", "\u2497"=>"16.", "\u2498"=>"17.", "\u2499"=>"18.", "\u249A"=>"19.", "\u249B"=>"20.",
-    "\u249C"=>"(a)", "\u249D"=>"(b)", "\u249E"=>"(c)", "\u249F"=>"(d)", "\u24A0"=>"(e)", "\u24A1"=>"(f)", "\u24A2"=>"(g)", "\u24A3"=>"(h)",
-    "\u24A4"=>"(i)", "\u24A5"=>"(j)", "\u24A6"=>"(k)", "\u24A7"=>"(l)", "\u24A8"=>"(m)", "\u24A9"=>"(n)", "\u24AA"=>"(o)", "\u24AB"=>"(p)",
-    "\u24AC"=>"(q)", "\u24AD"=>"(r)", "\u24AE"=>"(s)", "\u24AF"=>"(t)", "\u24B0"=>"(u)", "\u24B1"=>"(v)", "\u24B2"=>"(w)", "\u24B3"=>"(x)",
-    "\u24B4"=>"(y)", "\u24B5"=>"(z)", "\u24B6"=>"A", "\u24B7"=>"B", "\u24B8"=>"C", "\u24B9"=>"D", "\u24BA"=>"E", "\u24BB"=>"F",
-    "\u24BC"=>"G", "\u24BD"=>"H", "\u24BE"=>"I", "\u24BF"=>"J", "\u24C0"=>"K", "\u24C1"=>"L", "\u24C2"=>"M", "\u24C3"=>"N",
-    "\u24C4"=>"O", "\u24C5"=>"P", "\u24C6"=>"Q", "\u24C7"=>"R", "\u24C8"=>"S", "\u24C9"=>"T", "\u24CA"=>"U", "\u24CB"=>"V",
-    "\u24CC"=>"W", "\u24CD"=>"X", "\u24CE"=>"Y", "\u24CF"=>"Z", "\u24D0"=>"a", "\u24D1"=>"b", "\u24D2"=>"c", "\u24D3"=>"d",
-    "\u24D4"=>"e", "\u24D5"=>"f", "\u24D6"=>"g", "\u24D7"=>"h", "\u24D8"=>"i", "\u24D9"=>"j", "\u24DA"=>"k", "\u24DB"=>"l",
-    "\u24DC"=>"m", "\u24DD"=>"n", "\u24DE"=>"o", "\u24DF"=>"p", "\u24E0"=>"q", "\u24E1"=>"r", "\u24E2"=>"s", "\u24E3"=>"t",
-    "\u24E4"=>"u", "\u24E5"=>"v", "\u24E6"=>"w", "\u24E7"=>"x", "\u24E8"=>"y", "\u24E9"=>"z", "\u24EA"=>"0", "\u2A0C"=>"\u222B\u222B\u222B\u222B",
-    "\u2A74"=>"::=", "\u2A75"=>"==", "\u2A76"=>"===", "\u2C7C"=>"j", "\u2C7D"=>"V", "\u2D6F"=>"\u2D61", "\u2E9F"=>"\u6BCD", "\u2EF3"=>"\u9F9F",
-    "\u2F00"=>"\u4E00", "\u2F01"=>"\u4E28", "\u2F02"=>"\u4E36", "\u2F03"=>"\u4E3F", "\u2F04"=>"\u4E59", "\u2F05"=>"\u4E85", "\u2F06"=>"\u4E8C", "\u2F07"=>"\u4EA0",
-    "\u2F08"=>"\u4EBA", "\u2F09"=>"\u513F", "\u2F0A"=>"\u5165", "\u2F0B"=>"\u516B", "\u2F0C"=>"\u5182", "\u2F0D"=>"\u5196", "\u2F0E"=>"\u51AB", "\u2F0F"=>"\u51E0",
-    "\u2F10"=>"\u51F5", "\u2F11"=>"\u5200", "\u2F12"=>"\u529B", "\u2F13"=>"\u52F9", "\u2F14"=>"\u5315", "\u2F15"=>"\u531A", "\u2F16"=>"\u5338", "\u2F17"=>"\u5341",
-    "\u2F18"=>"\u535C", "\u2F19"=>"\u5369", "\u2F1A"=>"\u5382", "\u2F1B"=>"\u53B6", "\u2F1C"=>"\u53C8", "\u2F1D"=>"\u53E3", "\u2F1E"=>"\u56D7", "\u2F1F"=>"\u571F",
-    "\u2F20"=>"\u58EB", "\u2F21"=>"\u5902", "\u2F22"=>"\u590A", "\u2F23"=>"\u5915", "\u2F24"=>"\u5927", "\u2F25"=>"\u5973", "\u2F26"=>"\u5B50", "\u2F27"=>"\u5B80",
-    "\u2F28"=>"\u5BF8", "\u2F29"=>"\u5C0F", "\u2F2A"=>"\u5C22", "\u2F2B"=>"\u5C38", "\u2F2C"=>"\u5C6E", "\u2F2D"=>"\u5C71", "\u2F2E"=>"\u5DDB", "\u2F2F"=>"\u5DE5",
-    "\u2F30"=>"\u5DF1", "\u2F31"=>"\u5DFE", "\u2F32"=>"\u5E72", "\u2F33"=>"\u5E7A", "\u2F34"=>"\u5E7F", "\u2F35"=>"\u5EF4", "\u2F36"=>"\u5EFE", "\u2F37"=>"\u5F0B",
-    "\u2F38"=>"\u5F13", "\u2F39"=>"\u5F50", "\u2F3A"=>"\u5F61", "\u2F3B"=>"\u5F73", "\u2F3C"=>"\u5FC3", "\u2F3D"=>"\u6208", "\u2F3E"=>"\u6236", "\u2F3F"=>"\u624B",
-    "\u2F40"=>"\u652F", "\u2F41"=>"\u6534", "\u2F42"=>"\u6587", "\u2F43"=>"\u6597", "\u2F44"=>"\u65A4", "\u2F45"=>"\u65B9", "\u2F46"=>"\u65E0", "\u2F47"=>"\u65E5",
-    "\u2F48"=>"\u66F0", "\u2F49"=>"\u6708", "\u2F4A"=>"\u6728", "\u2F4B"=>"\u6B20", "\u2F4C"=>"\u6B62", "\u2F4D"=>"\u6B79", "\u2F4E"=>"\u6BB3", "\u2F4F"=>"\u6BCB",
-    "\u2F50"=>"\u6BD4", "\u2F51"=>"\u6BDB", "\u2F52"=>"\u6C0F", "\u2F53"=>"\u6C14", "\u2F54"=>"\u6C34", "\u2F55"=>"\u706B", "\u2F56"=>"\u722A", "\u2F57"=>"\u7236",
-    "\u2F58"=>"\u723B", "\u2F59"=>"\u723F", "\u2F5A"=>"\u7247", "\u2F5B"=>"\u7259", "\u2F5C"=>"\u725B", "\u2F5D"=>"\u72AC", "\u2F5E"=>"\u7384", "\u2F5F"=>"\u7389",
-    "\u2F60"=>"\u74DC", "\u2F61"=>"\u74E6", "\u2F62"=>"\u7518", "\u2F63"=>"\u751F", "\u2F64"=>"\u7528", "\u2F65"=>"\u7530", "\u2F66"=>"\u758B", "\u2F67"=>"\u7592",
-    "\u2F68"=>"\u7676", "\u2F69"=>"\u767D", "\u2F6A"=>"\u76AE", "\u2F6B"=>"\u76BF", "\u2F6C"=>"\u76EE", "\u2F6D"=>"\u77DB", "\u2F6E"=>"\u77E2", "\u2F6F"=>"\u77F3",
-    "\u2F70"=>"\u793A", "\u2F71"=>"\u79B8", "\u2F72"=>"\u79BE", "\u2F73"=>"\u7A74", "\u2F74"=>"\u7ACB", "\u2F75"=>"\u7AF9", "\u2F76"=>"\u7C73", "\u2F77"=>"\u7CF8",
-    "\u2F78"=>"\u7F36", "\u2F79"=>"\u7F51", "\u2F7A"=>"\u7F8A", "\u2F7B"=>"\u7FBD", "\u2F7C"=>"\u8001", "\u2F7D"=>"\u800C", "\u2F7E"=>"\u8012", "\u2F7F"=>"\u8033",
-    "\u2F80"=>"\u807F", "\u2F81"=>"\u8089", "\u2F82"=>"\u81E3", "\u2F83"=>"\u81EA", "\u2F84"=>"\u81F3", "\u2F85"=>"\u81FC", "\u2F86"=>"\u820C", "\u2F87"=>"\u821B",
-    "\u2F88"=>"\u821F", "\u2F89"=>"\u826E", "\u2F8A"=>"\u8272", "\u2F8B"=>"\u8278", "\u2F8C"=>"\u864D", "\u2F8D"=>"\u866B", "\u2F8E"=>"\u8840", "\u2F8F"=>"\u884C",
-    "\u2F90"=>"\u8863", "\u2F91"=>"\u897E", "\u2F92"=>"\u898B", "\u2F93"=>"\u89D2", "\u2F94"=>"\u8A00", "\u2F95"=>"\u8C37", "\u2F96"=>"\u8C46", "\u2F97"=>"\u8C55",
-    "\u2F98"=>"\u8C78", "\u2F99"=>"\u8C9D", "\u2F9A"=>"\u8D64", "\u2F9B"=>"\u8D70", "\u2F9C"=>"\u8DB3", "\u2F9D"=>"\u8EAB", "\u2F9E"=>"\u8ECA", "\u2F9F"=>"\u8F9B",
-    "\u2FA0"=>"\u8FB0", "\u2FA1"=>"\u8FB5", "\u2FA2"=>"\u9091", "\u2FA3"=>"\u9149", "\u2FA4"=>"\u91C6", "\u2FA5"=>"\u91CC", "\u2FA6"=>"\u91D1", "\u2FA7"=>"\u9577",
-    "\u2FA8"=>"\u9580", "\u2FA9"=>"\u961C", "\u2FAA"=>"\u96B6", "\u2FAB"=>"\u96B9", "\u2FAC"=>"\u96E8", "\u2FAD"=>"\u9751", "\u2FAE"=>"\u975E", "\u2FAF"=>"\u9762",
-    "\u2FB0"=>"\u9769", "\u2FB1"=>"\u97CB", "\u2FB2"=>"\u97ED", "\u2FB3"=>"\u97F3", "\u2FB4"=>"\u9801", "\u2FB5"=>"\u98A8", "\u2FB6"=>"\u98DB", "\u2FB7"=>"\u98DF",
-    "\u2FB8"=>"\u9996", "\u2FB9"=>"\u9999", "\u2FBA"=>"\u99AC", "\u2FBB"=>"\u9AA8", "\u2FBC"=>"\u9AD8", "\u2FBD"=>"\u9ADF", "\u2FBE"=>"\u9B25", "\u2FBF"=>"\u9B2F",
-    "\u2FC0"=>"\u9B32", "\u2FC1"=>"\u9B3C", "\u2FC2"=>"\u9B5A", "\u2FC3"=>"\u9CE5", "\u2FC4"=>"\u9E75", "\u2FC5"=>"\u9E7F", "\u2FC6"=>"\u9EA5", "\u2FC7"=>"\u9EBB",
-    "\u2FC8"=>"\u9EC3", "\u2FC9"=>"\u9ECD", "\u2FCA"=>"\u9ED1", "\u2FCB"=>"\u9EF9", "\u2FCC"=>"\u9EFD", "\u2FCD"=>"\u9F0E", "\u2FCE"=>"\u9F13", "\u2FCF"=>"\u9F20",
-    "\u2FD0"=>"\u9F3B", "\u2FD1"=>"\u9F4A", "\u2FD2"=>"\u9F52", "\u2FD3"=>"\u9F8D", "\u2FD4"=>"\u9F9C", "\u2FD5"=>"\u9FA0", "\u3000"=>" ", "\u3036"=>"\u3012",
-    "\u3038"=>"\u5341", "\u3039"=>"\u5344", "\u303A"=>"\u5345", "\u309B"=>" \u3099", "\u309C"=>" \u309A", "\u309F"=>"\u3088\u308A", "\u30FF"=>"\u30B3\u30C8", "\u3131"=>"\u1100",
-    "\u3132"=>"\u1101", "\u3133"=>"\u11AA", "\u3134"=>"\u1102", "\u3135"=>"\u11AC", "\u3136"=>"\u11AD", "\u3137"=>"\u1103", "\u3138"=>"\u1104", "\u3139"=>"\u1105",
-    "\u313A"=>"\u11B0", "\u313B"=>"\u11B1", "\u313C"=>"\u11B2", "\u313D"=>"\u11B3", "\u313E"=>"\u11B4", "\u313F"=>"\u11B5", "\u3140"=>"\u111A", "\u3141"=>"\u1106",
-    "\u3142"=>"\u1107", "\u3143"=>"\u1108", "\u3144"=>"\u1121", "\u3145"=>"\u1109", "\u3146"=>"\u110A", "\u3147"=>"\u110B", "\u3148"=>"\u110C", "\u3149"=>"\u110D",
-    "\u314A"=>"\u110E", "\u314B"=>"\u110F", "\u314C"=>"\u1110", "\u314D"=>"\u1111", "\u314E"=>"\u1112", "\u314F"=>"\u1161", "\u3150"=>"\u1162", "\u3151"=>"\u1163",
-    "\u3152"=>"\u1164", "\u3153"=>"\u1165", "\u3154"=>"\u1166", "\u3155"=>"\u1167", "\u3156"=>"\u1168", "\u3157"=>"\u1169", "\u3158"=>"\u116A", "\u3159"=>"\u116B",
-    "\u315A"=>"\u116C", "\u315B"=>"\u116D", "\u315C"=>"\u116E", "\u315D"=>"\u116F", "\u315E"=>"\u1170", "\u315F"=>"\u1171", "\u3160"=>"\u1172", "\u3161"=>"\u1173",
-    "\u3162"=>"\u1174", "\u3163"=>"\u1175", "\u3164"=>"\u1160", "\u3165"=>"\u1114", "\u3166"=>"\u1115", "\u3167"=>"\u11C7", "\u3168"=>"\u11C8", "\u3169"=>"\u11CC",
-    "\u316A"=>"\u11CE", "\u316B"=>"\u11D3", "\u316C"=>"\u11D7", "\u316D"=>"\u11D9", "\u316E"=>"\u111C", "\u316F"=>"\u11DD", "\u3170"=>"\u11DF", "\u3171"=>"\u111D",
-    "\u3172"=>"\u111E", "\u3173"=>"\u1120", "\u3174"=>"\u1122", "\u3175"=>"\u1123", "\u3176"=>"\u1127", "\u3177"=>"\u1129", "\u3178"=>"\u112B", "\u3179"=>"\u112C",
-    "\u317A"=>"\u112D", "\u317B"=>"\u112E", "\u317C"=>"\u112F", "\u317D"=>"\u1132", "\u317E"=>"\u1136", "\u317F"=>"\u1140", "\u3180"=>"\u1147", "\u3181"=>"\u114C",
-    "\u3182"=>"\u11F1", "\u3183"=>"\u11F2", "\u3184"=>"\u1157", "\u3185"=>"\u1158", "\u3186"=>"\u1159", "\u3187"=>"\u1184", "\u3188"=>"\u1185", "\u3189"=>"\u1188",
-    "\u318A"=>"\u1191", "\u318B"=>"\u1192", "\u318C"=>"\u1194", "\u318D"=>"\u119E", "\u318E"=>"\u11A1", "\u3192"=>"\u4E00", "\u3193"=>"\u4E8C", "\u3194"=>"\u4E09",
-    "\u3195"=>"\u56DB", "\u3196"=>"\u4E0A", "\u3197"=>"\u4E2D", "\u3198"=>"\u4E0B", "\u3199"=>"\u7532", "\u319A"=>"\u4E59", "\u319B"=>"\u4E19", "\u319C"=>"\u4E01",
-    "\u319D"=>"\u5929", "\u319E"=>"\u5730", "\u319F"=>"\u4EBA", "\u3200"=>"(\u1100)", "\u3201"=>"(\u1102)", "\u3202"=>"(\u1103)", "\u3203"=>"(\u1105)", "\u3204"=>"(\u1106)",
-    "\u3205"=>"(\u1107)", "\u3206"=>"(\u1109)", "\u3207"=>"(\u110B)", "\u3208"=>"(\u110C)", "\u3209"=>"(\u110E)", "\u320A"=>"(\u110F)", "\u320B"=>"(\u1110)", "\u320C"=>"(\u1111)",
-    "\u320D"=>"(\u1112)", "\u320E"=>"(\u1100\u1161)", "\u320F"=>"(\u1102\u1161)", "\u3210"=>"(\u1103\u1161)", "\u3211"=>"(\u1105\u1161)", "\u3212"=>"(\u1106\u1161)", "\u3213"=>"(\u1107\u1161)", "\u3214"=>"(\u1109\u1161)",
-    "\u3215"=>"(\u110B\u1161)", "\u3216"=>"(\u110C\u1161)", "\u3217"=>"(\u110E\u1161)", "\u3218"=>"(\u110F\u1161)", "\u3219"=>"(\u1110\u1161)", "\u321A"=>"(\u1111\u1161)", "\u321B"=>"(\u1112\u1161)", "\u321C"=>"(\u110C\u116E)",
-    "\u321D"=>"(\u110B\u1169\u110C\u1165\u11AB)", "\u321E"=>"(\u110B\u1169\u1112\u116E)", "\u3220"=>"(\u4E00)", "\u3221"=>"(\u4E8C)", "\u3222"=>"(\u4E09)", "\u3223"=>"(\u56DB)", "\u3224"=>"(\u4E94)", "\u3225"=>"(\u516D)",
-    "\u3226"=>"(\u4E03)", "\u3227"=>"(\u516B)", "\u3228"=>"(\u4E5D)", "\u3229"=>"(\u5341)", "\u322A"=>"(\u6708)", "\u322B"=>"(\u706B)", "\u322C"=>"(\u6C34)", "\u322D"=>"(\u6728)",
-    "\u322E"=>"(\u91D1)", "\u322F"=>"(\u571F)", "\u3230"=>"(\u65E5)", "\u3231"=>"(\u682A)", "\u3232"=>"(\u6709)", "\u3233"=>"(\u793E)", "\u3234"=>"(\u540D)", "\u3235"=>"(\u7279)",
-    "\u3236"=>"(\u8CA1)", "\u3237"=>"(\u795D)", "\u3238"=>"(\u52B4)", "\u3239"=>"(\u4EE3)", "\u323A"=>"(\u547C)", "\u323B"=>"(\u5B66)", "\u323C"=>"(\u76E3)", "\u323D"=>"(\u4F01)",
-    "\u323E"=>"(\u8CC7)", "\u323F"=>"(\u5354)", "\u3240"=>"(\u796D)", "\u3241"=>"(\u4F11)", "\u3242"=>"(\u81EA)", "\u3243"=>"(\u81F3)", "\u3244"=>"\u554F", "\u3245"=>"\u5E7C",
-    "\u3246"=>"\u6587", "\u3247"=>"\u7B8F", "\u3250"=>"PTE", "\u3251"=>"21", "\u3252"=>"22", "\u3253"=>"23", "\u3254"=>"24", "\u3255"=>"25",
-    "\u3256"=>"26", "\u3257"=>"27", "\u3258"=>"28", "\u3259"=>"29", "\u325A"=>"30", "\u325B"=>"31", "\u325C"=>"32", "\u325D"=>"33",
-    "\u325E"=>"34", "\u325F"=>"35", "\u3260"=>"\u1100", "\u3261"=>"\u1102", "\u3262"=>"\u1103", "\u3263"=>"\u1105", "\u3264"=>"\u1106", "\u3265"=>"\u1107",
-    "\u3266"=>"\u1109", "\u3267"=>"\u110B", "\u3268"=>"\u110C", "\u3269"=>"\u110E", "\u326A"=>"\u110F", "\u326B"=>"\u1110", "\u326C"=>"\u1111", "\u326D"=>"\u1112",
-    "\u326E"=>"\u1100\u1161", "\u326F"=>"\u1102\u1161", "\u3270"=>"\u1103\u1161", "\u3271"=>"\u1105\u1161", "\u3272"=>"\u1106\u1161", "\u3273"=>"\u1107\u1161", "\u3274"=>"\u1109\u1161", "\u3275"=>"\u110B\u1161",
-    "\u3276"=>"\u110C\u1161", "\u3277"=>"\u110E\u1161", "\u3278"=>"\u110F\u1161", "\u3279"=>"\u1110\u1161", "\u327A"=>"\u1111\u1161", "\u327B"=>"\u1112\u1161", "\u327C"=>"\u110E\u1161\u11B7\u1100\u1169", "\u327D"=>"\u110C\u116E\u110B\u1174",
-    "\u327E"=>"\u110B\u116E", "\u3280"=>"\u4E00", "\u3281"=>"\u4E8C", "\u3282"=>"\u4E09", "\u3283"=>"\u56DB", "\u3284"=>"\u4E94", "\u3285"=>"\u516D", "\u3286"=>"\u4E03",
-    "\u3287"=>"\u516B", "\u3288"=>"\u4E5D", "\u3289"=>"\u5341", "\u328A"=>"\u6708", "\u328B"=>"\u706B", "\u328C"=>"\u6C34", "\u328D"=>"\u6728", "\u328E"=>"\u91D1",
-    "\u328F"=>"\u571F", "\u3290"=>"\u65E5", "\u3291"=>"\u682A", "\u3292"=>"\u6709", "\u3293"=>"\u793E", "\u3294"=>"\u540D", "\u3295"=>"\u7279", "\u3296"=>"\u8CA1",
-    "\u3297"=>"\u795D", "\u3298"=>"\u52B4", "\u3299"=>"\u79D8", "\u329A"=>"\u7537", "\u329B"=>"\u5973", "\u329C"=>"\u9069", "\u329D"=>"\u512A", "\u329E"=>"\u5370",
-    "\u329F"=>"\u6CE8", "\u32A0"=>"\u9805", "\u32A1"=>"\u4F11", "\u32A2"=>"\u5199", "\u32A3"=>"\u6B63", "\u32A4"=>"\u4E0A", "\u32A5"=>"\u4E2D", "\u32A6"=>"\u4E0B",
-    "\u32A7"=>"\u5DE6", "\u32A8"=>"\u53F3", "\u32A9"=>"\u533B", "\u32AA"=>"\u5B97", "\u32AB"=>"\u5B66", "\u32AC"=>"\u76E3", "\u32AD"=>"\u4F01", "\u32AE"=>"\u8CC7",
-    "\u32AF"=>"\u5354", "\u32B0"=>"\u591C", "\u32B1"=>"36", "\u32B2"=>"37", "\u32B3"=>"38", "\u32B4"=>"39", "\u32B5"=>"40", "\u32B6"=>"41",
-    "\u32B7"=>"42", "\u32B8"=>"43", "\u32B9"=>"44", "\u32BA"=>"45", "\u32BB"=>"46", "\u32BC"=>"47", "\u32BD"=>"48", "\u32BE"=>"49",
-    "\u32BF"=>"50", "\u32C0"=>"1\u6708", "\u32C1"=>"2\u6708", "\u32C2"=>"3\u6708", "\u32C3"=>"4\u6708", "\u32C4"=>"5\u6708", "\u32C5"=>"6\u6708", "\u32C6"=>"7\u6708",
-    "\u32C7"=>"8\u6708", "\u32C8"=>"9\u6708", "\u32C9"=>"10\u6708", "\u32CA"=>"11\u6708", "\u32CB"=>"12\u6708", "\u32CC"=>"Hg", "\u32CD"=>"erg", "\u32CE"=>"eV",
-    "\u32CF"=>"LTD", "\u32D0"=>"\u30A2", "\u32D1"=>"\u30A4", "\u32D2"=>"\u30A6", "\u32D3"=>"\u30A8", "\u32D4"=>"\u30AA", "\u32D5"=>"\u30AB", "\u32D6"=>"\u30AD",
-    "\u32D7"=>"\u30AF", "\u32D8"=>"\u30B1", "\u32D9"=>"\u30B3", "\u32DA"=>"\u30B5", "\u32DB"=>"\u30B7", "\u32DC"=>"\u30B9", "\u32DD"=>"\u30BB", "\u32DE"=>"\u30BD",
-    "\u32DF"=>"\u30BF", "\u32E0"=>"\u30C1", "\u32E1"=>"\u30C4", "\u32E2"=>"\u30C6", "\u32E3"=>"\u30C8", "\u32E4"=>"\u30CA", "\u32E5"=>"\u30CB", "\u32E6"=>"\u30CC",
-    "\u32E7"=>"\u30CD", "\u32E8"=>"\u30CE", "\u32E9"=>"\u30CF", "\u32EA"=>"\u30D2", "\u32EB"=>"\u30D5", "\u32EC"=>"\u30D8", "\u32ED"=>"\u30DB", "\u32EE"=>"\u30DE",
-    "\u32EF"=>"\u30DF", "\u32F0"=>"\u30E0", "\u32F1"=>"\u30E1", "\u32F2"=>"\u30E2", "\u32F3"=>"\u30E4", "\u32F4"=>"\u30E6", "\u32F5"=>"\u30E8", "\u32F6"=>"\u30E9",
-    "\u32F7"=>"\u30EA", "\u32F8"=>"\u30EB", "\u32F9"=>"\u30EC", "\u32FA"=>"\u30ED", "\u32FB"=>"\u30EF", "\u32FC"=>"\u30F0", "\u32FD"=>"\u30F1", "\u32FE"=>"\u30F2",
-    "\u3300"=>"\u30A2\u30D1\u30FC\u30C8", "\u3301"=>"\u30A2\u30EB\u30D5\u30A1", "\u3302"=>"\u30A2\u30F3\u30DA\u30A2", "\u3303"=>"\u30A2\u30FC\u30EB", "\u3304"=>"\u30A4\u30CB\u30F3\u30B0", "\u3305"=>"\u30A4\u30F3\u30C1", "\u3306"=>"\u30A6\u30A9\u30F3", "\u3307"=>"\u30A8\u30B9\u30AF\u30FC\u30C9",
-    "\u3308"=>"\u30A8\u30FC\u30AB\u30FC", "\u3309"=>"\u30AA\u30F3\u30B9", "\u330A"=>"\u30AA\u30FC\u30E0", "\u330B"=>"\u30AB\u30A4\u30EA", "\u330C"=>"\u30AB\u30E9\u30C3\u30C8", "\u330D"=>"\u30AB\u30ED\u30EA\u30FC", "\u330E"=>"\u30AC\u30ED\u30F3", "\u330F"=>"\u30AC\u30F3\u30DE",
-    "\u3310"=>"\u30AE\u30AC", "\u3311"=>"\u30AE\u30CB\u30FC", "\u3312"=>"\u30AD\u30E5\u30EA\u30FC", "\u3313"=>"\u30AE\u30EB\u30C0\u30FC", "\u3314"=>"\u30AD\u30ED", "\u3315"=>"\u30AD\u30ED\u30B0\u30E9\u30E0", "\u3316"=>"\u30AD\u30ED\u30E1\u30FC\u30C8\u30EB", "\u3317"=>"\u30AD\u30ED\u30EF\u30C3\u30C8",
-    "\u3318"=>"\u30B0\u30E9\u30E0", "\u3319"=>"\u30B0\u30E9\u30E0\u30C8\u30F3", "\u331A"=>"\u30AF\u30EB\u30BC\u30A4\u30ED", "\u331B"=>"\u30AF\u30ED\u30FC\u30CD", "\u331C"=>"\u30B1\u30FC\u30B9", "\u331D"=>"\u30B3\u30EB\u30CA", "\u331E"=>"\u30B3\u30FC\u30DD", "\u331F"=>"\u30B5\u30A4\u30AF\u30EB",
-    "\u3320"=>"\u30B5\u30F3\u30C1\u30FC\u30E0", "\u3321"=>"\u30B7\u30EA\u30F3\u30B0", "\u3322"=>"\u30BB\u30F3\u30C1", "\u3323"=>"\u30BB\u30F3\u30C8", "\u3324"=>"\u30C0\u30FC\u30B9", "\u3325"=>"\u30C7\u30B7", "\u3326"=>"\u30C9\u30EB", "\u3327"=>"\u30C8\u30F3",
-    "\u3328"=>"\u30CA\u30CE", "\u3329"=>"\u30CE\u30C3\u30C8", "\u332A"=>"\u30CF\u30A4\u30C4", "\u332B"=>"\u30D1\u30FC\u30BB\u30F3\u30C8", "\u332C"=>"\u30D1\u30FC\u30C4", "\u332D"=>"\u30D0\u30FC\u30EC\u30EB", "\u332E"=>"\u30D4\u30A2\u30B9\u30C8\u30EB", "\u332F"=>"\u30D4\u30AF\u30EB",
-    "\u3330"=>"\u30D4\u30B3", "\u3331"=>"\u30D3\u30EB", "\u3332"=>"\u30D5\u30A1\u30E9\u30C3\u30C9", "\u3333"=>"\u30D5\u30A3\u30FC\u30C8", "\u3334"=>"\u30D6\u30C3\u30B7\u30A7\u30EB", "\u3335"=>"\u30D5\u30E9\u30F3", "\u3336"=>"\u30D8\u30AF\u30BF\u30FC\u30EB", "\u3337"=>"\u30DA\u30BD",
-    "\u3338"=>"\u30DA\u30CB\u30D2", "\u3339"=>"\u30D8\u30EB\u30C4", "\u333A"=>"\u30DA\u30F3\u30B9", "\u333B"=>"\u30DA\u30FC\u30B8", "\u333C"=>"\u30D9\u30FC\u30BF", "\u333D"=>"\u30DD\u30A4\u30F3\u30C8", "\u333E"=>"\u30DC\u30EB\u30C8", "\u333F"=>"\u30DB\u30F3",
-    "\u3340"=>"\u30DD\u30F3\u30C9", "\u3341"=>"\u30DB\u30FC\u30EB", "\u3342"=>"\u30DB\u30FC\u30F3", "\u3343"=>"\u30DE\u30A4\u30AF\u30ED", "\u3344"=>"\u30DE\u30A4\u30EB", "\u3345"=>"\u30DE\u30C3\u30CF", "\u3346"=>"\u30DE\u30EB\u30AF", "\u3347"=>"\u30DE\u30F3\u30B7\u30E7\u30F3",
-    "\u3348"=>"\u30DF\u30AF\u30ED\u30F3", "\u3349"=>"\u30DF\u30EA", "\u334A"=>"\u30DF\u30EA\u30D0\u30FC\u30EB", "\u334B"=>"\u30E1\u30AC", "\u334C"=>"\u30E1\u30AC\u30C8\u30F3", "\u334D"=>"\u30E1\u30FC\u30C8\u30EB", "\u334E"=>"\u30E4\u30FC\u30C9", "\u334F"=>"\u30E4\u30FC\u30EB",
-    "\u3350"=>"\u30E6\u30A2\u30F3", "\u3351"=>"\u30EA\u30C3\u30C8\u30EB", "\u3352"=>"\u30EA\u30E9", "\u3353"=>"\u30EB\u30D4\u30FC", "\u3354"=>"\u30EB\u30FC\u30D6\u30EB", "\u3355"=>"\u30EC\u30E0", "\u3356"=>"\u30EC\u30F3\u30C8\u30B2\u30F3", "\u3357"=>"\u30EF\u30C3\u30C8",
-    "\u3358"=>"0\u70B9", "\u3359"=>"1\u70B9", "\u335A"=>"2\u70B9", "\u335B"=>"3\u70B9", "\u335C"=>"4\u70B9", "\u335D"=>"5\u70B9", "\u335E"=>"6\u70B9", "\u335F"=>"7\u70B9",
-    "\u3360"=>"8\u70B9", "\u3361"=>"9\u70B9", "\u3362"=>"10\u70B9", "\u3363"=>"11\u70B9", "\u3364"=>"12\u70B9", "\u3365"=>"13\u70B9", "\u3366"=>"14\u70B9", "\u3367"=>"15\u70B9",
-    "\u3368"=>"16\u70B9", "\u3369"=>"17\u70B9", "\u336A"=>"18\u70B9", "\u336B"=>"19\u70B9", "\u336C"=>"20\u70B9", "\u336D"=>"21\u70B9", "\u336E"=>"22\u70B9", "\u336F"=>"23\u70B9",
-    "\u3370"=>"24\u70B9", "\u3371"=>"hPa", "\u3372"=>"da", "\u3373"=>"AU", "\u3374"=>"bar", "\u3375"=>"oV", "\u3376"=>"pc", "\u3377"=>"dm",
-    "\u3378"=>"dm2", "\u3379"=>"dm3", "\u337A"=>"IU", "\u337B"=>"\u5E73\u6210", "\u337C"=>"\u662D\u548C", "\u337D"=>"\u5927\u6B63", "\u337E"=>"\u660E\u6CBB", "\u337F"=>"\u682A\u5F0F\u4F1A\u793E",
-    "\u3380"=>"pA", "\u3381"=>"nA", "\u3382"=>"\u03BCA", "\u3383"=>"mA", "\u3384"=>"kA", "\u3385"=>"KB", "\u3386"=>"MB", "\u3387"=>"GB",
-    "\u3388"=>"cal", "\u3389"=>"kcal", "\u338A"=>"pF", "\u338B"=>"nF", "\u338C"=>"\u03BCF", "\u338D"=>"\u03BCg", "\u338E"=>"mg", "\u338F"=>"kg",
-    "\u3390"=>"Hz", "\u3391"=>"kHz", "\u3392"=>"MHz", "\u3393"=>"GHz", "\u3394"=>"THz", "\u3395"=>"\u03BCl", "\u3396"=>"ml", "\u3397"=>"dl",
-    "\u3398"=>"kl", "\u3399"=>"fm", "\u339A"=>"nm", "\u339B"=>"\u03BCm", "\u339C"=>"mm", "\u339D"=>"cm", "\u339E"=>"km", "\u339F"=>"mm2",
-    "\u33A0"=>"cm2", "\u33A1"=>"m2", "\u33A2"=>"km2", "\u33A3"=>"mm3", "\u33A4"=>"cm3", "\u33A5"=>"m3", "\u33A6"=>"km3", "\u33A7"=>"m\u2215s",
-    "\u33A8"=>"m\u2215s2", "\u33A9"=>"Pa", "\u33AA"=>"kPa", "\u33AB"=>"MPa", "\u33AC"=>"GPa", "\u33AD"=>"rad", "\u33AE"=>"rad\u2215s", "\u33AF"=>"rad\u2215s2",
-    "\u33B0"=>"ps", "\u33B1"=>"ns", "\u33B2"=>"\u03BCs", "\u33B3"=>"ms", "\u33B4"=>"pV", "\u33B5"=>"nV", "\u33B6"=>"\u03BCV", "\u33B7"=>"mV",
-    "\u33B8"=>"kV", "\u33B9"=>"MV", "\u33BA"=>"pW", "\u33BB"=>"nW", "\u33BC"=>"\u03BCW", "\u33BD"=>"mW", "\u33BE"=>"kW", "\u33BF"=>"MW",
-    "\u33C0"=>"k\u03A9", "\u33C1"=>"M\u03A9", "\u33C2"=>"a.m.", "\u33C3"=>"Bq", "\u33C4"=>"cc", "\u33C5"=>"cd", "\u33C6"=>"C\u2215kg", "\u33C7"=>"Co.",
-    "\u33C8"=>"dB", "\u33C9"=>"Gy", "\u33CA"=>"ha", "\u33CB"=>"HP", "\u33CC"=>"in", "\u33CD"=>"KK", "\u33CE"=>"KM", "\u33CF"=>"kt",
-    "\u33D0"=>"lm", "\u33D1"=>"ln", "\u33D2"=>"log", "\u33D3"=>"lx", "\u33D4"=>"mb", "\u33D5"=>"mil", "\u33D6"=>"mol", "\u33D7"=>"PH",
-    "\u33D8"=>"p.m.", "\u33D9"=>"PPM", "\u33DA"=>"PR", "\u33DB"=>"sr", "\u33DC"=>"Sv", "\u33DD"=>"Wb", "\u33DE"=>"V\u2215m", "\u33DF"=>"A\u2215m",
-    "\u33E0"=>"1\u65E5", "\u33E1"=>"2\u65E5", "\u33E2"=>"3\u65E5", "\u33E3"=>"4\u65E5", "\u33E4"=>"5\u65E5", "\u33E5"=>"6\u65E5", "\u33E6"=>"7\u65E5", "\u33E7"=>"8\u65E5",
-    "\u33E8"=>"9\u65E5", "\u33E9"=>"10\u65E5", "\u33EA"=>"11\u65E5", "\u33EB"=>"12\u65E5", "\u33EC"=>"13\u65E5", "\u33ED"=>"14\u65E5", "\u33EE"=>"15\u65E5", "\u33EF"=>"16\u65E5",
-    "\u33F0"=>"17\u65E5", "\u33F1"=>"18\u65E5", "\u33F2"=>"19\u65E5", "\u33F3"=>"20\u65E5", "\u33F4"=>"21\u65E5", "\u33F5"=>"22\u65E5", "\u33F6"=>"23\u65E5", "\u33F7"=>"24\u65E5",
-    "\u33F8"=>"25\u65E5", "\u33F9"=>"26\u65E5", "\u33FA"=>"27\u65E5", "\u33FB"=>"28\u65E5", "\u33FC"=>"29\u65E5", "\u33FD"=>"30\u65E5", "\u33FE"=>"31\u65E5", "\u33FF"=>"gal",
-    "\uA69C"=>"\u044A", "\uA69D"=>"\u044C", "\uA770"=>"\uA76F", "\uA7F8"=>"\u0126", "\uA7F9"=>"\u0153", "\uAB5C"=>"\uA727", "\uAB5D"=>"\uAB37", "\uAB5E"=>"\u026B",
-    "\uAB5F"=>"\uAB52", "\uFB00"=>"ff", "\uFB01"=>"fi", "\uFB02"=>"fl", "\uFB03"=>"ffi", "\uFB04"=>"ffl", "\uFB05"=>"st", "\uFB06"=>"st",
-    "\uFB13"=>"\u0574\u0576", "\uFB14"=>"\u0574\u0565", "\uFB15"=>"\u0574\u056B", "\uFB16"=>"\u057E\u0576", "\uFB17"=>"\u0574\u056D", "\uFB20"=>"\u05E2", "\uFB21"=>"\u05D0", "\uFB22"=>"\u05D3",
-    "\uFB23"=>"\u05D4", "\uFB24"=>"\u05DB", "\uFB25"=>"\u05DC", "\uFB26"=>"\u05DD", "\uFB27"=>"\u05E8", "\uFB28"=>"\u05EA", "\uFB29"=>"+", "\uFB4F"=>"\u05D0\u05DC",
-    "\uFB50"=>"\u0671", "\uFB51"=>"\u0671", "\uFB52"=>"\u067B", "\uFB53"=>"\u067B", "\uFB54"=>"\u067B", "\uFB55"=>"\u067B", "\uFB56"=>"\u067E", "\uFB57"=>"\u067E",
-    "\uFB58"=>"\u067E", "\uFB59"=>"\u067E", "\uFB5A"=>"\u0680", "\uFB5B"=>"\u0680", "\uFB5C"=>"\u0680", "\uFB5D"=>"\u0680", "\uFB5E"=>"\u067A", "\uFB5F"=>"\u067A",
-    "\uFB60"=>"\u067A", "\uFB61"=>"\u067A", "\uFB62"=>"\u067F", "\uFB63"=>"\u067F", "\uFB64"=>"\u067F", "\uFB65"=>"\u067F", "\uFB66"=>"\u0679", "\uFB67"=>"\u0679",
-    "\uFB68"=>"\u0679", "\uFB69"=>"\u0679", "\uFB6A"=>"\u06A4", "\uFB6B"=>"\u06A4", "\uFB6C"=>"\u06A4", "\uFB6D"=>"\u06A4", "\uFB6E"=>"\u06A6", "\uFB6F"=>"\u06A6",
-    "\uFB70"=>"\u06A6", "\uFB71"=>"\u06A6", "\uFB72"=>"\u0684", "\uFB73"=>"\u0684", "\uFB74"=>"\u0684", "\uFB75"=>"\u0684", "\uFB76"=>"\u0683", "\uFB77"=>"\u0683",
-    "\uFB78"=>"\u0683", "\uFB79"=>"\u0683", "\uFB7A"=>"\u0686", "\uFB7B"=>"\u0686", "\uFB7C"=>"\u0686", "\uFB7D"=>"\u0686", "\uFB7E"=>"\u0687", "\uFB7F"=>"\u0687",
-    "\uFB80"=>"\u0687", "\uFB81"=>"\u0687", "\uFB82"=>"\u068D", "\uFB83"=>"\u068D", "\uFB84"=>"\u068C", "\uFB85"=>"\u068C", "\uFB86"=>"\u068E", "\uFB87"=>"\u068E",
-    "\uFB88"=>"\u0688", "\uFB89"=>"\u0688", "\uFB8A"=>"\u0698", "\uFB8B"=>"\u0698", "\uFB8C"=>"\u0691", "\uFB8D"=>"\u0691", "\uFB8E"=>"\u06A9", "\uFB8F"=>"\u06A9",
-    "\uFB90"=>"\u06A9", "\uFB91"=>"\u06A9", "\uFB92"=>"\u06AF", "\uFB93"=>"\u06AF", "\uFB94"=>"\u06AF", "\uFB95"=>"\u06AF", "\uFB96"=>"\u06B3", "\uFB97"=>"\u06B3",
-    "\uFB98"=>"\u06B3", "\uFB99"=>"\u06B3", "\uFB9A"=>"\u06B1", "\uFB9B"=>"\u06B1", "\uFB9C"=>"\u06B1", "\uFB9D"=>"\u06B1", "\uFB9E"=>"\u06BA", "\uFB9F"=>"\u06BA",
-    "\uFBA0"=>"\u06BB", "\uFBA1"=>"\u06BB", "\uFBA2"=>"\u06BB", "\uFBA3"=>"\u06BB", "\uFBA4"=>"\u06C0", "\uFBA5"=>"\u06C0", "\uFBA6"=>"\u06C1", "\uFBA7"=>"\u06C1",
-    "\uFBA8"=>"\u06C1", "\uFBA9"=>"\u06C1", "\uFBAA"=>"\u06BE", "\uFBAB"=>"\u06BE", "\uFBAC"=>"\u06BE", "\uFBAD"=>"\u06BE", "\uFBAE"=>"\u06D2", "\uFBAF"=>"\u06D2",
-    "\uFBB0"=>"\u06D3", "\uFBB1"=>"\u06D3", "\uFBD3"=>"\u06AD", "\uFBD4"=>"\u06AD", "\uFBD5"=>"\u06AD", "\uFBD6"=>"\u06AD", "\uFBD7"=>"\u06C7", "\uFBD8"=>"\u06C7",
-    "\uFBD9"=>"\u06C6", "\uFBDA"=>"\u06C6", "\uFBDB"=>"\u06C8", "\uFBDC"=>"\u06C8", "\uFBDD"=>"\u06C7\u0674", "\uFBDE"=>"\u06CB", "\uFBDF"=>"\u06CB", "\uFBE0"=>"\u06C5",
-    "\uFBE1"=>"\u06C5", "\uFBE2"=>"\u06C9", "\uFBE3"=>"\u06C9", "\uFBE4"=>"\u06D0", "\uFBE5"=>"\u06D0", "\uFBE6"=>"\u06D0", "\uFBE7"=>"\u06D0", "\uFBE8"=>"\u0649",
-    "\uFBE9"=>"\u0649", "\uFBEA"=>"\u0626\u0627", "\uFBEB"=>"\u0626\u0627", "\uFBEC"=>"\u0626\u06D5", "\uFBED"=>"\u0626\u06D5", "\uFBEE"=>"\u0626\u0648", "\uFBEF"=>"\u0626\u0648", "\uFBF0"=>"\u0626\u06C7",
-    "\uFBF1"=>"\u0626\u06C7", "\uFBF2"=>"\u0626\u06C6", "\uFBF3"=>"\u0626\u06C6", "\uFBF4"=>"\u0626\u06C8", "\uFBF5"=>"\u0626\u06C8", "\uFBF6"=>"\u0626\u06D0", "\uFBF7"=>"\u0626\u06D0", "\uFBF8"=>"\u0626\u06D0",
-    "\uFBF9"=>"\u0626\u0649", "\uFBFA"=>"\u0626\u0649", "\uFBFB"=>"\u0626\u0649", "\uFBFC"=>"\u06CC", "\uFBFD"=>"\u06CC", "\uFBFE"=>"\u06CC", "\uFBFF"=>"\u06CC", "\uFC00"=>"\u0626\u062C",
-    "\uFC01"=>"\u0626\u062D", "\uFC02"=>"\u0626\u0645", "\uFC03"=>"\u0626\u0649", "\uFC04"=>"\u0626\u064A", "\uFC05"=>"\u0628\u062C", "\uFC06"=>"\u0628\u062D", "\uFC07"=>"\u0628\u062E", "\uFC08"=>"\u0628\u0645",
-    "\uFC09"=>"\u0628\u0649", "\uFC0A"=>"\u0628\u064A", "\uFC0B"=>"\u062A\u062C", "\uFC0C"=>"\u062A\u062D", "\uFC0D"=>"\u062A\u062E", "\uFC0E"=>"\u062A\u0645", "\uFC0F"=>"\u062A\u0649", "\uFC10"=>"\u062A\u064A",
-    "\uFC11"=>"\u062B\u062C", "\uFC12"=>"\u062B\u0645", "\uFC13"=>"\u062B\u0649", "\uFC14"=>"\u062B\u064A", "\uFC15"=>"\u062C\u062D", "\uFC16"=>"\u062C\u0645", "\uFC17"=>"\u062D\u062C", "\uFC18"=>"\u062D\u0645",
-    "\uFC19"=>"\u062E\u062C", "\uFC1A"=>"\u062E\u062D", "\uFC1B"=>"\u062E\u0645", "\uFC1C"=>"\u0633\u062C", "\uFC1D"=>"\u0633\u062D", "\uFC1E"=>"\u0633\u062E", "\uFC1F"=>"\u0633\u0645", "\uFC20"=>"\u0635\u062D",
-    "\uFC21"=>"\u0635\u0645", "\uFC22"=>"\u0636\u062C", "\uFC23"=>"\u0636\u062D", "\uFC24"=>"\u0636\u062E", "\uFC25"=>"\u0636\u0645", "\uFC26"=>"\u0637\u062D", "\uFC27"=>"\u0637\u0645", "\uFC28"=>"\u0638\u0645",
-    "\uFC29"=>"\u0639\u062C", "\uFC2A"=>"\u0639\u0645", "\uFC2B"=>"\u063A\u062C", "\uFC2C"=>"\u063A\u0645", "\uFC2D"=>"\u0641\u062C", "\uFC2E"=>"\u0641\u062D", "\uFC2F"=>"\u0641\u062E", "\uFC30"=>"\u0641\u0645",
-    "\uFC31"=>"\u0641\u0649", "\uFC32"=>"\u0641\u064A", "\uFC33"=>"\u0642\u062D", "\uFC34"=>"\u0642\u0645", "\uFC35"=>"\u0642\u0649", "\uFC36"=>"\u0642\u064A", "\uFC37"=>"\u0643\u0627", "\uFC38"=>"\u0643\u062C",
-    "\uFC39"=>"\u0643\u062D", "\uFC3A"=>"\u0643\u062E", "\uFC3B"=>"\u0643\u0644", "\uFC3C"=>"\u0643\u0645", "\uFC3D"=>"\u0643\u0649", "\uFC3E"=>"\u0643\u064A", "\uFC3F"=>"\u0644\u062C", "\uFC40"=>"\u0644\u062D",
-    "\uFC41"=>"\u0644\u062E", "\uFC42"=>"\u0644\u0645", "\uFC43"=>"\u0644\u0649", "\uFC44"=>"\u0644\u064A", "\uFC45"=>"\u0645\u062C", "\uFC46"=>"\u0645\u062D", "\uFC47"=>"\u0645\u062E", "\uFC48"=>"\u0645\u0645",
-    "\uFC49"=>"\u0645\u0649", "\uFC4A"=>"\u0645\u064A", "\uFC4B"=>"\u0646\u062C", "\uFC4C"=>"\u0646\u062D", "\uFC4D"=>"\u0646\u062E", "\uFC4E"=>"\u0646\u0645", "\uFC4F"=>"\u0646\u0649", "\uFC50"=>"\u0646\u064A",
-    "\uFC51"=>"\u0647\u062C", "\uFC52"=>"\u0647\u0645", "\uFC53"=>"\u0647\u0649", "\uFC54"=>"\u0647\u064A", "\uFC55"=>"\u064A\u062C", "\uFC56"=>"\u064A\u062D", "\uFC57"=>"\u064A\u062E", "\uFC58"=>"\u064A\u0645",
-    "\uFC59"=>"\u064A\u0649", "\uFC5A"=>"\u064A\u064A", "\uFC5B"=>"\u0630\u0670", "\uFC5C"=>"\u0631\u0670", "\uFC5D"=>"\u0649\u0670", "\uFC5E"=>" \u064C\u0651", "\uFC5F"=>" \u064D\u0651", "\uFC60"=>" \u064E\u0651",
-    "\uFC61"=>" \u064F\u0651", "\uFC62"=>" \u0650\u0651", "\uFC63"=>" \u0651\u0670", "\uFC64"=>"\u0626\u0631", "\uFC65"=>"\u0626\u0632", "\uFC66"=>"\u0626\u0645", "\uFC67"=>"\u0626\u0646", "\uFC68"=>"\u0626\u0649",
-    "\uFC69"=>"\u0626\u064A", "\uFC6A"=>"\u0628\u0631", "\uFC6B"=>"\u0628\u0632", "\uFC6C"=>"\u0628\u0645", "\uFC6D"=>"\u0628\u0646", "\uFC6E"=>"\u0628\u0649", "\uFC6F"=>"\u0628\u064A", "\uFC70"=>"\u062A\u0631",
-    "\uFC71"=>"\u062A\u0632", "\uFC72"=>"\u062A\u0645", "\uFC73"=>"\u062A\u0646", "\uFC74"=>"\u062A\u0649", "\uFC75"=>"\u062A\u064A", "\uFC76"=>"\u062B\u0631", "\uFC77"=>"\u062B\u0632", "\uFC78"=>"\u062B\u0645",
-    "\uFC79"=>"\u062B\u0646", "\uFC7A"=>"\u062B\u0649", "\uFC7B"=>"\u062B\u064A", "\uFC7C"=>"\u0641\u0649", "\uFC7D"=>"\u0641\u064A", "\uFC7E"=>"\u0642\u0649", "\uFC7F"=>"\u0642\u064A", "\uFC80"=>"\u0643\u0627",
-    "\uFC81"=>"\u0643\u0644", "\uFC82"=>"\u0643\u0645", "\uFC83"=>"\u0643\u0649", "\uFC84"=>"\u0643\u064A", "\uFC85"=>"\u0644\u0645", "\uFC86"=>"\u0644\u0649", "\uFC87"=>"\u0644\u064A", "\uFC88"=>"\u0645\u0627",
-    "\uFC89"=>"\u0645\u0645", "\uFC8A"=>"\u0646\u0631", "\uFC8B"=>"\u0646\u0632", "\uFC8C"=>"\u0646\u0645", "\uFC8D"=>"\u0646\u0646", "\uFC8E"=>"\u0646\u0649", "\uFC8F"=>"\u0646\u064A", "\uFC90"=>"\u0649\u0670",
-    "\uFC91"=>"\u064A\u0631", "\uFC92"=>"\u064A\u0632", "\uFC93"=>"\u064A\u0645", "\uFC94"=>"\u064A\u0646", "\uFC95"=>"\u064A\u0649", "\uFC96"=>"\u064A\u064A", "\uFC97"=>"\u0626\u062C", "\uFC98"=>"\u0626\u062D",
-    "\uFC99"=>"\u0626\u062E", "\uFC9A"=>"\u0626\u0645", "\uFC9B"=>"\u0626\u0647", "\uFC9C"=>"\u0628\u062C", "\uFC9D"=>"\u0628\u062D", "\uFC9E"=>"\u0628\u062E", "\uFC9F"=>"\u0628\u0645", "\uFCA0"=>"\u0628\u0647",
-    "\uFCA1"=>"\u062A\u062C", "\uFCA2"=>"\u062A\u062D", "\uFCA3"=>"\u062A\u062E", "\uFCA4"=>"\u062A\u0645", "\uFCA5"=>"\u062A\u0647", "\uFCA6"=>"\u062B\u0645", "\uFCA7"=>"\u062C\u062D", "\uFCA8"=>"\u062C\u0645",
-    "\uFCA9"=>"\u062D\u062C", "\uFCAA"=>"\u062D\u0645", "\uFCAB"=>"\u062E\u062C", "\uFCAC"=>"\u062E\u0645", "\uFCAD"=>"\u0633\u062C", "\uFCAE"=>"\u0633\u062D", "\uFCAF"=>"\u0633\u062E", "\uFCB0"=>"\u0633\u0645",
-    "\uFCB1"=>"\u0635\u062D", "\uFCB2"=>"\u0635\u062E", "\uFCB3"=>"\u0635\u0645", "\uFCB4"=>"\u0636\u062C", "\uFCB5"=>"\u0636\u062D", "\uFCB6"=>"\u0636\u062E", "\uFCB7"=>"\u0636\u0645", "\uFCB8"=>"\u0637\u062D",
-    "\uFCB9"=>"\u0638\u0645", "\uFCBA"=>"\u0639\u062C", "\uFCBB"=>"\u0639\u0645", "\uFCBC"=>"\u063A\u062C", "\uFCBD"=>"\u063A\u0645", "\uFCBE"=>"\u0641\u062C", "\uFCBF"=>"\u0641\u062D", "\uFCC0"=>"\u0641\u062E",
-    "\uFCC1"=>"\u0641\u0645", "\uFCC2"=>"\u0642\u062D", "\uFCC3"=>"\u0642\u0645", "\uFCC4"=>"\u0643\u062C", "\uFCC5"=>"\u0643\u062D", "\uFCC6"=>"\u0643\u062E", "\uFCC7"=>"\u0643\u0644", "\uFCC8"=>"\u0643\u0645",
-    "\uFCC9"=>"\u0644\u062C", "\uFCCA"=>"\u0644\u062D", "\uFCCB"=>"\u0644\u062E", "\uFCCC"=>"\u0644\u0645", "\uFCCD"=>"\u0644\u0647", "\uFCCE"=>"\u0645\u062C", "\uFCCF"=>"\u0645\u062D", "\uFCD0"=>"\u0645\u062E",
-    "\uFCD1"=>"\u0645\u0645", "\uFCD2"=>"\u0646\u062C", "\uFCD3"=>"\u0646\u062D", "\uFCD4"=>"\u0646\u062E", "\uFCD5"=>"\u0646\u0645", "\uFCD6"=>"\u0646\u0647", "\uFCD7"=>"\u0647\u062C", "\uFCD8"=>"\u0647\u0645",
-    "\uFCD9"=>"\u0647\u0670", "\uFCDA"=>"\u064A\u062C", "\uFCDB"=>"\u064A\u062D", "\uFCDC"=>"\u064A\u062E", "\uFCDD"=>"\u064A\u0645", "\uFCDE"=>"\u064A\u0647", "\uFCDF"=>"\u0626\u0645", "\uFCE0"=>"\u0626\u0647",
-    "\uFCE1"=>"\u0628\u0645", "\uFCE2"=>"\u0628\u0647", "\uFCE3"=>"\u062A\u0645", "\uFCE4"=>"\u062A\u0647", "\uFCE5"=>"\u062B\u0645", "\uFCE6"=>"\u062B\u0647", "\uFCE7"=>"\u0633\u0645", "\uFCE8"=>"\u0633\u0647",
-    "\uFCE9"=>"\u0634\u0645", "\uFCEA"=>"\u0634\u0647", "\uFCEB"=>"\u0643\u0644", "\uFCEC"=>"\u0643\u0645", "\uFCED"=>"\u0644\u0645", "\uFCEE"=>"\u0646\u0645", "\uFCEF"=>"\u0646\u0647", "\uFCF0"=>"\u064A\u0645",
-    "\uFCF1"=>"\u064A\u0647", "\uFCF2"=>"\u0640\u064E\u0651", "\uFCF3"=>"\u0640\u064F\u0651", "\uFCF4"=>"\u0640\u0650\u0651", "\uFCF5"=>"\u0637\u0649", "\uFCF6"=>"\u0637\u064A", "\uFCF7"=>"\u0639\u0649", "\uFCF8"=>"\u0639\u064A",
-    "\uFCF9"=>"\u063A\u0649", "\uFCFA"=>"\u063A\u064A", "\uFCFB"=>"\u0633\u0649", "\uFCFC"=>"\u0633\u064A", "\uFCFD"=>"\u0634\u0649", "\uFCFE"=>"\u0634\u064A", "\uFCFF"=>"\u062D\u0649", "\uFD00"=>"\u062D\u064A",
-    "\uFD01"=>"\u062C\u0649", "\uFD02"=>"\u062C\u064A", "\uFD03"=>"\u062E\u0649", "\uFD04"=>"\u062E\u064A", "\uFD05"=>"\u0635\u0649", "\uFD06"=>"\u0635\u064A", "\uFD07"=>"\u0636\u0649", "\uFD08"=>"\u0636\u064A",
-    "\uFD09"=>"\u0634\u062C", "\uFD0A"=>"\u0634\u062D", "\uFD0B"=>"\u0634\u062E", "\uFD0C"=>"\u0634\u0645", "\uFD0D"=>"\u0634\u0631", "\uFD0E"=>"\u0633\u0631", "\uFD0F"=>"\u0635\u0631", "\uFD10"=>"\u0636\u0631",
-    "\uFD11"=>"\u0637\u0649", "\uFD12"=>"\u0637\u064A", "\uFD13"=>"\u0639\u0649", "\uFD14"=>"\u0639\u064A", "\uFD15"=>"\u063A\u0649", "\uFD16"=>"\u063A\u064A", "\uFD17"=>"\u0633\u0649", "\uFD18"=>"\u0633\u064A",
-    "\uFD19"=>"\u0634\u0649", "\uFD1A"=>"\u0634\u064A", "\uFD1B"=>"\u062D\u0649", "\uFD1C"=>"\u062D\u064A", "\uFD1D"=>"\u062C\u0649", "\uFD1E"=>"\u062C\u064A", "\uFD1F"=>"\u062E\u0649", "\uFD20"=>"\u062E\u064A",
-    "\uFD21"=>"\u0635\u0649", "\uFD22"=>"\u0635\u064A", "\uFD23"=>"\u0636\u0649", "\uFD24"=>"\u0636\u064A", "\uFD25"=>"\u0634\u062C", "\uFD26"=>"\u0634\u062D", "\uFD27"=>"\u0634\u062E", "\uFD28"=>"\u0634\u0645",
-    "\uFD29"=>"\u0634\u0631", "\uFD2A"=>"\u0633\u0631", "\uFD2B"=>"\u0635\u0631", "\uFD2C"=>"\u0636\u0631", "\uFD2D"=>"\u0634\u062C", "\uFD2E"=>"\u0634\u062D", "\uFD2F"=>"\u0634\u062E", "\uFD30"=>"\u0634\u0645",
-    "\uFD31"=>"\u0633\u0647", "\uFD32"=>"\u0634\u0647", "\uFD33"=>"\u0637\u0645", "\uFD34"=>"\u0633\u062C", "\uFD35"=>"\u0633\u062D", "\uFD36"=>"\u0633\u062E", "\uFD37"=>"\u0634\u062C", "\uFD38"=>"\u0634\u062D",
-    "\uFD39"=>"\u0634\u062E", "\uFD3A"=>"\u0637\u0645", "\uFD3B"=>"\u0638\u0645", "\uFD3C"=>"\u0627\u064B", "\uFD3D"=>"\u0627\u064B", "\uFD50"=>"\u062A\u062C\u0645", "\uFD51"=>"\u062A\u062D\u062C", "\uFD52"=>"\u062A\u062D\u062C",
-    "\uFD53"=>"\u062A\u062D\u0645", "\uFD54"=>"\u062A\u062E\u0645", "\uFD55"=>"\u062A\u0645\u062C", "\uFD56"=>"\u062A\u0645\u062D", "\uFD57"=>"\u062A\u0645\u062E", "\uFD58"=>"\u062C\u0645\u062D", "\uFD59"=>"\u062C\u0645\u062D", "\uFD5A"=>"\u062D\u0645\u064A",
-    "\uFD5B"=>"\u062D\u0645\u0649", "\uFD5C"=>"\u0633\u062D\u062C", "\uFD5D"=>"\u0633\u062C\u062D", "\uFD5E"=>"\u0633\u062C\u0649", "\uFD5F"=>"\u0633\u0645\u062D", "\uFD60"=>"\u0633\u0645\u062D", "\uFD61"=>"\u0633\u0645\u062C", "\uFD62"=>"\u0633\u0645\u0645",
-    "\uFD63"=>"\u0633\u0645\u0645", "\uFD64"=>"\u0635\u062D\u062D", "\uFD65"=>"\u0635\u062D\u062D", "\uFD66"=>"\u0635\u0645\u0645", "\uFD67"=>"\u0634\u062D\u0645", "\uFD68"=>"\u0634\u062D\u0645", "\uFD69"=>"\u0634\u062C\u064A", "\uFD6A"=>"\u0634\u0645\u062E",
-    "\uFD6B"=>"\u0634\u0645\u062E", "\uFD6C"=>"\u0634\u0645\u0645", "\uFD6D"=>"\u0634\u0645\u0645", "\uFD6E"=>"\u0636\u062D\u0649", "\uFD6F"=>"\u0636\u062E\u0645", "\uFD70"=>"\u0636\u062E\u0645", "\uFD71"=>"\u0637\u0645\u062D", "\uFD72"=>"\u0637\u0645\u062D",
-    "\uFD73"=>"\u0637\u0645\u0645", "\uFD74"=>"\u0637\u0645\u064A", "\uFD75"=>"\u0639\u062C\u0645", "\uFD76"=>"\u0639\u0645\u0645", "\uFD77"=>"\u0639\u0645\u0645", "\uFD78"=>"\u0639\u0645\u0649", "\uFD79"=>"\u063A\u0645\u0645", "\uFD7A"=>"\u063A\u0645\u064A",
-    "\uFD7B"=>"\u063A\u0645\u0649", "\uFD7C"=>"\u0641\u062E\u0645", "\uFD7D"=>"\u0641\u062E\u0645", "\uFD7E"=>"\u0642\u0645\u062D", "\uFD7F"=>"\u0642\u0645\u0645", "\uFD80"=>"\u0644\u062D\u0645", "\uFD81"=>"\u0644\u062D\u064A", "\uFD82"=>"\u0644\u062D\u0649",
-    "\uFD83"=>"\u0644\u062C\u062C", "\uFD84"=>"\u0644\u062C\u062C", "\uFD85"=>"\u0644\u062E\u0645", "\uFD86"=>"\u0644\u062E\u0645", "\uFD87"=>"\u0644\u0645\u062D", "\uFD88"=>"\u0644\u0645\u062D", "\uFD89"=>"\u0645\u062D\u062C", "\uFD8A"=>"\u0645\u062D\u0645",
-    "\uFD8B"=>"\u0645\u062D\u064A", "\uFD8C"=>"\u0645\u062C\u062D", "\uFD8D"=>"\u0645\u062C\u0645", "\uFD8E"=>"\u0645\u062E\u062C", "\uFD8F"=>"\u0645\u062E\u0645", "\uFD92"=>"\u0645\u062C\u062E", "\uFD93"=>"\u0647\u0645\u062C", "\uFD94"=>"\u0647\u0645\u0645",
-    "\uFD95"=>"\u0646\u062D\u0645", "\uFD96"=>"\u0646\u062D\u0649", "\uFD97"=>"\u0646\u062C\u0645", "\uFD98"=>"\u0646\u062C\u0645", "\uFD99"=>"\u0646\u062C\u0649", "\uFD9A"=>"\u0646\u0645\u064A", "\uFD9B"=>"\u0646\u0645\u0649", "\uFD9C"=>"\u064A\u0645\u0645",
-    "\uFD9D"=>"\u064A\u0645\u0645", "\uFD9E"=>"\u0628\u062E\u064A", "\uFD9F"=>"\u062A\u062C\u064A", "\uFDA0"=>"\u062A\u062C\u0649", "\uFDA1"=>"\u062A\u062E\u064A", "\uFDA2"=>"\u062A\u062E\u0649", "\uFDA3"=>"\u062A\u0645\u064A", "\uFDA4"=>"\u062A\u0645\u0649",
-    "\uFDA5"=>"\u062C\u0645\u064A", "\uFDA6"=>"\u062C\u062D\u0649", "\uFDA7"=>"\u062C\u0645\u0649", "\uFDA8"=>"\u0633\u062E\u0649", "\uFDA9"=>"\u0635\u062D\u064A", "\uFDAA"=>"\u0634\u062D\u064A", "\uFDAB"=>"\u0636\u062D\u064A", "\uFDAC"=>"\u0644\u062C\u064A",
-    "\uFDAD"=>"\u0644\u0645\u064A", "\uFDAE"=>"\u064A\u062D\u064A", "\uFDAF"=>"\u064A\u062C\u064A", "\uFDB0"=>"\u064A\u0645\u064A", "\uFDB1"=>"\u0645\u0645\u064A", "\uFDB2"=>"\u0642\u0645\u064A", "\uFDB3"=>"\u0646\u062D\u064A", "\uFDB4"=>"\u0642\u0645\u062D",
-    "\uFDB5"=>"\u0644\u062D\u0645", "\uFDB6"=>"\u0639\u0645\u064A", "\uFDB7"=>"\u0643\u0645\u064A", "\uFDB8"=>"\u0646\u062C\u062D", "\uFDB9"=>"\u0645\u062E\u064A", "\uFDBA"=>"\u0644\u062C\u0645", "\uFDBB"=>"\u0643\u0645\u0645", "\uFDBC"=>"\u0644\u062C\u0645",
-    "\uFDBD"=>"\u0646\u062C\u062D", "\uFDBE"=>"\u062C\u062D\u064A", "\uFDBF"=>"\u062D\u062C\u064A", "\uFDC0"=>"\u0645\u062C\u064A", "\uFDC1"=>"\u0641\u0645\u064A", "\uFDC2"=>"\u0628\u062D\u064A", "\uFDC3"=>"\u0643\u0645\u0645", "\uFDC4"=>"\u0639\u062C\u0645",
-    "\uFDC5"=>"\u0635\u0645\u0645", "\uFDC6"=>"\u0633\u062E\u064A", "\uFDC7"=>"\u0646\u062C\u064A", "\uFDF0"=>"\u0635\u0644\u06D2", "\uFDF1"=>"\u0642\u0644\u06D2", "\uFDF2"=>"\u0627\u0644\u0644\u0647", "\uFDF3"=>"\u0627\u0643\u0628\u0631", "\uFDF4"=>"\u0645\u062D\u0645\u062F",
-    "\uFDF5"=>"\u0635\u0644\u0639\u0645", "\uFDF6"=>"\u0631\u0633\u0648\u0644", "\uFDF7"=>"\u0639\u0644\u064A\u0647", "\uFDF8"=>"\u0648\u0633\u0644\u0645", "\uFDF9"=>"\u0635\u0644\u0649", "\uFDFA"=>"\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064A\u0647 \u0648\u0633\u0644\u0645", "\uFDFB"=>"\u062C\u0644 \u062C\u0644\u0627\u0644\u0647", "\uFDFC"=>"\u0631\u06CC\u0627\u0644",
-    "\uFE10"=>",", "\uFE11"=>"\u3001", "\uFE12"=>"\u3002", "\uFE13"=>":", "\uFE14"=>";", "\uFE15"=>"!", "\uFE16"=>"?", "\uFE17"=>"\u3016",
-    "\uFE18"=>"\u3017", "\uFE19"=>"...", "\uFE30"=>"..", "\uFE31"=>"\u2014", "\uFE32"=>"\u2013", "\uFE33"=>"_", "\uFE34"=>"_", "\uFE35"=>"(",
-    "\uFE36"=>")", "\uFE37"=>"{", "\uFE38"=>"}", "\uFE39"=>"\u3014", "\uFE3A"=>"\u3015", "\uFE3B"=>"\u3010", "\uFE3C"=>"\u3011", "\uFE3D"=>"\u300A",
-    "\uFE3E"=>"\u300B", "\uFE3F"=>"\u3008", "\uFE40"=>"\u3009", "\uFE41"=>"\u300C", "\uFE42"=>"\u300D", "\uFE43"=>"\u300E", "\uFE44"=>"\u300F", "\uFE47"=>"[",
-    "\uFE48"=>"]", "\uFE49"=>" \u0305", "\uFE4A"=>" \u0305", "\uFE4B"=>" \u0305", "\uFE4C"=>" \u0305", "\uFE4D"=>"_", "\uFE4E"=>"_", "\uFE4F"=>"_",
-    "\uFE50"=>",", "\uFE51"=>"\u3001", "\uFE52"=>".", "\uFE54"=>";", "\uFE55"=>":", "\uFE56"=>"?", "\uFE57"=>"!", "\uFE58"=>"\u2014",
-    "\uFE59"=>"(", "\uFE5A"=>")", "\uFE5B"=>"{", "\uFE5C"=>"}", "\uFE5D"=>"\u3014", "\uFE5E"=>"\u3015", "\uFE5F"=>"#", "\uFE60"=>"&",
-    "\uFE61"=>"*", "\uFE62"=>"+", "\uFE63"=>"-", "\uFE64"=>"<", "\uFE65"=>">", "\uFE66"=>"=", "\uFE68"=>"\\", "\uFE69"=>"$",
-    "\uFE6A"=>"%", "\uFE6B"=>"@", "\uFE70"=>" \u064B", "\uFE71"=>"\u0640\u064B", "\uFE72"=>" \u064C", "\uFE74"=>" \u064D", "\uFE76"=>" \u064E", "\uFE77"=>"\u0640\u064E",
-    "\uFE78"=>" \u064F", "\uFE79"=>"\u0640\u064F", "\uFE7A"=>" \u0650", "\uFE7B"=>"\u0640\u0650", "\uFE7C"=>" \u0651", "\uFE7D"=>"\u0640\u0651", "\uFE7E"=>" \u0652", "\uFE7F"=>"\u0640\u0652",
-    "\uFE80"=>"\u0621", "\uFE81"=>"\u0622", "\uFE82"=>"\u0622", "\uFE83"=>"\u0623", "\uFE84"=>"\u0623", "\uFE85"=>"\u0624", "\uFE86"=>"\u0624", "\uFE87"=>"\u0625",
-    "\uFE88"=>"\u0625", "\uFE89"=>"\u0626", "\uFE8A"=>"\u0626", "\uFE8B"=>"\u0626", "\uFE8C"=>"\u0626", "\uFE8D"=>"\u0627", "\uFE8E"=>"\u0627", "\uFE8F"=>"\u0628",
-    "\uFE90"=>"\u0628", "\uFE91"=>"\u0628", "\uFE92"=>"\u0628", "\uFE93"=>"\u0629", "\uFE94"=>"\u0629", "\uFE95"=>"\u062A", "\uFE96"=>"\u062A", "\uFE97"=>"\u062A",
-    "\uFE98"=>"\u062A", "\uFE99"=>"\u062B", "\uFE9A"=>"\u062B", "\uFE9B"=>"\u062B", "\uFE9C"=>"\u062B", "\uFE9D"=>"\u062C", "\uFE9E"=>"\u062C", "\uFE9F"=>"\u062C",
-    "\uFEA0"=>"\u062C", "\uFEA1"=>"\u062D", "\uFEA2"=>"\u062D", "\uFEA3"=>"\u062D", "\uFEA4"=>"\u062D", "\uFEA5"=>"\u062E", "\uFEA6"=>"\u062E", "\uFEA7"=>"\u062E",
-    "\uFEA8"=>"\u062E", "\uFEA9"=>"\u062F", "\uFEAA"=>"\u062F", "\uFEAB"=>"\u0630", "\uFEAC"=>"\u0630", "\uFEAD"=>"\u0631", "\uFEAE"=>"\u0631", "\uFEAF"=>"\u0632",
-    "\uFEB0"=>"\u0632", "\uFEB1"=>"\u0633", "\uFEB2"=>"\u0633", "\uFEB3"=>"\u0633", "\uFEB4"=>"\u0633", "\uFEB5"=>"\u0634", "\uFEB6"=>"\u0634", "\uFEB7"=>"\u0634",
-    "\uFEB8"=>"\u0634", "\uFEB9"=>"\u0635", "\uFEBA"=>"\u0635", "\uFEBB"=>"\u0635", "\uFEBC"=>"\u0635", "\uFEBD"=>"\u0636", "\uFEBE"=>"\u0636", "\uFEBF"=>"\u0636",
-    "\uFEC0"=>"\u0636", "\uFEC1"=>"\u0637", "\uFEC2"=>"\u0637", "\uFEC3"=>"\u0637", "\uFEC4"=>"\u0637", "\uFEC5"=>"\u0638", "\uFEC6"=>"\u0638", "\uFEC7"=>"\u0638",
-    "\uFEC8"=>"\u0638", "\uFEC9"=>"\u0639", "\uFECA"=>"\u0639", "\uFECB"=>"\u0639", "\uFECC"=>"\u0639", "\uFECD"=>"\u063A", "\uFECE"=>"\u063A", "\uFECF"=>"\u063A",
-    "\uFED0"=>"\u063A", "\uFED1"=>"\u0641", "\uFED2"=>"\u0641", "\uFED3"=>"\u0641", "\uFED4"=>"\u0641", "\uFED5"=>"\u0642", "\uFED6"=>"\u0642", "\uFED7"=>"\u0642",
-    "\uFED8"=>"\u0642", "\uFED9"=>"\u0643", "\uFEDA"=>"\u0643", "\uFEDB"=>"\u0643", "\uFEDC"=>"\u0643", "\uFEDD"=>"\u0644", "\uFEDE"=>"\u0644", "\uFEDF"=>"\u0644",
-    "\uFEE0"=>"\u0644", "\uFEE1"=>"\u0645", "\uFEE2"=>"\u0645", "\uFEE3"=>"\u0645", "\uFEE4"=>"\u0645", "\uFEE5"=>"\u0646", "\uFEE6"=>"\u0646", "\uFEE7"=>"\u0646",
-    "\uFEE8"=>"\u0646", "\uFEE9"=>"\u0647", "\uFEEA"=>"\u0647", "\uFEEB"=>"\u0647", "\uFEEC"=>"\u0647", "\uFEED"=>"\u0648", "\uFEEE"=>"\u0648", "\uFEEF"=>"\u0649",
-    "\uFEF0"=>"\u0649", "\uFEF1"=>"\u064A", "\uFEF2"=>"\u064A", "\uFEF3"=>"\u064A", "\uFEF4"=>"\u064A", "\uFEF5"=>"\u0644\u0622", "\uFEF6"=>"\u0644\u0622", "\uFEF7"=>"\u0644\u0623",
-    "\uFEF8"=>"\u0644\u0623", "\uFEF9"=>"\u0644\u0625", "\uFEFA"=>"\u0644\u0625", "\uFEFB"=>"\u0644\u0627", "\uFEFC"=>"\u0644\u0627", "\uFF01"=>"!", "\uFF02"=>"\"", "\uFF03"=>"#",
-    "\uFF04"=>"$", "\uFF05"=>"%", "\uFF06"=>"&", "\uFF07"=>"'", "\uFF08"=>"(", "\uFF09"=>")", "\uFF0A"=>"*", "\uFF0B"=>"+",
-    "\uFF0C"=>",", "\uFF0D"=>"-", "\uFF0E"=>".", "\uFF0F"=>"/", "\uFF10"=>"0", "\uFF11"=>"1", "\uFF12"=>"2", "\uFF13"=>"3",
-    "\uFF14"=>"4", "\uFF15"=>"5", "\uFF16"=>"6", "\uFF17"=>"7", "\uFF18"=>"8", "\uFF19"=>"9", "\uFF1A"=>":", "\uFF1B"=>";",
-    "\uFF1C"=>"<", "\uFF1D"=>"=", "\uFF1E"=>">", "\uFF1F"=>"?", "\uFF20"=>"@", "\uFF21"=>"A", "\uFF22"=>"B", "\uFF23"=>"C",
-    "\uFF24"=>"D", "\uFF25"=>"E", "\uFF26"=>"F", "\uFF27"=>"G", "\uFF28"=>"H", "\uFF29"=>"I", "\uFF2A"=>"J", "\uFF2B"=>"K",
-    "\uFF2C"=>"L", "\uFF2D"=>"M", "\uFF2E"=>"N", "\uFF2F"=>"O", "\uFF30"=>"P", "\uFF31"=>"Q", "\uFF32"=>"R", "\uFF33"=>"S",
-    "\uFF34"=>"T", "\uFF35"=>"U", "\uFF36"=>"V", "\uFF37"=>"W", "\uFF38"=>"X", "\uFF39"=>"Y", "\uFF3A"=>"Z", "\uFF3B"=>"[",
-    "\uFF3C"=>"\\", "\uFF3D"=>"]", "\uFF3E"=>"^", "\uFF3F"=>"_", "\uFF40"=>"`", "\uFF41"=>"a", "\uFF42"=>"b", "\uFF43"=>"c",
-    "\uFF44"=>"d", "\uFF45"=>"e", "\uFF46"=>"f", "\uFF47"=>"g", "\uFF48"=>"h", "\uFF49"=>"i", "\uFF4A"=>"j", "\uFF4B"=>"k",
-    "\uFF4C"=>"l", "\uFF4D"=>"m", "\uFF4E"=>"n", "\uFF4F"=>"o", "\uFF50"=>"p", "\uFF51"=>"q", "\uFF52"=>"r", "\uFF53"=>"s",
-    "\uFF54"=>"t", "\uFF55"=>"u", "\uFF56"=>"v", "\uFF57"=>"w", "\uFF58"=>"x", "\uFF59"=>"y", "\uFF5A"=>"z", "\uFF5B"=>"{",
-    "\uFF5C"=>"|", "\uFF5D"=>"}", "\uFF5E"=>"~", "\uFF5F"=>"\u2985", "\uFF60"=>"\u2986", "\uFF61"=>"\u3002", "\uFF62"=>"\u300C", "\uFF63"=>"\u300D",
-    "\uFF64"=>"\u3001", "\uFF65"=>"\u30FB", "\uFF66"=>"\u30F2", "\uFF67"=>"\u30A1", "\uFF68"=>"\u30A3", "\uFF69"=>"\u30A5", "\uFF6A"=>"\u30A7", "\uFF6B"=>"\u30A9",
-    "\uFF6C"=>"\u30E3", "\uFF6D"=>"\u30E5", "\uFF6E"=>"\u30E7", "\uFF6F"=>"\u30C3", "\uFF70"=>"\u30FC", "\uFF71"=>"\u30A2", "\uFF72"=>"\u30A4", "\uFF73"=>"\u30A6",
-    "\uFF74"=>"\u30A8", "\uFF75"=>"\u30AA", "\uFF76"=>"\u30AB", "\uFF77"=>"\u30AD", "\uFF78"=>"\u30AF", "\uFF79"=>"\u30B1", "\uFF7A"=>"\u30B3", "\uFF7B"=>"\u30B5",
-    "\uFF7C"=>"\u30B7", "\uFF7D"=>"\u30B9", "\uFF7E"=>"\u30BB", "\uFF7F"=>"\u30BD", "\uFF80"=>"\u30BF", "\uFF81"=>"\u30C1", "\uFF82"=>"\u30C4", "\uFF83"=>"\u30C6",
-    "\uFF84"=>"\u30C8", "\uFF85"=>"\u30CA", "\uFF86"=>"\u30CB", "\uFF87"=>"\u30CC", "\uFF88"=>"\u30CD", "\uFF89"=>"\u30CE", "\uFF8A"=>"\u30CF", "\uFF8B"=>"\u30D2",
-    "\uFF8C"=>"\u30D5", "\uFF8D"=>"\u30D8", "\uFF8E"=>"\u30DB", "\uFF8F"=>"\u30DE", "\uFF90"=>"\u30DF", "\uFF91"=>"\u30E0", "\uFF92"=>"\u30E1", "\uFF93"=>"\u30E2",
-    "\uFF94"=>"\u30E4", "\uFF95"=>"\u30E6", "\uFF96"=>"\u30E8", "\uFF97"=>"\u30E9", "\uFF98"=>"\u30EA", "\uFF99"=>"\u30EB", "\uFF9A"=>"\u30EC", "\uFF9B"=>"\u30ED",
-    "\uFF9C"=>"\u30EF", "\uFF9D"=>"\u30F3", "\uFF9E"=>"\u3099", "\uFF9F"=>"\u309A", "\uFFA0"=>"\u1160", "\uFFA1"=>"\u1100", "\uFFA2"=>"\u1101", "\uFFA3"=>"\u11AA",
-    "\uFFA4"=>"\u1102", "\uFFA5"=>"\u11AC", "\uFFA6"=>"\u11AD", "\uFFA7"=>"\u1103", "\uFFA8"=>"\u1104", "\uFFA9"=>"\u1105", "\uFFAA"=>"\u11B0", "\uFFAB"=>"\u11B1",
-    "\uFFAC"=>"\u11B2", "\uFFAD"=>"\u11B3", "\uFFAE"=>"\u11B4", "\uFFAF"=>"\u11B5", "\uFFB0"=>"\u111A", "\uFFB1"=>"\u1106", "\uFFB2"=>"\u1107", "\uFFB3"=>"\u1108",
-    "\uFFB4"=>"\u1121", "\uFFB5"=>"\u1109", "\uFFB6"=>"\u110A", "\uFFB7"=>"\u110B", "\uFFB8"=>"\u110C", "\uFFB9"=>"\u110D", "\uFFBA"=>"\u110E", "\uFFBB"=>"\u110F",
-    "\uFFBC"=>"\u1110", "\uFFBD"=>"\u1111", "\uFFBE"=>"\u1112", "\uFFC2"=>"\u1161", "\uFFC3"=>"\u1162", "\uFFC4"=>"\u1163", "\uFFC5"=>"\u1164", "\uFFC6"=>"\u1165",
-    "\uFFC7"=>"\u1166", "\uFFCA"=>"\u1167", "\uFFCB"=>"\u1168", "\uFFCC"=>"\u1169", "\uFFCD"=>"\u116A", "\uFFCE"=>"\u116B", "\uFFCF"=>"\u116C", "\uFFD2"=>"\u116D",
-    "\uFFD3"=>"\u116E", "\uFFD4"=>"\u116F", "\uFFD5"=>"\u1170", "\uFFD6"=>"\u1171", "\uFFD7"=>"\u1172", "\uFFDA"=>"\u1173", "\uFFDB"=>"\u1174", "\uFFDC"=>"\u1175",
-    "\uFFE0"=>"\u00A2", "\uFFE1"=>"\u00A3", "\uFFE2"=>"\u00AC", "\uFFE3"=>" \u0304", "\uFFE4"=>"\u00A6", "\uFFE5"=>"\u00A5", "\uFFE6"=>"\u20A9", "\uFFE8"=>"\u2502",
-    "\uFFE9"=>"\u2190", "\uFFEA"=>"\u2191", "\uFFEB"=>"\u2192", "\uFFEC"=>"\u2193", "\uFFED"=>"\u25A0", "\uFFEE"=>"\u25CB", "\u{1D400}"=>"A", "\u{1D401}"=>"B",
-    "\u{1D402}"=>"C", "\u{1D403}"=>"D", "\u{1D404}"=>"E", "\u{1D405}"=>"F", "\u{1D406}"=>"G", "\u{1D407}"=>"H", "\u{1D408}"=>"I", "\u{1D409}"=>"J",
-    "\u{1D40A}"=>"K", "\u{1D40B}"=>"L", "\u{1D40C}"=>"M", "\u{1D40D}"=>"N", "\u{1D40E}"=>"O", "\u{1D40F}"=>"P", "\u{1D410}"=>"Q", "\u{1D411}"=>"R",
-    "\u{1D412}"=>"S", "\u{1D413}"=>"T", "\u{1D414}"=>"U", "\u{1D415}"=>"V", "\u{1D416}"=>"W", "\u{1D417}"=>"X", "\u{1D418}"=>"Y", "\u{1D419}"=>"Z",
-    "\u{1D41A}"=>"a", "\u{1D41B}"=>"b", "\u{1D41C}"=>"c", "\u{1D41D}"=>"d", "\u{1D41E}"=>"e", "\u{1D41F}"=>"f", "\u{1D420}"=>"g", "\u{1D421}"=>"h",
-    "\u{1D422}"=>"i", "\u{1D423}"=>"j", "\u{1D424}"=>"k", "\u{1D425}"=>"l", "\u{1D426}"=>"m", "\u{1D427}"=>"n", "\u{1D428}"=>"o", "\u{1D429}"=>"p",
-    "\u{1D42A}"=>"q", "\u{1D42B}"=>"r", "\u{1D42C}"=>"s", "\u{1D42D}"=>"t", "\u{1D42E}"=>"u", "\u{1D42F}"=>"v", "\u{1D430}"=>"w", "\u{1D431}"=>"x",
-    "\u{1D432}"=>"y", "\u{1D433}"=>"z", "\u{1D434}"=>"A", "\u{1D435}"=>"B", "\u{1D436}"=>"C", "\u{1D437}"=>"D", "\u{1D438}"=>"E", "\u{1D439}"=>"F",
-    "\u{1D43A}"=>"G", "\u{1D43B}"=>"H", "\u{1D43C}"=>"I", "\u{1D43D}"=>"J", "\u{1D43E}"=>"K", "\u{1D43F}"=>"L", "\u{1D440}"=>"M", "\u{1D441}"=>"N",
-    "\u{1D442}"=>"O", "\u{1D443}"=>"P", "\u{1D444}"=>"Q", "\u{1D445}"=>"R", "\u{1D446}"=>"S", "\u{1D447}"=>"T", "\u{1D448}"=>"U", "\u{1D449}"=>"V",
-    "\u{1D44A}"=>"W", "\u{1D44B}"=>"X", "\u{1D44C}"=>"Y", "\u{1D44D}"=>"Z", "\u{1D44E}"=>"a", "\u{1D44F}"=>"b", "\u{1D450}"=>"c", "\u{1D451}"=>"d",
-    "\u{1D452}"=>"e", "\u{1D453}"=>"f", "\u{1D454}"=>"g", "\u{1D456}"=>"i", "\u{1D457}"=>"j", "\u{1D458}"=>"k", "\u{1D459}"=>"l", "\u{1D45A}"=>"m",
-    "\u{1D45B}"=>"n", "\u{1D45C}"=>"o", "\u{1D45D}"=>"p", "\u{1D45E}"=>"q", "\u{1D45F}"=>"r", "\u{1D460}"=>"s", "\u{1D461}"=>"t", "\u{1D462}"=>"u",
-    "\u{1D463}"=>"v", "\u{1D464}"=>"w", "\u{1D465}"=>"x", "\u{1D466}"=>"y", "\u{1D467}"=>"z", "\u{1D468}"=>"A", "\u{1D469}"=>"B", "\u{1D46A}"=>"C",
-    "\u{1D46B}"=>"D", "\u{1D46C}"=>"E", "\u{1D46D}"=>"F", "\u{1D46E}"=>"G", "\u{1D46F}"=>"H", "\u{1D470}"=>"I", "\u{1D471}"=>"J", "\u{1D472}"=>"K",
-    "\u{1D473}"=>"L", "\u{1D474}"=>"M", "\u{1D475}"=>"N", "\u{1D476}"=>"O", "\u{1D477}"=>"P", "\u{1D478}"=>"Q", "\u{1D479}"=>"R", "\u{1D47A}"=>"S",
-    "\u{1D47B}"=>"T", "\u{1D47C}"=>"U", "\u{1D47D}"=>"V", "\u{1D47E}"=>"W", "\u{1D47F}"=>"X", "\u{1D480}"=>"Y", "\u{1D481}"=>"Z", "\u{1D482}"=>"a",
-    "\u{1D483}"=>"b", "\u{1D484}"=>"c", "\u{1D485}"=>"d", "\u{1D486}"=>"e", "\u{1D487}"=>"f", "\u{1D488}"=>"g", "\u{1D489}"=>"h", "\u{1D48A}"=>"i",
-    "\u{1D48B}"=>"j", "\u{1D48C}"=>"k", "\u{1D48D}"=>"l", "\u{1D48E}"=>"m", "\u{1D48F}"=>"n", "\u{1D490}"=>"o", "\u{1D491}"=>"p", "\u{1D492}"=>"q",
-    "\u{1D493}"=>"r", "\u{1D494}"=>"s", "\u{1D495}"=>"t", "\u{1D496}"=>"u", "\u{1D497}"=>"v", "\u{1D498}"=>"w", "\u{1D499}"=>"x", "\u{1D49A}"=>"y",
-    "\u{1D49B}"=>"z", "\u{1D49C}"=>"A", "\u{1D49E}"=>"C", "\u{1D49F}"=>"D", "\u{1D4A2}"=>"G", "\u{1D4A5}"=>"J", "\u{1D4A6}"=>"K", "\u{1D4A9}"=>"N",
-    "\u{1D4AA}"=>"O", "\u{1D4AB}"=>"P", "\u{1D4AC}"=>"Q", "\u{1D4AE}"=>"S", "\u{1D4AF}"=>"T", "\u{1D4B0}"=>"U", "\u{1D4B1}"=>"V", "\u{1D4B2}"=>"W",
-    "\u{1D4B3}"=>"X", "\u{1D4B4}"=>"Y", "\u{1D4B5}"=>"Z", "\u{1D4B6}"=>"a", "\u{1D4B7}"=>"b", "\u{1D4B8}"=>"c", "\u{1D4B9}"=>"d", "\u{1D4BB}"=>"f",
-    "\u{1D4BD}"=>"h", "\u{1D4BE}"=>"i", "\u{1D4BF}"=>"j", "\u{1D4C0}"=>"k", "\u{1D4C1}"=>"l", "\u{1D4C2}"=>"m", "\u{1D4C3}"=>"n", "\u{1D4C5}"=>"p",
-    "\u{1D4C6}"=>"q", "\u{1D4C7}"=>"r", "\u{1D4C8}"=>"s", "\u{1D4C9}"=>"t", "\u{1D4CA}"=>"u", "\u{1D4CB}"=>"v", "\u{1D4CC}"=>"w", "\u{1D4CD}"=>"x",
-    "\u{1D4CE}"=>"y", "\u{1D4CF}"=>"z", "\u{1D4D0}"=>"A", "\u{1D4D1}"=>"B", "\u{1D4D2}"=>"C", "\u{1D4D3}"=>"D", "\u{1D4D4}"=>"E", "\u{1D4D5}"=>"F",
-    "\u{1D4D6}"=>"G", "\u{1D4D7}"=>"H", "\u{1D4D8}"=>"I", "\u{1D4D9}"=>"J", "\u{1D4DA}"=>"K", "\u{1D4DB}"=>"L", "\u{1D4DC}"=>"M", "\u{1D4DD}"=>"N",
-    "\u{1D4DE}"=>"O", "\u{1D4DF}"=>"P", "\u{1D4E0}"=>"Q", "\u{1D4E1}"=>"R", "\u{1D4E2}"=>"S", "\u{1D4E3}"=>"T", "\u{1D4E4}"=>"U", "\u{1D4E5}"=>"V",
-    "\u{1D4E6}"=>"W", "\u{1D4E7}"=>"X", "\u{1D4E8}"=>"Y", "\u{1D4E9}"=>"Z", "\u{1D4EA}"=>"a", "\u{1D4EB}"=>"b", "\u{1D4EC}"=>"c", "\u{1D4ED}"=>"d",
-    "\u{1D4EE}"=>"e", "\u{1D4EF}"=>"f", "\u{1D4F0}"=>"g", "\u{1D4F1}"=>"h", "\u{1D4F2}"=>"i", "\u{1D4F3}"=>"j", "\u{1D4F4}"=>"k", "\u{1D4F5}"=>"l",
-    "\u{1D4F6}"=>"m", "\u{1D4F7}"=>"n", "\u{1D4F8}"=>"o", "\u{1D4F9}"=>"p", "\u{1D4FA}"=>"q", "\u{1D4FB}"=>"r", "\u{1D4FC}"=>"s", "\u{1D4FD}"=>"t",
-    "\u{1D4FE}"=>"u", "\u{1D4FF}"=>"v", "\u{1D500}"=>"w", "\u{1D501}"=>"x", "\u{1D502}"=>"y", "\u{1D503}"=>"z", "\u{1D504}"=>"A", "\u{1D505}"=>"B",
-    "\u{1D507}"=>"D", "\u{1D508}"=>"E", "\u{1D509}"=>"F", "\u{1D50A}"=>"G", "\u{1D50D}"=>"J", "\u{1D50E}"=>"K", "\u{1D50F}"=>"L", "\u{1D510}"=>"M",
-    "\u{1D511}"=>"N", "\u{1D512}"=>"O", "\u{1D513}"=>"P", "\u{1D514}"=>"Q", "\u{1D516}"=>"S", "\u{1D517}"=>"T", "\u{1D518}"=>"U", "\u{1D519}"=>"V",
-    "\u{1D51A}"=>"W", "\u{1D51B}"=>"X", "\u{1D51C}"=>"Y", "\u{1D51E}"=>"a", "\u{1D51F}"=>"b", "\u{1D520}"=>"c", "\u{1D521}"=>"d", "\u{1D522}"=>"e",
-    "\u{1D523}"=>"f", "\u{1D524}"=>"g", "\u{1D525}"=>"h", "\u{1D526}"=>"i", "\u{1D527}"=>"j", "\u{1D528}"=>"k", "\u{1D529}"=>"l", "\u{1D52A}"=>"m",
-    "\u{1D52B}"=>"n", "\u{1D52C}"=>"o", "\u{1D52D}"=>"p", "\u{1D52E}"=>"q", "\u{1D52F}"=>"r", "\u{1D530}"=>"s", "\u{1D531}"=>"t", "\u{1D532}"=>"u",
-    "\u{1D533}"=>"v", "\u{1D534}"=>"w", "\u{1D535}"=>"x", "\u{1D536}"=>"y", "\u{1D537}"=>"z", "\u{1D538}"=>"A", "\u{1D539}"=>"B", "\u{1D53B}"=>"D",
-    "\u{1D53C}"=>"E", "\u{1D53D}"=>"F", "\u{1D53E}"=>"G", "\u{1D540}"=>"I", "\u{1D541}"=>"J", "\u{1D542}"=>"K", "\u{1D543}"=>"L", "\u{1D544}"=>"M",
-    "\u{1D546}"=>"O", "\u{1D54A}"=>"S", "\u{1D54B}"=>"T", "\u{1D54C}"=>"U", "\u{1D54D}"=>"V", "\u{1D54E}"=>"W", "\u{1D54F}"=>"X", "\u{1D550}"=>"Y",
-    "\u{1D552}"=>"a", "\u{1D553}"=>"b", "\u{1D554}"=>"c", "\u{1D555}"=>"d", "\u{1D556}"=>"e", "\u{1D557}"=>"f", "\u{1D558}"=>"g", "\u{1D559}"=>"h",
-    "\u{1D55A}"=>"i", "\u{1D55B}"=>"j", "\u{1D55C}"=>"k", "\u{1D55D}"=>"l", "\u{1D55E}"=>"m", "\u{1D55F}"=>"n", "\u{1D560}"=>"o", "\u{1D561}"=>"p",
-    "\u{1D562}"=>"q", "\u{1D563}"=>"r", "\u{1D564}"=>"s", "\u{1D565}"=>"t", "\u{1D566}"=>"u", "\u{1D567}"=>"v", "\u{1D568}"=>"w", "\u{1D569}"=>"x",
-    "\u{1D56A}"=>"y", "\u{1D56B}"=>"z", "\u{1D56C}"=>"A", "\u{1D56D}"=>"B", "\u{1D56E}"=>"C", "\u{1D56F}"=>"D", "\u{1D570}"=>"E", "\u{1D571}"=>"F",
-    "\u{1D572}"=>"G", "\u{1D573}"=>"H", "\u{1D574}"=>"I", "\u{1D575}"=>"J", "\u{1D576}"=>"K", "\u{1D577}"=>"L", "\u{1D578}"=>"M", "\u{1D579}"=>"N",
-    "\u{1D57A}"=>"O", "\u{1D57B}"=>"P", "\u{1D57C}"=>"Q", "\u{1D57D}"=>"R", "\u{1D57E}"=>"S", "\u{1D57F}"=>"T", "\u{1D580}"=>"U", "\u{1D581}"=>"V",
-    "\u{1D582}"=>"W", "\u{1D583}"=>"X", "\u{1D584}"=>"Y", "\u{1D585}"=>"Z", "\u{1D586}"=>"a", "\u{1D587}"=>"b", "\u{1D588}"=>"c", "\u{1D589}"=>"d",
-    "\u{1D58A}"=>"e", "\u{1D58B}"=>"f", "\u{1D58C}"=>"g", "\u{1D58D}"=>"h", "\u{1D58E}"=>"i", "\u{1D58F}"=>"j", "\u{1D590}"=>"k", "\u{1D591}"=>"l",
-    "\u{1D592}"=>"m", "\u{1D593}"=>"n", "\u{1D594}"=>"o", "\u{1D595}"=>"p", "\u{1D596}"=>"q", "\u{1D597}"=>"r", "\u{1D598}"=>"s", "\u{1D599}"=>"t",
-    "\u{1D59A}"=>"u", "\u{1D59B}"=>"v", "\u{1D59C}"=>"w", "\u{1D59D}"=>"x", "\u{1D59E}"=>"y", "\u{1D59F}"=>"z", "\u{1D5A0}"=>"A", "\u{1D5A1}"=>"B",
-    "\u{1D5A2}"=>"C", "\u{1D5A3}"=>"D", "\u{1D5A4}"=>"E", "\u{1D5A5}"=>"F", "\u{1D5A6}"=>"G", "\u{1D5A7}"=>"H", "\u{1D5A8}"=>"I", "\u{1D5A9}"=>"J",
-    "\u{1D5AA}"=>"K", "\u{1D5AB}"=>"L", "\u{1D5AC}"=>"M", "\u{1D5AD}"=>"N", "\u{1D5AE}"=>"O", "\u{1D5AF}"=>"P", "\u{1D5B0}"=>"Q", "\u{1D5B1}"=>"R",
-    "\u{1D5B2}"=>"S", "\u{1D5B3}"=>"T", "\u{1D5B4}"=>"U", "\u{1D5B5}"=>"V", "\u{1D5B6}"=>"W", "\u{1D5B7}"=>"X", "\u{1D5B8}"=>"Y", "\u{1D5B9}"=>"Z",
-    "\u{1D5BA}"=>"a", "\u{1D5BB}"=>"b", "\u{1D5BC}"=>"c", "\u{1D5BD}"=>"d", "\u{1D5BE}"=>"e", "\u{1D5BF}"=>"f", "\u{1D5C0}"=>"g", "\u{1D5C1}"=>"h",
-    "\u{1D5C2}"=>"i", "\u{1D5C3}"=>"j", "\u{1D5C4}"=>"k", "\u{1D5C5}"=>"l", "\u{1D5C6}"=>"m", "\u{1D5C7}"=>"n", "\u{1D5C8}"=>"o", "\u{1D5C9}"=>"p",
-    "\u{1D5CA}"=>"q", "\u{1D5CB}"=>"r", "\u{1D5CC}"=>"s", "\u{1D5CD}"=>"t", "\u{1D5CE}"=>"u", "\u{1D5CF}"=>"v", "\u{1D5D0}"=>"w", "\u{1D5D1}"=>"x",
-    "\u{1D5D2}"=>"y", "\u{1D5D3}"=>"z", "\u{1D5D4}"=>"A", "\u{1D5D5}"=>"B", "\u{1D5D6}"=>"C", "\u{1D5D7}"=>"D", "\u{1D5D8}"=>"E", "\u{1D5D9}"=>"F",
-    "\u{1D5DA}"=>"G", "\u{1D5DB}"=>"H", "\u{1D5DC}"=>"I", "\u{1D5DD}"=>"J", "\u{1D5DE}"=>"K", "\u{1D5DF}"=>"L", "\u{1D5E0}"=>"M", "\u{1D5E1}"=>"N",
-    "\u{1D5E2}"=>"O", "\u{1D5E3}"=>"P", "\u{1D5E4}"=>"Q", "\u{1D5E5}"=>"R", "\u{1D5E6}"=>"S", "\u{1D5E7}"=>"T", "\u{1D5E8}"=>"U", "\u{1D5E9}"=>"V",
-    "\u{1D5EA}"=>"W", "\u{1D5EB}"=>"X", "\u{1D5EC}"=>"Y", "\u{1D5ED}"=>"Z", "\u{1D5EE}"=>"a", "\u{1D5EF}"=>"b", "\u{1D5F0}"=>"c", "\u{1D5F1}"=>"d",
-    "\u{1D5F2}"=>"e", "\u{1D5F3}"=>"f", "\u{1D5F4}"=>"g", "\u{1D5F5}"=>"h", "\u{1D5F6}"=>"i", "\u{1D5F7}"=>"j", "\u{1D5F8}"=>"k", "\u{1D5F9}"=>"l",
-    "\u{1D5FA}"=>"m", "\u{1D5FB}"=>"n", "\u{1D5FC}"=>"o", "\u{1D5FD}"=>"p", "\u{1D5FE}"=>"q", "\u{1D5FF}"=>"r", "\u{1D600}"=>"s", "\u{1D601}"=>"t",
-    "\u{1D602}"=>"u", "\u{1D603}"=>"v", "\u{1D604}"=>"w", "\u{1D605}"=>"x", "\u{1D606}"=>"y", "\u{1D607}"=>"z", "\u{1D608}"=>"A", "\u{1D609}"=>"B",
-    "\u{1D60A}"=>"C", "\u{1D60B}"=>"D", "\u{1D60C}"=>"E", "\u{1D60D}"=>"F", "\u{1D60E}"=>"G", "\u{1D60F}"=>"H", "\u{1D610}"=>"I", "\u{1D611}"=>"J",
-    "\u{1D612}"=>"K", "\u{1D613}"=>"L", "\u{1D614}"=>"M", "\u{1D615}"=>"N", "\u{1D616}"=>"O", "\u{1D617}"=>"P", "\u{1D618}"=>"Q", "\u{1D619}"=>"R",
-    "\u{1D61A}"=>"S", "\u{1D61B}"=>"T", "\u{1D61C}"=>"U", "\u{1D61D}"=>"V", "\u{1D61E}"=>"W", "\u{1D61F}"=>"X", "\u{1D620}"=>"Y", "\u{1D621}"=>"Z",
-    "\u{1D622}"=>"a", "\u{1D623}"=>"b", "\u{1D624}"=>"c", "\u{1D625}"=>"d", "\u{1D626}"=>"e", "\u{1D627}"=>"f", "\u{1D628}"=>"g", "\u{1D629}"=>"h",
-    "\u{1D62A}"=>"i", "\u{1D62B}"=>"j", "\u{1D62C}"=>"k", "\u{1D62D}"=>"l", "\u{1D62E}"=>"m", "\u{1D62F}"=>"n", "\u{1D630}"=>"o", "\u{1D631}"=>"p",
-    "\u{1D632}"=>"q", "\u{1D633}"=>"r", "\u{1D634}"=>"s", "\u{1D635}"=>"t", "\u{1D636}"=>"u", "\u{1D637}"=>"v", "\u{1D638}"=>"w", "\u{1D639}"=>"x",
-    "\u{1D63A}"=>"y", "\u{1D63B}"=>"z", "\u{1D63C}"=>"A", "\u{1D63D}"=>"B", "\u{1D63E}"=>"C", "\u{1D63F}"=>"D", "\u{1D640}"=>"E", "\u{1D641}"=>"F",
-    "\u{1D642}"=>"G", "\u{1D643}"=>"H", "\u{1D644}"=>"I", "\u{1D645}"=>"J", "\u{1D646}"=>"K", "\u{1D647}"=>"L", "\u{1D648}"=>"M", "\u{1D649}"=>"N",
-    "\u{1D64A}"=>"O", "\u{1D64B}"=>"P", "\u{1D64C}"=>"Q", "\u{1D64D}"=>"R", "\u{1D64E}"=>"S", "\u{1D64F}"=>"T", "\u{1D650}"=>"U", "\u{1D651}"=>"V",
-    "\u{1D652}"=>"W", "\u{1D653}"=>"X", "\u{1D654}"=>"Y", "\u{1D655}"=>"Z", "\u{1D656}"=>"a", "\u{1D657}"=>"b", "\u{1D658}"=>"c", "\u{1D659}"=>"d",
-    "\u{1D65A}"=>"e", "\u{1D65B}"=>"f", "\u{1D65C}"=>"g", "\u{1D65D}"=>"h", "\u{1D65E}"=>"i", "\u{1D65F}"=>"j", "\u{1D660}"=>"k", "\u{1D661}"=>"l",
-    "\u{1D662}"=>"m", "\u{1D663}"=>"n", "\u{1D664}"=>"o", "\u{1D665}"=>"p", "\u{1D666}"=>"q", "\u{1D667}"=>"r", "\u{1D668}"=>"s", "\u{1D669}"=>"t",
-    "\u{1D66A}"=>"u", "\u{1D66B}"=>"v", "\u{1D66C}"=>"w", "\u{1D66D}"=>"x", "\u{1D66E}"=>"y", "\u{1D66F}"=>"z", "\u{1D670}"=>"A", "\u{1D671}"=>"B",
-    "\u{1D672}"=>"C", "\u{1D673}"=>"D", "\u{1D674}"=>"E", "\u{1D675}"=>"F", "\u{1D676}"=>"G", "\u{1D677}"=>"H", "\u{1D678}"=>"I", "\u{1D679}"=>"J",
-    "\u{1D67A}"=>"K", "\u{1D67B}"=>"L", "\u{1D67C}"=>"M", "\u{1D67D}"=>"N", "\u{1D67E}"=>"O", "\u{1D67F}"=>"P", "\u{1D680}"=>"Q", "\u{1D681}"=>"R",
-    "\u{1D682}"=>"S", "\u{1D683}"=>"T", "\u{1D684}"=>"U", "\u{1D685}"=>"V", "\u{1D686}"=>"W", "\u{1D687}"=>"X", "\u{1D688}"=>"Y", "\u{1D689}"=>"Z",
-    "\u{1D68A}"=>"a", "\u{1D68B}"=>"b", "\u{1D68C}"=>"c", "\u{1D68D}"=>"d", "\u{1D68E}"=>"e", "\u{1D68F}"=>"f", "\u{1D690}"=>"g", "\u{1D691}"=>"h",
-    "\u{1D692}"=>"i", "\u{1D693}"=>"j", "\u{1D694}"=>"k", "\u{1D695}"=>"l", "\u{1D696}"=>"m", "\u{1D697}"=>"n", "\u{1D698}"=>"o", "\u{1D699}"=>"p",
-    "\u{1D69A}"=>"q", "\u{1D69B}"=>"r", "\u{1D69C}"=>"s", "\u{1D69D}"=>"t", "\u{1D69E}"=>"u", "\u{1D69F}"=>"v", "\u{1D6A0}"=>"w", "\u{1D6A1}"=>"x",
-    "\u{1D6A2}"=>"y", "\u{1D6A3}"=>"z", "\u{1D6A4}"=>"\u0131", "\u{1D6A5}"=>"\u0237", "\u{1D6A8}"=>"\u0391", "\u{1D6A9}"=>"\u0392", "\u{1D6AA}"=>"\u0393", "\u{1D6AB}"=>"\u0394",
-    "\u{1D6AC}"=>"\u0395", "\u{1D6AD}"=>"\u0396", "\u{1D6AE}"=>"\u0397", "\u{1D6AF}"=>"\u0398", "\u{1D6B0}"=>"\u0399", "\u{1D6B1}"=>"\u039A", "\u{1D6B2}"=>"\u039B", "\u{1D6B3}"=>"\u039C",
-    "\u{1D6B4}"=>"\u039D", "\u{1D6B5}"=>"\u039E", "\u{1D6B6}"=>"\u039F", "\u{1D6B7}"=>"\u03A0", "\u{1D6B8}"=>"\u03A1", "\u{1D6B9}"=>"\u0398", "\u{1D6BA}"=>"\u03A3", "\u{1D6BB}"=>"\u03A4",
-    "\u{1D6BC}"=>"\u03A5", "\u{1D6BD}"=>"\u03A6", "\u{1D6BE}"=>"\u03A7", "\u{1D6BF}"=>"\u03A8", "\u{1D6C0}"=>"\u03A9", "\u{1D6C1}"=>"\u2207", "\u{1D6C2}"=>"\u03B1", "\u{1D6C3}"=>"\u03B2",
-    "\u{1D6C4}"=>"\u03B3", "\u{1D6C5}"=>"\u03B4", "\u{1D6C6}"=>"\u03B5", "\u{1D6C7}"=>"\u03B6", "\u{1D6C8}"=>"\u03B7", "\u{1D6C9}"=>"\u03B8", "\u{1D6CA}"=>"\u03B9", "\u{1D6CB}"=>"\u03BA",
-    "\u{1D6CC}"=>"\u03BB", "\u{1D6CD}"=>"\u03BC", "\u{1D6CE}"=>"\u03BD", "\u{1D6CF}"=>"\u03BE", "\u{1D6D0}"=>"\u03BF", "\u{1D6D1}"=>"\u03C0", "\u{1D6D2}"=>"\u03C1", "\u{1D6D3}"=>"\u03C2",
-    "\u{1D6D4}"=>"\u03C3", "\u{1D6D5}"=>"\u03C4", "\u{1D6D6}"=>"\u03C5", "\u{1D6D7}"=>"\u03C6", "\u{1D6D8}"=>"\u03C7", "\u{1D6D9}"=>"\u03C8", "\u{1D6DA}"=>"\u03C9", "\u{1D6DB}"=>"\u2202",
-    "\u{1D6DC}"=>"\u03B5", "\u{1D6DD}"=>"\u03B8", "\u{1D6DE}"=>"\u03BA", "\u{1D6DF}"=>"\u03C6", "\u{1D6E0}"=>"\u03C1", "\u{1D6E1}"=>"\u03C0", "\u{1D6E2}"=>"\u0391", "\u{1D6E3}"=>"\u0392",
-    "\u{1D6E4}"=>"\u0393", "\u{1D6E5}"=>"\u0394", "\u{1D6E6}"=>"\u0395", "\u{1D6E7}"=>"\u0396", "\u{1D6E8}"=>"\u0397", "\u{1D6E9}"=>"\u0398", "\u{1D6EA}"=>"\u0399", "\u{1D6EB}"=>"\u039A",
-    "\u{1D6EC}"=>"\u039B", "\u{1D6ED}"=>"\u039C", "\u{1D6EE}"=>"\u039D", "\u{1D6EF}"=>"\u039E", "\u{1D6F0}"=>"\u039F", "\u{1D6F1}"=>"\u03A0", "\u{1D6F2}"=>"\u03A1", "\u{1D6F3}"=>"\u0398",
-    "\u{1D6F4}"=>"\u03A3", "\u{1D6F5}"=>"\u03A4", "\u{1D6F6}"=>"\u03A5", "\u{1D6F7}"=>"\u03A6", "\u{1D6F8}"=>"\u03A7", "\u{1D6F9}"=>"\u03A8", "\u{1D6FA}"=>"\u03A9", "\u{1D6FB}"=>"\u2207",
-    "\u{1D6FC}"=>"\u03B1", "\u{1D6FD}"=>"\u03B2", "\u{1D6FE}"=>"\u03B3", "\u{1D6FF}"=>"\u03B4", "\u{1D700}"=>"\u03B5", "\u{1D701}"=>"\u03B6", "\u{1D702}"=>"\u03B7", "\u{1D703}"=>"\u03B8",
-    "\u{1D704}"=>"\u03B9", "\u{1D705}"=>"\u03BA", "\u{1D706}"=>"\u03BB", "\u{1D707}"=>"\u03BC", "\u{1D708}"=>"\u03BD", "\u{1D709}"=>"\u03BE", "\u{1D70A}"=>"\u03BF", "\u{1D70B}"=>"\u03C0",
-    "\u{1D70C}"=>"\u03C1", "\u{1D70D}"=>"\u03C2", "\u{1D70E}"=>"\u03C3", "\u{1D70F}"=>"\u03C4", "\u{1D710}"=>"\u03C5", "\u{1D711}"=>"\u03C6", "\u{1D712}"=>"\u03C7", "\u{1D713}"=>"\u03C8",
-    "\u{1D714}"=>"\u03C9", "\u{1D715}"=>"\u2202", "\u{1D716}"=>"\u03B5", "\u{1D717}"=>"\u03B8", "\u{1D718}"=>"\u03BA", "\u{1D719}"=>"\u03C6", "\u{1D71A}"=>"\u03C1", "\u{1D71B}"=>"\u03C0",
-    "\u{1D71C}"=>"\u0391", "\u{1D71D}"=>"\u0392", "\u{1D71E}"=>"\u0393", "\u{1D71F}"=>"\u0394", "\u{1D720}"=>"\u0395", "\u{1D721}"=>"\u0396", "\u{1D722}"=>"\u0397", "\u{1D723}"=>"\u0398",
-    "\u{1D724}"=>"\u0399", "\u{1D725}"=>"\u039A", "\u{1D726}"=>"\u039B", "\u{1D727}"=>"\u039C", "\u{1D728}"=>"\u039D", "\u{1D729}"=>"\u039E", "\u{1D72A}"=>"\u039F", "\u{1D72B}"=>"\u03A0",
-    "\u{1D72C}"=>"\u03A1", "\u{1D72D}"=>"\u0398", "\u{1D72E}"=>"\u03A3", "\u{1D72F}"=>"\u03A4", "\u{1D730}"=>"\u03A5", "\u{1D731}"=>"\u03A6", "\u{1D732}"=>"\u03A7", "\u{1D733}"=>"\u03A8",
-    "\u{1D734}"=>"\u03A9", "\u{1D735}"=>"\u2207", "\u{1D736}"=>"\u03B1", "\u{1D737}"=>"\u03B2", "\u{1D738}"=>"\u03B3", "\u{1D739}"=>"\u03B4", "\u{1D73A}"=>"\u03B5", "\u{1D73B}"=>"\u03B6",
-    "\u{1D73C}"=>"\u03B7", "\u{1D73D}"=>"\u03B8", "\u{1D73E}"=>"\u03B9", "\u{1D73F}"=>"\u03BA", "\u{1D740}"=>"\u03BB", "\u{1D741}"=>"\u03BC", "\u{1D742}"=>"\u03BD", "\u{1D743}"=>"\u03BE",
-    "\u{1D744}"=>"\u03BF", "\u{1D745}"=>"\u03C0", "\u{1D746}"=>"\u03C1", "\u{1D747}"=>"\u03C2", "\u{1D748}"=>"\u03C3", "\u{1D749}"=>"\u03C4", "\u{1D74A}"=>"\u03C5", "\u{1D74B}"=>"\u03C6",
-    "\u{1D74C}"=>"\u03C7", "\u{1D74D}"=>"\u03C8", "\u{1D74E}"=>"\u03C9", "\u{1D74F}"=>"\u2202", "\u{1D750}"=>"\u03B5", "\u{1D751}"=>"\u03B8", "\u{1D752}"=>"\u03BA", "\u{1D753}"=>"\u03C6",
-    "\u{1D754}"=>"\u03C1", "\u{1D755}"=>"\u03C0", "\u{1D756}"=>"\u0391", "\u{1D757}"=>"\u0392", "\u{1D758}"=>"\u0393", "\u{1D759}"=>"\u0394", "\u{1D75A}"=>"\u0395", "\u{1D75B}"=>"\u0396",
-    "\u{1D75C}"=>"\u0397", "\u{1D75D}"=>"\u0398", "\u{1D75E}"=>"\u0399", "\u{1D75F}"=>"\u039A", "\u{1D760}"=>"\u039B", "\u{1D761}"=>"\u039C", "\u{1D762}"=>"\u039D", "\u{1D763}"=>"\u039E",
-    "\u{1D764}"=>"\u039F", "\u{1D765}"=>"\u03A0", "\u{1D766}"=>"\u03A1", "\u{1D767}"=>"\u0398", "\u{1D768}"=>"\u03A3", "\u{1D769}"=>"\u03A4", "\u{1D76A}"=>"\u03A5", "\u{1D76B}"=>"\u03A6",
-    "\u{1D76C}"=>"\u03A7", "\u{1D76D}"=>"\u03A8", "\u{1D76E}"=>"\u03A9", "\u{1D76F}"=>"\u2207", "\u{1D770}"=>"\u03B1", "\u{1D771}"=>"\u03B2", "\u{1D772}"=>"\u03B3", "\u{1D773}"=>"\u03B4",
-    "\u{1D774}"=>"\u03B5", "\u{1D775}"=>"\u03B6", "\u{1D776}"=>"\u03B7", "\u{1D777}"=>"\u03B8", "\u{1D778}"=>"\u03B9", "\u{1D779}"=>"\u03BA", "\u{1D77A}"=>"\u03BB", "\u{1D77B}"=>"\u03BC",
-    "\u{1D77C}"=>"\u03BD", "\u{1D77D}"=>"\u03BE", "\u{1D77E}"=>"\u03BF", "\u{1D77F}"=>"\u03C0", "\u{1D780}"=>"\u03C1", "\u{1D781}"=>"\u03C2", "\u{1D782}"=>"\u03C3", "\u{1D783}"=>"\u03C4",
-    "\u{1D784}"=>"\u03C5", "\u{1D785}"=>"\u03C6", "\u{1D786}"=>"\u03C7", "\u{1D787}"=>"\u03C8", "\u{1D788}"=>"\u03C9", "\u{1D789}"=>"\u2202", "\u{1D78A}"=>"\u03B5", "\u{1D78B}"=>"\u03B8",
-    "\u{1D78C}"=>"\u03BA", "\u{1D78D}"=>"\u03C6", "\u{1D78E}"=>"\u03C1", "\u{1D78F}"=>"\u03C0", "\u{1D790}"=>"\u0391", "\u{1D791}"=>"\u0392", "\u{1D792}"=>"\u0393", "\u{1D793}"=>"\u0394",
-    "\u{1D794}"=>"\u0395", "\u{1D795}"=>"\u0396", "\u{1D796}"=>"\u0397", "\u{1D797}"=>"\u0398", "\u{1D798}"=>"\u0399", "\u{1D799}"=>"\u039A", "\u{1D79A}"=>"\u039B", "\u{1D79B}"=>"\u039C",
-    "\u{1D79C}"=>"\u039D", "\u{1D79D}"=>"\u039E", "\u{1D79E}"=>"\u039F", "\u{1D79F}"=>"\u03A0", "\u{1D7A0}"=>"\u03A1", "\u{1D7A1}"=>"\u0398", "\u{1D7A2}"=>"\u03A3", "\u{1D7A3}"=>"\u03A4",
-    "\u{1D7A4}"=>"\u03A5", "\u{1D7A5}"=>"\u03A6", "\u{1D7A6}"=>"\u03A7", "\u{1D7A7}"=>"\u03A8", "\u{1D7A8}"=>"\u03A9", "\u{1D7A9}"=>"\u2207", "\u{1D7AA}"=>"\u03B1", "\u{1D7AB}"=>"\u03B2",
-    "\u{1D7AC}"=>"\u03B3", "\u{1D7AD}"=>"\u03B4", "\u{1D7AE}"=>"\u03B5", "\u{1D7AF}"=>"\u03B6", "\u{1D7B0}"=>"\u03B7", "\u{1D7B1}"=>"\u03B8", "\u{1D7B2}"=>"\u03B9", "\u{1D7B3}"=>"\u03BA",
-    "\u{1D7B4}"=>"\u03BB", "\u{1D7B5}"=>"\u03BC", "\u{1D7B6}"=>"\u03BD", "\u{1D7B7}"=>"\u03BE", "\u{1D7B8}"=>"\u03BF", "\u{1D7B9}"=>"\u03C0", "\u{1D7BA}"=>"\u03C1", "\u{1D7BB}"=>"\u03C2",
-    "\u{1D7BC}"=>"\u03C3", "\u{1D7BD}"=>"\u03C4", "\u{1D7BE}"=>"\u03C5", "\u{1D7BF}"=>"\u03C6", "\u{1D7C0}"=>"\u03C7", "\u{1D7C1}"=>"\u03C8", "\u{1D7C2}"=>"\u03C9", "\u{1D7C3}"=>"\u2202",
-    "\u{1D7C4}"=>"\u03B5", "\u{1D7C5}"=>"\u03B8", "\u{1D7C6}"=>"\u03BA", "\u{1D7C7}"=>"\u03C6", "\u{1D7C8}"=>"\u03C1", "\u{1D7C9}"=>"\u03C0", "\u{1D7CA}"=>"\u03DC", "\u{1D7CB}"=>"\u03DD",
-    "\u{1D7CE}"=>"0", "\u{1D7CF}"=>"1", "\u{1D7D0}"=>"2", "\u{1D7D1}"=>"3", "\u{1D7D2}"=>"4", "\u{1D7D3}"=>"5", "\u{1D7D4}"=>"6", "\u{1D7D5}"=>"7",
-    "\u{1D7D6}"=>"8", "\u{1D7D7}"=>"9", "\u{1D7D8}"=>"0", "\u{1D7D9}"=>"1", "\u{1D7DA}"=>"2", "\u{1D7DB}"=>"3", "\u{1D7DC}"=>"4", "\u{1D7DD}"=>"5",
-    "\u{1D7DE}"=>"6", "\u{1D7DF}"=>"7", "\u{1D7E0}"=>"8", "\u{1D7E1}"=>"9", "\u{1D7E2}"=>"0", "\u{1D7E3}"=>"1", "\u{1D7E4}"=>"2", "\u{1D7E5}"=>"3",
-    "\u{1D7E6}"=>"4", "\u{1D7E7}"=>"5", "\u{1D7E8}"=>"6", "\u{1D7E9}"=>"7", "\u{1D7EA}"=>"8", "\u{1D7EB}"=>"9", "\u{1D7EC}"=>"0", "\u{1D7ED}"=>"1",
-    "\u{1D7EE}"=>"2", "\u{1D7EF}"=>"3", "\u{1D7F0}"=>"4", "\u{1D7F1}"=>"5", "\u{1D7F2}"=>"6", "\u{1D7F3}"=>"7", "\u{1D7F4}"=>"8", "\u{1D7F5}"=>"9",
-    "\u{1D7F6}"=>"0", "\u{1D7F7}"=>"1", "\u{1D7F8}"=>"2", "\u{1D7F9}"=>"3", "\u{1D7FA}"=>"4", "\u{1D7FB}"=>"5", "\u{1D7FC}"=>"6", "\u{1D7FD}"=>"7",
-    "\u{1D7FE}"=>"8", "\u{1D7FF}"=>"9", "\u{1EE00}"=>"\u0627", "\u{1EE01}"=>"\u0628", "\u{1EE02}"=>"\u062C", "\u{1EE03}"=>"\u062F", "\u{1EE05}"=>"\u0648", "\u{1EE06}"=>"\u0632",
-    "\u{1EE07}"=>"\u062D", "\u{1EE08}"=>"\u0637", "\u{1EE09}"=>"\u064A", "\u{1EE0A}"=>"\u0643", "\u{1EE0B}"=>"\u0644", "\u{1EE0C}"=>"\u0645", "\u{1EE0D}"=>"\u0646", "\u{1EE0E}"=>"\u0633",
-    "\u{1EE0F}"=>"\u0639", "\u{1EE10}"=>"\u0641", "\u{1EE11}"=>"\u0635", "\u{1EE12}"=>"\u0642", "\u{1EE13}"=>"\u0631", "\u{1EE14}"=>"\u0634", "\u{1EE15}"=>"\u062A", "\u{1EE16}"=>"\u062B",
-    "\u{1EE17}"=>"\u062E", "\u{1EE18}"=>"\u0630", "\u{1EE19}"=>"\u0636", "\u{1EE1A}"=>"\u0638", "\u{1EE1B}"=>"\u063A", "\u{1EE1C}"=>"\u066E", "\u{1EE1D}"=>"\u06BA", "\u{1EE1E}"=>"\u06A1",
-    "\u{1EE1F}"=>"\u066F", "\u{1EE21}"=>"\u0628", "\u{1EE22}"=>"\u062C", "\u{1EE24}"=>"\u0647", "\u{1EE27}"=>"\u062D", "\u{1EE29}"=>"\u064A", "\u{1EE2A}"=>"\u0643", "\u{1EE2B}"=>"\u0644",
-    "\u{1EE2C}"=>"\u0645", "\u{1EE2D}"=>"\u0646", "\u{1EE2E}"=>"\u0633", "\u{1EE2F}"=>"\u0639", "\u{1EE30}"=>"\u0641", "\u{1EE31}"=>"\u0635", "\u{1EE32}"=>"\u0642", "\u{1EE34}"=>"\u0634",
-    "\u{1EE35}"=>"\u062A", "\u{1EE36}"=>"\u062B", "\u{1EE37}"=>"\u062E", "\u{1EE39}"=>"\u0636", "\u{1EE3B}"=>"\u063A", "\u{1EE42}"=>"\u062C", "\u{1EE47}"=>"\u062D", "\u{1EE49}"=>"\u064A",
-    "\u{1EE4B}"=>"\u0644", "\u{1EE4D}"=>"\u0646", "\u{1EE4E}"=>"\u0633", "\u{1EE4F}"=>"\u0639", "\u{1EE51}"=>"\u0635", "\u{1EE52}"=>"\u0642", "\u{1EE54}"=>"\u0634", "\u{1EE57}"=>"\u062E",
-    "\u{1EE59}"=>"\u0636", "\u{1EE5B}"=>"\u063A", "\u{1EE5D}"=>"\u06BA", "\u{1EE5F}"=>"\u066F", "\u{1EE61}"=>"\u0628", "\u{1EE62}"=>"\u062C", "\u{1EE64}"=>"\u0647", "\u{1EE67}"=>"\u062D",
-    "\u{1EE68}"=>"\u0637", "\u{1EE69}"=>"\u064A", "\u{1EE6A}"=>"\u0643", "\u{1EE6C}"=>"\u0645", "\u{1EE6D}"=>"\u0646", "\u{1EE6E}"=>"\u0633", "\u{1EE6F}"=>"\u0639", "\u{1EE70}"=>"\u0641",
-    "\u{1EE71}"=>"\u0635", "\u{1EE72}"=>"\u0642", "\u{1EE74}"=>"\u0634", "\u{1EE75}"=>"\u062A", "\u{1EE76}"=>"\u062B", "\u{1EE77}"=>"\u062E", "\u{1EE79}"=>"\u0636", "\u{1EE7A}"=>"\u0638",
-    "\u{1EE7B}"=>"\u063A", "\u{1EE7C}"=>"\u066E", "\u{1EE7E}"=>"\u06A1", "\u{1EE80}"=>"\u0627", "\u{1EE81}"=>"\u0628", "\u{1EE82}"=>"\u062C", "\u{1EE83}"=>"\u062F", "\u{1EE84}"=>"\u0647",
-    "\u{1EE85}"=>"\u0648", "\u{1EE86}"=>"\u0632", "\u{1EE87}"=>"\u062D", "\u{1EE88}"=>"\u0637", "\u{1EE89}"=>"\u064A", "\u{1EE8B}"=>"\u0644", "\u{1EE8C}"=>"\u0645", "\u{1EE8D}"=>"\u0646",
-    "\u{1EE8E}"=>"\u0633", "\u{1EE8F}"=>"\u0639", "\u{1EE90}"=>"\u0641", "\u{1EE91}"=>"\u0635", "\u{1EE92}"=>"\u0642", "\u{1EE93}"=>"\u0631", "\u{1EE94}"=>"\u0634", "\u{1EE95}"=>"\u062A",
-    "\u{1EE96}"=>"\u062B", "\u{1EE97}"=>"\u062E", "\u{1EE98}"=>"\u0630", "\u{1EE99}"=>"\u0636", "\u{1EE9A}"=>"\u0638", "\u{1EE9B}"=>"\u063A", "\u{1EEA1}"=>"\u0628", "\u{1EEA2}"=>"\u062C",
-    "\u{1EEA3}"=>"\u062F", "\u{1EEA5}"=>"\u0648", "\u{1EEA6}"=>"\u0632", "\u{1EEA7}"=>"\u062D", "\u{1EEA8}"=>"\u0637", "\u{1EEA9}"=>"\u064A", "\u{1EEAB}"=>"\u0644", "\u{1EEAC}"=>"\u0645",
-    "\u{1EEAD}"=>"\u0646", "\u{1EEAE}"=>"\u0633", "\u{1EEAF}"=>"\u0639", "\u{1EEB0}"=>"\u0641", "\u{1EEB1}"=>"\u0635", "\u{1EEB2}"=>"\u0642", "\u{1EEB3}"=>"\u0631", "\u{1EEB4}"=>"\u0634",
-    "\u{1EEB5}"=>"\u062A", "\u{1EEB6}"=>"\u062B", "\u{1EEB7}"=>"\u062E", "\u{1EEB8}"=>"\u0630", "\u{1EEB9}"=>"\u0636", "\u{1EEBA}"=>"\u0638", "\u{1EEBB}"=>"\u063A", "\u{1F100}"=>"0.",
-    "\u{1F101}"=>"0,", "\u{1F102}"=>"1,", "\u{1F103}"=>"2,", "\u{1F104}"=>"3,", "\u{1F105}"=>"4,", "\u{1F106}"=>"5,", "\u{1F107}"=>"6,", "\u{1F108}"=>"7,",
-    "\u{1F109}"=>"8,", "\u{1F10A}"=>"9,", "\u{1F110}"=>"(A)", "\u{1F111}"=>"(B)", "\u{1F112}"=>"(C)", "\u{1F113}"=>"(D)", "\u{1F114}"=>"(E)", "\u{1F115}"=>"(F)",
-    "\u{1F116}"=>"(G)", "\u{1F117}"=>"(H)", "\u{1F118}"=>"(I)", "\u{1F119}"=>"(J)", "\u{1F11A}"=>"(K)", "\u{1F11B}"=>"(L)", "\u{1F11C}"=>"(M)", "\u{1F11D}"=>"(N)",
-    "\u{1F11E}"=>"(O)", "\u{1F11F}"=>"(P)", "\u{1F120}"=>"(Q)", "\u{1F121}"=>"(R)", "\u{1F122}"=>"(S)", "\u{1F123}"=>"(T)", "\u{1F124}"=>"(U)", "\u{1F125}"=>"(V)",
-    "\u{1F126}"=>"(W)", "\u{1F127}"=>"(X)", "\u{1F128}"=>"(Y)", "\u{1F129}"=>"(Z)", "\u{1F12A}"=>"\u3014S\u3015", "\u{1F12B}"=>"C", "\u{1F12C}"=>"R", "\u{1F12D}"=>"CD",
-    "\u{1F12E}"=>"WZ", "\u{1F130}"=>"A", "\u{1F131}"=>"B", "\u{1F132}"=>"C", "\u{1F133}"=>"D", "\u{1F134}"=>"E", "\u{1F135}"=>"F", "\u{1F136}"=>"G",
-    "\u{1F137}"=>"H", "\u{1F138}"=>"I", "\u{1F139}"=>"J", "\u{1F13A}"=>"K", "\u{1F13B}"=>"L", "\u{1F13C}"=>"M", "\u{1F13D}"=>"N", "\u{1F13E}"=>"O",
-    "\u{1F13F}"=>"P", "\u{1F140}"=>"Q", "\u{1F141}"=>"R", "\u{1F142}"=>"S", "\u{1F143}"=>"T", "\u{1F144}"=>"U", "\u{1F145}"=>"V", "\u{1F146}"=>"W",
-    "\u{1F147}"=>"X", "\u{1F148}"=>"Y", "\u{1F149}"=>"Z", "\u{1F14A}"=>"HV", "\u{1F14B}"=>"MV", "\u{1F14C}"=>"SD", "\u{1F14D}"=>"SS", "\u{1F14E}"=>"PPV",
-    "\u{1F14F}"=>"WC", "\u{1F16A}"=>"MC", "\u{1F16B}"=>"MD", "\u{1F190}"=>"DJ", "\u{1F200}"=>"\u307B\u304B", "\u{1F201}"=>"\u30B3\u30B3", "\u{1F202}"=>"\u30B5", "\u{1F210}"=>"\u624B",
-    "\u{1F211}"=>"\u5B57", "\u{1F212}"=>"\u53CC", "\u{1F213}"=>"\u30C7", "\u{1F214}"=>"\u4E8C", "\u{1F215}"=>"\u591A", "\u{1F216}"=>"\u89E3", "\u{1F217}"=>"\u5929", "\u{1F218}"=>"\u4EA4",
-    "\u{1F219}"=>"\u6620", "\u{1F21A}"=>"\u7121", "\u{1F21B}"=>"\u6599", "\u{1F21C}"=>"\u524D", "\u{1F21D}"=>"\u5F8C", "\u{1F21E}"=>"\u518D", "\u{1F21F}"=>"\u65B0", "\u{1F220}"=>"\u521D",
-    "\u{1F221}"=>"\u7D42", "\u{1F222}"=>"\u751F", "\u{1F223}"=>"\u8CA9", "\u{1F224}"=>"\u58F0", "\u{1F225}"=>"\u5439", "\u{1F226}"=>"\u6F14", "\u{1F227}"=>"\u6295", "\u{1F228}"=>"\u6355",
-    "\u{1F229}"=>"\u4E00", "\u{1F22A}"=>"\u4E09", "\u{1F22B}"=>"\u904A", "\u{1F22C}"=>"\u5DE6", "\u{1F22D}"=>"\u4E2D", "\u{1F22E}"=>"\u53F3", "\u{1F22F}"=>"\u6307", "\u{1F230}"=>"\u8D70",
-    "\u{1F231}"=>"\u6253", "\u{1F232}"=>"\u7981", "\u{1F233}"=>"\u7A7A", "\u{1F234}"=>"\u5408", "\u{1F235}"=>"\u6E80", "\u{1F236}"=>"\u6709", "\u{1F237}"=>"\u6708", "\u{1F238}"=>"\u7533",
-    "\u{1F239}"=>"\u5272", "\u{1F23A}"=>"\u55B6", "\u{1F23B}"=>"\u914D", "\u{1F240}"=>"\u3014\u672C\u3015", "\u{1F241}"=>"\u3014\u4E09\u3015", "\u{1F242}"=>"\u3014\u4E8C\u3015", "\u{1F243}"=>"\u3014\u5B89\u3015", "\u{1F244}"=>"\u3014\u70B9\u3015",
-    "\u{1F245}"=>"\u3014\u6253\u3015", "\u{1F246}"=>"\u3014\u76D7\u3015", "\u{1F247}"=>"\u3014\u52DD\u3015", "\u{1F248}"=>"\u3014\u6557\u3015", "\u{1F250}"=>"\u5F97", "\u{1F251}"=>"\u53EF", "\u0385"=>" \u0308\u0301", "\u03D3"=>"\u03A5\u0301",
-    "\u03D4"=>"\u03A5\u0308", "\u1E9B"=>"s\u0307", "\u1FC1"=>" \u0308\u0342", "\u1FCD"=>" \u0313\u0300", "\u1FCE"=>" \u0313\u0301", "\u1FCF"=>" \u0313\u0342", "\u1FDD"=>" \u0314\u0300", "\u1FDE"=>" \u0314\u0301",
-    "\u1FDF"=>" \u0314\u0342", "\u1FED"=>" \u0308\u0300", "\u1FEE"=>" \u0308\u0301", "\u1FFD"=>" \u0301", "\u2000"=>" ", "\u2001"=>" ",
+    "\u00A0"=>" ",
+    "\u00A8"=>" \u0308",
+    "\u00AA"=>"a",
+    "\u00AF"=>" \u0304",
+    "\u00B2"=>"2",
+    "\u00B3"=>"3",
+    "\u00B4"=>" \u0301",
+    "\u00B5"=>"\u03BC",
+    "\u00B8"=>" \u0327",
+    "\u00B9"=>"1",
+    "\u00BA"=>"o",
+    "\u00BC"=>"1\u20444",
+    "\u00BD"=>"1\u20442",
+    "\u00BE"=>"3\u20444",
+    "\u0132"=>"IJ",
+    "\u0133"=>"ij",
+    "\u013F"=>"L\u00B7",
+    "\u0140"=>"l\u00B7",
+    "\u0149"=>"\u02BCn",
+    "\u017F"=>"s",
+    "\u01C4"=>"D\u017D",
+    "\u01C5"=>"D\u017E",
+    "\u01C6"=>"d\u017E",
+    "\u01C7"=>"LJ",
+    "\u01C8"=>"Lj",
+    "\u01C9"=>"lj",
+    "\u01CA"=>"NJ",
+    "\u01CB"=>"Nj",
+    "\u01CC"=>"nj",
+    "\u01F1"=>"DZ",
+    "\u01F2"=>"Dz",
+    "\u01F3"=>"dz",
+    "\u02B0"=>"h",
+    "\u02B1"=>"\u0266",
+    "\u02B2"=>"j",
+    "\u02B3"=>"r",
+    "\u02B4"=>"\u0279",
+    "\u02B5"=>"\u027B",
+    "\u02B6"=>"\u0281",
+    "\u02B7"=>"w",
+    "\u02B8"=>"y",
+    "\u02D8"=>" \u0306",
+    "\u02D9"=>" \u0307",
+    "\u02DA"=>" \u030A",
+    "\u02DB"=>" \u0328",
+    "\u02DC"=>" \u0303",
+    "\u02DD"=>" \u030B",
+    "\u02E0"=>"\u0263",
+    "\u02E1"=>"l",
+    "\u02E2"=>"s",
+    "\u02E3"=>"x",
+    "\u02E4"=>"\u0295",
+    "\u037A"=>" \u0345",
+    "\u0384"=>" \u0301",
+    "\u03D0"=>"\u03B2",
+    "\u03D1"=>"\u03B8",
+    "\u03D2"=>"\u03A5",
+    "\u03D5"=>"\u03C6",
+    "\u03D6"=>"\u03C0",
+    "\u03F0"=>"\u03BA",
+    "\u03F1"=>"\u03C1",
+    "\u03F2"=>"\u03C2",
+    "\u03F4"=>"\u0398",
+    "\u03F5"=>"\u03B5",
+    "\u03F9"=>"\u03A3",
+    "\u0587"=>"\u0565\u0582",
+    "\u0675"=>"\u0627\u0674",
+    "\u0676"=>"\u0648\u0674",
+    "\u0677"=>"\u06C7\u0674",
+    "\u0678"=>"\u064A\u0674",
+    "\u0E33"=>"\u0E4D\u0E32",
+    "\u0EB3"=>"\u0ECD\u0EB2",
+    "\u0EDC"=>"\u0EAB\u0E99",
+    "\u0EDD"=>"\u0EAB\u0EA1",
+    "\u0F0C"=>"\u0F0B",
+    "\u0F77"=>"\u0FB2\u0F81",
+    "\u0F79"=>"\u0FB3\u0F81",
+    "\u10FC"=>"\u10DC",
+    "\u1D2C"=>"A",
+    "\u1D2D"=>"\u00C6",
+    "\u1D2E"=>"B",
+    "\u1D30"=>"D",
+    "\u1D31"=>"E",
+    "\u1D32"=>"\u018E",
+    "\u1D33"=>"G",
+    "\u1D34"=>"H",
+    "\u1D35"=>"I",
+    "\u1D36"=>"J",
+    "\u1D37"=>"K",
+    "\u1D38"=>"L",
+    "\u1D39"=>"M",
+    "\u1D3A"=>"N",
+    "\u1D3C"=>"O",
+    "\u1D3D"=>"\u0222",
+    "\u1D3E"=>"P",
+    "\u1D3F"=>"R",
+    "\u1D40"=>"T",
+    "\u1D41"=>"U",
+    "\u1D42"=>"W",
+    "\u1D43"=>"a",
+    "\u1D44"=>"\u0250",
+    "\u1D45"=>"\u0251",
+    "\u1D46"=>"\u1D02",
+    "\u1D47"=>"b",
+    "\u1D48"=>"d",
+    "\u1D49"=>"e",
+    "\u1D4A"=>"\u0259",
+    "\u1D4B"=>"\u025B",
+    "\u1D4C"=>"\u025C",
+    "\u1D4D"=>"g",
+    "\u1D4F"=>"k",
+    "\u1D50"=>"m",
+    "\u1D51"=>"\u014B",
+    "\u1D52"=>"o",
+    "\u1D53"=>"\u0254",
+    "\u1D54"=>"\u1D16",
+    "\u1D55"=>"\u1D17",
+    "\u1D56"=>"p",
+    "\u1D57"=>"t",
+    "\u1D58"=>"u",
+    "\u1D59"=>"\u1D1D",
+    "\u1D5A"=>"\u026F",
+    "\u1D5B"=>"v",
+    "\u1D5C"=>"\u1D25",
+    "\u1D5D"=>"\u03B2",
+    "\u1D5E"=>"\u03B3",
+    "\u1D5F"=>"\u03B4",
+    "\u1D60"=>"\u03C6",
+    "\u1D61"=>"\u03C7",
+    "\u1D62"=>"i",
+    "\u1D63"=>"r",
+    "\u1D64"=>"u",
+    "\u1D65"=>"v",
+    "\u1D66"=>"\u03B2",
+    "\u1D67"=>"\u03B3",
+    "\u1D68"=>"\u03C1",
+    "\u1D69"=>"\u03C6",
+    "\u1D6A"=>"\u03C7",
+    "\u1D78"=>"\u043D",
+    "\u1D9B"=>"\u0252",
+    "\u1D9C"=>"c",
+    "\u1D9D"=>"\u0255",
+    "\u1D9E"=>"\u00F0",
+    "\u1D9F"=>"\u025C",
+    "\u1DA0"=>"f",
+    "\u1DA1"=>"\u025F",
+    "\u1DA2"=>"\u0261",
+    "\u1DA3"=>"\u0265",
+    "\u1DA4"=>"\u0268",
+    "\u1DA5"=>"\u0269",
+    "\u1DA6"=>"\u026A",
+    "\u1DA7"=>"\u1D7B",
+    "\u1DA8"=>"\u029D",
+    "\u1DA9"=>"\u026D",
+    "\u1DAA"=>"\u1D85",
+    "\u1DAB"=>"\u029F",
+    "\u1DAC"=>"\u0271",
+    "\u1DAD"=>"\u0270",
+    "\u1DAE"=>"\u0272",
+    "\u1DAF"=>"\u0273",
+    "\u1DB0"=>"\u0274",
+    "\u1DB1"=>"\u0275",
+    "\u1DB2"=>"\u0278",
+    "\u1DB3"=>"\u0282",
+    "\u1DB4"=>"\u0283",
+    "\u1DB5"=>"\u01AB",
+    "\u1DB6"=>"\u0289",
+    "\u1DB7"=>"\u028A",
+    "\u1DB8"=>"\u1D1C",
+    "\u1DB9"=>"\u028B",
+    "\u1DBA"=>"\u028C",
+    "\u1DBB"=>"z",
+    "\u1DBC"=>"\u0290",
+    "\u1DBD"=>"\u0291",
+    "\u1DBE"=>"\u0292",
+    "\u1DBF"=>"\u03B8",
+    "\u1E9A"=>"a\u02BE",
+    "\u1FBD"=>" \u0313",
+    "\u1FBF"=>" \u0313",
+    "\u1FC0"=>" \u0342",
+    "\u1FFE"=>" \u0314",
+    "\u2002"=>" ",
+    "\u2003"=>" ",
+    "\u2004"=>" ",
+    "\u2005"=>" ",
+    "\u2006"=>" ",
+    "\u2007"=>" ",
+    "\u2008"=>" ",
+    "\u2009"=>" ",
+    "\u200A"=>" ",
+    "\u2011"=>"\u2010",
+    "\u2017"=>" \u0333",
+    "\u2024"=>".",
+    "\u2025"=>"..",
+    "\u2026"=>"...",
+    "\u202F"=>" ",
+    "\u2033"=>"\u2032\u2032",
+    "\u2034"=>"\u2032\u2032\u2032",
+    "\u2036"=>"\u2035\u2035",
+    "\u2037"=>"\u2035\u2035\u2035",
+    "\u203C"=>"!!",
+    "\u203E"=>" \u0305",
+    "\u2047"=>"??",
+    "\u2048"=>"?!",
+    "\u2049"=>"!?",
+    "\u2057"=>"\u2032\u2032\u2032\u2032",
+    "\u205F"=>" ",
+    "\u2070"=>"0",
+    "\u2071"=>"i",
+    "\u2074"=>"4",
+    "\u2075"=>"5",
+    "\u2076"=>"6",
+    "\u2077"=>"7",
+    "\u2078"=>"8",
+    "\u2079"=>"9",
+    "\u207A"=>"+",
+    "\u207B"=>"\u2212",
+    "\u207C"=>"=",
+    "\u207D"=>"(",
+    "\u207E"=>")",
+    "\u207F"=>"n",
+    "\u2080"=>"0",
+    "\u2081"=>"1",
+    "\u2082"=>"2",
+    "\u2083"=>"3",
+    "\u2084"=>"4",
+    "\u2085"=>"5",
+    "\u2086"=>"6",
+    "\u2087"=>"7",
+    "\u2088"=>"8",
+    "\u2089"=>"9",
+    "\u208A"=>"+",
+    "\u208B"=>"\u2212",
+    "\u208C"=>"=",
+    "\u208D"=>"(",
+    "\u208E"=>")",
+    "\u2090"=>"a",
+    "\u2091"=>"e",
+    "\u2092"=>"o",
+    "\u2093"=>"x",
+    "\u2094"=>"\u0259",
+    "\u2095"=>"h",
+    "\u2096"=>"k",
+    "\u2097"=>"l",
+    "\u2098"=>"m",
+    "\u2099"=>"n",
+    "\u209A"=>"p",
+    "\u209B"=>"s",
+    "\u209C"=>"t",
+    "\u20A8"=>"Rs",
+    "\u2100"=>"a/c",
+    "\u2101"=>"a/s",
+    "\u2102"=>"C",
+    "\u2103"=>"\u00B0C",
+    "\u2105"=>"c/o",
+    "\u2106"=>"c/u",
+    "\u2107"=>"\u0190",
+    "\u2109"=>"\u00B0F",
+    "\u210A"=>"g",
+    "\u210B"=>"H",
+    "\u210C"=>"H",
+    "\u210D"=>"H",
+    "\u210E"=>"h",
+    "\u210F"=>"\u0127",
+    "\u2110"=>"I",
+    "\u2111"=>"I",
+    "\u2112"=>"L",
+    "\u2113"=>"l",
+    "\u2115"=>"N",
+    "\u2116"=>"No",
+    "\u2119"=>"P",
+    "\u211A"=>"Q",
+    "\u211B"=>"R",
+    "\u211C"=>"R",
+    "\u211D"=>"R",
+    "\u2120"=>"SM",
+    "\u2121"=>"TEL",
+    "\u2122"=>"TM",
+    "\u2124"=>"Z",
+    "\u2128"=>"Z",
+    "\u212C"=>"B",
+    "\u212D"=>"C",
+    "\u212F"=>"e",
+    "\u2130"=>"E",
+    "\u2131"=>"F",
+    "\u2133"=>"M",
+    "\u2134"=>"o",
+    "\u2135"=>"\u05D0",
+    "\u2136"=>"\u05D1",
+    "\u2137"=>"\u05D2",
+    "\u2138"=>"\u05D3",
+    "\u2139"=>"i",
+    "\u213B"=>"FAX",
+    "\u213C"=>"\u03C0",
+    "\u213D"=>"\u03B3",
+    "\u213E"=>"\u0393",
+    "\u213F"=>"\u03A0",
+    "\u2140"=>"\u2211",
+    "\u2145"=>"D",
+    "\u2146"=>"d",
+    "\u2147"=>"e",
+    "\u2148"=>"i",
+    "\u2149"=>"j",
+    "\u2150"=>"1\u20447",
+    "\u2151"=>"1\u20449",
+    "\u2152"=>"1\u204410",
+    "\u2153"=>"1\u20443",
+    "\u2154"=>"2\u20443",
+    "\u2155"=>"1\u20445",
+    "\u2156"=>"2\u20445",
+    "\u2157"=>"3\u20445",
+    "\u2158"=>"4\u20445",
+    "\u2159"=>"1\u20446",
+    "\u215A"=>"5\u20446",
+    "\u215B"=>"1\u20448",
+    "\u215C"=>"3\u20448",
+    "\u215D"=>"5\u20448",
+    "\u215E"=>"7\u20448",
+    "\u215F"=>"1\u2044",
+    "\u2160"=>"I",
+    "\u2161"=>"II",
+    "\u2162"=>"III",
+    "\u2163"=>"IV",
+    "\u2164"=>"V",
+    "\u2165"=>"VI",
+    "\u2166"=>"VII",
+    "\u2167"=>"VIII",
+    "\u2168"=>"IX",
+    "\u2169"=>"X",
+    "\u216A"=>"XI",
+    "\u216B"=>"XII",
+    "\u216C"=>"L",
+    "\u216D"=>"C",
+    "\u216E"=>"D",
+    "\u216F"=>"M",
+    "\u2170"=>"i",
+    "\u2171"=>"ii",
+    "\u2172"=>"iii",
+    "\u2173"=>"iv",
+    "\u2174"=>"v",
+    "\u2175"=>"vi",
+    "\u2176"=>"vii",
+    "\u2177"=>"viii",
+    "\u2178"=>"ix",
+    "\u2179"=>"x",
+    "\u217A"=>"xi",
+    "\u217B"=>"xii",
+    "\u217C"=>"l",
+    "\u217D"=>"c",
+    "\u217E"=>"d",
+    "\u217F"=>"m",
+    "\u2189"=>"0\u20443",
+    "\u222C"=>"\u222B\u222B",
+    "\u222D"=>"\u222B\u222B\u222B",
+    "\u222F"=>"\u222E\u222E",
+    "\u2230"=>"\u222E\u222E\u222E",
+    "\u2460"=>"1",
+    "\u2461"=>"2",
+    "\u2462"=>"3",
+    "\u2463"=>"4",
+    "\u2464"=>"5",
+    "\u2465"=>"6",
+    "\u2466"=>"7",
+    "\u2467"=>"8",
+    "\u2468"=>"9",
+    "\u2469"=>"10",
+    "\u246A"=>"11",
+    "\u246B"=>"12",
+    "\u246C"=>"13",
+    "\u246D"=>"14",
+    "\u246E"=>"15",
+    "\u246F"=>"16",
+    "\u2470"=>"17",
+    "\u2471"=>"18",
+    "\u2472"=>"19",
+    "\u2473"=>"20",
+    "\u2474"=>"(1)",
+    "\u2475"=>"(2)",
+    "\u2476"=>"(3)",
+    "\u2477"=>"(4)",
+    "\u2478"=>"(5)",
+    "\u2479"=>"(6)",
+    "\u247A"=>"(7)",
+    "\u247B"=>"(8)",
+    "\u247C"=>"(9)",
+    "\u247D"=>"(10)",
+    "\u247E"=>"(11)",
+    "\u247F"=>"(12)",
+    "\u2480"=>"(13)",
+    "\u2481"=>"(14)",
+    "\u2482"=>"(15)",
+    "\u2483"=>"(16)",
+    "\u2484"=>"(17)",
+    "\u2485"=>"(18)",
+    "\u2486"=>"(19)",
+    "\u2487"=>"(20)",
+    "\u2488"=>"1.",
+    "\u2489"=>"2.",
+    "\u248A"=>"3.",
+    "\u248B"=>"4.",
+    "\u248C"=>"5.",
+    "\u248D"=>"6.",
+    "\u248E"=>"7.",
+    "\u248F"=>"8.",
+    "\u2490"=>"9.",
+    "\u2491"=>"10.",
+    "\u2492"=>"11.",
+    "\u2493"=>"12.",
+    "\u2494"=>"13.",
+    "\u2495"=>"14.",
+    "\u2496"=>"15.",
+    "\u2497"=>"16.",
+    "\u2498"=>"17.",
+    "\u2499"=>"18.",
+    "\u249A"=>"19.",
+    "\u249B"=>"20.",
+    "\u249C"=>"(a)",
+    "\u249D"=>"(b)",
+    "\u249E"=>"(c)",
+    "\u249F"=>"(d)",
+    "\u24A0"=>"(e)",
+    "\u24A1"=>"(f)",
+    "\u24A2"=>"(g)",
+    "\u24A3"=>"(h)",
+    "\u24A4"=>"(i)",
+    "\u24A5"=>"(j)",
+    "\u24A6"=>"(k)",
+    "\u24A7"=>"(l)",
+    "\u24A8"=>"(m)",
+    "\u24A9"=>"(n)",
+    "\u24AA"=>"(o)",
+    "\u24AB"=>"(p)",
+    "\u24AC"=>"(q)",
+    "\u24AD"=>"(r)",
+    "\u24AE"=>"(s)",
+    "\u24AF"=>"(t)",
+    "\u24B0"=>"(u)",
+    "\u24B1"=>"(v)",
+    "\u24B2"=>"(w)",
+    "\u24B3"=>"(x)",
+    "\u24B4"=>"(y)",
+    "\u24B5"=>"(z)",
+    "\u24B6"=>"A",
+    "\u24B7"=>"B",
+    "\u24B8"=>"C",
+    "\u24B9"=>"D",
+    "\u24BA"=>"E",
+    "\u24BB"=>"F",
+    "\u24BC"=>"G",
+    "\u24BD"=>"H",
+    "\u24BE"=>"I",
+    "\u24BF"=>"J",
+    "\u24C0"=>"K",
+    "\u24C1"=>"L",
+    "\u24C2"=>"M",
+    "\u24C3"=>"N",
+    "\u24C4"=>"O",
+    "\u24C5"=>"P",
+    "\u24C6"=>"Q",
+    "\u24C7"=>"R",
+    "\u24C8"=>"S",
+    "\u24C9"=>"T",
+    "\u24CA"=>"U",
+    "\u24CB"=>"V",
+    "\u24CC"=>"W",
+    "\u24CD"=>"X",
+    "\u24CE"=>"Y",
+    "\u24CF"=>"Z",
+    "\u24D0"=>"a",
+    "\u24D1"=>"b",
+    "\u24D2"=>"c",
+    "\u24D3"=>"d",
+    "\u24D4"=>"e",
+    "\u24D5"=>"f",
+    "\u24D6"=>"g",
+    "\u24D7"=>"h",
+    "\u24D8"=>"i",
+    "\u24D9"=>"j",
+    "\u24DA"=>"k",
+    "\u24DB"=>"l",
+    "\u24DC"=>"m",
+    "\u24DD"=>"n",
+    "\u24DE"=>"o",
+    "\u24DF"=>"p",
+    "\u24E0"=>"q",
+    "\u24E1"=>"r",
+    "\u24E2"=>"s",
+    "\u24E3"=>"t",
+    "\u24E4"=>"u",
+    "\u24E5"=>"v",
+    "\u24E6"=>"w",
+    "\u24E7"=>"x",
+    "\u24E8"=>"y",
+    "\u24E9"=>"z",
+    "\u24EA"=>"0",
+    "\u2A0C"=>"\u222B\u222B\u222B\u222B",
+    "\u2A74"=>"::=",
+    "\u2A75"=>"==",
+    "\u2A76"=>"===",
+    "\u2C7C"=>"j",
+    "\u2C7D"=>"V",
+    "\u2D6F"=>"\u2D61",
+    "\u2E9F"=>"\u6BCD",
+    "\u2EF3"=>"\u9F9F",
+    "\u2F00"=>"\u4E00",
+    "\u2F01"=>"\u4E28",
+    "\u2F02"=>"\u4E36",
+    "\u2F03"=>"\u4E3F",
+    "\u2F04"=>"\u4E59",
+    "\u2F05"=>"\u4E85",
+    "\u2F06"=>"\u4E8C",
+    "\u2F07"=>"\u4EA0",
+    "\u2F08"=>"\u4EBA",
+    "\u2F09"=>"\u513F",
+    "\u2F0A"=>"\u5165",
+    "\u2F0B"=>"\u516B",
+    "\u2F0C"=>"\u5182",
+    "\u2F0D"=>"\u5196",
+    "\u2F0E"=>"\u51AB",
+    "\u2F0F"=>"\u51E0",
+    "\u2F10"=>"\u51F5",
+    "\u2F11"=>"\u5200",
+    "\u2F12"=>"\u529B",
+    "\u2F13"=>"\u52F9",
+    "\u2F14"=>"\u5315",
+    "\u2F15"=>"\u531A",
+    "\u2F16"=>"\u5338",
+    "\u2F17"=>"\u5341",
+    "\u2F18"=>"\u535C",
+    "\u2F19"=>"\u5369",
+    "\u2F1A"=>"\u5382",
+    "\u2F1B"=>"\u53B6",
+    "\u2F1C"=>"\u53C8",
+    "\u2F1D"=>"\u53E3",
+    "\u2F1E"=>"\u56D7",
+    "\u2F1F"=>"\u571F",
+    "\u2F20"=>"\u58EB",
+    "\u2F21"=>"\u5902",
+    "\u2F22"=>"\u590A",
+    "\u2F23"=>"\u5915",
+    "\u2F24"=>"\u5927",
+    "\u2F25"=>"\u5973",
+    "\u2F26"=>"\u5B50",
+    "\u2F27"=>"\u5B80",
+    "\u2F28"=>"\u5BF8",
+    "\u2F29"=>"\u5C0F",
+    "\u2F2A"=>"\u5C22",
+    "\u2F2B"=>"\u5C38",
+    "\u2F2C"=>"\u5C6E",
+    "\u2F2D"=>"\u5C71",
+    "\u2F2E"=>"\u5DDB",
+    "\u2F2F"=>"\u5DE5",
+    "\u2F30"=>"\u5DF1",
+    "\u2F31"=>"\u5DFE",
+    "\u2F32"=>"\u5E72",
+    "\u2F33"=>"\u5E7A",
+    "\u2F34"=>"\u5E7F",
+    "\u2F35"=>"\u5EF4",
+    "\u2F36"=>"\u5EFE",
+    "\u2F37"=>"\u5F0B",
+    "\u2F38"=>"\u5F13",
+    "\u2F39"=>"\u5F50",
+    "\u2F3A"=>"\u5F61",
+    "\u2F3B"=>"\u5F73",
+    "\u2F3C"=>"\u5FC3",
+    "\u2F3D"=>"\u6208",
+    "\u2F3E"=>"\u6236",
+    "\u2F3F"=>"\u624B",
+    "\u2F40"=>"\u652F",
+    "\u2F41"=>"\u6534",
+    "\u2F42"=>"\u6587",
+    "\u2F43"=>"\u6597",
+    "\u2F44"=>"\u65A4",
+    "\u2F45"=>"\u65B9",
+    "\u2F46"=>"\u65E0",
+    "\u2F47"=>"\u65E5",
+    "\u2F48"=>"\u66F0",
+    "\u2F49"=>"\u6708",
+    "\u2F4A"=>"\u6728",
+    "\u2F4B"=>"\u6B20",
+    "\u2F4C"=>"\u6B62",
+    "\u2F4D"=>"\u6B79",
+    "\u2F4E"=>"\u6BB3",
+    "\u2F4F"=>"\u6BCB",
+    "\u2F50"=>"\u6BD4",
+    "\u2F51"=>"\u6BDB",
+    "\u2F52"=>"\u6C0F",
+    "\u2F53"=>"\u6C14",
+    "\u2F54"=>"\u6C34",
+    "\u2F55"=>"\u706B",
+    "\u2F56"=>"\u722A",
+    "\u2F57"=>"\u7236",
+    "\u2F58"=>"\u723B",
+    "\u2F59"=>"\u723F",
+    "\u2F5A"=>"\u7247",
+    "\u2F5B"=>"\u7259",
+    "\u2F5C"=>"\u725B",
+    "\u2F5D"=>"\u72AC",
+    "\u2F5E"=>"\u7384",
+    "\u2F5F"=>"\u7389",
+    "\u2F60"=>"\u74DC",
+    "\u2F61"=>"\u74E6",
+    "\u2F62"=>"\u7518",
+    "\u2F63"=>"\u751F",
+    "\u2F64"=>"\u7528",
+    "\u2F65"=>"\u7530",
+    "\u2F66"=>"\u758B",
+    "\u2F67"=>"\u7592",
+    "\u2F68"=>"\u7676",
+    "\u2F69"=>"\u767D",
+    "\u2F6A"=>"\u76AE",
+    "\u2F6B"=>"\u76BF",
+    "\u2F6C"=>"\u76EE",
+    "\u2F6D"=>"\u77DB",
+    "\u2F6E"=>"\u77E2",
+    "\u2F6F"=>"\u77F3",
+    "\u2F70"=>"\u793A",
+    "\u2F71"=>"\u79B8",
+    "\u2F72"=>"\u79BE",
+    "\u2F73"=>"\u7A74",
+    "\u2F74"=>"\u7ACB",
+    "\u2F75"=>"\u7AF9",
+    "\u2F76"=>"\u7C73",
+    "\u2F77"=>"\u7CF8",
+    "\u2F78"=>"\u7F36",
+    "\u2F79"=>"\u7F51",
+    "\u2F7A"=>"\u7F8A",
+    "\u2F7B"=>"\u7FBD",
+    "\u2F7C"=>"\u8001",
+    "\u2F7D"=>"\u800C",
+    "\u2F7E"=>"\u8012",
+    "\u2F7F"=>"\u8033",
+    "\u2F80"=>"\u807F",
+    "\u2F81"=>"\u8089",
+    "\u2F82"=>"\u81E3",
+    "\u2F83"=>"\u81EA",
+    "\u2F84"=>"\u81F3",
+    "\u2F85"=>"\u81FC",
+    "\u2F86"=>"\u820C",
+    "\u2F87"=>"\u821B",
+    "\u2F88"=>"\u821F",
+    "\u2F89"=>"\u826E",
+    "\u2F8A"=>"\u8272",
+    "\u2F8B"=>"\u8278",
+    "\u2F8C"=>"\u864D",
+    "\u2F8D"=>"\u866B",
+    "\u2F8E"=>"\u8840",
+    "\u2F8F"=>"\u884C",
+    "\u2F90"=>"\u8863",
+    "\u2F91"=>"\u897E",
+    "\u2F92"=>"\u898B",
+    "\u2F93"=>"\u89D2",
+    "\u2F94"=>"\u8A00",
+    "\u2F95"=>"\u8C37",
+    "\u2F96"=>"\u8C46",
+    "\u2F97"=>"\u8C55",
+    "\u2F98"=>"\u8C78",
+    "\u2F99"=>"\u8C9D",
+    "\u2F9A"=>"\u8D64",
+    "\u2F9B"=>"\u8D70",
+    "\u2F9C"=>"\u8DB3",
+    "\u2F9D"=>"\u8EAB",
+    "\u2F9E"=>"\u8ECA",
+    "\u2F9F"=>"\u8F9B",
+    "\u2FA0"=>"\u8FB0",
+    "\u2FA1"=>"\u8FB5",
+    "\u2FA2"=>"\u9091",
+    "\u2FA3"=>"\u9149",
+    "\u2FA4"=>"\u91C6",
+    "\u2FA5"=>"\u91CC",
+    "\u2FA6"=>"\u91D1",
+    "\u2FA7"=>"\u9577",
+    "\u2FA8"=>"\u9580",
+    "\u2FA9"=>"\u961C",
+    "\u2FAA"=>"\u96B6",
+    "\u2FAB"=>"\u96B9",
+    "\u2FAC"=>"\u96E8",
+    "\u2FAD"=>"\u9751",
+    "\u2FAE"=>"\u975E",
+    "\u2FAF"=>"\u9762",
+    "\u2FB0"=>"\u9769",
+    "\u2FB1"=>"\u97CB",
+    "\u2FB2"=>"\u97ED",
+    "\u2FB3"=>"\u97F3",
+    "\u2FB4"=>"\u9801",
+    "\u2FB5"=>"\u98A8",
+    "\u2FB6"=>"\u98DB",
+    "\u2FB7"=>"\u98DF",
+    "\u2FB8"=>"\u9996",
+    "\u2FB9"=>"\u9999",
+    "\u2FBA"=>"\u99AC",
+    "\u2FBB"=>"\u9AA8",
+    "\u2FBC"=>"\u9AD8",
+    "\u2FBD"=>"\u9ADF",
+    "\u2FBE"=>"\u9B25",
+    "\u2FBF"=>"\u9B2F",
+    "\u2FC0"=>"\u9B32",
+    "\u2FC1"=>"\u9B3C",
+    "\u2FC2"=>"\u9B5A",
+    "\u2FC3"=>"\u9CE5",
+    "\u2FC4"=>"\u9E75",
+    "\u2FC5"=>"\u9E7F",
+    "\u2FC6"=>"\u9EA5",
+    "\u2FC7"=>"\u9EBB",
+    "\u2FC8"=>"\u9EC3",
+    "\u2FC9"=>"\u9ECD",
+    "\u2FCA"=>"\u9ED1",
+    "\u2FCB"=>"\u9EF9",
+    "\u2FCC"=>"\u9EFD",
+    "\u2FCD"=>"\u9F0E",
+    "\u2FCE"=>"\u9F13",
+    "\u2FCF"=>"\u9F20",
+    "\u2FD0"=>"\u9F3B",
+    "\u2FD1"=>"\u9F4A",
+    "\u2FD2"=>"\u9F52",
+    "\u2FD3"=>"\u9F8D",
+    "\u2FD4"=>"\u9F9C",
+    "\u2FD5"=>"\u9FA0",
+    "\u3000"=>" ",
+    "\u3036"=>"\u3012",
+    "\u3038"=>"\u5341",
+    "\u3039"=>"\u5344",
+    "\u303A"=>"\u5345",
+    "\u309B"=>" \u3099",
+    "\u309C"=>" \u309A",
+    "\u309F"=>"\u3088\u308A",
+    "\u30FF"=>"\u30B3\u30C8",
+    "\u3131"=>"\u1100",
+    "\u3132"=>"\u1101",
+    "\u3133"=>"\u11AA",
+    "\u3134"=>"\u1102",
+    "\u3135"=>"\u11AC",
+    "\u3136"=>"\u11AD",
+    "\u3137"=>"\u1103",
+    "\u3138"=>"\u1104",
+    "\u3139"=>"\u1105",
+    "\u313A"=>"\u11B0",
+    "\u313B"=>"\u11B1",
+    "\u313C"=>"\u11B2",
+    "\u313D"=>"\u11B3",
+    "\u313E"=>"\u11B4",
+    "\u313F"=>"\u11B5",
+    "\u3140"=>"\u111A",
+    "\u3141"=>"\u1106",
+    "\u3142"=>"\u1107",
+    "\u3143"=>"\u1108",
+    "\u3144"=>"\u1121",
+    "\u3145"=>"\u1109",
+    "\u3146"=>"\u110A",
+    "\u3147"=>"\u110B",
+    "\u3148"=>"\u110C",
+    "\u3149"=>"\u110D",
+    "\u314A"=>"\u110E",
+    "\u314B"=>"\u110F",
+    "\u314C"=>"\u1110",
+    "\u314D"=>"\u1111",
+    "\u314E"=>"\u1112",
+    "\u314F"=>"\u1161",
+    "\u3150"=>"\u1162",
+    "\u3151"=>"\u1163",
+    "\u3152"=>"\u1164",
+    "\u3153"=>"\u1165",
+    "\u3154"=>"\u1166",
+    "\u3155"=>"\u1167",
+    "\u3156"=>"\u1168",
+    "\u3157"=>"\u1169",
+    "\u3158"=>"\u116A",
+    "\u3159"=>"\u116B",
+    "\u315A"=>"\u116C",
+    "\u315B"=>"\u116D",
+    "\u315C"=>"\u116E",
+    "\u315D"=>"\u116F",
+    "\u315E"=>"\u1170",
+    "\u315F"=>"\u1171",
+    "\u3160"=>"\u1172",
+    "\u3161"=>"\u1173",
+    "\u3162"=>"\u1174",
+    "\u3163"=>"\u1175",
+    "\u3164"=>"\u1160",
+    "\u3165"=>"\u1114",
+    "\u3166"=>"\u1115",
+    "\u3167"=>"\u11C7",
+    "\u3168"=>"\u11C8",
+    "\u3169"=>"\u11CC",
+    "\u316A"=>"\u11CE",
+    "\u316B"=>"\u11D3",
+    "\u316C"=>"\u11D7",
+    "\u316D"=>"\u11D9",
+    "\u316E"=>"\u111C",
+    "\u316F"=>"\u11DD",
+    "\u3170"=>"\u11DF",
+    "\u3171"=>"\u111D",
+    "\u3172"=>"\u111E",
+    "\u3173"=>"\u1120",
+    "\u3174"=>"\u1122",
+    "\u3175"=>"\u1123",
+    "\u3176"=>"\u1127",
+    "\u3177"=>"\u1129",
+    "\u3178"=>"\u112B",
+    "\u3179"=>"\u112C",
+    "\u317A"=>"\u112D",
+    "\u317B"=>"\u112E",
+    "\u317C"=>"\u112F",
+    "\u317D"=>"\u1132",
+    "\u317E"=>"\u1136",
+    "\u317F"=>"\u1140",
+    "\u3180"=>"\u1147",
+    "\u3181"=>"\u114C",
+    "\u3182"=>"\u11F1",
+    "\u3183"=>"\u11F2",
+    "\u3184"=>"\u1157",
+    "\u3185"=>"\u1158",
+    "\u3186"=>"\u1159",
+    "\u3187"=>"\u1184",
+    "\u3188"=>"\u1185",
+    "\u3189"=>"\u1188",
+    "\u318A"=>"\u1191",
+    "\u318B"=>"\u1192",
+    "\u318C"=>"\u1194",
+    "\u318D"=>"\u119E",
+    "\u318E"=>"\u11A1",
+    "\u3192"=>"\u4E00",
+    "\u3193"=>"\u4E8C",
+    "\u3194"=>"\u4E09",
+    "\u3195"=>"\u56DB",
+    "\u3196"=>"\u4E0A",
+    "\u3197"=>"\u4E2D",
+    "\u3198"=>"\u4E0B",
+    "\u3199"=>"\u7532",
+    "\u319A"=>"\u4E59",
+    "\u319B"=>"\u4E19",
+    "\u319C"=>"\u4E01",
+    "\u319D"=>"\u5929",
+    "\u319E"=>"\u5730",
+    "\u319F"=>"\u4EBA",
+    "\u3200"=>"(\u1100)",
+    "\u3201"=>"(\u1102)",
+    "\u3202"=>"(\u1103)",
+    "\u3203"=>"(\u1105)",
+    "\u3204"=>"(\u1106)",
+    "\u3205"=>"(\u1107)",
+    "\u3206"=>"(\u1109)",
+    "\u3207"=>"(\u110B)",
+    "\u3208"=>"(\u110C)",
+    "\u3209"=>"(\u110E)",
+    "\u320A"=>"(\u110F)",
+    "\u320B"=>"(\u1110)",
+    "\u320C"=>"(\u1111)",
+    "\u320D"=>"(\u1112)",
+    "\u320E"=>"(\u1100\u1161)",
+    "\u320F"=>"(\u1102\u1161)",
+    "\u3210"=>"(\u1103\u1161)",
+    "\u3211"=>"(\u1105\u1161)",
+    "\u3212"=>"(\u1106\u1161)",
+    "\u3213"=>"(\u1107\u1161)",
+    "\u3214"=>"(\u1109\u1161)",
+    "\u3215"=>"(\u110B\u1161)",
+    "\u3216"=>"(\u110C\u1161)",
+    "\u3217"=>"(\u110E\u1161)",
+    "\u3218"=>"(\u110F\u1161)",
+    "\u3219"=>"(\u1110\u1161)",
+    "\u321A"=>"(\u1111\u1161)",
+    "\u321B"=>"(\u1112\u1161)",
+    "\u321C"=>"(\u110C\u116E)",
+    "\u321D"=>"(\u110B\u1169\u110C\u1165\u11AB)",
+    "\u321E"=>"(\u110B\u1169\u1112\u116E)",
+    "\u3220"=>"(\u4E00)",
+    "\u3221"=>"(\u4E8C)",
+    "\u3222"=>"(\u4E09)",
+    "\u3223"=>"(\u56DB)",
+    "\u3224"=>"(\u4E94)",
+    "\u3225"=>"(\u516D)",
+    "\u3226"=>"(\u4E03)",
+    "\u3227"=>"(\u516B)",
+    "\u3228"=>"(\u4E5D)",
+    "\u3229"=>"(\u5341)",
+    "\u322A"=>"(\u6708)",
+    "\u322B"=>"(\u706B)",
+    "\u322C"=>"(\u6C34)",
+    "\u322D"=>"(\u6728)",
+    "\u322E"=>"(\u91D1)",
+    "\u322F"=>"(\u571F)",
+    "\u3230"=>"(\u65E5)",
+    "\u3231"=>"(\u682A)",
+    "\u3232"=>"(\u6709)",
+    "\u3233"=>"(\u793E)",
+    "\u3234"=>"(\u540D)",
+    "\u3235"=>"(\u7279)",
+    "\u3236"=>"(\u8CA1)",
+    "\u3237"=>"(\u795D)",
+    "\u3238"=>"(\u52B4)",
+    "\u3239"=>"(\u4EE3)",
+    "\u323A"=>"(\u547C)",
+    "\u323B"=>"(\u5B66)",
+    "\u323C"=>"(\u76E3)",
+    "\u323D"=>"(\u4F01)",
+    "\u323E"=>"(\u8CC7)",
+    "\u323F"=>"(\u5354)",
+    "\u3240"=>"(\u796D)",
+    "\u3241"=>"(\u4F11)",
+    "\u3242"=>"(\u81EA)",
+    "\u3243"=>"(\u81F3)",
+    "\u3244"=>"\u554F",
+    "\u3245"=>"\u5E7C",
+    "\u3246"=>"\u6587",
+    "\u3247"=>"\u7B8F",
+    "\u3250"=>"PTE",
+    "\u3251"=>"21",
+    "\u3252"=>"22",
+    "\u3253"=>"23",
+    "\u3254"=>"24",
+    "\u3255"=>"25",
+    "\u3256"=>"26",
+    "\u3257"=>"27",
+    "\u3258"=>"28",
+    "\u3259"=>"29",
+    "\u325A"=>"30",
+    "\u325B"=>"31",
+    "\u325C"=>"32",
+    "\u325D"=>"33",
+    "\u325E"=>"34",
+    "\u325F"=>"35",
+    "\u3260"=>"\u1100",
+    "\u3261"=>"\u1102",
+    "\u3262"=>"\u1103",
+    "\u3263"=>"\u1105",
+    "\u3264"=>"\u1106",
+    "\u3265"=>"\u1107",
+    "\u3266"=>"\u1109",
+    "\u3267"=>"\u110B",
+    "\u3268"=>"\u110C",
+    "\u3269"=>"\u110E",
+    "\u326A"=>"\u110F",
+    "\u326B"=>"\u1110",
+    "\u326C"=>"\u1111",
+    "\u326D"=>"\u1112",
+    "\u326E"=>"\u1100\u1161",
+    "\u326F"=>"\u1102\u1161",
+    "\u3270"=>"\u1103\u1161",
+    "\u3271"=>"\u1105\u1161",
+    "\u3272"=>"\u1106\u1161",
+    "\u3273"=>"\u1107\u1161",
+    "\u3274"=>"\u1109\u1161",
+    "\u3275"=>"\u110B\u1161",
+    "\u3276"=>"\u110C\u1161",
+    "\u3277"=>"\u110E\u1161",
+    "\u3278"=>"\u110F\u1161",
+    "\u3279"=>"\u1110\u1161",
+    "\u327A"=>"\u1111\u1161",
+    "\u327B"=>"\u1112\u1161",
+    "\u327C"=>"\u110E\u1161\u11B7\u1100\u1169",
+    "\u327D"=>"\u110C\u116E\u110B\u1174",
+    "\u327E"=>"\u110B\u116E",
+    "\u3280"=>"\u4E00",
+    "\u3281"=>"\u4E8C",
+    "\u3282"=>"\u4E09",
+    "\u3283"=>"\u56DB",
+    "\u3284"=>"\u4E94",
+    "\u3285"=>"\u516D",
+    "\u3286"=>"\u4E03",
+    "\u3287"=>"\u516B",
+    "\u3288"=>"\u4E5D",
+    "\u3289"=>"\u5341",
+    "\u328A"=>"\u6708",
+    "\u328B"=>"\u706B",
+    "\u328C"=>"\u6C34",
+    "\u328D"=>"\u6728",
+    "\u328E"=>"\u91D1",
+    "\u328F"=>"\u571F",
+    "\u3290"=>"\u65E5",
+    "\u3291"=>"\u682A",
+    "\u3292"=>"\u6709",
+    "\u3293"=>"\u793E",
+    "\u3294"=>"\u540D",
+    "\u3295"=>"\u7279",
+    "\u3296"=>"\u8CA1",
+    "\u3297"=>"\u795D",
+    "\u3298"=>"\u52B4",
+    "\u3299"=>"\u79D8",
+    "\u329A"=>"\u7537",
+    "\u329B"=>"\u5973",
+    "\u329C"=>"\u9069",
+    "\u329D"=>"\u512A",
+    "\u329E"=>"\u5370",
+    "\u329F"=>"\u6CE8",
+    "\u32A0"=>"\u9805",
+    "\u32A1"=>"\u4F11",
+    "\u32A2"=>"\u5199",
+    "\u32A3"=>"\u6B63",
+    "\u32A4"=>"\u4E0A",
+    "\u32A5"=>"\u4E2D",
+    "\u32A6"=>"\u4E0B",
+    "\u32A7"=>"\u5DE6",
+    "\u32A8"=>"\u53F3",
+    "\u32A9"=>"\u533B",
+    "\u32AA"=>"\u5B97",
+    "\u32AB"=>"\u5B66",
+    "\u32AC"=>"\u76E3",
+    "\u32AD"=>"\u4F01",
+    "\u32AE"=>"\u8CC7",
+    "\u32AF"=>"\u5354",
+    "\u32B0"=>"\u591C",
+    "\u32B1"=>"36",
+    "\u32B2"=>"37",
+    "\u32B3"=>"38",
+    "\u32B4"=>"39",
+    "\u32B5"=>"40",
+    "\u32B6"=>"41",
+    "\u32B7"=>"42",
+    "\u32B8"=>"43",
+    "\u32B9"=>"44",
+    "\u32BA"=>"45",
+    "\u32BB"=>"46",
+    "\u32BC"=>"47",
+    "\u32BD"=>"48",
+    "\u32BE"=>"49",
+    "\u32BF"=>"50",
+    "\u32C0"=>"1\u6708",
+    "\u32C1"=>"2\u6708",
+    "\u32C2"=>"3\u6708",
+    "\u32C3"=>"4\u6708",
+    "\u32C4"=>"5\u6708",
+    "\u32C5"=>"6\u6708",
+    "\u32C6"=>"7\u6708",
+    "\u32C7"=>"8\u6708",
+    "\u32C8"=>"9\u6708",
+    "\u32C9"=>"10\u6708",
+    "\u32CA"=>"11\u6708",
+    "\u32CB"=>"12\u6708",
+    "\u32CC"=>"Hg",
+    "\u32CD"=>"erg",
+    "\u32CE"=>"eV",
+    "\u32CF"=>"LTD",
+    "\u32D0"=>"\u30A2",
+    "\u32D1"=>"\u30A4",
+    "\u32D2"=>"\u30A6",
+    "\u32D3"=>"\u30A8",
+    "\u32D4"=>"\u30AA",
+    "\u32D5"=>"\u30AB",
+    "\u32D6"=>"\u30AD",
+    "\u32D7"=>"\u30AF",
+    "\u32D8"=>"\u30B1",
+    "\u32D9"=>"\u30B3",
+    "\u32DA"=>"\u30B5",
+    "\u32DB"=>"\u30B7",
+    "\u32DC"=>"\u30B9",
+    "\u32DD"=>"\u30BB",
+    "\u32DE"=>"\u30BD",
+    "\u32DF"=>"\u30BF",
+    "\u32E0"=>"\u30C1",
+    "\u32E1"=>"\u30C4",
+    "\u32E2"=>"\u30C6",
+    "\u32E3"=>"\u30C8",
+    "\u32E4"=>"\u30CA",
+    "\u32E5"=>"\u30CB",
+    "\u32E6"=>"\u30CC",
+    "\u32E7"=>"\u30CD",
+    "\u32E8"=>"\u30CE",
+    "\u32E9"=>"\u30CF",
+    "\u32EA"=>"\u30D2",
+    "\u32EB"=>"\u30D5",
+    "\u32EC"=>"\u30D8",
+    "\u32ED"=>"\u30DB",
+    "\u32EE"=>"\u30DE",
+    "\u32EF"=>"\u30DF",
+    "\u32F0"=>"\u30E0",
+    "\u32F1"=>"\u30E1",
+    "\u32F2"=>"\u30E2",
+    "\u32F3"=>"\u30E4",
+    "\u32F4"=>"\u30E6",
+    "\u32F5"=>"\u30E8",
+    "\u32F6"=>"\u30E9",
+    "\u32F7"=>"\u30EA",
+    "\u32F8"=>"\u30EB",
+    "\u32F9"=>"\u30EC",
+    "\u32FA"=>"\u30ED",
+    "\u32FB"=>"\u30EF",
+    "\u32FC"=>"\u30F0",
+    "\u32FD"=>"\u30F1",
+    "\u32FE"=>"\u30F2",
+    "\u32FF"=>"\u4EE4\u548C",
+    "\u3300"=>"\u30A2\u30D1\u30FC\u30C8",
+    "\u3301"=>"\u30A2\u30EB\u30D5\u30A1",
+    "\u3302"=>"\u30A2\u30F3\u30DA\u30A2",
+    "\u3303"=>"\u30A2\u30FC\u30EB",
+    "\u3304"=>"\u30A4\u30CB\u30F3\u30B0",
+    "\u3305"=>"\u30A4\u30F3\u30C1",
+    "\u3306"=>"\u30A6\u30A9\u30F3",
+    "\u3307"=>"\u30A8\u30B9\u30AF\u30FC\u30C9",
+    "\u3308"=>"\u30A8\u30FC\u30AB\u30FC",
+    "\u3309"=>"\u30AA\u30F3\u30B9",
+    "\u330A"=>"\u30AA\u30FC\u30E0",
+    "\u330B"=>"\u30AB\u30A4\u30EA",
+    "\u330C"=>"\u30AB\u30E9\u30C3\u30C8",
+    "\u330D"=>"\u30AB\u30ED\u30EA\u30FC",
+    "\u330E"=>"\u30AC\u30ED\u30F3",
+    "\u330F"=>"\u30AC\u30F3\u30DE",
+    "\u3310"=>"\u30AE\u30AC",
+    "\u3311"=>"\u30AE\u30CB\u30FC",
+    "\u3312"=>"\u30AD\u30E5\u30EA\u30FC",
+    "\u3313"=>"\u30AE\u30EB\u30C0\u30FC",
+    "\u3314"=>"\u30AD\u30ED",
+    "\u3315"=>"\u30AD\u30ED\u30B0\u30E9\u30E0",
+    "\u3316"=>"\u30AD\u30ED\u30E1\u30FC\u30C8\u30EB",
+    "\u3317"=>"\u30AD\u30ED\u30EF\u30C3\u30C8",
+    "\u3318"=>"\u30B0\u30E9\u30E0",
+    "\u3319"=>"\u30B0\u30E9\u30E0\u30C8\u30F3",
+    "\u331A"=>"\u30AF\u30EB\u30BC\u30A4\u30ED",
+    "\u331B"=>"\u30AF\u30ED\u30FC\u30CD",
+    "\u331C"=>"\u30B1\u30FC\u30B9",
+    "\u331D"=>"\u30B3\u30EB\u30CA",
+    "\u331E"=>"\u30B3\u30FC\u30DD",
+    "\u331F"=>"\u30B5\u30A4\u30AF\u30EB",
+    "\u3320"=>"\u30B5\u30F3\u30C1\u30FC\u30E0",
+    "\u3321"=>"\u30B7\u30EA\u30F3\u30B0",
+    "\u3322"=>"\u30BB\u30F3\u30C1",
+    "\u3323"=>"\u30BB\u30F3\u30C8",
+    "\u3324"=>"\u30C0\u30FC\u30B9",
+    "\u3325"=>"\u30C7\u30B7",
+    "\u3326"=>"\u30C9\u30EB",
+    "\u3327"=>"\u30C8\u30F3",
+    "\u3328"=>"\u30CA\u30CE",
+    "\u3329"=>"\u30CE\u30C3\u30C8",
+    "\u332A"=>"\u30CF\u30A4\u30C4",
+    "\u332B"=>"\u30D1\u30FC\u30BB\u30F3\u30C8",
+    "\u332C"=>"\u30D1\u30FC\u30C4",
+    "\u332D"=>"\u30D0\u30FC\u30EC\u30EB",
+    "\u332E"=>"\u30D4\u30A2\u30B9\u30C8\u30EB",
+    "\u332F"=>"\u30D4\u30AF\u30EB",
+    "\u3330"=>"\u30D4\u30B3",
+    "\u3331"=>"\u30D3\u30EB",
+    "\u3332"=>"\u30D5\u30A1\u30E9\u30C3\u30C9",
+    "\u3333"=>"\u30D5\u30A3\u30FC\u30C8",
+    "\u3334"=>"\u30D6\u30C3\u30B7\u30A7\u30EB",
+    "\u3335"=>"\u30D5\u30E9\u30F3",
+    "\u3336"=>"\u30D8\u30AF\u30BF\u30FC\u30EB",
+    "\u3337"=>"\u30DA\u30BD",
+    "\u3338"=>"\u30DA\u30CB\u30D2",
+    "\u3339"=>"\u30D8\u30EB\u30C4",
+    "\u333A"=>"\u30DA\u30F3\u30B9",
+    "\u333B"=>"\u30DA\u30FC\u30B8",
+    "\u333C"=>"\u30D9\u30FC\u30BF",
+    "\u333D"=>"\u30DD\u30A4\u30F3\u30C8",
+    "\u333E"=>"\u30DC\u30EB\u30C8",
+    "\u333F"=>"\u30DB\u30F3",
+    "\u3340"=>"\u30DD\u30F3\u30C9",
+    "\u3341"=>"\u30DB\u30FC\u30EB",
+    "\u3342"=>"\u30DB\u30FC\u30F3",
+    "\u3343"=>"\u30DE\u30A4\u30AF\u30ED",
+    "\u3344"=>"\u30DE\u30A4\u30EB",
+    "\u3345"=>"\u30DE\u30C3\u30CF",
+    "\u3346"=>"\u30DE\u30EB\u30AF",
+    "\u3347"=>"\u30DE\u30F3\u30B7\u30E7\u30F3",
+    "\u3348"=>"\u30DF\u30AF\u30ED\u30F3",
+    "\u3349"=>"\u30DF\u30EA",
+    "\u334A"=>"\u30DF\u30EA\u30D0\u30FC\u30EB",
+    "\u334B"=>"\u30E1\u30AC",
+    "\u334C"=>"\u30E1\u30AC\u30C8\u30F3",
+    "\u334D"=>"\u30E1\u30FC\u30C8\u30EB",
+    "\u334E"=>"\u30E4\u30FC\u30C9",
+    "\u334F"=>"\u30E4\u30FC\u30EB",
+    "\u3350"=>"\u30E6\u30A2\u30F3",
+    "\u3351"=>"\u30EA\u30C3\u30C8\u30EB",
+    "\u3352"=>"\u30EA\u30E9",
+    "\u3353"=>"\u30EB\u30D4\u30FC",
+    "\u3354"=>"\u30EB\u30FC\u30D6\u30EB",
+    "\u3355"=>"\u30EC\u30E0",
+    "\u3356"=>"\u30EC\u30F3\u30C8\u30B2\u30F3",
+    "\u3357"=>"\u30EF\u30C3\u30C8",
+    "\u3358"=>"0\u70B9",
+    "\u3359"=>"1\u70B9",
+    "\u335A"=>"2\u70B9",
+    "\u335B"=>"3\u70B9",
+    "\u335C"=>"4\u70B9",
+    "\u335D"=>"5\u70B9",
+    "\u335E"=>"6\u70B9",
+    "\u335F"=>"7\u70B9",
+    "\u3360"=>"8\u70B9",
+    "\u3361"=>"9\u70B9",
+    "\u3362"=>"10\u70B9",
+    "\u3363"=>"11\u70B9",
+    "\u3364"=>"12\u70B9",
+    "\u3365"=>"13\u70B9",
+    "\u3366"=>"14\u70B9",
+    "\u3367"=>"15\u70B9",
+    "\u3368"=>"16\u70B9",
+    "\u3369"=>"17\u70B9",
+    "\u336A"=>"18\u70B9",
+    "\u336B"=>"19\u70B9",
+    "\u336C"=>"20\u70B9",
+    "\u336D"=>"21\u70B9",
+    "\u336E"=>"22\u70B9",
+    "\u336F"=>"23\u70B9",
+    "\u3370"=>"24\u70B9",
+    "\u3371"=>"hPa",
+    "\u3372"=>"da",
+    "\u3373"=>"AU",
+    "\u3374"=>"bar",
+    "\u3375"=>"oV",
+    "\u3376"=>"pc",
+    "\u3377"=>"dm",
+    "\u3378"=>"dm2",
+    "\u3379"=>"dm3",
+    "\u337A"=>"IU",
+    "\u337B"=>"\u5E73\u6210",
+    "\u337C"=>"\u662D\u548C",
+    "\u337D"=>"\u5927\u6B63",
+    "\u337E"=>"\u660E\u6CBB",
+    "\u337F"=>"\u682A\u5F0F\u4F1A\u793E",
+    "\u3380"=>"pA",
+    "\u3381"=>"nA",
+    "\u3382"=>"\u03BCA",
+    "\u3383"=>"mA",
+    "\u3384"=>"kA",
+    "\u3385"=>"KB",
+    "\u3386"=>"MB",
+    "\u3387"=>"GB",
+    "\u3388"=>"cal",
+    "\u3389"=>"kcal",
+    "\u338A"=>"pF",
+    "\u338B"=>"nF",
+    "\u338C"=>"\u03BCF",
+    "\u338D"=>"\u03BCg",
+    "\u338E"=>"mg",
+    "\u338F"=>"kg",
+    "\u3390"=>"Hz",
+    "\u3391"=>"kHz",
+    "\u3392"=>"MHz",
+    "\u3393"=>"GHz",
+    "\u3394"=>"THz",
+    "\u3395"=>"\u03BCl",
+    "\u3396"=>"ml",
+    "\u3397"=>"dl",
+    "\u3398"=>"kl",
+    "\u3399"=>"fm",
+    "\u339A"=>"nm",
+    "\u339B"=>"\u03BCm",
+    "\u339C"=>"mm",
+    "\u339D"=>"cm",
+    "\u339E"=>"km",
+    "\u339F"=>"mm2",
+    "\u33A0"=>"cm2",
+    "\u33A1"=>"m2",
+    "\u33A2"=>"km2",
+    "\u33A3"=>"mm3",
+    "\u33A4"=>"cm3",
+    "\u33A5"=>"m3",
+    "\u33A6"=>"km3",
+    "\u33A7"=>"m\u2215s",
+    "\u33A8"=>"m\u2215s2",
+    "\u33A9"=>"Pa",
+    "\u33AA"=>"kPa",
+    "\u33AB"=>"MPa",
+    "\u33AC"=>"GPa",
+    "\u33AD"=>"rad",
+    "\u33AE"=>"rad\u2215s",
+    "\u33AF"=>"rad\u2215s2",
+    "\u33B0"=>"ps",
+    "\u33B1"=>"ns",
+    "\u33B2"=>"\u03BCs",
+    "\u33B3"=>"ms",
+    "\u33B4"=>"pV",
+    "\u33B5"=>"nV",
+    "\u33B6"=>"\u03BCV",
+    "\u33B7"=>"mV",
+    "\u33B8"=>"kV",
+    "\u33B9"=>"MV",
+    "\u33BA"=>"pW",
+    "\u33BB"=>"nW",
+    "\u33BC"=>"\u03BCW",
+    "\u33BD"=>"mW",
+    "\u33BE"=>"kW",
+    "\u33BF"=>"MW",
+    "\u33C0"=>"k\u03A9",
+    "\u33C1"=>"M\u03A9",
+    "\u33C2"=>"a.m.",
+    "\u33C3"=>"Bq",
+    "\u33C4"=>"cc",
+    "\u33C5"=>"cd",
+    "\u33C6"=>"C\u2215kg",
+    "\u33C7"=>"Co.",
+    "\u33C8"=>"dB",
+    "\u33C9"=>"Gy",
+    "\u33CA"=>"ha",
+    "\u33CB"=>"HP",
+    "\u33CC"=>"in",
+    "\u33CD"=>"KK",
+    "\u33CE"=>"KM",
+    "\u33CF"=>"kt",
+    "\u33D0"=>"lm",
+    "\u33D1"=>"ln",
+    "\u33D2"=>"log",
+    "\u33D3"=>"lx",
+    "\u33D4"=>"mb",
+    "\u33D5"=>"mil",
+    "\u33D6"=>"mol",
+    "\u33D7"=>"PH",
+    "\u33D8"=>"p.m.",
+    "\u33D9"=>"PPM",
+    "\u33DA"=>"PR",
+    "\u33DB"=>"sr",
+    "\u33DC"=>"Sv",
+    "\u33DD"=>"Wb",
+    "\u33DE"=>"V\u2215m",
+    "\u33DF"=>"A\u2215m",
+    "\u33E0"=>"1\u65E5",
+    "\u33E1"=>"2\u65E5",
+    "\u33E2"=>"3\u65E5",
+    "\u33E3"=>"4\u65E5",
+    "\u33E4"=>"5\u65E5",
+    "\u33E5"=>"6\u65E5",
+    "\u33E6"=>"7\u65E5",
+    "\u33E7"=>"8\u65E5",
+    "\u33E8"=>"9\u65E5",
+    "\u33E9"=>"10\u65E5",
+    "\u33EA"=>"11\u65E5",
+    "\u33EB"=>"12\u65E5",
+    "\u33EC"=>"13\u65E5",
+    "\u33ED"=>"14\u65E5",
+    "\u33EE"=>"15\u65E5",
+    "\u33EF"=>"16\u65E5",
+    "\u33F0"=>"17\u65E5",
+    "\u33F1"=>"18\u65E5",
+    "\u33F2"=>"19\u65E5",
+    "\u33F3"=>"20\u65E5",
+    "\u33F4"=>"21\u65E5",
+    "\u33F5"=>"22\u65E5",
+    "\u33F6"=>"23\u65E5",
+    "\u33F7"=>"24\u65E5",
+    "\u33F8"=>"25\u65E5",
+    "\u33F9"=>"26\u65E5",
+    "\u33FA"=>"27\u65E5",
+    "\u33FB"=>"28\u65E5",
+    "\u33FC"=>"29\u65E5",
+    "\u33FD"=>"30\u65E5",
+    "\u33FE"=>"31\u65E5",
+    "\u33FF"=>"gal",
+    "\uA69C"=>"\u044A",
+    "\uA69D"=>"\u044C",
+    "\uA770"=>"\uA76F",
+    "\uA7F8"=>"\u0126",
+    "\uA7F9"=>"\u0153",
+    "\uAB5C"=>"\uA727",
+    "\uAB5D"=>"\uAB37",
+    "\uAB5E"=>"\u026B",
+    "\uAB5F"=>"\uAB52",
+    "\uFB00"=>"ff",
+    "\uFB01"=>"fi",
+    "\uFB02"=>"fl",
+    "\uFB03"=>"ffi",
+    "\uFB04"=>"ffl",
+    "\uFB05"=>"st",
+    "\uFB06"=>"st",
+    "\uFB13"=>"\u0574\u0576",
+    "\uFB14"=>"\u0574\u0565",
+    "\uFB15"=>"\u0574\u056B",
+    "\uFB16"=>"\u057E\u0576",
+    "\uFB17"=>"\u0574\u056D",
+    "\uFB20"=>"\u05E2",
+    "\uFB21"=>"\u05D0",
+    "\uFB22"=>"\u05D3",
+    "\uFB23"=>"\u05D4",
+    "\uFB24"=>"\u05DB",
+    "\uFB25"=>"\u05DC",
+    "\uFB26"=>"\u05DD",
+    "\uFB27"=>"\u05E8",
+    "\uFB28"=>"\u05EA",
+    "\uFB29"=>"+",
+    "\uFB4F"=>"\u05D0\u05DC",
+    "\uFB50"=>"\u0671",
+    "\uFB51"=>"\u0671",
+    "\uFB52"=>"\u067B",
+    "\uFB53"=>"\u067B",
+    "\uFB54"=>"\u067B",
+    "\uFB55"=>"\u067B",
+    "\uFB56"=>"\u067E",
+    "\uFB57"=>"\u067E",
+    "\uFB58"=>"\u067E",
+    "\uFB59"=>"\u067E",
+    "\uFB5A"=>"\u0680",
+    "\uFB5B"=>"\u0680",
+    "\uFB5C"=>"\u0680",
+    "\uFB5D"=>"\u0680",
+    "\uFB5E"=>"\u067A",
+    "\uFB5F"=>"\u067A",
+    "\uFB60"=>"\u067A",
+    "\uFB61"=>"\u067A",
+    "\uFB62"=>"\u067F",
+    "\uFB63"=>"\u067F",
+    "\uFB64"=>"\u067F",
+    "\uFB65"=>"\u067F",
+    "\uFB66"=>"\u0679",
+    "\uFB67"=>"\u0679",
+    "\uFB68"=>"\u0679",
+    "\uFB69"=>"\u0679",
+    "\uFB6A"=>"\u06A4",
+    "\uFB6B"=>"\u06A4",
+    "\uFB6C"=>"\u06A4",
+    "\uFB6D"=>"\u06A4",
+    "\uFB6E"=>"\u06A6",
+    "\uFB6F"=>"\u06A6",
+    "\uFB70"=>"\u06A6",
+    "\uFB71"=>"\u06A6",
+    "\uFB72"=>"\u0684",
+    "\uFB73"=>"\u0684",
+    "\uFB74"=>"\u0684",
+    "\uFB75"=>"\u0684",
+    "\uFB76"=>"\u0683",
+    "\uFB77"=>"\u0683",
+    "\uFB78"=>"\u0683",
+    "\uFB79"=>"\u0683",
+    "\uFB7A"=>"\u0686",
+    "\uFB7B"=>"\u0686",
+    "\uFB7C"=>"\u0686",
+    "\uFB7D"=>"\u0686",
+    "\uFB7E"=>"\u0687",
+    "\uFB7F"=>"\u0687",
+    "\uFB80"=>"\u0687",
+    "\uFB81"=>"\u0687",
+    "\uFB82"=>"\u068D",
+    "\uFB83"=>"\u068D",
+    "\uFB84"=>"\u068C",
+    "\uFB85"=>"\u068C",
+    "\uFB86"=>"\u068E",
+    "\uFB87"=>"\u068E",
+    "\uFB88"=>"\u0688",
+    "\uFB89"=>"\u0688",
+    "\uFB8A"=>"\u0698",
+    "\uFB8B"=>"\u0698",
+    "\uFB8C"=>"\u0691",
+    "\uFB8D"=>"\u0691",
+    "\uFB8E"=>"\u06A9",
+    "\uFB8F"=>"\u06A9",
+    "\uFB90"=>"\u06A9",
+    "\uFB91"=>"\u06A9",
+    "\uFB92"=>"\u06AF",
+    "\uFB93"=>"\u06AF",
+    "\uFB94"=>"\u06AF",
+    "\uFB95"=>"\u06AF",
+    "\uFB96"=>"\u06B3",
+    "\uFB97"=>"\u06B3",
+    "\uFB98"=>"\u06B3",
+    "\uFB99"=>"\u06B3",
+    "\uFB9A"=>"\u06B1",
+    "\uFB9B"=>"\u06B1",
+    "\uFB9C"=>"\u06B1",
+    "\uFB9D"=>"\u06B1",
+    "\uFB9E"=>"\u06BA",
+    "\uFB9F"=>"\u06BA",
+    "\uFBA0"=>"\u06BB",
+    "\uFBA1"=>"\u06BB",
+    "\uFBA2"=>"\u06BB",
+    "\uFBA3"=>"\u06BB",
+    "\uFBA4"=>"\u06C0",
+    "\uFBA5"=>"\u06C0",
+    "\uFBA6"=>"\u06C1",
+    "\uFBA7"=>"\u06C1",
+    "\uFBA8"=>"\u06C1",
+    "\uFBA9"=>"\u06C1",
+    "\uFBAA"=>"\u06BE",
+    "\uFBAB"=>"\u06BE",
+    "\uFBAC"=>"\u06BE",
+    "\uFBAD"=>"\u06BE",
+    "\uFBAE"=>"\u06D2",
+    "\uFBAF"=>"\u06D2",
+    "\uFBB0"=>"\u06D3",
+    "\uFBB1"=>"\u06D3",
+    "\uFBD3"=>"\u06AD",
+    "\uFBD4"=>"\u06AD",
+    "\uFBD5"=>"\u06AD",
+    "\uFBD6"=>"\u06AD",
+    "\uFBD7"=>"\u06C7",
+    "\uFBD8"=>"\u06C7",
+    "\uFBD9"=>"\u06C6",
+    "\uFBDA"=>"\u06C6",
+    "\uFBDB"=>"\u06C8",
+    "\uFBDC"=>"\u06C8",
+    "\uFBDD"=>"\u06C7\u0674",
+    "\uFBDE"=>"\u06CB",
+    "\uFBDF"=>"\u06CB",
+    "\uFBE0"=>"\u06C5",
+    "\uFBE1"=>"\u06C5",
+    "\uFBE2"=>"\u06C9",
+    "\uFBE3"=>"\u06C9",
+    "\uFBE4"=>"\u06D0",
+    "\uFBE5"=>"\u06D0",
+    "\uFBE6"=>"\u06D0",
+    "\uFBE7"=>"\u06D0",
+    "\uFBE8"=>"\u0649",
+    "\uFBE9"=>"\u0649",
+    "\uFBEA"=>"\u0626\u0627",
+    "\uFBEB"=>"\u0626\u0627",
+    "\uFBEC"=>"\u0626\u06D5",
+    "\uFBED"=>"\u0626\u06D5",
+    "\uFBEE"=>"\u0626\u0648",
+    "\uFBEF"=>"\u0626\u0648",
+    "\uFBF0"=>"\u0626\u06C7",
+    "\uFBF1"=>"\u0626\u06C7",
+    "\uFBF2"=>"\u0626\u06C6",
+    "\uFBF3"=>"\u0626\u06C6",
+    "\uFBF4"=>"\u0626\u06C8",
+    "\uFBF5"=>"\u0626\u06C8",
+    "\uFBF6"=>"\u0626\u06D0",
+    "\uFBF7"=>"\u0626\u06D0",
+    "\uFBF8"=>"\u0626\u06D0",
+    "\uFBF9"=>"\u0626\u0649",
+    "\uFBFA"=>"\u0626\u0649",
+    "\uFBFB"=>"\u0626\u0649",
+    "\uFBFC"=>"\u06CC",
+    "\uFBFD"=>"\u06CC",
+    "\uFBFE"=>"\u06CC",
+    "\uFBFF"=>"\u06CC",
+    "\uFC00"=>"\u0626\u062C",
+    "\uFC01"=>"\u0626\u062D",
+    "\uFC02"=>"\u0626\u0645",
+    "\uFC03"=>"\u0626\u0649",
+    "\uFC04"=>"\u0626\u064A",
+    "\uFC05"=>"\u0628\u062C",
+    "\uFC06"=>"\u0628\u062D",
+    "\uFC07"=>"\u0628\u062E",
+    "\uFC08"=>"\u0628\u0645",
+    "\uFC09"=>"\u0628\u0649",
+    "\uFC0A"=>"\u0628\u064A",
+    "\uFC0B"=>"\u062A\u062C",
+    "\uFC0C"=>"\u062A\u062D",
+    "\uFC0D"=>"\u062A\u062E",
+    "\uFC0E"=>"\u062A\u0645",
+    "\uFC0F"=>"\u062A\u0649",
+    "\uFC10"=>"\u062A\u064A",
+    "\uFC11"=>"\u062B\u062C",
+    "\uFC12"=>"\u062B\u0645",
+    "\uFC13"=>"\u062B\u0649",
+    "\uFC14"=>"\u062B\u064A",
+    "\uFC15"=>"\u062C\u062D",
+    "\uFC16"=>"\u062C\u0645",
+    "\uFC17"=>"\u062D\u062C",
+    "\uFC18"=>"\u062D\u0645",
+    "\uFC19"=>"\u062E\u062C",
+    "\uFC1A"=>"\u062E\u062D",
+    "\uFC1B"=>"\u062E\u0645",
+    "\uFC1C"=>"\u0633\u062C",
+    "\uFC1D"=>"\u0633\u062D",
+    "\uFC1E"=>"\u0633\u062E",
+    "\uFC1F"=>"\u0633\u0645",
+    "\uFC20"=>"\u0635\u062D",
+    "\uFC21"=>"\u0635\u0645",
+    "\uFC22"=>"\u0636\u062C",
+    "\uFC23"=>"\u0636\u062D",
+    "\uFC24"=>"\u0636\u062E",
+    "\uFC25"=>"\u0636\u0645",
+    "\uFC26"=>"\u0637\u062D",
+    "\uFC27"=>"\u0637\u0645",
+    "\uFC28"=>"\u0638\u0645",
+    "\uFC29"=>"\u0639\u062C",
+    "\uFC2A"=>"\u0639\u0645",
+    "\uFC2B"=>"\u063A\u062C",
+    "\uFC2C"=>"\u063A\u0645",
+    "\uFC2D"=>"\u0641\u062C",
+    "\uFC2E"=>"\u0641\u062D",
+    "\uFC2F"=>"\u0641\u062E",
+    "\uFC30"=>"\u0641\u0645",
+    "\uFC31"=>"\u0641\u0649",
+    "\uFC32"=>"\u0641\u064A",
+    "\uFC33"=>"\u0642\u062D",
+    "\uFC34"=>"\u0642\u0645",
+    "\uFC35"=>"\u0642\u0649",
+    "\uFC36"=>"\u0642\u064A",
+    "\uFC37"=>"\u0643\u0627",
+    "\uFC38"=>"\u0643\u062C",
+    "\uFC39"=>"\u0643\u062D",
+    "\uFC3A"=>"\u0643\u062E",
+    "\uFC3B"=>"\u0643\u0644",
+    "\uFC3C"=>"\u0643\u0645",
+    "\uFC3D"=>"\u0643\u0649",
+    "\uFC3E"=>"\u0643\u064A",
+    "\uFC3F"=>"\u0644\u062C",
+    "\uFC40"=>"\u0644\u062D",
+    "\uFC41"=>"\u0644\u062E",
+    "\uFC42"=>"\u0644\u0645",
+    "\uFC43"=>"\u0644\u0649",
+    "\uFC44"=>"\u0644\u064A",
+    "\uFC45"=>"\u0645\u062C",
+    "\uFC46"=>"\u0645\u062D",
+    "\uFC47"=>"\u0645\u062E",
+    "\uFC48"=>"\u0645\u0645",
+    "\uFC49"=>"\u0645\u0649",
+    "\uFC4A"=>"\u0645\u064A",
+    "\uFC4B"=>"\u0646\u062C",
+    "\uFC4C"=>"\u0646\u062D",
+    "\uFC4D"=>"\u0646\u062E",
+    "\uFC4E"=>"\u0646\u0645",
+    "\uFC4F"=>"\u0646\u0649",
+    "\uFC50"=>"\u0646\u064A",
+    "\uFC51"=>"\u0647\u062C",
+    "\uFC52"=>"\u0647\u0645",
+    "\uFC53"=>"\u0647\u0649",
+    "\uFC54"=>"\u0647\u064A",
+    "\uFC55"=>"\u064A\u062C",
+    "\uFC56"=>"\u064A\u062D",
+    "\uFC57"=>"\u064A\u062E",
+    "\uFC58"=>"\u064A\u0645",
+    "\uFC59"=>"\u064A\u0649",
+    "\uFC5A"=>"\u064A\u064A",
+    "\uFC5B"=>"\u0630\u0670",
+    "\uFC5C"=>"\u0631\u0670",
+    "\uFC5D"=>"\u0649\u0670",
+    "\uFC5E"=>" \u064C\u0651",
+    "\uFC5F"=>" \u064D\u0651",
+    "\uFC60"=>" \u064E\u0651",
+    "\uFC61"=>" \u064F\u0651",
+    "\uFC62"=>" \u0650\u0651",
+    "\uFC63"=>" \u0651\u0670",
+    "\uFC64"=>"\u0626\u0631",
+    "\uFC65"=>"\u0626\u0632",
+    "\uFC66"=>"\u0626\u0645",
+    "\uFC67"=>"\u0626\u0646",
+    "\uFC68"=>"\u0626\u0649",
+    "\uFC69"=>"\u0626\u064A",
+    "\uFC6A"=>"\u0628\u0631",
+    "\uFC6B"=>"\u0628\u0632",
+    "\uFC6C"=>"\u0628\u0645",
+    "\uFC6D"=>"\u0628\u0646",
+    "\uFC6E"=>"\u0628\u0649",
+    "\uFC6F"=>"\u0628\u064A",
+    "\uFC70"=>"\u062A\u0631",
+    "\uFC71"=>"\u062A\u0632",
+    "\uFC72"=>"\u062A\u0645",
+    "\uFC73"=>"\u062A\u0646",
+    "\uFC74"=>"\u062A\u0649",
+    "\uFC75"=>"\u062A\u064A",
+    "\uFC76"=>"\u062B\u0631",
+    "\uFC77"=>"\u062B\u0632",
+    "\uFC78"=>"\u062B\u0645",
+    "\uFC79"=>"\u062B\u0646",
+    "\uFC7A"=>"\u062B\u0649",
+    "\uFC7B"=>"\u062B\u064A",
+    "\uFC7C"=>"\u0641\u0649",
+    "\uFC7D"=>"\u0641\u064A",
+    "\uFC7E"=>"\u0642\u0649",
+    "\uFC7F"=>"\u0642\u064A",
+    "\uFC80"=>"\u0643\u0627",
+    "\uFC81"=>"\u0643\u0644",
+    "\uFC82"=>"\u0643\u0645",
+    "\uFC83"=>"\u0643\u0649",
+    "\uFC84"=>"\u0643\u064A",
+    "\uFC85"=>"\u0644\u0645",
+    "\uFC86"=>"\u0644\u0649",
+    "\uFC87"=>"\u0644\u064A",
+    "\uFC88"=>"\u0645\u0627",
+    "\uFC89"=>"\u0645\u0645",
+    "\uFC8A"=>"\u0646\u0631",
+    "\uFC8B"=>"\u0646\u0632",
+    "\uFC8C"=>"\u0646\u0645",
+    "\uFC8D"=>"\u0646\u0646",
+    "\uFC8E"=>"\u0646\u0649",
+    "\uFC8F"=>"\u0646\u064A",
+    "\uFC90"=>"\u0649\u0670",
+    "\uFC91"=>"\u064A\u0631",
+    "\uFC92"=>"\u064A\u0632",
+    "\uFC93"=>"\u064A\u0645",
+    "\uFC94"=>"\u064A\u0646",
+    "\uFC95"=>"\u064A\u0649",
+    "\uFC96"=>"\u064A\u064A",
+    "\uFC97"=>"\u0626\u062C",
+    "\uFC98"=>"\u0626\u062D",
+    "\uFC99"=>"\u0626\u062E",
+    "\uFC9A"=>"\u0626\u0645",
+    "\uFC9B"=>"\u0626\u0647",
+    "\uFC9C"=>"\u0628\u062C",
+    "\uFC9D"=>"\u0628\u062D",
+    "\uFC9E"=>"\u0628\u062E",
+    "\uFC9F"=>"\u0628\u0645",
+    "\uFCA0"=>"\u0628\u0647",
+    "\uFCA1"=>"\u062A\u062C",
+    "\uFCA2"=>"\u062A\u062D",
+    "\uFCA3"=>"\u062A\u062E",
+    "\uFCA4"=>"\u062A\u0645",
+    "\uFCA5"=>"\u062A\u0647",
+    "\uFCA6"=>"\u062B\u0645",
+    "\uFCA7"=>"\u062C\u062D",
+    "\uFCA8"=>"\u062C\u0645",
+    "\uFCA9"=>"\u062D\u062C",
+    "\uFCAA"=>"\u062D\u0645",
+    "\uFCAB"=>"\u062E\u062C",
+    "\uFCAC"=>"\u062E\u0645",
+    "\uFCAD"=>"\u0633\u062C",
+    "\uFCAE"=>"\u0633\u062D",
+    "\uFCAF"=>"\u0633\u062E",
+    "\uFCB0"=>"\u0633\u0645",
+    "\uFCB1"=>"\u0635\u062D",
+    "\uFCB2"=>"\u0635\u062E",
+    "\uFCB3"=>"\u0635\u0645",
+    "\uFCB4"=>"\u0636\u062C",
+    "\uFCB5"=>"\u0636\u062D",
+    "\uFCB6"=>"\u0636\u062E",
+    "\uFCB7"=>"\u0636\u0645",
+    "\uFCB8"=>"\u0637\u062D",
+    "\uFCB9"=>"\u0638\u0645",
+    "\uFCBA"=>"\u0639\u062C",
+    "\uFCBB"=>"\u0639\u0645",
+    "\uFCBC"=>"\u063A\u062C",
+    "\uFCBD"=>"\u063A\u0645",
+    "\uFCBE"=>"\u0641\u062C",
+    "\uFCBF"=>"\u0641\u062D",
+    "\uFCC0"=>"\u0641\u062E",
+    "\uFCC1"=>"\u0641\u0645",
+    "\uFCC2"=>"\u0642\u062D",
+    "\uFCC3"=>"\u0642\u0645",
+    "\uFCC4"=>"\u0643\u062C",
+    "\uFCC5"=>"\u0643\u062D",
+    "\uFCC6"=>"\u0643\u062E",
+    "\uFCC7"=>"\u0643\u0644",
+    "\uFCC8"=>"\u0643\u0645",
+    "\uFCC9"=>"\u0644\u062C",
+    "\uFCCA"=>"\u0644\u062D",
+    "\uFCCB"=>"\u0644\u062E",
+    "\uFCCC"=>"\u0644\u0645",
+    "\uFCCD"=>"\u0644\u0647",
+    "\uFCCE"=>"\u0645\u062C",
+    "\uFCCF"=>"\u0645\u062D",
+    "\uFCD0"=>"\u0645\u062E",
+    "\uFCD1"=>"\u0645\u0645",
+    "\uFCD2"=>"\u0646\u062C",
+    "\uFCD3"=>"\u0646\u062D",
+    "\uFCD4"=>"\u0646\u062E",
+    "\uFCD5"=>"\u0646\u0645",
+    "\uFCD6"=>"\u0646\u0647",
+    "\uFCD7"=>"\u0647\u062C",
+    "\uFCD8"=>"\u0647\u0645",
+    "\uFCD9"=>"\u0647\u0670",
+    "\uFCDA"=>"\u064A\u062C",
+    "\uFCDB"=>"\u064A\u062D",
+    "\uFCDC"=>"\u064A\u062E",
+    "\uFCDD"=>"\u064A\u0645",
+    "\uFCDE"=>"\u064A\u0647",
+    "\uFCDF"=>"\u0626\u0645",
+    "\uFCE0"=>"\u0626\u0647",
+    "\uFCE1"=>"\u0628\u0645",
+    "\uFCE2"=>"\u0628\u0647",
+    "\uFCE3"=>"\u062A\u0645",
+    "\uFCE4"=>"\u062A\u0647",
+    "\uFCE5"=>"\u062B\u0645",
+    "\uFCE6"=>"\u062B\u0647",
+    "\uFCE7"=>"\u0633\u0645",
+    "\uFCE8"=>"\u0633\u0647",
+    "\uFCE9"=>"\u0634\u0645",
+    "\uFCEA"=>"\u0634\u0647",
+    "\uFCEB"=>"\u0643\u0644",
+    "\uFCEC"=>"\u0643\u0645",
+    "\uFCED"=>"\u0644\u0645",
+    "\uFCEE"=>"\u0646\u0645",
+    "\uFCEF"=>"\u0646\u0647",
+    "\uFCF0"=>"\u064A\u0645",
+    "\uFCF1"=>"\u064A\u0647",
+    "\uFCF2"=>"\u0640\u064E\u0651",
+    "\uFCF3"=>"\u0640\u064F\u0651",
+    "\uFCF4"=>"\u0640\u0650\u0651",
+    "\uFCF5"=>"\u0637\u0649",
+    "\uFCF6"=>"\u0637\u064A",
+    "\uFCF7"=>"\u0639\u0649",
+    "\uFCF8"=>"\u0639\u064A",
+    "\uFCF9"=>"\u063A\u0649",
+    "\uFCFA"=>"\u063A\u064A",
+    "\uFCFB"=>"\u0633\u0649",
+    "\uFCFC"=>"\u0633\u064A",
+    "\uFCFD"=>"\u0634\u0649",
+    "\uFCFE"=>"\u0634\u064A",
+    "\uFCFF"=>"\u062D\u0649",
+    "\uFD00"=>"\u062D\u064A",
+    "\uFD01"=>"\u062C\u0649",
+    "\uFD02"=>"\u062C\u064A",
+    "\uFD03"=>"\u062E\u0649",
+    "\uFD04"=>"\u062E\u064A",
+    "\uFD05"=>"\u0635\u0649",
+    "\uFD06"=>"\u0635\u064A",
+    "\uFD07"=>"\u0636\u0649",
+    "\uFD08"=>"\u0636\u064A",
+    "\uFD09"=>"\u0634\u062C",
+    "\uFD0A"=>"\u0634\u062D",
+    "\uFD0B"=>"\u0634\u062E",
+    "\uFD0C"=>"\u0634\u0645",
+    "\uFD0D"=>"\u0634\u0631",
+    "\uFD0E"=>"\u0633\u0631",
+    "\uFD0F"=>"\u0635\u0631",
+    "\uFD10"=>"\u0636\u0631",
+    "\uFD11"=>"\u0637\u0649",
+    "\uFD12"=>"\u0637\u064A",
+    "\uFD13"=>"\u0639\u0649",
+    "\uFD14"=>"\u0639\u064A",
+    "\uFD15"=>"\u063A\u0649",
+    "\uFD16"=>"\u063A\u064A",
+    "\uFD17"=>"\u0633\u0649",
+    "\uFD18"=>"\u0633\u064A",
+    "\uFD19"=>"\u0634\u0649",
+    "\uFD1A"=>"\u0634\u064A",
+    "\uFD1B"=>"\u062D\u0649",
+    "\uFD1C"=>"\u062D\u064A",
+    "\uFD1D"=>"\u062C\u0649",
+    "\uFD1E"=>"\u062C\u064A",
+    "\uFD1F"=>"\u062E\u0649",
+    "\uFD20"=>"\u062E\u064A",
+    "\uFD21"=>"\u0635\u0649",
+    "\uFD22"=>"\u0635\u064A",
+    "\uFD23"=>"\u0636\u0649",
+    "\uFD24"=>"\u0636\u064A",
+    "\uFD25"=>"\u0634\u062C",
+    "\uFD26"=>"\u0634\u062D",
+    "\uFD27"=>"\u0634\u062E",
+    "\uFD28"=>"\u0634\u0645",
+    "\uFD29"=>"\u0634\u0631",
+    "\uFD2A"=>"\u0633\u0631",
+    "\uFD2B"=>"\u0635\u0631",
+    "\uFD2C"=>"\u0636\u0631",
+    "\uFD2D"=>"\u0634\u062C",
+    "\uFD2E"=>"\u0634\u062D",
+    "\uFD2F"=>"\u0634\u062E",
+    "\uFD30"=>"\u0634\u0645",
+    "\uFD31"=>"\u0633\u0647",
+    "\uFD32"=>"\u0634\u0647",
+    "\uFD33"=>"\u0637\u0645",
+    "\uFD34"=>"\u0633\u062C",
+    "\uFD35"=>"\u0633\u062D",
+    "\uFD36"=>"\u0633\u062E",
+    "\uFD37"=>"\u0634\u062C",
+    "\uFD38"=>"\u0634\u062D",
+    "\uFD39"=>"\u0634\u062E",
+    "\uFD3A"=>"\u0637\u0645",
+    "\uFD3B"=>"\u0638\u0645",
+    "\uFD3C"=>"\u0627\u064B",
+    "\uFD3D"=>"\u0627\u064B",
+    "\uFD50"=>"\u062A\u062C\u0645",
+    "\uFD51"=>"\u062A\u062D\u062C",
+    "\uFD52"=>"\u062A\u062D\u062C",
+    "\uFD53"=>"\u062A\u062D\u0645",
+    "\uFD54"=>"\u062A\u062E\u0645",
+    "\uFD55"=>"\u062A\u0645\u062C",
+    "\uFD56"=>"\u062A\u0645\u062D",
+    "\uFD57"=>"\u062A\u0645\u062E",
+    "\uFD58"=>"\u062C\u0645\u062D",
+    "\uFD59"=>"\u062C\u0645\u062D",
+    "\uFD5A"=>"\u062D\u0645\u064A",
+    "\uFD5B"=>"\u062D\u0645\u0649",
+    "\uFD5C"=>"\u0633\u062D\u062C",
+    "\uFD5D"=>"\u0633\u062C\u062D",
+    "\uFD5E"=>"\u0633\u062C\u0649",
+    "\uFD5F"=>"\u0633\u0645\u062D",
+    "\uFD60"=>"\u0633\u0645\u062D",
+    "\uFD61"=>"\u0633\u0645\u062C",
+    "\uFD62"=>"\u0633\u0645\u0645",
+    "\uFD63"=>"\u0633\u0645\u0645",
+    "\uFD64"=>"\u0635\u062D\u062D",
+    "\uFD65"=>"\u0635\u062D\u062D",
+    "\uFD66"=>"\u0635\u0645\u0645",
+    "\uFD67"=>"\u0634\u062D\u0645",
+    "\uFD68"=>"\u0634\u062D\u0645",
+    "\uFD69"=>"\u0634\u062C\u064A",
+    "\uFD6A"=>"\u0634\u0645\u062E",
+    "\uFD6B"=>"\u0634\u0645\u062E",
+    "\uFD6C"=>"\u0634\u0645\u0645",
+    "\uFD6D"=>"\u0634\u0645\u0645",
+    "\uFD6E"=>"\u0636\u062D\u0649",
+    "\uFD6F"=>"\u0636\u062E\u0645",
+    "\uFD70"=>"\u0636\u062E\u0645",
+    "\uFD71"=>"\u0637\u0645\u062D",
+    "\uFD72"=>"\u0637\u0645\u062D",
+    "\uFD73"=>"\u0637\u0645\u0645",
+    "\uFD74"=>"\u0637\u0645\u064A",
+    "\uFD75"=>"\u0639\u062C\u0645",
+    "\uFD76"=>"\u0639\u0645\u0645",
+    "\uFD77"=>"\u0639\u0645\u0645",
+    "\uFD78"=>"\u0639\u0645\u0649",
+    "\uFD79"=>"\u063A\u0645\u0645",
+    "\uFD7A"=>"\u063A\u0645\u064A",
+    "\uFD7B"=>"\u063A\u0645\u0649",
+    "\uFD7C"=>"\u0641\u062E\u0645",
+    "\uFD7D"=>"\u0641\u062E\u0645",
+    "\uFD7E"=>"\u0642\u0645\u062D",
+    "\uFD7F"=>"\u0642\u0645\u0645",
+    "\uFD80"=>"\u0644\u062D\u0645",
+    "\uFD81"=>"\u0644\u062D\u064A",
+    "\uFD82"=>"\u0644\u062D\u0649",
+    "\uFD83"=>"\u0644\u062C\u062C",
+    "\uFD84"=>"\u0644\u062C\u062C",
+    "\uFD85"=>"\u0644\u062E\u0645",
+    "\uFD86"=>"\u0644\u062E\u0645",
+    "\uFD87"=>"\u0644\u0645\u062D",
+    "\uFD88"=>"\u0644\u0645\u062D",
+    "\uFD89"=>"\u0645\u062D\u062C",
+    "\uFD8A"=>"\u0645\u062D\u0645",
+    "\uFD8B"=>"\u0645\u062D\u064A",
+    "\uFD8C"=>"\u0645\u062C\u062D",
+    "\uFD8D"=>"\u0645\u062C\u0645",
+    "\uFD8E"=>"\u0645\u062E\u062C",
+    "\uFD8F"=>"\u0645\u062E\u0645",
+    "\uFD92"=>"\u0645\u062C\u062E",
+    "\uFD93"=>"\u0647\u0645\u062C",
+    "\uFD94"=>"\u0647\u0645\u0645",
+    "\uFD95"=>"\u0646\u062D\u0645",
+    "\uFD96"=>"\u0646\u062D\u0649",
+    "\uFD97"=>"\u0646\u062C\u0645",
+    "\uFD98"=>"\u0646\u062C\u0645",
+    "\uFD99"=>"\u0646\u062C\u0649",
+    "\uFD9A"=>"\u0646\u0645\u064A",
+    "\uFD9B"=>"\u0646\u0645\u0649",
+    "\uFD9C"=>"\u064A\u0645\u0645",
+    "\uFD9D"=>"\u064A\u0645\u0645",
+    "\uFD9E"=>"\u0628\u062E\u064A",
+    "\uFD9F"=>"\u062A\u062C\u064A",
+    "\uFDA0"=>"\u062A\u062C\u0649",
+    "\uFDA1"=>"\u062A\u062E\u064A",
+    "\uFDA2"=>"\u062A\u062E\u0649",
+    "\uFDA3"=>"\u062A\u0645\u064A",
+    "\uFDA4"=>"\u062A\u0645\u0649",
+    "\uFDA5"=>"\u062C\u0645\u064A",
+    "\uFDA6"=>"\u062C\u062D\u0649",
+    "\uFDA7"=>"\u062C\u0645\u0649",
+    "\uFDA8"=>"\u0633\u062E\u0649",
+    "\uFDA9"=>"\u0635\u062D\u064A",
+    "\uFDAA"=>"\u0634\u062D\u064A",
+    "\uFDAB"=>"\u0636\u062D\u064A",
+    "\uFDAC"=>"\u0644\u062C\u064A",
+    "\uFDAD"=>"\u0644\u0645\u064A",
+    "\uFDAE"=>"\u064A\u062D\u064A",
+    "\uFDAF"=>"\u064A\u062C\u064A",
+    "\uFDB0"=>"\u064A\u0645\u064A",
+    "\uFDB1"=>"\u0645\u0645\u064A",
+    "\uFDB2"=>"\u0642\u0645\u064A",
+    "\uFDB3"=>"\u0646\u062D\u064A",
+    "\uFDB4"=>"\u0642\u0645\u062D",
+    "\uFDB5"=>"\u0644\u062D\u0645",
+    "\uFDB6"=>"\u0639\u0645\u064A",
+    "\uFDB7"=>"\u0643\u0645\u064A",
+    "\uFDB8"=>"\u0646\u062C\u062D",
+    "\uFDB9"=>"\u0645\u062E\u064A",
+    "\uFDBA"=>"\u0644\u062C\u0645",
+    "\uFDBB"=>"\u0643\u0645\u0645",
+    "\uFDBC"=>"\u0644\u062C\u0645",
+    "\uFDBD"=>"\u0646\u062C\u062D",
+    "\uFDBE"=>"\u062C\u062D\u064A",
+    "\uFDBF"=>"\u062D\u062C\u064A",
+    "\uFDC0"=>"\u0645\u062C\u064A",
+    "\uFDC1"=>"\u0641\u0645\u064A",
+    "\uFDC2"=>"\u0628\u062D\u064A",
+    "\uFDC3"=>"\u0643\u0645\u0645",
+    "\uFDC4"=>"\u0639\u062C\u0645",
+    "\uFDC5"=>"\u0635\u0645\u0645",
+    "\uFDC6"=>"\u0633\u062E\u064A",
+    "\uFDC7"=>"\u0646\u062C\u064A",
+    "\uFDF0"=>"\u0635\u0644\u06D2",
+    "\uFDF1"=>"\u0642\u0644\u06D2",
+    "\uFDF2"=>"\u0627\u0644\u0644\u0647",
+    "\uFDF3"=>"\u0627\u0643\u0628\u0631",
+    "\uFDF4"=>"\u0645\u062D\u0645\u062F",
+    "\uFDF5"=>"\u0635\u0644\u0639\u0645",
+    "\uFDF6"=>"\u0631\u0633\u0648\u0644",
+    "\uFDF7"=>"\u0639\u0644\u064A\u0647",
+    "\uFDF8"=>"\u0648\u0633\u0644\u0645",
+    "\uFDF9"=>"\u0635\u0644\u0649",
+    "\uFDFA"=>"\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064A\u0647 \u0648\u0633\u0644\u0645",
+    "\uFDFB"=>"\u062C\u0644 \u062C\u0644\u0627\u0644\u0647",
+    "\uFDFC"=>"\u0631\u06CC\u0627\u0644",
+    "\uFE10"=>",",
+    "\uFE11"=>"\u3001",
+    "\uFE12"=>"\u3002",
+    "\uFE13"=>":",
+    "\uFE14"=>";",
+    "\uFE15"=>"!",
+    "\uFE16"=>"?",
+    "\uFE17"=>"\u3016",
+    "\uFE18"=>"\u3017",
+    "\uFE19"=>"...",
+    "\uFE30"=>"..",
+    "\uFE31"=>"\u2014",
+    "\uFE32"=>"\u2013",
+    "\uFE33"=>"_",
+    "\uFE34"=>"_",
+    "\uFE35"=>"(",
+    "\uFE36"=>")",
+    "\uFE37"=>"{",
+    "\uFE38"=>"}",
+    "\uFE39"=>"\u3014",
+    "\uFE3A"=>"\u3015",
+    "\uFE3B"=>"\u3010",
+    "\uFE3C"=>"\u3011",
+    "\uFE3D"=>"\u300A",
+    "\uFE3E"=>"\u300B",
+    "\uFE3F"=>"\u3008",
+    "\uFE40"=>"\u3009",
+    "\uFE41"=>"\u300C",
+    "\uFE42"=>"\u300D",
+    "\uFE43"=>"\u300E",
+    "\uFE44"=>"\u300F",
+    "\uFE47"=>"[",
+    "\uFE48"=>"]",
+    "\uFE49"=>" \u0305",
+    "\uFE4A"=>" \u0305",
+    "\uFE4B"=>" \u0305",
+    "\uFE4C"=>" \u0305",
+    "\uFE4D"=>"_",
+    "\uFE4E"=>"_",
+    "\uFE4F"=>"_",
+    "\uFE50"=>",",
+    "\uFE51"=>"\u3001",
+    "\uFE52"=>".",
+    "\uFE54"=>";",
+    "\uFE55"=>":",
+    "\uFE56"=>"?",
+    "\uFE57"=>"!",
+    "\uFE58"=>"\u2014",
+    "\uFE59"=>"(",
+    "\uFE5A"=>")",
+    "\uFE5B"=>"{",
+    "\uFE5C"=>"}",
+    "\uFE5D"=>"\u3014",
+    "\uFE5E"=>"\u3015",
+    "\uFE5F"=>"#",
+    "\uFE60"=>"&",
+    "\uFE61"=>"*",
+    "\uFE62"=>"+",
+    "\uFE63"=>"-",
+    "\uFE64"=>"<",
+    "\uFE65"=>">",
+    "\uFE66"=>"=",
+    "\uFE68"=>"\\",
+    "\uFE69"=>"$",
+    "\uFE6A"=>"%",
+    "\uFE6B"=>"@",
+    "\uFE70"=>" \u064B",
+    "\uFE71"=>"\u0640\u064B",
+    "\uFE72"=>" \u064C",
+    "\uFE74"=>" \u064D",
+    "\uFE76"=>" \u064E",
+    "\uFE77"=>"\u0640\u064E",
+    "\uFE78"=>" \u064F",
+    "\uFE79"=>"\u0640\u064F",
+    "\uFE7A"=>" \u0650",
+    "\uFE7B"=>"\u0640\u0650",
+    "\uFE7C"=>" \u0651",
+    "\uFE7D"=>"\u0640\u0651",
+    "\uFE7E"=>" \u0652",
+    "\uFE7F"=>"\u0640\u0652",
+    "\uFE80"=>"\u0621",
+    "\uFE81"=>"\u0622",
+    "\uFE82"=>"\u0622",
+    "\uFE83"=>"\u0623",
+    "\uFE84"=>"\u0623",
+    "\uFE85"=>"\u0624",
+    "\uFE86"=>"\u0624",
+    "\uFE87"=>"\u0625",
+    "\uFE88"=>"\u0625",
+    "\uFE89"=>"\u0626",
+    "\uFE8A"=>"\u0626",
+    "\uFE8B"=>"\u0626",
+    "\uFE8C"=>"\u0626",
+    "\uFE8D"=>"\u0627",
+    "\uFE8E"=>"\u0627",
+    "\uFE8F"=>"\u0628",
+    "\uFE90"=>"\u0628",
+    "\uFE91"=>"\u0628",
+    "\uFE92"=>"\u0628",
+    "\uFE93"=>"\u0629",
+    "\uFE94"=>"\u0629",
+    "\uFE95"=>"\u062A",
+    "\uFE96"=>"\u062A",
+    "\uFE97"=>"\u062A",
+    "\uFE98"=>"\u062A",
+    "\uFE99"=>"\u062B",
+    "\uFE9A"=>"\u062B",
+    "\uFE9B"=>"\u062B",
+    "\uFE9C"=>"\u062B",
+    "\uFE9D"=>"\u062C",
+    "\uFE9E"=>"\u062C",
+    "\uFE9F"=>"\u062C",
+    "\uFEA0"=>"\u062C",
+    "\uFEA1"=>"\u062D",
+    "\uFEA2"=>"\u062D",
+    "\uFEA3"=>"\u062D",
+    "\uFEA4"=>"\u062D",
+    "\uFEA5"=>"\u062E",
+    "\uFEA6"=>"\u062E",
+    "\uFEA7"=>"\u062E",
+    "\uFEA8"=>"\u062E",
+    "\uFEA9"=>"\u062F",
+    "\uFEAA"=>"\u062F",
+    "\uFEAB"=>"\u0630",
+    "\uFEAC"=>"\u0630",
+    "\uFEAD"=>"\u0631",
+    "\uFEAE"=>"\u0631",
+    "\uFEAF"=>"\u0632",
+    "\uFEB0"=>"\u0632",
+    "\uFEB1"=>"\u0633",
+    "\uFEB2"=>"\u0633",
+    "\uFEB3"=>"\u0633",
+    "\uFEB4"=>"\u0633",
+    "\uFEB5"=>"\u0634",
+    "\uFEB6"=>"\u0634",
+    "\uFEB7"=>"\u0634",
+    "\uFEB8"=>"\u0634",
+    "\uFEB9"=>"\u0635",
+    "\uFEBA"=>"\u0635",
+    "\uFEBB"=>"\u0635",
+    "\uFEBC"=>"\u0635",
+    "\uFEBD"=>"\u0636",
+    "\uFEBE"=>"\u0636",
+    "\uFEBF"=>"\u0636",
+    "\uFEC0"=>"\u0636",
+    "\uFEC1"=>"\u0637",
+    "\uFEC2"=>"\u0637",
+    "\uFEC3"=>"\u0637",
+    "\uFEC4"=>"\u0637",
+    "\uFEC5"=>"\u0638",
+    "\uFEC6"=>"\u0638",
+    "\uFEC7"=>"\u0638",
+    "\uFEC8"=>"\u0638",
+    "\uFEC9"=>"\u0639",
+    "\uFECA"=>"\u0639",
+    "\uFECB"=>"\u0639",
+    "\uFECC"=>"\u0639",
+    "\uFECD"=>"\u063A",
+    "\uFECE"=>"\u063A",
+    "\uFECF"=>"\u063A",
+    "\uFED0"=>"\u063A",
+    "\uFED1"=>"\u0641",
+    "\uFED2"=>"\u0641",
+    "\uFED3"=>"\u0641",
+    "\uFED4"=>"\u0641",
+    "\uFED5"=>"\u0642",
+    "\uFED6"=>"\u0642",
+    "\uFED7"=>"\u0642",
+    "\uFED8"=>"\u0642",
+    "\uFED9"=>"\u0643",
+    "\uFEDA"=>"\u0643",
+    "\uFEDB"=>"\u0643",
+    "\uFEDC"=>"\u0643",
+    "\uFEDD"=>"\u0644",
+    "\uFEDE"=>"\u0644",
+    "\uFEDF"=>"\u0644",
+    "\uFEE0"=>"\u0644",
+    "\uFEE1"=>"\u0645",
+    "\uFEE2"=>"\u0645",
+    "\uFEE3"=>"\u0645",
+    "\uFEE4"=>"\u0645",
+    "\uFEE5"=>"\u0646",
+    "\uFEE6"=>"\u0646",
+    "\uFEE7"=>"\u0646",
+    "\uFEE8"=>"\u0646",
+    "\uFEE9"=>"\u0647",
+    "\uFEEA"=>"\u0647",
+    "\uFEEB"=>"\u0647",
+    "\uFEEC"=>"\u0647",
+    "\uFEED"=>"\u0648",
+    "\uFEEE"=>"\u0648",
+    "\uFEEF"=>"\u0649",
+    "\uFEF0"=>"\u0649",
+    "\uFEF1"=>"\u064A",
+    "\uFEF2"=>"\u064A",
+    "\uFEF3"=>"\u064A",
+    "\uFEF4"=>"\u064A",
+    "\uFEF5"=>"\u0644\u0622",
+    "\uFEF6"=>"\u0644\u0622",
+    "\uFEF7"=>"\u0644\u0623",
+    "\uFEF8"=>"\u0644\u0623",
+    "\uFEF9"=>"\u0644\u0625",
+    "\uFEFA"=>"\u0644\u0625",
+    "\uFEFB"=>"\u0644\u0627",
+    "\uFEFC"=>"\u0644\u0627",
+    "\uFF01"=>"!",
+    "\uFF02"=>"\"",
+    "\uFF03"=>"#",
+    "\uFF04"=>"$",
+    "\uFF05"=>"%",
+    "\uFF06"=>"&",
+    "\uFF07"=>"'",
+    "\uFF08"=>"(",
+    "\uFF09"=>")",
+    "\uFF0A"=>"*",
+    "\uFF0B"=>"+",
+    "\uFF0C"=>",",
+    "\uFF0D"=>"-",
+    "\uFF0E"=>".",
+    "\uFF0F"=>"/",
+    "\uFF10"=>"0",
+    "\uFF11"=>"1",
+    "\uFF12"=>"2",
+    "\uFF13"=>"3",
+    "\uFF14"=>"4",
+    "\uFF15"=>"5",
+    "\uFF16"=>"6",
+    "\uFF17"=>"7",
+    "\uFF18"=>"8",
+    "\uFF19"=>"9",
+    "\uFF1A"=>":",
+    "\uFF1B"=>";",
+    "\uFF1C"=>"<",
+    "\uFF1D"=>"=",
+    "\uFF1E"=>">",
+    "\uFF1F"=>"?",
+    "\uFF20"=>"@",
+    "\uFF21"=>"A",
+    "\uFF22"=>"B",
+    "\uFF23"=>"C",
+    "\uFF24"=>"D",
+    "\uFF25"=>"E",
+    "\uFF26"=>"F",
+    "\uFF27"=>"G",
+    "\uFF28"=>"H",
+    "\uFF29"=>"I",
+    "\uFF2A"=>"J",
+    "\uFF2B"=>"K",
+    "\uFF2C"=>"L",
+    "\uFF2D"=>"M",
+    "\uFF2E"=>"N",
+    "\uFF2F"=>"O",
+    "\uFF30"=>"P",
+    "\uFF31"=>"Q",
+    "\uFF32"=>"R",
+    "\uFF33"=>"S",
+    "\uFF34"=>"T",
+    "\uFF35"=>"U",
+    "\uFF36"=>"V",
+    "\uFF37"=>"W",
+    "\uFF38"=>"X",
+    "\uFF39"=>"Y",
+    "\uFF3A"=>"Z",
+    "\uFF3B"=>"[",
+    "\uFF3C"=>"\\",
+    "\uFF3D"=>"]",
+    "\uFF3E"=>"^",
+    "\uFF3F"=>"_",
+    "\uFF40"=>"`",
+    "\uFF41"=>"a",
+    "\uFF42"=>"b",
+    "\uFF43"=>"c",
+    "\uFF44"=>"d",
+    "\uFF45"=>"e",
+    "\uFF46"=>"f",
+    "\uFF47"=>"g",
+    "\uFF48"=>"h",
+    "\uFF49"=>"i",
+    "\uFF4A"=>"j",
+    "\uFF4B"=>"k",
+    "\uFF4C"=>"l",
+    "\uFF4D"=>"m",
+    "\uFF4E"=>"n",
+    "\uFF4F"=>"o",
+    "\uFF50"=>"p",
+    "\uFF51"=>"q",
+    "\uFF52"=>"r",
+    "\uFF53"=>"s",
+    "\uFF54"=>"t",
+    "\uFF55"=>"u",
+    "\uFF56"=>"v",
+    "\uFF57"=>"w",
+    "\uFF58"=>"x",
+    "\uFF59"=>"y",
+    "\uFF5A"=>"z",
+    "\uFF5B"=>"{",
+    "\uFF5C"=>"|",
+    "\uFF5D"=>"}",
+    "\uFF5E"=>"~",
+    "\uFF5F"=>"\u2985",
+    "\uFF60"=>"\u2986",
+    "\uFF61"=>"\u3002",
+    "\uFF62"=>"\u300C",
+    "\uFF63"=>"\u300D",
+    "\uFF64"=>"\u3001",
+    "\uFF65"=>"\u30FB",
+    "\uFF66"=>"\u30F2",
+    "\uFF67"=>"\u30A1",
+    "\uFF68"=>"\u30A3",
+    "\uFF69"=>"\u30A5",
+    "\uFF6A"=>"\u30A7",
+    "\uFF6B"=>"\u30A9",
+    "\uFF6C"=>"\u30E3",
+    "\uFF6D"=>"\u30E5",
+    "\uFF6E"=>"\u30E7",
+    "\uFF6F"=>"\u30C3",
+    "\uFF70"=>"\u30FC",
+    "\uFF71"=>"\u30A2",
+    "\uFF72"=>"\u30A4",
+    "\uFF73"=>"\u30A6",
+    "\uFF74"=>"\u30A8",
+    "\uFF75"=>"\u30AA",
+    "\uFF76"=>"\u30AB",
+    "\uFF77"=>"\u30AD",
+    "\uFF78"=>"\u30AF",
+    "\uFF79"=>"\u30B1",
+    "\uFF7A"=>"\u30B3",
+    "\uFF7B"=>"\u30B5",
+    "\uFF7C"=>"\u30B7",
+    "\uFF7D"=>"\u30B9",
+    "\uFF7E"=>"\u30BB",
+    "\uFF7F"=>"\u30BD",
+    "\uFF80"=>"\u30BF",
+    "\uFF81"=>"\u30C1",
+    "\uFF82"=>"\u30C4",
+    "\uFF83"=>"\u30C6",
+    "\uFF84"=>"\u30C8",
+    "\uFF85"=>"\u30CA",
+    "\uFF86"=>"\u30CB",
+    "\uFF87"=>"\u30CC",
+    "\uFF88"=>"\u30CD",
+    "\uFF89"=>"\u30CE",
+    "\uFF8A"=>"\u30CF",
+    "\uFF8B"=>"\u30D2",
+    "\uFF8C"=>"\u30D5",
+    "\uFF8D"=>"\u30D8",
+    "\uFF8E"=>"\u30DB",
+    "\uFF8F"=>"\u30DE",
+    "\uFF90"=>"\u30DF",
+    "\uFF91"=>"\u30E0",
+    "\uFF92"=>"\u30E1",
+    "\uFF93"=>"\u30E2",
+    "\uFF94"=>"\u30E4",
+    "\uFF95"=>"\u30E6",
+    "\uFF96"=>"\u30E8",
+    "\uFF97"=>"\u30E9",
+    "\uFF98"=>"\u30EA",
+    "\uFF99"=>"\u30EB",
+    "\uFF9A"=>"\u30EC",
+    "\uFF9B"=>"\u30ED",
+    "\uFF9C"=>"\u30EF",
+    "\uFF9D"=>"\u30F3",
+    "\uFF9E"=>"\u3099",
+    "\uFF9F"=>"\u309A",
+    "\uFFA0"=>"\u1160",
+    "\uFFA1"=>"\u1100",
+    "\uFFA2"=>"\u1101",
+    "\uFFA3"=>"\u11AA",
+    "\uFFA4"=>"\u1102",
+    "\uFFA5"=>"\u11AC",
+    "\uFFA6"=>"\u11AD",
+    "\uFFA7"=>"\u1103",
+    "\uFFA8"=>"\u1104",
+    "\uFFA9"=>"\u1105",
+    "\uFFAA"=>"\u11B0",
+    "\uFFAB"=>"\u11B1",
+    "\uFFAC"=>"\u11B2",
+    "\uFFAD"=>"\u11B3",
+    "\uFFAE"=>"\u11B4",
+    "\uFFAF"=>"\u11B5",
+    "\uFFB0"=>"\u111A",
+    "\uFFB1"=>"\u1106",
+    "\uFFB2"=>"\u1107",
+    "\uFFB3"=>"\u1108",
+    "\uFFB4"=>"\u1121",
+    "\uFFB5"=>"\u1109",
+    "\uFFB6"=>"\u110A",
+    "\uFFB7"=>"\u110B",
+    "\uFFB8"=>"\u110C",
+    "\uFFB9"=>"\u110D",
+    "\uFFBA"=>"\u110E",
+    "\uFFBB"=>"\u110F",
+    "\uFFBC"=>"\u1110",
+    "\uFFBD"=>"\u1111",
+    "\uFFBE"=>"\u1112",
+    "\uFFC2"=>"\u1161",
+    "\uFFC3"=>"\u1162",
+    "\uFFC4"=>"\u1163",
+    "\uFFC5"=>"\u1164",
+    "\uFFC6"=>"\u1165",
+    "\uFFC7"=>"\u1166",
+    "\uFFCA"=>"\u1167",
+    "\uFFCB"=>"\u1168",
+    "\uFFCC"=>"\u1169",
+    "\uFFCD"=>"\u116A",
+    "\uFFCE"=>"\u116B",
+    "\uFFCF"=>"\u116C",
+    "\uFFD2"=>"\u116D",
+    "\uFFD3"=>"\u116E",
+    "\uFFD4"=>"\u116F",
+    "\uFFD5"=>"\u1170",
+    "\uFFD6"=>"\u1171",
+    "\uFFD7"=>"\u1172",
+    "\uFFDA"=>"\u1173",
+    "\uFFDB"=>"\u1174",
+    "\uFFDC"=>"\u1175",
+    "\uFFE0"=>"\u00A2",
+    "\uFFE1"=>"\u00A3",
+    "\uFFE2"=>"\u00AC",
+    "\uFFE3"=>" \u0304",
+    "\uFFE4"=>"\u00A6",
+    "\uFFE5"=>"\u00A5",
+    "\uFFE6"=>"\u20A9",
+    "\uFFE8"=>"\u2502",
+    "\uFFE9"=>"\u2190",
+    "\uFFEA"=>"\u2191",
+    "\uFFEB"=>"\u2192",
+    "\uFFEC"=>"\u2193",
+    "\uFFED"=>"\u25A0",
+    "\uFFEE"=>"\u25CB",
+    "\u{1D400}"=>"A",
+    "\u{1D401}"=>"B",
+    "\u{1D402}"=>"C",
+    "\u{1D403}"=>"D",
+    "\u{1D404}"=>"E",
+    "\u{1D405}"=>"F",
+    "\u{1D406}"=>"G",
+    "\u{1D407}"=>"H",
+    "\u{1D408}"=>"I",
+    "\u{1D409}"=>"J",
+    "\u{1D40A}"=>"K",
+    "\u{1D40B}"=>"L",
+    "\u{1D40C}"=>"M",
+    "\u{1D40D}"=>"N",
+    "\u{1D40E}"=>"O",
+    "\u{1D40F}"=>"P",
+    "\u{1D410}"=>"Q",
+    "\u{1D411}"=>"R",
+    "\u{1D412}"=>"S",
+    "\u{1D413}"=>"T",
+    "\u{1D414}"=>"U",
+    "\u{1D415}"=>"V",
+    "\u{1D416}"=>"W",
+    "\u{1D417}"=>"X",
+    "\u{1D418}"=>"Y",
+    "\u{1D419}"=>"Z",
+    "\u{1D41A}"=>"a",
+    "\u{1D41B}"=>"b",
+    "\u{1D41C}"=>"c",
+    "\u{1D41D}"=>"d",
+    "\u{1D41E}"=>"e",
+    "\u{1D41F}"=>"f",
+    "\u{1D420}"=>"g",
+    "\u{1D421}"=>"h",
+    "\u{1D422}"=>"i",
+    "\u{1D423}"=>"j",
+    "\u{1D424}"=>"k",
+    "\u{1D425}"=>"l",
+    "\u{1D426}"=>"m",
+    "\u{1D427}"=>"n",
+    "\u{1D428}"=>"o",
+    "\u{1D429}"=>"p",
+    "\u{1D42A}"=>"q",
+    "\u{1D42B}"=>"r",
+    "\u{1D42C}"=>"s",
+    "\u{1D42D}"=>"t",
+    "\u{1D42E}"=>"u",
+    "\u{1D42F}"=>"v",
+    "\u{1D430}"=>"w",
+    "\u{1D431}"=>"x",
+    "\u{1D432}"=>"y",
+    "\u{1D433}"=>"z",
+    "\u{1D434}"=>"A",
+    "\u{1D435}"=>"B",
+    "\u{1D436}"=>"C",
+    "\u{1D437}"=>"D",
+    "\u{1D438}"=>"E",
+    "\u{1D439}"=>"F",
+    "\u{1D43A}"=>"G",
+    "\u{1D43B}"=>"H",
+    "\u{1D43C}"=>"I",
+    "\u{1D43D}"=>"J",
+    "\u{1D43E}"=>"K",
+    "\u{1D43F}"=>"L",
+    "\u{1D440}"=>"M",
+    "\u{1D441}"=>"N",
+    "\u{1D442}"=>"O",
+    "\u{1D443}"=>"P",
+    "\u{1D444}"=>"Q",
+    "\u{1D445}"=>"R",
+    "\u{1D446}"=>"S",
+    "\u{1D447}"=>"T",
+    "\u{1D448}"=>"U",
+    "\u{1D449}"=>"V",
+    "\u{1D44A}"=>"W",
+    "\u{1D44B}"=>"X",
+    "\u{1D44C}"=>"Y",
+    "\u{1D44D}"=>"Z",
+    "\u{1D44E}"=>"a",
+    "\u{1D44F}"=>"b",
+    "\u{1D450}"=>"c",
+    "\u{1D451}"=>"d",
+    "\u{1D452}"=>"e",
+    "\u{1D453}"=>"f",
+    "\u{1D454}"=>"g",
+    "\u{1D456}"=>"i",
+    "\u{1D457}"=>"j",
+    "\u{1D458}"=>"k",
+    "\u{1D459}"=>"l",
+    "\u{1D45A}"=>"m",
+    "\u{1D45B}"=>"n",
+    "\u{1D45C}"=>"o",
+    "\u{1D45D}"=>"p",
+    "\u{1D45E}"=>"q",
+    "\u{1D45F}"=>"r",
+    "\u{1D460}"=>"s",
+    "\u{1D461}"=>"t",
+    "\u{1D462}"=>"u",
+    "\u{1D463}"=>"v",
+    "\u{1D464}"=>"w",
+    "\u{1D465}"=>"x",
+    "\u{1D466}"=>"y",
+    "\u{1D467}"=>"z",
+    "\u{1D468}"=>"A",
+    "\u{1D469}"=>"B",
+    "\u{1D46A}"=>"C",
+    "\u{1D46B}"=>"D",
+    "\u{1D46C}"=>"E",
+    "\u{1D46D}"=>"F",
+    "\u{1D46E}"=>"G",
+    "\u{1D46F}"=>"H",
+    "\u{1D470}"=>"I",
+    "\u{1D471}"=>"J",
+    "\u{1D472}"=>"K",
+    "\u{1D473}"=>"L",
+    "\u{1D474}"=>"M",
+    "\u{1D475}"=>"N",
+    "\u{1D476}"=>"O",
+    "\u{1D477}"=>"P",
+    "\u{1D478}"=>"Q",
+    "\u{1D479}"=>"R",
+    "\u{1D47A}"=>"S",
+    "\u{1D47B}"=>"T",
+    "\u{1D47C}"=>"U",
+    "\u{1D47D}"=>"V",
+    "\u{1D47E}"=>"W",
+    "\u{1D47F}"=>"X",
+    "\u{1D480}"=>"Y",
+    "\u{1D481}"=>"Z",
+    "\u{1D482}"=>"a",
+    "\u{1D483}"=>"b",
+    "\u{1D484}"=>"c",
+    "\u{1D485}"=>"d",
+    "\u{1D486}"=>"e",
+    "\u{1D487}"=>"f",
+    "\u{1D488}"=>"g",
+    "\u{1D489}"=>"h",
+    "\u{1D48A}"=>"i",
+    "\u{1D48B}"=>"j",
+    "\u{1D48C}"=>"k",
+    "\u{1D48D}"=>"l",
+    "\u{1D48E}"=>"m",
+    "\u{1D48F}"=>"n",
+    "\u{1D490}"=>"o",
+    "\u{1D491}"=>"p",
+    "\u{1D492}"=>"q",
+    "\u{1D493}"=>"r",
+    "\u{1D494}"=>"s",
+    "\u{1D495}"=>"t",
+    "\u{1D496}"=>"u",
+    "\u{1D497}"=>"v",
+    "\u{1D498}"=>"w",
+    "\u{1D499}"=>"x",
+    "\u{1D49A}"=>"y",
+    "\u{1D49B}"=>"z",
+    "\u{1D49C}"=>"A",
+    "\u{1D49E}"=>"C",
+    "\u{1D49F}"=>"D",
+    "\u{1D4A2}"=>"G",
+    "\u{1D4A5}"=>"J",
+    "\u{1D4A6}"=>"K",
+    "\u{1D4A9}"=>"N",
+    "\u{1D4AA}"=>"O",
+    "\u{1D4AB}"=>"P",
+    "\u{1D4AC}"=>"Q",
+    "\u{1D4AE}"=>"S",
+    "\u{1D4AF}"=>"T",
+    "\u{1D4B0}"=>"U",
+    "\u{1D4B1}"=>"V",
+    "\u{1D4B2}"=>"W",
+    "\u{1D4B3}"=>"X",
+    "\u{1D4B4}"=>"Y",
+    "\u{1D4B5}"=>"Z",
+    "\u{1D4B6}"=>"a",
+    "\u{1D4B7}"=>"b",
+    "\u{1D4B8}"=>"c",
+    "\u{1D4B9}"=>"d",
+    "\u{1D4BB}"=>"f",
+    "\u{1D4BD}"=>"h",
+    "\u{1D4BE}"=>"i",
+    "\u{1D4BF}"=>"j",
+    "\u{1D4C0}"=>"k",
+    "\u{1D4C1}"=>"l",
+    "\u{1D4C2}"=>"m",
+    "\u{1D4C3}"=>"n",
+    "\u{1D4C5}"=>"p",
+    "\u{1D4C6}"=>"q",
+    "\u{1D4C7}"=>"r",
+    "\u{1D4C8}"=>"s",
+    "\u{1D4C9}"=>"t",
+    "\u{1D4CA}"=>"u",
+    "\u{1D4CB}"=>"v",
+    "\u{1D4CC}"=>"w",
+    "\u{1D4CD}"=>"x",
+    "\u{1D4CE}"=>"y",
+    "\u{1D4CF}"=>"z",
+    "\u{1D4D0}"=>"A",
+    "\u{1D4D1}"=>"B",
+    "\u{1D4D2}"=>"C",
+    "\u{1D4D3}"=>"D",
+    "\u{1D4D4}"=>"E",
+    "\u{1D4D5}"=>"F",
+    "\u{1D4D6}"=>"G",
+    "\u{1D4D7}"=>"H",
+    "\u{1D4D8}"=>"I",
+    "\u{1D4D9}"=>"J",
+    "\u{1D4DA}"=>"K",
+    "\u{1D4DB}"=>"L",
+    "\u{1D4DC}"=>"M",
+    "\u{1D4DD}"=>"N",
+    "\u{1D4DE}"=>"O",
+    "\u{1D4DF}"=>"P",
+    "\u{1D4E0}"=>"Q",
+    "\u{1D4E1}"=>"R",
+    "\u{1D4E2}"=>"S",
+    "\u{1D4E3}"=>"T",
+    "\u{1D4E4}"=>"U",
+    "\u{1D4E5}"=>"V",
+    "\u{1D4E6}"=>"W",
+    "\u{1D4E7}"=>"X",
+    "\u{1D4E8}"=>"Y",
+    "\u{1D4E9}"=>"Z",
+    "\u{1D4EA}"=>"a",
+    "\u{1D4EB}"=>"b",
+    "\u{1D4EC}"=>"c",
+    "\u{1D4ED}"=>"d",
+    "\u{1D4EE}"=>"e",
+    "\u{1D4EF}"=>"f",
+    "\u{1D4F0}"=>"g",
+    "\u{1D4F1}"=>"h",
+    "\u{1D4F2}"=>"i",
+    "\u{1D4F3}"=>"j",
+    "\u{1D4F4}"=>"k",
+    "\u{1D4F5}"=>"l",
+    "\u{1D4F6}"=>"m",
+    "\u{1D4F7}"=>"n",
+    "\u{1D4F8}"=>"o",
+    "\u{1D4F9}"=>"p",
+    "\u{1D4FA}"=>"q",
+    "\u{1D4FB}"=>"r",
+    "\u{1D4FC}"=>"s",
+    "\u{1D4FD}"=>"t",
+    "\u{1D4FE}"=>"u",
+    "\u{1D4FF}"=>"v",
+    "\u{1D500}"=>"w",
+    "\u{1D501}"=>"x",
+    "\u{1D502}"=>"y",
+    "\u{1D503}"=>"z",
+    "\u{1D504}"=>"A",
+    "\u{1D505}"=>"B",
+    "\u{1D507}"=>"D",
+    "\u{1D508}"=>"E",
+    "\u{1D509}"=>"F",
+    "\u{1D50A}"=>"G",
+    "\u{1D50D}"=>"J",
+    "\u{1D50E}"=>"K",
+    "\u{1D50F}"=>"L",
+    "\u{1D510}"=>"M",
+    "\u{1D511}"=>"N",
+    "\u{1D512}"=>"O",
+    "\u{1D513}"=>"P",
+    "\u{1D514}"=>"Q",
+    "\u{1D516}"=>"S",
+    "\u{1D517}"=>"T",
+    "\u{1D518}"=>"U",
+    "\u{1D519}"=>"V",
+    "\u{1D51A}"=>"W",
+    "\u{1D51B}"=>"X",
+    "\u{1D51C}"=>"Y",
+    "\u{1D51E}"=>"a",
+    "\u{1D51F}"=>"b",
+    "\u{1D520}"=>"c",
+    "\u{1D521}"=>"d",
+    "\u{1D522}"=>"e",
+    "\u{1D523}"=>"f",
+    "\u{1D524}"=>"g",
+    "\u{1D525}"=>"h",
+    "\u{1D526}"=>"i",
+    "\u{1D527}"=>"j",
+    "\u{1D528}"=>"k",
+    "\u{1D529}"=>"l",
+    "\u{1D52A}"=>"m",
+    "\u{1D52B}"=>"n",
+    "\u{1D52C}"=>"o",
+    "\u{1D52D}"=>"p",
+    "\u{1D52E}"=>"q",
+    "\u{1D52F}"=>"r",
+    "\u{1D530}"=>"s",
+    "\u{1D531}"=>"t",
+    "\u{1D532}"=>"u",
+    "\u{1D533}"=>"v",
+    "\u{1D534}"=>"w",
+    "\u{1D535}"=>"x",
+    "\u{1D536}"=>"y",
+    "\u{1D537}"=>"z",
+    "\u{1D538}"=>"A",
+    "\u{1D539}"=>"B",
+    "\u{1D53B}"=>"D",
+    "\u{1D53C}"=>"E",
+    "\u{1D53D}"=>"F",
+    "\u{1D53E}"=>"G",
+    "\u{1D540}"=>"I",
+    "\u{1D541}"=>"J",
+    "\u{1D542}"=>"K",
+    "\u{1D543}"=>"L",
+    "\u{1D544}"=>"M",
+    "\u{1D546}"=>"O",
+    "\u{1D54A}"=>"S",
+    "\u{1D54B}"=>"T",
+    "\u{1D54C}"=>"U",
+    "\u{1D54D}"=>"V",
+    "\u{1D54E}"=>"W",
+    "\u{1D54F}"=>"X",
+    "\u{1D550}"=>"Y",
+    "\u{1D552}"=>"a",
+    "\u{1D553}"=>"b",
+    "\u{1D554}"=>"c",
+    "\u{1D555}"=>"d",
+    "\u{1D556}"=>"e",
+    "\u{1D557}"=>"f",
+    "\u{1D558}"=>"g",
+    "\u{1D559}"=>"h",
+    "\u{1D55A}"=>"i",
+    "\u{1D55B}"=>"j",
+    "\u{1D55C}"=>"k",
+    "\u{1D55D}"=>"l",
+    "\u{1D55E}"=>"m",
+    "\u{1D55F}"=>"n",
+    "\u{1D560}"=>"o",
+    "\u{1D561}"=>"p",
+    "\u{1D562}"=>"q",
+    "\u{1D563}"=>"r",
+    "\u{1D564}"=>"s",
+    "\u{1D565}"=>"t",
+    "\u{1D566}"=>"u",
+    "\u{1D567}"=>"v",
+    "\u{1D568}"=>"w",
+    "\u{1D569}"=>"x",
+    "\u{1D56A}"=>"y",
+    "\u{1D56B}"=>"z",
+    "\u{1D56C}"=>"A",
+    "\u{1D56D}"=>"B",
+    "\u{1D56E}"=>"C",
+    "\u{1D56F}"=>"D",
+    "\u{1D570}"=>"E",
+    "\u{1D571}"=>"F",
+    "\u{1D572}"=>"G",
+    "\u{1D573}"=>"H",
+    "\u{1D574}"=>"I",
+    "\u{1D575}"=>"J",
+    "\u{1D576}"=>"K",
+    "\u{1D577}"=>"L",
+    "\u{1D578}"=>"M",
+    "\u{1D579}"=>"N",
+    "\u{1D57A}"=>"O",
+    "\u{1D57B}"=>"P",
+    "\u{1D57C}"=>"Q",
+    "\u{1D57D}"=>"R",
+    "\u{1D57E}"=>"S",
+    "\u{1D57F}"=>"T",
+    "\u{1D580}"=>"U",
+    "\u{1D581}"=>"V",
+    "\u{1D582}"=>"W",
+    "\u{1D583}"=>"X",
+    "\u{1D584}"=>"Y",
+    "\u{1D585}"=>"Z",
+    "\u{1D586}"=>"a",
+    "\u{1D587}"=>"b",
+    "\u{1D588}"=>"c",
+    "\u{1D589}"=>"d",
+    "\u{1D58A}"=>"e",
+    "\u{1D58B}"=>"f",
+    "\u{1D58C}"=>"g",
+    "\u{1D58D}"=>"h",
+    "\u{1D58E}"=>"i",
+    "\u{1D58F}"=>"j",
+    "\u{1D590}"=>"k",
+    "\u{1D591}"=>"l",
+    "\u{1D592}"=>"m",
+    "\u{1D593}"=>"n",
+    "\u{1D594}"=>"o",
+    "\u{1D595}"=>"p",
+    "\u{1D596}"=>"q",
+    "\u{1D597}"=>"r",
+    "\u{1D598}"=>"s",
+    "\u{1D599}"=>"t",
+    "\u{1D59A}"=>"u",
+    "\u{1D59B}"=>"v",
+    "\u{1D59C}"=>"w",
+    "\u{1D59D}"=>"x",
+    "\u{1D59E}"=>"y",
+    "\u{1D59F}"=>"z",
+    "\u{1D5A0}"=>"A",
+    "\u{1D5A1}"=>"B",
+    "\u{1D5A2}"=>"C",
+    "\u{1D5A3}"=>"D",
+    "\u{1D5A4}"=>"E",
+    "\u{1D5A5}"=>"F",
+    "\u{1D5A6}"=>"G",
+    "\u{1D5A7}"=>"H",
+    "\u{1D5A8}"=>"I",
+    "\u{1D5A9}"=>"J",
+    "\u{1D5AA}"=>"K",
+    "\u{1D5AB}"=>"L",
+    "\u{1D5AC}"=>"M",
+    "\u{1D5AD}"=>"N",
+    "\u{1D5AE}"=>"O",
+    "\u{1D5AF}"=>"P",
+    "\u{1D5B0}"=>"Q",
+    "\u{1D5B1}"=>"R",
+    "\u{1D5B2}"=>"S",
+    "\u{1D5B3}"=>"T",
+    "\u{1D5B4}"=>"U",
+    "\u{1D5B5}"=>"V",
+    "\u{1D5B6}"=>"W",
+    "\u{1D5B7}"=>"X",
+    "\u{1D5B8}"=>"Y",
+    "\u{1D5B9}"=>"Z",
+    "\u{1D5BA}"=>"a",
+    "\u{1D5BB}"=>"b",
+    "\u{1D5BC}"=>"c",
+    "\u{1D5BD}"=>"d",
+    "\u{1D5BE}"=>"e",
+    "\u{1D5BF}"=>"f",
+    "\u{1D5C0}"=>"g",
+    "\u{1D5C1}"=>"h",
+    "\u{1D5C2}"=>"i",
+    "\u{1D5C3}"=>"j",
+    "\u{1D5C4}"=>"k",
+    "\u{1D5C5}"=>"l",
+    "\u{1D5C6}"=>"m",
+    "\u{1D5C7}"=>"n",
+    "\u{1D5C8}"=>"o",
+    "\u{1D5C9}"=>"p",
+    "\u{1D5CA}"=>"q",
+    "\u{1D5CB}"=>"r",
+    "\u{1D5CC}"=>"s",
+    "\u{1D5CD}"=>"t",
+    "\u{1D5CE}"=>"u",
+    "\u{1D5CF}"=>"v",
+    "\u{1D5D0}"=>"w",
+    "\u{1D5D1}"=>"x",
+    "\u{1D5D2}"=>"y",
+    "\u{1D5D3}"=>"z",
+    "\u{1D5D4}"=>"A",
+    "\u{1D5D5}"=>"B",
+    "\u{1D5D6}"=>"C",
+    "\u{1D5D7}"=>"D",
+    "\u{1D5D8}"=>"E",
+    "\u{1D5D9}"=>"F",
+    "\u{1D5DA}"=>"G",
+    "\u{1D5DB}"=>"H",
+    "\u{1D5DC}"=>"I",
+    "\u{1D5DD}"=>"J",
+    "\u{1D5DE}"=>"K",
+    "\u{1D5DF}"=>"L",
+    "\u{1D5E0}"=>"M",
+    "\u{1D5E1}"=>"N",
+    "\u{1D5E2}"=>"O",
+    "\u{1D5E3}"=>"P",
+    "\u{1D5E4}"=>"Q",
+    "\u{1D5E5}"=>"R",
+    "\u{1D5E6}"=>"S",
+    "\u{1D5E7}"=>"T",
+    "\u{1D5E8}"=>"U",
+    "\u{1D5E9}"=>"V",
+    "\u{1D5EA}"=>"W",
+    "\u{1D5EB}"=>"X",
+    "\u{1D5EC}"=>"Y",
+    "\u{1D5ED}"=>"Z",
+    "\u{1D5EE}"=>"a",
+    "\u{1D5EF}"=>"b",
+    "\u{1D5F0}"=>"c",
+    "\u{1D5F1}"=>"d",
+    "\u{1D5F2}"=>"e",
+    "\u{1D5F3}"=>"f",
+    "\u{1D5F4}"=>"g",
+    "\u{1D5F5}"=>"h",
+    "\u{1D5F6}"=>"i",
+    "\u{1D5F7}"=>"j",
+    "\u{1D5F8}"=>"k",
+    "\u{1D5F9}"=>"l",
+    "\u{1D5FA}"=>"m",
+    "\u{1D5FB}"=>"n",
+    "\u{1D5FC}"=>"o",
+    "\u{1D5FD}"=>"p",
+    "\u{1D5FE}"=>"q",
+    "\u{1D5FF}"=>"r",
+    "\u{1D600}"=>"s",
+    "\u{1D601}"=>"t",
+    "\u{1D602}"=>"u",
+    "\u{1D603}"=>"v",
+    "\u{1D604}"=>"w",
+    "\u{1D605}"=>"x",
+    "\u{1D606}"=>"y",
+    "\u{1D607}"=>"z",
+    "\u{1D608}"=>"A",
+    "\u{1D609}"=>"B",
+    "\u{1D60A}"=>"C",
+    "\u{1D60B}"=>"D",
+    "\u{1D60C}"=>"E",
+    "\u{1D60D}"=>"F",
+    "\u{1D60E}"=>"G",
+    "\u{1D60F}"=>"H",
+    "\u{1D610}"=>"I",
+    "\u{1D611}"=>"J",
+    "\u{1D612}"=>"K",
+    "\u{1D613}"=>"L",
+    "\u{1D614}"=>"M",
+    "\u{1D615}"=>"N",
+    "\u{1D616}"=>"O",
+    "\u{1D617}"=>"P",
+    "\u{1D618}"=>"Q",
+    "\u{1D619}"=>"R",
+    "\u{1D61A}"=>"S",
+    "\u{1D61B}"=>"T",
+    "\u{1D61C}"=>"U",
+    "\u{1D61D}"=>"V",
+    "\u{1D61E}"=>"W",
+    "\u{1D61F}"=>"X",
+    "\u{1D620}"=>"Y",
+    "\u{1D621}"=>"Z",
+    "\u{1D622}"=>"a",
+    "\u{1D623}"=>"b",
+    "\u{1D624}"=>"c",
+    "\u{1D625}"=>"d",
+    "\u{1D626}"=>"e",
+    "\u{1D627}"=>"f",
+    "\u{1D628}"=>"g",
+    "\u{1D629}"=>"h",
+    "\u{1D62A}"=>"i",
+    "\u{1D62B}"=>"j",
+    "\u{1D62C}"=>"k",
+    "\u{1D62D}"=>"l",
+    "\u{1D62E}"=>"m",
+    "\u{1D62F}"=>"n",
+    "\u{1D630}"=>"o",
+    "\u{1D631}"=>"p",
+    "\u{1D632}"=>"q",
+    "\u{1D633}"=>"r",
+    "\u{1D634}"=>"s",
+    "\u{1D635}"=>"t",
+    "\u{1D636}"=>"u",
+    "\u{1D637}"=>"v",
+    "\u{1D638}"=>"w",
+    "\u{1D639}"=>"x",
+    "\u{1D63A}"=>"y",
+    "\u{1D63B}"=>"z",
+    "\u{1D63C}"=>"A",
+    "\u{1D63D}"=>"B",
+    "\u{1D63E}"=>"C",
+    "\u{1D63F}"=>"D",
+    "\u{1D640}"=>"E",
+    "\u{1D641}"=>"F",
+    "\u{1D642}"=>"G",
+    "\u{1D643}"=>"H",
+    "\u{1D644}"=>"I",
+    "\u{1D645}"=>"J",
+    "\u{1D646}"=>"K",
+    "\u{1D647}"=>"L",
+    "\u{1D648}"=>"M",
+    "\u{1D649}"=>"N",
+    "\u{1D64A}"=>"O",
+    "\u{1D64B}"=>"P",
+    "\u{1D64C}"=>"Q",
+    "\u{1D64D}"=>"R",
+    "\u{1D64E}"=>"S",
+    "\u{1D64F}"=>"T",
+    "\u{1D650}"=>"U",
+    "\u{1D651}"=>"V",
+    "\u{1D652}"=>"W",
+    "\u{1D653}"=>"X",
+    "\u{1D654}"=>"Y",
+    "\u{1D655}"=>"Z",
+    "\u{1D656}"=>"a",
+    "\u{1D657}"=>"b",
+    "\u{1D658}"=>"c",
+    "\u{1D659}"=>"d",
+    "\u{1D65A}"=>"e",
+    "\u{1D65B}"=>"f",
+    "\u{1D65C}"=>"g",
+    "\u{1D65D}"=>"h",
+    "\u{1D65E}"=>"i",
+    "\u{1D65F}"=>"j",
+    "\u{1D660}"=>"k",
+    "\u{1D661}"=>"l",
+    "\u{1D662}"=>"m",
+    "\u{1D663}"=>"n",
+    "\u{1D664}"=>"o",
+    "\u{1D665}"=>"p",
+    "\u{1D666}"=>"q",
+    "\u{1D667}"=>"r",
+    "\u{1D668}"=>"s",
+    "\u{1D669}"=>"t",
+    "\u{1D66A}"=>"u",
+    "\u{1D66B}"=>"v",
+    "\u{1D66C}"=>"w",
+    "\u{1D66D}"=>"x",
+    "\u{1D66E}"=>"y",
+    "\u{1D66F}"=>"z",
+    "\u{1D670}"=>"A",
+    "\u{1D671}"=>"B",
+    "\u{1D672}"=>"C",
+    "\u{1D673}"=>"D",
+    "\u{1D674}"=>"E",
+    "\u{1D675}"=>"F",
+    "\u{1D676}"=>"G",
+    "\u{1D677}"=>"H",
+    "\u{1D678}"=>"I",
+    "\u{1D679}"=>"J",
+    "\u{1D67A}"=>"K",
+    "\u{1D67B}"=>"L",
+    "\u{1D67C}"=>"M",
+    "\u{1D67D}"=>"N",
+    "\u{1D67E}"=>"O",
+    "\u{1D67F}"=>"P",
+    "\u{1D680}"=>"Q",
+    "\u{1D681}"=>"R",
+    "\u{1D682}"=>"S",
+    "\u{1D683}"=>"T",
+    "\u{1D684}"=>"U",
+    "\u{1D685}"=>"V",
+    "\u{1D686}"=>"W",
+    "\u{1D687}"=>"X",
+    "\u{1D688}"=>"Y",
+    "\u{1D689}"=>"Z",
+    "\u{1D68A}"=>"a",
+    "\u{1D68B}"=>"b",
+    "\u{1D68C}"=>"c",
+    "\u{1D68D}"=>"d",
+    "\u{1D68E}"=>"e",
+    "\u{1D68F}"=>"f",
+    "\u{1D690}"=>"g",
+    "\u{1D691}"=>"h",
+    "\u{1D692}"=>"i",
+    "\u{1D693}"=>"j",
+    "\u{1D694}"=>"k",
+    "\u{1D695}"=>"l",
+    "\u{1D696}"=>"m",
+    "\u{1D697}"=>"n",
+    "\u{1D698}"=>"o",
+    "\u{1D699}"=>"p",
+    "\u{1D69A}"=>"q",
+    "\u{1D69B}"=>"r",
+    "\u{1D69C}"=>"s",
+    "\u{1D69D}"=>"t",
+    "\u{1D69E}"=>"u",
+    "\u{1D69F}"=>"v",
+    "\u{1D6A0}"=>"w",
+    "\u{1D6A1}"=>"x",
+    "\u{1D6A2}"=>"y",
+    "\u{1D6A3}"=>"z",
+    "\u{1D6A4}"=>"\u0131",
+    "\u{1D6A5}"=>"\u0237",
+    "\u{1D6A8}"=>"\u0391",
+    "\u{1D6A9}"=>"\u0392",
+    "\u{1D6AA}"=>"\u0393",
+    "\u{1D6AB}"=>"\u0394",
+    "\u{1D6AC}"=>"\u0395",
+    "\u{1D6AD}"=>"\u0396",
+    "\u{1D6AE}"=>"\u0397",
+    "\u{1D6AF}"=>"\u0398",
+    "\u{1D6B0}"=>"\u0399",
+    "\u{1D6B1}"=>"\u039A",
+    "\u{1D6B2}"=>"\u039B",
+    "\u{1D6B3}"=>"\u039C",
+    "\u{1D6B4}"=>"\u039D",
+    "\u{1D6B5}"=>"\u039E",
+    "\u{1D6B6}"=>"\u039F",
+    "\u{1D6B7}"=>"\u03A0",
+    "\u{1D6B8}"=>"\u03A1",
+    "\u{1D6B9}"=>"\u0398",
+    "\u{1D6BA}"=>"\u03A3",
+    "\u{1D6BB}"=>"\u03A4",
+    "\u{1D6BC}"=>"\u03A5",
+    "\u{1D6BD}"=>"\u03A6",
+    "\u{1D6BE}"=>"\u03A7",
+    "\u{1D6BF}"=>"\u03A8",
+    "\u{1D6C0}"=>"\u03A9",
+    "\u{1D6C1}"=>"\u2207",
+    "\u{1D6C2}"=>"\u03B1",
+    "\u{1D6C3}"=>"\u03B2",
+    "\u{1D6C4}"=>"\u03B3",
+    "\u{1D6C5}"=>"\u03B4",
+    "\u{1D6C6}"=>"\u03B5",
+    "\u{1D6C7}"=>"\u03B6",
+    "\u{1D6C8}"=>"\u03B7",
+    "\u{1D6C9}"=>"\u03B8",
+    "\u{1D6CA}"=>"\u03B9",
+    "\u{1D6CB}"=>"\u03BA",
+    "\u{1D6CC}"=>"\u03BB",
+    "\u{1D6CD}"=>"\u03BC",
+    "\u{1D6CE}"=>"\u03BD",
+    "\u{1D6CF}"=>"\u03BE",
+    "\u{1D6D0}"=>"\u03BF",
+    "\u{1D6D1}"=>"\u03C0",
+    "\u{1D6D2}"=>"\u03C1",
+    "\u{1D6D3}"=>"\u03C2",
+    "\u{1D6D4}"=>"\u03C3",
+    "\u{1D6D5}"=>"\u03C4",
+    "\u{1D6D6}"=>"\u03C5",
+    "\u{1D6D7}"=>"\u03C6",
+    "\u{1D6D8}"=>"\u03C7",
+    "\u{1D6D9}"=>"\u03C8",
+    "\u{1D6DA}"=>"\u03C9",
+    "\u{1D6DB}"=>"\u2202",
+    "\u{1D6DC}"=>"\u03B5",
+    "\u{1D6DD}"=>"\u03B8",
+    "\u{1D6DE}"=>"\u03BA",
+    "\u{1D6DF}"=>"\u03C6",
+    "\u{1D6E0}"=>"\u03C1",
+    "\u{1D6E1}"=>"\u03C0",
+    "\u{1D6E2}"=>"\u0391",
+    "\u{1D6E3}"=>"\u0392",
+    "\u{1D6E4}"=>"\u0393",
+    "\u{1D6E5}"=>"\u0394",
+    "\u{1D6E6}"=>"\u0395",
+    "\u{1D6E7}"=>"\u0396",
+    "\u{1D6E8}"=>"\u0397",
+    "\u{1D6E9}"=>"\u0398",
+    "\u{1D6EA}"=>"\u0399",
+    "\u{1D6EB}"=>"\u039A",
+    "\u{1D6EC}"=>"\u039B",
+    "\u{1D6ED}"=>"\u039C",
+    "\u{1D6EE}"=>"\u039D",
+    "\u{1D6EF}"=>"\u039E",
+    "\u{1D6F0}"=>"\u039F",
+    "\u{1D6F1}"=>"\u03A0",
+    "\u{1D6F2}"=>"\u03A1",
+    "\u{1D6F3}"=>"\u0398",
+    "\u{1D6F4}"=>"\u03A3",
+    "\u{1D6F5}"=>"\u03A4",
+    "\u{1D6F6}"=>"\u03A5",
+    "\u{1D6F7}"=>"\u03A6",
+    "\u{1D6F8}"=>"\u03A7",
+    "\u{1D6F9}"=>"\u03A8",
+    "\u{1D6FA}"=>"\u03A9",
+    "\u{1D6FB}"=>"\u2207",
+    "\u{1D6FC}"=>"\u03B1",
+    "\u{1D6FD}"=>"\u03B2",
+    "\u{1D6FE}"=>"\u03B3",
+    "\u{1D6FF}"=>"\u03B4",
+    "\u{1D700}"=>"\u03B5",
+    "\u{1D701}"=>"\u03B6",
+    "\u{1D702}"=>"\u03B7",
+    "\u{1D703}"=>"\u03B8",
+    "\u{1D704}"=>"\u03B9",
+    "\u{1D705}"=>"\u03BA",
+    "\u{1D706}"=>"\u03BB",
+    "\u{1D707}"=>"\u03BC",
+    "\u{1D708}"=>"\u03BD",
+    "\u{1D709}"=>"\u03BE",
+    "\u{1D70A}"=>"\u03BF",
+    "\u{1D70B}"=>"\u03C0",
+    "\u{1D70C}"=>"\u03C1",
+    "\u{1D70D}"=>"\u03C2",
+    "\u{1D70E}"=>"\u03C3",
+    "\u{1D70F}"=>"\u03C4",
+    "\u{1D710}"=>"\u03C5",
+    "\u{1D711}"=>"\u03C6",
+    "\u{1D712}"=>"\u03C7",
+    "\u{1D713}"=>"\u03C8",
+    "\u{1D714}"=>"\u03C9",
+    "\u{1D715}"=>"\u2202",
+    "\u{1D716}"=>"\u03B5",
+    "\u{1D717}"=>"\u03B8",
+    "\u{1D718}"=>"\u03BA",
+    "\u{1D719}"=>"\u03C6",
+    "\u{1D71A}"=>"\u03C1",
+    "\u{1D71B}"=>"\u03C0",
+    "\u{1D71C}"=>"\u0391",
+    "\u{1D71D}"=>"\u0392",
+    "\u{1D71E}"=>"\u0393",
+    "\u{1D71F}"=>"\u0394",
+    "\u{1D720}"=>"\u0395",
+    "\u{1D721}"=>"\u0396",
+    "\u{1D722}"=>"\u0397",
+    "\u{1D723}"=>"\u0398",
+    "\u{1D724}"=>"\u0399",
+    "\u{1D725}"=>"\u039A",
+    "\u{1D726}"=>"\u039B",
+    "\u{1D727}"=>"\u039C",
+    "\u{1D728}"=>"\u039D",
+    "\u{1D729}"=>"\u039E",
+    "\u{1D72A}"=>"\u039F",
+    "\u{1D72B}"=>"\u03A0",
+    "\u{1D72C}"=>"\u03A1",
+    "\u{1D72D}"=>"\u0398",
+    "\u{1D72E}"=>"\u03A3",
+    "\u{1D72F}"=>"\u03A4",
+    "\u{1D730}"=>"\u03A5",
+    "\u{1D731}"=>"\u03A6",
+    "\u{1D732}"=>"\u03A7",
+    "\u{1D733}"=>"\u03A8",
+    "\u{1D734}"=>"\u03A9",
+    "\u{1D735}"=>"\u2207",
+    "\u{1D736}"=>"\u03B1",
+    "\u{1D737}"=>"\u03B2",
+    "\u{1D738}"=>"\u03B3",
+    "\u{1D739}"=>"\u03B4",
+    "\u{1D73A}"=>"\u03B5",
+    "\u{1D73B}"=>"\u03B6",
+    "\u{1D73C}"=>"\u03B7",
+    "\u{1D73D}"=>"\u03B8",
+    "\u{1D73E}"=>"\u03B9",
+    "\u{1D73F}"=>"\u03BA",
+    "\u{1D740}"=>"\u03BB",
+    "\u{1D741}"=>"\u03BC",
+    "\u{1D742}"=>"\u03BD",
+    "\u{1D743}"=>"\u03BE",
+    "\u{1D744}"=>"\u03BF",
+    "\u{1D745}"=>"\u03C0",
+    "\u{1D746}"=>"\u03C1",
+    "\u{1D747}"=>"\u03C2",
+    "\u{1D748}"=>"\u03C3",
+    "\u{1D749}"=>"\u03C4",
+    "\u{1D74A}"=>"\u03C5",
+    "\u{1D74B}"=>"\u03C6",
+    "\u{1D74C}"=>"\u03C7",
+    "\u{1D74D}"=>"\u03C8",
+    "\u{1D74E}"=>"\u03C9",
+    "\u{1D74F}"=>"\u2202",
+    "\u{1D750}"=>"\u03B5",
+    "\u{1D751}"=>"\u03B8",
+    "\u{1D752}"=>"\u03BA",
+    "\u{1D753}"=>"\u03C6",
+    "\u{1D754}"=>"\u03C1",
+    "\u{1D755}"=>"\u03C0",
+    "\u{1D756}"=>"\u0391",
+    "\u{1D757}"=>"\u0392",
+    "\u{1D758}"=>"\u0393",
+    "\u{1D759}"=>"\u0394",
+    "\u{1D75A}"=>"\u0395",
+    "\u{1D75B}"=>"\u0396",
+    "\u{1D75C}"=>"\u0397",
+    "\u{1D75D}"=>"\u0398",
+    "\u{1D75E}"=>"\u0399",
+    "\u{1D75F}"=>"\u039A",
+    "\u{1D760}"=>"\u039B",
+    "\u{1D761}"=>"\u039C",
+    "\u{1D762}"=>"\u039D",
+    "\u{1D763}"=>"\u039E",
+    "\u{1D764}"=>"\u039F",
+    "\u{1D765}"=>"\u03A0",
+    "\u{1D766}"=>"\u03A1",
+    "\u{1D767}"=>"\u0398",
+    "\u{1D768}"=>"\u03A3",
+    "\u{1D769}"=>"\u03A4",
+    "\u{1D76A}"=>"\u03A5",
+    "\u{1D76B}"=>"\u03A6",
+    "\u{1D76C}"=>"\u03A7",
+    "\u{1D76D}"=>"\u03A8",
+    "\u{1D76E}"=>"\u03A9",
+    "\u{1D76F}"=>"\u2207",
+    "\u{1D770}"=>"\u03B1",
+    "\u{1D771}"=>"\u03B2",
+    "\u{1D772}"=>"\u03B3",
+    "\u{1D773}"=>"\u03B4",
+    "\u{1D774}"=>"\u03B5",
+    "\u{1D775}"=>"\u03B6",
+    "\u{1D776}"=>"\u03B7",
+    "\u{1D777}"=>"\u03B8",
+    "\u{1D778}"=>"\u03B9",
+    "\u{1D779}"=>"\u03BA",
+    "\u{1D77A}"=>"\u03BB",
+    "\u{1D77B}"=>"\u03BC",
+    "\u{1D77C}"=>"\u03BD",
+    "\u{1D77D}"=>"\u03BE",
+    "\u{1D77E}"=>"\u03BF",
+    "\u{1D77F}"=>"\u03C0",
+    "\u{1D780}"=>"\u03C1",
+    "\u{1D781}"=>"\u03C2",
+    "\u{1D782}"=>"\u03C3",
+    "\u{1D783}"=>"\u03C4",
+    "\u{1D784}"=>"\u03C5",
+    "\u{1D785}"=>"\u03C6",
+    "\u{1D786}"=>"\u03C7",
+    "\u{1D787}"=>"\u03C8",
+    "\u{1D788}"=>"\u03C9",
+    "\u{1D789}"=>"\u2202",
+    "\u{1D78A}"=>"\u03B5",
+    "\u{1D78B}"=>"\u03B8",
+    "\u{1D78C}"=>"\u03BA",
+    "\u{1D78D}"=>"\u03C6",
+    "\u{1D78E}"=>"\u03C1",
+    "\u{1D78F}"=>"\u03C0",
+    "\u{1D790}"=>"\u0391",
+    "\u{1D791}"=>"\u0392",
+    "\u{1D792}"=>"\u0393",
+    "\u{1D793}"=>"\u0394",
+    "\u{1D794}"=>"\u0395",
+    "\u{1D795}"=>"\u0396",
+    "\u{1D796}"=>"\u0397",
+    "\u{1D797}"=>"\u0398",
+    "\u{1D798}"=>"\u0399",
+    "\u{1D799}"=>"\u039A",
+    "\u{1D79A}"=>"\u039B",
+    "\u{1D79B}"=>"\u039C",
+    "\u{1D79C}"=>"\u039D",
+    "\u{1D79D}"=>"\u039E",
+    "\u{1D79E}"=>"\u039F",
+    "\u{1D79F}"=>"\u03A0",
+    "\u{1D7A0}"=>"\u03A1",
+    "\u{1D7A1}"=>"\u0398",
+    "\u{1D7A2}"=>"\u03A3",
+    "\u{1D7A3}"=>"\u03A4",
+    "\u{1D7A4}"=>"\u03A5",
+    "\u{1D7A5}"=>"\u03A6",
+    "\u{1D7A6}"=>"\u03A7",
+    "\u{1D7A7}"=>"\u03A8",
+    "\u{1D7A8}"=>"\u03A9",
+    "\u{1D7A9}"=>"\u2207",
+    "\u{1D7AA}"=>"\u03B1",
+    "\u{1D7AB}"=>"\u03B2",
+    "\u{1D7AC}"=>"\u03B3",
+    "\u{1D7AD}"=>"\u03B4",
+    "\u{1D7AE}"=>"\u03B5",
+    "\u{1D7AF}"=>"\u03B6",
+    "\u{1D7B0}"=>"\u03B7",
+    "\u{1D7B1}"=>"\u03B8",
+    "\u{1D7B2}"=>"\u03B9",
+    "\u{1D7B3}"=>"\u03BA",
+    "\u{1D7B4}"=>"\u03BB",
+    "\u{1D7B5}"=>"\u03BC",
+    "\u{1D7B6}"=>"\u03BD",
+    "\u{1D7B7}"=>"\u03BE",
+    "\u{1D7B8}"=>"\u03BF",
+    "\u{1D7B9}"=>"\u03C0",
+    "\u{1D7BA}"=>"\u03C1",
+    "\u{1D7BB}"=>"\u03C2",
+    "\u{1D7BC}"=>"\u03C3",
+    "\u{1D7BD}"=>"\u03C4",
+    "\u{1D7BE}"=>"\u03C5",
+    "\u{1D7BF}"=>"\u03C6",
+    "\u{1D7C0}"=>"\u03C7",
+    "\u{1D7C1}"=>"\u03C8",
+    "\u{1D7C2}"=>"\u03C9",
+    "\u{1D7C3}"=>"\u2202",
+    "\u{1D7C4}"=>"\u03B5",
+    "\u{1D7C5}"=>"\u03B8",
+    "\u{1D7C6}"=>"\u03BA",
+    "\u{1D7C7}"=>"\u03C6",
+    "\u{1D7C8}"=>"\u03C1",
+    "\u{1D7C9}"=>"\u03C0",
+    "\u{1D7CA}"=>"\u03DC",
+    "\u{1D7CB}"=>"\u03DD",
+    "\u{1D7CE}"=>"0",
+    "\u{1D7CF}"=>"1",
+    "\u{1D7D0}"=>"2",
+    "\u{1D7D1}"=>"3",
+    "\u{1D7D2}"=>"4",
+    "\u{1D7D3}"=>"5",
+    "\u{1D7D4}"=>"6",
+    "\u{1D7D5}"=>"7",
+    "\u{1D7D6}"=>"8",
+    "\u{1D7D7}"=>"9",
+    "\u{1D7D8}"=>"0",
+    "\u{1D7D9}"=>"1",
+    "\u{1D7DA}"=>"2",
+    "\u{1D7DB}"=>"3",
+    "\u{1D7DC}"=>"4",
+    "\u{1D7DD}"=>"5",
+    "\u{1D7DE}"=>"6",
+    "\u{1D7DF}"=>"7",
+    "\u{1D7E0}"=>"8",
+    "\u{1D7E1}"=>"9",
+    "\u{1D7E2}"=>"0",
+    "\u{1D7E3}"=>"1",
+    "\u{1D7E4}"=>"2",
+    "\u{1D7E5}"=>"3",
+    "\u{1D7E6}"=>"4",
+    "\u{1D7E7}"=>"5",
+    "\u{1D7E8}"=>"6",
+    "\u{1D7E9}"=>"7",
+    "\u{1D7EA}"=>"8",
+    "\u{1D7EB}"=>"9",
+    "\u{1D7EC}"=>"0",
+    "\u{1D7ED}"=>"1",
+    "\u{1D7EE}"=>"2",
+    "\u{1D7EF}"=>"3",
+    "\u{1D7F0}"=>"4",
+    "\u{1D7F1}"=>"5",
+    "\u{1D7F2}"=>"6",
+    "\u{1D7F3}"=>"7",
+    "\u{1D7F4}"=>"8",
+    "\u{1D7F5}"=>"9",
+    "\u{1D7F6}"=>"0",
+    "\u{1D7F7}"=>"1",
+    "\u{1D7F8}"=>"2",
+    "\u{1D7F9}"=>"3",
+    "\u{1D7FA}"=>"4",
+    "\u{1D7FB}"=>"5",
+    "\u{1D7FC}"=>"6",
+    "\u{1D7FD}"=>"7",
+    "\u{1D7FE}"=>"8",
+    "\u{1D7FF}"=>"9",
+    "\u{1EE00}"=>"\u0627",
+    "\u{1EE01}"=>"\u0628",
+    "\u{1EE02}"=>"\u062C",
+    "\u{1EE03}"=>"\u062F",
+    "\u{1EE05}"=>"\u0648",
+    "\u{1EE06}"=>"\u0632",
+    "\u{1EE07}"=>"\u062D",
+    "\u{1EE08}"=>"\u0637",
+    "\u{1EE09}"=>"\u064A",
+    "\u{1EE0A}"=>"\u0643",
+    "\u{1EE0B}"=>"\u0644",
+    "\u{1EE0C}"=>"\u0645",
+    "\u{1EE0D}"=>"\u0646",
+    "\u{1EE0E}"=>"\u0633",
+    "\u{1EE0F}"=>"\u0639",
+    "\u{1EE10}"=>"\u0641",
+    "\u{1EE11}"=>"\u0635",
+    "\u{1EE12}"=>"\u0642",
+    "\u{1EE13}"=>"\u0631",
+    "\u{1EE14}"=>"\u0634",
+    "\u{1EE15}"=>"\u062A",
+    "\u{1EE16}"=>"\u062B",
+    "\u{1EE17}"=>"\u062E",
+    "\u{1EE18}"=>"\u0630",
+    "\u{1EE19}"=>"\u0636",
+    "\u{1EE1A}"=>"\u0638",
+    "\u{1EE1B}"=>"\u063A",
+    "\u{1EE1C}"=>"\u066E",
+    "\u{1EE1D}"=>"\u06BA",
+    "\u{1EE1E}"=>"\u06A1",
+    "\u{1EE1F}"=>"\u066F",
+    "\u{1EE21}"=>"\u0628",
+    "\u{1EE22}"=>"\u062C",
+    "\u{1EE24}"=>"\u0647",
+    "\u{1EE27}"=>"\u062D",
+    "\u{1EE29}"=>"\u064A",
+    "\u{1EE2A}"=>"\u0643",
+    "\u{1EE2B}"=>"\u0644",
+    "\u{1EE2C}"=>"\u0645",
+    "\u{1EE2D}"=>"\u0646",
+    "\u{1EE2E}"=>"\u0633",
+    "\u{1EE2F}"=>"\u0639",
+    "\u{1EE30}"=>"\u0641",
+    "\u{1EE31}"=>"\u0635",
+    "\u{1EE32}"=>"\u0642",
+    "\u{1EE34}"=>"\u0634",
+    "\u{1EE35}"=>"\u062A",
+    "\u{1EE36}"=>"\u062B",
+    "\u{1EE37}"=>"\u062E",
+    "\u{1EE39}"=>"\u0636",
+    "\u{1EE3B}"=>"\u063A",
+    "\u{1EE42}"=>"\u062C",
+    "\u{1EE47}"=>"\u062D",
+    "\u{1EE49}"=>"\u064A",
+    "\u{1EE4B}"=>"\u0644",
+    "\u{1EE4D}"=>"\u0646",
+    "\u{1EE4E}"=>"\u0633",
+    "\u{1EE4F}"=>"\u0639",
+    "\u{1EE51}"=>"\u0635",
+    "\u{1EE52}"=>"\u0642",
+    "\u{1EE54}"=>"\u0634",
+    "\u{1EE57}"=>"\u062E",
+    "\u{1EE59}"=>"\u0636",
+    "\u{1EE5B}"=>"\u063A",
+    "\u{1EE5D}"=>"\u06BA",
+    "\u{1EE5F}"=>"\u066F",
+    "\u{1EE61}"=>"\u0628",
+    "\u{1EE62}"=>"\u062C",
+    "\u{1EE64}"=>"\u0647",
+    "\u{1EE67}"=>"\u062D",
+    "\u{1EE68}"=>"\u0637",
+    "\u{1EE69}"=>"\u064A",
+    "\u{1EE6A}"=>"\u0643",
+    "\u{1EE6C}"=>"\u0645",
+    "\u{1EE6D}"=>"\u0646",
+    "\u{1EE6E}"=>"\u0633",
+    "\u{1EE6F}"=>"\u0639",
+    "\u{1EE70}"=>"\u0641",
+    "\u{1EE71}"=>"\u0635",
+    "\u{1EE72}"=>"\u0642",
+    "\u{1EE74}"=>"\u0634",
+    "\u{1EE75}"=>"\u062A",
+    "\u{1EE76}"=>"\u062B",
+    "\u{1EE77}"=>"\u062E",
+    "\u{1EE79}"=>"\u0636",
+    "\u{1EE7A}"=>"\u0638",
+    "\u{1EE7B}"=>"\u063A",
+    "\u{1EE7C}"=>"\u066E",
+    "\u{1EE7E}"=>"\u06A1",
+    "\u{1EE80}"=>"\u0627",
+    "\u{1EE81}"=>"\u0628",
+    "\u{1EE82}"=>"\u062C",
+    "\u{1EE83}"=>"\u062F",
+    "\u{1EE84}"=>"\u0647",
+    "\u{1EE85}"=>"\u0648",
+    "\u{1EE86}"=>"\u0632",
+    "\u{1EE87}"=>"\u062D",
+    "\u{1EE88}"=>"\u0637",
+    "\u{1EE89}"=>"\u064A",
+    "\u{1EE8B}"=>"\u0644",
+    "\u{1EE8C}"=>"\u0645",
+    "\u{1EE8D}"=>"\u0646",
+    "\u{1EE8E}"=>"\u0633",
+    "\u{1EE8F}"=>"\u0639",
+    "\u{1EE90}"=>"\u0641",
+    "\u{1EE91}"=>"\u0635",
+    "\u{1EE92}"=>"\u0642",
+    "\u{1EE93}"=>"\u0631",
+    "\u{1EE94}"=>"\u0634",
+    "\u{1EE95}"=>"\u062A",
+    "\u{1EE96}"=>"\u062B",
+    "\u{1EE97}"=>"\u062E",
+    "\u{1EE98}"=>"\u0630",
+    "\u{1EE99}"=>"\u0636",
+    "\u{1EE9A}"=>"\u0638",
+    "\u{1EE9B}"=>"\u063A",
+    "\u{1EEA1}"=>"\u0628",
+    "\u{1EEA2}"=>"\u062C",
+    "\u{1EEA3}"=>"\u062F",
+    "\u{1EEA5}"=>"\u0648",
+    "\u{1EEA6}"=>"\u0632",
+    "\u{1EEA7}"=>"\u062D",
+    "\u{1EEA8}"=>"\u0637",
+    "\u{1EEA9}"=>"\u064A",
+    "\u{1EEAB}"=>"\u0644",
+    "\u{1EEAC}"=>"\u0645",
+    "\u{1EEAD}"=>"\u0646",
+    "\u{1EEAE}"=>"\u0633",
+    "\u{1EEAF}"=>"\u0639",
+    "\u{1EEB0}"=>"\u0641",
+    "\u{1EEB1}"=>"\u0635",
+    "\u{1EEB2}"=>"\u0642",
+    "\u{1EEB3}"=>"\u0631",
+    "\u{1EEB4}"=>"\u0634",
+    "\u{1EEB5}"=>"\u062A",
+    "\u{1EEB6}"=>"\u062B",
+    "\u{1EEB7}"=>"\u062E",
+    "\u{1EEB8}"=>"\u0630",
+    "\u{1EEB9}"=>"\u0636",
+    "\u{1EEBA}"=>"\u0638",
+    "\u{1EEBB}"=>"\u063A",
+    "\u{1F100}"=>"0.",
+    "\u{1F101}"=>"0,",
+    "\u{1F102}"=>"1,",
+    "\u{1F103}"=>"2,",
+    "\u{1F104}"=>"3,",
+    "\u{1F105}"=>"4,",
+    "\u{1F106}"=>"5,",
+    "\u{1F107}"=>"6,",
+    "\u{1F108}"=>"7,",
+    "\u{1F109}"=>"8,",
+    "\u{1F10A}"=>"9,",
+    "\u{1F110}"=>"(A)",
+    "\u{1F111}"=>"(B)",
+    "\u{1F112}"=>"(C)",
+    "\u{1F113}"=>"(D)",
+    "\u{1F114}"=>"(E)",
+    "\u{1F115}"=>"(F)",
+    "\u{1F116}"=>"(G)",
+    "\u{1F117}"=>"(H)",
+    "\u{1F118}"=>"(I)",
+    "\u{1F119}"=>"(J)",
+    "\u{1F11A}"=>"(K)",
+    "\u{1F11B}"=>"(L)",
+    "\u{1F11C}"=>"(M)",
+    "\u{1F11D}"=>"(N)",
+    "\u{1F11E}"=>"(O)",
+    "\u{1F11F}"=>"(P)",
+    "\u{1F120}"=>"(Q)",
+    "\u{1F121}"=>"(R)",
+    "\u{1F122}"=>"(S)",
+    "\u{1F123}"=>"(T)",
+    "\u{1F124}"=>"(U)",
+    "\u{1F125}"=>"(V)",
+    "\u{1F126}"=>"(W)",
+    "\u{1F127}"=>"(X)",
+    "\u{1F128}"=>"(Y)",
+    "\u{1F129}"=>"(Z)",
+    "\u{1F12A}"=>"\u3014S\u3015",
+    "\u{1F12B}"=>"C",
+    "\u{1F12C}"=>"R",
+    "\u{1F12D}"=>"CD",
+    "\u{1F12E}"=>"WZ",
+    "\u{1F130}"=>"A",
+    "\u{1F131}"=>"B",
+    "\u{1F132}"=>"C",
+    "\u{1F133}"=>"D",
+    "\u{1F134}"=>"E",
+    "\u{1F135}"=>"F",
+    "\u{1F136}"=>"G",
+    "\u{1F137}"=>"H",
+    "\u{1F138}"=>"I",
+    "\u{1F139}"=>"J",
+    "\u{1F13A}"=>"K",
+    "\u{1F13B}"=>"L",
+    "\u{1F13C}"=>"M",
+    "\u{1F13D}"=>"N",
+    "\u{1F13E}"=>"O",
+    "\u{1F13F}"=>"P",
+    "\u{1F140}"=>"Q",
+    "\u{1F141}"=>"R",
+    "\u{1F142}"=>"S",
+    "\u{1F143}"=>"T",
+    "\u{1F144}"=>"U",
+    "\u{1F145}"=>"V",
+    "\u{1F146}"=>"W",
+    "\u{1F147}"=>"X",
+    "\u{1F148}"=>"Y",
+    "\u{1F149}"=>"Z",
+    "\u{1F14A}"=>"HV",
+    "\u{1F14B}"=>"MV",
+    "\u{1F14C}"=>"SD",
+    "\u{1F14D}"=>"SS",
+    "\u{1F14E}"=>"PPV",
+    "\u{1F14F}"=>"WC",
+    "\u{1F16A}"=>"MC",
+    "\u{1F16B}"=>"MD",
+    "\u{1F16C}"=>"MR",
+    "\u{1F190}"=>"DJ",
+    "\u{1F200}"=>"\u307B\u304B",
+    "\u{1F201}"=>"\u30B3\u30B3",
+    "\u{1F202}"=>"\u30B5",
+    "\u{1F210}"=>"\u624B",
+    "\u{1F211}"=>"\u5B57",
+    "\u{1F212}"=>"\u53CC",
+    "\u{1F213}"=>"\u30C7",
+    "\u{1F214}"=>"\u4E8C",
+    "\u{1F215}"=>"\u591A",
+    "\u{1F216}"=>"\u89E3",
+    "\u{1F217}"=>"\u5929",
+    "\u{1F218}"=>"\u4EA4",
+    "\u{1F219}"=>"\u6620",
+    "\u{1F21A}"=>"\u7121",
+    "\u{1F21B}"=>"\u6599",
+    "\u{1F21C}"=>"\u524D",
+    "\u{1F21D}"=>"\u5F8C",
+    "\u{1F21E}"=>"\u518D",
+    "\u{1F21F}"=>"\u65B0",
+    "\u{1F220}"=>"\u521D",
+    "\u{1F221}"=>"\u7D42",
+    "\u{1F222}"=>"\u751F",
+    "\u{1F223}"=>"\u8CA9",
+    "\u{1F224}"=>"\u58F0",
+    "\u{1F225}"=>"\u5439",
+    "\u{1F226}"=>"\u6F14",
+    "\u{1F227}"=>"\u6295",
+    "\u{1F228}"=>"\u6355",
+    "\u{1F229}"=>"\u4E00",
+    "\u{1F22A}"=>"\u4E09",
+    "\u{1F22B}"=>"\u904A",
+    "\u{1F22C}"=>"\u5DE6",
+    "\u{1F22D}"=>"\u4E2D",
+    "\u{1F22E}"=>"\u53F3",
+    "\u{1F22F}"=>"\u6307",
+    "\u{1F230}"=>"\u8D70",
+    "\u{1F231}"=>"\u6253",
+    "\u{1F232}"=>"\u7981",
+    "\u{1F233}"=>"\u7A7A",
+    "\u{1F234}"=>"\u5408",
+    "\u{1F235}"=>"\u6E80",
+    "\u{1F236}"=>"\u6709",
+    "\u{1F237}"=>"\u6708",
+    "\u{1F238}"=>"\u7533",
+    "\u{1F239}"=>"\u5272",
+    "\u{1F23A}"=>"\u55B6",
+    "\u{1F23B}"=>"\u914D",
+    "\u{1F240}"=>"\u3014\u672C\u3015",
+    "\u{1F241}"=>"\u3014\u4E09\u3015",
+    "\u{1F242}"=>"\u3014\u4E8C\u3015",
+    "\u{1F243}"=>"\u3014\u5B89\u3015",
+    "\u{1F244}"=>"\u3014\u70B9\u3015",
+    "\u{1F245}"=>"\u3014\u6253\u3015",
+    "\u{1F246}"=>"\u3014\u76D7\u3015",
+    "\u{1F247}"=>"\u3014\u52DD\u3015",
+    "\u{1F248}"=>"\u3014\u6557\u3015",
+    "\u{1F250}"=>"\u5F97",
+    "\u{1F251}"=>"\u53EF",
+    "\u0385"=>" \u0308\u0301",
+    "\u03D3"=>"\u03A5\u0301",
+    "\u03D4"=>"\u03A5\u0308",
+    "\u1E9B"=>"s\u0307",
+    "\u1FC1"=>" \u0308\u0342",
+    "\u1FCD"=>" \u0313\u0300",
+    "\u1FCE"=>" \u0313\u0301",
+    "\u1FCF"=>" \u0313\u0342",
+    "\u1FDD"=>" \u0314\u0300",
+    "\u1FDE"=>" \u0314\u0301",
+    "\u1FDF"=>" \u0314\u0342",
+    "\u1FED"=>" \u0308\u0300",
+    "\u1FEE"=>" \u0308\u0301",
+    "\u1FFD"=>" \u0301",
+    "\u2000"=>" ",
+    "\u2001"=>" ",
   }.freeze
 
   COMPOSITION_TABLE = {
-    "A\u0300"=>"\u00C0", "A\u0301"=>"\u00C1", "A\u0302"=>"\u00C2", "A\u0303"=>"\u00C3", "A\u0308"=>"\u00C4", "A\u030A"=>"\u00C5", "C\u0327"=>"\u00C7", "E\u0300"=>"\u00C8",
-    "E\u0301"=>"\u00C9", "E\u0302"=>"\u00CA", "E\u0308"=>"\u00CB", "I\u0300"=>"\u00CC", "I\u0301"=>"\u00CD", "I\u0302"=>"\u00CE", "I\u0308"=>"\u00CF", "N\u0303"=>"\u00D1",
-    "O\u0300"=>"\u00D2", "O\u0301"=>"\u00D3", "O\u0302"=>"\u00D4", "O\u0303"=>"\u00D5", "O\u0308"=>"\u00D6", "U\u0300"=>"\u00D9", "U\u0301"=>"\u00DA", "U\u0302"=>"\u00DB",
-    "U\u0308"=>"\u00DC", "Y\u0301"=>"\u00DD", "a\u0300"=>"\u00E0", "a\u0301"=>"\u00E1", "a\u0302"=>"\u00E2", "a\u0303"=>"\u00E3", "a\u0308"=>"\u00E4", "a\u030A"=>"\u00E5",
-    "c\u0327"=>"\u00E7", "e\u0300"=>"\u00E8", "e\u0301"=>"\u00E9", "e\u0302"=>"\u00EA", "e\u0308"=>"\u00EB", "i\u0300"=>"\u00EC", "i\u0301"=>"\u00ED", "i\u0302"=>"\u00EE",
-    "i\u0308"=>"\u00EF", "n\u0303"=>"\u00F1", "o\u0300"=>"\u00F2", "o\u0301"=>"\u00F3", "o\u0302"=>"\u00F4", "o\u0303"=>"\u00F5", "o\u0308"=>"\u00F6", "u\u0300"=>"\u00F9",
-    "u\u0301"=>"\u00FA", "u\u0302"=>"\u00FB", "u\u0308"=>"\u00FC", "y\u0301"=>"\u00FD", "y\u0308"=>"\u00FF", "A\u0304"=>"\u0100", "a\u0304"=>"\u0101", "A\u0306"=>"\u0102",
-    "a\u0306"=>"\u0103", "A\u0328"=>"\u0104", "a\u0328"=>"\u0105", "C\u0301"=>"\u0106", "c\u0301"=>"\u0107", "C\u0302"=>"\u0108", "c\u0302"=>"\u0109", "C\u0307"=>"\u010A",
-    "c\u0307"=>"\u010B", "C\u030C"=>"\u010C", "c\u030C"=>"\u010D", "D\u030C"=>"\u010E", "d\u030C"=>"\u010F", "E\u0304"=>"\u0112", "e\u0304"=>"\u0113", "E\u0306"=>"\u0114",
-    "e\u0306"=>"\u0115", "E\u0307"=>"\u0116", "e\u0307"=>"\u0117", "E\u0328"=>"\u0118", "e\u0328"=>"\u0119", "E\u030C"=>"\u011A", "e\u030C"=>"\u011B", "G\u0302"=>"\u011C",
-    "g\u0302"=>"\u011D", "G\u0306"=>"\u011E", "g\u0306"=>"\u011F", "G\u0307"=>"\u0120", "g\u0307"=>"\u0121", "G\u0327"=>"\u0122", "g\u0327"=>"\u0123", "H\u0302"=>"\u0124",
-    "h\u0302"=>"\u0125", "I\u0303"=>"\u0128", "i\u0303"=>"\u0129", "I\u0304"=>"\u012A", "i\u0304"=>"\u012B", "I\u0306"=>"\u012C", "i\u0306"=>"\u012D", "I\u0328"=>"\u012E",
-    "i\u0328"=>"\u012F", "I\u0307"=>"\u0130", "J\u0302"=>"\u0134", "j\u0302"=>"\u0135", "K\u0327"=>"\u0136", "k\u0327"=>"\u0137", "L\u0301"=>"\u0139", "l\u0301"=>"\u013A",
-    "L\u0327"=>"\u013B", "l\u0327"=>"\u013C", "L\u030C"=>"\u013D", "l\u030C"=>"\u013E", "N\u0301"=>"\u0143", "n\u0301"=>"\u0144", "N\u0327"=>"\u0145", "n\u0327"=>"\u0146",
-    "N\u030C"=>"\u0147", "n\u030C"=>"\u0148", "O\u0304"=>"\u014C", "o\u0304"=>"\u014D", "O\u0306"=>"\u014E", "o\u0306"=>"\u014F", "O\u030B"=>"\u0150", "o\u030B"=>"\u0151",
-    "R\u0301"=>"\u0154", "r\u0301"=>"\u0155", "R\u0327"=>"\u0156", "r\u0327"=>"\u0157", "R\u030C"=>"\u0158", "r\u030C"=>"\u0159", "S\u0301"=>"\u015A", "s\u0301"=>"\u015B",
-    "S\u0302"=>"\u015C", "s\u0302"=>"\u015D", "S\u0327"=>"\u015E", "s\u0327"=>"\u015F", "S\u030C"=>"\u0160", "s\u030C"=>"\u0161", "T\u0327"=>"\u0162", "t\u0327"=>"\u0163",
-    "T\u030C"=>"\u0164", "t\u030C"=>"\u0165", "U\u0303"=>"\u0168", "u\u0303"=>"\u0169", "U\u0304"=>"\u016A", "u\u0304"=>"\u016B", "U\u0306"=>"\u016C", "u\u0306"=>"\u016D",
-    "U\u030A"=>"\u016E", "u\u030A"=>"\u016F", "U\u030B"=>"\u0170", "u\u030B"=>"\u0171", "U\u0328"=>"\u0172", "u\u0328"=>"\u0173", "W\u0302"=>"\u0174", "w\u0302"=>"\u0175",
-    "Y\u0302"=>"\u0176", "y\u0302"=>"\u0177", "Y\u0308"=>"\u0178", "Z\u0301"=>"\u0179", "z\u0301"=>"\u017A", "Z\u0307"=>"\u017B", "z\u0307"=>"\u017C", "Z\u030C"=>"\u017D",
-    "z\u030C"=>"\u017E", "O\u031B"=>"\u01A0", "o\u031B"=>"\u01A1", "U\u031B"=>"\u01AF", "u\u031B"=>"\u01B0", "A\u030C"=>"\u01CD", "a\u030C"=>"\u01CE", "I\u030C"=>"\u01CF",
-    "i\u030C"=>"\u01D0", "O\u030C"=>"\u01D1", "o\u030C"=>"\u01D2", "U\u030C"=>"\u01D3", "u\u030C"=>"\u01D4", "\u00DC\u0304"=>"\u01D5", "\u00FC\u0304"=>"\u01D6", "\u00DC\u0301"=>"\u01D7",
-    "\u00FC\u0301"=>"\u01D8", "\u00DC\u030C"=>"\u01D9", "\u00FC\u030C"=>"\u01DA", "\u00DC\u0300"=>"\u01DB", "\u00FC\u0300"=>"\u01DC", "\u00C4\u0304"=>"\u01DE", "\u00E4\u0304"=>"\u01DF", "\u0226\u0304"=>"\u01E0",
-    "\u0227\u0304"=>"\u01E1", "\u00C6\u0304"=>"\u01E2", "\u00E6\u0304"=>"\u01E3", "G\u030C"=>"\u01E6", "g\u030C"=>"\u01E7", "K\u030C"=>"\u01E8", "k\u030C"=>"\u01E9", "O\u0328"=>"\u01EA",
-    "o\u0328"=>"\u01EB", "\u01EA\u0304"=>"\u01EC", "\u01EB\u0304"=>"\u01ED", "\u01B7\u030C"=>"\u01EE", "\u0292\u030C"=>"\u01EF", "j\u030C"=>"\u01F0", "G\u0301"=>"\u01F4", "g\u0301"=>"\u01F5",
-    "N\u0300"=>"\u01F8", "n\u0300"=>"\u01F9", "\u00C5\u0301"=>"\u01FA", "\u00E5\u0301"=>"\u01FB", "\u00C6\u0301"=>"\u01FC", "\u00E6\u0301"=>"\u01FD", "\u00D8\u0301"=>"\u01FE", "\u00F8\u0301"=>"\u01FF",
-    "A\u030F"=>"\u0200", "a\u030F"=>"\u0201", "A\u0311"=>"\u0202", "a\u0311"=>"\u0203", "E\u030F"=>"\u0204", "e\u030F"=>"\u0205", "E\u0311"=>"\u0206", "e\u0311"=>"\u0207",
-    "I\u030F"=>"\u0208", "i\u030F"=>"\u0209", "I\u0311"=>"\u020A", "i\u0311"=>"\u020B", "O\u030F"=>"\u020C", "o\u030F"=>"\u020D", "O\u0311"=>"\u020E", "o\u0311"=>"\u020F",
-    "R\u030F"=>"\u0210", "r\u030F"=>"\u0211", "R\u0311"=>"\u0212", "r\u0311"=>"\u0213", "U\u030F"=>"\u0214", "u\u030F"=>"\u0215", "U\u0311"=>"\u0216", "u\u0311"=>"\u0217",
-    "S\u0326"=>"\u0218", "s\u0326"=>"\u0219", "T\u0326"=>"\u021A", "t\u0326"=>"\u021B", "H\u030C"=>"\u021E", "h\u030C"=>"\u021F", "A\u0307"=>"\u0226", "a\u0307"=>"\u0227",
-    "E\u0327"=>"\u0228", "e\u0327"=>"\u0229", "\u00D6\u0304"=>"\u022A", "\u00F6\u0304"=>"\u022B", "\u00D5\u0304"=>"\u022C", "\u00F5\u0304"=>"\u022D", "O\u0307"=>"\u022E", "o\u0307"=>"\u022F",
-    "\u022E\u0304"=>"\u0230", "\u022F\u0304"=>"\u0231", "Y\u0304"=>"\u0232", "y\u0304"=>"\u0233", "\u00A8\u0301"=>"\u0385", "\u0391\u0301"=>"\u0386", "\u0395\u0301"=>"\u0388", "\u0397\u0301"=>"\u0389",
-    "\u0399\u0301"=>"\u038A", "\u039F\u0301"=>"\u038C", "\u03A5\u0301"=>"\u038E", "\u03A9\u0301"=>"\u038F", "\u03CA\u0301"=>"\u0390", "\u0399\u0308"=>"\u03AA", "\u03A5\u0308"=>"\u03AB", "\u03B1\u0301"=>"\u03AC",
-    "\u03B5\u0301"=>"\u03AD", "\u03B7\u0301"=>"\u03AE", "\u03B9\u0301"=>"\u03AF", "\u03CB\u0301"=>"\u03B0", "\u03B9\u0308"=>"\u03CA", "\u03C5\u0308"=>"\u03CB", "\u03BF\u0301"=>"\u03CC", "\u03C5\u0301"=>"\u03CD",
-    "\u03C9\u0301"=>"\u03CE", "\u03D2\u0301"=>"\u03D3", "\u03D2\u0308"=>"\u03D4", "\u0415\u0300"=>"\u0400", "\u0415\u0308"=>"\u0401", "\u0413\u0301"=>"\u0403", "\u0406\u0308"=>"\u0407", "\u041A\u0301"=>"\u040C",
-    "\u0418\u0300"=>"\u040D", "\u0423\u0306"=>"\u040E", "\u0418\u0306"=>"\u0419", "\u0438\u0306"=>"\u0439", "\u0435\u0300"=>"\u0450", "\u0435\u0308"=>"\u0451", "\u0433\u0301"=>"\u0453", "\u0456\u0308"=>"\u0457",
-    "\u043A\u0301"=>"\u045C", "\u0438\u0300"=>"\u045D", "\u0443\u0306"=>"\u045E", "\u0474\u030F"=>"\u0476", "\u0475\u030F"=>"\u0477", "\u0416\u0306"=>"\u04C1", "\u0436\u0306"=>"\u04C2", "\u0410\u0306"=>"\u04D0",
-    "\u0430\u0306"=>"\u04D1", "\u0410\u0308"=>"\u04D2", "\u0430\u0308"=>"\u04D3", "\u0415\u0306"=>"\u04D6", "\u0435\u0306"=>"\u04D7", "\u04D8\u0308"=>"\u04DA", "\u04D9\u0308"=>"\u04DB", "\u0416\u0308"=>"\u04DC",
-    "\u0436\u0308"=>"\u04DD", "\u0417\u0308"=>"\u04DE", "\u0437\u0308"=>"\u04DF", "\u0418\u0304"=>"\u04E2", "\u0438\u0304"=>"\u04E3", "\u0418\u0308"=>"\u04E4", "\u0438\u0308"=>"\u04E5", "\u041E\u0308"=>"\u04E6",
-    "\u043E\u0308"=>"\u04E7", "\u04E8\u0308"=>"\u04EA", "\u04E9\u0308"=>"\u04EB", "\u042D\u0308"=>"\u04EC", "\u044D\u0308"=>"\u04ED", "\u0423\u0304"=>"\u04EE", "\u0443\u0304"=>"\u04EF", "\u0423\u0308"=>"\u04F0",
-    "\u0443\u0308"=>"\u04F1", "\u0423\u030B"=>"\u04F2", "\u0443\u030B"=>"\u04F3", "\u0427\u0308"=>"\u04F4", "\u0447\u0308"=>"\u04F5", "\u042B\u0308"=>"\u04F8", "\u044B\u0308"=>"\u04F9", "\u0627\u0653"=>"\u0622",
-    "\u0627\u0654"=>"\u0623", "\u0648\u0654"=>"\u0624", "\u0627\u0655"=>"\u0625", "\u064A\u0654"=>"\u0626", "\u06D5\u0654"=>"\u06C0", "\u06C1\u0654"=>"\u06C2", "\u06D2\u0654"=>"\u06D3", "\u0928\u093C"=>"\u0929",
-    "\u0930\u093C"=>"\u0931", "\u0933\u093C"=>"\u0934", "\u09C7\u09BE"=>"\u09CB", "\u09C7\u09D7"=>"\u09CC", "\u0B47\u0B56"=>"\u0B48", "\u0B47\u0B3E"=>"\u0B4B", "\u0B47\u0B57"=>"\u0B4C", "\u0B92\u0BD7"=>"\u0B94",
-    "\u0BC6\u0BBE"=>"\u0BCA", "\u0BC7\u0BBE"=>"\u0BCB", "\u0BC6\u0BD7"=>"\u0BCC", "\u0C46\u0C56"=>"\u0C48", "\u0CBF\u0CD5"=>"\u0CC0", "\u0CC6\u0CD5"=>"\u0CC7", "\u0CC6\u0CD6"=>"\u0CC8", "\u0CC6\u0CC2"=>"\u0CCA",
-    "\u0CCA\u0CD5"=>"\u0CCB", "\u0D46\u0D3E"=>"\u0D4A", "\u0D47\u0D3E"=>"\u0D4B", "\u0D46\u0D57"=>"\u0D4C", "\u0DD9\u0DCA"=>"\u0DDA", "\u0DD9\u0DCF"=>"\u0DDC", "\u0DDC\u0DCA"=>"\u0DDD", "\u0DD9\u0DDF"=>"\u0DDE",
-    "\u1025\u102E"=>"\u1026", "\u1B05\u1B35"=>"\u1B06", "\u1B07\u1B35"=>"\u1B08", "\u1B09\u1B35"=>"\u1B0A", "\u1B0B\u1B35"=>"\u1B0C", "\u1B0D\u1B35"=>"\u1B0E", "\u1B11\u1B35"=>"\u1B12", "\u1B3A\u1B35"=>"\u1B3B",
-    "\u1B3C\u1B35"=>"\u1B3D", "\u1B3E\u1B35"=>"\u1B40", "\u1B3F\u1B35"=>"\u1B41", "\u1B42\u1B35"=>"\u1B43", "A\u0325"=>"\u1E00", "a\u0325"=>"\u1E01", "B\u0307"=>"\u1E02", "b\u0307"=>"\u1E03",
-    "B\u0323"=>"\u1E04", "b\u0323"=>"\u1E05", "B\u0331"=>"\u1E06", "b\u0331"=>"\u1E07", "\u00C7\u0301"=>"\u1E08", "\u00E7\u0301"=>"\u1E09", "D\u0307"=>"\u1E0A", "d\u0307"=>"\u1E0B",
-    "D\u0323"=>"\u1E0C", "d\u0323"=>"\u1E0D", "D\u0331"=>"\u1E0E", "d\u0331"=>"\u1E0F", "D\u0327"=>"\u1E10", "d\u0327"=>"\u1E11", "D\u032D"=>"\u1E12", "d\u032D"=>"\u1E13",
-    "\u0112\u0300"=>"\u1E14", "\u0113\u0300"=>"\u1E15", "\u0112\u0301"=>"\u1E16", "\u0113\u0301"=>"\u1E17", "E\u032D"=>"\u1E18", "e\u032D"=>"\u1E19", "E\u0330"=>"\u1E1A", "e\u0330"=>"\u1E1B",
-    "\u0228\u0306"=>"\u1E1C", "\u0229\u0306"=>"\u1E1D", "F\u0307"=>"\u1E1E", "f\u0307"=>"\u1E1F", "G\u0304"=>"\u1E20", "g\u0304"=>"\u1E21", "H\u0307"=>"\u1E22", "h\u0307"=>"\u1E23",
-    "H\u0323"=>"\u1E24", "h\u0323"=>"\u1E25", "H\u0308"=>"\u1E26", "h\u0308"=>"\u1E27", "H\u0327"=>"\u1E28", "h\u0327"=>"\u1E29", "H\u032E"=>"\u1E2A", "h\u032E"=>"\u1E2B",
-    "I\u0330"=>"\u1E2C", "i\u0330"=>"\u1E2D", "\u00CF\u0301"=>"\u1E2E", "\u00EF\u0301"=>"\u1E2F", "K\u0301"=>"\u1E30", "k\u0301"=>"\u1E31", "K\u0323"=>"\u1E32", "k\u0323"=>"\u1E33",
-    "K\u0331"=>"\u1E34", "k\u0331"=>"\u1E35", "L\u0323"=>"\u1E36", "l\u0323"=>"\u1E37", "\u1E36\u0304"=>"\u1E38", "\u1E37\u0304"=>"\u1E39", "L\u0331"=>"\u1E3A", "l\u0331"=>"\u1E3B",
-    "L\u032D"=>"\u1E3C", "l\u032D"=>"\u1E3D", "M\u0301"=>"\u1E3E", "m\u0301"=>"\u1E3F", "M\u0307"=>"\u1E40", "m\u0307"=>"\u1E41", "M\u0323"=>"\u1E42", "m\u0323"=>"\u1E43",
-    "N\u0307"=>"\u1E44", "n\u0307"=>"\u1E45", "N\u0323"=>"\u1E46", "n\u0323"=>"\u1E47", "N\u0331"=>"\u1E48", "n\u0331"=>"\u1E49", "N\u032D"=>"\u1E4A", "n\u032D"=>"\u1E4B",
-    "\u00D5\u0301"=>"\u1E4C", "\u00F5\u0301"=>"\u1E4D", "\u00D5\u0308"=>"\u1E4E", "\u00F5\u0308"=>"\u1E4F", "\u014C\u0300"=>"\u1E50", "\u014D\u0300"=>"\u1E51", "\u014C\u0301"=>"\u1E52", "\u014D\u0301"=>"\u1E53",
-    "P\u0301"=>"\u1E54", "p\u0301"=>"\u1E55", "P\u0307"=>"\u1E56", "p\u0307"=>"\u1E57", "R\u0307"=>"\u1E58", "r\u0307"=>"\u1E59", "R\u0323"=>"\u1E5A", "r\u0323"=>"\u1E5B",
-    "\u1E5A\u0304"=>"\u1E5C", "\u1E5B\u0304"=>"\u1E5D", "R\u0331"=>"\u1E5E", "r\u0331"=>"\u1E5F", "S\u0307"=>"\u1E60", "s\u0307"=>"\u1E61", "S\u0323"=>"\u1E62", "s\u0323"=>"\u1E63",
-    "\u015A\u0307"=>"\u1E64", "\u015B\u0307"=>"\u1E65", "\u0160\u0307"=>"\u1E66", "\u0161\u0307"=>"\u1E67", "\u1E62\u0307"=>"\u1E68", "\u1E63\u0307"=>"\u1E69", "T\u0307"=>"\u1E6A", "t\u0307"=>"\u1E6B",
-    "T\u0323"=>"\u1E6C", "t\u0323"=>"\u1E6D", "T\u0331"=>"\u1E6E", "t\u0331"=>"\u1E6F", "T\u032D"=>"\u1E70", "t\u032D"=>"\u1E71", "U\u0324"=>"\u1E72", "u\u0324"=>"\u1E73",
-    "U\u0330"=>"\u1E74", "u\u0330"=>"\u1E75", "U\u032D"=>"\u1E76", "u\u032D"=>"\u1E77", "\u0168\u0301"=>"\u1E78", "\u0169\u0301"=>"\u1E79", "\u016A\u0308"=>"\u1E7A", "\u016B\u0308"=>"\u1E7B",
-    "V\u0303"=>"\u1E7C", "v\u0303"=>"\u1E7D", "V\u0323"=>"\u1E7E", "v\u0323"=>"\u1E7F", "W\u0300"=>"\u1E80", "w\u0300"=>"\u1E81", "W\u0301"=>"\u1E82", "w\u0301"=>"\u1E83",
-    "W\u0308"=>"\u1E84", "w\u0308"=>"\u1E85", "W\u0307"=>"\u1E86", "w\u0307"=>"\u1E87", "W\u0323"=>"\u1E88", "w\u0323"=>"\u1E89", "X\u0307"=>"\u1E8A", "x\u0307"=>"\u1E8B",
-    "X\u0308"=>"\u1E8C", "x\u0308"=>"\u1E8D", "Y\u0307"=>"\u1E8E", "y\u0307"=>"\u1E8F", "Z\u0302"=>"\u1E90", "z\u0302"=>"\u1E91", "Z\u0323"=>"\u1E92", "z\u0323"=>"\u1E93",
-    "Z\u0331"=>"\u1E94", "z\u0331"=>"\u1E95", "h\u0331"=>"\u1E96", "t\u0308"=>"\u1E97", "w\u030A"=>"\u1E98", "y\u030A"=>"\u1E99", "\u017F\u0307"=>"\u1E9B", "A\u0323"=>"\u1EA0",
-    "a\u0323"=>"\u1EA1", "A\u0309"=>"\u1EA2", "a\u0309"=>"\u1EA3", "\u00C2\u0301"=>"\u1EA4", "\u00E2\u0301"=>"\u1EA5", "\u00C2\u0300"=>"\u1EA6", "\u00E2\u0300"=>"\u1EA7", "\u00C2\u0309"=>"\u1EA8",
-    "\u00E2\u0309"=>"\u1EA9", "\u00C2\u0303"=>"\u1EAA", "\u00E2\u0303"=>"\u1EAB", "\u1EA0\u0302"=>"\u1EAC", "\u1EA1\u0302"=>"\u1EAD", "\u0102\u0301"=>"\u1EAE", "\u0103\u0301"=>"\u1EAF", "\u0102\u0300"=>"\u1EB0",
-    "\u0103\u0300"=>"\u1EB1", "\u0102\u0309"=>"\u1EB2", "\u0103\u0309"=>"\u1EB3", "\u0102\u0303"=>"\u1EB4", "\u0103\u0303"=>"\u1EB5", "\u1EA0\u0306"=>"\u1EB6", "\u1EA1\u0306"=>"\u1EB7", "E\u0323"=>"\u1EB8",
-    "e\u0323"=>"\u1EB9", "E\u0309"=>"\u1EBA", "e\u0309"=>"\u1EBB", "E\u0303"=>"\u1EBC", "e\u0303"=>"\u1EBD", "\u00CA\u0301"=>"\u1EBE", "\u00EA\u0301"=>"\u1EBF", "\u00CA\u0300"=>"\u1EC0",
-    "\u00EA\u0300"=>"\u1EC1", "\u00CA\u0309"=>"\u1EC2", "\u00EA\u0309"=>"\u1EC3", "\u00CA\u0303"=>"\u1EC4", "\u00EA\u0303"=>"\u1EC5", "\u1EB8\u0302"=>"\u1EC6", "\u1EB9\u0302"=>"\u1EC7", "I\u0309"=>"\u1EC8",
-    "i\u0309"=>"\u1EC9", "I\u0323"=>"\u1ECA", "i\u0323"=>"\u1ECB", "O\u0323"=>"\u1ECC", "o\u0323"=>"\u1ECD", "O\u0309"=>"\u1ECE", "o\u0309"=>"\u1ECF", "\u00D4\u0301"=>"\u1ED0",
-    "\u00F4\u0301"=>"\u1ED1", "\u00D4\u0300"=>"\u1ED2", "\u00F4\u0300"=>"\u1ED3", "\u00D4\u0309"=>"\u1ED4", "\u00F4\u0309"=>"\u1ED5", "\u00D4\u0303"=>"\u1ED6", "\u00F4\u0303"=>"\u1ED7", "\u1ECC\u0302"=>"\u1ED8",
-    "\u1ECD\u0302"=>"\u1ED9", "\u01A0\u0301"=>"\u1EDA", "\u01A1\u0301"=>"\u1EDB", "\u01A0\u0300"=>"\u1EDC", "\u01A1\u0300"=>"\u1EDD", "\u01A0\u0309"=>"\u1EDE", "\u01A1\u0309"=>"\u1EDF", "\u01A0\u0303"=>"\u1EE0",
-    "\u01A1\u0303"=>"\u1EE1", "\u01A0\u0323"=>"\u1EE2", "\u01A1\u0323"=>"\u1EE3", "U\u0323"=>"\u1EE4", "u\u0323"=>"\u1EE5", "U\u0309"=>"\u1EE6", "u\u0309"=>"\u1EE7", "\u01AF\u0301"=>"\u1EE8",
-    "\u01B0\u0301"=>"\u1EE9", "\u01AF\u0300"=>"\u1EEA", "\u01B0\u0300"=>"\u1EEB", "\u01AF\u0309"=>"\u1EEC", "\u01B0\u0309"=>"\u1EED", "\u01AF\u0303"=>"\u1EEE", "\u01B0\u0303"=>"\u1EEF", "\u01AF\u0323"=>"\u1EF0",
-    "\u01B0\u0323"=>"\u1EF1", "Y\u0300"=>"\u1EF2", "y\u0300"=>"\u1EF3", "Y\u0323"=>"\u1EF4", "y\u0323"=>"\u1EF5", "Y\u0309"=>"\u1EF6", "y\u0309"=>"\u1EF7", "Y\u0303"=>"\u1EF8",
-    "y\u0303"=>"\u1EF9", "\u03B1\u0313"=>"\u1F00", "\u03B1\u0314"=>"\u1F01", "\u1F00\u0300"=>"\u1F02", "\u1F01\u0300"=>"\u1F03", "\u1F00\u0301"=>"\u1F04", "\u1F01\u0301"=>"\u1F05", "\u1F00\u0342"=>"\u1F06",
-    "\u1F01\u0342"=>"\u1F07", "\u0391\u0313"=>"\u1F08", "\u0391\u0314"=>"\u1F09", "\u1F08\u0300"=>"\u1F0A", "\u1F09\u0300"=>"\u1F0B", "\u1F08\u0301"=>"\u1F0C", "\u1F09\u0301"=>"\u1F0D", "\u1F08\u0342"=>"\u1F0E",
-    "\u1F09\u0342"=>"\u1F0F", "\u03B5\u0313"=>"\u1F10", "\u03B5\u0314"=>"\u1F11", "\u1F10\u0300"=>"\u1F12", "\u1F11\u0300"=>"\u1F13", "\u1F10\u0301"=>"\u1F14", "\u1F11\u0301"=>"\u1F15", "\u0395\u0313"=>"\u1F18",
-    "\u0395\u0314"=>"\u1F19", "\u1F18\u0300"=>"\u1F1A", "\u1F19\u0300"=>"\u1F1B", "\u1F18\u0301"=>"\u1F1C", "\u1F19\u0301"=>"\u1F1D", "\u03B7\u0313"=>"\u1F20", "\u03B7\u0314"=>"\u1F21", "\u1F20\u0300"=>"\u1F22",
-    "\u1F21\u0300"=>"\u1F23", "\u1F20\u0301"=>"\u1F24", "\u1F21\u0301"=>"\u1F25", "\u1F20\u0342"=>"\u1F26", "\u1F21\u0342"=>"\u1F27", "\u0397\u0313"=>"\u1F28", "\u0397\u0314"=>"\u1F29", "\u1F28\u0300"=>"\u1F2A",
-    "\u1F29\u0300"=>"\u1F2B", "\u1F28\u0301"=>"\u1F2C", "\u1F29\u0301"=>"\u1F2D", "\u1F28\u0342"=>"\u1F2E", "\u1F29\u0342"=>"\u1F2F", "\u03B9\u0313"=>"\u1F30", "\u03B9\u0314"=>"\u1F31", "\u1F30\u0300"=>"\u1F32",
-    "\u1F31\u0300"=>"\u1F33", "\u1F30\u0301"=>"\u1F34", "\u1F31\u0301"=>"\u1F35", "\u1F30\u0342"=>"\u1F36", "\u1F31\u0342"=>"\u1F37", "\u0399\u0313"=>"\u1F38", "\u0399\u0314"=>"\u1F39", "\u1F38\u0300"=>"\u1F3A",
-    "\u1F39\u0300"=>"\u1F3B", "\u1F38\u0301"=>"\u1F3C", "\u1F39\u0301"=>"\u1F3D", "\u1F38\u0342"=>"\u1F3E", "\u1F39\u0342"=>"\u1F3F", "\u03BF\u0313"=>"\u1F40", "\u03BF\u0314"=>"\u1F41", "\u1F40\u0300"=>"\u1F42",
-    "\u1F41\u0300"=>"\u1F43", "\u1F40\u0301"=>"\u1F44", "\u1F41\u0301"=>"\u1F45", "\u039F\u0313"=>"\u1F48", "\u039F\u0314"=>"\u1F49", "\u1F48\u0300"=>"\u1F4A", "\u1F49\u0300"=>"\u1F4B", "\u1F48\u0301"=>"\u1F4C",
-    "\u1F49\u0301"=>"\u1F4D", "\u03C5\u0313"=>"\u1F50", "\u03C5\u0314"=>"\u1F51", "\u1F50\u0300"=>"\u1F52", "\u1F51\u0300"=>"\u1F53", "\u1F50\u0301"=>"\u1F54", "\u1F51\u0301"=>"\u1F55", "\u1F50\u0342"=>"\u1F56",
-    "\u1F51\u0342"=>"\u1F57", "\u03A5\u0314"=>"\u1F59", "\u1F59\u0300"=>"\u1F5B", "\u1F59\u0301"=>"\u1F5D", "\u1F59\u0342"=>"\u1F5F", "\u03C9\u0313"=>"\u1F60", "\u03C9\u0314"=>"\u1F61", "\u1F60\u0300"=>"\u1F62",
-    "\u1F61\u0300"=>"\u1F63", "\u1F60\u0301"=>"\u1F64", "\u1F61\u0301"=>"\u1F65", "\u1F60\u0342"=>"\u1F66", "\u1F61\u0342"=>"\u1F67", "\u03A9\u0313"=>"\u1F68", "\u03A9\u0314"=>"\u1F69", "\u1F68\u0300"=>"\u1F6A",
-    "\u1F69\u0300"=>"\u1F6B", "\u1F68\u0301"=>"\u1F6C", "\u1F69\u0301"=>"\u1F6D", "\u1F68\u0342"=>"\u1F6E", "\u1F69\u0342"=>"\u1F6F", "\u03B1\u0300"=>"\u1F70", "\u03B5\u0300"=>"\u1F72", "\u03B7\u0300"=>"\u1F74",
-    "\u03B9\u0300"=>"\u1F76", "\u03BF\u0300"=>"\u1F78", "\u03C5\u0300"=>"\u1F7A", "\u03C9\u0300"=>"\u1F7C", "\u1F00\u0345"=>"\u1F80", "\u1F01\u0345"=>"\u1F81", "\u1F02\u0345"=>"\u1F82", "\u1F03\u0345"=>"\u1F83",
-    "\u1F04\u0345"=>"\u1F84", "\u1F05\u0345"=>"\u1F85", "\u1F06\u0345"=>"\u1F86", "\u1F07\u0345"=>"\u1F87", "\u1F08\u0345"=>"\u1F88", "\u1F09\u0345"=>"\u1F89", "\u1F0A\u0345"=>"\u1F8A", "\u1F0B\u0345"=>"\u1F8B",
-    "\u1F0C\u0345"=>"\u1F8C", "\u1F0D\u0345"=>"\u1F8D", "\u1F0E\u0345"=>"\u1F8E", "\u1F0F\u0345"=>"\u1F8F", "\u1F20\u0345"=>"\u1F90", "\u1F21\u0345"=>"\u1F91", "\u1F22\u0345"=>"\u1F92", "\u1F23\u0345"=>"\u1F93",
-    "\u1F24\u0345"=>"\u1F94", "\u1F25\u0345"=>"\u1F95", "\u1F26\u0345"=>"\u1F96", "\u1F27\u0345"=>"\u1F97", "\u1F28\u0345"=>"\u1F98", "\u1F29\u0345"=>"\u1F99", "\u1F2A\u0345"=>"\u1F9A", "\u1F2B\u0345"=>"\u1F9B",
-    "\u1F2C\u0345"=>"\u1F9C", "\u1F2D\u0345"=>"\u1F9D", "\u1F2E\u0345"=>"\u1F9E", "\u1F2F\u0345"=>"\u1F9F", "\u1F60\u0345"=>"\u1FA0", "\u1F61\u0345"=>"\u1FA1", "\u1F62\u0345"=>"\u1FA2", "\u1F63\u0345"=>"\u1FA3",
-    "\u1F64\u0345"=>"\u1FA4", "\u1F65\u0345"=>"\u1FA5", "\u1F66\u0345"=>"\u1FA6", "\u1F67\u0345"=>"\u1FA7", "\u1F68\u0345"=>"\u1FA8", "\u1F69\u0345"=>"\u1FA9", "\u1F6A\u0345"=>"\u1FAA", "\u1F6B\u0345"=>"\u1FAB",
-    "\u1F6C\u0345"=>"\u1FAC", "\u1F6D\u0345"=>"\u1FAD", "\u1F6E\u0345"=>"\u1FAE", "\u1F6F\u0345"=>"\u1FAF", "\u03B1\u0306"=>"\u1FB0", "\u03B1\u0304"=>"\u1FB1", "\u1F70\u0345"=>"\u1FB2", "\u03B1\u0345"=>"\u1FB3",
-    "\u03AC\u0345"=>"\u1FB4", "\u03B1\u0342"=>"\u1FB6", "\u1FB6\u0345"=>"\u1FB7", "\u0391\u0306"=>"\u1FB8", "\u0391\u0304"=>"\u1FB9", "\u0391\u0300"=>"\u1FBA", "\u0391\u0345"=>"\u1FBC", "\u00A8\u0342"=>"\u1FC1",
-    "\u1F74\u0345"=>"\u1FC2", "\u03B7\u0345"=>"\u1FC3", "\u03AE\u0345"=>"\u1FC4", "\u03B7\u0342"=>"\u1FC6", "\u1FC6\u0345"=>"\u1FC7", "\u0395\u0300"=>"\u1FC8", "\u0397\u0300"=>"\u1FCA", "\u0397\u0345"=>"\u1FCC",
-    "\u1FBF\u0300"=>"\u1FCD", "\u1FBF\u0301"=>"\u1FCE", "\u1FBF\u0342"=>"\u1FCF", "\u03B9\u0306"=>"\u1FD0", "\u03B9\u0304"=>"\u1FD1", "\u03CA\u0300"=>"\u1FD2", "\u03B9\u0342"=>"\u1FD6", "\u03CA\u0342"=>"\u1FD7",
-    "\u0399\u0306"=>"\u1FD8", "\u0399\u0304"=>"\u1FD9", "\u0399\u0300"=>"\u1FDA", "\u1FFE\u0300"=>"\u1FDD", "\u1FFE\u0301"=>"\u1FDE", "\u1FFE\u0342"=>"\u1FDF", "\u03C5\u0306"=>"\u1FE0", "\u03C5\u0304"=>"\u1FE1",
-    "\u03CB\u0300"=>"\u1FE2", "\u03C1\u0313"=>"\u1FE4", "\u03C1\u0314"=>"\u1FE5", "\u03C5\u0342"=>"\u1FE6", "\u03CB\u0342"=>"\u1FE7", "\u03A5\u0306"=>"\u1FE8", "\u03A5\u0304"=>"\u1FE9", "\u03A5\u0300"=>"\u1FEA",
-    "\u03A1\u0314"=>"\u1FEC", "\u00A8\u0300"=>"\u1FED", "\u1F7C\u0345"=>"\u1FF2", "\u03C9\u0345"=>"\u1FF3", "\u03CE\u0345"=>"\u1FF4", "\u03C9\u0342"=>"\u1FF6", "\u1FF6\u0345"=>"\u1FF7", "\u039F\u0300"=>"\u1FF8",
-    "\u03A9\u0300"=>"\u1FFA", "\u03A9\u0345"=>"\u1FFC", "\u2190\u0338"=>"\u219A", "\u2192\u0338"=>"\u219B", "\u2194\u0338"=>"\u21AE", "\u21D0\u0338"=>"\u21CD", "\u21D4\u0338"=>"\u21CE", "\u21D2\u0338"=>"\u21CF",
-    "\u2203\u0338"=>"\u2204", "\u2208\u0338"=>"\u2209", "\u220B\u0338"=>"\u220C", "\u2223\u0338"=>"\u2224", "\u2225\u0338"=>"\u2226", "\u223C\u0338"=>"\u2241", "\u2243\u0338"=>"\u2244", "\u2245\u0338"=>"\u2247",
-    "\u2248\u0338"=>"\u2249", "=\u0338"=>"\u2260", "\u2261\u0338"=>"\u2262", "\u224D\u0338"=>"\u226D", "<\u0338"=>"\u226E", ">\u0338"=>"\u226F", "\u2264\u0338"=>"\u2270", "\u2265\u0338"=>"\u2271",
-    "\u2272\u0338"=>"\u2274", "\u2273\u0338"=>"\u2275", "\u2276\u0338"=>"\u2278", "\u2277\u0338"=>"\u2279", "\u227A\u0338"=>"\u2280", "\u227B\u0338"=>"\u2281", "\u2282\u0338"=>"\u2284", "\u2283\u0338"=>"\u2285",
-    "\u2286\u0338"=>"\u2288", "\u2287\u0338"=>"\u2289", "\u22A2\u0338"=>"\u22AC", "\u22A8\u0338"=>"\u22AD", "\u22A9\u0338"=>"\u22AE", "\u22AB\u0338"=>"\u22AF", "\u227C\u0338"=>"\u22E0", "\u227D\u0338"=>"\u22E1",
-    "\u2291\u0338"=>"\u22E2", "\u2292\u0338"=>"\u22E3", "\u22B2\u0338"=>"\u22EA", "\u22B3\u0338"=>"\u22EB", "\u22B4\u0338"=>"\u22EC", "\u22B5\u0338"=>"\u22ED", "\u304B\u3099"=>"\u304C", "\u304D\u3099"=>"\u304E",
-    "\u304F\u3099"=>"\u3050", "\u3051\u3099"=>"\u3052", "\u3053\u3099"=>"\u3054", "\u3055\u3099"=>"\u3056", "\u3057\u3099"=>"\u3058", "\u3059\u3099"=>"\u305A", "\u305B\u3099"=>"\u305C", "\u305D\u3099"=>"\u305E",
-    "\u305F\u3099"=>"\u3060", "\u3061\u3099"=>"\u3062", "\u3064\u3099"=>"\u3065", "\u3066\u3099"=>"\u3067", "\u3068\u3099"=>"\u3069", "\u306F\u3099"=>"\u3070", "\u306F\u309A"=>"\u3071", "\u3072\u3099"=>"\u3073",
-    "\u3072\u309A"=>"\u3074", "\u3075\u3099"=>"\u3076", "\u3075\u309A"=>"\u3077", "\u3078\u3099"=>"\u3079", "\u3078\u309A"=>"\u307A", "\u307B\u3099"=>"\u307C", "\u307B\u309A"=>"\u307D", "\u3046\u3099"=>"\u3094",
-    "\u309D\u3099"=>"\u309E", "\u30AB\u3099"=>"\u30AC", "\u30AD\u3099"=>"\u30AE", "\u30AF\u3099"=>"\u30B0", "\u30B1\u3099"=>"\u30B2", "\u30B3\u3099"=>"\u30B4", "\u30B5\u3099"=>"\u30B6", "\u30B7\u3099"=>"\u30B8",
-    "\u30B9\u3099"=>"\u30BA", "\u30BB\u3099"=>"\u30BC", "\u30BD\u3099"=>"\u30BE", "\u30BF\u3099"=>"\u30C0", "\u30C1\u3099"=>"\u30C2", "\u30C4\u3099"=>"\u30C5", "\u30C6\u3099"=>"\u30C7", "\u30C8\u3099"=>"\u30C9",
-    "\u30CF\u3099"=>"\u30D0", "\u30CF\u309A"=>"\u30D1", "\u30D2\u3099"=>"\u30D3", "\u30D2\u309A"=>"\u30D4", "\u30D5\u3099"=>"\u30D6", "\u30D5\u309A"=>"\u30D7", "\u30D8\u3099"=>"\u30D9", "\u30D8\u309A"=>"\u30DA",
-    "\u30DB\u3099"=>"\u30DC", "\u30DB\u309A"=>"\u30DD", "\u30A6\u3099"=>"\u30F4", "\u30EF\u3099"=>"\u30F7", "\u30F0\u3099"=>"\u30F8", "\u30F1\u3099"=>"\u30F9", "\u30F2\u3099"=>"\u30FA", "\u30FD\u3099"=>"\u30FE",
-    "\u{11099}\u{110BA}"=>"\u{1109A}", "\u{1109B}\u{110BA}"=>"\u{1109C}", "\u{110A5}\u{110BA}"=>"\u{110AB}", "\u{11131}\u{11127}"=>"\u{1112E}", "\u{11132}\u{11127}"=>"\u{1112F}", "\u{11347}\u{1133E}"=>"\u{1134B}", "\u{11347}\u{11357}"=>"\u{1134C}", "\u{114B9}\u{114BA}"=>"\u{114BB}",
-    "\u{114B9}\u{114B0}"=>"\u{114BC}", "\u{114B9}\u{114BD}"=>"\u{114BE}", "\u{115B8}\u{115AF}"=>"\u{115BA}", "\u{115B9}\u{115AF}"=>"\u{115BB}",
+    "A\u0300"=>"\u00C0",
+    "A\u0301"=>"\u00C1",
+    "A\u0302"=>"\u00C2",
+    "A\u0303"=>"\u00C3",
+    "A\u0308"=>"\u00C4",
+    "A\u030A"=>"\u00C5",
+    "C\u0327"=>"\u00C7",
+    "E\u0300"=>"\u00C8",
+    "E\u0301"=>"\u00C9",
+    "E\u0302"=>"\u00CA",
+    "E\u0308"=>"\u00CB",
+    "I\u0300"=>"\u00CC",
+    "I\u0301"=>"\u00CD",
+    "I\u0302"=>"\u00CE",
+    "I\u0308"=>"\u00CF",
+    "N\u0303"=>"\u00D1",
+    "O\u0300"=>"\u00D2",
+    "O\u0301"=>"\u00D3",
+    "O\u0302"=>"\u00D4",
+    "O\u0303"=>"\u00D5",
+    "O\u0308"=>"\u00D6",
+    "U\u0300"=>"\u00D9",
+    "U\u0301"=>"\u00DA",
+    "U\u0302"=>"\u00DB",
+    "U\u0308"=>"\u00DC",
+    "Y\u0301"=>"\u00DD",
+    "a\u0300"=>"\u00E0",
+    "a\u0301"=>"\u00E1",
+    "a\u0302"=>"\u00E2",
+    "a\u0303"=>"\u00E3",
+    "a\u0308"=>"\u00E4",
+    "a\u030A"=>"\u00E5",
+    "c\u0327"=>"\u00E7",
+    "e\u0300"=>"\u00E8",
+    "e\u0301"=>"\u00E9",
+    "e\u0302"=>"\u00EA",
+    "e\u0308"=>"\u00EB",
+    "i\u0300"=>"\u00EC",
+    "i\u0301"=>"\u00ED",
+    "i\u0302"=>"\u00EE",
+    "i\u0308"=>"\u00EF",
+    "n\u0303"=>"\u00F1",
+    "o\u0300"=>"\u00F2",
+    "o\u0301"=>"\u00F3",
+    "o\u0302"=>"\u00F4",
+    "o\u0303"=>"\u00F5",
+    "o\u0308"=>"\u00F6",
+    "u\u0300"=>"\u00F9",
+    "u\u0301"=>"\u00FA",
+    "u\u0302"=>"\u00FB",
+    "u\u0308"=>"\u00FC",
+    "y\u0301"=>"\u00FD",
+    "y\u0308"=>"\u00FF",
+    "A\u0304"=>"\u0100",
+    "a\u0304"=>"\u0101",
+    "A\u0306"=>"\u0102",
+    "a\u0306"=>"\u0103",
+    "A\u0328"=>"\u0104",
+    "a\u0328"=>"\u0105",
+    "C\u0301"=>"\u0106",
+    "c\u0301"=>"\u0107",
+    "C\u0302"=>"\u0108",
+    "c\u0302"=>"\u0109",
+    "C\u0307"=>"\u010A",
+    "c\u0307"=>"\u010B",
+    "C\u030C"=>"\u010C",
+    "c\u030C"=>"\u010D",
+    "D\u030C"=>"\u010E",
+    "d\u030C"=>"\u010F",
+    "E\u0304"=>"\u0112",
+    "e\u0304"=>"\u0113",
+    "E\u0306"=>"\u0114",
+    "e\u0306"=>"\u0115",
+    "E\u0307"=>"\u0116",
+    "e\u0307"=>"\u0117",
+    "E\u0328"=>"\u0118",
+    "e\u0328"=>"\u0119",
+    "E\u030C"=>"\u011A",
+    "e\u030C"=>"\u011B",
+    "G\u0302"=>"\u011C",
+    "g\u0302"=>"\u011D",
+    "G\u0306"=>"\u011E",
+    "g\u0306"=>"\u011F",
+    "G\u0307"=>"\u0120",
+    "g\u0307"=>"\u0121",
+    "G\u0327"=>"\u0122",
+    "g\u0327"=>"\u0123",
+    "H\u0302"=>"\u0124",
+    "h\u0302"=>"\u0125",
+    "I\u0303"=>"\u0128",
+    "i\u0303"=>"\u0129",
+    "I\u0304"=>"\u012A",
+    "i\u0304"=>"\u012B",
+    "I\u0306"=>"\u012C",
+    "i\u0306"=>"\u012D",
+    "I\u0328"=>"\u012E",
+    "i\u0328"=>"\u012F",
+    "I\u0307"=>"\u0130",
+    "J\u0302"=>"\u0134",
+    "j\u0302"=>"\u0135",
+    "K\u0327"=>"\u0136",
+    "k\u0327"=>"\u0137",
+    "L\u0301"=>"\u0139",
+    "l\u0301"=>"\u013A",
+    "L\u0327"=>"\u013B",
+    "l\u0327"=>"\u013C",
+    "L\u030C"=>"\u013D",
+    "l\u030C"=>"\u013E",
+    "N\u0301"=>"\u0143",
+    "n\u0301"=>"\u0144",
+    "N\u0327"=>"\u0145",
+    "n\u0327"=>"\u0146",
+    "N\u030C"=>"\u0147",
+    "n\u030C"=>"\u0148",
+    "O\u0304"=>"\u014C",
+    "o\u0304"=>"\u014D",
+    "O\u0306"=>"\u014E",
+    "o\u0306"=>"\u014F",
+    "O\u030B"=>"\u0150",
+    "o\u030B"=>"\u0151",
+    "R\u0301"=>"\u0154",
+    "r\u0301"=>"\u0155",
+    "R\u0327"=>"\u0156",
+    "r\u0327"=>"\u0157",
+    "R\u030C"=>"\u0158",
+    "r\u030C"=>"\u0159",
+    "S\u0301"=>"\u015A",
+    "s\u0301"=>"\u015B",
+    "S\u0302"=>"\u015C",
+    "s\u0302"=>"\u015D",
+    "S\u0327"=>"\u015E",
+    "s\u0327"=>"\u015F",
+    "S\u030C"=>"\u0160",
+    "s\u030C"=>"\u0161",
+    "T\u0327"=>"\u0162",
+    "t\u0327"=>"\u0163",
+    "T\u030C"=>"\u0164",
+    "t\u030C"=>"\u0165",
+    "U\u0303"=>"\u0168",
+    "u\u0303"=>"\u0169",
+    "U\u0304"=>"\u016A",
+    "u\u0304"=>"\u016B",
+    "U\u0306"=>"\u016C",
+    "u\u0306"=>"\u016D",
+    "U\u030A"=>"\u016E",
+    "u\u030A"=>"\u016F",
+    "U\u030B"=>"\u0170",
+    "u\u030B"=>"\u0171",
+    "U\u0328"=>"\u0172",
+    "u\u0328"=>"\u0173",
+    "W\u0302"=>"\u0174",
+    "w\u0302"=>"\u0175",
+    "Y\u0302"=>"\u0176",
+    "y\u0302"=>"\u0177",
+    "Y\u0308"=>"\u0178",
+    "Z\u0301"=>"\u0179",
+    "z\u0301"=>"\u017A",
+    "Z\u0307"=>"\u017B",
+    "z\u0307"=>"\u017C",
+    "Z\u030C"=>"\u017D",
+    "z\u030C"=>"\u017E",
+    "O\u031B"=>"\u01A0",
+    "o\u031B"=>"\u01A1",
+    "U\u031B"=>"\u01AF",
+    "u\u031B"=>"\u01B0",
+    "A\u030C"=>"\u01CD",
+    "a\u030C"=>"\u01CE",
+    "I\u030C"=>"\u01CF",
+    "i\u030C"=>"\u01D0",
+    "O\u030C"=>"\u01D1",
+    "o\u030C"=>"\u01D2",
+    "U\u030C"=>"\u01D3",
+    "u\u030C"=>"\u01D4",
+    "\u00DC\u0304"=>"\u01D5",
+    "\u00FC\u0304"=>"\u01D6",
+    "\u00DC\u0301"=>"\u01D7",
+    "\u00FC\u0301"=>"\u01D8",
+    "\u00DC\u030C"=>"\u01D9",
+    "\u00FC\u030C"=>"\u01DA",
+    "\u00DC\u0300"=>"\u01DB",
+    "\u00FC\u0300"=>"\u01DC",
+    "\u00C4\u0304"=>"\u01DE",
+    "\u00E4\u0304"=>"\u01DF",
+    "\u0226\u0304"=>"\u01E0",
+    "\u0227\u0304"=>"\u01E1",
+    "\u00C6\u0304"=>"\u01E2",
+    "\u00E6\u0304"=>"\u01E3",
+    "G\u030C"=>"\u01E6",
+    "g\u030C"=>"\u01E7",
+    "K\u030C"=>"\u01E8",
+    "k\u030C"=>"\u01E9",
+    "O\u0328"=>"\u01EA",
+    "o\u0328"=>"\u01EB",
+    "\u01EA\u0304"=>"\u01EC",
+    "\u01EB\u0304"=>"\u01ED",
+    "\u01B7\u030C"=>"\u01EE",
+    "\u0292\u030C"=>"\u01EF",
+    "j\u030C"=>"\u01F0",
+    "G\u0301"=>"\u01F4",
+    "g\u0301"=>"\u01F5",
+    "N\u0300"=>"\u01F8",
+    "n\u0300"=>"\u01F9",
+    "\u00C5\u0301"=>"\u01FA",
+    "\u00E5\u0301"=>"\u01FB",
+    "\u00C6\u0301"=>"\u01FC",
+    "\u00E6\u0301"=>"\u01FD",
+    "\u00D8\u0301"=>"\u01FE",
+    "\u00F8\u0301"=>"\u01FF",
+    "A\u030F"=>"\u0200",
+    "a\u030F"=>"\u0201",
+    "A\u0311"=>"\u0202",
+    "a\u0311"=>"\u0203",
+    "E\u030F"=>"\u0204",
+    "e\u030F"=>"\u0205",
+    "E\u0311"=>"\u0206",
+    "e\u0311"=>"\u0207",
+    "I\u030F"=>"\u0208",
+    "i\u030F"=>"\u0209",
+    "I\u0311"=>"\u020A",
+    "i\u0311"=>"\u020B",
+    "O\u030F"=>"\u020C",
+    "o\u030F"=>"\u020D",
+    "O\u0311"=>"\u020E",
+    "o\u0311"=>"\u020F",
+    "R\u030F"=>"\u0210",
+    "r\u030F"=>"\u0211",
+    "R\u0311"=>"\u0212",
+    "r\u0311"=>"\u0213",
+    "U\u030F"=>"\u0214",
+    "u\u030F"=>"\u0215",
+    "U\u0311"=>"\u0216",
+    "u\u0311"=>"\u0217",
+    "S\u0326"=>"\u0218",
+    "s\u0326"=>"\u0219",
+    "T\u0326"=>"\u021A",
+    "t\u0326"=>"\u021B",
+    "H\u030C"=>"\u021E",
+    "h\u030C"=>"\u021F",
+    "A\u0307"=>"\u0226",
+    "a\u0307"=>"\u0227",
+    "E\u0327"=>"\u0228",
+    "e\u0327"=>"\u0229",
+    "\u00D6\u0304"=>"\u022A",
+    "\u00F6\u0304"=>"\u022B",
+    "\u00D5\u0304"=>"\u022C",
+    "\u00F5\u0304"=>"\u022D",
+    "O\u0307"=>"\u022E",
+    "o\u0307"=>"\u022F",
+    "\u022E\u0304"=>"\u0230",
+    "\u022F\u0304"=>"\u0231",
+    "Y\u0304"=>"\u0232",
+    "y\u0304"=>"\u0233",
+    "\u00A8\u0301"=>"\u0385",
+    "\u0391\u0301"=>"\u0386",
+    "\u0395\u0301"=>"\u0388",
+    "\u0397\u0301"=>"\u0389",
+    "\u0399\u0301"=>"\u038A",
+    "\u039F\u0301"=>"\u038C",
+    "\u03A5\u0301"=>"\u038E",
+    "\u03A9\u0301"=>"\u038F",
+    "\u03CA\u0301"=>"\u0390",
+    "\u0399\u0308"=>"\u03AA",
+    "\u03A5\u0308"=>"\u03AB",
+    "\u03B1\u0301"=>"\u03AC",
+    "\u03B5\u0301"=>"\u03AD",
+    "\u03B7\u0301"=>"\u03AE",
+    "\u03B9\u0301"=>"\u03AF",
+    "\u03CB\u0301"=>"\u03B0",
+    "\u03B9\u0308"=>"\u03CA",
+    "\u03C5\u0308"=>"\u03CB",
+    "\u03BF\u0301"=>"\u03CC",
+    "\u03C5\u0301"=>"\u03CD",
+    "\u03C9\u0301"=>"\u03CE",
+    "\u03D2\u0301"=>"\u03D3",
+    "\u03D2\u0308"=>"\u03D4",
+    "\u0415\u0300"=>"\u0400",
+    "\u0415\u0308"=>"\u0401",
+    "\u0413\u0301"=>"\u0403",
+    "\u0406\u0308"=>"\u0407",
+    "\u041A\u0301"=>"\u040C",
+    "\u0418\u0300"=>"\u040D",
+    "\u0423\u0306"=>"\u040E",
+    "\u0418\u0306"=>"\u0419",
+    "\u0438\u0306"=>"\u0439",
+    "\u0435\u0300"=>"\u0450",
+    "\u0435\u0308"=>"\u0451",
+    "\u0433\u0301"=>"\u0453",
+    "\u0456\u0308"=>"\u0457",
+    "\u043A\u0301"=>"\u045C",
+    "\u0438\u0300"=>"\u045D",
+    "\u0443\u0306"=>"\u045E",
+    "\u0474\u030F"=>"\u0476",
+    "\u0475\u030F"=>"\u0477",
+    "\u0416\u0306"=>"\u04C1",
+    "\u0436\u0306"=>"\u04C2",
+    "\u0410\u0306"=>"\u04D0",
+    "\u0430\u0306"=>"\u04D1",
+    "\u0410\u0308"=>"\u04D2",
+    "\u0430\u0308"=>"\u04D3",
+    "\u0415\u0306"=>"\u04D6",
+    "\u0435\u0306"=>"\u04D7",
+    "\u04D8\u0308"=>"\u04DA",
+    "\u04D9\u0308"=>"\u04DB",
+    "\u0416\u0308"=>"\u04DC",
+    "\u0436\u0308"=>"\u04DD",
+    "\u0417\u0308"=>"\u04DE",
+    "\u0437\u0308"=>"\u04DF",
+    "\u0418\u0304"=>"\u04E2",
+    "\u0438\u0304"=>"\u04E3",
+    "\u0418\u0308"=>"\u04E4",
+    "\u0438\u0308"=>"\u04E5",
+    "\u041E\u0308"=>"\u04E6",
+    "\u043E\u0308"=>"\u04E7",
+    "\u04E8\u0308"=>"\u04EA",
+    "\u04E9\u0308"=>"\u04EB",
+    "\u042D\u0308"=>"\u04EC",
+    "\u044D\u0308"=>"\u04ED",
+    "\u0423\u0304"=>"\u04EE",
+    "\u0443\u0304"=>"\u04EF",
+    "\u0423\u0308"=>"\u04F0",
+    "\u0443\u0308"=>"\u04F1",
+    "\u0423\u030B"=>"\u04F2",
+    "\u0443\u030B"=>"\u04F3",
+    "\u0427\u0308"=>"\u04F4",
+    "\u0447\u0308"=>"\u04F5",
+    "\u042B\u0308"=>"\u04F8",
+    "\u044B\u0308"=>"\u04F9",
+    "\u0627\u0653"=>"\u0622",
+    "\u0627\u0654"=>"\u0623",
+    "\u0648\u0654"=>"\u0624",
+    "\u0627\u0655"=>"\u0625",
+    "\u064A\u0654"=>"\u0626",
+    "\u06D5\u0654"=>"\u06C0",
+    "\u06C1\u0654"=>"\u06C2",
+    "\u06D2\u0654"=>"\u06D3",
+    "\u0928\u093C"=>"\u0929",
+    "\u0930\u093C"=>"\u0931",
+    "\u0933\u093C"=>"\u0934",
+    "\u09C7\u09BE"=>"\u09CB",
+    "\u09C7\u09D7"=>"\u09CC",
+    "\u0B47\u0B56"=>"\u0B48",
+    "\u0B47\u0B3E"=>"\u0B4B",
+    "\u0B47\u0B57"=>"\u0B4C",
+    "\u0B92\u0BD7"=>"\u0B94",
+    "\u0BC6\u0BBE"=>"\u0BCA",
+    "\u0BC7\u0BBE"=>"\u0BCB",
+    "\u0BC6\u0BD7"=>"\u0BCC",
+    "\u0C46\u0C56"=>"\u0C48",
+    "\u0CBF\u0CD5"=>"\u0CC0",
+    "\u0CC6\u0CD5"=>"\u0CC7",
+    "\u0CC6\u0CD6"=>"\u0CC8",
+    "\u0CC6\u0CC2"=>"\u0CCA",
+    "\u0CCA\u0CD5"=>"\u0CCB",
+    "\u0D46\u0D3E"=>"\u0D4A",
+    "\u0D47\u0D3E"=>"\u0D4B",
+    "\u0D46\u0D57"=>"\u0D4C",
+    "\u0DD9\u0DCA"=>"\u0DDA",
+    "\u0DD9\u0DCF"=>"\u0DDC",
+    "\u0DDC\u0DCA"=>"\u0DDD",
+    "\u0DD9\u0DDF"=>"\u0DDE",
+    "\u1025\u102E"=>"\u1026",
+    "\u1B05\u1B35"=>"\u1B06",
+    "\u1B07\u1B35"=>"\u1B08",
+    "\u1B09\u1B35"=>"\u1B0A",
+    "\u1B0B\u1B35"=>"\u1B0C",
+    "\u1B0D\u1B35"=>"\u1B0E",
+    "\u1B11\u1B35"=>"\u1B12",
+    "\u1B3A\u1B35"=>"\u1B3B",
+    "\u1B3C\u1B35"=>"\u1B3D",
+    "\u1B3E\u1B35"=>"\u1B40",
+    "\u1B3F\u1B35"=>"\u1B41",
+    "\u1B42\u1B35"=>"\u1B43",
+    "A\u0325"=>"\u1E00",
+    "a\u0325"=>"\u1E01",
+    "B\u0307"=>"\u1E02",
+    "b\u0307"=>"\u1E03",
+    "B\u0323"=>"\u1E04",
+    "b\u0323"=>"\u1E05",
+    "B\u0331"=>"\u1E06",
+    "b\u0331"=>"\u1E07",
+    "\u00C7\u0301"=>"\u1E08",
+    "\u00E7\u0301"=>"\u1E09",
+    "D\u0307"=>"\u1E0A",
+    "d\u0307"=>"\u1E0B",
+    "D\u0323"=>"\u1E0C",
+    "d\u0323"=>"\u1E0D",
+    "D\u0331"=>"\u1E0E",
+    "d\u0331"=>"\u1E0F",
+    "D\u0327"=>"\u1E10",
+    "d\u0327"=>"\u1E11",
+    "D\u032D"=>"\u1E12",
+    "d\u032D"=>"\u1E13",
+    "\u0112\u0300"=>"\u1E14",
+    "\u0113\u0300"=>"\u1E15",
+    "\u0112\u0301"=>"\u1E16",
+    "\u0113\u0301"=>"\u1E17",
+    "E\u032D"=>"\u1E18",
+    "e\u032D"=>"\u1E19",
+    "E\u0330"=>"\u1E1A",
+    "e\u0330"=>"\u1E1B",
+    "\u0228\u0306"=>"\u1E1C",
+    "\u0229\u0306"=>"\u1E1D",
+    "F\u0307"=>"\u1E1E",
+    "f\u0307"=>"\u1E1F",
+    "G\u0304"=>"\u1E20",
+    "g\u0304"=>"\u1E21",
+    "H\u0307"=>"\u1E22",
+    "h\u0307"=>"\u1E23",
+    "H\u0323"=>"\u1E24",
+    "h\u0323"=>"\u1E25",
+    "H\u0308"=>"\u1E26",
+    "h\u0308"=>"\u1E27",
+    "H\u0327"=>"\u1E28",
+    "h\u0327"=>"\u1E29",
+    "H\u032E"=>"\u1E2A",
+    "h\u032E"=>"\u1E2B",
+    "I\u0330"=>"\u1E2C",
+    "i\u0330"=>"\u1E2D",
+    "\u00CF\u0301"=>"\u1E2E",
+    "\u00EF\u0301"=>"\u1E2F",
+    "K\u0301"=>"\u1E30",
+    "k\u0301"=>"\u1E31",
+    "K\u0323"=>"\u1E32",
+    "k\u0323"=>"\u1E33",
+    "K\u0331"=>"\u1E34",
+    "k\u0331"=>"\u1E35",
+    "L\u0323"=>"\u1E36",
+    "l\u0323"=>"\u1E37",
+    "\u1E36\u0304"=>"\u1E38",
+    "\u1E37\u0304"=>"\u1E39",
+    "L\u0331"=>"\u1E3A",
+    "l\u0331"=>"\u1E3B",
+    "L\u032D"=>"\u1E3C",
+    "l\u032D"=>"\u1E3D",
+    "M\u0301"=>"\u1E3E",
+    "m\u0301"=>"\u1E3F",
+    "M\u0307"=>"\u1E40",
+    "m\u0307"=>"\u1E41",
+    "M\u0323"=>"\u1E42",
+    "m\u0323"=>"\u1E43",
+    "N\u0307"=>"\u1E44",
+    "n\u0307"=>"\u1E45",
+    "N\u0323"=>"\u1E46",
+    "n\u0323"=>"\u1E47",
+    "N\u0331"=>"\u1E48",
+    "n\u0331"=>"\u1E49",
+    "N\u032D"=>"\u1E4A",
+    "n\u032D"=>"\u1E4B",
+    "\u00D5\u0301"=>"\u1E4C",
+    "\u00F5\u0301"=>"\u1E4D",
+    "\u00D5\u0308"=>"\u1E4E",
+    "\u00F5\u0308"=>"\u1E4F",
+    "\u014C\u0300"=>"\u1E50",
+    "\u014D\u0300"=>"\u1E51",
+    "\u014C\u0301"=>"\u1E52",
+    "\u014D\u0301"=>"\u1E53",
+    "P\u0301"=>"\u1E54",
+    "p\u0301"=>"\u1E55",
+    "P\u0307"=>"\u1E56",
+    "p\u0307"=>"\u1E57",
+    "R\u0307"=>"\u1E58",
+    "r\u0307"=>"\u1E59",
+    "R\u0323"=>"\u1E5A",
+    "r\u0323"=>"\u1E5B",
+    "\u1E5A\u0304"=>"\u1E5C",
+    "\u1E5B\u0304"=>"\u1E5D",
+    "R\u0331"=>"\u1E5E",
+    "r\u0331"=>"\u1E5F",
+    "S\u0307"=>"\u1E60",
+    "s\u0307"=>"\u1E61",
+    "S\u0323"=>"\u1E62",
+    "s\u0323"=>"\u1E63",
+    "\u015A\u0307"=>"\u1E64",
+    "\u015B\u0307"=>"\u1E65",
+    "\u0160\u0307"=>"\u1E66",
+    "\u0161\u0307"=>"\u1E67",
+    "\u1E62\u0307"=>"\u1E68",
+    "\u1E63\u0307"=>"\u1E69",
+    "T\u0307"=>"\u1E6A",
+    "t\u0307"=>"\u1E6B",
+    "T\u0323"=>"\u1E6C",
+    "t\u0323"=>"\u1E6D",
+    "T\u0331"=>"\u1E6E",
+    "t\u0331"=>"\u1E6F",
+    "T\u032D"=>"\u1E70",
+    "t\u032D"=>"\u1E71",
+    "U\u0324"=>"\u1E72",
+    "u\u0324"=>"\u1E73",
+    "U\u0330"=>"\u1E74",
+    "u\u0330"=>"\u1E75",
+    "U\u032D"=>"\u1E76",
+    "u\u032D"=>"\u1E77",
+    "\u0168\u0301"=>"\u1E78",
+    "\u0169\u0301"=>"\u1E79",
+    "\u016A\u0308"=>"\u1E7A",
+    "\u016B\u0308"=>"\u1E7B",
+    "V\u0303"=>"\u1E7C",
+    "v\u0303"=>"\u1E7D",
+    "V\u0323"=>"\u1E7E",
+    "v\u0323"=>"\u1E7F",
+    "W\u0300"=>"\u1E80",
+    "w\u0300"=>"\u1E81",
+    "W\u0301"=>"\u1E82",
+    "w\u0301"=>"\u1E83",
+    "W\u0308"=>"\u1E84",
+    "w\u0308"=>"\u1E85",
+    "W\u0307"=>"\u1E86",
+    "w\u0307"=>"\u1E87",
+    "W\u0323"=>"\u1E88",
+    "w\u0323"=>"\u1E89",
+    "X\u0307"=>"\u1E8A",
+    "x\u0307"=>"\u1E8B",
+    "X\u0308"=>"\u1E8C",
+    "x\u0308"=>"\u1E8D",
+    "Y\u0307"=>"\u1E8E",
+    "y\u0307"=>"\u1E8F",
+    "Z\u0302"=>"\u1E90",
+    "z\u0302"=>"\u1E91",
+    "Z\u0323"=>"\u1E92",
+    "z\u0323"=>"\u1E93",
+    "Z\u0331"=>"\u1E94",
+    "z\u0331"=>"\u1E95",
+    "h\u0331"=>"\u1E96",
+    "t\u0308"=>"\u1E97",
+    "w\u030A"=>"\u1E98",
+    "y\u030A"=>"\u1E99",
+    "\u017F\u0307"=>"\u1E9B",
+    "A\u0323"=>"\u1EA0",
+    "a\u0323"=>"\u1EA1",
+    "A\u0309"=>"\u1EA2",
+    "a\u0309"=>"\u1EA3",
+    "\u00C2\u0301"=>"\u1EA4",
+    "\u00E2\u0301"=>"\u1EA5",
+    "\u00C2\u0300"=>"\u1EA6",
+    "\u00E2\u0300"=>"\u1EA7",
+    "\u00C2\u0309"=>"\u1EA8",
+    "\u00E2\u0309"=>"\u1EA9",
+    "\u00C2\u0303"=>"\u1EAA",
+    "\u00E2\u0303"=>"\u1EAB",
+    "\u1EA0\u0302"=>"\u1EAC",
+    "\u1EA1\u0302"=>"\u1EAD",
+    "\u0102\u0301"=>"\u1EAE",
+    "\u0103\u0301"=>"\u1EAF",
+    "\u0102\u0300"=>"\u1EB0",
+    "\u0103\u0300"=>"\u1EB1",
+    "\u0102\u0309"=>"\u1EB2",
+    "\u0103\u0309"=>"\u1EB3",
+    "\u0102\u0303"=>"\u1EB4",
+    "\u0103\u0303"=>"\u1EB5",
+    "\u1EA0\u0306"=>"\u1EB6",
+    "\u1EA1\u0306"=>"\u1EB7",
+    "E\u0323"=>"\u1EB8",
+    "e\u0323"=>"\u1EB9",
+    "E\u0309"=>"\u1EBA",
+    "e\u0309"=>"\u1EBB",
+    "E\u0303"=>"\u1EBC",
+    "e\u0303"=>"\u1EBD",
+    "\u00CA\u0301"=>"\u1EBE",
+    "\u00EA\u0301"=>"\u1EBF",
+    "\u00CA\u0300"=>"\u1EC0",
+    "\u00EA\u0300"=>"\u1EC1",
+    "\u00CA\u0309"=>"\u1EC2",
+    "\u00EA\u0309"=>"\u1EC3",
+    "\u00CA\u0303"=>"\u1EC4",
+    "\u00EA\u0303"=>"\u1EC5",
+    "\u1EB8\u0302"=>"\u1EC6",
+    "\u1EB9\u0302"=>"\u1EC7",
+    "I\u0309"=>"\u1EC8",
+    "i\u0309"=>"\u1EC9",
+    "I\u0323"=>"\u1ECA",
+    "i\u0323"=>"\u1ECB",
+    "O\u0323"=>"\u1ECC",
+    "o\u0323"=>"\u1ECD",
+    "O\u0309"=>"\u1ECE",
+    "o\u0309"=>"\u1ECF",
+    "\u00D4\u0301"=>"\u1ED0",
+    "\u00F4\u0301"=>"\u1ED1",
+    "\u00D4\u0300"=>"\u1ED2",
+    "\u00F4\u0300"=>"\u1ED3",
+    "\u00D4\u0309"=>"\u1ED4",
+    "\u00F4\u0309"=>"\u1ED5",
+    "\u00D4\u0303"=>"\u1ED6",
+    "\u00F4\u0303"=>"\u1ED7",
+    "\u1ECC\u0302"=>"\u1ED8",
+    "\u1ECD\u0302"=>"\u1ED9",
+    "\u01A0\u0301"=>"\u1EDA",
+    "\u01A1\u0301"=>"\u1EDB",
+    "\u01A0\u0300"=>"\u1EDC",
+    "\u01A1\u0300"=>"\u1EDD",
+    "\u01A0\u0309"=>"\u1EDE",
+    "\u01A1\u0309"=>"\u1EDF",
+    "\u01A0\u0303"=>"\u1EE0",
+    "\u01A1\u0303"=>"\u1EE1",
+    "\u01A0\u0323"=>"\u1EE2",
+    "\u01A1\u0323"=>"\u1EE3",
+    "U\u0323"=>"\u1EE4",
+    "u\u0323"=>"\u1EE5",
+    "U\u0309"=>"\u1EE6",
+    "u\u0309"=>"\u1EE7",
+    "\u01AF\u0301"=>"\u1EE8",
+    "\u01B0\u0301"=>"\u1EE9",
+    "\u01AF\u0300"=>"\u1EEA",
+    "\u01B0\u0300"=>"\u1EEB",
+    "\u01AF\u0309"=>"\u1EEC",
+    "\u01B0\u0309"=>"\u1EED",
+    "\u01AF\u0303"=>"\u1EEE",
+    "\u01B0\u0303"=>"\u1EEF",
+    "\u01AF\u0323"=>"\u1EF0",
+    "\u01B0\u0323"=>"\u1EF1",
+    "Y\u0300"=>"\u1EF2",
+    "y\u0300"=>"\u1EF3",
+    "Y\u0323"=>"\u1EF4",
+    "y\u0323"=>"\u1EF5",
+    "Y\u0309"=>"\u1EF6",
+    "y\u0309"=>"\u1EF7",
+    "Y\u0303"=>"\u1EF8",
+    "y\u0303"=>"\u1EF9",
+    "\u03B1\u0313"=>"\u1F00",
+    "\u03B1\u0314"=>"\u1F01",
+    "\u1F00\u0300"=>"\u1F02",
+    "\u1F01\u0300"=>"\u1F03",
+    "\u1F00\u0301"=>"\u1F04",
+    "\u1F01\u0301"=>"\u1F05",
+    "\u1F00\u0342"=>"\u1F06",
+    "\u1F01\u0342"=>"\u1F07",
+    "\u0391\u0313"=>"\u1F08",
+    "\u0391\u0314"=>"\u1F09",
+    "\u1F08\u0300"=>"\u1F0A",
+    "\u1F09\u0300"=>"\u1F0B",
+    "\u1F08\u0301"=>"\u1F0C",
+    "\u1F09\u0301"=>"\u1F0D",
+    "\u1F08\u0342"=>"\u1F0E",
+    "\u1F09\u0342"=>"\u1F0F",
+    "\u03B5\u0313"=>"\u1F10",
+    "\u03B5\u0314"=>"\u1F11",
+    "\u1F10\u0300"=>"\u1F12",
+    "\u1F11\u0300"=>"\u1F13",
+    "\u1F10\u0301"=>"\u1F14",
+    "\u1F11\u0301"=>"\u1F15",
+    "\u0395\u0313"=>"\u1F18",
+    "\u0395\u0314"=>"\u1F19",
+    "\u1F18\u0300"=>"\u1F1A",
+    "\u1F19\u0300"=>"\u1F1B",
+    "\u1F18\u0301"=>"\u1F1C",
+    "\u1F19\u0301"=>"\u1F1D",
+    "\u03B7\u0313"=>"\u1F20",
+    "\u03B7\u0314"=>"\u1F21",
+    "\u1F20\u0300"=>"\u1F22",
+    "\u1F21\u0300"=>"\u1F23",
+    "\u1F20\u0301"=>"\u1F24",
+    "\u1F21\u0301"=>"\u1F25",
+    "\u1F20\u0342"=>"\u1F26",
+    "\u1F21\u0342"=>"\u1F27",
+    "\u0397\u0313"=>"\u1F28",
+    "\u0397\u0314"=>"\u1F29",
+    "\u1F28\u0300"=>"\u1F2A",
+    "\u1F29\u0300"=>"\u1F2B",
+    "\u1F28\u0301"=>"\u1F2C",
+    "\u1F29\u0301"=>"\u1F2D",
+    "\u1F28\u0342"=>"\u1F2E",
+    "\u1F29\u0342"=>"\u1F2F",
+    "\u03B9\u0313"=>"\u1F30",
+    "\u03B9\u0314"=>"\u1F31",
+    "\u1F30\u0300"=>"\u1F32",
+    "\u1F31\u0300"=>"\u1F33",
+    "\u1F30\u0301"=>"\u1F34",
+    "\u1F31\u0301"=>"\u1F35",
+    "\u1F30\u0342"=>"\u1F36",
+    "\u1F31\u0342"=>"\u1F37",
+    "\u0399\u0313"=>"\u1F38",
+    "\u0399\u0314"=>"\u1F39",
+    "\u1F38\u0300"=>"\u1F3A",
+    "\u1F39\u0300"=>"\u1F3B",
+    "\u1F38\u0301"=>"\u1F3C",
+    "\u1F39\u0301"=>"\u1F3D",
+    "\u1F38\u0342"=>"\u1F3E",
+    "\u1F39\u0342"=>"\u1F3F",
+    "\u03BF\u0313"=>"\u1F40",
+    "\u03BF\u0314"=>"\u1F41",
+    "\u1F40\u0300"=>"\u1F42",
+    "\u1F41\u0300"=>"\u1F43",
+    "\u1F40\u0301"=>"\u1F44",
+    "\u1F41\u0301"=>"\u1F45",
+    "\u039F\u0313"=>"\u1F48",
+    "\u039F\u0314"=>"\u1F49",
+    "\u1F48\u0300"=>"\u1F4A",
+    "\u1F49\u0300"=>"\u1F4B",
+    "\u1F48\u0301"=>"\u1F4C",
+    "\u1F49\u0301"=>"\u1F4D",
+    "\u03C5\u0313"=>"\u1F50",
+    "\u03C5\u0314"=>"\u1F51",
+    "\u1F50\u0300"=>"\u1F52",
+    "\u1F51\u0300"=>"\u1F53",
+    "\u1F50\u0301"=>"\u1F54",
+    "\u1F51\u0301"=>"\u1F55",
+    "\u1F50\u0342"=>"\u1F56",
+    "\u1F51\u0342"=>"\u1F57",
+    "\u03A5\u0314"=>"\u1F59",
+    "\u1F59\u0300"=>"\u1F5B",
+    "\u1F59\u0301"=>"\u1F5D",
+    "\u1F59\u0342"=>"\u1F5F",
+    "\u03C9\u0313"=>"\u1F60",
+    "\u03C9\u0314"=>"\u1F61",
+    "\u1F60\u0300"=>"\u1F62",
+    "\u1F61\u0300"=>"\u1F63",
+    "\u1F60\u0301"=>"\u1F64",
+    "\u1F61\u0301"=>"\u1F65",
+    "\u1F60\u0342"=>"\u1F66",
+    "\u1F61\u0342"=>"\u1F67",
+    "\u03A9\u0313"=>"\u1F68",
+    "\u03A9\u0314"=>"\u1F69",
+    "\u1F68\u0300"=>"\u1F6A",
+    "\u1F69\u0300"=>"\u1F6B",
+    "\u1F68\u0301"=>"\u1F6C",
+    "\u1F69\u0301"=>"\u1F6D",
+    "\u1F68\u0342"=>"\u1F6E",
+    "\u1F69\u0342"=>"\u1F6F",
+    "\u03B1\u0300"=>"\u1F70",
+    "\u03B5\u0300"=>"\u1F72",
+    "\u03B7\u0300"=>"\u1F74",
+    "\u03B9\u0300"=>"\u1F76",
+    "\u03BF\u0300"=>"\u1F78",
+    "\u03C5\u0300"=>"\u1F7A",
+    "\u03C9\u0300"=>"\u1F7C",
+    "\u1F00\u0345"=>"\u1F80",
+    "\u1F01\u0345"=>"\u1F81",
+    "\u1F02\u0345"=>"\u1F82",
+    "\u1F03\u0345"=>"\u1F83",
+    "\u1F04\u0345"=>"\u1F84",
+    "\u1F05\u0345"=>"\u1F85",
+    "\u1F06\u0345"=>"\u1F86",
+    "\u1F07\u0345"=>"\u1F87",
+    "\u1F08\u0345"=>"\u1F88",
+    "\u1F09\u0345"=>"\u1F89",
+    "\u1F0A\u0345"=>"\u1F8A",
+    "\u1F0B\u0345"=>"\u1F8B",
+    "\u1F0C\u0345"=>"\u1F8C",
+    "\u1F0D\u0345"=>"\u1F8D",
+    "\u1F0E\u0345"=>"\u1F8E",
+    "\u1F0F\u0345"=>"\u1F8F",
+    "\u1F20\u0345"=>"\u1F90",
+    "\u1F21\u0345"=>"\u1F91",
+    "\u1F22\u0345"=>"\u1F92",
+    "\u1F23\u0345"=>"\u1F93",
+    "\u1F24\u0345"=>"\u1F94",
+    "\u1F25\u0345"=>"\u1F95",
+    "\u1F26\u0345"=>"\u1F96",
+    "\u1F27\u0345"=>"\u1F97",
+    "\u1F28\u0345"=>"\u1F98",
+    "\u1F29\u0345"=>"\u1F99",
+    "\u1F2A\u0345"=>"\u1F9A",
+    "\u1F2B\u0345"=>"\u1F9B",
+    "\u1F2C\u0345"=>"\u1F9C",
+    "\u1F2D\u0345"=>"\u1F9D",
+    "\u1F2E\u0345"=>"\u1F9E",
+    "\u1F2F\u0345"=>"\u1F9F",
+    "\u1F60\u0345"=>"\u1FA0",
+    "\u1F61\u0345"=>"\u1FA1",
+    "\u1F62\u0345"=>"\u1FA2",
+    "\u1F63\u0345"=>"\u1FA3",
+    "\u1F64\u0345"=>"\u1FA4",
+    "\u1F65\u0345"=>"\u1FA5",
+    "\u1F66\u0345"=>"\u1FA6",
+    "\u1F67\u0345"=>"\u1FA7",
+    "\u1F68\u0345"=>"\u1FA8",
+    "\u1F69\u0345"=>"\u1FA9",
+    "\u1F6A\u0345"=>"\u1FAA",
+    "\u1F6B\u0345"=>"\u1FAB",
+    "\u1F6C\u0345"=>"\u1FAC",
+    "\u1F6D\u0345"=>"\u1FAD",
+    "\u1F6E\u0345"=>"\u1FAE",
+    "\u1F6F\u0345"=>"\u1FAF",
+    "\u03B1\u0306"=>"\u1FB0",
+    "\u03B1\u0304"=>"\u1FB1",
+    "\u1F70\u0345"=>"\u1FB2",
+    "\u03B1\u0345"=>"\u1FB3",
+    "\u03AC\u0345"=>"\u1FB4",
+    "\u03B1\u0342"=>"\u1FB6",
+    "\u1FB6\u0345"=>"\u1FB7",
+    "\u0391\u0306"=>"\u1FB8",
+    "\u0391\u0304"=>"\u1FB9",
+    "\u0391\u0300"=>"\u1FBA",
+    "\u0391\u0345"=>"\u1FBC",
+    "\u00A8\u0342"=>"\u1FC1",
+    "\u1F74\u0345"=>"\u1FC2",
+    "\u03B7\u0345"=>"\u1FC3",
+    "\u03AE\u0345"=>"\u1FC4",
+    "\u03B7\u0342"=>"\u1FC6",
+    "\u1FC6\u0345"=>"\u1FC7",
+    "\u0395\u0300"=>"\u1FC8",
+    "\u0397\u0300"=>"\u1FCA",
+    "\u0397\u0345"=>"\u1FCC",
+    "\u1FBF\u0300"=>"\u1FCD",
+    "\u1FBF\u0301"=>"\u1FCE",
+    "\u1FBF\u0342"=>"\u1FCF",
+    "\u03B9\u0306"=>"\u1FD0",
+    "\u03B9\u0304"=>"\u1FD1",
+    "\u03CA\u0300"=>"\u1FD2",
+    "\u03B9\u0342"=>"\u1FD6",
+    "\u03CA\u0342"=>"\u1FD7",
+    "\u0399\u0306"=>"\u1FD8",
+    "\u0399\u0304"=>"\u1FD9",
+    "\u0399\u0300"=>"\u1FDA",
+    "\u1FFE\u0300"=>"\u1FDD",
+    "\u1FFE\u0301"=>"\u1FDE",
+    "\u1FFE\u0342"=>"\u1FDF",
+    "\u03C5\u0306"=>"\u1FE0",
+    "\u03C5\u0304"=>"\u1FE1",
+    "\u03CB\u0300"=>"\u1FE2",
+    "\u03C1\u0313"=>"\u1FE4",
+    "\u03C1\u0314"=>"\u1FE5",
+    "\u03C5\u0342"=>"\u1FE6",
+    "\u03CB\u0342"=>"\u1FE7",
+    "\u03A5\u0306"=>"\u1FE8",
+    "\u03A5\u0304"=>"\u1FE9",
+    "\u03A5\u0300"=>"\u1FEA",
+    "\u03A1\u0314"=>"\u1FEC",
+    "\u00A8\u0300"=>"\u1FED",
+    "\u1F7C\u0345"=>"\u1FF2",
+    "\u03C9\u0345"=>"\u1FF3",
+    "\u03CE\u0345"=>"\u1FF4",
+    "\u03C9\u0342"=>"\u1FF6",
+    "\u1FF6\u0345"=>"\u1FF7",
+    "\u039F\u0300"=>"\u1FF8",
+    "\u03A9\u0300"=>"\u1FFA",
+    "\u03A9\u0345"=>"\u1FFC",
+    "\u2190\u0338"=>"\u219A",
+    "\u2192\u0338"=>"\u219B",
+    "\u2194\u0338"=>"\u21AE",
+    "\u21D0\u0338"=>"\u21CD",
+    "\u21D4\u0338"=>"\u21CE",
+    "\u21D2\u0338"=>"\u21CF",
+    "\u2203\u0338"=>"\u2204",
+    "\u2208\u0338"=>"\u2209",
+    "\u220B\u0338"=>"\u220C",
+    "\u2223\u0338"=>"\u2224",
+    "\u2225\u0338"=>"\u2226",
+    "\u223C\u0338"=>"\u2241",
+    "\u2243\u0338"=>"\u2244",
+    "\u2245\u0338"=>"\u2247",
+    "\u2248\u0338"=>"\u2249",
+    "=\u0338"=>"\u2260",
+    "\u2261\u0338"=>"\u2262",
+    "\u224D\u0338"=>"\u226D",
+    "<\u0338"=>"\u226E",
+    ">\u0338"=>"\u226F",
+    "\u2264\u0338"=>"\u2270",
+    "\u2265\u0338"=>"\u2271",
+    "\u2272\u0338"=>"\u2274",
+    "\u2273\u0338"=>"\u2275",
+    "\u2276\u0338"=>"\u2278",
+    "\u2277\u0338"=>"\u2279",
+    "\u227A\u0338"=>"\u2280",
+    "\u227B\u0338"=>"\u2281",
+    "\u2282\u0338"=>"\u2284",
+    "\u2283\u0338"=>"\u2285",
+    "\u2286\u0338"=>"\u2288",
+    "\u2287\u0338"=>"\u2289",
+    "\u22A2\u0338"=>"\u22AC",
+    "\u22A8\u0338"=>"\u22AD",
+    "\u22A9\u0338"=>"\u22AE",
+    "\u22AB\u0338"=>"\u22AF",
+    "\u227C\u0338"=>"\u22E0",
+    "\u227D\u0338"=>"\u22E1",
+    "\u2291\u0338"=>"\u22E2",
+    "\u2292\u0338"=>"\u22E3",
+    "\u22B2\u0338"=>"\u22EA",
+    "\u22B3\u0338"=>"\u22EB",
+    "\u22B4\u0338"=>"\u22EC",
+    "\u22B5\u0338"=>"\u22ED",
+    "\u304B\u3099"=>"\u304C",
+    "\u304D\u3099"=>"\u304E",
+    "\u304F\u3099"=>"\u3050",
+    "\u3051\u3099"=>"\u3052",
+    "\u3053\u3099"=>"\u3054",
+    "\u3055\u3099"=>"\u3056",
+    "\u3057\u3099"=>"\u3058",
+    "\u3059\u3099"=>"\u305A",
+    "\u305B\u3099"=>"\u305C",
+    "\u305D\u3099"=>"\u305E",
+    "\u305F\u3099"=>"\u3060",
+    "\u3061\u3099"=>"\u3062",
+    "\u3064\u3099"=>"\u3065",
+    "\u3066\u3099"=>"\u3067",
+    "\u3068\u3099"=>"\u3069",
+    "\u306F\u3099"=>"\u3070",
+    "\u306F\u309A"=>"\u3071",
+    "\u3072\u3099"=>"\u3073",
+    "\u3072\u309A"=>"\u3074",
+    "\u3075\u3099"=>"\u3076",
+    "\u3075\u309A"=>"\u3077",
+    "\u3078\u3099"=>"\u3079",
+    "\u3078\u309A"=>"\u307A",
+    "\u307B\u3099"=>"\u307C",
+    "\u307B\u309A"=>"\u307D",
+    "\u3046\u3099"=>"\u3094",
+    "\u309D\u3099"=>"\u309E",
+    "\u30AB\u3099"=>"\u30AC",
+    "\u30AD\u3099"=>"\u30AE",
+    "\u30AF\u3099"=>"\u30B0",
+    "\u30B1\u3099"=>"\u30B2",
+    "\u30B3\u3099"=>"\u30B4",
+    "\u30B5\u3099"=>"\u30B6",
+    "\u30B7\u3099"=>"\u30B8",
+    "\u30B9\u3099"=>"\u30BA",
+    "\u30BB\u3099"=>"\u30BC",
+    "\u30BD\u3099"=>"\u30BE",
+    "\u30BF\u3099"=>"\u30C0",
+    "\u30C1\u3099"=>"\u30C2",
+    "\u30C4\u3099"=>"\u30C5",
+    "\u30C6\u3099"=>"\u30C7",
+    "\u30C8\u3099"=>"\u30C9",
+    "\u30CF\u3099"=>"\u30D0",
+    "\u30CF\u309A"=>"\u30D1",
+    "\u30D2\u3099"=>"\u30D3",
+    "\u30D2\u309A"=>"\u30D4",
+    "\u30D5\u3099"=>"\u30D6",
+    "\u30D5\u309A"=>"\u30D7",
+    "\u30D8\u3099"=>"\u30D9",
+    "\u30D8\u309A"=>"\u30DA",
+    "\u30DB\u3099"=>"\u30DC",
+    "\u30DB\u309A"=>"\u30DD",
+    "\u30A6\u3099"=>"\u30F4",
+    "\u30EF\u3099"=>"\u30F7",
+    "\u30F0\u3099"=>"\u30F8",
+    "\u30F1\u3099"=>"\u30F9",
+    "\u30F2\u3099"=>"\u30FA",
+    "\u30FD\u3099"=>"\u30FE",
+    "\u{11099}\u{110BA}"=>"\u{1109A}",
+    "\u{1109B}\u{110BA}"=>"\u{1109C}",
+    "\u{110A5}\u{110BA}"=>"\u{110AB}",
+    "\u{11131}\u{11127}"=>"\u{1112E}",
+    "\u{11132}\u{11127}"=>"\u{1112F}",
+    "\u{11347}\u{1133E}"=>"\u{1134B}",
+    "\u{11347}\u{11357}"=>"\u{1134C}",
+    "\u{114B9}\u{114BA}"=>"\u{114BB}",
+    "\u{114B9}\u{114B0}"=>"\u{114BC}",
+    "\u{114B9}\u{114BD}"=>"\u{114BE}",
+    "\u{115B8}\u{115AF}"=>"\u{115BA}",
+    "\u{115B9}\u{115AF}"=>"\u{115BB}",
   }.freeze
 end
diff --git a/lib/ruby/stdlib/uri.rb b/lib/ruby/stdlib/uri.rb
index 971a97038fd..9b6bde91c06 100644
--- a/lib/ruby/stdlib/uri.rb
+++ b/lib/ruby/stdlib/uri.rb
@@ -1,34 +1,28 @@
 # frozen_string_literal: false
 # URI is a module providing classes to handle Uniform Resource Identifiers
-# (RFC2396[http://tools.ietf.org/html/rfc2396])
+# (RFC2396[http://tools.ietf.org/html/rfc2396]).
 #
 # == Features
 #
-# * Uniform handling of handling URIs
-# * Flexibility to introduce custom URI schemes
+# * Uniform way of handling URIs.
+# * Flexibility to introduce custom URI schemes.
 # * Flexibility to have an alternate URI::Parser (or just different patterns
-#   and regexp's)
+#   and regexp's).
 #
 # == Basic example
 #
 #   require 'uri'
 #
 #   uri = URI("http://foo.com/posts?id=30&limit=5#time=1305298413")
-#   #=> #<URI::HTTP:0x00000000b14880
-#         URL:http://foo.com/posts?id=30&limit=5#time=1305298413>
-#   uri.scheme
-#   #=> "http"
-#   uri.host
-#   #=> "foo.com"
-#   uri.path
-#   #=> "/posts"
-#   uri.query
-#   #=> "id=30&limit=5"
-#   uri.fragment
-#   #=> "time=1305298413"
-#
-#   uri.to_s
-#   #=> "http://foo.com/posts?id=30&limit=5#time=1305298413"
+#   #=> #<URI::HTTP http://foo.com/posts?id=30&limit=5#time=1305298413>
+#
+#   uri.scheme    #=> "http"
+#   uri.host      #=> "foo.com"
+#   uri.path      #=> "/posts"
+#   uri.query     #=> "id=30&limit=5"
+#   uri.fragment  #=> "time=1305298413"
+#
+#   uri.to_s      #=> "http://foo.com/posts?id=30&limit=5#time=1305298413"
 #
 # == Adding custom URIs
 #
@@ -41,18 +35,18 @@
 #   #=> URI::RSYNC
 #
 #   URI.scheme_list
-#   #=> {"FTP"=>URI::FTP, "HTTP"=>URI::HTTP, "HTTPS"=>URI::HTTPS,
-#        "LDAP"=>URI::LDAP, "LDAPS"=>URI::LDAPS, "MAILTO"=>URI::MailTo,
-#        "RSYNC"=>URI::RSYNC}
+#   #=> {"FILE"=>URI::File, "FTP"=>URI::FTP, "HTTP"=>URI::HTTP,
+#   #    "HTTPS"=>URI::HTTPS, "LDAP"=>URI::LDAP, "LDAPS"=>URI::LDAPS,
+#   #    "MAILTO"=>URI::MailTo, "RSYNC"=>URI::RSYNC}
 #
 #   uri = URI("rsync://rsync.foo.com")
-#   #=> #<URI::RSYNC:0x00000000f648c8 URL:rsync://rsync.foo.com>
+#   #=> #<URI::RSYNC rsync://rsync.foo.com>
 #
 # == RFC References
 #
-# A good place to view an RFC spec is http://www.ietf.org/rfc.html
+# A good place to view an RFC spec is http://www.ietf.org/rfc.html.
 #
-# Here is a list of all related RFC's.
+# Here is a list of all related RFC's:
 # - RFC822[http://tools.ietf.org/html/rfc822]
 # - RFC1738[http://tools.ietf.org/html/rfc1738]
 # - RFC2255[http://tools.ietf.org/html/rfc2255]
@@ -65,6 +59,7 @@
 # == Class tree
 #
 # - URI::Generic (in uri/generic.rb)
+#   - URI::File - (in uri/file.rb)
 #   - URI::FTP - (in uri/ftp.rb)
 #   - URI::HTTP - (in uri/http.rb)
 #     - URI::HTTPS - (in uri/https.rb)
@@ -104,6 +99,7 @@ module URI
 
 require 'uri/common'
 require 'uri/generic'
+require 'uri/file'
 require 'uri/ftp'
 require 'uri/http'
 require 'uri/https'
diff --git a/lib/ruby/stdlib/uri/common.rb b/lib/ruby/stdlib/uri/common.rb
index 764f89d8108..17d9ffc28c7 100644
--- a/lib/ruby/stdlib/uri/common.rb
+++ b/lib/ruby/stdlib/uri/common.rb
@@ -1,4 +1,4 @@
-# frozen_string_literal: false
+# frozen_string_literal: true
 #--
 # = uri/common.rb
 #
@@ -10,8 +10,8 @@
 # See URI for general documentation
 #
 
-require "uri/rfc2396_parser"
-require "uri/rfc3986_parser"
+require_relative "rfc2396_parser"
+require_relative "rfc3986_parser"
 
 module URI
   REGEXP = RFC2396_REGEXP
@@ -61,7 +61,7 @@ def make_components_hash(klass, array_hash)
     module_function :make_components_hash
   end
 
-  # module for escaping unsafe characters with codes.
+  # Module for escaping unsafe characters with codes.
   module Escape
     #
     # == Synopsis
@@ -90,13 +90,12 @@ module Escape
     #   require 'uri'
     #
     #   enc_uri = URI.escape("http://example.com/?a=\11\15")
-    #   p enc_uri
     #   # => "http://example.com/?a=%09%0D"
     #
-    #   p URI.unescape(enc_uri)
+    #   URI.unescape(enc_uri)
     #   # => "http://example.com/?a=\t\r"
     #
-    #   p URI.escape("@?@!", "!?")
+    #   URI.escape("@?@!", "!?")
     #   # => "@%3F@%21"
     #
     def escape(*arg)
@@ -112,7 +111,7 @@ def escape(*arg)
     # == Args
     #
     # +str+::
-    #   Unescapes the string.
+    #   String to unescape.
     #
     # == Description
     #
@@ -125,10 +124,9 @@ def escape(*arg)
     #   require 'uri'
     #
     #   enc_uri = URI.escape("http://example.com/?a=\11\15")
-    #   p enc_uri
     #   # => "http://example.com/?a=%09%0D"
     #
-    #   p URI.unescape(enc_uri)
+    #   URI.unescape(enc_uri)
     #   # => "http://example.com/?a=\t\r"
     #
     def unescape(*arg)
@@ -142,7 +140,7 @@ def unescape(*arg)
   include REGEXP
 
   @@schemes = {}
-  # Returns a Hash of the defined schemes
+  # Returns a Hash of the defined schemes.
   def self.scheme_list
     @@schemes
   end
@@ -178,21 +176,21 @@ class BadURIError < Error; end
   #
   # Splits the string on following parts and returns array with result:
   #
-  #   * Scheme
-  #   * Userinfo
-  #   * Host
-  #   * Port
-  #   * Registry
-  #   * Path
-  #   * Opaque
-  #   * Query
-  #   * Fragment
+  # * Scheme
+  # * Userinfo
+  # * Host
+  # * Port
+  # * Registry
+  # * Path
+  # * Opaque
+  # * Query
+  # * Fragment
   #
   # == Usage
   #
   #   require 'uri'
   #
-  #   p URI.split("http://www.ruby-lang.org/")
+  #   URI.split("http://www.ruby-lang.org/")
   #   # => ["http", nil, "www.ruby-lang.org", nil, nil, "/", nil, nil, nil]
   #
   def self.split(uri)
@@ -215,7 +213,7 @@ def self.split(uri)
   #
   # == Raises
   #
-  # URI::InvalidURIError
+  # URI::InvalidURIError::
   #   Raised if URI given is not a correct one.
   #
   # == Usage
@@ -223,11 +221,10 @@ def self.split(uri)
   #   require 'uri'
   #
   #   uri = URI.parse("http://www.ruby-lang.org/")
-  #   p uri
-  #   # => #<URI::HTTP:0x202281be URL:http://www.ruby-lang.org/>
-  #   p uri.scheme
+  #   # => #<URI::HTTP http://www.ruby-lang.org/>
+  #   uri.scheme
   #   # => "http"
-  #   p uri.host
+  #   uri.host
   #   # => "www.ruby-lang.org"
   #
   # It's recommended to first ::escape the provided +uri_str+ if there are any
@@ -255,21 +252,20 @@ def self.parse(uri)
   #
   #   require 'uri'
   #
-  #   p URI.join("http://example.com/","main.rbx")
-  #   # => #<URI::HTTP:0x2022ac02 URL:http://example.com/main.rbx>
+  #   URI.join("http://example.com/","main.rbx")
+  #   # => #<URI::HTTP http://example.com/main.rbx>
   #
-  #   p URI.join('http://example.com', 'foo')
-  #   # => #<URI::HTTP:0x01ab80a0 URL:http://example.com/foo>
+  #   URI.join('http://example.com', 'foo')
+  #   # => #<URI::HTTP http://example.com/foo>
   #
-  #   p URI.join('http://example.com', '/foo', '/bar')
-  #   # => #<URI::HTTP:0x01aaf0b0 URL:http://example.com/bar>
+  #   URI.join('http://example.com', '/foo', '/bar')
+  #   # => #<URI::HTTP http://example.com/bar>
   #
-  #   p URI.join('http://example.com', '/foo', 'bar')
-  #   # => #<URI::HTTP:0x801a92af0 URL:http://example.com/bar>
-  #
-  #   p URI.join('http://example.com', '/foo/', 'bar')
-  #   # => #<URI::HTTP:0x80135a3a0 URL:http://example.com/foo/bar>
+  #   URI.join('http://example.com', '/foo', 'bar')
+  #   # => #<URI::HTTP http://example.com/bar>
   #
+  #   URI.join('http://example.com', '/foo/', 'bar')
+  #   # => #<URI::HTTP http://example.com/foo/bar>
   #
   def self.join(*str)
     RFC3986_PARSER.join(*str)
@@ -285,7 +281,7 @@ def self.join(*str)
   # +str+::
   #   String to extract URIs from.
   # +schemes+::
-  #   Limit URI matching to a specific schemes.
+  #   Limit URI matching to specific schemes.
   #
   # == Description
   #
@@ -316,6 +312,7 @@ def self.extract(str, schemes = nil, &block)
   #   whose scheme is one of the match_schemes.
   #
   # == Description
+  #
   # Returns a Regexp object which matches to URI-like strings.
   # The Regexp object returned by this method includes arbitrary
   # number of capture group (parentheses).  Never rely on it's number.
@@ -328,7 +325,7 @@ def self.extract(str, schemes = nil, &block)
   #   html_string.slice(URI.regexp)
   #
   #   # remove ftp URIs
-  #   html_string.sub(URI.regexp(['ftp'])
+  #   html_string.sub(URI.regexp(['ftp']), '')
   #
   #   # You should not rely on the number of parentheses
   #   html_string.scan(URI.regexp) do |*matches|
@@ -342,25 +339,22 @@ def self.regexp(schemes = nil)
 
   TBLENCWWWCOMP_ = {} # :nodoc:
   256.times do |i|
-    TBLENCWWWCOMP_[i.chr] = '%%%02X' % i
+    TBLENCWWWCOMP_[-i.chr] = -('%%%02X' % i)
   end
   TBLENCWWWCOMP_[' '] = '+'
   TBLENCWWWCOMP_.freeze
   TBLDECWWWCOMP_ = {} # :nodoc:
   256.times do |i|
     h, l = i>>4, i&15
-    TBLDECWWWCOMP_['%%%X%X' % [h, l]] = i.chr
-    TBLDECWWWCOMP_['%%%x%X' % [h, l]] = i.chr
-    TBLDECWWWCOMP_['%%%X%x' % [h, l]] = i.chr
-    TBLDECWWWCOMP_['%%%x%x' % [h, l]] = i.chr
+    TBLDECWWWCOMP_[-('%%%X%X' % [h, l])] = -i.chr
+    TBLDECWWWCOMP_[-('%%%x%X' % [h, l])] = -i.chr
+    TBLDECWWWCOMP_[-('%%%X%x' % [h, l])] = -i.chr
+    TBLDECWWWCOMP_[-('%%%x%x' % [h, l])] = -i.chr
   end
   TBLDECWWWCOMP_['+'] = ' '
   TBLDECWWWCOMP_.freeze
 
-  HTML5ASCIIINCOMPAT = defined? Encoding::UTF_7 ? [Encoding::UTF_7, Encoding::UTF_16BE, Encoding::UTF_16LE,
-    Encoding::UTF_32BE, Encoding::UTF_32LE] : [] # :nodoc:
-
-  # Encode given +str+ to URL-encoded form data.
+  # Encodes given +str+ to URL-encoded form data.
   #
   # This method doesn't convert *, -, ., 0-9, A-Z, _, a-z, but does convert SP
   # (ASCII space) to + and converts others to %XX.
@@ -368,9 +362,9 @@ def self.regexp(schemes = nil)
   # If +enc+ is given, convert +str+ to the encoding before percent encoding.
   #
   # This is an implementation of
-  # http://www.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data
+  # http://www.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data.
   #
-  # See URI.decode_www_form_component, URI.encode_www_form
+  # See URI.decode_www_form_component, URI.encode_www_form.
   def self.encode_www_form_component(str, enc=nil)
     str = str.to_s.dup
     if str.encoding != Encoding::ASCII_8BIT
@@ -384,17 +378,17 @@ def self.encode_www_form_component(str, enc=nil)
     str.force_encoding(Encoding::US_ASCII)
   end
 
-  # Decode given +str+ of URL-encoded form data.
+  # Decodes given +str+ of URL-encoded form data.
   #
   # This decodes + to SP.
   #
-  # See URI.encode_www_form_component, URI.decode_www_form
+  # See URI.encode_www_form_component, URI.decode_www_form.
   def self.decode_www_form_component(str, enc=Encoding::UTF_8)
     raise ArgumentError, "invalid %-encoding (#{str})" if /%(?!\h\h)/ =~ str
     str.b.gsub(/\+|%\h\h/, TBLDECWWWCOMP_).force_encoding(enc)
   end
 
-  # Generate URL-encoded form data from given +enum+.
+  # Generates URL-encoded form data from given +enum+.
   #
   # This generates application/x-www-form-urlencoded data defined in HTML5
   # from given an Enumerable object.
@@ -402,7 +396,7 @@ def self.decode_www_form_component(str, enc=Encoding::UTF_8)
   # This internally uses URI.encode_www_form_component(str).
   #
   # This method doesn't convert the encoding of given items, so convert them
-  # before call this method if you want to send data as other than original
+  # before calling this method if you want to send data as other than original
   # encoding or mixed encoding data. (Strings which are encoded in an HTML5
   # ASCII incompatible encoding are converted to UTF-8.)
   #
@@ -420,7 +414,7 @@ def self.decode_www_form_component(str, enc=Encoding::UTF_8)
   #    URI.encode_www_form([["q", "ruby"], ["q", "perl"], ["lang", "en"]])
   #    #=> "q=ruby&q=perl&lang=en"
   #
-  # See URI.encode_www_form_component, URI.decode_www_form
+  # See URI.encode_www_form_component, URI.decode_www_form.
   def self.encode_www_form(enum, enc=nil)
     enum.map do |k,v|
       if v.nil?
@@ -441,22 +435,22 @@ def self.encode_www_form(enum, enc=nil)
     end.join('&')
   end
 
-  # Decode URL-encoded form data from given +str+.
+  # Decodes URL-encoded form data from given +str+.
   #
   # This decodes application/x-www-form-urlencoded data
-  # and returns array of key-value array.
+  # and returns an array of key-value arrays.
   #
-  # This refers http://url.spec.whatwg.org/#concept-urlencoded-parser ,
-  # so this supports only &-separator, don't support ;-separator.
+  # This refers http://url.spec.whatwg.org/#concept-urlencoded-parser,
+  # so this supports only &-separator, and doesn't support ;-separator.
   #
   #    ary = URI.decode_www_form("a=1&a=2&b=3")
-  #    p ary                  #=> [['a', '1'], ['a', '2'], ['b', '3']]
-  #    p ary.assoc('a').last  #=> '1'
-  #    p ary.assoc('b').last  #=> '3'
-  #    p ary.rassoc('a').last #=> '2'
-  #    p Hash[ary]            # => {"a"=>"2", "b"=>"3"}
+  #    ary                   #=> [['a', '1'], ['a', '2'], ['b', '3']]
+  #    ary.assoc('a').last   #=> '1'
+  #    ary.assoc('b').last   #=> '3'
+  #    ary.rassoc('a').last  #=> '2'
+  #    Hash[ary]             #=> {"a"=>"2", "b"=>"3"}
   #
-  # See URI.decode_www_form_component, URI.encode_www_form
+  # See URI.decode_www_form_component, URI.encode_www_form.
   def self.decode_www_form(str, enc=Encoding::UTF_8, separator: '&', use__charset_: false, isindex: false)
     raise ArgumentError, "the input of #{self.name}.#{__method__} must be ASCII only string" unless str.ascii_only?
     ary = []
@@ -468,7 +462,7 @@ def self.decode_www_form(str, enc=Encoding::UTF_8, separator: '&', use__charset_
       if isindex
         if sep.empty?
           val = key
-          key = ''
+          key = +''
         end
         isindex = false
       end
@@ -482,7 +476,7 @@ def self.decode_www_form(str, enc=Encoding::UTF_8, separator: '&', use__charset_
       if val
         val.gsub!(/\+|%\h\h/, TBLDECWWWCOMP_)
       else
-        val = ''
+        val = +''
       end
 
       ary << [key, val]
@@ -734,7 +728,7 @@ def self.get_encoding(label)
 module Kernel
 
   #
-  # Returns +uri+ converted to a URI object.
+  # Returns +uri+ converted to an URI object.
   #
   def URI(uri)
     if uri.is_a?(URI::Generic)
diff --git a/lib/ruby/stdlib/uri/file.rb b/lib/ruby/stdlib/uri/file.rb
new file mode 100644
index 00000000000..561ec703c46
--- /dev/null
+++ b/lib/ruby/stdlib/uri/file.rb
@@ -0,0 +1,94 @@
+# frozen_string_literal: true
+
+require_relative 'generic'
+
+module URI
+
+  #
+  # The "file" URI is defined by RFC8089.
+  #
+  class File < Generic
+    # A Default port of nil for URI::File.
+    DEFAULT_PORT = nil
+
+    #
+    # An Array of the available components for URI::File.
+    #
+    COMPONENT = [
+      :scheme,
+      :host,
+      :path
+    ].freeze
+
+    #
+    # == Description
+    #
+    # Creates a new URI::File object from components, with syntax checking.
+    #
+    # The components accepted are +host+ and +path+.
+    #
+    # The components should be provided either as an Array, or as a Hash
+    # with keys formed by preceding the component names with a colon.
+    #
+    # If an Array is used, the components must be passed in the
+    # order <code>[host, path]</code>.
+    #
+    # Examples:
+    #
+    #     require 'uri'
+    #
+    #     uri1 = URI::File.build(['host.example.com', '/path/file.zip'])
+    #     uri1.to_s  # => "file://host.example.com/path/file.zip"
+    #
+    #     uri2 = URI::File.build({:host => 'host.example.com',
+    #       :path => '/ruby/src'})
+    #     uri2.to_s  # => "file://host.example.com/ruby/src"
+    #
+    def self.build(args)
+      tmp = Util::make_components_hash(self, args)
+      super(tmp)
+    end
+
+    # Protected setter for the host component +v+.
+    #
+    # See also URI::Generic.host=.
+    #
+    def set_host(v)
+      v = "" if v.nil? || v == "localhost"
+      @host = v
+    end
+
+    # do nothing
+    def set_port(v)
+    end
+
+    # raise InvalidURIError
+    def check_userinfo(user)
+      raise URI::InvalidURIError, "can not set userinfo for file URI"
+    end
+
+    # raise InvalidURIError
+    def check_user(user)
+      raise URI::InvalidURIError, "can not set user for file URI"
+    end
+
+    # raise InvalidURIError
+    def check_password(user)
+      raise URI::InvalidURIError, "can not set password for file URI"
+    end
+
+    # do nothing
+    def set_userinfo(v)
+    end
+
+    # do nothing
+    def set_user(v)
+    end
+
+    # do nothing
+    def set_password(v)
+    end
+  end
+
+  @@schemes['FILE'] = File
+end
diff --git a/lib/ruby/stdlib/uri/ftp.rb b/lib/ruby/stdlib/uri/ftp.rb
index 90c1403ce63..f57b4b7df9a 100644
--- a/lib/ruby/stdlib/uri/ftp.rb
+++ b/lib/ruby/stdlib/uri/ftp.rb
@@ -8,7 +8,7 @@
 # See URI for general documentation
 #
 
-require 'uri/generic'
+require_relative 'generic'
 
 module URI
 
@@ -21,11 +21,11 @@ module URI
   # http://tools.ietf.org/html/draft-hoffman-ftp-uri-04
   #
   class FTP < Generic
-    # A Default port of 21 for URI::FTP
+    # A Default port of 21 for URI::FTP.
     DEFAULT_PORT = 21
 
     #
-    # An Array of the available components for URI::FTP
+    # An Array of the available components for URI::FTP.
     #
     COMPONENT = [
       :scheme,
@@ -34,7 +34,7 @@ class FTP < Generic
     ].freeze
 
     #
-    # Typecode is "a", "i" or "d".
+    # Typecode is "a", "i", or "d".
     #
     # * "a" indicates a text file (the FTP command was ASCII)
     # * "i" indicates a binary file (FTP command IMAGE)
@@ -42,8 +42,7 @@ class FTP < Generic
     #
     TYPECODE = ['a', 'i', 'd'].freeze
 
-    # Typecode prefix
-    #  ';type='
+    # Typecode prefix ";type=".
     TYPECODE_PREFIX = ';type='.freeze
 
     def self.new2(user, password, host, port, path,
@@ -71,27 +70,29 @@ def self.new2(user, password, host, port, path,
     #
     # Creates a new URI::FTP object from components, with syntax checking.
     #
-    # The components accepted are +userinfo+, +host+, +port+, +path+ and
+    # The components accepted are +userinfo+, +host+, +port+, +path+, and
     # +typecode+.
     #
     # The components should be provided either as an Array, or as a Hash
     # with keys formed by preceding the component names with a colon.
     #
-    # If an Array is used, the components must be passed in the order
-    # [userinfo, host, port, path, typecode]
+    # If an Array is used, the components must be passed in the
+    # order <code>[userinfo, host, port, path, typecode]</code>.
     #
     # If the path supplied is absolute, it will be escaped in order to
-    # make it absolute in the URI. Examples:
+    # make it absolute in the URI.
+    #
+    # Examples:
     #
     #     require 'uri'
     #
-    #     uri = URI::FTP.build(['user:password', 'ftp.example.com', nil,
+    #     uri1 = URI::FTP.build(['user:password', 'ftp.example.com', nil,
     #       '/path/file.zip', 'i'])
-    #     puts uri.to_s  ->  ftp://user:password@ftp.example.com/%2Fpath/file.zip;type=i
+    #     uri1.to_s  # => "ftp://user:password@ftp.example.com/%2Fpath/file.zip;type=i"
     #
     #     uri2 = URI::FTP.build({:host => 'ftp.example.com',
     #       :path => 'ruby/src'})
-    #     puts uri2.to_s  ->  ftp://ftp.example.com/ruby/src
+    #     uri2.to_s  # => "ftp://ftp.example.com/ruby/src"
     #
     def self.build(args)
 
@@ -128,7 +129,7 @@ def self.build(args)
     # required by RFC1738; instead it is treated as per RFC2396.
     #
     # Arguments are +scheme+, +userinfo+, +host+, +port+, +registry+, +path+,
-    # +opaque+, +query+ and +fragment+, in that order.
+    # +opaque+, +query+, and +fragment+, in that order.
     #
     def initialize(scheme,
                    userinfo, host, port, registry,
@@ -155,13 +156,13 @@ def initialize(scheme,
       end
     end
 
-    # typecode accessor
+    # typecode accessor.
     #
-    # see URI::FTP::COMPONENT
+    # See URI::FTP::COMPONENT.
     attr_reader :typecode
 
-    # validates typecode +v+,
-    # returns a +true+ or +false+ boolean
+    # Validates typecode +v+,
+    # returns +true+ or +false+.
     #
     def check_typecode(v)
       if TYPECODE.include?(v)
@@ -173,9 +174,9 @@ def check_typecode(v)
     end
     private :check_typecode
 
-    # Private setter for the typecode +v+
+    # Private setter for the typecode +v+.
     #
-    # see also URI::FTP.typecode=
+    # See also URI::FTP.typecode=.
     #
     def set_typecode(v)
       @typecode = v
@@ -190,21 +191,20 @@ def set_typecode(v)
     #
     # == Description
     #
-    # public setter for the typecode +v+.
-    # (with validation)
+    # Public setter for the typecode +v+
+    # (with validation).
     #
-    # see also URI::FTP.check_typecode
+    # See also URI::FTP.check_typecode.
     #
     # == Usage
     #
     #   require 'uri'
     #
     #   uri = URI.parse("ftp://john@ftp.example.com/my_file.img")
-    #   #=> #<URI::FTP:0x00000000923650 URL:ftp://john@ftp.example.com/my_file.img>
+    #   #=> #<URI::FTP ftp://john@ftp.example.com/my_file.img>
     #   uri.typecode = "i"
-    #   # =>  "i"
     #   uri
-    #   #=> #<URI::FTP:0x00000000923650 URL:ftp://john@ftp.example.com/my_file.img;type=i>
+    #   #=> #<URI::FTP ftp://john@ftp.example.com/my_file.img;type=i>
     #
     def typecode=(typecode)
       check_typecode(typecode)
@@ -226,29 +226,29 @@ def merge(oth) # :nodoc:
     # RFC 1738 specifically states that the path for an FTP URI does not
     # include the / which separates the URI path from the URI host. Example:
     #
-    # +ftp://ftp.example.com/pub/ruby+
+    # <code>ftp://ftp.example.com/pub/ruby</code>
     #
     # The above URI indicates that the client should connect to
-    # ftp.example.com then cd pub/ruby from the initial login directory.
+    # ftp.example.com then cd to pub/ruby from the initial login directory.
     #
     # If you want to cd to an absolute directory, you must include an
     # escaped / (%2F) in the path. Example:
     #
-    # +ftp://ftp.example.com/%2Fpub/ruby+
+    # <code>ftp://ftp.example.com/%2Fpub/ruby</code>
     #
-    # This method will then return "/pub/ruby"
+    # This method will then return "/pub/ruby".
     #
     def path
       return @path.sub(/^\//,'').sub(/^%2F/,'/')
     end
 
-    # Private setter for the path of the URI::FTP
+    # Private setter for the path of the URI::FTP.
     def set_path(v)
       super("/" + v.sub(/^\//, "%2F"))
     end
     protected :set_path
 
-    # Returns a String representation of the URI::FTP
+    # Returns a String representation of the URI::FTP.
     def to_s
       save_path = nil
       if @typecode
diff --git a/lib/ruby/stdlib/uri/generic.rb b/lib/ruby/stdlib/uri/generic.rb
index 565fa577abe..d6f23c82ad1 100644
--- a/lib/ruby/stdlib/uri/generic.rb
+++ b/lib/ruby/stdlib/uri/generic.rb
@@ -9,7 +9,7 @@
 # See URI for general documentation
 #
 
-require 'uri/common'
+require_relative 'common'
 autoload :IPSocket, 'socket'
 autoload :IPAddr, 'ipaddr'
 
@@ -23,26 +23,26 @@ class Generic
     include URI
 
     #
-    # A Default port of nil for URI::Generic
+    # A Default port of nil for URI::Generic.
     #
     DEFAULT_PORT = nil
 
     #
-    # Returns default port
+    # Returns default port.
     #
     def self.default_port
       self::DEFAULT_PORT
     end
 
     #
-    # Returns default port
+    # Returns default port.
     #
     def default_port
       self.class.default_port
     end
 
     #
-    # An Array of the available components for URI::Generic
+    # An Array of the available components for URI::Generic.
     #
     COMPONENT = [
       :scheme,
@@ -68,14 +68,13 @@ def self.use_registry # :nodoc:
     #
     # == Synopsis
     #
-    # See #new
+    # See ::new.
     #
     # == Description
     #
     # At first, tries to create a new URI::Generic instance using
     # URI::Generic::build. But, if exception URI::InvalidComponentError is raised,
-    # then it URI::Escape.escape all URI components and tries again.
-    #
+    # then it does URI::Escape.escape all URI components and tries again.
     #
     def self.build2(args)
       begin
@@ -106,14 +105,14 @@ def self.build2(args)
     #
     # == Synopsis
     #
-    # See #new
+    # See ::new.
     #
     # == Description
     #
     # Creates a new URI::Generic instance from components of URI::Generic
     # with check.  Components are: scheme, userinfo, host, port, registry, path,
-    # opaque, query and fragment. You can provide arguments either by an Array or a Hash.
-    # See #new for hash keys to use or for order of array items.
+    # opaque, query, and fragment. You can provide arguments either by an Array or a Hash.
+    # See ::new for hash keys to use or for order of array items.
     #
     def self.build(args)
       if args.kind_of?(Array) &&
@@ -137,31 +136,32 @@ def self.build(args)
       tmp << true
       return self.new(*tmp)
     end
+
     #
     # == Args
     #
     # +scheme+::
     #   Protocol scheme, i.e. 'http','ftp','mailto' and so on.
     # +userinfo+::
-    #   User name and password, i.e. 'sdmitry:bla'
+    #   User name and password, i.e. 'sdmitry:bla'.
     # +host+::
-    #   Server host name
+    #   Server host name.
     # +port+::
-    #   Server port
+    #   Server port.
     # +registry+::
     #   Registry of naming authorities.
     # +path+::
-    #   Path on server
+    #   Path on server.
     # +opaque+::
-    #   Opaque part
+    #   Opaque part.
     # +query+::
-    #   Query data
+    #   Query data.
     # +fragment+::
-    #   A part of URI after '#' sign
+    #   Part of the URI after '#' character.
     # +parser+::
-    #   Parser for internal use [URI::DEFAULT_PARSER by default]
+    #   Parser for internal use [URI::DEFAULT_PARSER by default].
     # +arg_check+::
-    #   Check arguments [false by default]
+    #   Check arguments [false by default].
     #
     # == Description
     #
@@ -215,39 +215,38 @@ def initialize(scheme,
     end
 
     #
-    # returns the scheme component of the URI.
+    # Returns the scheme component of the URI.
     #
     #   URI("http://foo/bar/baz").scheme #=> "http"
     #
     attr_reader :scheme
 
-    # returns the host component of the URI.
+    # Returns the host component of the URI.
     #
     #   URI("http://foo/bar/baz").host #=> "foo"
     #
-    # It returns nil if no host component.
+    # It returns nil if no host component exists.
     #
     #   URI("mailto:foo@example.org").host #=> nil
     #
-    # The component doesn't contains the port number.
+    # The component does not contain the port number.
     #
     #   URI("http://foo:8080/bar/baz").host #=> "foo"
     #
-    # Since IPv6 addresses are wrapped by brackets in URIs,
-    # this method returns IPv6 addresses wrapped by brackets.
-    # This form is not appropriate to pass socket methods such as TCPSocket.open.
-    # If unwrapped host names are required, use "hostname" method.
+    # Since IPv6 addresses are wrapped with brackets in URIs,
+    # this method returns IPv6 addresses wrapped with brackets.
+    # This form is not appropriate to pass to socket methods such as TCPSocket.open.
+    # If unwrapped host names are required, use the #hostname method.
     #
-    #   URI("http://[::1]/bar/baz").host #=> "[::1]"
+    #   URI("http://[::1]/bar/baz").host     #=> "[::1]"
     #   URI("http://[::1]/bar/baz").hostname #=> "::1"
     #
     attr_reader :host
 
-    # returns the port component of the URI.
+    # Returns the port component of the URI.
     #
-    #   URI("http://foo/bar/baz").port #=> "80"
-    #
-    #   URI("http://foo:8080/bar/baz").port #=> "8080"
+    #   URI("http://foo/bar/baz").port      #=> 80
+    #   URI("http://foo:8080/bar/baz").port #=> 8080
     #
     attr_reader :port
 
@@ -255,37 +254,38 @@ def registry # :nodoc:
       nil
     end
 
-    # returns the path component of the URI.
+    # Returns the path component of the URI.
     #
     #   URI("http://foo/bar/baz").path #=> "/bar/baz"
     #
     attr_reader :path
 
-    # returns the query component of the URI.
+    # Returns the query component of the URI.
     #
     #   URI("http://foo/bar/baz?search=FooBar").query #=> "search=FooBar"
     #
     attr_reader :query
 
-    # returns the opaque part of the URI.
+    # Returns the opaque part of the URI.
     #
     #   URI("mailto:foo@example.org").opaque #=> "foo@example.org"
+    #   URI("http://foo/bar/baz").opaque     #=> nil
     #
-    # Portion of the path that does make use of the slash '/'.
-    # The path typically refers to the absolute path and the opaque part.
+    # The portion of the path that does not make use of the slash '/'.
+    # The path typically refers to an absolute path or an opaque part.
     # (See RFC2396 Section 3 and 5.2.)
     #
     attr_reader :opaque
 
-    # returns the fragment component of the URI.
+    # Returns the fragment component of the URI.
     #
     #   URI("http://foo/bar/baz?search=FooBar#ponies").fragment #=> "ponies"
     #
     attr_reader :fragment
 
-    # returns the parser to be used.
+    # Returns the parser to be used.
     #
-    # Unless a URI::Parser is defined, then DEFAULT_PARSER is used.
+    # Unless a URI::Parser is defined, DEFAULT_PARSER is used.
     #
     def parser
       if !defined?(@parser) || !@parser
@@ -295,7 +295,8 @@ def parser
       end
     end
 
-    # replace self by other URI object
+    # Replaces self by other URI object.
+    #
     def replace!(oth)
       if self.class != oth.class
         raise ArgumentError, "expected #{self.class} object"
@@ -315,7 +316,7 @@ def component
     end
 
     #
-    # check the scheme +v+ component against the URI::Parser Regexp for :SCHEME
+    # Checks the scheme +v+ component against the URI::Parser Regexp for :SCHEME.
     #
     def check_scheme(v)
       if v && parser.regexp[:SCHEME] !~ v
@@ -327,9 +328,9 @@ def check_scheme(v)
     end
     private :check_scheme
 
-    # protected setter for the scheme component +v+
+    # Protected setter for the scheme component +v+.
     #
-    # see also URI::Generic.scheme=
+    # See also URI::Generic.scheme=.
     #
     def set_scheme(v)
       @scheme = v&.downcase
@@ -344,10 +345,10 @@ def set_scheme(v)
     #
     # == Description
     #
-    # public setter for the scheme component +v+.
-    # (with validation)
+    # Public setter for the scheme component +v+
+    # (with validation).
     #
-    # see also URI::Generic.check_scheme
+    # See also URI::Generic.check_scheme.
     #
     # == Usage
     #
@@ -355,9 +356,7 @@ def set_scheme(v)
     #
     #   uri = URI.parse("http://my.example.com")
     #   uri.scheme = "https"
-    #   # =>  "https"
-    #   uri
-    #   #=> #<URI::HTTP:0x000000008e89e8 URL:https://my.example.com>
+    #   uri.to_s  #=> "https://my.example.com"
     #
     def scheme=(v)
       check_scheme(v)
@@ -366,13 +365,13 @@ def scheme=(v)
     end
 
     #
-    # check the +user+ and +password+.
+    # Checks the +user+ and +password+.
     #
     # If +password+ is not provided, then +user+ is
     # split, using URI::Generic.split_userinfo, to
     # pull +user+ and +password.
     #
-    # see also URI::Generic.check_user, URI::Generic.check_password
+    # See also URI::Generic.check_user, URI::Generic.check_password.
     #
     def check_userinfo(user, password = nil)
       if !password
@@ -386,8 +385,8 @@ def check_userinfo(user, password = nil)
     private :check_userinfo
 
     #
-    # check the user +v+ component for RFC2396 compliance
-    # and against the URI::Parser Regexp for :USERINFO
+    # Checks the user +v+ component for RFC2396 compliance
+    # and against the URI::Parser Regexp for :USERINFO.
     #
     # Can not have a registry or opaque component defined,
     # with a user component defined.
@@ -410,8 +409,8 @@ def check_user(v)
     private :check_user
 
     #
-    # check the password +v+ component for RFC2396 compliance
-    # and against the URI::Parser Regexp for :USERINFO
+    # Checks the password +v+ component for RFC2396 compliance
+    # and against the URI::Parser Regexp for :USERINFO.
     #
     # Can not have a registry or opaque component defined,
     # with a user component defined.
@@ -438,7 +437,7 @@ def check_password(v, user = @user)
     private :check_password
 
     #
-    # Sets userinfo, argument is string like 'name:pass'
+    # Sets userinfo, argument is string like 'name:pass'.
     #
     def userinfo=(userinfo)
       if userinfo.nil?
@@ -457,10 +456,10 @@ def userinfo=(userinfo)
     #
     # == Description
     #
-    # public setter for the +user+ component.
-    # (with validation)
+    # Public setter for the +user+ component
+    # (with validation).
     #
-    # see also URI::Generic.check_user
+    # See also URI::Generic.check_user.
     #
     # == Usage
     #
@@ -468,9 +467,7 @@ def userinfo=(userinfo)
     #
     #   uri = URI.parse("http://john:S3nsit1ve@my.example.com")
     #   uri.user = "sam"
-    #   # =>  "sam"
-    #   uri
-    #   #=> #<URI::HTTP:0x00000000881d90 URL:http://sam:V3ry_S3nsit1ve@my.example.com>
+    #   uri.to_s  #=> "http://sam:V3ry_S3nsit1ve@my.example.com"
     #
     def user=(user)
       check_user(user)
@@ -486,10 +483,10 @@ def user=(user)
     #
     # == Description
     #
-    # public setter for the +password+ component.
-    # (with validation)
+    # Public setter for the +password+ component
+    # (with validation).
     #
-    # see also URI::Generic.check_password
+    # See also URI::Generic.check_password.
     #
     # == Usage
     #
@@ -497,9 +494,7 @@ def user=(user)
     #
     #   uri = URI.parse("http://john:S3nsit1ve@my.example.com")
     #   uri.password = "V3ry_S3nsit1ve"
-    #   # =>  "V3ry_S3nsit1ve"
-    #   uri
-    #   #=> #<URI::HTTP:0x00000000881d90 URL:http://john:V3ry_S3nsit1ve@my.example.com>
+    #   uri.to_s  #=> "http://john:V3ry_S3nsit1ve@my.example.com"
     #
     def password=(password)
       check_password(password)
@@ -507,10 +502,10 @@ def password=(password)
       # returns password
     end
 
-    # protect setter for the +user+ component, and +password+ if available.
-    # (with validation)
+    # Protected setter for the +user+ component, and +password+ if available
+    # (with validation).
     #
-    # see also URI::Generic.userinfo=
+    # See also URI::Generic.userinfo=.
     #
     def set_userinfo(user, password = nil)
       unless password
@@ -523,9 +518,9 @@ def set_userinfo(user, password = nil)
     end
     protected :set_userinfo
 
-    # protected setter for the user component +v+
+    # Protected setter for the user component +v+.
     #
-    # see also URI::Generic.user=
+    # See also URI::Generic.user=.
     #
     def set_user(v)
       set_userinfo(v, @password)
@@ -533,9 +528,9 @@ def set_user(v)
     end
     protected :set_user
 
-    # protected setter for the password component +v+
+    # Protected setter for the password component +v+.
     #
-    # see also URI::Generic.password=
+    # See also URI::Generic.password=.
     #
     def set_password(v)
       @password = v
@@ -543,8 +538,8 @@ def set_password(v)
     end
     protected :set_password
 
-    # returns the userinfo +ui+ as user, password
-    # if properly formatted as 'user:password'
+    # Returns the userinfo +ui+ as <code>[user, password]</code>
+    # if properly formatted as 'user:password'.
     def split_userinfo(ui)
       return nil, nil unless ui
       user, password = ui.split(':', 2)
@@ -553,13 +548,13 @@ def split_userinfo(ui)
     end
     private :split_userinfo
 
-    # escapes 'user:password' +v+ based on RFC 1738 section 3.1
+    # Escapes 'user:password' +v+ based on RFC 1738 section 3.1.
     def escape_userpass(v)
       parser.escape(v, /[@:\/]/o) # RFC 1738 section 3.1 #/
     end
     private :escape_userpass
 
-    # returns the userinfo, either as 'user' or 'user:password'
+    # Returns the userinfo, either as 'user' or 'user:password'.
     def userinfo
       if @user.nil?
         nil
@@ -570,19 +565,19 @@ def userinfo
       end
     end
 
-    # returns the user component
+    # Returns the user component.
     def user
       @user
     end
 
-    # returns the password component
+    # Returns the password component.
     def password
       @password
     end
 
     #
-    # check the host +v+ component for RFC2396 compliance
-    # and against the URI::Parser Regexp for :HOST
+    # Checks the host +v+ component for RFC2396 compliance
+    # and against the URI::Parser Regexp for :HOST.
     #
     # Can not have a registry or opaque component defined,
     # with a host component defined.
@@ -602,9 +597,9 @@ def check_host(v)
     end
     private :check_host
 
-    # protected setter for the host component +v+
+    # Protected setter for the host component +v+.
     #
-    # see also URI::Generic.host=
+    # See also URI::Generic.host=.
     #
     def set_host(v)
       @host = v
@@ -619,10 +614,10 @@ def set_host(v)
     #
     # == Description
     #
-    # public setter for the host component +v+.
-    # (with validation)
+    # Public setter for the host component +v+
+    # (with validation).
     #
-    # see also URI::Generic.check_host
+    # See also URI::Generic.check_host.
     #
     # == Usage
     #
@@ -630,9 +625,7 @@ def set_host(v)
     #
     #   uri = URI.parse("http://my.example.com")
     #   uri.host = "foo.com"
-    #   # =>  "foo.com"
-    #   uri
-    #   #=> #<URI::HTTP:0x000000008e89e8 URL:http://foo.com>
+    #   uri.to_s  #=> "http://foo.com"
     #
     def host=(v)
       check_host(v)
@@ -640,32 +633,31 @@ def host=(v)
       v
     end
 
-    # extract the host part of the URI and unwrap brackets for IPv6 addresses.
+    # Extract the host part of the URI and unwrap brackets for IPv6 addresses.
     #
-    # This method is same as URI::Generic#host except
+    # This method is the same as URI::Generic#host except
     # brackets for IPv6 (and future IP) addresses are removed.
     #
-    #   u = URI("http://[::1]/bar")
-    #   p u.hostname      #=> "::1"
-    #   p u.host          #=> "[::1]"
+    #   uri = URI("http://[::1]/bar")
+    #   uri.hostname      #=> "::1"
+    #   uri.host          #=> "[::1]"
     #
     def hostname
       v = self.host
       /\A\[(.*)\]\z/ =~ v ? $1 : v
     end
 
-    # set the host part of the URI as the argument with brackets for IPv6 addresses.
+    # Sets the host part of the URI as the argument with brackets for IPv6 addresses.
     #
-    # This method is same as URI::Generic#host= except
-    # the argument can be bare IPv6 address.
+    # This method is the same as URI::Generic#host= except
+    # the argument can be a bare IPv6 address.
     #
-    #   u = URI("http://foo/bar")
-    #   p u.to_s                  #=> "http://foo/bar"
-    #   u.hostname = "::1"
-    #   p u.to_s                  #=> "http://[::1]/bar"
+    #   uri = URI("http://foo/bar")
+    #   uri.hostname = "::1"
+    #   uri.to_s  #=> "http://[::1]/bar"
     #
-    # If the argument seems IPv6 address,
-    # it is wrapped by brackets.
+    # If the argument seems to be an IPv6 address,
+    # it is wrapped with brackets.
     #
     def hostname=(v)
       v = "[#{v}]" if /\A\[.*\]\z/ !~ v && /:/ =~ v
@@ -673,8 +665,8 @@ def hostname=(v)
     end
 
     #
-    # check the port +v+ component for RFC2396 compliance
-    # and against the URI::Parser Regexp for :PORT
+    # Checks the port +v+ component for RFC2396 compliance
+    # and against the URI::Parser Regexp for :PORT.
     #
     # Can not have a registry or opaque component defined,
     # with a port component defined.
@@ -694,9 +686,9 @@ def check_port(v)
     end
     private :check_port
 
-    # protected setter for the port component +v+
+    # Protected setter for the port component +v+.
     #
-    # see also URI::Generic.port=
+    # See also URI::Generic.port=.
     #
     def set_port(v)
       v = v.empty? ? nil : v.to_i unless !v || v.kind_of?(Integer)
@@ -712,10 +704,10 @@ def set_port(v)
     #
     # == Description
     #
-    # public setter for the port component +v+.
-    # (with validation)
+    # Public setter for the port component +v+
+    # (with validation).
     #
-    # see also URI::Generic.check_port
+    # See also URI::Generic.check_port.
     #
     # == Usage
     #
@@ -723,9 +715,7 @@ def set_port(v)
     #
     #   uri = URI.parse("http://my.example.com")
     #   uri.port = 8080
-    #   # =>  8080
-    #   uri
-    #   #=> #<URI::HTTP:0x000000008e89e8 URL:http://my.example.com:8080>
+    #   uri.to_s  #=> "http://my.example.com:8080"
     #
     def port=(v)
       check_port(v)
@@ -748,9 +738,9 @@ def registry=(v)
     end
 
     #
-    # check the path +v+ component for RFC2396 compliance
+    # Checks the path +v+ component for RFC2396 compliance
     # and against the URI::Parser Regexp
-    # for :ABS_PATH and :REL_PATH
+    # for :ABS_PATH and :REL_PATH.
     #
     # Can not have a opaque component defined,
     # with a path component defined.
@@ -783,9 +773,9 @@ def check_path(v)
     end
     private :check_path
 
-    # protected setter for the path component +v+
+    # Protected setter for the path component +v+.
     #
-    # see also URI::Generic.path=
+    # See also URI::Generic.path=.
     #
     def set_path(v)
       @path = v
@@ -800,10 +790,10 @@ def set_path(v)
     #
     # == Description
     #
-    # public setter for the path component +v+.
-    # (with validation)
+    # Public setter for the path component +v+
+    # (with validation).
     #
-    # see also URI::Generic.check_path
+    # See also URI::Generic.check_path.
     #
     # == Usage
     #
@@ -811,9 +801,7 @@ def set_path(v)
     #
     #   uri = URI.parse("http://my.example.com/pub/files")
     #   uri.path = "/faq/"
-    #   # =>  "/faq/"
-    #   uri
-    #   #=> #<URI::HTTP:0x000000008e89e8 URL:http://my.example.com/faq/>
+    #   uri.to_s  #=> "http://my.example.com/faq/"
     #
     def path=(v)
       check_path(v)
@@ -829,7 +817,7 @@ def path=(v)
     #
     # == Description
     #
-    # public setter for the query component +v+.
+    # Public setter for the query component +v+.
     #
     # == Usage
     #
@@ -837,9 +825,7 @@ def path=(v)
     #
     #   uri = URI.parse("http://my.example.com/?id=25")
     #   uri.query = "id=1"
-    #   # =>  "id=1"
-    #   uri
-    #   #=> #<URI::HTTP:0x000000008e89e8 URL:http://my.example.com/?id=1>
+    #   uri.to_s  #=> "http://my.example.com/?id=1"
     #
     def query=(v)
       return @query = nil unless v
@@ -856,10 +842,10 @@ def query=(v)
     end
 
     #
-    # check the opaque +v+ component for RFC2396 compliance and
-    # against the URI::Parser Regexp for :OPAQUE
+    # Checks the opaque +v+ component for RFC2396 compliance and
+    # against the URI::Parser Regexp for :OPAQUE.
     #
-    # Can not have a host, port, user or path component defined,
+    # Can not have a host, port, user, or path component defined,
     # with an opaque component defined.
     #
     def check_opaque(v)
@@ -880,9 +866,9 @@ def check_opaque(v)
     end
     private :check_opaque
 
-    # protected setter for the opaque component +v+
+    # Protected setter for the opaque component +v+.
     #
-    # see also URI::Generic.opaque=
+    # See also URI::Generic.opaque=.
     #
     def set_opaque(v)
       @opaque = v
@@ -897,10 +883,10 @@ def set_opaque(v)
     #
     # == Description
     #
-    # public setter for the opaque component +v+.
-    # (with validation)
+    # Public setter for the opaque component +v+
+    # (with validation).
     #
-    # see also URI::Generic.check_opaque
+    # See also URI::Generic.check_opaque.
     #
     def opaque=(v)
       check_opaque(v)
@@ -909,7 +895,7 @@ def opaque=(v)
     end
 
     #
-    # check the fragment +v+ component against the URI::Parser Regexp for :FRAGMENT
+    # Checks the fragment +v+ component against the URI::Parser Regexp for :FRAGMENT.
     #
     #
     # == Args
@@ -919,8 +905,8 @@ def opaque=(v)
     #
     # == Description
     #
-    # public setter for the fragment component +v+.
-    # (with validation)
+    # Public setter for the fragment component +v+
+    # (with validation).
     #
     # == Usage
     #
@@ -928,9 +914,7 @@ def opaque=(v)
     #
     #   uri = URI.parse("http://my.example.com/?id=25#time=1305212049")
     #   uri.fragment = "time=1305212086"
-    #   # =>  "time=1305212086"
-    #   uri
-    #   #=> #<URI::HTTP:0x000000007a81f8 URL:http://my.example.com/?id=25#time=1305212086>
+    #   uri.to_s  #=> "http://my.example.com/?id=25#time=1305212086"
     #
     def fragment=(v)
       return @fragment = nil unless v
@@ -946,7 +930,23 @@ def fragment=(v)
     end
 
     #
-    # Checks if URI has a path
+    # Returns true if URI is hierarchical.
+    #
+    # == Description
+    #
+    # URI has components listed in order of decreasing significance from left to right,
+    # see RFC3986 https://tools.ietf.org/html/rfc3986 1.2.3.
+    #
+    # == Usage
+    #
+    #   require 'uri'
+    #
+    #   uri = URI.parse("http://my.example.com/")
+    #   uri.hierarchical?
+    #   #=> true
+    #   uri = URI.parse("mailto:joe@example.com")
+    #   uri.hierarchical?
+    #   #=> false
     #
     def hierarchical?
       if @path
@@ -957,7 +957,7 @@ def hierarchical?
     end
 
     #
-    # Checks if URI is an absolute one
+    # Returns true if URI has a scheme (e.g. http:// or https://) specified.
     #
     def absolute?
       if @scheme
@@ -969,14 +969,14 @@ def absolute?
     alias absolute absolute?
 
     #
-    # Checks if URI is relative
+    # Returns true if URI does not have a scheme (e.g. http:// or https://) specified.
     #
     def relative?
       !absolute?
     end
 
     #
-    # returns an Array of the path split on '/'
+    # Returns an Array of the path split on '/'.
     #
     def split_path(path)
       path.split("/", -1)
@@ -1058,7 +1058,7 @@ def merge_path(base, rel)
     #
     # == Description
     #
-    # Destructive form of #merge
+    # Destructive form of #merge.
     #
     # == Usage
     #
@@ -1066,8 +1066,7 @@ def merge_path(base, rel)
     #
     #   uri = URI.parse("http://my.example.com")
     #   uri.merge!("/main.rbx?page=1")
-    #   p uri
-    #   # =>  #<URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1>
+    #   uri.to_s  # => "http://my.example.com/main.rbx?page=1"
     #
     def merge!(oth)
       t = merge(oth)
@@ -1087,15 +1086,15 @@ def merge!(oth)
     #
     # == Description
     #
-    # Merges two URI's.
+    # Merges two URIs.
     #
     # == Usage
     #
     #   require 'uri'
     #
     #   uri = URI.parse("http://my.example.com")
-    #   p uri.merge("/main.rbx?page=1")
-    #   # =>  #<URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1>
+    #   uri.merge("/main.rbx?page=1")
+    #   # => "http://my.example.com/main.rbx?page=1"
     #
     def merge(oth)
       rel = parser.send(:convert_to_uri, oth)
@@ -1240,15 +1239,15 @@ def route_from0(oth)
     #
     # == Description
     #
-    # Calculates relative path from oth to self
+    # Calculates relative path from oth to self.
     #
     # == Usage
     #
     #   require 'uri'
     #
     #   uri = URI.parse('http://my.example.com/main.rbx?page=1')
-    #   p uri.route_from('http://my.example.com')
-    #   #=> #<URI::Generic:0x20218858 URL:/main.rbx?page=1>
+    #   uri.route_from('http://my.example.com')
+    #   #=> #<URI::Generic /main.rbx?page=1>
     #
     def route_from(oth)
       # you can modify `rel', but can not `oth'.
@@ -1280,15 +1279,15 @@ def route_from(oth)
     #
     # == Description
     #
-    # Calculates relative path to oth from self
+    # Calculates relative path to oth from self.
     #
     # == Usage
     #
     #   require 'uri'
     #
     #   uri = URI.parse('http://my.example.com')
-    #   p uri.route_to('http://my.example.com/main.rbx?page=1')
-    #   #=> #<URI::Generic:0x2020c2f6 URL:/main.rbx?page=1>
+    #   uri.route_to('http://my.example.com/main.rbx?page=1')
+    #   #=> #<URI::Generic /main.rbx?page=1>
     #
     def route_to(oth)
       parser.send(:convert_to_uri, oth).route_from(self)
@@ -1314,7 +1313,7 @@ def normalize
     end
 
     #
-    # Destructive version of #normalize
+    # Destructive version of #normalize.
     #
     def normalize!
       if path&.empty?
@@ -1329,7 +1328,7 @@ def normalize!
     end
 
     #
-    # Constructs String from URI
+    # Constructs String from URI.
     #
     def to_s
       str = ''.dup
@@ -1369,7 +1368,7 @@ def to_s
     end
 
     #
-    # Compares two URIs
+    # Compares two URIs.
     #
     def ==(oth)
       if self.class == oth.class
@@ -1402,7 +1401,7 @@ def eql?(oth)
 =end
 
 
-    # returns an Array of the components defined from the COMPONENT Array
+    # Returns an Array of the components defined from the COMPONENT Array.
     def component_ary
       component.collect do |x|
         self.send(x)
@@ -1413,18 +1412,18 @@ def component_ary
     # == Args
     #
     # +components+::
-    #    Multiple Symbol arguments defined in URI::HTTP
+    #    Multiple Symbol arguments defined in URI::HTTP.
     #
     # == Description
     #
-    # Selects specified components from URI
+    # Selects specified components from URI.
     #
     # == Usage
     #
     #   require 'uri'
     #
     #   uri = URI.parse('http://myuser:mypass@my.example.com/test.rbx')
-    #   p uri.select(:userinfo, :host, :path)
+    #   uri.select(:userinfo, :host, :path)
     #   # => ["myuser:mypass", "my.example.com", "/test.rbx"]
     #
     def select(*components)
@@ -1450,8 +1449,8 @@ def inspect
     #
     # == Description
     #
-    # attempts to parse other URI +oth+,
-    # returns [parsed_oth, self]
+    # Attempts to parse other URI +oth+,
+    # returns [parsed_oth, self].
     #
     # == Usage
     #
@@ -1459,7 +1458,7 @@ def inspect
     #
     #   uri = URI.parse("http://my.example.com")
     #   uri.coerce("http://foo.com")
-    #   #=> [#<URI::HTTP:0x00000000bcb028 URL:http://foo.com/>, #<URI::HTTP:0x00000000d92178 URL:http://my.example.com>]
+    #   #=> [#<URI::HTTP http://foo.com>, #<URI::HTTP http://my.example.com>]
     #
     def coerce(oth)
       case oth
@@ -1472,15 +1471,15 @@ def coerce(oth)
       return oth, self
     end
 
-    # returns a proxy URI.
+    # Returns a proxy URI.
     # The proxy URI is obtained from environment variables such as http_proxy,
     # ftp_proxy, no_proxy, etc.
     # If there is no proper proxy, nil is returned.
     #
-    # If the optional parameter, +env+, is specified, it is used instead of ENV.
+    # If the optional parameter +env+ is specified, it is used instead of ENV.
     #
     # Note that capitalized variables (HTTP_PROXY, FTP_PROXY, NO_PROXY, etc.)
-    # are examined too.
+    # are examined, too.
     #
     # But http_proxy and HTTP_PROXY is treated specially under CGI environment.
     # It's because HTTP_PROXY may be set by Proxy: header.
@@ -1554,11 +1553,16 @@ def find_proxy(env=ENV)
     end
 
     def self.use_proxy?(hostname, addr, port, no_proxy) # :nodoc:
-      no_proxy.scan(/(?!\.)([^:,\s]+)(?::(\d+))?/) {|p_host, p_port|
+      hostname = hostname.downcase
+      dothostname = ".#{hostname}"
+      no_proxy.scan(/([^:,\s]+)(?::(\d+))?/) {|p_host, p_port|
         if !p_port || port == p_port.to_i
-          if /(\A|\.)#{Regexp.quote p_host}\z/i =~ hostname
-            return false
-          elsif addr
+          if p_host.start_with?('.')
+            return false if hostname.end_with?(p_host.downcase)
+          else
+            return false if dothostname.end_with?(".#{p_host.downcase}")
+          end
+          if addr
             begin
               return false if IPAddr.new(p_host).include?(addr)
             rescue IPAddr::InvalidAddressError
diff --git a/lib/ruby/stdlib/uri/http.rb b/lib/ruby/stdlib/uri/http.rb
index 0af1858efe2..2e2ebcc1d37 100644
--- a/lib/ruby/stdlib/uri/http.rb
+++ b/lib/ruby/stdlib/uri/http.rb
@@ -8,7 +8,7 @@
 # See URI for general documentation
 #
 
-require 'uri/generic'
+require_relative 'generic'
 
 module URI
 
@@ -21,10 +21,10 @@ module URI
   # update. See <URL:http://support.microsoft.com/kb/834489>.
   #
   class HTTP < Generic
-    # A Default port of 80 for URI::HTTP
+    # A Default port of 80 for URI::HTTP.
     DEFAULT_PORT = 80
 
-    # An Array of the available components for URI::HTTP
+    # An Array of the available components for URI::HTTP.
     COMPONENT = %i[
       scheme
       userinfo host port
@@ -36,22 +36,22 @@ class HTTP < Generic
     #
     # == Description
     #
-    # Create a new URI::HTTP object from components, with syntax checking.
+    # Creates a new URI::HTTP object from components, with syntax checking.
     #
-    # The components accepted are userinfo, host, port, path, query and
+    # The components accepted are userinfo, host, port, path, query, and
     # fragment.
     #
     # The components should be provided either as an Array, or as a Hash
     # with keys formed by preceding the component names with a colon.
     #
-    # If an Array is used, the components must be passed in the order
-    # [userinfo, host, port, path, query, fragment].
+    # If an Array is used, the components must be passed in the
+    # order <code>[userinfo, host, port, path, query, fragment]</code>.
     #
     # Example:
     #
-    #     newuri = URI::HTTP.build(host: 'www.example.com', path: '/foo/bar')
+    #     uri = URI::HTTP.build(host: 'www.example.com', path: '/foo/bar')
     #
-    #     newuri = URI::HTTP.build([nil, "www.example.com", nil, "/path",
+    #     uri = URI::HTTP.build([nil, "www.example.com", nil, "/path",
     #       "query", 'fragment'])
     #
     # Currently, if passed userinfo components this method generates
@@ -72,8 +72,8 @@ def self.build(args)
     #
     # Example:
     #
-    #     newuri = URI::HTTP.build(path: '/foo/bar', query: 'test=true')
-    #     newuri.request_uri # => "/foo/bar?test=true"
+    #     uri = URI::HTTP.build(path: '/foo/bar', query: 'test=true')
+    #     uri.request_uri #  => "/foo/bar?test=true"
     #
     def request_uri
       return unless @path
diff --git a/lib/ruby/stdlib/uri/https.rb b/lib/ruby/stdlib/uri/https.rb
index 3c8c905cc3e..4780ee0a448 100644
--- a/lib/ruby/stdlib/uri/https.rb
+++ b/lib/ruby/stdlib/uri/https.rb
@@ -8,7 +8,7 @@
 # See URI for general documentation
 #
 
-require 'uri/http'
+require_relative 'http'
 
 module URI
 
diff --git a/lib/ruby/stdlib/uri/ldap.rb b/lib/ruby/stdlib/uri/ldap.rb
index 4345875e28a..228c793cbd5 100644
--- a/lib/ruby/stdlib/uri/ldap.rb
+++ b/lib/ruby/stdlib/uri/ldap.rb
@@ -12,20 +12,21 @@
 # See URI for general documentation
 #
 
-require 'uri/generic'
+require_relative 'generic'
 
 module URI
 
   #
-  # LDAP URI SCHEMA (described in RFC2255)
+  # LDAP URI SCHEMA (described in RFC2255).
+  #--
   # ldap://<host>/<dn>[?<attrs>[?<scope>[?<filter>[?<extensions>]]]]
-  #
+  #++
   class LDAP < Generic
 
-    # A Default port of 389 for URI::LDAP
+    # A Default port of 389 for URI::LDAP.
     DEFAULT_PORT = 389
 
-    # An Array of the available components for URI::LDAP
+    # An Array of the available components for URI::LDAP.
     COMPONENT = [
       :scheme,
       :host, :port,
@@ -40,8 +41,8 @@ class LDAP < Generic
     #
     # * SCOPE_BASE - the Base DN
     # * SCOPE_ONE  - one level under the Base DN, not including the base DN and
-    #                not including any entries under this.
-    # * SCOPE_SUB  - subtress, all entries at all levels
+    #   not including any entries under this
+    # * SCOPE_SUB  - subtrees, all entries at all levels
     #
     SCOPE = [
       SCOPE_ONE = 'one',
@@ -52,7 +53,7 @@ class LDAP < Generic
     #
     # == Description
     #
-    # Create a new URI::LDAP object from components, with syntax checking.
+    # Creates a new URI::LDAP object from components, with syntax checking.
     #
     # The components accepted are host, port, dn, attributes,
     # scope, filter, and extensions.
@@ -60,15 +61,15 @@ class LDAP < Generic
     # The components should be provided either as an Array, or as a Hash
     # with keys formed by preceding the component names with a colon.
     #
-    # If an Array is used, the components must be passed in the order
-    # [host, port, dn, attributes, scope, filter, extensions].
+    # If an Array is used, the components must be passed in the
+    # order <code>[host, port, dn, attributes, scope, filter, extensions]</code>.
     #
     # Example:
     #
-    #     newuri = URI::LDAP.build({:host => 'ldap.example.com',
-    #       :dn> => '/dc=example'})
+    #     uri = URI::LDAP.build({:host => 'ldap.example.com',
+    #       :dn => '/dc=example'})
     #
-    #     newuri = URI::LDAP.build(["ldap.example.com", nil,
+    #     uri = URI::LDAP.build(["ldap.example.com", nil,
     #       "/dc=example;dc=com", "query", nil, nil, nil])
     #
     def self.build(args)
@@ -92,19 +93,18 @@ def self.build(args)
     #
     # == Description
     #
-    # Create a new URI::LDAP object from generic URI components as per
+    # Creates a new URI::LDAP object from generic URI components as per
     # RFC 2396. No LDAP-specific syntax checking is performed.
     #
     # Arguments are +scheme+, +userinfo+, +host+, +port+, +registry+, +path+,
-    # +opaque+, +query+ and +fragment+, in that order.
+    # +opaque+, +query+, and +fragment+, in that order.
     #
     # Example:
     #
-    #     uri = URI::LDAP.new("ldap", nil, "ldap.example.com", nil,
-    #       "/dc=example;dc=com", "query", nil, nil, nil, nil)
-    #
+    #     uri = URI::LDAP.new("ldap", nil, "ldap.example.com", nil, nil,
+    #       "/dc=example;dc=com", nil, "query", nil)
     #
-    # See also URI::Generic.new
+    # See also URI::Generic.new.
     #
     def initialize(*arg)
       super(*arg)
@@ -117,14 +117,14 @@ def initialize(*arg)
       parse_query
     end
 
-    # private method to cleanup +dn+ from using the +path+ component attribute
+    # Private method to cleanup +dn+ from using the +path+ component attribute.
     def parse_dn
       @dn = @path[1..-1]
     end
     private :parse_dn
 
-    # private method to cleanup +attributes+, +scope+, +filter+ and +extensions+,
-    # from using the +query+ component attribute
+    # Private method to cleanup +attributes+, +scope+, +filter+, and +extensions+
+    # from using the +query+ component attribute.
     def parse_query
       @attributes = nil
       @scope      = nil
@@ -142,7 +142,7 @@ def parse_query
     end
     private :parse_query
 
-    # private method to assemble +query+ from +attributes+, +scope+, +filter+ and +extensions+.
+    # Private method to assemble +query+ from +attributes+, +scope+, +filter+, and +extensions+.
     def build_path_query
       @path = '/' + @dn
 
@@ -155,12 +155,12 @@ def build_path_query
     end
     private :build_path_query
 
-    # returns dn.
+    # Returns dn.
     def dn
       @dn
     end
 
-    # private setter for dn +val+
+    # Private setter for dn +val+.
     def set_dn(val)
       @dn = val
       build_path_query
@@ -168,18 +168,18 @@ def set_dn(val)
     end
     protected :set_dn
 
-    # setter for dn +val+
+    # Setter for dn +val+.
     def dn=(val)
       set_dn(val)
       val
     end
 
-    # returns attributes.
+    # Returns attributes.
     def attributes
       @attributes
     end
 
-    # private setter for attributes +val+
+    # Private setter for attributes +val+.
     def set_attributes(val)
       @attributes = val
       build_path_query
@@ -187,18 +187,18 @@ def set_attributes(val)
     end
     protected :set_attributes
 
-    # setter for attributes +val+
+    # Setter for attributes +val+.
     def attributes=(val)
       set_attributes(val)
       val
     end
 
-    # returns scope.
+    # Returns scope.
     def scope
       @scope
     end
 
-    # private setter for scope +val+
+    # Private setter for scope +val+.
     def set_scope(val)
       @scope = val
       build_path_query
@@ -206,18 +206,18 @@ def set_scope(val)
     end
     protected :set_scope
 
-    # setter for scope +val+
+    # Setter for scope +val+.
     def scope=(val)
       set_scope(val)
       val
     end
 
-    # returns filter.
+    # Returns filter.
     def filter
       @filter
     end
 
-    # private setter for filter +val+
+    # Private setter for filter +val+.
     def set_filter(val)
       @filter = val
       build_path_query
@@ -225,18 +225,18 @@ def set_filter(val)
     end
     protected :set_filter
 
-    # setter for filter +val+
+    # Setter for filter +val+.
     def filter=(val)
       set_filter(val)
       val
     end
 
-    # returns extensions.
+    # Returns extensions.
     def extensions
       @extensions
     end
 
-    # private setter for extensions +val+
+    # Private setter for extensions +val+.
     def set_extensions(val)
       @extensions = val
       build_path_query
@@ -244,14 +244,14 @@ def set_extensions(val)
     end
     protected :set_extensions
 
-    # setter for extensions +val+
+    # Setter for extensions +val+.
     def extensions=(val)
       set_extensions(val)
       val
     end
 
-    # Checks if URI has a path
-    # For URI::LDAP this will return +false+
+    # Checks if URI has a path.
+    # For URI::LDAP this will return +false+.
     def hierarchical?
       false
     end
diff --git a/lib/ruby/stdlib/uri/ldaps.rb b/lib/ruby/stdlib/uri/ldaps.rb
index d03f8efa2d8..227e7fab354 100644
--- a/lib/ruby/stdlib/uri/ldaps.rb
+++ b/lib/ruby/stdlib/uri/ldaps.rb
@@ -6,7 +6,7 @@
 # See URI for general documentation
 #
 
-require 'uri/ldap'
+require_relative 'ldap'
 
 module URI
 
diff --git a/lib/ruby/stdlib/uri/mailto.rb b/lib/ruby/stdlib/uri/mailto.rb
index 1494c3952b9..9c06871c7a9 100644
--- a/lib/ruby/stdlib/uri/mailto.rb
+++ b/lib/ruby/stdlib/uri/mailto.rb
@@ -8,20 +8,20 @@
 # See URI for general documentation
 #
 
-require 'uri/generic'
+require_relative 'generic'
 
 module URI
 
   #
-  # RFC6068, The mailto URL scheme
+  # RFC6068, the mailto URL scheme.
   #
   class MailTo < Generic
     include REGEXP
 
-    # A Default port of nil for URI::MailTo
+    # A Default port of nil for URI::MailTo.
     DEFAULT_PORT = nil
 
-    # An Array of the available components for URI::MailTo
+    # An Array of the available components for URI::MailTo.
     COMPONENT = [ :scheme, :to, :headers ].freeze
 
     # :stopdoc:
@@ -52,7 +52,7 @@ class MailTo < Generic
     # pct-encoded  = "%" HEXDIG HEXDIG
     HEADER_REGEXP  = /\A(?<hfield>(?:%\h\h|[!$'-.0-;@-Z_a-z~])*=(?:%\h\h|[!$'-.0-;@-Z_a-z~])*)(?:&\g<hfield>)*\z/
     # practical regexp for email address
-    # http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address
+    # https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address
     EMAIL_REGEXP = /\A[a-zA-Z0-9.!\#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*\z/
     # :startdoc:
 
@@ -62,26 +62,26 @@ class MailTo < Generic
     # Creates a new URI::MailTo object from components, with syntax checking.
     #
     # Components can be provided as an Array or Hash. If an Array is used,
-    # the components must be supplied as [to, headers].
+    # the components must be supplied as <code>[to, headers]</code>.
     #
     # If a Hash is used, the keys are the component names preceded by colons.
     #
     # The headers can be supplied as a pre-encoded string, such as
-    # "subject=subscribe&cc=address", or as an Array of Arrays like
-    # [['subject', 'subscribe'], ['cc', 'address']]
+    # <code>"subject=subscribe&cc=address"</code>, or as an Array of Arrays
+    # like <code>[['subject', 'subscribe'], ['cc', 'address']]</code>.
     #
     # Examples:
     #
     #    require 'uri'
     #
     #    m1 = URI::MailTo.build(['joe@example.com', 'subject=Ruby'])
-    #    puts m1.to_s  ->  mailto:joe@example.com?subject=Ruby
+    #    m1.to_s  # => "mailto:joe@example.com?subject=Ruby"
     #
     #    m2 = URI::MailTo.build(['john@example.com', [['Subject', 'Ruby'], ['Cc', 'jack@example.com']]])
-    #    puts m2.to_s  ->  mailto:john@example.com?Subject=Ruby&Cc=jack@example.com
+    #    m2.to_s  # => "mailto:john@example.com?Subject=Ruby&Cc=jack@example.com"
     #
     #    m3 = URI::MailTo.build({:to => 'listman@example.com', :headers => [['subject', 'subscribe']]})
-    #    puts m3.to_s  ->  mailto:listman@example.com?subject=subscribe
+    #    m3.to_s  # => "mailto:listman@example.com?subject=subscribe"
     #
     def self.build(args)
       tmp = Util.make_components_hash(self, args)
@@ -160,13 +160,13 @@ def initialize(*arg)
       end
     end
 
-    # The primary e-mail address of the URL, as a String
+    # The primary e-mail address of the URL, as a String.
     attr_reader :to
 
-    # E-mail headers set by the URL, as an Array of Arrays
+    # E-mail headers set by the URL, as an Array of Arrays.
     attr_reader :headers
 
-    # check the to +v+ component
+    # Checks the to +v+ component.
     def check_to(v)
       return true unless v
       return true if v.size == 0
@@ -191,20 +191,20 @@ def check_to(v)
     end
     private :check_to
 
-    # private setter for to +v+
+    # Private setter for to +v+.
     def set_to(v)
       @to = v
     end
     protected :set_to
 
-    # setter for to +v+
+    # Setter for to +v+.
     def to=(v)
       check_to(v)
       set_to(v)
       v
     end
 
-    # check the headers +v+ component against either
+    # Checks the headers +v+ component against either
     # * HEADER_REGEXP
     def check_headers(v)
       return true unless v
@@ -218,7 +218,7 @@ def check_headers(v)
     end
     private :check_headers
 
-    # private setter for headers +v+
+    # Private setter for headers +v+.
     def set_headers(v)
       @headers = []
       if v
@@ -229,14 +229,14 @@ def set_headers(v)
     end
     protected :set_headers
 
-    # setter for headers +v+
+    # Setter for headers +v+.
     def headers=(v)
       check_headers(v)
       set_headers(v)
       v
     end
 
-    # Constructs String from URI
+    # Constructs String from URI.
     def to_s
       @scheme + ':' +
         if @to
diff --git a/lib/ruby/stdlib/uri/rfc2396_parser.rb b/lib/ruby/stdlib/uri/rfc2396_parser.rb
index b9e7b2b26ef..843fe124ee8 100644
--- a/lib/ruby/stdlib/uri/rfc2396_parser.rb
+++ b/lib/ruby/stdlib/uri/rfc2396_parser.rb
@@ -58,7 +58,7 @@ module PATTERN
     # :startdoc:
   end # REGEXP
 
-  # class that Parses String's into URI's
+  # Class that parses String's into URI's.
   #
   # It contains a Hash set of patterns and Regexp's that match and validate.
   #
@@ -88,12 +88,12 @@ class RFC2396_Parser
     # == Examples
     #
     #   p = URI::Parser.new(:ESCAPED => "(?:%[a-fA-F0-9]{2}|%u[a-fA-F0-9]{4})")
-    #   u = p.parse("http://example.jp/%uABCD") #=> #<URI::HTTP:0xb78cf4f8 URL:http://example.jp/%uABCD>
+    #   u = p.parse("http://example.jp/%uABCD") #=> #<URI::HTTP http://example.jp/%uABCD>
     #   URI.parse(u.to_s) #=> raises URI::InvalidURIError
     #
     #   s = "http://example.com/ABCD"
-    #   u1 = p.parse(s) #=> #<URI::HTTP:0xb78c3220 URL:http://example.com/ABCD>
-    #   u2 = URI.parse(s) #=> #<URI::HTTP:0xb78b6d54 URL:http://example.com/ABCD>
+    #   u1 = p.parse(s) #=> #<URI::HTTP http://example.com/ABCD>
+    #   u2 = URI.parse(s) #=> #<URI::HTTP http://example.com/ABCD>
     #   u1 == u2 #=> true
     #   u1.eql?(u2) #=> false
     #
@@ -109,15 +109,15 @@ def initialize(opts = {})
 
     # The Hash of patterns.
     #
-    # see also URI::Parser.initialize_pattern
+    # See also URI::Parser.initialize_pattern.
     attr_reader :pattern
 
-    # The Hash of Regexp
+    # The Hash of Regexp.
     #
-    # see also URI::Parser.initialize_regexp
+    # See also URI::Parser.initialize_regexp.
     attr_reader :regexp
 
-    # Returns a split URI against regexp[:ABS_URI]
+    # Returns a split URI against regexp[:ABS_URI].
     def split(uri)
       case uri
       when ''
@@ -198,14 +198,14 @@ def split(uri)
     #
     # == Description
     #
-    # parses +uri+ and constructs either matching URI scheme object
-    # (FTP, HTTP, HTTPS, LDAP, LDAPS, or MailTo) or URI::Generic
+    # Parses +uri+ and constructs either matching URI scheme object
+    # (File, FTP, HTTP, HTTPS, LDAP, LDAPS, or MailTo) or URI::Generic.
     #
     # == Usage
     #
     #   p = URI::Parser.new
     #   p.parse("ldap://ldap.example.com/dc=example?user=john")
-    #   #=> #<URI::LDAP:0x00000000b9e7e8 URL:ldap://ldap.example.com/dc=example?user=john>
+    #   #=> #<URI::LDAP ldap://ldap.example.com/dc=example?user=john>
     #
     def parse(uri)
       scheme, userinfo, host, port,
@@ -231,7 +231,7 @@ def parse(uri)
     #
     # == Description
     #
-    # Attempts to parse and merge a set of URIs
+    # Attempts to parse and merge a set of URIs.
     #
     def join(*uris)
       uris[0] = convert_to_uri(uris[0])
@@ -253,11 +253,11 @@ def join(*uris)
     #
     # == Description
     #
-    # Attempts to parse and merge a set of URIs
-    # If no +block+ given , then returns the result,
+    # Attempts to parse and merge a set of URIs.
+    # If no +block+ given, then returns the result,
     # else it calls +block+ for each element in result.
     #
-    # see also URI::Parser.make_regexp
+    # See also URI::Parser.make_regexp.
     #
     def extract(str, schemes = nil)
       if block_given?
@@ -270,8 +270,8 @@ def extract(str, schemes = nil)
       end
     end
 
-    # returns Regexp that is default self.regexp[:ABS_URI_REF],
-    # unless +schemes+ is provided. Then it is a Regexp.union with self.pattern[:X_ABS_URI]
+    # Returns Regexp that is default self.regexp[:ABS_URI_REF],
+    # unless +schemes+ is provided. Then it is a Regexp.union with self.pattern[:X_ABS_URI].
     def make_regexp(schemes = nil)
       unless schemes
         @regexp[:ABS_URI_REF]
@@ -294,7 +294,7 @@ def make_regexp(schemes = nil)
     #
     # == Description
     #
-    # constructs a safe String from +str+, removing unsafe characters,
+    # Constructs a safe String from +str+, removing unsafe characters,
     # replacing them with codes.
     #
     def escape(str, unsafe = @regexp[:UNSAFE])
@@ -315,21 +315,23 @@ def escape(str, unsafe = @regexp[:UNSAFE])
     #
     # :call-seq:
     #   unescape( str )
-    #   unescape( str, unsafe )
+    #   unescape( str, escaped )
     #
     # == Args
     #
     # +str+::
     #    String to remove escapes from
-    # +unsafe+::
+    # +escaped+::
     #    Regexp to apply. Defaults to self.regexp[:ESCAPED]
     #
     # == Description
     #
-    # Removes escapes from +str+
+    # Removes escapes from +str+.
     #
     def unescape(str, escaped = @regexp[:ESCAPED])
-      str.gsub(escaped) { [$&[1, 2].hex].pack('C') }.force_encoding(str.encoding)
+      enc = str.encoding
+      enc = Encoding::UTF_8 if enc == Encoding::US_ASCII
+      str.gsub(escaped) { [$&[1, 2]].pack('H2').force_encoding(enc) }
     end
 
     @@to_s = Kernel.instance_method(:to_s)
@@ -339,7 +341,7 @@ def inspect
 
     private
 
-    # Constructs the default Hash of patterns
+    # Constructs the default Hash of patterns.
     def initialize_pattern(opts = {})
       ret = {}
       ret[:ESCAPED] = escaped = (opts.delete(:ESCAPED) || PATTERN::ESCAPED)
@@ -497,7 +499,7 @@ def initialize_pattern(opts = {})
       ret
     end
 
-    # Constructs the default Hash of Regexp's
+    # Constructs the default Hash of Regexp's.
     def initialize_regexp(pattern)
       ret = {}
 
diff --git a/lib/ruby/stdlib/uri/rfc3986_parser.rb b/lib/ruby/stdlib/uri/rfc3986_parser.rb
index 871280044ad..135e847e88e 100644
--- a/lib/ruby/stdlib/uri/rfc3986_parser.rb
+++ b/lib/ruby/stdlib/uri/rfc3986_parser.rb
@@ -15,7 +15,7 @@ def split(uri) #:nodoc:
       begin
         uri = uri.to_str
       rescue NoMethodError
-        raise InvalidURIError, "bad URI(is not URI?): #{uri}"
+        raise InvalidURIError, "bad URI(is not URI?): #{uri.inspect}"
       end
       uri.ascii_only? or
         raise InvalidURIError, "URI must be ascii only #{uri.dump}"
@@ -64,7 +64,7 @@ def split(uri) #:nodoc:
           m["fragment".freeze]
         ]
       else
-        raise InvalidURIError, "bad URI(is not URI?): #{uri}"
+        raise InvalidURIError, "bad URI(is not URI?): #{uri.inspect}"
       end
     end
 
diff --git a/lib/ruby/stdlib/win32/resolv.rb b/lib/ruby/stdlib/win32/resolv.rb
index 5ecb4d8f3e9..0c1207c2382 100644
--- a/lib/ruby/stdlib/win32/resolv.rb
+++ b/lib/ruby/stdlib/win32/resolv.rb
@@ -114,19 +114,19 @@ def self.get_dns_server_list
   end
 end
 
-nt = Module.new do
-  break true if [nil].pack("p").size > 4
-  extend Importer
-  dlload "kernel32.dll"
-  getv = extern "int GetVersionExA(void *)", :stdcall
-  info = [ 148, 0, 0, 0, 0 ].pack('V5') + "\0" * 128
-  getv.call(info)
-  break info.unpack('V5')[4] == 2  # VER_PLATFORM_WIN32_NT
+if [nil].pack("p").size <= 4 # 32bit env
+  begin
+    f = Fiddle
+    osid = f::Handle.new["rb_w32_osid"]
+  rescue f::DLError # not ix86, cannot be Windows 9x
+  else
+    if f::Function.new(osid, [], f::TYPE_INT).call < 2  # VER_PLATFORM_WIN32_NT
+      require_relative 'resolv9x'
+      return
+    end
+  end
 end
-if not nt
-  require_relative 'resolv9x'
-  # return # does not work yet
-else
+
 module Win32
 #====================================================================
 # Windows NT
@@ -218,4 +218,3 @@ def get_info
     end
   end
 end
-end
diff --git a/lib/ruby/stdlib/yaml.rb b/lib/ruby/stdlib/yaml.rb
index 2d19d440d92..95134d4e38c 100644
--- a/lib/ruby/stdlib/yaml.rb
+++ b/lib/ruby/stdlib/yaml.rb
@@ -1,6 +1,4 @@
 # frozen_string_literal: false
-##
-# The YAML module is an alias of Psych, the YAML engine for Ruby.
 
 begin
   require 'psych'
@@ -25,7 +23,7 @@
 #
 # This module provides a Ruby interface for data serialization in YAML format.
 #
-# The underlying implementation is the libyaml wrapper Psych.
+# The YAML module is an alias of Psych, the YAML engine for Ruby.
 #
 # == Usage
 #
@@ -39,6 +37,9 @@
 #     YAML.dump("foo")     # => "--- foo\n...\n"
 #     { :a => 'b'}.to_yaml  # => "---\n:a: b\n"
 #
+# As the implementation is provided by the Psych library, detailed documentation
+# can be found in that library's docs (also part of standard library).
+#
 # == Security
 #
 # Do not use YAML to load untrusted data. Doing so is unsafe and could allow
diff --git a/pom.rb b/pom.rb
index de8208cf8f7..663385634c4 100644
--- a/pom.rb
+++ b/pom.rb
@@ -71,8 +71,8 @@
               'rspec-expectations.version' => '3.7.0',
               'rspec-mocks.version' => '3.7.0',
               'rspec-support.version' => '3.7.0',
-              'minitest.version' => '5.10.3',
-              'test-unit.version' => '3.2.8',
+              'minitest.version' => '5.11.3',
+              'test-unit.version' => '3.2.9',
               'power_assert.version' => '1.1.3',
 
               # versions for default gems with bin executables
diff --git a/pom.xml b/pom.xml
index 9292986248c..3b3882d26a5 100644
--- a/pom.xml
+++ b/pom.xml
@@ -16,7 +16,7 @@ DO NOT MODIFIY - GENERATED CODE
   </parent>
   <groupId>org.jruby</groupId>
   <artifactId>jruby-parent</artifactId>
-  <version>9.2.10.0-SNAPSHOT</version>
+  <version>9.3.0.0-SNAPSHOT</version>
   <packaging>pom</packaging>
   <name>JRuby</name>
   <description>JRuby is the effort to recreate the Ruby (https://www.ruby-lang.org) interpreter in Java.</description>
@@ -120,7 +120,7 @@ DO NOT MODIFIY - GENERATED CODE
     <jruby.plugins.version>1.0.10</jruby.plugins.version>
     <json.version>2.2.0</json.version>
     <main.basedir>${project.basedir}</main.basedir>
-    <minitest.version>5.10.3</minitest.version>
+    <minitest.version>5.11.3</minitest.version>
     <polyglot.dump.pom>pom.xml</polyglot.dump.pom>
     <polyglot.dump.readonly>true</polyglot.dump.readonly>
     <power_assert.version>1.1.3</power_assert.version>
@@ -132,7 +132,7 @@ DO NOT MODIFIY - GENERATED CODE
     <rspec-mocks.version>3.7.0</rspec-mocks.version>
     <rspec-support.version>3.7.0</rspec-support.version>
     <rspec.version>3.7.0</rspec.version>
-    <test-unit.version>3.2.8</test-unit.version>
+    <test-unit.version>3.2.9</test-unit.version>
     <version.jruby>${project.version}</version.jruby>
   </properties>
   <dependencyManagement>
diff --git a/test/mri/-ext-/arith_seq/test_arith_seq_extract.rb b/test/mri/-ext-/arith_seq/test_arith_seq_extract.rb
new file mode 100644
index 00000000000..d64fe6a7b51
--- /dev/null
+++ b/test/mri/-ext-/arith_seq/test_arith_seq_extract.rb
@@ -0,0 +1,40 @@
+# frozen_string_literal: false
+require 'test/unit'
+
+class Test_ArithSeq < Test::Unit::TestCase
+  def test_extract_with_arith_seq
+    assert_separately([], <<-"end;") #do
+      require '-test-/arith_seq/extract'
+
+      b, e, s, f, r = Enumerator::ArithmeticSequence.__extract__(1.step(10, 2))
+      assert_equal([1, 10, 2, 0, 1], [b, e, s, f, r])
+
+      b, e, s, f, r = Enumerator::ArithmeticSequence.__extract__((1..10) % 2)
+      assert_equal([1, 10, 2, 0, 1], [b, e, s, f, r])
+
+      b, e, s, f, r = Enumerator::ArithmeticSequence.__extract__((1...10) % 2)
+      assert_equal([1, 10, 2, 1, 1], [b, e, s, f, r])
+    end;
+  end
+
+  def test_extract_with_range
+    assert_separately([], <<-"end;") #do
+      require '-test-/arith_seq/extract'
+
+      b, e, s, f, r = Enumerator::ArithmeticSequence.__extract__(1..10)
+      assert_equal([1, 10, 1, 0, 1], [b, e, s, f, r])
+
+      b, e, s, f, r = Enumerator::ArithmeticSequence.__extract__(1...10)
+      assert_equal([1, 10, 1, 1, 1],  [b, e, s, f, r])
+    end;
+  end
+
+  def test_extract_with_others
+    assert_separately([], <<-"end;") #do
+      require '-test-/arith_seq/extract'
+
+      b, e, s, f, r = Enumerator::ArithmeticSequence.__extract__(nil)
+      assert_equal([nil, nil, nil, nil, 0], [b, e, s,  f, r])
+    end;
+  end
+end
diff --git a/test/mri/-ext-/array/test_resize.rb b/test/mri/-ext-/array/test_resize.rb
index f6a368cb755..c7a57f3cf18 100644
--- a/test/mri/-ext-/array/test_resize.rb
+++ b/test/mri/-ext-/array/test_resize.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require '-test-/array/resize'
 
-class TestArray < Test::Unit::TestCase
+class Test_Array < Test::Unit::TestCase
   class TestResize < Test::Unit::TestCase
     def test_expand
       feature = '[ruby-dev:42912]'
diff --git a/test/mri/-ext-/bignum/test_big2str.rb b/test/mri/-ext-/bignum/test_big2str.rb
index 296a5a9c495..cc28d97ce5c 100644
--- a/test/mri/-ext-/bignum/test_big2str.rb
+++ b/test/mri/-ext-/bignum/test_big2str.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require "-test-/bignum"
 
-class TestBignum < Test::Unit::TestCase
+class Test_Bignum < Test::Unit::TestCase
   class TestBig2str < Test::Unit::TestCase
 
     SIZEOF_BDIGIT = Integer::SIZEOF_BDIGIT
diff --git a/test/mri/-ext-/bignum/test_bigzero.rb b/test/mri/-ext-/bignum/test_bigzero.rb
index 43a99b01a3a..cf34964acd5 100644
--- a/test/mri/-ext-/bignum/test_bigzero.rb
+++ b/test/mri/-ext-/bignum/test_bigzero.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require "-test-/bignum"
 
-class TestBignum < Test::Unit::TestCase
+class Test_Bignum < Test::Unit::TestCase
   class TestBigZero < Test::Unit::TestCase
     def test_equal_0
       bug8204 = '[ruby-core:53893] [Bug #8204]'
diff --git a/test/mri/-ext-/bignum/test_div.rb b/test/mri/-ext-/bignum/test_div.rb
index c53332630a9..4e4bd3fa3e8 100644
--- a/test/mri/-ext-/bignum/test_div.rb
+++ b/test/mri/-ext-/bignum/test_div.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require "-test-/bignum"
 
-class TestBignum < Test::Unit::TestCase
+class Test_Bignum < Test::Unit::TestCase
   class TestDiv < Test::Unit::TestCase
 
     SIZEOF_BDIGIT = Integer::SIZEOF_BDIGIT
diff --git a/test/mri/-ext-/bignum/test_mul.rb b/test/mri/-ext-/bignum/test_mul.rb
index fa974ab55db..5de046a8048 100644
--- a/test/mri/-ext-/bignum/test_mul.rb
+++ b/test/mri/-ext-/bignum/test_mul.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require "-test-/bignum"
 
-class TestBignum < Test::Unit::TestCase
+class Test_Bignum < Test::Unit::TestCase
   class TestMul < Test::Unit::TestCase
 
     SIZEOF_BDIGIT = Integer::SIZEOF_BDIGIT
diff --git a/test/mri/-ext-/bignum/test_pack.rb b/test/mri/-ext-/bignum/test_pack.rb
index 04bf3e02de1..5d553435fe6 100644
--- a/test/mri/-ext-/bignum/test_pack.rb
+++ b/test/mri/-ext-/bignum/test_pack.rb
@@ -4,7 +4,7 @@
 require 'test/unit'
 require "-test-/bignum"
 
-class TestBignum < Test::Unit::TestCase
+class Test_Bignum < Test::Unit::TestCase
   class TestPack < Test::Unit::TestCase
 
     MSWORD_FIRST = Integer::INTEGER_PACK_MSWORD_FIRST
diff --git a/test/mri/-ext-/bignum/test_str2big.rb b/test/mri/-ext-/bignum/test_str2big.rb
index c14811d9c44..6886e4a968a 100644
--- a/test/mri/-ext-/bignum/test_str2big.rb
+++ b/test/mri/-ext-/bignum/test_str2big.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require "-test-/bignum"
 
-class TestBignum < Test::Unit::TestCase
+class Test_Bignum < Test::Unit::TestCase
   class TestStr2big < Test::Unit::TestCase
 
     SIZEOF_BDIGIT = Integer::SIZEOF_BDIGIT
diff --git a/test/mri/-ext-/bug_reporter/test_bug_reporter.rb b/test/mri/-ext-/bug_reporter/test_bug_reporter.rb
index 7bfb660faf3..576628d63ed 100644
--- a/test/mri/-ext-/bug_reporter/test_bug_reporter.rb
+++ b/test/mri/-ext-/bug_reporter/test_bug_reporter.rb
@@ -4,10 +4,12 @@
 
 class TestBugReporter < Test::Unit::TestCase
   def test_bug_reporter_add
+    description = RUBY_DESCRIPTION
+    description = description.sub(/\+JIT /, '') if RubyVM::MJIT.enabled?
     expected_stderr = [
       :*,
       /\[BUG\]\sSegmentation\sfault.*\n/,
-      /#{ Regexp.quote(RUBY_DESCRIPTION) }\n\n/,
+      /#{ Regexp.quote(description) }\n\n/,
       :*,
       /Sample bug reporter: 12345/,
       :*
diff --git a/test/mri/-ext-/exception/test_data_error.rb b/test/mri/-ext-/exception/test_data_error.rb
index d33d8ca43fd..0fec4ac1ecb 100644
--- a/test/mri/-ext-/exception/test_data_error.rb
+++ b/test/mri/-ext-/exception/test_data_error.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 
 module Bug
-  class TestException < Test::Unit::TestCase
+  class Test_ExceptionDE < Test::Unit::TestCase
     def test_cleanup_data_error
       bug9167 = '[ruby-core:58643] [Bug #9167]'
       assert_normal_exit(<<-'end;', bug9167) # do
diff --git a/test/mri/-ext-/exception/test_enc_raise.rb b/test/mri/-ext-/exception/test_enc_raise.rb
index 2bc7f024135..706f0e27720 100644
--- a/test/mri/-ext-/exception/test_enc_raise.rb
+++ b/test/mri/-ext-/exception/test_enc_raise.rb
@@ -3,7 +3,7 @@
 require '-test-/exception'
 
 module Bug
-  class TestException < Test::Unit::TestCase
+  class Test_ExceptionER < Test::Unit::TestCase
     def test_enc_raise
       feature5650 = '[ruby-core:41160]'
       Encoding.list.each do |enc|
diff --git a/test/mri/-ext-/exception/test_ensured.rb b/test/mri/-ext-/exception/test_ensured.rb
index 858245868b3..c250e46bab4 100644
--- a/test/mri/-ext-/exception/test_ensured.rb
+++ b/test/mri/-ext-/exception/test_ensured.rb
@@ -5,7 +5,7 @@ module Bug
   class Bug7802 < RuntimeError
   end
 
-  class TestException < Test::Unit::TestCase
+  class Test_ExceptionE < Test::Unit::TestCase
     def test_ensured
       assert_separately([], <<-'end;') # do
 
diff --git a/test/mri/-ext-/exception/test_exception_at_throwing.rb b/test/mri/-ext-/exception/test_exception_at_throwing.rb
index aba26079ebe..4bce348a258 100644
--- a/test/mri/-ext-/exception/test_exception_at_throwing.rb
+++ b/test/mri/-ext-/exception/test_exception_at_throwing.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 
 module Bug
-  class TestException < Test::Unit::TestCase
+  class Test_ExceptionAT < Test::Unit::TestCase
     def test_exception_at_throwing
       assert_separately(%w[-r-test-/exception], "#{<<-"begin;"}\n#{<<-"end;"}")
       begin;
diff --git a/test/mri/-ext-/gvl/test_last_thread.rb b/test/mri/-ext-/gvl/test_last_thread.rb
index 3b297a5b311..6808e963bf5 100644
--- a/test/mri/-ext-/gvl/test_last_thread.rb
+++ b/test/mri/-ext-/gvl/test_last_thread.rb
@@ -3,7 +3,6 @@ class TestLastThread < Test::Unit::TestCase
 
   # [Bug #11237]
   def test_last_thread
-
     assert_separately([], <<-"end;") #do
       require '-test-/gvl/call_without_gvl'
 
diff --git a/test/mri/-ext-/hash/test_delete.rb b/test/mri/-ext-/hash/test_delete.rb
index e2ad3cbdbc0..91e6ff67cb6 100644
--- a/test/mri/-ext-/hash/test_delete.rb
+++ b/test/mri/-ext-/hash/test_delete.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require '-test-/hash'
 
-class TestHash < Test::Unit::TestCase
+class Test_Hash < Test::Unit::TestCase
   class TestDelete < Test::Unit::TestCase
     def test_delete
       hash = Bug::Hash.new
diff --git a/test/mri/-ext-/integer/test_integer.rb b/test/mri/-ext-/integer/test_integer.rb
index 8ac0583a9fd..8d7785047b0 100644
--- a/test/mri/-ext-/integer/test_integer.rb
+++ b/test/mri/-ext-/integer/test_integer.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require '-test-/integer'
 
-class TestInteger < Test::Unit::TestCase
+class Test_Integer < Test::Unit::TestCase
   FIXNUM_MIN = RbConfig::LIMITS['FIXNUM_MIN']
   FIXNUM_MAX = RbConfig::LIMITS['FIXNUM_MAX']
 
diff --git a/test/mri/-ext-/integer/test_my_integer.rb b/test/mri/-ext-/integer/test_my_integer.rb
index 260986d2031..1b6f8489f84 100644
--- a/test/mri/-ext-/integer/test_my_integer.rb
+++ b/test/mri/-ext-/integer/test_my_integer.rb
@@ -2,7 +2,7 @@
 require 'test/unit'
 require "-test-/integer"
 
-class TestIntegerExt < Test::Unit::TestCase
+class Test_MyInteger < Test::Unit::TestCase
   def test_my_integer_to_f
     assert_raise(NotImplementedError) do
       Bug::Integer::MyInteger.new.to_f
diff --git a/test/mri/-ext-/iseq_load/test_iseq_load.rb b/test/mri/-ext-/iseq_load/test_iseq_load.rb
index 87b28fa56a5..f96117b163a 100644
--- a/test/mri/-ext-/iseq_load/test_iseq_load.rb
+++ b/test/mri/-ext-/iseq_load/test_iseq_load.rb
@@ -6,7 +6,8 @@ class TestIseqLoad < Test::Unit::TestCase
   ISeq = RubyVM::InstructionSequence
 
   def test_bug8543
-    assert_iseq_roundtrip <<-'end;'
+    assert_iseq_roundtrip "#{<<~"begin;"}\n#{<<~'end;'}"
+    begin;
       puts "tralivali"
       def funct(a, b)
         a**b
@@ -15,8 +16,35 @@ def funct(a, b)
     end;
   end
 
+  def test_stressful_roundtrip
+    assert_separately(%w[-r-test-/iseq_load], "#{<<~"begin;"}\n#{<<~'end;;'}", timeout: 30)
+    begin;
+      ISeq = RubyVM::InstructionSequence
+      def assert_iseq_roundtrip(src, line=caller_locations(1,1)[0].lineno+1)
+        a = ISeq.compile(src, __FILE__, __FILE__, line).to_a
+        b = ISeq.iseq_load(a).to_a
+        assert_equal a, b, proc {diff(a, b)}
+        b = ISeq.iseq_load(b).to_a
+        assert_equal a, b, proc {diff(a, b)}
+      end
+      def test_bug8543
+        assert_iseq_roundtrip "#{<<~"begin;"}\n#{<<~'end;'}"
+        begin;
+          puts "tralivali"
+          def funct(a, b)
+            a**b
+          end
+          3.times { |i| puts "Hello, world#{funct(2,i)}!" }
+        end;
+      end
+      GC.stress = true
+      test_bug8543
+    end;;
+  end
+
   def test_case_when
-    assert_iseq_roundtrip <<-'end;'
+    assert_iseq_roundtrip "#{<<~"begin;"}\n#{<<~'end;'}"
+    begin;
       def user_mask(target)
         target.each_char.inject(0) do |mask, chr|
           case chr
@@ -37,27 +65,34 @@ def user_mask(target)
   end
 
   def test_splatsplat
-    assert_iseq_roundtrip('def splatsplat(**); end')
+    assert_iseq_roundtrip("#{<<-"begin;"}\n#{<<-'end;'}")
+    begin;
+      def splatsplat(**); end
+    end;
   end
 
   def test_hidden
-    assert_iseq_roundtrip('def x(a, (b, *c), d: false); end')
+    assert_iseq_roundtrip("#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
+      def x(a, (b, *c), d: false); end
+    end;
   end
 
-  def assert_iseq_roundtrip(src)
-    a = ISeq.compile(src).to_a
+  def assert_iseq_roundtrip(src, line=caller_locations(1,1)[0].lineno+1)
+    a = ISeq.compile(src, __FILE__, __FILE__, line).to_a
     b = ISeq.iseq_load(a).to_a
-    warn diff(a, b) if a != b
-    assert_equal a, b
-    assert_equal a, ISeq.iseq_load(b).to_a
+    assert_equal a, b, proc {diff(a, b)}
+    b = ISeq.iseq_load(b).to_a
+    assert_equal a, b, proc {diff(a, b)}
   end
 
   def test_next_in_block_in_block
     @next_broke = false
-    src = <<-'end;'
+    src, line = "#{<<~"begin;"}#{<<~'end;'}", __LINE__+2
+    begin;
       3.times { 3.times { next; @next_broke = true } }
     end;
-    a = ISeq.compile(src).to_a
+    a = ISeq.compile(src, __FILE__, __FILE__, line).to_a
     iseq = ISeq.iseq_load(a)
     iseq.eval
     assert_equal false, @next_broke
@@ -66,7 +101,8 @@ def test_next_in_block_in_block
   end
 
   def test_break_ensure
-    src = <<-'end;'
+    src, line = "#{<<~"begin;"}#{<<~'end;'}", __LINE__+2
+    begin;
       def test_break_ensure_def_method
         bad = true
         while true
@@ -79,7 +115,7 @@ def test_break_ensure_def_method
         bad
       end
     end;
-    a = ISeq.compile(src).to_a
+    a = ISeq.compile(src, __FILE__, __FILE__, line).to_a
     iseq = ISeq.iseq_load(a)
     iseq.eval
     assert_equal false, test_break_ensure_def_method
@@ -88,7 +124,8 @@ def test_break_ensure_def_method
   end
 
   def test_kwarg
-    assert_iseq_roundtrip <<-'end;'
+    assert_iseq_roundtrip "#{<<~"begin;"}\n#{<<~'end;'}"
+    begin;
       def foo(kwarg: :foo)
         kwarg
       end
diff --git a/test/mri/-ext-/method/test_arity.rb b/test/mri/-ext-/method/test_arity.rb
index 2ba73c8d4c9..cb8549e7c9d 100644
--- a/test/mri/-ext-/method/test_arity.rb
+++ b/test/mri/-ext-/method/test_arity.rb
@@ -2,7 +2,7 @@
 require '-test-/method'
 require 'test/unit'
 
-class TestMethod < Test::Unit::TestCase
+class Test_Method < Test::Unit::TestCase
   class TestArity < Test::Unit::TestCase
     class A
       def foo0()
diff --git a/test/mri/-ext-/proc/test_bmethod.rb b/test/mri/-ext-/proc/test_bmethod.rb
index 344f9757559..403d99bfd18 100644
--- a/test/mri/-ext-/proc/test_bmethod.rb
+++ b/test/mri/-ext-/proc/test_bmethod.rb
@@ -2,12 +2,12 @@
 require 'test/unit'
 require '-test-/proc'
 
-class TestProc < Test::Unit::TestCase
+class Test_Proc < Test::Unit::TestCase
   class TestBMethod < Test::Unit::TestCase
   end
 end
 
-class TestProc::TestBMethod
+class Test_Proc::TestBMethod
   class Base
     def foo(*a)
       a
diff --git a/test/mri/-ext-/string/test_fstring.rb b/test/mri/-ext-/string/test_fstring.rb
index 1b3b15c9221..8b9eca891d8 100644
--- a/test/mri/-ext-/string/test_fstring.rb
+++ b/test/mri/-ext-/string/test_fstring.rb
@@ -71,4 +71,13 @@ def test_subclass
     str.freeze
     assert_fstring(str) {|s| assert_instance_of(S, s)}
   end
+
+  def test_shared_string_safety
+    -('a' * 30).force_encoding(Encoding::ASCII)
+    str = ('a' * 30).force_encoding(Encoding::ASCII).taint
+    frozen_str = Bug::String.rb_str_new_frozen(str)
+    assert_fstring(frozen_str) {|s| assert_equal(str, s)}
+    GC.start
+    assert_equal('a' * 30, str, "[Bug #16151]")
+  end
 end
diff --git a/test/mri/-ext-/test_bug-14834.rb b/test/mri/-ext-/test_bug-14834.rb
new file mode 100644
index 00000000000..a3623b8adc3
--- /dev/null
+++ b/test/mri/-ext-/test_bug-14834.rb
@@ -0,0 +1,12 @@
+# frozen_string_literal: true
+
+class Test_BUG_14834 < Test::Unit::TestCase
+  def test
+    assert_ruby_status [], <<~'end;', '[ruby-core:87449] [Bug #14834]'
+      require '-test-/bug_14834'
+      Bug.bug_14834 do
+        [123].group_by {}
+      end
+    end;
+  end
+end
diff --git a/test/mri/-ext-/test_notimplement.rb b/test/mri/-ext-/test_notimplement.rb
index 0eba7bdaf8c..92a2fd22b8d 100644
--- a/test/mri/-ext-/test_notimplement.rb
+++ b/test/mri/-ext-/test_notimplement.rb
@@ -1,15 +1,37 @@
 # frozen_string_literal: false
 require '-test-/notimplement'
 
-class TestNotImplement < Test::Unit::TestCase
+class Test_NotImplement < Test::Unit::TestCase
   def test_funcall_notimplement
     bug3662 = '[ruby-dev:41953]'
     assert_raise(NotImplementedError, bug3662) {
       Bug.funcall(:notimplement)
     }
+    assert_raise(NotImplementedError) {
+      Bug::NotImplement.new.notimplement
+    }
   end
 
   def test_respond_to
     assert_not_respond_to(Bug, :notimplement)
+    assert_not_respond_to(Bug::NotImplement.new, :notimplement)
+  end
+
+  def test_not_method_defined
+    assert !Bug::NotImplement.method_defined?(:notimplement)
+    assert !Bug::NotImplement.method_defined?(:notimplement, true)
+    assert !Bug::NotImplement.method_defined?(:notimplement, false)
+  end
+
+  def test_not_private_method_defined
+    assert !Bug::NotImplement.private_method_defined?(:notimplement)
+    assert !Bug::NotImplement.private_method_defined?(:notimplement, true)
+    assert !Bug::NotImplement.private_method_defined?(:notimplement, false)
+  end
+
+  def test_not_protected_method_defined
+    assert !Bug::NotImplement.protected_method_defined?(:notimplement)
+    assert !Bug::NotImplement.protected_method_defined?(:notimplement, true)
+    assert !Bug::NotImplement.protected_method_defined?(:notimplement, false)
   end
 end
diff --git a/test/mri/-ext-/test_printf.rb b/test/mri/-ext-/test_printf.rb
index cd3ba76364b..feaeadd975a 100644
--- a/test/mri/-ext-/test_printf.rb
+++ b/test/mri/-ext-/test_printf.rb
@@ -24,6 +24,8 @@ def test_quote
     assert_equal('["\n"]', Bug::Printf.q("\n"))
     assert_equal('[aaa]', Bug::Printf.q('aaa'))
     assert_equal('[a a]', Bug::Printf.q('a a'))
+    assert_equal('[]', Bug::Printf.q(''))
+    assert_equal('[""]', Bug::Printf.q(:''))
   end
 
   def test_encoding
diff --git a/test/mri/-ext-/wait_for_single_fd/test_wait_for_single_fd.rb b/test/mri/-ext-/wait_for_single_fd/test_wait_for_single_fd.rb
index 1141dd317c8..777e9d14ddf 100644
--- a/test/mri/-ext-/wait_for_single_fd/test_wait_for_single_fd.rb
+++ b/test/mri/-ext-/wait_for_single_fd/test_wait_for_single_fd.rb
@@ -4,18 +4,8 @@
 class TestWaitForSingleFD < Test::Unit::TestCase
   require '-test-/wait_for_single_fd'
 
-  def with_pipe
-    r, w = IO.pipe
-    begin
-      yield r, w
-    ensure
-      r.close unless r.closed?
-      w.close unless w.closed?
-    end
-  end
-
   def test_wait_for_valid_fd
-    with_pipe do |r,w|
+    IO.pipe do |r,w|
       rc = IO.wait_for_single_fd(w.fileno, RB_WAITFD_OUT, nil)
       assert_equal RB_WAITFD_OUT, rc
     end
@@ -31,8 +21,11 @@ def test_wait_for_invalid_fd
 
     # FreeBSD 8.2 or prior sticks this
     # http://bugs.ruby-lang.org/issues/5524
-    skip if /freebsd[1-8]/ =~ RUBY_PLATFORM
-    with_pipe do |r,w|
+    if /freebsd([\d\.]+)/ =~ RUBY_PLATFORM
+      ver = $1.to_r
+      skip 'FreeBSD <= 8.2' if ver <= 8.2r
+    end
+    IO.pipe do |r,w|
       wfd = w.fileno
       w.close
       assert_raise(Errno::EBADF) do
@@ -42,12 +35,15 @@ def test_wait_for_invalid_fd
   end
 
   def test_wait_for_closed_pipe
-    with_pipe do |r,w|
+    IO.pipe do |r,w|
       w.close
       rc = IO.wait_for_single_fd(r.fileno, RB_WAITFD_IN, nil)
       assert_equal RB_WAITFD_IN, rc
     end
   end
 
-
+  def test_wait_for_kqueue
+    skip 'no kqueue' unless IO.respond_to?(:kqueue_test_wait)
+    assert_equal RB_WAITFD_IN, IO.kqueue_test_wait
+  end
 end
diff --git a/test/mri/-ext-/win32/test_console_attr.rb b/test/mri/-ext-/win32/test_console_attr.rb
index e596e13469c..35d425ded7b 100644
--- a/test/mri/-ext-/win32/test_console_attr.rb
+++ b/test/mri/-ext-/win32/test_console_attr.rb
@@ -5,6 +5,17 @@
   require 'test/unit'
 
   class Test_Win32Console < Test::Unit::TestCase
+    REVERSE_VIDEO = Bug::Win32::REVERSE_VIDEO
+
+    def reverse_video(fore, back = 0x0)
+      info = STDOUT.console_info
+      if (info.attr & REVERSE_VIDEO) == 0
+        (fore << 4) | back
+      else
+        (back << 4) | fore | REVERSE_VIDEO
+      end
+    end
+
     def reset
       STDOUT.console_attribute(7)
     end
@@ -20,7 +31,7 @@ def test_default
     def test_reverse
       print "\e[7m"
       info = STDOUT.console_info
-      assert_equal(0x70, info.attr);
+      assert_equal(reverse_video(0x7), info.attr);
     end
 
     def test_bold
@@ -32,13 +43,13 @@ def test_bold
     def test_bold_reverse
       print "\e[1;7m"
       info = STDOUT.console_info
-      assert_equal(0xf0, info.attr);
+      assert_equal(reverse_video(0xf), info.attr);
     end
 
     def test_reverse_bold
       print "\e[7;1m"
       info = STDOUT.console_info
-      assert_equal(0xf0, info.attr);
+      assert_equal(reverse_video(0xf), info.attr);
     end
   end
 end
diff --git a/test/mri/bigdecimal/test_bigdecimal.rb b/test/mri/bigdecimal/test_bigdecimal.rb
index 595783c63d1..e4f14449a16 100644
--- a/test/mri/bigdecimal/test_bigdecimal.rb
+++ b/test/mri/bigdecimal/test_bigdecimal.rb
@@ -44,49 +44,71 @@ def assert_negative_zero(x)
   end
 
   def test_not_equal
-    assert_not_equal BigDecimal("1"), BigDecimal.allocate
+    assert_not_equal BigDecimal("1"), BigDecimal("2")
   end
 
-  def test_global_new
+  def test_BigDecimal
     assert_equal(1, BigDecimal("1"))
     assert_equal(1, BigDecimal("1", 1))
+    assert_equal(1, BigDecimal(" 1 "))
+    assert_equal(111, BigDecimal("1_1_1_"))
+    assert_equal(10**(-1), BigDecimal("1E-1"), '#4825')
+    assert_equal(1234, BigDecimal(" \t\n\r \r1234 \t\n\r \r"))
+
     assert_raise(ArgumentError) { BigDecimal("1", -1) }
+    assert_raise_with_message(ArgumentError, /"1__1_1"/) { BigDecimal("1__1_1") }
+    assert_raise_with_message(ArgumentError, /"_1_1_1"/) { BigDecimal("_1_1_1") }
 
     BigDecimal.save_exception_mode do
       BigDecimal.mode(BigDecimal::EXCEPTION_OVERFLOW, false)
       BigDecimal.mode(BigDecimal::EXCEPTION_NaN, false)
-      assert_equal(1234, BigDecimal(" \t\n\r \r1234 \t\n\r \r"))
+      assert_positive_infinite(BigDecimal("Infinity"))
+      assert_positive_infinite(BigDecimal("1E1111111111111111111"))
       assert_positive_infinite(BigDecimal(" \t\n\r \rInfinity \t\n\r \r"))
+      assert_negative_infinite(BigDecimal("-Infinity"))
       assert_negative_infinite(BigDecimal(" \t\n\r \r-Infinity \t\n\r \r"))
+      assert_nan(BigDecimal("NaN"))
       assert_nan(BigDecimal(" \t\n\r \rNaN \t\n\r \r"))
     end
   end
 
-  def test_global_new_with_invalid_string
+  def test_BigDecimal_with_invalid_string
     [
       '', '.', 'e1', 'd1', '.e', '.d', '1.e', '1.d', '.1e', '.1d',
-      'invlaid value'
+      '2,30', '19,000.0', '-2,30', '-19,000.0', '+2,30', '+19,000.0',
+      '2.3,0', '19.000,0', '-2.3,0', '-19.000,0', '+2.3,0', '+19.000,0',
+      '2.3.0', '19.000.0', '-2.3.0', '-19.000.0', '+2.3.0', '+19.000.0',
+      'invlaid value', '123 xyz'
     ].each do |invalid_string|
       assert_raise_with_message(ArgumentError, %Q[invalid value for BigDecimal(): "#{invalid_string}"]) do
         BigDecimal(invalid_string)
       end
     end
+
+    BigDecimal.save_exception_mode do
+      BigDecimal.mode(BigDecimal::EXCEPTION_OVERFLOW, false)
+      BigDecimal.mode(BigDecimal::EXCEPTION_NaN, false)
+      assert_raise_with_message(ArgumentError, /"Infinity_"/) { BigDecimal("Infinity_") }
+      assert_raise_with_message(ArgumentError, /"\+Infinity_"/) { BigDecimal("+Infinity_") }
+      assert_raise_with_message(ArgumentError, /"-Infinity_"/) { BigDecimal("-Infinity_") }
+      assert_raise_with_message(ArgumentError, /"NaN_"/) { BigDecimal("NaN_") }
+    end
   end
 
-  def test_global_new_with_integer
+  def test_BigDecimal_with_integer
     assert_equal(BigDecimal("1"), BigDecimal(1))
     assert_equal(BigDecimal("-1"), BigDecimal(-1))
     assert_equal(BigDecimal((2**100).to_s), BigDecimal(2**100))
     assert_equal(BigDecimal((-2**100).to_s), BigDecimal(-2**100))
   end
 
-  def test_global_new_with_rational
+  def test_BigDecimal_with_rational
     assert_equal(BigDecimal("0.333333333333333333333"), BigDecimal(1.quo(3), 21))
     assert_equal(BigDecimal("-0.333333333333333333333"), BigDecimal(-1.quo(3), 21))
     assert_raise_with_message(ArgumentError, "can't omit precision for a Rational.") { BigDecimal(42.quo(7)) }
   end
 
-  def test_global_new_with_float
+  def test_BigDecimal_with_float
     assert_equal(BigDecimal("0.1235"), BigDecimal(0.1234567, 4))
     assert_equal(BigDecimal("-0.1235"), BigDecimal(-0.1234567, 4))
     assert_raise_with_message(ArgumentError, "can't omit precision for a Float.") { BigDecimal(4.2) }
@@ -107,7 +129,7 @@ def test_global_new_with_float
     end
   end
 
-  def test_global_new_with_big_decimal
+  def test_BigDecimal_with_big_decimal
     assert_equal(BigDecimal(1), BigDecimal(BigDecimal(1)))
     assert_equal(BigDecimal('+0'), BigDecimal(BigDecimal('+0')))
     assert_equal(BigDecimal('-0'), BigDecimal(BigDecimal('-0')))
@@ -120,81 +142,91 @@ def test_global_new_with_big_decimal
     end
   end
 
-  def test_global_new_with_tainted_string
+  def test_BigDecimal_with_tainted_string
     Thread.new {
       $SAFE = 1
       BigDecimal('1'.taint)
     }.join
+  ensure
+    $SAFE = 0
   end
 
-  def test_s_ver
-    assert_warning(/BigDecimal\.ver is deprecated; use BigDecimal::VERSION instead/) do
-      BigDecimal.ver
-    end
-  end
-
-  def test_s_new
-    assert_warning(/BigDecimal.new is deprecated/) do
-      BigDecimal.new("1")
-    end
-  end
-
-  def test_new
-    assert_equal(1, BigDecimal("1"))
-    assert_equal(1, BigDecimal("1", 1))
-    assert_equal(1, BigDecimal(" 1 "))
-    assert_equal(111, BigDecimal("1_1_1_"))
-    assert_equal(10**(-1), BigDecimal("1E-1"), '#4825')
-
-    assert_raise(ArgumentError, /"_1_1_1"/) { BigDecimal("_1_1_1") }
-
-    BigDecimal.mode(BigDecimal::EXCEPTION_OVERFLOW, false)
-    BigDecimal.mode(BigDecimal::EXCEPTION_NaN, false)
-    assert_positive_infinite(BigDecimal("Infinity"))
-    assert_negative_infinite(BigDecimal("-Infinity"))
-    assert_nan(BigDecimal("NaN"))
-    assert_positive_infinite(BigDecimal("1E1111111111111111111"))
-  end
-
-  def test_new_with_integer
-    assert_equal(BigDecimal("1"), BigDecimal(1))
-    assert_equal(BigDecimal("-1"), BigDecimal(-1))
-    assert_equal(BigDecimal((2**100).to_s), BigDecimal(2**100))
-    assert_equal(BigDecimal((-2**100).to_s), BigDecimal(-2**100))
-  end
-
-  def test_new_with_rational
-    assert_equal(BigDecimal("0.333333333333333333333"), BigDecimal(1.quo(3), 21))
-    assert_equal(BigDecimal("-0.333333333333333333333"), BigDecimal(-1.quo(3), 21))
-    assert_raise(ArgumentError) { BigDecimal(1.quo(3)) }
+  def test_BigDecimal_with_exception_keyword
+    assert_raise(ArgumentError) {
+      BigDecimal('.', exception: true)
+    }
+    assert_nothing_raised(ArgumentError) {
+      assert_equal(nil, BigDecimal(".", exception: false))
+    }
+    assert_raise(ArgumentError) {
+      BigDecimal("1", -1, exception: true)
+    }
+    assert_nothing_raised(ArgumentError) {
+      assert_equal(nil, BigDecimal("1", -1, exception: false))
+    }
+    assert_raise(ArgumentError) {
+      BigDecimal(42.quo(7), exception: true)
+    }
+    assert_nothing_raised(ArgumentError) {
+      assert_equal(nil, BigDecimal(42.quo(7), exception: false))
+    }
+    assert_raise(ArgumentError) {
+      BigDecimal(4.2, exception: true)
+    }
+    assert_nothing_raised(ArgumentError) {
+      assert_equal(nil, BigDecimal(4.2, exception: false))
+    }
+    # TODO: support conversion from complex
+    # assert_raise(RangeError) {
+    #   BigDecimal(1i, exception: true)
+    # }
+    # assert_nothing_raised(RangeError) {
+    #   assert_equal(nil, BigDecimal(1i, exception: false))
+    # }
+    assert_raise(TypeError) {
+      BigDecimal(nil, exception: true)
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, BigDecimal(nil, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, BigDecimal(:test, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, BigDecimal(Object.new, exception: false))
+    }
+    # TODO: support to_d
+    # assert_nothing_raised(TypeError) {
+    #   o = Object.new
+    #   def o.to_d; 3.14; end
+    #   assert_equal(3.14, BigDecimal(o, exception: false))
+    # }
+    # assert_nothing_raised(RuntimeError) {
+    #   o = Object.new
+    #   def o.to_d; raise; end
+    #   assert_equal(nil, BigDecimal(o, exception: false))
+    # }
   end
 
-  def test_new_with_float
-    assert_equal(BigDecimal("0.1235"), BigDecimal(0.1234567, 4))
-    assert_equal(BigDecimal("-0.1235"), BigDecimal(-0.1234567, 4))
-    assert_raise(ArgumentError) { BigDecimal(0.1) }
-    assert_raise(ArgumentError) { BigDecimal(0.1, Float::DIG + 2) }
-    assert_nothing_raised { BigDecimal(0.1, Float::DIG + 1) }
+  def test_s_ver
+    assert_raise_with_message(NoMethodError, /undefined method `ver'/) { BigDecimal.ver }
   end
 
-  def test_new_with_big_decimal
-    assert_equal(BigDecimal(1), BigDecimal(BigDecimal(1)))
-    assert_equal(BigDecimal('+0'), BigDecimal(BigDecimal('+0')))
-    assert_equal(BigDecimal('-0'), BigDecimal(BigDecimal('-0')))
-    BigDecimal.save_exception_mode do
-      BigDecimal.mode(BigDecimal::EXCEPTION_OVERFLOW, false)
-      BigDecimal.mode(BigDecimal::EXCEPTION_NaN, false)
-      assert_positive_infinite(BigDecimal(BigDecimal('Infinity')))
-      assert_negative_infinite(BigDecimal(BigDecimal('-Infinity')))
-      assert_nan(BigDecimal(BigDecimal('NaN')))
-    end
+  def test_s_allocate
+    assert_raise_with_message(NoMethodError, /undefined method `allocate'/) { BigDecimal.allocate }
   end
 
-  def test_new_with_tainted_string
-    Thread.new {
-      $SAFE = 1
-      BigDecimal('1'.taint)
-    }.join
+  def test_s_new
+    # TODO: BigDecimal.new will be removed on 1.5
+    # assert_raise_with_message(NoMethodError, /undefined method `new'/) { BigDecimal.new("1") }
+    verbose, $VERBOSE = $VERBOSE, nil
+    assert_equal(BigDecimal(1), BigDecimal.new(1))
+    assert_raise(ArgumentError) { BigDecimal.new(',', exception: true) }
+    assert_nothing_raised { assert_equal(nil, BigDecimal.new(',', exception: false)) }
+    assert_raise(TypeError) { BigDecimal.new(nil, exception: true) }
+    assert_nothing_raised { assert_equal(nil, BigDecimal.new(nil, exception: false)) }
+  ensure
+    $VERBOSE = verbose
   end
 
   def _test_mode(type)
@@ -1774,6 +1806,12 @@ def test_BigMath_log_under_gc_stress
     EOS
   end
 
+  def test_frozen_p
+    x = BigDecimal(1)
+    assert(x.frozen?)
+    assert((x + x).frozen?)
+  end
+
   def test_clone
     assert_warning(/^$/) do
       x = BigDecimal(0)
@@ -1791,14 +1829,17 @@ def test_dup
   end
 
   def test_dup_subclass
-    assert_warning(/BigDecimal\.new is deprecated/) do
-      c = Class.new(BigDecimal)
-      x = c.new(1)
-      y = x.dup
-      assert_same(x, y)
-      assert_equal(1, y)
-      assert_kind_of(c, y)
-    end
+    c = Class.new(BigDecimal)
+    # TODO: BigDecimal.new will be removed on 1.5
+    # assert_raise_with_message(NoMethodError, /undefined method `new'/) { c.new(1) }
+    verbose, $VERBOSE = $VERBOSE, nil
+    assert_equal(BigDecimal(1), c.new(1))
+    assert_raise(ArgumentError) { c.new(',', exception: true) }
+    assert_nothing_raised { assert_equal(nil, c.new(',', exception: false)) }
+    assert_raise(TypeError) { c.new(nil, exception: true) }
+    assert_nothing_raised { assert_equal(nil, c.new(nil, exception: false)) }
+  ensure
+    $VERBOSE = verbose
   end
 
   def test_to_d
@@ -1830,7 +1871,7 @@ def test_no_memory_leak_initialize
       assert_no_memory_leak("BigDecimal()")
     end
 
-    def test_no_memory_leak_global_new
+    def test_no_memory_leak_BigDecimal
       assert_no_memory_leak("BigDecimal('10')")
       assert_no_memory_leak("BigDecimal(b)")
     end
diff --git a/test/mri/bigdecimal/test_bigdecimal_util.rb b/test/mri/bigdecimal/test_bigdecimal_util.rb
index fd457f6bf5f..bb9ed831857 100644
--- a/test/mri/bigdecimal/test_bigdecimal_util.rb
+++ b/test/mri/bigdecimal/test_bigdecimal_util.rb
@@ -12,6 +12,8 @@ def test_BigDecimal_to_d
   def test_Integer_to_d
     assert_equal(BigDecimal(1), 1.to_d)
     assert_equal(BigDecimal(2<<100), (2<<100).to_d)
+
+    assert(1.to_d.frozen?)
   end
 
   def test_Float_to_d_without_precision
@@ -22,6 +24,11 @@ def test_Float_to_d_without_precision
 
     bug9214 = '[ruby-core:58858]'
     assert_equal((-0.0).to_d.sign, -1, bug9214)
+
+    assert_raise(TypeError) { 0.3.to_d(nil) }
+    assert_raise(TypeError) { 0.3.to_d(false) }
+
+    assert(1.1.to_d.frozen?)
   end
 
   def test_Float_to_d_with_precision
@@ -32,6 +39,8 @@ def test_Float_to_d_with_precision
 
     bug9214 = '[ruby-core:58858]'
     assert_equal((-0.0).to_d(digits).sign, -1, bug9214)
+
+    assert(1.1.to_d(digits).frozen?)
   end
 
   def test_Rational_to_d
@@ -39,6 +48,8 @@ def test_Rational_to_d
     delta = 1.0/10**(digits)
     assert_in_delta(BigDecimal(1.quo(2), digits), 1.quo(2).to_d(digits), delta)
     assert_in_delta(BigDecimal(355.quo(113), digits), 355.quo(113).to_d(digits), delta)
+
+    assert(355.quo(113).to_d(digits).frozen?)
   end
 
   def test_Rational_to_d_with_zero_precision
@@ -50,11 +61,31 @@ def test_Rational_to_d_with_negative_precision
   end
 
   def test_String_to_d
-    assert_equal("2.5".to_d, BigDecimal('2.5'))
+    assert_equal(BigDecimal('1'), "1__1_1".to_d)
+    assert_equal(BigDecimal('2.5'), "2.5".to_d)
+    assert_equal(BigDecimal('2.5'), "2.5 degrees".to_d)
+    assert_equal(BigDecimal('2.5e1'), "2.5e1 degrees".to_d)
+    assert_equal(BigDecimal('0'), "degrees 100.0".to_d)
+    assert_equal(BigDecimal('0.125'), "0.1_2_5".to_d)
+    assert_equal(BigDecimal('0.125'), "0.1_2_5__".to_d)
+    assert_equal(BigDecimal('1'), "1_.125".to_d)
+    assert_equal(BigDecimal('1'), "1._125".to_d)
+    assert_equal(BigDecimal('0.1'), "0.1__2_5".to_d)
+    assert_equal(BigDecimal('0.1'), "0.1_e10".to_d)
+    assert_equal(BigDecimal('0.1'), "0.1e_10".to_d)
+    assert_equal(BigDecimal('1'), "0.1e1__0".to_d)
+    assert_equal(BigDecimal('1.2'), "1.2.3".to_d)
+
+    assert("2.5".to_d.frozen?)
   end
 
   def test_invalid_String_to_d
     assert_equal("invalid".to_d, BigDecimal('0.0'))
   end
 
+  def test_Nil_to_d
+    assert_equal(nil.to_d, BigDecimal('0.0'))
+
+    assert(nil.to_d)
+  end
 end
diff --git a/test/mri/coverage/test_coverage.rb b/test/mri/coverage/test_coverage.rb
index 940f5d39be7..30523c341a3 100644
--- a/test/mri/coverage/test_coverage.rb
+++ b/test/mri/coverage/test_coverage.rb
@@ -127,15 +127,6 @@ def test_big_code
     }
   end
 
-  def test_nonpositive_linenumber
-    bug12517 = '[ruby-core:76141] [Bug #12517]'
-    assert_in_out_err(%w[-W0 -rcoverage], <<-"end;", ['{"<compiled>"=>[nil]}'], [], bug12517)
-      Coverage.start
-      RubyVM::InstructionSequence.compile(":ok", nil, "<compiled>", 0)
-      p Coverage.result
-    end;
-  end
-
   def test_eval
     bug13305 = '[ruby-core:80079] [Bug #13305]'
 
@@ -176,6 +167,20 @@ def foo(x)
     end;
   end
 
+  def test_coverage_optimized_branch
+    result = {
+      :branches => {
+        [:"&.", 0, 1, 0, 1, 8] => {
+          [:then, 1, 1, 0, 1, 8] => 0,
+          [:else, 2, 1, 0, 1, 8] => 1,
+        },
+      },
+    }
+    assert_coverage(<<~"end;", { branches: true }, result) # Bug #15476
+      nil&.foo
+    end;
+  end
+
   def assert_coverage(code, opt, stdout)
     stdout = [stdout] unless stdout.is_a?(Array)
     stdout = stdout.map {|s| s.to_s }
@@ -203,7 +208,7 @@ def assert_coverage(code, opt, stdout)
 
   def test_line_coverage_for_multiple_lines
     result = {
-      :lines => [1, nil, nil, nil, nil, nil, 1, nil, 1, nil, nil, nil, nil, nil, 1, nil, 1, 1, 1, nil, nil, nil, nil, nil, 1]
+      :lines => [nil, 1, nil, nil, nil, 1, nil, nil, nil, 1, nil, 1, nil, nil, nil, nil, 1, 1, nil, 1, nil, nil, nil, nil, 1]
     }
     assert_coverage(<<~"end;", { lines: true }, result) # Bug #14191
       FOO = [
@@ -357,15 +362,22 @@ def foo(x)
   def test_branch_coverage_for_safe_method_invocation
     result = {
       :branches=>{
-        [:"&.", 0, 3, 0, 3, 6] => {[:then, 1, 3, 0, 3, 6]=>1, [:else, 2, 3, 0, 3, 6]=>0},
-        [:"&.", 3, 4, 0, 4, 6] => {[:then, 4, 4, 0, 4, 6]=>0, [:else, 5, 4, 0, 4, 6]=>1},
+        [:"&.", 0, 6, 0, 6,  6] => {[:then,  1, 6, 0, 6,  6]=>1, [:else,  2, 6, 0, 6,  6]=>0},
+        [:"&.", 3, 7, 0, 7,  6] => {[:then,  4, 7, 0, 7,  6]=>0, [:else,  5, 7, 0, 7,  6]=>1},
+        [:"&.", 6, 8, 0, 8, 10] => {[:then,  7, 8, 0, 8, 10]=>1, [:else,  8, 8, 0, 8, 10]=>0},
+        [:"&.", 9, 9, 0, 9, 10] => {[:then, 10, 9, 0, 9, 10]=>0, [:else, 11, 9, 0, 9, 10]=>1},
       }
     }
     assert_coverage(<<~"end;", { branches: true }, result)
-      a = 10
+      class Dummy; def foo; end; def foo=(x); end; end
+      a = Dummy.new
       b = nil
-      a&.abs
-      b&.hoo
+      c = Dummy.new
+      d = nil
+      a&.foo
+      b&.foo
+      c&.foo = 1
+      d&.foo = 1
     end;
   end
 
@@ -492,4 +504,196 @@ class << self
     }
     assert_coverage(code, { methods: true }, result)
   end
+
+  def test_oneshot_line_coverage
+    result = {
+      :oneshot_lines => [2, 6, 10, 12, 17, 18, 25, 20]
+    }
+    assert_coverage(<<~"end;", { oneshot_lines: true }, result)
+      FOO = [
+        { foo: 'bar' }, # 2
+        { bar: 'baz' }
+      ]
+
+      'some string'.split # 6
+                   .map(&:length)
+
+      some =
+        'value' # 10
+
+      Struct.new( # 12
+        :foo,
+        :bar
+      ).new
+
+      class Test # 17
+        def foo(bar) # 18
+          {
+            foo: bar # 20
+          }
+        end
+      end
+
+      Test.new.foo(Object.new) # 25
+    end;
+  end
+
+  def test_clear_with_lines
+    Dir.mktmpdir {|tmp|
+      Dir.chdir(tmp) {
+        File.open("test.rb", "w") do |f|
+          f.puts "def foo(x)"
+          f.puts "  if x > 0"
+          f.puts "    :pos"
+          f.puts "  else"
+          f.puts "    :non_pos"
+          f.puts "  end"
+          f.puts "end"
+        end
+
+        exp = [
+          "{:lines=>[1, 0, 0, nil, 0, nil, nil]}",
+          "{:lines=>[0, 1, 1, nil, 0, nil, nil]}",
+          "{:lines=>[0, 1, 0, nil, 1, nil, nil]}",
+        ]
+        assert_in_out_err(%w[-rcoverage], <<-"end;", exp, [])
+          Coverage.start(lines: true)
+          tmp = Dir.pwd
+          f = tmp + "/test.rb"
+          require f
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(1)
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(-1)
+          p Coverage.result[f]
+        end;
+      }
+    }
+  end
+
+  def test_clear_with_branches
+    Dir.mktmpdir {|tmp|
+      Dir.chdir(tmp) {
+        File.open("test.rb", "w") do |f|
+          f.puts "def foo(x)"
+          f.puts "  if x > 0"
+          f.puts "    :pos"
+          f.puts "  else"
+          f.puts "    :non_pos"
+          f.puts "  end"
+          f.puts "end"
+        end
+
+        exp = [
+          "{:branches=>{[:if, 0, 2, 2, 6, 5]=>{[:then, 1, 3, 4, 3, 8]=>0, [:else, 2, 5, 4, 5, 12]=>0}}}",
+          "{:branches=>{[:if, 0, 2, 2, 6, 5]=>{[:then, 1, 3, 4, 3, 8]=>1, [:else, 2, 5, 4, 5, 12]=>0}}}",
+          "{:branches=>{[:if, 0, 2, 2, 6, 5]=>{[:then, 1, 3, 4, 3, 8]=>0, [:else, 2, 5, 4, 5, 12]=>1}}}",
+          "{:branches=>{[:if, 0, 2, 2, 6, 5]=>{[:then, 1, 3, 4, 3, 8]=>0, [:else, 2, 5, 4, 5, 12]=>1}}}",
+        ]
+        assert_in_out_err(%w[-rcoverage], <<-"end;", exp, [])
+          Coverage.start(branches: true)
+          tmp = Dir.pwd
+          f = tmp + "/test.rb"
+          require f
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(1)
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(-1)
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(-1)
+          p Coverage.result(stop: false, clear: true)[f]
+        end;
+      }
+    }
+  end
+
+  def test_clear_with_methods
+    Dir.mktmpdir {|tmp|
+      Dir.chdir(tmp) {
+        File.open("test.rb", "w") do |f|
+          f.puts "def foo(x)"
+          f.puts "  if x > 0"
+          f.puts "    :pos"
+          f.puts "  else"
+          f.puts "    :non_pos"
+          f.puts "  end"
+          f.puts "end"
+        end
+
+        exp = [
+          "{:methods=>{[Object, :foo, 1, 0, 7, 3]=>0}}",
+          "{:methods=>{[Object, :foo, 1, 0, 7, 3]=>1}}",
+          "{:methods=>{[Object, :foo, 1, 0, 7, 3]=>1}}",
+          "{:methods=>{[Object, :foo, 1, 0, 7, 3]=>1}}"
+        ]
+        assert_in_out_err(%w[-rcoverage], <<-"end;", exp, [])
+          Coverage.start(methods: true)
+          tmp = Dir.pwd
+          f = tmp + "/test.rb"
+          require f
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(1)
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(-1)
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(-1)
+          p Coverage.result(stop: false, clear: true)[f]
+        end;
+      }
+    }
+  end
+
+  def test_clear_with_oneshot_lines
+    Dir.mktmpdir {|tmp|
+      Dir.chdir(tmp) {
+        File.open("test.rb", "w") do |f|
+          f.puts "def foo(x)"
+          f.puts "  if x > 0"
+          f.puts "    :pos"
+          f.puts "  else"
+          f.puts "    :non_pos"
+          f.puts "  end"
+          f.puts "end"
+        end
+
+        exp = [
+          "{:oneshot_lines=>[1]}",
+          "{:oneshot_lines=>[2, 3]}",
+          "{:oneshot_lines=>[5]}",
+          "{:oneshot_lines=>[]}",
+        ]
+        assert_in_out_err(%w[-rcoverage], <<-"end;", exp, [])
+          Coverage.start(oneshot_lines: true)
+          tmp = Dir.pwd
+          f = tmp + "/test.rb"
+          require f
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(1)
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(-1)
+          p Coverage.result(stop: false, clear: true)[f]
+          foo(-1)
+          p Coverage.result(stop: false, clear: true)[f]
+        end;
+      }
+    }
+  end
+
+  def test_line_stub
+    Dir.mktmpdir {|tmp|
+      Dir.chdir(tmp) {
+        File.open("test.rb", "w") do |f|
+          f.puts "def foo(x)"
+          f.puts "  if x > 0"
+          f.puts "    :pos"
+          f.puts "  else"
+          f.puts "    :non_pos"
+          f.puts "  end"
+          f.puts "end"
+        end
+
+        assert_equal([0, 0, 0, nil, 0, nil, nil], Coverage.line_stub("test.rb"))
+      }
+    }
+  end
 end
diff --git a/test/mri/csv/helper.rb b/test/mri/csv/helper.rb
new file mode 100644
index 00000000000..2542cc9c979
--- /dev/null
+++ b/test/mri/csv/helper.rb
@@ -0,0 +1,18 @@
+require "tempfile"
+require "test/unit"
+
+require "csv"
+
+require_relative "../lib/with_different_ofs.rb"
+
+module Helper
+  def with_chunk_size(chunk_size)
+    chunk_size_keep = ENV["CSV_PARSER_SCANNER_TEST_CHUNK_SIZE"]
+    begin
+      ENV["CSV_PARSER_SCANNER_TEST_CHUNK_SIZE"] = chunk_size
+      yield
+    ensure
+      ENV["CSV_PARSER_SCANNER_TEST_CHUNK_SIZE"] = chunk_size_keep
+    end
+  end
+end
diff --git a/test/mri/csv/interface/test_delegation.rb b/test/mri/csv/interface/test_delegation.rb
new file mode 100644
index 00000000000..349257633bd
--- /dev/null
+++ b/test/mri/csv/interface/test_delegation.rb
@@ -0,0 +1,47 @@
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVInterfaceDelegation < Test::Unit::TestCase
+  class TestStringIO < self
+    def setup
+      @csv = CSV.new("h1,h2")
+    end
+
+    def test_flock
+      assert_raise(NotImplementedError) do
+        @csv.flock(File::LOCK_EX)
+      end
+    end
+
+    def test_ioctl
+      assert_raise(NotImplementedError) do
+        @csv.ioctl(0)
+      end
+    end
+
+    def test_stat
+      assert_raise(NotImplementedError) do
+        @csv.stat
+      end
+    end
+
+    def test_to_i
+      assert_raise(NotImplementedError) do
+        @csv.to_i
+      end
+    end
+
+    def test_binmode?
+      assert_equal(false, @csv.binmode?)
+    end
+
+    def test_path
+      assert_equal(nil, @csv.path)
+    end
+
+    def test_to_io
+      assert_instance_of(StringIO, @csv.to_io)
+    end
+  end
+end
diff --git a/test/mri/csv/interface/test_read.rb b/test/mri/csv/interface/test_read.rb
new file mode 100644
index 00000000000..8fefbbb1725
--- /dev/null
+++ b/test/mri/csv/interface/test_read.rb
@@ -0,0 +1,277 @@
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVInterfaceRead < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def setup
+    super
+    @data = ""
+    @data << "1\t2\t3\r\n"
+    @data << "4\t5\r\n"
+    @input = Tempfile.new(["interface-read", ".csv"], binmode: true)
+    @input << @data
+    @input.rewind
+    @rows = [
+      ["1", "2", "3"],
+      ["4", "5"],
+    ]
+  end
+
+  def teardown
+    @input.close(true)
+    super
+  end
+
+  def test_foreach
+    rows = []
+    CSV.foreach(@input.path, col_sep: "\t", row_sep: "\r\n").each do |row|
+      rows << row
+    end
+    assert_equal(@rows, rows)
+  end
+
+  def test_foreach_mode
+    rows = []
+    CSV.foreach(@input.path, "r", col_sep: "\t", row_sep: "\r\n").each do |row|
+      rows << row
+    end
+    assert_equal(@rows, rows)
+  end
+
+  def test_foreach_enumurator
+    rows = CSV.foreach(@input.path, col_sep: "\t", row_sep: "\r\n").to_a
+    assert_equal(@rows, rows)
+  end
+
+  def test_closed?
+    csv = CSV.open(@input.path, "r+", col_sep: "\t", row_sep: "\r\n")
+    assert_not_predicate(csv, :closed?)
+    csv.close
+    assert_predicate(csv, :closed?)
+  end
+
+  def test_open_auto_close
+    csv = nil
+    CSV.open(@input.path) do |_csv|
+      csv = _csv
+    end
+    assert_predicate(csv, :closed?)
+  end
+
+  def test_open_closed
+    csv = nil
+    CSV.open(@input.path) do |_csv|
+      csv = _csv
+      csv.close
+    end
+    assert_predicate(csv, :closed?)
+  end
+
+  def test_open_block_return_value
+    return_value = CSV.open(@input.path) do
+      "Return value."
+    end
+    assert_equal("Return value.", return_value)
+  end
+
+  def test_open_encoding_valid
+    # U+1F600 GRINNING FACE
+    # U+1F601 GRINNING FACE WITH SMILING EYES
+    File.open(@input.path, "w") do |file|
+      file << "\u{1F600},\u{1F601}"
+    end
+    CSV.open(@input.path, encoding: "utf-8") do |csv|
+      assert_equal([["\u{1F600}", "\u{1F601}"]],
+                   csv.to_a)
+    end
+  end
+
+  def test_open_encoding_invalid
+    # U+1F600 GRINNING FACE
+    # U+1F601 GRINNING FACE WITH SMILING EYES
+    File.open(@input.path, "w") do |file|
+      file << "\u{1F600},\u{1F601}"
+    end
+    CSV.open(@input.path, encoding: "EUC-JP") do |csv|
+      error = assert_raise(CSV::MalformedCSVError) do
+        csv.shift
+      end
+      assert_equal("Invalid byte sequence in EUC-JP in line 1.",
+                   error.message)
+    end
+  end
+
+  def test_open_encoding_nonexistent
+    _output, error = capture_io do
+      CSV.open(@input.path, encoding: "nonexistent") do
+      end
+    end
+    assert_equal("path:0: warning: Unsupported encoding nonexistent ignored\n",
+                 error.gsub(/\A.+:\d+: /, "path:0: "))
+  end
+
+  def test_open_encoding_utf_8_with_bom
+    # U+FEFF ZERO WIDTH NO-BREAK SPACE, BOM
+    # U+1F600 GRINNING FACE
+    # U+1F601 GRINNING FACE WITH SMILING EYES
+    File.open(@input.path, "w") do |file|
+      file << "\u{FEFF}\u{1F600},\u{1F601}"
+    end
+    CSV.open(@input.path, encoding: "bom|utf-8") do |csv|
+      assert_equal([["\u{1F600}", "\u{1F601}"]],
+                   csv.to_a)
+    end
+  end
+
+  def test_parse
+    assert_equal(@rows,
+                 CSV.parse(@data, col_sep: "\t", row_sep: "\r\n"))
+  end
+
+  def test_parse_block
+    rows = []
+    CSV.parse(@data, col_sep: "\t", row_sep: "\r\n") do |row|
+      rows << row
+    end
+    assert_equal(@rows, rows)
+  end
+
+  def test_parse_enumerator
+    rows = CSV.parse(@data, col_sep: "\t", row_sep: "\r\n").to_a
+    assert_equal(@rows, rows)
+  end
+
+  def test_parse_headers_only
+    table = CSV.parse("a,b,c", headers: true)
+    assert_equal([
+                   ["a", "b", "c"],
+                   [],
+                 ],
+                 [
+                   table.headers,
+                   table.each.to_a,
+                 ])
+  end
+
+  def test_parse_line
+    assert_equal(["1", "2", "3"],
+                 CSV.parse_line("1;2;3", col_sep: ";"))
+  end
+
+  def test_parse_line_shortcut
+    assert_equal(["1", "2", "3"],
+                 "1;2;3".parse_csv(col_sep: ";"))
+  end
+
+  def test_parse_line_empty
+    assert_equal(nil, CSV.parse_line(""))  # to signal eof
+  end
+
+  def test_parse_line_empty_line
+    assert_equal([], CSV.parse_line("\n1,2,3"))
+  end
+
+  def test_read
+    assert_equal(@rows,
+                 CSV.read(@input.path, col_sep: "\t", row_sep: "\r\n"))
+  end
+
+  def test_readlines
+    assert_equal(@rows,
+                 CSV.readlines(@input.path, col_sep: "\t", row_sep: "\r\n"))
+  end
+
+  def test_open_read
+    rows = CSV.open(@input.path, col_sep: "\t", row_sep: "\r\n") do |csv|
+      csv.read
+    end
+    assert_equal(@rows, rows)
+  end
+
+  def test_open_readlines
+    rows = CSV.open(@input.path, col_sep: "\t", row_sep: "\r\n") do |csv|
+      csv.readlines
+    end
+    assert_equal(@rows, rows)
+  end
+
+  def test_table
+    table = CSV.table(@input.path, col_sep: "\t", row_sep: "\r\n")
+    assert_equal(CSV::Table.new([
+                                  CSV::Row.new([:"1", :"2", :"3"], [4, 5, nil]),
+                                ]),
+                 table)
+  end
+
+  def test_shift  # aliased as gets() and readline()
+    CSV.open(@input.path, "rb+", col_sep: "\t", row_sep: "\r\n") do |csv|
+      rows = [
+        csv.shift,
+        csv.shift,
+        csv.shift,
+      ]
+      assert_equal(@rows + [nil],
+                   rows)
+    end
+  end
+
+  def test_enumerator
+    CSV.open(@input.path, col_sep: "\t", row_sep: "\r\n") do |csv|
+      assert_equal(@rows, csv.each.to_a)
+    end
+  end
+
+  def test_shift_and_each
+    CSV.open(@input.path, col_sep: "\t", row_sep: "\r\n") do |csv|
+      rows = []
+      rows << csv.shift
+      rows.concat(csv.each.to_a)
+      assert_equal(@rows, rows)
+    end
+  end
+
+  def test_each_twice
+    CSV.open(@input.path, col_sep: "\t", row_sep: "\r\n") do |csv|
+      assert_equal([
+                     @rows,
+                     [],
+                   ],
+                   [
+                     csv.each.to_a,
+                     csv.each.to_a,
+                   ])
+    end
+  end
+
+  def test_eof?
+    eofs = []
+    CSV.open(@input.path, col_sep: "\t", row_sep: "\r\n") do |csv|
+      eofs << csv.eof?
+      csv.shift
+      eofs << csv.eof?
+      csv.shift
+      eofs << csv.eof?
+    end
+    assert_equal([false, false, true],
+                 eofs)
+  end
+
+  def test_new_nil
+    assert_raise_with_message ArgumentError, "Cannot parse nil as CSV" do
+      CSV.new(nil)
+    end
+  end
+
+  def test_options_not_modified
+    options = {}.freeze
+    CSV.foreach(@input.path, options)
+    CSV.open(@input.path, options) {}
+    CSV.parse("", options)
+    CSV.parse_line("", options)
+    CSV.read(@input.path, options)
+    CSV.readlines(@input.path, options)
+    CSV.table(@input.path, options)
+  end
+end
diff --git a/test/mri/csv/interface/test_read_write.rb b/test/mri/csv/interface/test_read_write.rb
new file mode 100644
index 00000000000..9ce3553d61b
--- /dev/null
+++ b/test/mri/csv/interface/test_read_write.rb
@@ -0,0 +1,51 @@
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVInterfaceReadWrite < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def test_filter
+    rows = [[1, 2, 3], [4, 5]]
+    input = <<-CSV
+1;2;3
+4;5
+    CSV
+    output = ""
+    CSV.filter(input, output,
+               in_col_sep: ";",
+               out_col_sep: ",",
+               converters: :all) do |row|
+      row.map! {|n| n * 2}
+      row << "Added\r"
+    end
+    assert_equal(<<-CSV, output)
+2,4,6,"Added\r"
+8,10,"Added\r"
+    CSV
+  end
+
+  def test_instance_same
+    data = ""
+    assert_equal(CSV.instance(data, col_sep: ";").object_id,
+                 CSV.instance(data, col_sep: ";").object_id)
+  end
+
+  def test_instance_append
+    output = ""
+    CSV.instance(output, col_sep: ";") << ["a", "b", "c"]
+    assert_equal(<<-CSV, output)
+a;b;c
+    CSV
+    CSV.instance(output, col_sep: ";") << [1, 2, 3]
+    assert_equal(<<-CSV, output)
+a;b;c
+1;2;3
+    CSV
+  end
+
+  def test_instance_shortcut
+    assert_equal(CSV.instance,
+                 CSV {|csv| csv})
+  end
+end
diff --git a/test/mri/csv/interface/test_write.rb b/test/mri/csv/interface/test_write.rb
new file mode 100644
index 00000000000..8511204ef0c
--- /dev/null
+++ b/test/mri/csv/interface/test_write.rb
@@ -0,0 +1,174 @@
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVInterfaceWrite < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def setup
+    super
+    @output = Tempfile.new(["interface-write", ".csv"])
+  end
+
+  def teardown
+    @output.close(true)
+    super
+  end
+
+  def test_generate_default
+    csv_text = CSV.generate do |csv|
+      csv << [1, 2, 3] << [4, nil, 5]
+    end
+    assert_equal(<<-CSV, csv_text)
+1,2,3
+4,,5
+    CSV
+  end
+
+  def test_generate_append
+    csv_text = <<-CSV
+1,2,3
+4,,5
+    CSV
+    CSV.generate(csv_text) do |csv|
+      csv << ["last", %Q{"row"}]
+    end
+    assert_equal(<<-CSV, csv_text)
+1,2,3
+4,,5
+last,"""row"""
+    CSV
+  end
+
+  def test_generate_no_new_line
+    csv_text = CSV.generate("test") do |csv|
+      csv << ["row"]
+    end
+    assert_equal(<<-CSV, csv_text)
+testrow
+    CSV
+  end
+
+  def test_generate_line_col_sep
+    line = CSV.generate_line(["1", "2", "3"], col_sep: ";")
+    assert_equal(<<-LINE, line)
+1;2;3
+    LINE
+  end
+
+  def test_generate_line_row_sep
+    line = CSV.generate_line(["1", "2"], row_sep: nil)
+    assert_equal(<<-LINE.chomp, line)
+1,2
+    LINE
+  end
+
+  def test_generate_line_shortcut
+    line = ["1", "2", "3"].to_csv(col_sep: ";")
+    assert_equal(<<-LINE, line)
+1;2;3
+    LINE
+  end
+
+  def test_headers_detection
+    headers = ["a", "b", "c"]
+    CSV.open(@output.path, "w", headers: true) do |csv|
+      csv << headers
+      csv << ["1", "2", "3"]
+      assert_equal(headers, csv.headers)
+    end
+  end
+
+  def test_lineno
+    CSV.open(@output.path, "w") do |csv|
+      n_lines = 20
+      n_lines.times do
+        csv << ["a", "b", "c"]
+      end
+      assert_equal(n_lines, csv.lineno)
+    end
+  end
+
+  def test_append_row
+    CSV.open(@output.path, "wb") do |csv|
+      csv <<
+        CSV::Row.new([], ["1", "2", "3"]) <<
+        CSV::Row.new([], ["a", "b", "c"])
+    end
+    assert_equal(<<-CSV, File.read(@output.path, mode: "rb"))
+1,2,3
+a,b,c
+    CSV
+  end
+
+  def test_append_hash
+    CSV.open(@output.path, "wb", headers: true) do |csv|
+      csv << [:a, :b, :c]
+      csv << {a: 1, b: 2, c: 3}
+      csv << {a: 4, b: 5, c: 6}
+    end
+    assert_equal(<<-CSV, File.read(@output.path, mode: "rb"))
+a,b,c
+1,2,3
+4,5,6
+    CSV
+  end
+
+  def test_append_hash_headers_array
+    CSV.open(@output.path, "wb", headers: [:b, :a, :c]) do |csv|
+      csv << {a: 1, b: 2, c: 3}
+      csv << {a: 4, b: 5, c: 6}
+    end
+    assert_equal(<<-CSV, File.read(@output.path, mode: "rb"))
+2,1,3
+5,4,6
+    CSV
+  end
+
+  def test_append_hash_headers_string
+    CSV.open(@output.path, "wb", headers: "b|a|c", col_sep: "|") do |csv|
+      csv << {"a" => 1, "b" => 2, "c" => 3}
+      csv << {"a" => 4, "b" => 5, "c" => 6}
+    end
+    assert_equal(<<-CSV, File.read(@output.path, mode: "rb"))
+2|1|3
+5|4|6
+    CSV
+  end
+
+  def test_write_headers
+    CSV.open(@output.path,
+             "wb",
+             headers:       "b|a|c",
+             write_headers: true,
+             col_sep:       "|" ) do |csv|
+      csv << {"a" => 1, "b" => 2, "c" => 3}
+      csv << {"a" => 4, "b" => 5, "c" => 6}
+    end
+    assert_equal(<<-CSV, File.read(@output.path, mode: "rb"))
+b|a|c
+2|1|3
+5|4|6
+    CSV
+  end
+
+  def test_write_headers_empty
+    CSV.open(@output.path,
+             "wb",
+             headers:       "b|a|c",
+             write_headers: true,
+             col_sep:       "|" ) do |csv|
+    end
+    assert_equal(<<-CSV, File.read(@output.path, mode: "rb"))
+b|a|c
+    CSV
+  end
+
+  def test_options_not_modified
+    options = {}.freeze
+    CSV.generate(options) {}
+    CSV.generate_line([], options)
+    CSV.filter("", "", options)
+    CSV.instance("", options)
+  end
+end
diff --git a/test/mri/csv/parse/test_column_separator.rb b/test/mri/csv/parse/test_column_separator.rb
new file mode 100644
index 00000000000..d6eaa7b6de4
--- /dev/null
+++ b/test/mri/csv/parse/test_column_separator.rb
@@ -0,0 +1,40 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseColumnSeparator < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def test_comma
+    assert_equal([["a", "b", nil, "d"]],
+                 CSV.parse("a,b,,d", col_sep: ","))
+  end
+
+  def test_space
+    assert_equal([["a", "b", nil, "d"]],
+                 CSV.parse("a b  d", col_sep: " "))
+  end
+
+  def test_tab
+    assert_equal([["a", "b", nil, "d"]],
+                 CSV.parse("a\tb\t\td", col_sep: "\t"))
+  end
+
+  def test_multiple_characters_include_sub_separator
+    assert_equal([["a b", nil, "d"]],
+                 CSV.parse("a b    d", col_sep: "  "))
+  end
+
+  def test_multiple_characters_leading_empty_fields
+    data = <<-CSV
+<=><=>A<=>B<=>C
+1<=>2<=>3
+    CSV
+    assert_equal([
+                   [nil, nil, "A", "B", "C"],
+                   ["1", "2", "3"],
+                 ],
+                 CSV.parse(data, col_sep: "<=>"))
+  end
+end
diff --git a/test/mri/csv/parse/test_convert.rb b/test/mri/csv/parse/test_convert.rb
new file mode 100644
index 00000000000..bfe6ddd527c
--- /dev/null
+++ b/test/mri/csv/parse/test_convert.rb
@@ -0,0 +1,110 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseConvert < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def setup
+    super
+    @data   = "Numbers,:integer,1,:float,3.015"
+    @parser = CSV.new(@data)
+
+    @custom = lambda {|field| /\A:(\S.*?)\s*\Z/ =~ field ? $1.to_sym : field}
+
+    @time = Time.utc(2018, 12, 30, 6, 41, 29)
+    @windows_safe_time_data = @time.strftime("%a %b %d %H:%M:%S %Y")
+  end
+
+  def test_integer
+    @parser.convert(:integer)
+    assert_equal(["Numbers", ":integer", 1, ":float", "3.015"],
+                 @parser.shift)
+  end
+
+  def test_float
+    @parser.convert(:float)
+    assert_equal(["Numbers", ":integer", 1.0, ":float", 3.015],
+                 @parser.shift)
+  end
+
+  def test_float_integer
+    @parser.convert(:float)
+    @parser.convert(:integer)
+    assert_equal(["Numbers", ":integer", 1.0, ":float", 3.015],
+                 @parser.shift)
+  end
+
+  def test_integer_float
+    @parser.convert(:integer)
+    @parser.convert(:float)
+    assert_equal(["Numbers", ":integer", 1, ":float", 3.015],
+                 @parser.shift)
+  end
+
+  def test_numberic
+    @parser.convert(:numeric)
+    assert_equal(["Numbers", ":integer", 1, ":float", 3.015],
+                 @parser.shift)
+  end
+
+  def test_all
+    @data   << ",#{@windows_safe_time_data}"
+    @parser =  CSV.new(@data)
+    @parser.convert(:all)
+    assert_equal(["Numbers", ":integer", 1, ":float", 3.015, @time.to_datetime],
+                 @parser.shift)
+  end
+
+  def test_custom
+    @parser.convert do |field|
+      /\A:(\S.*?)\s*\Z/ =~ field ? $1.to_sym : field
+    end
+    assert_equal(["Numbers", :integer, "1", :float, "3.015"],
+                 @parser.shift)
+  end
+
+  def test_builtin_custom
+    @parser.convert(:numeric)
+    @parser.convert(&@custom)
+    assert_equal(["Numbers", :integer, 1, :float, 3.015],
+                 @parser.shift)
+  end
+
+  def test_custom_field_info_line
+    @parser.convert do |field, info|
+      assert_equal(1, info.line)
+      info.index == 4 ? Float(field).floor : field
+    end
+    assert_equal(["Numbers", ":integer", "1", ":float", 3],
+                 @parser.shift)
+  end
+
+  def test_custom_field_info_header
+    headers = ["one", "two", "three", "four", "five"]
+    @parser = CSV.new(@data, headers: headers)
+    @parser.convert do |field, info|
+      info.header == "three" ? Integer(field) * 100 : field
+    end
+    assert_equal(CSV::Row.new(headers,
+                              ["Numbers", ":integer", 100, ":float", "3.015"]),
+                 @parser.shift)
+  end
+
+  def test_custom_blank_field
+    converter = lambda {|field| field.nil?}
+    row = CSV.parse_line('nil,', converters: converter)
+    assert_equal([false, true], row)
+  end
+
+  def test_nil_value
+    assert_equal(["nil", "", "a"],
+                 CSV.parse_line(',"",a', nil_value: "nil"))
+  end
+
+  def test_empty_value
+    assert_equal([nil, "empty", "a"],
+                 CSV.parse_line(',"",a', empty_value: "empty"))
+  end
+end
diff --git a/test/mri/csv/parse/test_each.rb b/test/mri/csv/parse/test_each.rb
new file mode 100644
index 00000000000..ce0b71d0581
--- /dev/null
+++ b/test/mri/csv/parse/test_each.rb
@@ -0,0 +1,23 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseEach < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def test_twice
+    data = <<-CSV
+Ruby,2.6.0,script
+    CSV
+    csv = CSV.new(data)
+    assert_equal([
+                   [["Ruby", "2.6.0", "script"]],
+                   [],
+                 ],
+                 [
+                   csv.to_a,
+                   csv.to_a,
+                 ])
+  end
+end
diff --git a/test/mri/csv/parse/test_general.rb b/test/mri/csv/parse/test_general.rb
new file mode 100644
index 00000000000..49222c7159a
--- /dev/null
+++ b/test/mri/csv/parse/test_general.rb
@@ -0,0 +1,245 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require "timeout"
+
+require_relative "../helper"
+
+#
+# Following tests are my interpretation of the
+# {CSV RCF}[http://www.ietf.org/rfc/rfc4180.txt].  I only deviate from that
+# document in one place (intentionally) and that is to make the default row
+# separator <tt>$/</tt>.
+#
+class TestCSVParseGeneral < Test::Unit::TestCase
+  extend DifferentOFS
+
+  BIG_DATA = "123456789\n" * 1024
+
+  def test_mastering_regex_example
+    ex = %Q{Ten Thousand,10000, 2710 ,,"10,000","It's ""10 Grand"", baby",10K}
+    assert_equal( [ "Ten Thousand", "10000", " 2710 ", nil, "10,000",
+                    "It's \"10 Grand\", baby", "10K" ],
+                  CSV.parse_line(ex) )
+  end
+
+  # Old Ruby 1.8 CSV library tests.
+  def test_std_lib_csv
+    [ ["\t", ["\t"]],
+      ["foo,\"\"\"\"\"\",baz", ["foo", "\"\"", "baz"]],
+      ["foo,\"\"\"bar\"\"\",baz", ["foo", "\"bar\"", "baz"]],
+      ["\"\"\"\n\",\"\"\"\n\"", ["\"\n", "\"\n"]],
+      ["foo,\"\r\n\",baz", ["foo", "\r\n", "baz"]],
+      ["\"\"", [""]],
+      ["foo,\"\"\"\",baz", ["foo", "\"", "baz"]],
+      ["foo,\"\r.\n\",baz", ["foo", "\r.\n", "baz"]],
+      ["foo,\"\r\",baz", ["foo", "\r", "baz"]],
+      ["foo,\"\",baz", ["foo", "", "baz"]],
+      ["\",\"", [","]],
+      ["foo", ["foo"]],
+      [",,", [nil, nil, nil]],
+      [",", [nil, nil]],
+      ["foo,\"\n\",baz", ["foo", "\n", "baz"]],
+      ["foo,,baz", ["foo", nil, "baz"]],
+      ["\"\"\"\r\",\"\"\"\r\"", ["\"\r", "\"\r"]],
+      ["\",\",\",\"", [",", ","]],
+      ["foo,bar,", ["foo", "bar", nil]],
+      [",foo,bar", [nil, "foo", "bar"]],
+      ["foo,bar", ["foo", "bar"]],
+      [";", [";"]],
+      ["\t,\t", ["\t", "\t"]],
+      ["foo,\"\r\n\r\",baz", ["foo", "\r\n\r", "baz"]],
+      ["foo,\"\r\n\n\",baz", ["foo", "\r\n\n", "baz"]],
+      ["foo,\"foo,bar\",baz", ["foo", "foo,bar", "baz"]],
+      [";,;", [";", ";"]] ].each do |csv_test|
+      assert_equal(csv_test.last, CSV.parse_line(csv_test.first))
+    end
+
+    [ ["foo,\"\"\"\"\"\",baz", ["foo", "\"\"", "baz"]],
+      ["foo,\"\"\"bar\"\"\",baz", ["foo", "\"bar\"", "baz"]],
+      ["foo,\"\r\n\",baz", ["foo", "\r\n", "baz"]],
+      ["\"\"", [""]],
+      ["foo,\"\"\"\",baz", ["foo", "\"", "baz"]],
+      ["foo,\"\r.\n\",baz", ["foo", "\r.\n", "baz"]],
+      ["foo,\"\r\",baz", ["foo", "\r", "baz"]],
+      ["foo,\"\",baz", ["foo", "", "baz"]],
+      ["foo", ["foo"]],
+      [",,", [nil, nil, nil]],
+      [",", [nil, nil]],
+      ["foo,\"\n\",baz", ["foo", "\n", "baz"]],
+      ["foo,,baz", ["foo", nil, "baz"]],
+      ["foo,bar", ["foo", "bar"]],
+      ["foo,\"\r\n\n\",baz", ["foo", "\r\n\n", "baz"]],
+      ["foo,\"foo,bar\",baz", ["foo", "foo,bar", "baz"]] ].each do |csv_test|
+      assert_equal(csv_test.last, CSV.parse_line(csv_test.first))
+    end
+  end
+
+  # From:  http://ruby-talk.org/cgi-bin/scat.rb/ruby/ruby-core/6496
+  def test_aras_edge_cases
+    [ [%Q{a,b},               ["a", "b"]],
+      [%Q{a,"""b"""},         ["a", "\"b\""]],
+      [%Q{a,"""b"},           ["a", "\"b"]],
+      [%Q{a,"b"""},           ["a", "b\""]],
+      [%Q{a,"\nb"""},         ["a", "\nb\""]],
+      [%Q{a,"""\nb"},         ["a", "\"\nb"]],
+      [%Q{a,"""\nb\n"""},     ["a", "\"\nb\n\""]],
+      [%Q{a,"""\nb\n""",\nc}, ["a", "\"\nb\n\"", nil]],
+      [%Q{a,,,},              ["a", nil, nil, nil]],
+      [%Q{,},                 [nil, nil]],
+      [%Q{"",""},             ["", ""]],
+      [%Q{""""},              ["\""]],
+      [%Q{"""",""},           ["\"",""]],
+      [%Q{,""},               [nil,""]],
+      [%Q{,"\r"},             [nil,"\r"]],
+      [%Q{"\r\n,"},           ["\r\n,"]],
+      [%Q{"\r\n,",},          ["\r\n,", nil]] ].each do |edge_case|
+        assert_equal(edge_case.last, CSV.parse_line(edge_case.first))
+      end
+  end
+
+  def test_james_edge_cases
+    # A read at eof? should return nil.
+    assert_equal(nil, CSV.parse_line(""))
+    #
+    # With Ruby 1.8 CSV it's impossible to tell an empty line from a line
+    # containing a single +nil+ field.  The old CSV library returns
+    # <tt>[nil]</tt> in these cases, but <tt>Array.new</tt> makes more sense to
+    # me.
+    #
+    assert_equal(Array.new, CSV.parse_line("\n1,2,3\n"))
+  end
+
+  def test_rob_edge_cases
+    [ [%Q{"a\nb"},                         ["a\nb"]],
+      [%Q{"\n\n\n"},                       ["\n\n\n"]],
+      [%Q{a,"b\n\nc"},                     ['a', "b\n\nc"]],
+      [%Q{,"\r\n"},                        [nil,"\r\n"]],
+      [%Q{,"\r\n."},                       [nil,"\r\n."]],
+      [%Q{"a\na","one newline"},           ["a\na", 'one newline']],
+      [%Q{"a\n\na","two newlines"},        ["a\n\na", 'two newlines']],
+      [%Q{"a\r\na","one CRLF"},            ["a\r\na", 'one CRLF']],
+      [%Q{"a\r\n\r\na","two CRLFs"},       ["a\r\n\r\na", 'two CRLFs']],
+      [%Q{with blank,"start\n\nfinish"\n}, ['with blank', "start\n\nfinish"]],
+    ].each do |edge_case|
+      assert_equal(edge_case.last, CSV.parse_line(edge_case.first))
+    end
+  end
+
+  def test_non_regex_edge_cases
+    # An early version of the non-regex parser fails this test
+    [ [ "foo,\"foo,bar,baz,foo\",\"foo\"",
+        ["foo", "foo,bar,baz,foo", "foo"] ] ].each do |edge_case|
+      assert_equal(edge_case.last, CSV.parse_line(edge_case.first))
+    end
+
+    assert_raise(CSV::MalformedCSVError) do
+      CSV.parse_line("1,\"23\"4\"5\", 6")
+    end
+  end
+
+  def test_malformed_csv_cr_first_line
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse_line("1,2\r,3", row_sep: "\n")
+    end
+    assert_equal("Unquoted fields do not allow new line <\"\\r\"> in line 1.",
+                 error.message)
+  end
+
+  def test_malformed_csv_cr_middle_line
+    csv = <<-CSV
+line,1,abc
+line,2,"def\nghi"
+
+line,4,some\rjunk
+line,5,jkl
+    CSV
+
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse(csv)
+    end
+    assert_equal("Unquoted fields do not allow new line <\"\\r\"> in line 4.",
+                 error.message)
+  end
+
+  def test_malformed_csv_unclosed_quote
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse_line('1,2,"3...')
+    end
+    assert_equal("Unclosed quoted field in line 1.",
+                 error.message)
+  end
+
+  def test_malformed_csv_illegal_quote_middle_line
+    csv = <<-CSV
+line,1,abc
+line,2,"def\nghi"
+
+line,4,8'10"
+line,5,jkl
+    CSV
+
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse(csv)
+    end
+    assert_equal("Illegal quoting in line 4.",
+                 error.message)
+  end
+
+  def test_the_parse_fails_fast_when_it_can_for_unquoted_fields
+    assert_parse_errors_out('valid,fields,bad start"' + BIG_DATA)
+  end
+
+  def test_the_parse_fails_fast_when_it_can_for_unescaped_quotes
+    assert_parse_errors_out('valid,fields,"bad start"unescaped' + BIG_DATA)
+  end
+
+  def test_field_size_limit_controls_lookahead
+    assert_parse_errors_out( 'valid,fields,"' + BIG_DATA + '"',
+                             field_size_limit: 2048 )
+  end
+
+  def test_field_size_limit_in_extended_column_not_exceeding
+    data = <<~DATA
+      "a","b"
+      "
+      2
+      ",""
+    DATA
+    assert_nothing_raised(CSV::MalformedCSVError) do
+      CSV.parse(data, field_size_limit: 4)
+    end
+  end
+
+  def test_field_size_limit_in_extended_column_exceeding
+    data = <<~DATA
+      "a","b"
+      "
+      2345
+      ",""
+    DATA
+    assert_parse_errors_out(data, field_size_limit: 5)
+  end
+
+  def test_row_sep_auto_cr
+    assert_equal([["a"]], CSV.parse("a\r"))
+  end
+
+  def test_row_sep_auto_lf
+    assert_equal([["a"]], CSV.parse("a\n"))
+  end
+
+  def test_row_sep_auto_cr_lf
+    assert_equal([["a"]], CSV.parse("a\r\n"))
+  end
+
+  private
+  def assert_parse_errors_out(*args)
+    assert_raise(CSV::MalformedCSVError) do
+      Timeout.timeout(0.2) do
+        CSV.parse(*args)
+        fail("Parse didn't error out")
+      end
+    end
+  end
+end
diff --git a/test/mri/csv/parse/test_header.rb b/test/mri/csv/parse/test_header.rb
new file mode 100644
index 00000000000..d92d823f617
--- /dev/null
+++ b/test/mri/csv/parse/test_header.rb
@@ -0,0 +1,335 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVHeaders < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def setup
+    super
+    @data = <<-CSV
+first,second,third
+A,B,C
+1,2,3
+    CSV
+  end
+
+  def test_first_row
+    [:first_row, true].each do |setting|  # two names for the same setting
+      # activate headers
+      csv = nil
+      assert_nothing_raised(Exception) do
+        csv = CSV.parse(@data, headers: setting)
+      end
+
+      # first data row - skipping headers
+      row = csv[0]
+      assert_not_nil(row)
+      assert_instance_of(CSV::Row, row)
+      assert_equal([%w{first A}, %w{second B}, %w{third C}], row.to_a)
+
+      # second data row
+      row = csv[1]
+      assert_not_nil(row)
+      assert_instance_of(CSV::Row, row)
+      assert_equal([%w{first 1}, %w{second 2}, %w{third 3}], row.to_a)
+
+      # empty
+      assert_nil(csv[2])
+    end
+  end
+
+  def test_array_of_headers
+    # activate headers
+    csv = nil
+    assert_nothing_raised(Exception) do
+      csv = CSV.parse(@data, headers: [:my, :new, :headers])
+    end
+
+    # first data row - skipping headers
+    row = csv[0]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal( [[:my, "first"], [:new, "second"], [:headers, "third"]],
+                  row.to_a )
+
+    # second data row
+    row = csv[1]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([[:my, "A"], [:new, "B"], [:headers, "C"]], row.to_a)
+
+    # third data row
+    row = csv[2]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([[:my, "1"], [:new, "2"], [:headers, "3"]], row.to_a)
+
+    # empty
+    assert_nil(csv[3])
+
+    # with return and convert
+    assert_nothing_raised(Exception) do
+      csv = CSV.parse( @data, headers:           [:my, :new, :headers],
+                              return_headers:    true,
+                              header_converters: lambda { |h| h.to_s } )
+    end
+    row = csv[0]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([["my", :my], ["new", :new], ["headers", :headers]], row.to_a)
+    assert_predicate(row, :header_row?)
+    assert_not_predicate(row, :field_row?)
+  end
+
+  def test_csv_header_string
+    # activate headers
+    csv = nil
+    assert_nothing_raised(Exception) do
+      csv = CSV.parse(@data, headers: "my,new,headers")
+    end
+
+    # first data row - skipping headers
+    row = csv[0]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([%w{my first}, %w{new second}, %w{headers third}], row.to_a)
+
+    # second data row
+    row = csv[1]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([%w{my A}, %w{new B}, %w{headers C}], row.to_a)
+
+    # third data row
+    row = csv[2]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([%w{my 1}, %w{new 2}, %w{headers 3}], row.to_a)
+
+    # empty
+    assert_nil(csv[3])
+
+    # with return and convert
+    assert_nothing_raised(Exception) do
+      csv = CSV.parse( @data, headers:           "my,new,headers",
+                              return_headers:    true,
+                              header_converters: :symbol )
+    end
+    row = csv[0]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([[:my, "my"], [:new, "new"], [:headers, "headers"]], row.to_a)
+    assert_predicate(row, :header_row?)
+    assert_not_predicate(row, :field_row?)
+  end
+
+  def test_csv_header_string_inherits_separators
+    # parse with custom col_sep
+    csv = nil
+    assert_nothing_raised(Exception) do
+      csv = CSV.parse( @data.tr(",", "|"), col_sep: "|",
+                                           headers: "my|new|headers" )
+    end
+
+    # verify headers were recognized
+    row = csv[0]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([%w{my first}, %w{new second}, %w{headers third}], row.to_a)
+  end
+
+  def test_return_headers
+    # activate headers and request they are returned
+    csv = nil
+    assert_nothing_raised(Exception) do
+      csv = CSV.parse(@data, headers: true, return_headers: true)
+    end
+
+    # header row
+    row = csv[0]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal( [%w{first first}, %w{second second}, %w{third third}],
+                  row.to_a )
+    assert_predicate(row, :header_row?)
+    assert_not_predicate(row, :field_row?)
+
+    # first data row - skipping headers
+    row = csv[1]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([%w{first A}, %w{second B}, %w{third C}], row.to_a)
+    assert_not_predicate(row, :header_row?)
+    assert_predicate(row, :field_row?)
+
+    # second data row
+    row = csv[2]
+    assert_not_nil(row)
+    assert_instance_of(CSV::Row, row)
+    assert_equal([%w{first 1}, %w{second 2}, %w{third 3}], row.to_a)
+    assert_not_predicate(row, :header_row?)
+    assert_predicate(row, :field_row?)
+
+    # empty
+    assert_nil(csv[3])
+  end
+
+  def test_converters
+    # create test data where headers and fields look alike
+    data = <<-CSV
+1,2,3
+1,2,3
+    CSV
+
+    # normal converters do not affect headers
+    csv = CSV.parse( data, headers:        true,
+                           return_headers: true,
+                           converters:     :numeric )
+    assert_equal([%w{1 1}, %w{2 2}, %w{3 3}], csv[0].to_a)
+    assert_equal([["1", 1], ["2", 2], ["3", 3]], csv[1].to_a)
+    assert_nil(csv[2])
+
+    # header converters do affect headers (only)
+    assert_nothing_raised(Exception) do
+      csv = CSV.parse( data, headers:           true,
+                             return_headers:    true,
+                             converters:        :numeric,
+                             header_converters: :symbol )
+    end
+    assert_equal([[:"1", "1"], [:"2", "2"], [:"3", "3"]], csv[0].to_a)
+    assert_equal([[:"1", 1], [:"2", 2], [:"3", 3]], csv[1].to_a)
+    assert_nil(csv[2])
+  end
+
+  def test_builtin_downcase_converter
+    csv = CSV.parse( "One,TWO Three", headers:           true,
+                                      return_headers:    true,
+                                      header_converters: :downcase )
+    assert_equal(%w{one two\ three}, csv.headers)
+  end
+
+  def test_builtin_symbol_converter
+    # Note that the trailing space is intentional
+    csv = CSV.parse( "One,TWO Three ", headers:           true,
+                                       return_headers:    true,
+                                       header_converters: :symbol )
+    assert_equal([:one, :two_three], csv.headers)
+  end
+
+  def test_builtin_symbol_converter_with_punctuation
+    csv = CSV.parse( "One, Two & Three ($)", headers:           true,
+                                             return_headers:    true,
+                                             header_converters: :symbol )
+    assert_equal([:one, :two_three], csv.headers)
+  end
+
+  def test_builtin_converters_with_blank_header
+    csv = CSV.parse( "one,,three", headers:           true,
+                                   return_headers:    true,
+                                   header_converters: [:downcase, :symbol] )
+    assert_equal([:one, nil, :three], csv.headers)
+  end
+
+  def test_custom_converter
+    converter = lambda { |header| header.tr(" ", "_") }
+    csv       = CSV.parse( "One,TWO Three",
+                           headers:           true,
+                           return_headers:    true,
+                           header_converters: converter )
+    assert_equal(%w{One TWO_Three}, csv.headers)
+  end
+
+  def test_table_support
+    csv = nil
+    assert_nothing_raised(Exception) do
+      csv = CSV.parse(@data, headers: true)
+    end
+
+    assert_instance_of(CSV::Table, csv)
+  end
+
+  def test_skip_blanks
+    @data = <<-CSV
+
+
+A,B,C
+
+1,2,3
+
+
+
+    CSV
+
+    expected = [%w[1 2 3]]
+    CSV.parse(@data, headers: true, skip_blanks: true) do |row|
+      assert_equal(expected.shift, row.fields)
+    end
+
+    expected = [%w[A B C], %w[1 2 3]]
+    CSV.parse( @data,
+               headers:        true,
+               return_headers: true,
+               skip_blanks:    true ) do |row|
+      assert_equal(expected.shift, row.fields)
+    end
+  end
+
+  def test_headers_reader
+    # no headers
+    assert_nil(CSV.new(@data).headers)
+
+    # headers
+    csv = CSV.new(@data, headers: true)
+    assert_equal(true, csv.headers)                    # before headers are read
+    csv.shift                                          # set headers
+    assert_equal(%w[first second third], csv.headers)  # after headers are read
+  end
+
+  def test_blank_row
+    @data += "\n#{@data}"  # add a blank row
+
+    # ensure that everything returned is a Row object
+    CSV.parse(@data, headers: true) do |row|
+      assert_instance_of(CSV::Row, row)
+    end
+  end
+
+  def test_nil_row_header
+    @data = <<-CSV
+A
+
+1
+    CSV
+
+    csv = CSV.parse(@data, headers: true)
+
+    # ensure nil row creates Row object with headers
+    row = csv[0]
+    assert_equal([["A"], [nil]],
+                 [row.headers, row.fields])
+  end
+
+  def test_parse_empty
+    assert_equal(CSV::Table.new([], {}),
+                 CSV.parse("", headers: true))
+  end
+
+  def test_parse_empty_line
+    assert_equal(CSV::Table.new([], {}),
+                 CSV.parse("\n", headers: true))
+  end
+
+  def test_specified_empty
+    assert_equal(CSV::Table.new([],
+                                headers: ["header1"]),
+                 CSV.parse("", headers: ["header1"]))
+  end
+
+  def test_specified_empty_line
+    assert_equal(CSV::Table.new([CSV::Row.new(["header1"], [])],
+                                headers: ["header1"]),
+                 CSV.parse("\n", headers: ["header1"]))
+  end
+end
diff --git a/test/mri/csv/parse/test_invalid.rb b/test/mri/csv/parse/test_invalid.rb
new file mode 100644
index 00000000000..b84707c2cc1
--- /dev/null
+++ b/test/mri/csv/parse/test_invalid.rb
@@ -0,0 +1,36 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseInvalid < Test::Unit::TestCase
+  def test_no_column_mixed_new_lines
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse("\n" +
+                "\r")
+    end
+    assert_equal("New line must be <\"\\n\"> not <\"\\r\"> in line 2.",
+                 error.message)
+  end
+
+  def test_ignore_invalid_line
+    csv = CSV.new(<<-CSV, headers: true, return_headers: true)
+head1,head2,head3
+aaa,bbb,ccc
+ddd,ee"e.fff
+ggg,hhh,iii
+    CSV
+    headers = ["head1", "head2", "head3"]
+    assert_equal(CSV::Row.new(headers, headers),
+                 csv.shift)
+    assert_equal(CSV::Row.new(headers, ["aaa", "bbb", "ccc"]),
+                 csv.shift)
+    error = assert_raise(CSV::MalformedCSVError) do
+      csv.shift
+    end
+    assert_equal("Illegal quoting in line 3.",
+                 error.message)
+    assert_equal(CSV::Row.new(headers, ["ggg", "hhh", "iii"]),
+                 csv.shift)
+  end
+end
diff --git a/test/mri/csv/parse/test_liberal_parsing.rb b/test/mri/csv/parse/test_liberal_parsing.rb
new file mode 100644
index 00000000000..2f7b34689f1
--- /dev/null
+++ b/test/mri/csv/parse/test_liberal_parsing.rb
@@ -0,0 +1,160 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseLiberalParsing < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def test_middle_quote_start
+    input = '"Johnson, Dwayne",Dwayne "The Rock" Johnson'
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse_line(input)
+    end
+    assert_equal("Illegal quoting in line 1.",
+                 error.message)
+    assert_equal(["Johnson, Dwayne", 'Dwayne "The Rock" Johnson'],
+                 CSV.parse_line(input, liberal_parsing: true))
+  end
+
+  def test_middle_quote_end
+    input = '"quoted" field'
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse_line(input)
+    end
+    assert_equal("Any value after quoted field isn't allowed in line 1.",
+                 error.message)
+    assert_equal(['"quoted" field'],
+                 CSV.parse_line(input, liberal_parsing: true))
+  end
+
+  def test_quote_after_column_separator
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse_line('is,this "three," or four,fields', liberal_parsing: true)
+    end
+    assert_equal("Unclosed quoted field in line 1.",
+                 error.message)
+  end
+
+  def test_quote_before_column_separator
+    assert_equal(["is", 'this "three', ' or four"', "fields"],
+                 CSV.parse_line('is,this "three, or four",fields',
+                                liberal_parsing: true))
+  end
+
+  def test_backslash_quote
+    assert_equal([
+                   "1",
+                   "\"Hamlet says, \\\"Seems",
+                   "\\\" madam! Nay it is; I know not \\\"seems.\\\"\"",
+                 ],
+                 CSV.parse_line('1,' +
+                                '"Hamlet says, \"Seems,' +
+                                '\" madam! Nay it is; I know not \"seems.\""',
+                                liberal_parsing: true))
+  end
+
+  def test_space_quote
+    input = <<~CSV
+      Los Angeles,   34°03'N,    118°15'W
+      New York City, 40°42'46"N, 74°00'21"W
+      Paris,         48°51'24"N, 2°21'03"E
+    CSV
+    assert_equal(
+                 [
+                   ["Los Angeles", "   34°03'N", "    118°15'W"],
+                   ["New York City", " 40°42'46\"N", " 74°00'21\"W"],
+                   ["Paris", "         48°51'24\"N", " 2°21'03\"E"],
+                 ],
+                 CSV.parse(input, liberal_parsing: true))
+  end
+
+  def test_double_quote_outside_quote
+    data = %Q{a,""b""}
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse(data)
+    end
+    assert_equal("Any value after quoted field isn't allowed in line 1.",
+                 error.message)
+    assert_equal([
+                   [["a", %Q{""b""}]],
+                   [["a", %Q{"b"}]],
+                 ],
+                 [
+                   CSV.parse(data, liberal_parsing: true),
+                   CSV.parse(data,
+                             liberal_parsing: {
+                               double_quote_outside_quote: true,
+                             }),
+                 ])
+  end
+
+  class TestBackslashQuote < Test::Unit::TestCase
+    extend ::DifferentOFS
+
+    def test_double_quote_outside_quote
+      data = %Q{a,""b""}
+      assert_equal([
+                     [["a", %Q{""b""}]],
+                     [["a", %Q{"b"}]],
+                   ],
+                   [
+                     CSV.parse(data,
+                               liberal_parsing: {
+                                 backslash_quote: true
+                               }),
+                     CSV.parse(data,
+                               liberal_parsing: {
+                                 backslash_quote: true,
+                                 double_quote_outside_quote: true
+                               }),
+                   ])
+    end
+
+    def test_unquoted_value
+      data = %q{\"\"a\"\"}
+      assert_equal([
+                     [[%q{\"\"a\"\"}]],
+                     [[%q{""a""}]],
+                   ],
+                   [
+                     CSV.parse(data, liberal_parsing: true),
+                     CSV.parse(data,
+                               liberal_parsing: {
+                                 backslash_quote: true
+                               }),
+                   ])
+    end
+
+    def test_unquoted_value_multiple_characters_col_sep
+      data = %q{a<\\"b<=>x}
+      assert_equal([[%Q{a<"b}, "x"]],
+                   CSV.parse(data,
+                             col_sep: "<=>",
+                             liberal_parsing: {
+                               backslash_quote: true
+                             }))
+    end
+
+    def test_quoted_value
+      data = %q{"\"\"a\"\""}
+      assert_equal([
+                     [[%q{"\"\"a\"\""}]],
+                     [[%q{""a""}]],
+                     [[%q{""a""}]],
+                   ],
+                   [
+                     CSV.parse(data, liberal_parsing: true),
+                     CSV.parse(data,
+                               liberal_parsing: {
+                                 backslash_quote: true
+                               }),
+                     CSV.parse(data,
+                               liberal_parsing: {
+                                 backslash_quote: true,
+                                 double_quote_outside_quote: true
+                               }),
+                   ])
+    end
+  end
+end
diff --git a/test/mri/csv/parse/test_quote_char_nil.rb b/test/mri/csv/parse/test_quote_char_nil.rb
new file mode 100644
index 00000000000..fc3b646759b
--- /dev/null
+++ b/test/mri/csv/parse/test_quote_char_nil.rb
@@ -0,0 +1,93 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseQuoteCharNil < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def test_full
+    assert_equal(["a", "b"], CSV.parse_line(%Q{a,b}, quote_char: nil))
+  end
+
+  def test_end_with_nil
+    assert_equal(["a", nil, nil, nil], CSV.parse_line(%Q{a,,,}, quote_char: nil))
+  end
+
+  def test_nil_nil
+    assert_equal([nil, nil], CSV.parse_line(%Q{,}, quote_char: nil))
+  end
+
+  def test_unquoted_value_multiple_characters_col_sep
+    data = %q{a<b<=>x}
+    assert_equal([[%Q{a<b}, "x"]], CSV.parse(data, col_sep: "<=>", quote_char: nil))
+  end
+
+  def test_csv_header_string
+    data = <<~DATA
+      first,second,third
+      A,B,C
+      1,2,3
+    DATA
+    assert_equal(
+      CSV::Table.new([
+        CSV::Row.new(["my", "new", "headers"], ["first", "second", "third"]),
+        CSV::Row.new(["my", "new", "headers"], ["A", "B", "C"]),
+        CSV::Row.new(["my", "new", "headers"], ["1", "2", "3"])
+      ]),
+      CSV.parse(data, headers: "my,new,headers", quote_char: nil)
+    )
+  end
+
+  def test_comma
+    assert_equal([["a", "b", nil, "d"]],
+                 CSV.parse("a,b,,d", col_sep: ",", quote_char: nil))
+  end
+
+  def test_space
+    assert_equal([["a", "b", nil, "d"]],
+                 CSV.parse("a b  d", col_sep: " ", quote_char: nil))
+  end
+
+  def encode_array(array, encoding)
+    array.collect do |element|
+      element ? element.encode(encoding) : element
+    end
+  end
+
+  def test_space_no_ascii
+    encoding = Encoding::UTF_16LE
+    assert_equal([encode_array(["a", "b", nil, "d"], encoding)],
+                 CSV.parse("a b  d".encode(encoding),
+                           col_sep: " ".encode(encoding),
+                           quote_char: nil))
+  end
+
+  def test_multiple_space
+    assert_equal([["a b", nil, "d"]],
+                 CSV.parse("a b    d", col_sep: "  ", quote_char: nil))
+  end
+
+  def test_multiple_characters_leading_empty_fields
+    data = <<-CSV
+<=><=>A<=>B<=>C
+1<=>2<=>3
+    CSV
+    assert_equal([
+                   [nil, nil, "A", "B", "C"],
+                   ["1", "2", "3"],
+                 ],
+                 CSV.parse(data, col_sep: "<=>", quote_char: nil))
+  end
+
+  def test_line
+    lines = [
+      "abc,def\n",
+    ]
+    csv = CSV.new(lines.join(""), quote_char: nil)
+    lines.each do |line|
+      csv.shift
+      assert_equal(line, csv.line)
+    end
+  end
+end
diff --git a/test/mri/csv/parse/test_rewind.rb b/test/mri/csv/parse/test_rewind.rb
new file mode 100644
index 00000000000..73a69e9ccdd
--- /dev/null
+++ b/test/mri/csv/parse/test_rewind.rb
@@ -0,0 +1,40 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseRewind < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def parse(data, options={})
+    csv = CSV.new(data, options)
+    records = csv.to_a
+    csv.rewind
+    [records, csv.to_a]
+  end
+
+  def test_default
+    data = <<-CSV
+Ruby,2.6.0,script
+    CSV
+    assert_equal([
+                   [["Ruby", "2.6.0", "script"]],
+                   [["Ruby", "2.6.0", "script"]],
+                 ],
+                 parse(data))
+  end
+
+  def test_have_headers
+    data = <<-CSV
+Language,Version,Type
+Ruby,2.6.0,script
+    CSV
+    assert_equal([
+                   [CSV::Row.new(["Language", "Version", "Type"],
+                                 ["Ruby", "2.6.0", "script"])],
+                   [CSV::Row.new(["Language", "Version", "Type"],
+                                 ["Ruby", "2.6.0", "script"])],
+                 ],
+                 parse(data, headers: true))
+  end
+end
diff --git a/test/mri/csv/parse/test_row_separator.rb b/test/mri/csv/parse/test_row_separator.rb
new file mode 100644
index 00000000000..eaf6adc9101
--- /dev/null
+++ b/test/mri/csv/parse/test_row_separator.rb
@@ -0,0 +1,16 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseRowSeparator < Test::Unit::TestCase
+  extend DifferentOFS
+  include Helper
+
+  def test_multiple_characters
+    with_chunk_size("1") do
+      assert_equal([["a"], ["b"]],
+                   CSV.parse("a\r\nb\r\n", row_sep: "\r\n"))
+    end
+  end
+end
diff --git a/test/mri/csv/parse/test_skip_lines.rb b/test/mri/csv/parse/test_skip_lines.rb
new file mode 100644
index 00000000000..196858f1b07
--- /dev/null
+++ b/test/mri/csv/parse/test_skip_lines.rb
@@ -0,0 +1,105 @@
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseSkipLines < Test::Unit::TestCase
+  extend DifferentOFS
+  include Helper
+
+  def test_default
+    csv = CSV.new("a,b,c\n")
+    assert_nil(csv.skip_lines)
+  end
+
+  def test_regexp
+    csv = <<-CSV
+1
+#2
+ #3
+4
+    CSV
+    assert_equal([
+                   ["1"],
+                   ["4"],
+                 ],
+                 CSV.parse(csv, :skip_lines => /\A\s*#/))
+  end
+
+  def test_regexp_quoted
+    csv = <<-CSV
+1
+#2
+"#3"
+4
+    CSV
+    assert_equal([
+                   ["1"],
+                   ["#3"],
+                   ["4"],
+                 ],
+                 CSV.parse(csv, :skip_lines => /\A\s*#/))
+  end
+
+  def test_string
+    csv = <<-CSV
+1
+.2
+3.
+4
+    CSV
+    assert_equal([
+                   ["1"],
+                   ["4"],
+                 ],
+                 CSV.parse(csv, :skip_lines => "."))
+  end
+
+  class RegexStub
+  end
+
+  def test_not_matchable
+    regex_stub = RegexStub.new
+    csv = CSV.new("1\n", :skip_lines => regex_stub)
+    error = assert_raise(ArgumentError) do
+      csv.shift
+    end
+    assert_equal(":skip_lines has to respond to #match: #{regex_stub.inspect}",
+                 error.message)
+  end
+
+  class Matchable
+    def initialize(pattern)
+      @pattern = pattern
+    end
+
+    def match(line)
+      @pattern.match(line)
+    end
+  end
+
+  def test_matchable
+    csv = <<-CSV
+1
+# 2
+3
+# 4
+    CSV
+    assert_equal([
+                   ["1"],
+                   ["3"],
+                 ],
+                 CSV.parse(csv, :skip_lines => Matchable.new(/\A#/)))
+  end
+
+  def test_multibyte_data
+    # U+3042 HIRAGANA LETTER A
+    # U+3044 HIRAGANA LETTER I
+    # U+3046 HIRAGANA LETTER U
+    value = "\u3042\u3044\u3046"
+    with_chunk_size("5") do
+      assert_equal([[value], [value]],
+                   CSV.parse("#{value}\n#{value}\n",
+                             :skip_lines => /\A#/))
+    end
+  end
+end
diff --git a/test/mri/csv/parse/test_strip.rb b/test/mri/csv/parse/test_strip.rb
new file mode 100644
index 00000000000..160407bd94f
--- /dev/null
+++ b/test/mri/csv/parse/test_strip.rb
@@ -0,0 +1,48 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseStrip < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def test_both
+    assert_equal(["a", "b"],
+                 CSV.parse_line(%Q{  a  ,  b  }, strip: true))
+  end
+
+  def test_left
+    assert_equal(["a", "b"],
+                 CSV.parse_line(%Q{  a,  b}, strip: true))
+  end
+
+  def test_right
+    assert_equal(["a", "b"],
+                 CSV.parse_line(%Q{a  ,b  }, strip: true))
+  end
+
+  def test_quoted
+    assert_equal(["  a  ", "  b  "],
+                 CSV.parse_line(%Q{"  a  ","  b  "}, strip: true))
+  end
+
+  def test_liberal_parsing
+    assert_equal(["  a  ", "b", "  c  ", "  d  "],
+                 CSV.parse_line(%Q{"  a  ",  b  ,  "  c  ","  d  "  },
+                                strip: true,
+                                liberal_parsing: true))
+  end
+
+  def test_string
+    assert_equal(["a", " b"],
+                 CSV.parse_line(%Q{  a  , " b"  },
+                                strip: " "))
+  end
+
+  def test_no_quote
+    assert_equal(["  a  ", "  b  "],
+                 CSV.parse_line(%Q{"  a  ",  b  },
+                                strip: %Q{"},
+                                quote_char: nil))
+  end
+end
diff --git a/test/mri/csv/parse/test_unconverted_fields.rb b/test/mri/csv/parse/test_unconverted_fields.rb
new file mode 100644
index 00000000000..437124ebd3c
--- /dev/null
+++ b/test/mri/csv/parse/test_unconverted_fields.rb
@@ -0,0 +1,117 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+class TestCSVParseUnconvertedFields < Test::Unit::TestCase
+  extend DifferentOFS
+
+  def setup
+    super
+    @custom = lambda {|field| /\A:(\S.*?)\s*\Z/ =~ field ? $1.to_sym : field}
+
+    @headers = ["first", "second", "third"]
+    @data = <<-CSV
+first,second,third
+1,2,3
+    CSV
+  end
+
+
+  def test_custom
+    row = CSV.parse_line("Numbers,:integer,1,:float,3.015",
+                         converters:         [:numeric, @custom],
+                         unconverted_fields: true)
+    assert_equal([
+                   ["Numbers", :integer, 1, :float, 3.015],
+                   ["Numbers", ":integer", "1", ":float", "3.015"],
+                 ],
+                 [
+                   row,
+                   row.unconverted_fields,
+                 ])
+  end
+
+  def test_no_fields
+    row = CSV.parse_line("\n",
+                         converters:         [:numeric, @custom],
+                         unconverted_fields: true)
+    assert_equal([
+                   [],
+                   [],
+                 ],
+                 [
+                   row,
+                   row.unconverted_fields,
+                 ])
+  end
+
+  def test_parsed_header
+    row = CSV.parse_line(@data,
+                         converters:         :numeric,
+                         unconverted_fields: true,
+                         headers:            :first_row)
+    assert_equal([
+                   CSV::Row.new(@headers,
+                                [1, 2, 3]),
+                   ["1", "2", "3"],
+                 ],
+                 [
+                   row,
+                   row.unconverted_fields,
+                 ])
+  end
+
+  def test_return_headers
+    row = CSV.parse_line(@data,
+                         converters:         :numeric,
+                         unconverted_fields: true,
+                         headers:            :first_row,
+                         return_headers:     true)
+    assert_equal([
+                   CSV::Row.new(@headers,
+                                @headers),
+                   @headers,
+                 ],
+                 [
+                   row,
+                   row.unconverted_fields,
+                 ])
+  end
+
+  def test_header_converters
+    row = CSV.parse_line(@data,
+                         converters:         :numeric,
+                         unconverted_fields: true,
+                         headers:            :first_row,
+                         return_headers:     true,
+                         header_converters:  :symbol)
+    assert_equal([
+                   CSV::Row.new(@headers.collect(&:to_sym),
+                                @headers),
+                   @headers,
+                 ],
+                 [
+                   row,
+                   row.unconverted_fields,
+                 ])
+  end
+
+  def test_specified_headers
+    row = CSV.parse_line("\n",
+                         converters:         :numeric,
+                         unconverted_fields: true,
+                         headers:            %w{my new headers},
+                         return_headers:     true,
+                         header_converters:  :symbol)
+    assert_equal([
+                   CSV::Row.new([:my, :new, :headers],
+                                ["my", "new", "headers"]),
+                   [],
+                 ],
+                 [
+                   row,
+                   row.unconverted_fields,
+                 ])
+  end
+end
diff --git a/test/mri/csv/test_data_converters.rb b/test/mri/csv/test_data_converters.rb
index 0786ca6d0fe..1620e077be4 100755
--- a/test/mri/csv/test_data_converters.rb
+++ b/test/mri/csv/test_data_converters.rb
@@ -1,25 +1,13 @@
-#!/usr/bin/env ruby -w
-# encoding: UTF-8
+# -*- coding: utf-8 -*-
 # frozen_string_literal: false
 
-# tc_data_converters.rb
-#
-#  Created by James Edward Gray II on 2005-10-31.
-#  Copyright 2005 James Edward Gray II. You can redistribute or modify this code
-#  under the terms of Ruby's license.
+require_relative "helper"
 
-require_relative "base"
-
-class TestCSV::DataConverters < TestCSV
+class TestCSVDataConverters < Test::Unit::TestCase
   extend DifferentOFS
 
   def setup
     super
-    @data   = "Numbers,:integer,1,:float,3.015"
-    @parser = CSV.new(@data)
-
-    @custom = lambda { |field| field =~ /\A:(\S.*?)\s*\Z/ ? $1.to_sym : field }
-
     @win_safe_time_str = Time.now.strftime("%a %b %d %H:%M:%S %Y")
   end
 
@@ -67,207 +55,52 @@ def test_builtin_date_time_converter
     assert_instance_of(String, CSV::Converters[:date_time]["junk"])
   end
 
-  def test_convert_with_builtin_integer
-    # setup parser...
-    assert_respond_to(@parser, :convert)
-    assert_nothing_raised(Exception) { @parser.convert(:integer) }
-
-    # and use
-    assert_equal(["Numbers", ":integer", 1, ":float", "3.015"], @parser.shift)
-  end
-
-  def test_convert_with_builtin_float
-    # setup parser...
-    assert_respond_to(@parser, :convert)
-    assert_nothing_raised(Exception) { @parser.convert(:float) }
-
-    # and use
-    assert_equal(["Numbers", ":integer", 1.0, ":float", 3.015], @parser.shift)
-  end
-
-  def test_convert_order_float_integer
-    # floats first, then integers...
-    assert_nothing_raised(Exception) do
-      @parser.convert(:float)
-      @parser.convert(:integer)
-    end
-
-    # gets us nothing but floats
-    assert_equal( [String, String, Float, String, Float],
-                  @parser.shift.map { |field| field.class } )
-  end
-
-  def test_convert_order_integer_float
-    # integers have precendance...
-    assert_nothing_raised(Exception) do
-      @parser.convert(:integer)
-      @parser.convert(:float)
-    end
-
-    # gives us proper number conversion
-    assert_equal( [String, String, Integer, String, Float],
-                  @parser.shift.map { |field| field.class } )
+  def test_builtin_date_time_converter_iso8601_date
+    iso8601_string = "2018-01-14"
+    datetime = DateTime.new(2018, 1, 14)
+    assert_equal(datetime,
+                 CSV::Converters[:date_time][iso8601_string])
   end
 
-  def test_builtin_numeric_combo_converter
-    # setup parser...
-    assert_nothing_raised(Exception) { @parser.convert(:numeric) }
-
-    # and use
-    assert_equal( [String, String, Integer, String, Float],
-                  @parser.shift.map { |field| field.class } )
+  def test_builtin_date_time_converter_iso8601_minute
+    iso8601_string = "2018-01-14T22:25"
+    datetime = DateTime.new(2018, 1, 14, 22, 25)
+    assert_equal(datetime,
+                 CSV::Converters[:date_time][iso8601_string])
   end
 
-  def test_builtin_all_nested_combo_converter
-    # setup parser...
-    @data   << ",#{@win_safe_time_str}"        # add a DateTime field
-    @parser =  CSV.new(@data)                  # reset parser
-    assert_nothing_raised(Exception) { @parser.convert(:all) }
-
-    # and use
-    assert_equal( [String, String, Integer, String, Float, DateTime],
-                  @parser.shift.map { |field| field.class } )
+  def test_builtin_date_time_converter_iso8601_second
+    iso8601_string = "2018-01-14T22:25:19"
+    datetime = DateTime.new(2018, 1, 14, 22, 25, 19)
+    assert_equal(datetime,
+                 CSV::Converters[:date_time][iso8601_string])
   end
 
-  def test_convert_with_custom_code
-    # define custom converter...
-    assert_nothing_raised(Exception) do
-      @parser.convert { |field| field =~ /\A:(\S.*?)\s*\Z/ ? $1.to_sym : field }
-    end
-
-    # and use
-    assert_equal(["Numbers", :integer, "1", :float, "3.015"], @parser.shift)
+  def test_builtin_date_time_converter_iso8601_under_second
+    iso8601_string = "2018-01-14T22:25:19.1"
+    datetime = DateTime.new(2018, 1, 14, 22, 25, 19.1)
+    assert_equal(datetime,
+                 CSV::Converters[:date_time][iso8601_string])
   end
 
-  def test_convert_with_custom_code_mix
-    # mix built-in and custom...
-    assert_nothing_raised(Exception) { @parser.convert(:numeric) }
-    assert_nothing_raised(Exception) { @parser.convert(&@custom) }
-
-    # and use
-    assert_equal(["Numbers", :integer, 1, :float, 3.015], @parser.shift)
+  def test_builtin_date_time_converter_iso8601_under_second_offset
+    iso8601_string = "2018-01-14T22:25:19.1+09:00"
+    datetime = DateTime.new(2018, 1, 14, 22, 25, 19.1, "+9")
+    assert_equal(datetime,
+                 CSV::Converters[:date_time][iso8601_string])
   end
 
-  def test_convert_with_custom_code_using_field_info
-    # define custom converter that uses field information...
-    assert_nothing_raised(Exception) do
-      @parser.convert do |field, info|
-        assert_equal(1, info.line)
-        info.index == 4 ? Float(field).floor : field
-      end
-    end
-
-    # and use
-    assert_equal(["Numbers", ":integer", "1", ":float", 3], @parser.shift)
+  def test_builtin_date_time_converter_iso8601_offset
+    iso8601_string = "2018-01-14T22:25:19+09:00"
+    datetime = DateTime.new(2018, 1, 14, 22, 25, 19, "+9")
+    assert_equal(datetime,
+                 CSV::Converters[:date_time][iso8601_string])
   end
 
-  def test_convert_with_custom_code_using_field_info_header
-    @parser = CSV.new(@data, headers: %w{one two three four five})
-
-    # define custom converter that uses field header information...
-    assert_nothing_raised(Exception) do
-      @parser.convert do |field, info|
-        info.header == "three" ? Integer(field) * 100 : field
-      end
-    end
-
-    # and use
-    assert_equal( ["Numbers", ":integer", 100, ":float", "3.015"],
-                  @parser.shift.fields )
-  end
-
-  def test_custom_converter_with_blank_field
-    converter = lambda { |field| field.nil? }
-    row = nil
-    assert_nothing_raised(Exception) do
-      row = CSV.parse_line('nil,', converters: converter)
-    end
-    assert_equal([false, true], row);
-  end
-
-  def test_shortcut_interface
-    assert_equal( ["Numbers", ":integer", 1, ":float", 3.015],
-                  CSV.parse_line(@data, converters: :numeric) )
-
-    assert_equal( ["Numbers", ":integer", 1, ":float", 3.015],
-                  CSV.parse_line(@data, converters: [:integer, :float]) )
-
-    assert_equal( ["Numbers", :integer, 1, :float, 3.015],
-                  CSV.parse_line(@data, converters: [:numeric, @custom]) )
-  end
-
-  def test_unconverted_fields
-    [ [ @data,
-        ["Numbers", :integer, 1, :float, 3.015],
-        %w{Numbers :integer 1 :float 3.015} ],
-      ["\n", Array.new, Array.new] ].each do |test, fields, unconverted|
-      row = nil
-      assert_nothing_raised(Exception) do
-        row = CSV.parse_line( test,
-                              converters:         [:numeric, @custom],
-                              unconverted_fields: true )
-      end
-      assert_not_nil(row)
-      assert_equal(fields, row)
-      assert_respond_to(row, :unconverted_fields)
-      assert_equal(unconverted, row.unconverted_fields)
-    end
-
-    data = <<-END_CSV.gsub(/^\s+/, "")
-    first,second,third
-    1,2,3
-    END_CSV
-    row = nil
-    assert_nothing_raised(Exception) do
-      row = CSV.parse_line( data,
-                            converters:         :numeric,
-                            unconverted_fields: true,
-                            headers:            :first_row )
-    end
-    assert_not_nil(row)
-    assert_equal([["first", 1], ["second", 2], ["third", 3]], row.to_a)
-    assert_respond_to(row, :unconverted_fields)
-    assert_equal(%w{1 2 3}, row.unconverted_fields)
-
-    assert_nothing_raised(Exception) do
-      row = CSV.parse_line( data,
-                            converters:         :numeric,
-                            unconverted_fields: true,
-                            headers:            :first_row,
-                            return_headers:     true )
-    end
-    assert_not_nil(row)
-    assert_equal( [%w{first first}, %w{second second}, %w{third third}],
-                  row.to_a )
-    assert_respond_to(row, :unconverted_fields)
-    assert_equal(%w{first second third}, row.unconverted_fields)
-
-    assert_nothing_raised(Exception) do
-      row = CSV.parse_line( data,
-                            converters:         :numeric,
-                            unconverted_fields: true,
-                            headers:            :first_row,
-                            return_headers:     true,
-                            header_converters:  :symbol )
-    end
-    assert_not_nil(row)
-    assert_equal( [[:first, "first"], [:second, "second"], [:third, "third"]],
-                  row.to_a )
-    assert_respond_to(row, :unconverted_fields)
-    assert_equal(%w{first second third}, row.unconverted_fields)
-
-    assert_nothing_raised(Exception) do
-      row = CSV.parse_line( data,
-                            converters:         :numeric,
-                            unconverted_fields: true,
-                            headers:            %w{my new headers},
-                            return_headers:     true,
-                            header_converters:  :symbol )
-    end
-    assert_not_nil(row)
-    assert_equal( [[:my, "my"], [:new, "new"], [:headers, "headers"]],
-                  row.to_a )
-    assert_respond_to(row, :unconverted_fields)
-    assert_equal(Array.new, row.unconverted_fields)
+  def test_builtin_date_time_converter_iso8601_utc
+    iso8601_string = "2018-01-14T22:25:19Z"
+    datetime = DateTime.new(2018, 1, 14, 22, 25, 19)
+    assert_equal(datetime,
+                 CSV::Converters[:date_time][iso8601_string])
   end
 end
diff --git a/test/mri/csv/test_encodings.rb b/test/mri/csv/test_encodings.rb
index 7460a3ff34b..64ea36a9a4d 100755
--- a/test/mri/csv/test_encodings.rb
+++ b/test/mri/csv/test_encodings.rb
@@ -1,16 +1,9 @@
-#!/usr/bin/env ruby -w
-# encoding: UTF-8
+# -*- coding: utf-8 -*-
 # frozen_string_literal: false
 
-# tc_encodings.rb
-#
-#  Created by James Edward Gray II on 2008-09-13.
-#  Copyright 2008 James Edward Gray II. You can redistribute or modify this code
-#  under the terms of Ruby's license.
+require_relative "helper"
 
-require_relative "base"
-
-class TestCSV::Encodings < TestCSV
+class TestCSVEncodings < Test::Unit::TestCase
   extend DifferentOFS
 
   def setup
@@ -256,14 +249,31 @@ def test_explicit_encoding
     assert_equal(["foo,\u3042\n".encode(Encoding::Windows_31J), Encoding::Windows_31J], [s, s.encoding], bug9766)
   end
 
+  def test_row_separator_detection_with_invalid_encoding
+    csv = CSV.new("invalid,\xF8\r\nvalid,x\r\n".force_encoding("UTF-8"),
+                  encoding: "UTF-8")
+    assert_equal("\r\n", csv.row_sep)
+  end
+
+  def test_invalid_encoding_row_error
+    csv = CSV.new("valid,x\rinvalid,\xF8\r".force_encoding("UTF-8"),
+                  encoding: "UTF-8", row_sep: "\r")
+    error = assert_raise(CSV::MalformedCSVError) do
+      csv.shift
+      csv.shift
+    end
+    assert_equal("Invalid byte sequence in UTF-8 in line 2.",
+                 error.message)
+  end
+
   private
 
   def assert_parses(fields, encoding, options = { })
     encoding = Encoding.find(encoding) unless encoding.is_a? Encoding
     orig_fields = fields
-    fields   = encode_ary(fields, encoding)
+    fields = encode_ary(fields, encoding)
     data = ary_to_data(fields, options)
-    parsed   = CSV.parse(data, options)
+    parsed = CSV.parse(data, options)
     assert_equal(fields, parsed)
     parsed.flatten.each_with_index do |field, i|
       assert_equal(encoding, field.encoding, "Field[#{i + 1}] was transcoded.")
diff --git a/test/mri/csv/test_features.rb b/test/mri/csv/test_features.rb
index 6b73093ad30..306b880f6fb 100755
--- a/test/mri/csv/test_features.rb
+++ b/test/mri/csv/test_features.rb
@@ -1,22 +1,15 @@
-#!/usr/bin/env ruby -w
-# encoding: UTF-8
+# -*- coding: utf-8 -*-
 # frozen_string_literal: false
 
-# tc_features.rb
-#
-#  Created by James Edward Gray II on 2005-10-31.
-#  Copyright 2005 James Edward Gray II. You can redistribute or modify this code
-#  under the terms of Ruby's license.
-
 begin
   require "zlib"
 rescue LoadError
 end
 
-require_relative "base"
+require_relative "helper"
 require "tempfile"
 
-class TestCSV::Features < TestCSV
+class TestCSVFeatures < Test::Unit::TestCase
   extend DifferentOFS
 
   TEST_CASES = [ [%Q{a,b},               ["a", "b"]],
@@ -39,12 +32,12 @@ class TestCSV::Features < TestCSV
 
   def setup
     super
-    @sample_data = <<-END_DATA.gsub(/^ +/, "")
-    line,1,abc
-    line,2,"def\nghi"
+    @sample_data = <<-CSV
+line,1,abc
+line,2,"def\nghi"
 
-    line,4,jkl
-    END_DATA
+line,4,jkl
+    CSV
     @csv = CSV.new(@sample_data)
   end
 
@@ -60,26 +53,37 @@ def test_col_sep
   end
 
   def test_row_sep
-    assert_raise(CSV::MalformedCSVError) do
-        CSV.parse_line("1,2,3\n,4,5\r\n", row_sep: "\r\n")
+    error = assert_raise(CSV::MalformedCSVError) do
+      CSV.parse_line("1,2,3\n,4,5\r\n", row_sep: "\r\n")
     end
+    assert_equal("Unquoted fields do not allow new line <\"\\n\"> in line 1.",
+                 error.message)
     assert_equal( ["1", "2", "3\n", "4", "5"],
                   CSV.parse_line(%Q{1,2,"3\n",4,5\r\n}, row_sep: "\r\n"))
   end
 
   def test_quote_char
     TEST_CASES.each do |test_case|
-      assert_equal( test_case.last.map { |t| t.tr('"', "'") unless t.nil? },
-                    CSV.parse_line( test_case.first.tr('"', "'"),
-                                    quote_char: "'" ) )
+      assert_equal(test_case.last.map {|t| t.tr('"', "'") unless t.nil?},
+                   CSV.parse_line(test_case.first.tr('"', "'"),
+                                  quote_char: "'" ))
     end
   end
 
-  def test_bug_8405
+  def test_quote_char_special_regexp_char
     TEST_CASES.each do |test_case|
-      assert_equal( test_case.last.map { |t| t.tr('"', "|") unless t.nil? },
-                    CSV.parse_line( test_case.first.tr('"', "|"),
-                                    quote_char: "|" ) )
+      assert_equal(test_case.last.map {|t| t.tr('"', "|") unless t.nil?},
+                   CSV.parse_line(test_case.first.tr('"', "|"),
+                                  quote_char: "|"))
+    end
+  end
+
+  def test_quote_char_special_regexp_char_liberal_parsing
+    TEST_CASES.each do |test_case|
+      assert_equal(test_case.last.map {|t| t.tr('"', "|") unless t.nil?},
+                   CSV.parse_line(test_case.first.tr('"', "|"),
+                                  quote_char: "|",
+                                  liberal_parsing: true))
     end
   end
 
@@ -159,29 +163,6 @@ def test_skip_blanks
     assert_equal(3, count)
   end
 
-  def test_liberal_parsing
-    input = '"Johnson, Dwayne",Dwayne "The Rock" Johnson'
-    assert_raise(CSV::MalformedCSVError) do
-        CSV.parse_line(input)
-    end
-    assert_equal(["Johnson, Dwayne", 'Dwayne "The Rock" Johnson'],
-                 CSV.parse_line(input, liberal_parsing: true))
-
-    input = '"quoted" field'
-    assert_raise(CSV::MalformedCSVError) do
-        CSV.parse_line(input)
-    end
-    assert_equal(['"quoted" field'],
-                 CSV.parse_line(input, liberal_parsing: true))
-
-    assert_raise(CSV::MalformedCSVError) do
-      CSV.parse_line('is,this "three," or four,fields', liberal_parsing: true)
-    end
-
-    assert_equal(["is", 'this "three', ' or four"', "fields"],
-      CSV.parse_line('is,this "three, or four",fields', liberal_parsing: true))
-  end
-
   def test_csv_behavior_readers
     %w[ unconverted_fields return_headers write_headers
         skip_blanks        force_quotes ].each do |behavior|
@@ -227,29 +208,19 @@ def test_header_converters_reader
   end
 
   # reported by Kev Jackson
-  def test_failing_to_escape_col_sep_bug_fix
+  def test_failing_to_escape_col_sep
     assert_nothing_raised(Exception) { CSV.new(String.new, col_sep: "|") }
   end
 
   # reported by Chris Roos
-  def test_failing_to_reset_headers_in_rewind_bug_fix
+  def test_failing_to_reset_headers_in_rewind
     csv = CSV.new("forename,surname", headers: true, return_headers: true)
     csv.each {|row| assert_predicate row, :header_row?}
     csv.rewind
     csv.each {|row| assert_predicate row, :header_row?}
   end
 
-  # reported by Dave Burt
-  def test_leading_empty_fields_with_multibyte_col_sep_bug_fix
-    data = <<-END_DATA.gsub(/^\s+/, "")
-    <=><=>A<=>B<=>C
-    1<=>2<=>3
-    END_DATA
-    parsed = CSV.parse(data, col_sep: "<=>")
-    assert_equal([[nil, nil, "A", "B", "C"], ["1", "2", "3"]], parsed)
-  end
-
-  def test_gzip_reader_bug_fix
+  def test_gzip_reader
     zipped = nil
     assert_nothing_raised(NoMethodError) do
       zipped = CSV.new(
@@ -263,7 +234,7 @@ def test_gzip_reader_bug_fix
     zipped.close
   end if defined?(Zlib::GzipReader)
 
-  def test_gzip_writer_bug_fix
+  def test_gzip_writer
     Tempfile.create(%w"temp .gz") {|tempfile|
       tempfile.close
       file = tempfile.path
@@ -304,77 +275,71 @@ def test_inspect_shows_key_attributes
   end
 
   def test_inspect_shows_headers_when_available
-    CSV.new("one,two,three\n1,2,3\n", headers: true) do |csv|
-      assert_include(csv.inspect, "headers:true", "Header hint not shown.")
-      csv.shift  # load headers
-      assert_match(/headers:\[[^\]]+\]/, csv.inspect)
-    end
+    csv = CSV.new("one,two,three\n1,2,3\n", headers: true)
+    assert_include(csv.inspect, "headers:true", "Header hint not shown.")
+    csv.shift  # load headers
+    assert_match(/headers:\[[^\]]+\]/, csv.inspect)
   end
 
   def test_inspect_encoding_is_ascii_compatible
-    CSV.new("one,two,three\n1,2,3\n".encode("UTF-16BE")) do |csv|
-      assert_send([Encoding, :compatible?,
-                   Encoding.find("US-ASCII"), csv.inspect.encoding],
-                  "inspect() was not ASCII compatible.")
-    end
+    csv = CSV.new("one,two,three\n1,2,3\n".encode("UTF-16BE"))
+    assert_send([Encoding, :compatible?,
+                  Encoding.find("US-ASCII"), csv.inspect.encoding],
+                "inspect() was not ASCII compatible.")
   end
 
   def test_version
     assert_not_nil(CSV::VERSION)
     assert_instance_of(String, CSV::VERSION)
     assert_predicate(CSV::VERSION, :frozen?)
-    assert_match(/\A\d\.\d\.\d\Z/, CSV::VERSION)
-  end
-
-  def test_accepts_comment_skip_lines_option
-    assert_nothing_raised(ArgumentError) do
-      CSV.new(@sample_data, :skip_lines => /\A\s*#/)
-    end
+    assert_match(/\A\d\.\d\.\d\z/, CSV::VERSION)
   end
 
-  def test_accepts_comment_defaults_to_nil
-    c = CSV.new(@sample_data)
-    assert_nil(c.skip_lines)
+  def test_table_nil_equality
+    assert_nothing_raised(NoMethodError) { CSV.parse("test", headers: true) == nil }
   end
 
-  class RegexStub
+  # non-seekable input stream for testing https://github.com/ruby/csv/issues/44
+  class DummyIO
+    extend Forwardable
+    def_delegators :@io, :gets, :read, :pos, :eof?  # no seek or rewind!
+    def initialize(data)
+      @io = StringIO.new(data)
+    end
   end
 
-  def test_requires_skip_lines_to_call_match
-    regex_stub = RegexStub.new
-    assert_raise_with_message(ArgumentError, /skip_lines/) do
-      CSV.new(@sample_data, :skip_lines => regex_stub)
-    end
+  def test_line_separator_autodetection_for_non_seekable_input_lf
+    c = CSV.new(DummyIO.new("one,two,three\nfoo,bar,baz\n"))
+    assert_equal [["one", "two", "three"], ["foo", "bar", "baz"]], c.each.to_a
   end
 
-  def test_comment_rows_are_ignored
-    sample_data = "line,1,a\n#not,a,line\nline,2,b\n   #also,no,line"
-    c = CSV.new sample_data, :skip_lines => /\A\s*#/
-    assert_equal [["line", "1", "a"], ["line", "2", "b"]], c.each.to_a
+  def test_line_separator_autodetection_for_non_seekable_input_cr
+    c = CSV.new(DummyIO.new("one,two,three\rfoo,bar,baz\r"))
+    assert_equal [["one", "two", "three"], ["foo", "bar", "baz"]], c.each.to_a
   end
 
-  def test_comment_rows_are_ignored_with_heredoc
-    c = CSV.new(<<~EOL, skip_lines: ".")
-    1,foo
-    .2,bar
-    3,baz
-    EOL
-    assert_equal [["1", "foo"], ["3", "baz"]], c.each.to_a
+  def test_line_separator_autodetection_for_non_seekable_input_cr_lf
+    c = CSV.new(DummyIO.new("one,two,three\r\nfoo,bar,baz\r\n"))
+    assert_equal [["one", "two", "three"], ["foo", "bar", "baz"]], c.each.to_a
   end
 
-  def test_quoted_skip_line_markers_are_ignored
-    sample_data = "line,1,a\n\"#not\",a,line\nline,2,b"
-    c = CSV.new sample_data, :skip_lines => /\A\s*#/
-    assert_equal [["line", "1", "a"], ["#not", "a", "line"], ["line", "2", "b"]], c.each.to_a
+  def test_line_separator_autodetection_for_non_seekable_input_1024_over_lf
+    table = (1..10).map { |row| (1..200).map { |col| "row#{row}col#{col}" }.to_a }.to_a
+    input = table.map { |line| line.join(",") }.join("\n")
+    c = CSV.new(DummyIO.new(input))
+    assert_equal table, c.each.to_a
   end
 
-  def test_string_works_like_a_regexp
-    sample_data = "line,1,a\n#(not,a,line\nline,2,b\n   also,#no,line"
-    c = CSV.new sample_data, :skip_lines => "#"
-    assert_equal [["line", "1", "a"], ["line", "2", "b"]], c.each.to_a
+  def test_line_separator_autodetection_for_non_seekable_input_1024_over_cr_lf
+    table = (1..10).map { |row| (1..200).map { |col| "row#{row}col#{col}" }.to_a }.to_a
+    input = table.map { |line| line.join(",") }.join("\r\n")
+    c = CSV.new(DummyIO.new(input))
+    assert_equal table, c.each.to_a
   end
 
-  def test_table_nil_equality
-    assert_nothing_raised(NoMethodError) { CSV.parse("test", headers: true) == nil }
+  def test_line_separator_autodetection_for_non_seekable_input_many_cr_only
+    # input with lots of CRs (to make sure no bytes are lost due to look-ahead)
+    c = CSV.new(DummyIO.new("foo\r" + "\r" * 9999 + "bar\r"))
+    assert_equal [["foo"]] + [[]] * 9999 + [["bar"]], c.each.to_a
   end
 end
diff --git a/test/mri/csv/test_interface.rb b/test/mri/csv/test_interface.rb
index be27fcd616a..77730fa5dbb 100755
--- a/test/mri/csv/test_interface.rb
+++ b/test/mri/csv/test_interface.rb
@@ -1,17 +1,10 @@
-#!/usr/bin/env ruby -w
-# encoding: UTF-8
+# -*- coding: utf-8 -*-
 # frozen_string_literal: false
 
-# tc_interface.rb
-#
-#  Created by James Edward Gray II on 2005-10-31.
-#  Copyright 2005 James Edward Gray II. You can redistribute or modify this code
-#  under the terms of Ruby's license.
-
-require_relative "base"
+require_relative "helper"
 require "tempfile"
 
-class TestCSV::Interface < TestCSV
+class TestCSVInterface < Test::Unit::TestCase
   extend DifferentOFS
 
   def setup
@@ -64,6 +57,55 @@ def test_open_and_close
     assert_equal("Return value.", ret)
   end
 
+  def test_open_encoding_valid
+    # U+1F600 GRINNING FACE
+    # U+1F601 GRINNING FACE WITH SMILING EYES
+    File.open(@path, "w") do |file|
+      file << "\u{1F600},\u{1F601}"
+    end
+    CSV.open(@path, encoding: "utf-8") do |csv|
+      assert_equal([["\u{1F600}", "\u{1F601}"]],
+                   csv.to_a)
+    end
+  end
+
+  def test_open_encoding_invalid
+    # U+1F600 GRINNING FACE
+    # U+1F601 GRINNING FACE WITH SMILING EYES
+    File.open(@path, "w") do |file|
+      file << "\u{1F600},\u{1F601}"
+    end
+    CSV.open(@path, encoding: "EUC-JP") do |csv|
+      error = assert_raise(CSV::MalformedCSVError) do
+        csv.shift
+      end
+      assert_equal("Invalid byte sequence in EUC-JP in line 1.",
+                   error.message)
+    end
+  end
+
+  def test_open_encoding_nonexistent
+    _output, error = capture_io do
+      CSV.open(@path, encoding: "nonexistent") do
+      end
+    end
+    assert_equal("path:0: warning: Unsupported encoding nonexistent ignored\n",
+                 error.gsub(/\A.+:\d+: /, "path:0: "))
+  end
+
+  def test_open_encoding_utf_8_with_bom
+    # U+FEFF ZERO WIDTH NO-BREAK SPACE, BOM
+    # U+1F600 GRINNING FACE
+    # U+1F601 GRINNING FACE WITH SMILING EYES
+    File.open(@path, "w") do |file|
+      file << "\u{FEFF}\u{1F600},\u{1F601}"
+    end
+    CSV.open(@path, encoding: "bom|utf-8") do |csv|
+      assert_equal([["\u{1F600}", "\u{1F601}"]],
+                   csv.to_a)
+    end
+  end
+
   def test_parse
     data = File.binread(@path)
     assert_equal( @expected,
@@ -92,6 +134,18 @@ def test_parse_line_with_empty_lines
     assert_equal(Array.new, CSV.parse_line("\n1,2,3"))
   end
 
+  def test_parse_header_only
+    table = CSV.parse("a,b,c", headers: true)
+    assert_equal([
+                   ["a", "b", "c"],
+                   [],
+                 ],
+                 [
+                   table.headers,
+                   table.each.to_a,
+                 ])
+  end
+
   def test_read_and_readlines
     assert_equal( @expected,
                   CSV.read(@path, col_sep: "\t", row_sep: "\r\n") )
@@ -161,6 +215,9 @@ def test_generate
       assert_equal(csv, csv << ["last", %Q{"row"}])
     end
     assert_equal(%Q{1,2,3\n4,,5\nlast,"""row"""\n}, str)
+
+    out = CSV.generate("test") { |csv| csv << ["row"] }
+    assert_equal("testrow\n", out)
   end
 
   def test_generate_line
@@ -186,7 +243,7 @@ def test_write_header_detection
     CSV.open(@path, "w", headers: true) do |csv|
       csv << headers
       csv << %w{1 2 3}
-      assert_equal(headers, csv.instance_variable_get(:@headers))
+      assert_equal(headers, csv.headers)
     end
   end
 
diff --git a/test/mri/csv/test_row.rb b/test/mri/csv/test_row.rb
index 1cb851b027e..f709dd3f130 100755
--- a/test/mri/csv/test_row.rb
+++ b/test/mri/csv/test_row.rb
@@ -1,16 +1,9 @@
-#!/usr/bin/env ruby -w
-# encoding: UTF-8
+# -*- coding: utf-8 -*-
 # frozen_string_literal: false
 
-# tc_row.rb
-#
-#  Created by James Edward Gray II on 2005-10-31.
-#  Copyright 2005 James Edward Gray II. You can redistribute or modify this code
-#  under the terms of Ruby's license.
+require_relative "helper"
 
-require_relative "base"
-
-class TestCSV::Row < TestCSV
+class TestCSVRow < Test::Unit::TestCase
   extend DifferentOFS
 
   def setup
@@ -107,6 +100,19 @@ def test_fetch
   def test_has_key?
     assert_equal(true, @row.has_key?('B'))
     assert_equal(false, @row.has_key?('foo'))
+
+    # aliases
+    assert_equal(true, @row.header?('B'))
+    assert_equal(false, @row.header?('foo'))
+
+    assert_equal(true, @row.include?('B'))
+    assert_equal(false, @row.include?('foo'))
+
+    assert_equal(true, @row.member?('B'))
+    assert_equal(false, @row.member?('foo'))
+
+    assert_equal(true, @row.key?('B'))
+    assert_equal(false, @row.key?('foo'))
   end
 
   def test_set_field
@@ -263,12 +269,6 @@ def test_index
   end
 
   def test_queries
-    # headers
-    assert_send([@row, :header?, "A"])
-    assert_send([@row, :header?, "C"])
-    assert_not_send([@row, :header?, "Z"])
-    assert_send([@row, :include?, "A"])  # alias
-
     # fields
     assert(@row.field?(4))
     assert(@row.field?(nil))
@@ -304,6 +304,17 @@ def test_each
     end
   end
 
+  def test_each_pair
+    assert_equal([
+                   ["A", 1],
+                   ["B", 2],
+                   ["C", 3],
+                   ["A", 4],
+                   ["A", nil],
+                 ],
+                 @row.each_pair.to_a)
+  end
+
   def test_enumerable
     assert_equal( [["A", 1], ["A", 4], ["A", nil]],
                   @row.select { |pair| pair.first == "A" } )
@@ -323,7 +334,7 @@ def test_to_a
 
   def test_to_hash
     hash = @row.to_hash
-    assert_equal({"A" => nil, "B" => 2, "C" => 3}, hash)
+    assert_equal({"A" => @row["A"], "B" => @row["B"], "C" => @row["C"]}, hash)
     hash.keys.each_with_index do |string_key, h|
       assert_predicate(string_key, :frozen?)
       assert_same(string_key, @row.headers[h])
@@ -377,4 +388,45 @@ def test_can_be_compared_when_not_a_row
     r = @row == []
     assert_equal false, r
   end
+
+  def test_dig_by_index
+    assert_equal(2, @row.dig(1))
+
+    assert_nil(@row.dig(100))
+  end
+
+  def test_dig_by_header
+    assert_equal(2, @row.dig("B"))
+
+    assert_nil(@row.dig("Missing"))
+  end
+
+  def test_dig_cell
+    row = CSV::Row.new(%w{A}, [["foo", ["bar", ["baz"]]]])
+
+    assert_equal("foo", row.dig(0, 0))
+    assert_equal("bar", row.dig(0, 1, 0))
+
+    assert_equal("foo", row.dig("A", 0))
+    assert_equal("bar", row.dig("A", 1, 0))
+  end
+
+  def test_dig_cell_no_dig
+    row = CSV::Row.new(%w{A}, ["foo"])
+
+    assert_raise(TypeError) do
+      row.dig(0, 0)
+    end
+    assert_raise(TypeError) do
+      row.dig("A", 0)
+    end
+  end
+
+  def test_dup
+    row = CSV::Row.new(["A"], ["foo"])
+    dupped_row = row.dup
+    dupped_row.delete("A")
+    assert_equal(["foo", nil],
+                 [row["A"], dupped_row["A"]])
+  end
 end
diff --git a/test/mri/csv/test_table.rb b/test/mri/csv/test_table.rb
index 25ef11a772a..50edc77e40a 100755
--- a/test/mri/csv/test_table.rb
+++ b/test/mri/csv/test_table.rb
@@ -1,16 +1,9 @@
-#!/usr/bin/env ruby -w
-# encoding: UTF-8
+# -*- coding: utf-8 -*-
 # frozen_string_literal: false
 
-# tc_table.rb
-#
-#  Created by James Edward Gray II on 2005-10-31.
-#  Copyright 2005 James Edward Gray II. You can redistribute or modify this code
-#  under the terms of Ruby's license.
+require_relative "helper"
 
-require_relative "base"
-
-class TestCSV::Table < TestCSV
+class TestCSVTable < Test::Unit::TestCase
   extend DifferentOFS
 
   def setup
@@ -23,6 +16,8 @@ def setup
     @header_table = CSV::Table.new(
       [CSV::Row.new(%w{A B C}, %w{A B C}, true)] + @rows
     )
+    
+    @header_only_table = CSV::Table.new([], headers: %w{A B C})
   end
 
   def test_initialze
@@ -44,6 +39,11 @@ def test_modes
     assert_equal(:row, rows.mode)
     assert_equal(@table, rows)
 
+    col_or_row = rows.by_col_or_row
+    assert_equal(:row, rows.mode)
+    assert_equal(:col_or_row, col_or_row.mode)
+    assert_equal(@table, col_or_row)
+
     # destructive mode changing calls
     assert_equal(@table, @table.by_row!)
     assert_equal(:row, @table.mode)
@@ -60,6 +60,17 @@ def test_headers_empty
     assert_equal Array.new, t.headers
   end
 
+  def test_headers_only
+    assert_equal(%w[A B C], @header_only_table.headers)
+  end
+
+  def test_headers_modified_by_row
+    table = CSV::Table.new([], headers: ["A", "B"])
+    table << ["a", "b"]
+    table.first << {"C" => "c"}
+    assert_equal(["A", "B", "C"], table.headers)
+  end
+
   def test_index
     ##################
     ### Mixed Mode ###
@@ -150,13 +161,13 @@ def test_set_row_or_column
                   @table.to_a )
 
     # verify resulting table
-    assert_equal(<<-END_RESULT.gsub(/^\s+/, ""), @table.to_csv)
-    A,B,C,Type,Index
-    1,100,3,data,1
-    4,200,6,data,2
-    10,,12,data,3
-    13,,15,data,
-    END_RESULT
+    assert_equal(<<-CSV, @table.to_csv)
+A,B,C,Type,Index
+1,100,3,data,1
+4,200,6,data,2
+10,,12,data,3
+13,,15,data,
+    CSV
 
     # with headers
     @header_table["Type"] = "data"
@@ -263,6 +274,15 @@ def test_each
     @table.each { |row| assert_instance_of(CSV::Row, row) }
   end
 
+  def test_each_split
+    yielded_values = []
+    @table.each do |column1, column2, column3|
+      yielded_values << [column1, column2, column3]
+    end
+    assert_equal(@rows.collect(&:to_a),
+                 yielded_values)
+  end
+
   def test_enumerable
     assert_equal( @rows.values_at(0, 2),
                   @table.select { |row| (row["B"] % 2).zero? } )
@@ -279,12 +299,12 @@ def test_to_a
   end
 
   def test_to_csv
-    csv = <<-END_CSV.gsub(/^\s+/, "")
-    A,B,C
-    1,2,3
-    4,5,6
-    7,8,9
-    END_CSV
+    csv = <<-CSV
+A,B,C
+1,2,3
+4,5,6
+7,8,9
+    CSV
 
     # normal conversion
     assert_equal(csv, @table.to_csv)
@@ -312,7 +332,7 @@ def test_append
     assert_equal(CSV::Row.new(%w[A B C], [13, 14, 15]), @table[-1])
   end
 
-  def test_delete_mixed
+  def test_delete_mixed_one
     ##################
     ### Mixed Mode ###
     ##################
@@ -323,11 +343,33 @@ def test_delete_mixed
     assert_equal(@rows.map { |row| row["A"] }, @table.delete("A"))
 
     # verify resulting table
-    assert_equal(<<-END_RESULT.gsub(/^\s+/, ""), @table.to_csv)
-    B,C
-    2,3
-    8,9
-    END_RESULT
+    assert_equal(<<-CSV, @table.to_csv)
+B,C
+2,3
+8,9
+    CSV
+  end
+
+  def test_delete_mixed_multiple
+    ##################
+    ### Mixed Mode ###
+    ##################
+    # delete row and col
+    second_row = @rows[1]
+    a_col = @rows.map { |row| row["A"] }
+    a_col_without_second_row = a_col[0..0] + a_col[2..-1]
+    assert_equal([
+                   second_row,
+                   a_col_without_second_row,
+                 ],
+                 @table.delete(1, "A"))
+
+    # verify resulting table
+    assert_equal(<<-CSV, @table.to_csv)
+B,C
+2,3
+8,9
+    CSV
   end
 
   def test_delete_column
@@ -340,12 +382,12 @@ def test_delete_column
     assert_equal(@rows.map { |row| row["C"] }, @table.delete("C"))
 
     # verify resulting table
-    assert_equal(<<-END_RESULT.gsub(/^\s+/, ""), @table.to_csv)
-    B
-    2
-    5
-    8
-    END_RESULT
+    assert_equal(<<-CSV, @table.to_csv)
+B
+2
+5
+8
+    CSV
   end
 
   def test_delete_row
@@ -358,11 +400,11 @@ def test_delete_row
     assert_raise(TypeError) { @table.delete("C") }
 
     # verify resulting table
-    assert_equal(<<-END_RESULT.gsub(/^\s+/, ""), @table.to_csv)
-    A,B,C
-    1,2,3
-    7,8,9
-    END_RESULT
+    assert_equal(<<-CSV, @table.to_csv)
+A,B,C
+1,2,3
+7,8,9
+    CSV
   end
 
   def test_delete_with_blank_rows
@@ -379,10 +421,10 @@ def test_delete_if_row
     assert_equal(@table, @table.delete_if { |row| (row["B"] % 2).zero? })
 
     # verify resulting table
-    assert_equal(<<-END_RESULT.gsub(/^\s+/, ""), @table.to_csv)
-    A,B,C
-    4,5,6
-    END_RESULT
+    assert_equal(<<-CSV, @table.to_csv)
+A,B,C
+4,5,6
+    CSV
   end
 
   def test_delete_if_row_without_block
@@ -397,10 +439,10 @@ def test_delete_if_row_without_block
     assert_equal(@table, enum.each { |row| (row["B"] % 2).zero? })
 
     # verify resulting table
-    assert_equal(<<-END_RESULT.gsub(/^\s+/, ""), @table.to_csv)
-    A,B,C
-    4,5,6
-    END_RESULT
+    assert_equal(<<-CSV, @table.to_csv)
+A,B,C
+4,5,6
+    CSV
   end
 
   def test_delete_if_column
@@ -410,12 +452,12 @@ def test_delete_if_column
     @table.by_col!
 
     assert_equal(@table, @table.delete_if { |h, v| h > "A" })
-    assert_equal(<<-END_RESULT.gsub(/^\s+/, ""), @table.to_csv)
-    A
-    1
-    4
-    7
-    END_RESULT
+    assert_equal(<<-CSV, @table.to_csv)
+A
+1
+4
+7
+    CSV
   end
 
   def test_delete_if_column_without_block
@@ -429,12 +471,27 @@ def test_delete_if_column_without_block
     assert_equal(@table.headers.size, enum.size)
 
     assert_equal(@table, enum.each { |h, v| h > "A" })
-    assert_equal(<<-END_RESULT.gsub(/^\s+/, ""), @table.to_csv)
-    A
-    1
-    4
-    7
-    END_RESULT
+    assert_equal(<<-CSV, @table.to_csv)
+A
+1
+4
+7
+    CSV
+  end
+
+  def test_delete_headers_only
+    ###################
+    ### Column Mode ###
+    ###################
+    @header_only_table.by_col!
+
+    # delete by index
+    assert_equal([], @header_only_table.delete(0))
+    assert_equal(%w[B C], @header_only_table.headers)
+
+    # delete by header
+    assert_equal([], @header_only_table.delete("C"))
+    assert_equal(%w[B], @header_only_table.headers)
   end
 
   def test_values_at
@@ -494,4 +551,70 @@ def test_inspect_encoding_is_ascii_compatible
                  @table.inspect.encoding],
             "inspect() was not ASCII compatible." )
   end
+
+  def test_dig_mixed
+    # by row
+    assert_equal(@rows[0], @table.dig(0))
+    assert_nil(@table.dig(100))  # empty row
+
+    # by col
+    assert_equal([2, 5, 8], @table.dig("B"))
+    assert_equal([nil] * @rows.size, @table.dig("Z"))  # empty col
+
+    # by row then col
+    assert_equal(2, @table.dig(0, 1))
+    assert_equal(6, @table.dig(1, "C"))
+
+    # by col then row
+    assert_equal(5, @table.dig("B", 1))
+    assert_equal(9, @table.dig("C", 2))
+  end
+
+  def test_dig_by_column
+    @table.by_col!
+
+    assert_equal([2, 5, 8], @table.dig(1))
+    assert_equal([2, 5, 8], @table.dig("B"))
+
+    # by col then row
+    assert_equal(5, @table.dig("B", 1))
+    assert_equal(9, @table.dig("C", 2))
+  end
+
+  def test_dig_by_row
+    @table.by_row!
+
+    assert_equal(@rows[1], @table.dig(1))
+    assert_raise(TypeError) { @table.dig("B") }
+
+    # by row then col
+    assert_equal(2, @table.dig(0, 1))
+    assert_equal(6, @table.dig(1, "C"))
+  end
+
+  def test_dig_cell
+    table = CSV::Table.new([CSV::Row.new(["A"], [["foo", ["bar", ["baz"]]]])])
+
+    # by row, col then cell
+    assert_equal("foo", table.dig(0, "A", 0))
+    assert_equal(["baz"], table.dig(0, "A", 1, 1))
+
+    # by col, row then cell
+    assert_equal("foo", table.dig("A", 0, 0))
+    assert_equal(["baz"], table.dig("A", 0, 1, 1))
+  end
+
+  def test_dig_cell_no_dig
+    table = CSV::Table.new([CSV::Row.new(["A"], ["foo"])])
+
+    # by row, col then cell
+    assert_raise(TypeError) do
+      table.dig(0, "A", 0)
+    end
+
+    # by col, row then cell
+    assert_raise(TypeError) do
+      table.dig("A", 0, 0)
+    end
+  end
 end
diff --git a/test/mri/csv/write/test_converters.rb b/test/mri/csv/write/test_converters.rb
new file mode 100644
index 00000000000..a93b1040ac6
--- /dev/null
+++ b/test/mri/csv/write/test_converters.rb
@@ -0,0 +1,53 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+module TestCSVWriteConverters
+  def test_one
+    assert_equal(%Q[=a,=b,=c\n],
+                 generate_line(["a", "b", "c"],
+                               write_converters: ->(value) {"=" + value}))
+  end
+
+  def test_multiple
+    assert_equal(%Q[=a_,=b_,=c_\n],
+                 generate_line(["a", "b", "c"],
+                               write_converters: [
+                                 ->(value) {"=" + value},
+                                 ->(value) {value + "_"},
+                               ]))
+  end
+
+  def test_nil_value
+    assert_equal(%Q[a,NaN,c\n],
+                 generate_line(["a", nil, "c"],
+                               write_nil_value: "NaN"))
+  end
+
+  def test_empty_value
+    assert_equal(%Q[a,,c\n],
+                 generate_line(["a", "", "c"],
+                               write_empty_value: nil))
+  end
+end
+
+class TestCSVWriteConvertersGenerateLine < Test::Unit::TestCase
+  include TestCSVWriteConverters
+  extend DifferentOFS
+
+  def generate_line(row, **kwargs)
+    CSV.generate_line(row, **kwargs)
+  end
+end
+
+class TestCSVWriteConvertersGenerate < Test::Unit::TestCase
+  include TestCSVWriteConverters
+  extend DifferentOFS
+
+  def generate_line(row, **kwargs)
+    CSV.generate(**kwargs) do |csv|
+      csv << row
+    end
+  end
+end
diff --git a/test/mri/csv/write/test_general.rb b/test/mri/csv/write/test_general.rb
new file mode 100644
index 00000000000..c879f54e74c
--- /dev/null
+++ b/test/mri/csv/write/test_general.rb
@@ -0,0 +1,228 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+module TestCSVWriteGeneral
+  def test_tab
+    assert_equal("\t#{$INPUT_RECORD_SEPARATOR}",
+                 generate_line(["\t"]))
+  end
+
+  def test_quote_character
+    assert_equal(%Q[foo,"""",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", %Q["], "baz"]))
+  end
+
+  def test_quote_character_double
+    assert_equal(%Q[foo,"""""",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", %Q[""], "baz"]))
+  end
+
+  def test_quote
+    assert_equal(%Q[foo,"""bar""",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", %Q["bar"], "baz"]))
+  end
+
+  def test_quote_lf
+    assert_equal(%Q["""\n","""\n"#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([%Q["\n], %Q["\n]]))
+  end
+
+  def test_quote_cr
+    assert_equal(%Q["""\r","""\r"#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([%Q["\r], %Q["\r]]))
+  end
+
+  def test_quote_last
+    assert_equal(%Q[foo,"bar"""#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", %Q[bar"]]))
+  end
+
+  def test_quote_lf_last
+    assert_equal(%Q[foo,"\nbar"""#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", %Q[\nbar"]]))
+  end
+
+  def test_quote_lf_value_lf
+    assert_equal(%Q[foo,"""\nbar\n"""#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", %Q["\nbar\n"]]))
+  end
+
+  def test_quote_lf_value_lf_nil
+    assert_equal(%Q[foo,"""\nbar\n""",#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", %Q["\nbar\n"], nil]))
+  end
+
+  def test_cr
+    assert_equal(%Q[foo,"\r",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "\r", "baz"]))
+  end
+
+  def test_lf
+    assert_equal(%Q[foo,"\n",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "\n", "baz"]))
+  end
+
+  def test_cr_lf
+    assert_equal(%Q[foo,"\r\n",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "\r\n", "baz"]))
+  end
+
+  def test_cr_dot_lf
+    assert_equal(%Q[foo,"\r.\n",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "\r.\n", "baz"]))
+  end
+
+  def test_cr_lf_cr
+    assert_equal(%Q[foo,"\r\n\r",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "\r\n\r", "baz"]))
+  end
+
+  def test_cr_lf_lf
+    assert_equal(%Q[foo,"\r\n\n",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "\r\n\n", "baz"]))
+  end
+
+  def test_cr_lf_comma
+    assert_equal(%Q["\r\n,"#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["\r\n,"]))
+  end
+
+  def test_cr_lf_comma_nil
+    assert_equal(%Q["\r\n,",#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["\r\n,", nil]))
+  end
+
+  def test_comma
+    assert_equal(%Q[","#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([","]))
+  end
+
+  def test_comma_double
+    assert_equal(%Q[",",","#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([",", ","]))
+  end
+
+  def test_comma_and_value
+    assert_equal(%Q[foo,"foo,bar",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "foo,bar", "baz"]))
+  end
+
+  def test_one_element
+    assert_equal(%Q[foo#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo"]))
+  end
+
+  def test_nil_values_only
+    assert_equal(%Q[,,#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([nil, nil, nil]))
+  end
+
+  def test_nil_double_only
+    assert_equal(%Q[,#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([nil, nil]))
+  end
+
+  def test_nil_values
+    assert_equal(%Q[foo,,,#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", nil, nil, nil]))
+  end
+
+  def test_nil_value_first
+    assert_equal(%Q[,foo,baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([nil, "foo", "baz"]))
+  end
+
+  def test_nil_value_middle
+    assert_equal(%Q[foo,,baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", nil, "baz"]))
+  end
+
+  def test_nil_value_last
+    assert_equal(%Q[foo,baz,#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "baz", nil]))
+  end
+
+  def test_nil_empty
+    assert_equal(%Q[,""#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([nil, ""]))
+  end
+
+  def test_nil_cr
+    assert_equal(%Q[,"\r"#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([nil, "\r"]))
+  end
+
+  def test_values
+    assert_equal(%Q[foo,bar#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "bar"]))
+  end
+
+  def test_semi_colon
+    assert_equal(%Q[;#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([";"]))
+  end
+
+  def test_semi_colon_values
+    assert_equal(%Q[;,;#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([";", ";"]))
+  end
+
+  def test_tab_values
+    assert_equal(%Q[\t,\t#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["\t", "\t"]))
+  end
+
+  def test_col_sep
+    assert_equal(%Q[a;b;;c#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["a", "b", nil, "c"],
+                               col_sep: ";"))
+    assert_equal(%Q[a\tb\t\tc#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["a", "b", nil, "c"],
+                               col_sep: "\t"))
+  end
+
+  def test_row_sep
+    assert_equal(%Q[a,b,,c\r\n],
+                 generate_line(["a", "b", nil, "c"],
+                               row_sep: "\r\n"))
+  end
+
+  def test_force_quotes
+    assert_equal(%Q["1","b","","already ""quoted"""#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([1, "b", nil, %Q{already "quoted"}],
+                               force_quotes: true))
+  end
+
+  def test_encoding_utf8
+    assert_equal(%Q[あ,い,う#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["あ" , "い", "う"]))
+  end
+
+  def test_encoding_euc_jp
+    row = ["あ", "い", "う"].collect {|field| field.encode("EUC-JP")}
+    assert_equal(%Q[あ,い,う#{$INPUT_RECORD_SEPARATOR}].encode("EUC-JP"),
+                 generate_line(row))
+  end
+end
+
+class TestCSVWriteGeneralGenerateLine < Test::Unit::TestCase
+  include TestCSVWriteGeneral
+  extend DifferentOFS
+
+  def generate_line(row, **kwargs)
+    CSV.generate_line(row, **kwargs)
+  end
+end
+
+class TestCSVWriteGeneralGenerate < Test::Unit::TestCase
+  include TestCSVWriteGeneral
+  extend DifferentOFS
+
+  def generate_line(row, **kwargs)
+    CSV.generate(**kwargs) do |csv|
+      csv << row
+    end
+  end
+end
diff --git a/test/mri/csv/write/test_quote_empty.rb b/test/mri/csv/write/test_quote_empty.rb
new file mode 100644
index 00000000000..70f73dad4ab
--- /dev/null
+++ b/test/mri/csv/write/test_quote_empty.rb
@@ -0,0 +1,70 @@
+# -*- coding: utf-8 -*-
+# frozen_string_literal: false
+
+require_relative "../helper"
+
+module TestCSVWriteQuoteEmpty
+  def test_quote_empty_default
+    assert_equal(%Q["""",""#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([%Q["], ""]))
+  end
+
+  def test_quote_empty_false
+    assert_equal(%Q["""",#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([%Q["], ""],
+                               quote_empty: false))
+  end
+
+  def test_empty_default
+    assert_equal(%Q[foo,"",baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "", "baz"]))
+  end
+
+  def test_empty_false
+    assert_equal(%Q[foo,,baz#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["foo", "", "baz"],
+                               quote_empty: false))
+  end
+
+  def test_empty_only_default
+    assert_equal(%Q[""#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([""]))
+  end
+
+  def test_empty_only_false
+    assert_equal(%Q[#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line([""],
+                               quote_empty: false))
+  end
+
+  def test_empty_double_default
+    assert_equal(%Q["",""#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["", ""]))
+  end
+
+  def test_empty_double_false
+    assert_equal(%Q[,#{$INPUT_RECORD_SEPARATOR}],
+                 generate_line(["", ""],
+                               quote_empty: false))
+  end
+end
+
+class TestCSVWriteQuoteEmptyGenerateLine < Test::Unit::TestCase
+  include TestCSVWriteQuoteEmpty
+  extend DifferentOFS
+
+  def generate_line(row, **kwargs)
+    CSV.generate_line(row, **kwargs)
+  end
+end
+
+class TestCSVWriteQuoteEmptyGenerate < Test::Unit::TestCase
+  include TestCSVWriteQuoteEmpty
+  extend DifferentOFS
+
+  def generate_line(row, **kwargs)
+    CSV.generate(**kwargs) do |csv|
+      csv << row
+    end
+  end
+end
diff --git a/test/mri/date/test_date_arith.rb b/test/mri/date/test_date_arith.rb
index d0d27d72f74..e1f29dbf229 100644
--- a/test/mri/date/test_date_arith.rb
+++ b/test/mri/date/test_date_arith.rb
@@ -3,11 +3,18 @@
 require 'date'
 
 class TestDateArith < Test::Unit::TestCase
+  class Rat < Numeric
+    def to_r; self; end
+  end
 
-  def new_offset
+  def test_new_offset
     d = DateTime.new(2002, 3, 14)
     assert_equal(Rational(9, 24), d.new_offset(Rational(9, 24)).offset)
     assert_equal(Rational(9, 24), d.new_offset('+0900').offset)
+    n = Rat.new
+    assert_raise(TypeError) do
+      Timeout.timeout(1) {d.new_offset(n)}
+    end
   end
 
   def test__plus
@@ -37,6 +44,13 @@ def test__plus__ex
     assert_raise(e) do
       DateTime.new(2000,2,29) + Time.mktime(2000,2,29)
     end
+    n = Rat.new
+    assert_raise(e) do
+      Timeout.timeout(1) {Date.new(2000,2,29) + n}
+    end
+    assert_raise(e) do
+      Timeout.timeout(1) {DateTime.new(2000,2,29) + n}
+    end
   end
 
   def test__minus
diff --git a/test/mri/date/test_date_attr.rb b/test/mri/date/test_date_attr.rb
index b3b5d3a800f..1e4d1bfd7ab 100644
--- a/test/mri/date/test_date_attr.rb
+++ b/test/mri/date/test_date_attr.rb
@@ -88,16 +88,16 @@ def test__wday_predicate
   end
 
   def test_nth_kday
-    assert_equal(false, Date.new(2001,1,14).__send__(:nth_kday?, 1,0))
-    assert_equal(true, Date.new(2001,1,14).__send__(:nth_kday?, 2,0))
-    assert_equal(false, Date.new(2001,1,14).__send__(:nth_kday?, 3,0))
-    assert_equal(false, Date.new(2001,1,14).__send__(:nth_kday?, 4,0))
-    assert_equal(false, Date.new(2001,1,14).__send__(:nth_kday?, 5,0))
-    assert_equal(false, Date.new(2001,1,14).__send__(:nth_kday?, -1,0))
-    assert_equal(false, Date.new(2001,1,14).__send__(:nth_kday?, -2,0))
-    assert_equal(true, Date.new(2001,1,14).__send__(:nth_kday?, -3,0))
-    assert_equal(false, Date.new(2001,1,14).__send__(:nth_kday?, -4,0))
-    assert_equal(false, Date.new(2001,1,14).__send__(:nth_kday?, -5,0))
+    assert_equal(false, Date.new(2001,1,14).nth_kday?(1,0))
+    assert_equal(true, Date.new(2001,1,14).nth_kday?(2,0))
+    assert_equal(false, Date.new(2001,1,14).nth_kday?(3,0))
+    assert_equal(false, Date.new(2001,1,14).nth_kday?(4,0))
+    assert_equal(false, Date.new(2001,1,14).nth_kday?(5,0))
+    assert_equal(false, Date.new(2001,1,14).nth_kday?(-1,0))
+    assert_equal(false, Date.new(2001,1,14).nth_kday?(-2,0))
+    assert_equal(true, Date.new(2001,1,14).nth_kday?(-3,0))
+    assert_equal(false, Date.new(2001,1,14).nth_kday?(-4,0))
+    assert_equal(false, Date.new(2001,1,14).nth_kday?(-5,0))
   end if Date.new.respond_to?(:nth_kday?, true)
 
 end
diff --git a/test/mri/date/test_date_marshal.rb b/test/mri/date/test_date_marshal.rb
index 99a7239f955..c7ce737aac2 100644
--- a/test/mri/date/test_date_marshal.rb
+++ b/test/mri/date/test_date_marshal.rb
@@ -30,13 +30,23 @@ def test_marshal
     a = d.marshal_dump
     d.freeze
     assert(d.frozen?)
-    assert_raise(FrozenError){d.marshal_load(a)}
+    expected_error = defined?(FrozenError) ? FrozenError : RuntimeError
+    assert_raise(expected_error){d.marshal_load(a)}
 
     d = DateTime.now
     a = d.marshal_dump
     d.freeze
     assert(d.frozen?)
-    assert_raise(FrozenError){d.marshal_load(a)}
+    expected_error = defined?(FrozenError) ? FrozenError : RuntimeError
+    assert_raise(expected_error){d.marshal_load(a)}
   end
 
+  def test_memsize
+    require 'objspace'
+    t = DateTime.new(2018, 11, 13)
+    size = ObjectSpace.memsize_of(t)
+    t2 = Marshal.load(Marshal.dump(t))
+    assert_equal(t, t2)
+    assert_equal(size, ObjectSpace.memsize_of(t2), "not reallocated but memsize changed")
+  end
 end
diff --git a/test/mri/date/test_date_new.rb b/test/mri/date/test_date_new.rb
index fe9a631ad09..d27116b198b 100644
--- a/test/mri/date/test_date_new.rb
+++ b/test/mri/date/test_date_new.rb
@@ -203,46 +203,46 @@ def test_commercial__ex
   end
 
   def test_weeknum
-    d = Date.__send__(:weeknum)
-    dt = DateTime.__send__(:weeknum)
+    d = Date.weeknum
+    dt = DateTime.weeknum
     assert_equal([-4712, 1, 1], [d.year, d.mon, d.mday])
     assert_equal([-4712, 1, 1], [dt.year, dt.mon, dt.mday])
     assert_equal([0, 0, 0], [dt.hour, dt.min, dt.sec])
 
-    d = Date.__send__(:weeknum, 2002,11,4, 0)
+    d = Date.weeknum(2002,11,4, 0)
     assert_equal(2452355, d.jd)
 
-    d = DateTime.__send__(:weeknum, 2002,11,4, 0, 11,22,33)
+    d = DateTime.weeknum(2002,11,4, 0, 11,22,33)
     assert_equal(2452355, d.jd)
     assert_equal([11,22,33], [d.hour, d.min, d.sec])
 
     assert_raise(ArgumentError) do
-      Date.__send__(:weeknum, 1999,53,0, 0)
+      Date.weeknum(1999,53,0, 0)
     end
     assert_raise(ArgumentError) do
-      Date.__send__(:weeknum, 1999,-53,-1, 0)
+      Date.weeknum(1999,-53,-1, 0)
     end
   end if Date.respond_to?(:weeknum, true)
 
   def test_nth_kday
-    d = Date.__send__(:nth_kday)
-    dt = DateTime.__send__(:nth_kday)
+    d = Date.nth_kday
+    dt = DateTime.nth_kday
     assert_equal([-4712, 1, 1], [d.year, d.mon, d.mday])
     assert_equal([-4712, 1, 1], [dt.year, dt.mon, dt.mday])
     assert_equal([0, 0, 0], [dt.hour, dt.min, dt.sec])
 
-    d = Date.__send__(:nth_kday, 1992,2, 5,6)
+    d = Date.nth_kday(1992,2, 5,6)
     assert_equal(2448682, d.jd)
 
-    d = DateTime.__send__(:nth_kday, 1992,2, 5,6, 11,22,33)
+    d = DateTime.nth_kday(1992,2, 5,6, 11,22,33)
     assert_equal(2448682, d.jd)
     assert_equal([11,22,33], [d.hour, d.min, d.sec])
 
     assert_raise(ArgumentError) do
-      Date.__send__(:nth_kday, 2006,5, 5,0)
+      Date.nth_kday(2006,5, 5,0)
     end
     assert_raise(ArgumentError) do
-      Date.__send__(:nth_kday, 2006,5, -5,0)
+      Date.nth_kday(2006,5, -5,0)
     end
   end if Date.respond_to?(:nth_kday, true)
 
@@ -267,4 +267,12 @@ def test_now
     assert_in_delta(t, t2, t - z + 2)
   end
 
+  def test_memsize
+    require 'objspace'
+    t = DateTime.now
+    size = ObjectSpace.memsize_of(t)
+    t.__send__(:initialize_copy, Date.today)
+    assert_instance_of(DateTime, t)
+    assert_equal(size, ObjectSpace.memsize_of(t), "not reallocated but memsize changed")
+  end
 end
diff --git a/test/mri/date/test_date_parse.rb b/test/mri/date/test_date_parse.rb
index ac0eb85ca7b..e17fd3eb25f 100644
--- a/test/mri/date/test_date_parse.rb
+++ b/test/mri/date/test_date_parse.rb
@@ -121,6 +121,8 @@ def test__parse
      [['S40.05.23T23:55:21-09:00',false],[1965,5,23,23,55,21,'-09:00',-9*3600,nil], __LINE__],
      [['H11.05.23 23:55:21Z',false],[1999,5,23,23,55,21,'Z',0,nil], __LINE__],
      [['H11.05.23T23:55:21Z',false],[1999,5,23,23,55,21,'Z',0,nil], __LINE__],
+     [['H31.04.30 23:55:21Z',false],[2019,4,30,23,55,21,'Z',0,nil], __LINE__],
+     [['H31.04.30T23:55:21Z',false],[2019,4,30,23,55,21,'Z',0,nil], __LINE__],
 
      # ofx date
      [['19990523235521',false],[1999,5,23,23,55,21,nil,nil,nil], __LINE__],
@@ -416,7 +418,14 @@ def test__parse
 	a[1] = -1
 	a[2] = h[:yday]
       end
-      assert_equal(y, a, format('<failed at line %d>', l))
+      l = format('<failed at line %d>', l)
+      assert_equal(y, a, l)
+      if y[6]
+        h = Date._parse(x[0].dup.taint, *x[1..-1])
+        assert_equal(y[6], h[:zone], l)
+        assert_equal(y[6].encoding, h[:zone].encoding, l)
+        assert_predicate(h[:zone], :tainted?, l)
+      end
     end
   end
 
@@ -984,6 +993,15 @@ def test__jisx0301
     h = Date._jisx0301('S63.02.03')
     assert_equal([1988, 2, 3, nil, nil, nil, nil],
 		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('H31.04.30')
+    assert_equal([2019, 4, 30, nil, nil, nil, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('H31.05.01')
+    assert_equal([2019, 5, 1, nil, nil, nil, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('R01.05.01')
+    assert_equal([2019, 5, 1, nil, nil, nil, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
 
     h = Date._jisx0301('H13.02.03T04:05:06')
     assert_equal([2001, 2, 3, 4, 5, 6, nil],
@@ -998,6 +1016,45 @@ def test__jisx0301
     assert_equal([2001, 2, 3, 4, 5, 6, 3600],
 		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
 
+    h = Date._jisx0301('H31.04.30T04:05:06')
+    assert_equal([2019, 4, 30, 4, 5, 6, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('H31.04.30T04:05:06,07')
+    assert_equal([2019, 4, 30, 4, 5, 6, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('H31.04.30T04:05:06Z')
+    assert_equal([2019, 4, 30, 4, 5, 6, 0],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('H31.04.30T04:05:06.07+0100')
+    assert_equal([2019, 4, 30, 4, 5, 6, 3600],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+
+    h = Date._jisx0301('H31.05.01T04:05:06')
+    assert_equal([2019, 5, 1, 4, 5, 6, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('H31.05.01T04:05:06,07')
+    assert_equal([2019, 5, 1, 4, 5, 6, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('H31.05.01T04:05:06Z')
+    assert_equal([2019, 5, 1, 4, 5, 6, 0],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('H31.05.01T04:05:06.07+0100')
+    assert_equal([2019, 5, 1, 4, 5, 6, 3600],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+
+    h = Date._jisx0301('R01.05.01T04:05:06')
+    assert_equal([2019, 5, 1, 4, 5, 6, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('R01.05.01T04:05:06,07')
+    assert_equal([2019, 5, 1, 4, 5, 6, nil],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('R01.05.01T04:05:06Z')
+    assert_equal([2019, 5, 1, 4, 5, 6, 0],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+    h = Date._jisx0301('R01.05.01T04:05:06.07+0100')
+    assert_equal([2019, 5, 1, 4, 5, 6, 3600],
+		 h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
+
     h = Date._jisx0301('')
     assert_equal({}, h)
   end
@@ -1083,9 +1140,33 @@ def test_jisx0301
     assert_equal(Date.new(2001,2,3), d)
     assert_equal(Date::ITALY + 10, d.start)
 
+    d = Date.jisx0301('H31.04.30', Date::ITALY + 10)
+    assert_equal(Date.new(2019,4,30), d)
+    assert_equal(Date::ITALY + 10, d.start)
+
+    d = Date.jisx0301('H31.05.01', Date::ITALY + 10)
+    assert_equal(Date.new(2019,5,1), d)
+    assert_equal(Date::ITALY + 10, d.start)
+
+    d = Date.jisx0301('R01.05.01', Date::ITALY + 10)
+    assert_equal(Date.new(2019,5,1), d)
+    assert_equal(Date::ITALY + 10, d.start)
+
     d = DateTime.jisx0301('H13.02.03T04:05:06+07:00', Date::ITALY + 10)
     assert_equal(DateTime.new(2001,2,3,4,5,6,'+07:00'), d)
     assert_equal(Date::ITALY + 10, d.start)
+
+    d = DateTime.jisx0301('H31.04.30T04:05:06+07:00', Date::ITALY + 10)
+    assert_equal(DateTime.new(2019,4,30,4,5,6,'+07:00'), d)
+    assert_equal(Date::ITALY + 10, d.start)
+
+    d = DateTime.jisx0301('H31.05.01T04:05:06+07:00', Date::ITALY + 10)
+    assert_equal(DateTime.new(2019,5,1,4,5,6,'+07:00'), d)
+    assert_equal(Date::ITALY + 10, d.start)
+
+    d = DateTime.jisx0301('R01.05.01T04:05:06+07:00', Date::ITALY + 10)
+    assert_equal(DateTime.new(2019,5,1,4,5,6,'+07:00'), d)
+    assert_equal(Date::ITALY + 10, d.start)
   end
 
   def test_given_string
@@ -1120,6 +1201,16 @@ def test_given_string
     s0 = s.dup
     assert_not_equal({}, Date._jisx0301(s))
     assert_equal(s0, s)
+
+    s = 'H31.04.30T04:05:06,07Z'
+    s0 = s.dup
+    assert_not_equal({}, Date._jisx0301(s))
+    assert_equal(s0, s)
+
+    s = 'H31.05.01T04:05:06,07Z'
+    s0 = s.dup
+    assert_not_equal({}, Date._jisx0301(s))
+    assert_equal(s0, s)
   end
 
 end
diff --git a/test/mri/date/test_date_strftime.rb b/test/mri/date/test_date_strftime.rb
index a33eaa340fc..dc237a909db 100644
--- a/test/mri/date/test_date_strftime.rb
+++ b/test/mri/date/test_date_strftime.rb
@@ -406,6 +406,8 @@ def test__different_format
     assert_equal('S64.01.07', Date.parse('1989-01-07').jisx0301)
     assert_equal('H01.01.08', Date.parse('1989-01-08').jisx0301)
     assert_equal('H18.09.01', Date.parse('2006-09-01').jisx0301)
+    assert_equal('H31.04.30', Date.parse('2019-04-30').jisx0301)
+    assert_equal('R01.05.01', Date.parse('2019-05-01').jisx0301)
 
     %w(M06.01.01
        M45.07.29
@@ -414,7 +416,10 @@ def test__different_format
        S01.12.25
        S64.01.07
        H01.01.08
-       H18.09.01).each do |s|
+       H18.09.01
+       H31.04.30
+       R01.05.01
+    ).each do |s|
       assert_equal(s, Date.parse(s).jisx0301)
     end
 
diff --git a/test/mri/date/test_switch_hitter.rb b/test/mri/date/test_switch_hitter.rb
index 16814d44dfb..4693cbd466f 100644
--- a/test/mri/date/test_switch_hitter.rb
+++ b/test/mri/date/test_switch_hitter.rb
@@ -187,18 +187,18 @@ def test_fractional
     d = Date.jd(Rational(2451944))
     assert_equal(2451944, d.jd)
     d = Date.jd(2451944.5)
-    assert_equal([2451944, 12], [d.jd, d.send('hour')])
+    assert_equal(2451944, d.jd)
     d = Date.jd(Rational('2451944.5'))
-    assert_equal([2451944, 12], [d.jd, d.send('hour')])
+    assert_equal(2451944, d.jd)
 
     d = Date.civil(2001, 2, 3.0)
     assert_equal([2001, 2, 3], [d.year, d.mon, d.mday])
     d = Date.civil(2001, 2, Rational(3))
     assert_equal([2001, 2, 3], [d.year, d.mon, d.mday])
     d = Date.civil(2001, 2, 3.5)
-    assert_equal([2001, 2, 3, 12], [d.year, d.mon, d.mday, d.send('hour')])
+    assert_equal([2001, 2, 3], [d.year, d.mon, d.mday])
     d = Date.civil(2001, 2, Rational('3.5'))
-    assert_equal([2001, 2, 3, 12], [d.year, d.mon, d.mday, d.send('hour')])
+    assert_equal([2001, 2, 3], [d.year, d.mon, d.mday])
 
     d = Date.ordinal(2001, 2.0)
     assert_equal([2001, 2], [d.year, d.yday])
@@ -266,10 +266,8 @@ def test_canon24oc
   end
 
   def test_zone
-    d = Date.new(2001, 2, 3)
-    assert_equal(Encoding::US_ASCII, d.send(:zone).encoding)
     d = DateTime.new(2001, 2, 3)
-    assert_equal(Encoding::US_ASCII, d.send(:zone).encoding)
+    assert_equal(Encoding::US_ASCII, d.zone.encoding)
   end
 
   def test_to_s
@@ -534,7 +532,6 @@ def test_marshal14
     s = "\x04\x03u:\x01\x04Date\x01\v\x04\x03[\x01\x02i\x03\xE8i%T"
     d = Marshal.load(s)
     assert_equal(Rational(4903887,2), d.ajd)
-    assert_equal(0, d.send(:offset))
     assert_equal(Date::GREGORIAN, d.start)
   end
 
@@ -542,7 +539,6 @@ def test_marshal16
     s = "\x04\x06u:\tDate\x0F\x04\x06[\ai\x03\xE8i%T"
     d = Marshal.load(s)
     assert_equal(Rational(4903887,2), d.ajd)
-    assert_equal(0, d.send(:offset))
     assert_equal(Date::GREGORIAN, d.start)
   end
 
@@ -550,7 +546,6 @@ def test_marshal18
     s = "\x04\bu:\tDateP\x04\b[\bo:\rRational\a:\x0F@numeratori\x03\xCF\xD3J:\x11@denominatori\ai\x00o:\x13Date::Infinity\x06:\a@di\xFA"
     d = Marshal.load(s)
     assert_equal(Rational(4903887,2), d.ajd)
-    assert_equal(0, d.send(:offset))
     assert_equal(Date::GREGORIAN, d.start)
 
     s = "\x04\bu:\rDateTime`\x04\b[\bo:\rRational\a:\x0F@numeratorl+\b\xC9\xB0\x81\xBD\x02\x00:\x11@denominatori\x02\xC0\x12o;\x00\a;\x06i\b;\ai\ro:\x13Date::Infinity\x06:\a@di\xFA"
@@ -564,7 +559,6 @@ def test_marshal192
     s = "\x04\bU:\tDate[\bU:\rRational[\ai\x03\xCF\xD3Ji\ai\x00o:\x13Date::Infinity\x06:\a@di\xFA"
     d = Marshal.load(s)
     assert_equal(Rational(4903887,2), d.ajd)
-    assert_equal(Rational(0,24), d.send(:offset))
     assert_equal(Date::GREGORIAN, d.start)
 
     s = "\x04\bU:\rDateTime[\bU:\rRational[\al+\b\xC9\xB0\x81\xBD\x02\x00i\x02\xC0\x12U;\x06[\ai\bi\ro:\x13Date::Infinity\x06:\a@di\xFA"
diff --git a/test/mri/dbm/test_dbm.rb b/test/mri/dbm/test_dbm.rb
index 874b3264044..d7cb5497fc2 100644
--- a/test/mri/dbm/test_dbm.rb
+++ b/test/mri/dbm/test_dbm.rb
@@ -625,9 +625,10 @@ def test_newdb_open
     end
 
     def test_freeze
+      expected_error = defined?(FrozenError) ? FrozenError : RuntimeError
       DBM.open("#{@tmproot}/a") {|d|
         d.freeze
-        assert_raise(FrozenError) { d["k"] = "v" }
+        assert_raise(expected_error) { d["k"] = "v" }
       }
     end
   end
diff --git a/test/mri/drb/drbtest.rb b/test/mri/drb/drbtest.rb
index 2796100280b..b3e857877e2 100644
--- a/test/mri/drb/drbtest.rb
+++ b/test/mri/drb/drbtest.rb
@@ -7,32 +7,44 @@
 module DRbTests
 
 class DRbService
-  @@manager = DRb::ExtServManager.new
   @@ruby = [EnvUtil.rubybin]
   @@ruby << "-d" if $DEBUG
   def self.add_service_command(nm)
     dir = File.dirname(File.expand_path(__FILE__))
+    if /ssl/ =~ nm && RUBY_PLATFORM =~ /solaris/i
+      @@ruby[1..-1] = "-dv"
+    end
     DRb::ExtServManager.command[nm] = @@ruby + ["#{dir}/#{nm}"]
   end
 
   %w(ut_drb.rb ut_array.rb ut_port.rb ut_large.rb ut_safe1.rb ut_eq.rb).each do |nm|
     add_service_command(nm)
   end
-  @server = @@server = DRb::DRbServer.new('druby://localhost:0', @@manager, {})
-  @@manager.uri = @@server.uri
-  def self.manager
-    @@manager
+
+  def initialize
+    @manager = DRb::ExtServManager.new
+    start
+    @manager.uri = server.uri
   end
-  def self.server
-    @server || @@server
+
+  def start
+    @server = DRb::DRbServer.new('druby://localhost:0', manager, {})
   end
-  def self.ext_service(name)
+
+  attr_reader :manager
+  attr_reader :server
+
+  def ext_service(name)
     Timeout.timeout(100, RuntimeError) do
       manager.service(name)
     end
   end
-  def self.finish
-    @server.instance_variable_get(:@grp).list.each {|th| th.join }
+
+  def finish
+    server.instance_variable_get(:@grp).list.each {|th| th.join }
+    server.stop_service
+    manager.instance_variable_get(:@queue)&.push(nil)
+    manager.instance_variable_get(:@thread)&.join
   end
 end
 
@@ -68,35 +80,42 @@ def initialize(ary)
 end
 
 module DRbBase
+  def setup
+    @drb_service ||= DRbService.new
+  end
+
   def setup_service(service_name)
     @service_name = service_name
-    @ext = DRbService.ext_service(@service_name)
+    @ext = @drb_service.ext_service(@service_name)
     @there = @ext.front
   end
 
   def teardown
     @ext.stop_service if defined?(@ext) && @ext
-    DRbService.manager.unregist(@service_name)
-    while (@there&&@there.to_s rescue nil)
-      # nop
-    end
-    signal = /mswin|mingw/ =~ RUBY_PLATFORM ? :KILL : :TERM
-    Thread.list.each {|th|
-      if th.respond_to?(:pid) && th[:drb_service] == @service_name
-        10.times do
-          begin
-            Process.kill signal, th.pid
-            break
-          rescue Errno::ESRCH
-            break
-          rescue Errno::EPERM # on Windows
-            sleep 0.1
-            retry
+    if defined?(@service_name) && @service_name
+      @drb_service.manager.unregist(@service_name)
+      while (@there&&@there.to_s rescue nil)
+        # nop
+      end
+      signal = /mswin|mingw/ =~ RUBY_PLATFORM ? :KILL : :TERM
+      Thread.list.each {|th|
+        if th.respond_to?(:pid) && th[:drb_service] == @service_name
+          10.times do
+            begin
+              Process.kill signal, th.pid
+              break
+            rescue Errno::ESRCH
+              break
+            rescue Errno::EPERM # on Windows
+              sleep 0.1
+              retry
+            end
           end
+          th.join
         end
-        th.join
-      end
-    }
+      }
+    end
+    @drb_service&.finish
   end
 end
 
@@ -187,6 +206,7 @@ def test_05_eq
   end
 
   def test_06_timeout
+    skip if RUBY_PLATFORM.include?("armv7l-linux")
     ten = Onecky.new(10)
     assert_raise(Timeout::Error) do
       @there.do_timeout(ten)
diff --git a/test/mri/drb/test_drb.rb b/test/mri/drb/test_drb.rb
index 52e79ea496e..4e8f5cb0ec1 100644
--- a/test/mri/drb/test_drb.rb
+++ b/test/mri/drb/test_drb.rb
@@ -7,29 +7,14 @@ class TestDRbCore < Test::Unit::TestCase
   include DRbCore
 
   def setup
-    setup_service 'ut_drb.rb'
-    super
-  end
-
-  def teardown
     super
-    DRbService.finish
+    setup_service 'ut_drb.rb'
   end
 end
 
-class TestDRbYield < Test::Unit::TestCase
+module DRbYield
   include DRbBase
 
-  def setup
-    setup_service 'ut_drb.rb'
-    super
-  end
-
-  def teardown
-    super
-    DRbService.finish
-  end
-
   def test_01_one
     @there.echo_yield_1([]) {|one|
       assert_equal([], one)
@@ -129,7 +114,23 @@ def test_06_taint
   end
 end
 
-class TestDRbRubyYield < TestDRbYield
+class TestDRbYield < Test::Unit::TestCase
+  include DRbYield
+
+  def setup
+    super
+    setup_service 'ut_drb.rb'
+  end
+end
+
+class TestDRbRubyYield < Test::Unit::TestCase
+  include DRbYield
+
+  def setup
+    @there = self
+    super
+  end
+
   def echo_yield(*arg)
     yield(*arg)
   end
@@ -153,15 +154,11 @@ def xarray_each
     end
   end
 
-  def setup
-    @there = self
-  end
-
-  def teardown
-  end
 end
 
-class TestDRbRuby18Yield < TestDRbRubyYield
+class TestDRbRuby18Yield < Test::Unit::TestCase
+  include DRbYield
+
   class YieldTest18
     def echo_yield(*arg, &proc)
       proc.call(*arg)
@@ -188,6 +185,7 @@ def xarray_each(&proc)
 
   def setup
     @there = YieldTest18.new
+    super
   end
 end
 
@@ -195,13 +193,8 @@ class TestDRbAry < Test::Unit::TestCase
   include DRbAry
 
   def setup
-    setup_service 'ut_array.rb'
-    super
-  end
-
-  def teardown
     super
-    DRbService.finish
+    setup_service 'ut_array.rb'
   end
 end
 
@@ -209,8 +202,8 @@ class TestDRbMServer < Test::Unit::TestCase
   include DRbBase
 
   def setup
-    setup_service 'ut_drb.rb'
     super
+    setup_service 'ut_drb.rb'
     @server = (1..3).collect do |n|
       DRb::DRbServer.new("druby://localhost:0", Onecky.new(n.to_s))
     end
@@ -221,7 +214,6 @@ def teardown
       s.stop_service
     end
     super
-    DRbService.finish
   end
 
   def test_01
@@ -229,14 +221,11 @@ def test_01
   end
 end
 
-class TestDRbSafe1 < TestDRbAry
+class TestDRbSafe1 < Test::Unit::TestCase
+  include DRbAry
   def setup
-    setup_service 'ut_safe1.rb'
-  end
-
-  def teardown
     super
-    DRbService.finish
+    setup_service 'ut_safe1.rb'
   end
 end
 
@@ -244,13 +233,8 @@ class TestDRbLarge < Test::Unit::TestCase
   include DRbBase
 
   def setup
-    setup_service 'ut_large.rb'
-    super
-  end
-
-  def teardown
     super
-    DRbService.finish
+    setup_service 'ut_large.rb'
   end
 
   def test_01_large_ary
@@ -333,13 +317,8 @@ class TestBug4409 < Test::Unit::TestCase
   include DRbBase
 
   def setup
-    setup_service 'ut_eq.rb'
-    super
-  end
-
-  def teardown
     super
-    DRbService.finish
+    setup_service 'ut_eq.rb'
   end
 
   def test_bug4409
diff --git a/test/mri/drb/test_drbssl.rb b/test/mri/drb/test_drbssl.rb
index 1f1495356e0..bf30ba55138 100644
--- a/test/mri/drb/test_drbssl.rb
+++ b/test/mri/drb/test_drbssl.rb
@@ -15,37 +15,36 @@ class DRbSSLService < DRbService
   %w(ut_drb_drbssl.rb ut_array_drbssl.rb).each do |nm|
     add_service_command(nm)
   end
-  config = Hash.new
-
-  config[:SSLVerifyMode] = OpenSSL::SSL::VERIFY_PEER
-  config[:SSLVerifyCallback] = lambda{ |ok,x509_store|
-    true
-  }
-  begin
-    data = open("sample.key"){|io| io.read }
-    config[:SSLPrivateKey] = OpenSSL::PKey::RSA.new(data)
-    data = open("sample.crt"){|io| io.read }
-    config[:SSLCertificate] = OpenSSL::X509::Certificate.new(data)
-  rescue
-    # $stderr.puts "Switching to use self-signed certificate"
-    config[:SSLCertName] =
-      [ ["C","JP"], ["O","Foo.DRuby.Org"], ["CN", "Sample"] ]
-  end
 
-  uri = ARGV.shift if $0 == __FILE__
-  @server = DRb::DRbServer.new(uri || 'drbssl://:0', self.manager, config)
+  def start
+    config = Hash.new
+
+    config[:SSLVerifyMode] = OpenSSL::SSL::VERIFY_PEER
+    config[:SSLVerifyCallback] = lambda{ |ok,x509_store|
+      true
+    }
+    begin
+      data = open("sample.key"){|io| io.read }
+      config[:SSLPrivateKey] = OpenSSL::PKey::RSA.new(data)
+      data = open("sample.crt"){|io| io.read }
+      config[:SSLCertificate] = OpenSSL::X509::Certificate.new(data)
+    rescue
+      # $stderr.puts "Switching to use self-signed certificate"
+      config[:SSLCertName] =
+        [ ["C","JP"], ["O","Foo.DRuby.Org"], ["CN", "Sample"] ]
+    end
+
+    @server = DRb::DRbServer.new('drbssl://:0', manager, config)
+  end
 end
 
 class TestDRbSSLCore < Test::Unit::TestCase
   include DRbCore
   def setup
-    setup_service 'ut_drb_drbssl.rb'
-    super
-  end
-
-  def teardown
+    skip 'FIXME: BUG in OpenSSL on Solaris' if RUBY_PLATFORM =~ /solaris/i
+    @drb_service = DRbSSLService.new
     super
-    DRbService.finish
+    setup_service 'ut_drb_drbssl.rb'
   end
 
   def test_02_unknown
@@ -61,13 +60,10 @@ def test_05_eq
 class TestDRbSSLAry < Test::Unit::TestCase
   include DRbAry
   def setup
-    setup_service 'ut_array_drbssl.rb'
-    super
-  end
-
-  def teardown
+    skip 'FIXME: BUG in OpenSSL on Solaris' if RUBY_PLATFORM =~ /solaris/i
+    @drb_service = DRbSSLService.new
     super
-    DRbService.finish
+    setup_service 'ut_array_drbssl.rb'
   end
 end
 
diff --git a/test/mri/drb/test_drbunix.rb b/test/mri/drb/test_drbunix.rb
index 7ece2453a94..95b3c3ca91a 100644
--- a/test/mri/drb/test_drbunix.rb
+++ b/test/mri/drb/test_drbunix.rb
@@ -16,20 +16,17 @@ class DRbUNIXService < DRbService
     add_service_command(nm)
   end
 
-  uri = ARGV.shift if $0 == __FILE__
-  @server = DRb::DRbServer.new(uri || 'drbunix:', self.manager, {})
+  def start
+    @server = DRb::DRbServer.new('drbunix:', manager, {})
+  end
 end
 
 class TestDRbUNIXCore < Test::Unit::TestCase
   include DRbCore
   def setup
-    setup_service 'ut_drb_drbunix.rb'
-    super
-  end
-
-  def teardown
+    @drb_service = DRbUNIXService.new
     super
-    DRbService.finish
+    setup_service 'ut_drb_drbunix.rb'
   end
 
   def test_02_unknown
@@ -40,17 +37,20 @@ def test_01_02_loop
 
   def test_05_eq
   end
+
+  def test_bad_uri
+    assert_raise(DRb::DRbBadURI) do
+      DRb::DRbServer.new("badfile\n""drbunix:")
+    end
+  end
 end
 
 class TestDRbUNIXAry < Test::Unit::TestCase
   include DRbAry
   def setup
-    setup_service 'ut_array_drbunix.rb'
+    @drb_service = DRbUNIXService.new
     super
-  end
-  def teardown
-    super
-    DRbService.finish
+    setup_service 'ut_array_drbunix.rb'
   end
 end
 
diff --git a/test/mri/dtrace/helper.rb b/test/mri/dtrace/helper.rb
index 5828bcd5ba6..023d1165b48 100644
--- a/test/mri/dtrace/helper.rb
+++ b/test/mri/dtrace/helper.rb
@@ -10,6 +10,22 @@
 else
   ok = false
 end
+
+impl = :dtrace
+
+# GNU/Linux distros with Systemtap support allows unprivileged users
+# in the stapusr and statdev groups to work.
+if RUBY_PLATFORM =~ /linux/
+  impl = :stap
+  begin
+    require 'etc'
+    login = Etc.getlogin
+    ok = Etc.getgrnam('stapusr').mem.include?(login) &&
+           Etc.getgrnam('stapdev').mem.include?(login)
+  rescue LoadError, ArgumentError
+  end unless ok
+end
+
 if ok
   case RUBY_PLATFORM
   when /darwin/i
@@ -20,7 +36,24 @@
     end
   end
 end
-ok &= (`dtrace -V` rescue false)
+
+# use miniruby to reduce the amount of trace data we don't care about
+rubybin = "miniruby#{RbConfig::CONFIG["EXEEXT"]}"
+rubybin = File.join(File.dirname(EnvUtil.rubybin), rubybin)
+rubybin = EnvUtil.rubybin unless File.executable?(rubybin)
+
+# make sure ruby was built with --enable-dtrace and we can run
+# dtrace(1) or stap(1):
+cmd = "#{rubybin} --disable=gems -eexit"
+case impl
+when :dtrace; cmd = %W(dtrace -l -n ruby$target:::gc-sweep-end -c #{cmd})
+when :stap; cmd = %W(stap -l process.mark("gc__sweep__end") -c #{cmd})
+else
+  warn "don't know how to check if built with #{impl} support"
+  cmd = false
+end
+ok &= system(*cmd, err: IO::NULL, out: IO::NULL) if cmd
+
 module DTrace
   class TestCase < Test::Unit::TestCase
     INCLUDE = File.expand_path('..', File.dirname(__FILE__))
@@ -40,16 +73,52 @@ class TestCase < Test::Unit::TestCase
       end
     end
 
+    # only handles simple cases, use a Hash for d_program
+    # if there are more complex cases
+    def dtrace2systemtap(d_program)
+      translate = lambda do |str|
+        # dtrace starts args with '0', systemtap with '1' and prefixes '$'
+        str = str.gsub(/\barg(\d+)/) { "$arg#{$1.to_i + 1}" }
+        # simple function mappings:
+        str.gsub!(/\bcopyinstr\b/, 'user_string')
+        str.gsub!(/\bstrstr\b/, 'isinstr')
+        str
+      end
+      out = ''
+      cond = nil
+      d_program.split(/^/).each do |l|
+        case l
+        when /\bruby\$target:::([a-z-]+)/
+          name = $1.gsub(/-/, '__')
+          out << %Q{probe process.mark("#{name}")\n}
+        when %r{/(.+)/}
+          cond = translate.call($1)
+        when "{\n"
+          out << l
+          out << "if (#{cond}) {\n" if cond
+        when "}\n"
+          out << "}\n" if cond
+          out << l
+        else
+          out << translate.call(l)
+        end
+      end
+      out
+    end
+
     DTRACE_CMD ||= %w[dtrace]
 
     READ_PROBES ||= proc do |cmd|
       IO.popen(cmd, err: [:child, :out], &:readlines)
     end
 
-    miniruby = "#{RbConfig::TOPDIR}/miniruby#{RbConfig::CONFIG["EXEEXT"]}"
-    RUBYBIN =  File.exist?(miniruby) ? miniruby : EnvUtil.rubybin
-
     def trap_probe d_program, ruby_program
+      if Hash === d_program
+        d_program = d_program[IMPL] or
+          skip "#{d_program} not implemented for #{IMPL}"
+      elsif String === d_program && IMPL == :stap
+        d_program = dtrace2systemtap(d_program)
+      end
       d = Tempfile.new(%w'probe .d')
       d.write d_program
       d.flush
@@ -60,8 +129,12 @@ def trap_probe d_program, ruby_program
 
       d_path  = d.path
       rb_path = rb.path
-
-      cmd = [*DTRACE_CMD, "-q", "-s", d_path, "-c", "#{RUBYBIN} -I#{INCLUDE} #{rb_path}"]
+      cmd = "#{RUBYBIN} --disable=gems -I#{INCLUDE} #{rb_path}"
+      if IMPL == :stap
+        cmd = %W(stap #{d_path} -c #{cmd})
+      else
+        cmd = [*DTRACE_CMD, "-q", "-s", d_path, "-c", cmd ]
+      end
       if sudo = @@sudo
         [RbConfig::CONFIG["LIBPATHENV"], "RUBY", "RUBYOPT"].each do |name|
           if name and val = ENV[name]
@@ -80,4 +153,6 @@ def trap_probe d_program, ruby_program
 
 if ok
   DTrace::TestCase.class_variable_set(:@@sudo, sudo)
+  DTrace::TestCase.const_set(:IMPL, impl)
+  DTrace::TestCase.const_set(:RUBYBIN, rubybin)
 end
diff --git a/test/mri/dtrace/test_array_create.rb b/test/mri/dtrace/test_array_create.rb
index 44d4657b61c..1bf20085bae 100644
--- a/test/mri/dtrace/test_array_create.rb
+++ b/test/mri/dtrace/test_array_create.rb
@@ -14,11 +14,11 @@ def test_lit
     end
 
     def test_many_lit
-      trap_probe(probe, '[1,2,3,4]') { |_,rbfile,saw|
-        saw = saw.map(&:split).find_all { |num, file, line|
+      trap_probe(probe, '[1,2,3,4]') { |_,rbfile,orig|
+        saw = orig.map(&:split).find_all { |num, file, line|
           file == rbfile && num == '4' && line == '1'
         }
-        assert_operator saw.length, :>, 0
+        assert_operator saw.length, :>, 0, orig
       }
     end
 
@@ -26,7 +26,7 @@ def test_many_lit
     def probe type = 'array'
       <<-eoprobe
 ruby$target:::#{type}-create
-/arg1/
+/arg1 && arg2/
 {
   printf("%d %s %d\\n", arg0, copyinstr(arg1), arg2);
 }
diff --git a/test/mri/dtrace/test_function_entry.rb b/test/mri/dtrace/test_function_entry.rb
index fc07ccc4550..8050f91402c 100644
--- a/test/mri/dtrace/test_function_entry.rb
+++ b/test/mri/dtrace/test_function_entry.rb
@@ -17,8 +17,8 @@ def test_function_entry
 	  row.first == 'Foo'  && row[1] == 'foo'
 	}
 
-	assert_equal 10, foo_calls.length
-	line = '2'
+	assert_equal 10, foo_calls.length, probes
+	line = '3'
 	foo_calls.each { |f| assert_equal line, f[3] }
 	foo_calls.each { |f| assert_equal rb_file, f[2] }
       }
@@ -38,8 +38,8 @@ def test_function_return
 	  row.first == 'Foo'  && row[1] == 'foo'
 	}
 
-	assert_equal 10, foo_calls.length
-	line = '2'
+	assert_equal 10, foo_calls.length, probes.inspect
+	line = '3'
 	foo_calls.each { |f| assert_equal line, f[3] }
 	foo_calls.each { |f| assert_equal rb_file, f[2] }
       }
@@ -77,6 +77,7 @@ def baz
     private
     def ruby_program
       <<-eoruby
+      TracePoint.new{}.__enable(nil, nil)
       class Foo
 	def foo; end
       end
diff --git a/test/mri/dtrace/test_hash_create.rb b/test/mri/dtrace/test_hash_create.rb
index 83a4d0062cf..603ee218727 100644
--- a/test/mri/dtrace/test_hash_create.rb
+++ b/test/mri/dtrace/test_hash_create.rb
@@ -22,11 +22,11 @@ def test_hash_lit
     end
 
     def test_hash_lit_elements
-      trap_probe(probe, '{ :foo => :bar }') { |_,rbfile,saw|
-        saw = saw.map(&:split).find_all { |num, file, line|
+      trap_probe(probe, '{ :foo => :bar }') { |_,rbfile,orig|
+        saw = orig.map(&:split).find_all { |num, file, line|
           file == rbfile && num == '2'
         }
-        assert_operator saw.length, :>, 0
+        assert_operator saw.length, :>, 0, orig
       }
     end
 
diff --git a/test/mri/dtrace/test_method_cache.rb b/test/mri/dtrace/test_method_cache.rb
index a101b5ddec9..88b927464aa 100644
--- a/test/mri/dtrace/test_method_cache.rb
+++ b/test/mri/dtrace/test_method_cache.rb
@@ -19,7 +19,7 @@ class Object; def abc() end end
     def probe
       <<-eoprobe
 ruby$target:::method-cache-clear
-/arg1/
+/arg1 && arg2/
 {
   printf("%s %s %d\\n", copyinstr(arg0), copyinstr(arg1), arg2);
 }
diff --git a/test/mri/dtrace/test_singleton_function.rb b/test/mri/dtrace/test_singleton_function.rb
index 3698a02c93e..11fe80599d6 100644
--- a/test/mri/dtrace/test_singleton_function.rb
+++ b/test/mri/dtrace/test_singleton_function.rb
@@ -17,8 +17,8 @@ def test_entry
 	  row.first == 'Foo'  && row[1] == 'foo'
 	}
 
-	assert_equal 10, foo_calls.length
-	line = '2'
+	assert_equal 10, foo_calls.length, probes.inspect
+	line = '3'
 	foo_calls.each { |f| assert_equal line, f[3] }
 	foo_calls.each { |f| assert_equal rb_file, f[2] }
       }
@@ -37,8 +37,8 @@ def test_exit
 	  row.first == 'Foo'  && row[1] == 'foo'
 	}
 
-	assert_equal 10, foo_calls.length
-	line = '2'
+	assert_equal 10, foo_calls.length, probes.inspect
+	line = '3'
 	foo_calls.each { |f| assert_equal line, f[3] }
 	foo_calls.each { |f| assert_equal rb_file, f[2] }
       }
@@ -46,6 +46,7 @@ def test_exit
 
     def ruby_program
       <<-eoruby
+      TracePoint.new{}.__enable(nil, nil)
       class Foo
 	def self.foo; end
       end
diff --git a/test/mri/dtrace/test_string.rb b/test/mri/dtrace/test_string.rb
index 407280b1fc4..a72f989f639 100644
--- a/test/mri/dtrace/test_string.rb
+++ b/test/mri/dtrace/test_string.rb
@@ -4,11 +4,11 @@
 module DTrace
   class TestStringProbes < TestCase
     def test_object_create_start_string_lit
-      trap_probe(probe, '"omglolwutbbq"') { |_,rbfile,saw|
-        saw = saw.map(&:split).find_all { |klass, file, line, len|
+      trap_probe(probe, '"omglolwutbbq"') { |_,rbfile,orig|
+        saw = orig.map(&:split).find_all { |klass, file, line, len|
           file == rbfile && len == '12' && line == '1'
         }
-        assert_equal(%w{ String }, saw.map(&:first))
+        assert_equal(%w{ String }, saw.map(&:first), orig.inspect)
         assert_equal([rbfile], saw.map { |line| line[1] })
         assert_equal(['1'], saw.map { |line| line[2] })
       }
diff --git a/test/mri/erb/test_erb.rb b/test/mri/erb/test_erb.rb
index 045ce5129ba..1fec46d66cb 100644
--- a/test/mri/erb/test_erb.rb
+++ b/test/mri/erb/test_erb.rb
@@ -24,16 +24,22 @@ def test_with_filename
     assert_match(/\Atest filename:1\b/, e.backtrace[0])
   end
 
+  # [deprecated] This will be removed at Ruby 2.7
   def test_without_filename_with_safe_level
-    erb = ERB.new("<% raise ::TestERB::MyError %>", 1)
+    erb = EnvUtil.suppress_warning do
+      ERB.new("<% raise ::TestERB::MyError %>", 1)
+    end
     e = assert_raise(MyError) {
       erb.result
     }
     assert_match(/\A\(erb\):1\b/, e.backtrace[0])
   end
 
+  # [deprecated] This will be removed at Ruby 2.7
   def test_with_filename_and_safe_level
-    erb = ERB.new("<% raise ::TestERB::MyError %>", 1)
+    erb = EnvUtil.suppress_warning do
+      ERB.new("<% raise ::TestERB::MyError %>", 1)
+    end
     erb.filename = "test filename"
     e = assert_raise(MyError) {
       erb.result
@@ -92,9 +98,12 @@ def test_version
   end
 
   def test_core
-    _test_core(nil)
-    _test_core(0)
-    _test_core(1)
+    # [deprecated] Fix initializer at Ruby 2.7
+    EnvUtil.suppress_warning do
+      _test_core(nil)
+      _test_core(0)
+      _test_core(1)
+    end
   end
 
   def _test_core(safe)
@@ -203,29 +212,51 @@ def _test_core(safe)
   end
 
   def test_trim_line1_with_carriage_return
-    erb = @erb.new("<% 3.times do %>\r\nline\r\n<% end %>\r\n", nil, '>')
+    erb = @erb.new("<% 3.times do %>\r\nline\r\n<% end %>\r\n", trim_mode: '>')
     assert_equal("line\r\n" * 3, erb.result)
 
-    erb = @erb.new("<% 3.times do %>\r\nline\r\n<% end %>\r\n", nil, '%>')
+    erb = @erb.new("<% 3.times do %>\r\nline\r\n<% end %>\r\n", trim_mode: '%>')
     assert_equal("line\r\n" * 3, erb.result)
   end
 
   def test_trim_line2_with_carriage_return
-    erb = @erb.new("<% 3.times do %>\r\nline\r\n<% end %>\r\n", nil, '<>')
+    erb = @erb.new("<% 3.times do %>\r\nline\r\n<% end %>\r\n", trim_mode: '<>')
     assert_equal("line\r\n" * 3, erb.result)
 
-    erb = @erb.new("<% 3.times do %>\r\nline\r\n<% end %>\r\n", nil, '%<>')
+    erb = @erb.new("<% 3.times do %>\r\nline\r\n<% end %>\r\n", trim_mode: '%<>')
     assert_equal("line\r\n" * 3, erb.result)
   end
 
   def test_explicit_trim_line_with_carriage_return
-    erb = @erb.new("<%- 3.times do -%>\r\nline\r\n<%- end -%>\r\n", nil, '-')
+    erb = @erb.new("<%- 3.times do -%>\r\nline\r\n<%- end -%>\r\n", trim_mode: '-')
     assert_equal("line\r\n" * 3, erb.result)
 
-    erb = @erb.new("<%- 3.times do -%>\r\nline\r\n<%- end -%>\r\n", nil, '%-')
+    erb = @erb.new("<%- 3.times do -%>\r\nline\r\n<%- end -%>\r\n", trim_mode: '%-')
     assert_equal("line\r\n" * 3, erb.result)
   end
 
+  def test_invalid_trim_mode
+    assert_warning(/#{__FILE__}:#{__LINE__ + 1}/) do
+      @erb.new("", trim_mode: 'abc-def')
+    end
+
+    assert_warning(/Invalid ERB trim mode/) do
+      @erb.new("", trim_mode: 'abc-def')
+    end
+
+    assert_warning(/Invalid ERB trim mode/) do
+      @erb.new("", trim_mode: '%<')
+    end
+
+    assert_warning(/Invalid ERB trim mode/) do
+      @erb.new("", trim_mode: '%<>-')
+    end
+
+    assert_warning(/Invalid ERB trim mode/) do
+      @erb.new("", trim_mode: 3)
+    end
+  end
+
   def test_run
     out = StringIO.new
     orig, $stdout = $stdout, out
@@ -259,26 +290,26 @@ def test_percent
 %n = 1
 <%= n%>
 EOS
-    assert_equal("1\n", ERB.new(src, nil, '%').result(binding))
+    assert_equal("1\n", ERB.new(src, trim_mode: '%').result(binding))
 
     src = <<EOS
 <%
 %>
 EOS
     ans = "\n"
-    assert_equal(ans, ERB.new(src, nil, '%').result(binding))
+    assert_equal(ans, ERB.new(src, trim_mode: '%').result(binding))
 
     src = "<%\n%>"
     # ans = "\n"
     ans = ""
-    assert_equal(ans, ERB.new(src, nil, '%').result(binding))
+    assert_equal(ans, ERB.new(src, trim_mode: '%').result(binding))
 
     src = <<EOS
 <%
 n = 1
 %><%= n%>
 EOS
-    assert_equal("1\n", ERB.new(src, nil, '%').result(binding))
+    assert_equal("1\n", ERB.new(src, trim_mode: '%').result(binding))
 
     src = <<EOS
 %n = 1
@@ -294,7 +325,7 @@ def test_percent
 % %%><%1
 %%
 EOS
-    assert_equal(ans, ERB.new(src, nil, '%').result(binding))
+    assert_equal(ans, ERB.new(src, trim_mode: '%').result(binding))
   end
 
   def test_def_erb_method
@@ -378,7 +409,7 @@ def test_escape
 %% print 'foo'
 
 EOS
-    assert_equal(ans, ERB.new(src, nil, '%').result)
+    assert_equal(ans, ERB.new(src, trim_mode: '%').result)
   end
 
   def test_keep_lineno
@@ -389,7 +420,7 @@ def test_keep_lineno
 % raise("lineno")
 EOS
 
-    erb = ERB.new(src, nil, '%')
+    erb = ERB.new(src, trim_mode: '%')
     e = assert_raise(RuntimeError) {
       erb.result
     }
@@ -407,7 +438,7 @@ def test_keep_lineno
 %>Hello,\s
 World%>
 EOS
-    assert_equal(ans, ERB.new(src, nil, '>').result)
+    assert_equal(ans, ERB.new(src, trim_mode: '>').result)
 
     ans = <<EOS
 %>
@@ -415,7 +446,7 @@ def test_keep_lineno
 
 World%>
 EOS
-    assert_equal(ans, ERB.new(src, nil, '<>').result)
+    assert_equal(ans, ERB.new(src, trim_mode: '<>').result)
 
     ans = <<EOS
 %>
@@ -440,13 +471,13 @@ def test_keep_lineno
     }
     assert_match(/\A\(erb\):5\b/, e.backtrace[0].to_s)
 
-    erb = ERB.new(src, nil, '>')
+    erb = ERB.new(src, trim_mode: '>')
     e = assert_raise(RuntimeError) {
       erb.result
     }
     assert_match(/\A\(erb\):5\b/, e.backtrace[0].to_s)
 
-    erb = ERB.new(src, nil, '<>')
+    erb = ERB.new(src, trim_mode: '<>')
     e = assert_raise(RuntimeError) {
       erb.result
     }
@@ -460,13 +491,13 @@ def test_keep_lineno
 <% raise("lineno") %>
 EOS
 
-    erb = ERB.new(src, nil, '-')
+    erb = ERB.new(src, trim_mode: '-')
     e = assert_raise(RuntimeError) {
       erb.result
     }
     assert_match(/\A\(erb\):5\b/, e.backtrace[0].to_s)
 
-    erb = ERB.new(src, nil, '%-')
+    erb = ERB.new(src, trim_mode: '%-')
     e = assert_raise(RuntimeError) {
       erb.result
     }
@@ -502,8 +533,8 @@ def test_explicit
    * WORLD
 KeepNewLine \s
 EOS
-   assert_equal(ans, ERB.new(src, nil, '-').result)
-   assert_equal(ans, ERB.new(src, nil, '-%').result)
+   assert_equal(ans, ERB.new(src, trim_mode: '-').result)
+   assert_equal(ans, ERB.new(src, trim_mode: '-%').result)
   end
 
   def test_url_encode
@@ -519,7 +550,7 @@ def test_url_encode
   end
 
   def test_percent_after_etag
-    assert_equal("1%", @erb.new("<%= 1 %>%", nil, "%").result)
+    assert_equal("1%", @erb.new("<%= 1 %>%", trim_mode: "%").result)
   end
 
   def test_token_extension
@@ -629,6 +660,27 @@ def test_half_working_comment_backward_compatibility
       @erb.new("<% # comment %>\n").result
     end
   end
+
+  # These interfaces will be removed at Ruby 2.7.
+  def test_deprecated_interface_warnings
+    [nil, 0, 1, 2].each do |safe|
+      assert_warning(/2nd argument of ERB.new is deprecated/) do
+        ERB.new('', safe)
+      end
+    end
+
+    [nil, '', '%', '%<>'].each do |trim|
+      assert_warning(/3rd argument of ERB.new is deprecated/) do
+        ERB.new('', nil, trim)
+      end
+    end
+
+    [nil, '_erbout', '_hamlout'].each do |eoutvar|
+      assert_warning(/4th argument of ERB.new is deprecated/) do
+        ERB.new('', nil, nil, eoutvar)
+      end
+    end
+  end
 end
 
 class TestERBCoreWOStrScan < TestERBCore
diff --git a/test/mri/erb/test_erb_command.rb b/test/mri/erb/test_erb_command.rb
index 7e2b8746324..ed13c29c968 100644
--- a/test/mri/erb/test_erb_command.rb
+++ b/test/mri/erb/test_erb_command.rb
@@ -15,4 +15,16 @@ def test_template_file_encoding
                        File.expand_path("../../../bin/erb", __FILE__)],
                       "<%=''.encoding.to_s%>", ["UTF-8"])
   end
+
+  # These interfaces will be removed at Ruby 2.7.
+  def test_deprecated_option
+    warnings = [
+      "warning: -S option of erb command is deprecated. Please do not use this.",
+      /\n.+\/bin\/erb:\d+: warning: Passing safe_level with the 2nd argument of ERB\.new is deprecated\. Do not use it, and specify other arguments as keyword arguments\.\n/,
+    ]
+    assert_in_out_err(["-w",
+                       File.expand_path("../../../bin/erb", __FILE__),
+                       "-S", "0"],
+                      "hoge", ["hoge"], warnings)
+  end
 end
diff --git a/test/mri/erb/test_erb_m17n.rb b/test/mri/erb/test_erb_m17n.rb
index a7840c9605d..2fd9e700f3f 100644
--- a/test/mri/erb/test_erb_m17n.rb
+++ b/test/mri/erb/test_erb_m17n.rb
@@ -3,7 +3,7 @@
 require 'test/unit'
 require 'erb'
 
-class TestERB < Test::Unit::TestCase
+class TestERBEncoding < Test::Unit::TestCase
   def test_result_encoding
     erb = ERB.new("hello")
     assert_equal __ENCODING__, erb.result.encoding
diff --git a/test/mri/excludes/TestCSV/Encodings/DifferentOFS.rb b/test/mri/excludes/TestCSV/Encodings/DifferentOFS.rb
deleted file mode 100644
index bad3f497efd..00000000000
--- a/test/mri/excludes/TestCSV/Encodings/DifferentOFS.rb
+++ /dev/null
@@ -1 +0,0 @@
-exclude :test_gzip_reader_bug_fix, "needs investigation"
\ No newline at end of file
diff --git a/test/mri/excludes/TestCSV/Features.rb b/test/mri/excludes/TestCSV/Features.rb
deleted file mode 100644
index bad3f497efd..00000000000
--- a/test/mri/excludes/TestCSV/Features.rb
+++ /dev/null
@@ -1 +0,0 @@
-exclude :test_gzip_reader_bug_fix, "needs investigation"
\ No newline at end of file
diff --git a/test/mri/excludes/TestCSV/Parsing.rb b/test/mri/excludes/TestCSV/Parsing.rb
index 5499d5fc8e0..e69de29bb2d 100644
--- a/test/mri/excludes/TestCSV/Parsing.rb
+++ b/test/mri/excludes/TestCSV/Parsing.rb
@@ -1 +0,0 @@
-exclude :test_field_size_limit_controls_lookahead, "needs investigation"
diff --git a/test/mri/excludes/TestCSV/Parsing/DifferentOFS.rb b/test/mri/excludes/TestCSV/Parsing/DifferentOFS.rb
new file mode 100644
index 00000000000..84410111dab
--- /dev/null
+++ b/test/mri/excludes/TestCSV/Parsing/DifferentOFS.rb
@@ -0,0 +1 @@
+exclude :test_malformed_csv, "TODO: (line 4) isn't in brackets"
diff --git a/test/mri/excludes/TestCSV/Encodings.rb b/test/mri/excludes/TestCSVEncodings.rb
similarity index 100%
rename from test/mri/excludes/TestCSV/Encodings.rb
rename to test/mri/excludes/TestCSVEncodings.rb
diff --git a/test/mri/excludes/TestNetHTTPS.rb b/test/mri/excludes/TestNetHTTPS.rb
index 61d930bb396..df640c7ca23 100644
--- a/test/mri/excludes/TestNetHTTPS.rb
+++ b/test/mri/excludes/TestNetHTTPS.rb
@@ -1,3 +1,5 @@
 exclude :test_identity_verify_failure, ""
 exclude :test_session_reuse, ""
-exclude :test_session_reuse_but_expire, "hangs"
\ No newline at end of file
+exclude :test_session_reuse_but_expire, "hangs"
+exclude :test_max_version, "missing set_minmax_proto_version for OpenSSL::SSL::SSLContext"
+exclude :test_min_version, "missing set_minmax_proto_version for OpenSSL::SSL::SSLContext"
diff --git a/test/mri/excludes/TestSymbol.rb b/test/mri/excludes/TestSymbol.rb
index a0531119c3e..426bd23a57c 100644
--- a/test/mri/excludes/TestSymbol.rb
+++ b/test/mri/excludes/TestSymbol.rb
@@ -6,3 +6,5 @@
 exclude :test_to_proc_no_method, "works but 'assert_separately failed\npid 28416 exit 143' on CI, moved to jruby/test_symbol.rb"
 exclude :test_to_proc_yield, "works but 'Timeout::Error: execution of assert_ruby_status expired\npid 28480 exit 143' on CI, moved to jruby/test_symbol.rb"
 exclude :test_symbol_encoding, "needs investigation"
+exclude :test_to_proc_arg_with_refinements, "[2.6] fails:  undefined method `hoge' for #<TestSymbol::TestToPRocArgWithRefinements:0xc267ef4>"
+exclude :test_to_proc_arg_with_refinements_override, "[2.6] fails:  undefined method `hoge' for #<TestSymbol::TestToPRocArgWithRefinements:0xc267ef4>"
diff --git a/test/mri/fiddle/test_cparser.rb b/test/mri/fiddle/test_cparser.rb
index c053706e136..5d9ac3c8151 100644
--- a/test/mri/fiddle/test_cparser.rb
+++ b/test/mri/fiddle/test_cparser.rb
@@ -127,10 +127,13 @@ def test_signature_type_args
         'short', 'unsigned short',
         'int', 'unsigned int',
         'long', 'unsigned long',
+        defined?(TYPE_LONG_LONG) && \
+        [
         'long long', 'unsigned long long',
+        ],
         'float', 'double',
         'const char*', 'void*',
-      ]
+      ].flatten.compact
       func, ret, args = parse_signature("void func(#{types.join(',')})")
       assert_equal 'func', func
       assert_equal TYPE_VOID, ret
@@ -139,10 +142,13 @@ def test_signature_type_args
         TYPE_SHORT, -TYPE_SHORT,
         TYPE_INT, -TYPE_INT,
         TYPE_LONG, -TYPE_LONG,
+        defined?(TYPE_LONG_LONG) && \
+        [
         TYPE_LONG_LONG, -TYPE_LONG_LONG,
+        ],
         TYPE_FLOAT, TYPE_DOUBLE,
         TYPE_VOIDP, TYPE_VOIDP,
-      ], args
+      ].flatten.compact, args
     end
 
     def test_signature_single_variable
diff --git a/test/mri/fiddle/test_func.rb b/test/mri/fiddle/test_func.rb
index 8c35833a327..d170c59a750 100644
--- a/test/mri/fiddle/test_func.rb
+++ b/test/mri/fiddle/test_func.rb
@@ -19,6 +19,8 @@ def test_syscall_with_tainted_string
           f.call("uname -rs".dup.taint)
         end
       }.join
+    ensure
+      $SAFE = 0
     end
 
     def test_sinf
diff --git a/test/mri/fiddle/test_function.rb b/test/mri/fiddle/test_function.rb
index cbf84eae9db..eb8ef232e85 100644
--- a/test/mri/fiddle/test_function.rb
+++ b/test/mri/fiddle/test_function.rb
@@ -73,6 +73,12 @@ def test_strcpy
     end
 
     def test_nogvl_poll
+      # XXX hack to quiet down CI errors on EINTR from r64353
+      # [ruby-core:88360] [Misc #14937]
+      # Making pipes (and sockets) non-blocking by default would allow
+      # us to get rid of POSIX timers / timer pthread
+      # https://bugs.ruby-lang.org/issues/14968
+      IO.pipe { |r,w| IO.select([r], [w]) }
       begin
         poll = @libc['poll']
       rescue Fiddle::DLError
@@ -86,9 +92,9 @@ def test_nogvl_poll
       n1 = f.call(nil, 0, msec)
       n2 = th.value
       t1 = Process.clock_gettime(Process::CLOCK_MONOTONIC, :millisecond)
-      assert_in_delta(msec, t1 - t0, 100, 'slept correct amount of time')
-      assert_equal(0, n1, 'poll(2) called correctly main-thread')
-      assert_equal(0, n2, 'poll(2) called correctly in sub-thread')
+      assert_in_delta(msec, t1 - t0, 180, 'slept amount of time')
+      assert_equal(0, n1, perror("poll(2) in main-thread"))
+      assert_equal(0, n2, perror("poll(2) in sub-thread"))
     end
 
     def test_no_memory_leak
@@ -96,5 +102,16 @@ def test_no_memory_leak
       code = 'begin r.call(a); rescue TypeError; end'
       assert_no_memory_leak(%w[-W0 -rfiddle], "#{prep}\n1000.times{#{code}}", "10_000.times {#{code}}", limit: 1.2)
     end
+
+    private
+
+    def perror(m)
+      proc do
+        if e = Fiddle.last_error
+          m = "#{m}: #{SystemCallError.new(e).message}"
+        end
+        m
+      end
+    end
   end
 end if defined?(Fiddle)
diff --git a/test/mri/fiddle/test_handle.rb b/test/mri/fiddle/test_handle.rb
index 77559eb4d96..c0fac399082 100644
--- a/test/mri/fiddle/test_handle.rb
+++ b/test/mri/fiddle/test_handle.rb
@@ -15,6 +15,8 @@ def test_safe_handle_open
           Fiddle::Handle.new(LIBC_SO.dup.taint)
         }
       end.join
+    ensure
+      $SAFE = 0
     end
 
     def test_safe_function_lookup
@@ -25,6 +27,8 @@ def test_safe_function_lookup
           h["qsort".dup.taint]
         }
       end.join
+    ensure
+      $SAFE = 0
     end
 
     def test_to_i
diff --git a/test/mri/fiddle/test_import.rb b/test/mri/fiddle/test_import.rb
index ff16d17d50f..99294ea1619 100644
--- a/test/mri/fiddle/test_import.rb
+++ b/test/mri/fiddle/test_import.rb
@@ -64,7 +64,7 @@ def test_sizeof()
       assert_equal(SIZEOF_VOIDP, LIBC.sizeof("FILE*"))
       assert_equal(LIBC::MyStruct.size(), LIBC.sizeof(LIBC::MyStruct))
       assert_equal(LIBC::MyStruct.size(), LIBC.sizeof(LIBC::MyStruct.malloc()))
-      assert_equal(SIZEOF_LONG_LONG, LIBC.sizeof("long long"))
+      assert_equal(SIZEOF_LONG_LONG, LIBC.sizeof("long long")) if defined?(SIZEOF_LONG_LONG)
     end
 
     Fiddle.constants.grep(/\ATYPE_(?!VOID\z)(.*)/) do
@@ -147,5 +147,9 @@ def test_atof
       r = LIBC.atof("12.34")
       assert_includes(12.00..13.00, r)
     end
+
+    def test_no_message_with_debug
+      assert_in_out_err(%w[--debug --disable=gems -rfiddle/import], 'p Fiddle::Importer', ['Fiddle::Importer'])
+    end
   end
 end if defined?(Fiddle)
diff --git a/test/mri/fiddle/test_pointer.rb b/test/mri/fiddle/test_pointer.rb
index 27a8a6cb06e..b1122aa9c5a 100644
--- a/test/mri/fiddle/test_pointer.rb
+++ b/test/mri/fiddle/test_pointer.rb
@@ -152,11 +152,7 @@ def test_free
     def test_free=
       assert_normal_exit(<<-"End", '[ruby-dev:39269]')
         require 'fiddle'
-        Fiddle::LIBC_SO = #{Fiddle::LIBC_SO.dump}
-        Fiddle::LIBM_SO = #{Fiddle::LIBM_SO.dump}
         include Fiddle
-        @libc = dlopen(LIBC_SO)
-        @libm = dlopen(LIBM_SO)
         free = Fiddle::Function.new(Fiddle::RUBY_FREE, [TYPE_VOIDP], TYPE_VOID)
         ptr = Fiddle::Pointer.malloc(4)
         ptr.free = free
diff --git a/test/mri/fileutils/test_dryrun.rb b/test/mri/fileutils/test_dryrun.rb
index 97d72fcdf9d..fd8a7805eca 100644
--- a/test/mri/fileutils/test_dryrun.rb
+++ b/test/mri/fileutils/test_dryrun.rb
@@ -8,7 +8,7 @@
 class TestFileUtilsDryRun < Test::Unit::TestCase
 
   include FileUtils::DryRun
-  include TestFileUtils::Visibility
+  include TestFileUtilsInc::Visibility
 
   def setup
     super
diff --git a/test/mri/fileutils/test_fileutils.rb b/test/mri/fileutils/test_fileutils.rb
index 521a712acbf..c81f5b40dc1 100644
--- a/test/mri/fileutils/test_fileutils.rb
+++ b/test/mri/fileutils/test_fileutils.rb
@@ -233,7 +233,7 @@ def each_srcdest
 
   def test_assert_output_lines
     assert_raise(MiniTest::Assertion) {
-      Timeout.timeout(0.1) {
+      Timeout.timeout(0.5) {
         assert_output_lines([]) {
           Thread.current.report_on_exception = false
           raise "ok"
@@ -449,6 +449,45 @@ def test_cp_r_symlink_remove_destination
     cp_r 'tmp/src', 'tmp/dest/', remove_destination: true
   end if have_symlink?
 
+  def test_cp_lr
+    check_singleton :cp_lr
+
+    cp_lr 'data', 'tmp'
+    TARGETS.each do |fname|
+      assert_same_file fname, "tmp/#{fname}"
+    end
+
+    # a/* -> b/*
+    mkdir 'tmp/cpr_src'
+    mkdir 'tmp/cpr_dest'
+    File.open('tmp/cpr_src/a', 'w') {|f| f.puts 'a' }
+    File.open('tmp/cpr_src/b', 'w') {|f| f.puts 'b' }
+    File.open('tmp/cpr_src/c', 'w') {|f| f.puts 'c' }
+    mkdir 'tmp/cpr_src/d'
+    cp_lr 'tmp/cpr_src/.', 'tmp/cpr_dest'
+    assert_same_file 'tmp/cpr_src/a', 'tmp/cpr_dest/a'
+    assert_same_file 'tmp/cpr_src/b', 'tmp/cpr_dest/b'
+    assert_same_file 'tmp/cpr_src/c', 'tmp/cpr_dest/c'
+    assert_directory 'tmp/cpr_dest/d'
+    my_rm_rf 'tmp/cpr_src'
+    my_rm_rf 'tmp/cpr_dest'
+
+    bug3588 = '[ruby-core:31360]'
+    mkdir 'tmp2'
+    assert_nothing_raised(ArgumentError, bug3588) do
+      cp_lr 'tmp', 'tmp2'
+    end
+    assert_directory 'tmp2/tmp'
+    assert_raise(ArgumentError, bug3588) do
+      cp_lr 'tmp2', 'tmp2/new_tmp2'
+    end
+
+    bug12892 = '[ruby-core:77885] [Bug #12892]'
+    assert_raise(Errno::ENOENT, bug12892) do
+      cp_lr 'non/existent', 'tmp'
+    end
+  end if have_hardlink?
+
   def test_mv
     check_singleton :mv
 
@@ -806,13 +845,15 @@ def test_ln_s
     check_singleton :ln_s
 
     TARGETS.each do |fname|
-      fname = "../#{fname}"
-      lnfname = 'tmp/lnsdest'
-      ln_s fname, lnfname
-      assert FileTest.symlink?(lnfname), 'not symlink'
-      assert_equal fname, File.readlink(lnfname)
-    ensure
-      rm_f lnfname
+      begin
+        fname = "../#{fname}"
+        lnfname = 'tmp/lnsdest'
+        ln_s fname, lnfname
+        assert FileTest.symlink?(lnfname), 'not symlink'
+        assert_equal fname, File.readlink(lnfname)
+      ensure
+        rm_f lnfname
+      end
     end
   end if have_symlink? and !no_broken_symlink?
 
@@ -1585,6 +1626,10 @@ def test_cd
     check_singleton :cd
   end
 
+  def test_cd_result
+    assert_equal 42, cd('.') { 42 }
+  end
+
   def test_chdir
     check_singleton :chdir
   end
diff --git a/test/mri/fileutils/test_nowrite.rb b/test/mri/fileutils/test_nowrite.rb
index b8044985251..543fa39f5a6 100644
--- a/test/mri/fileutils/test_nowrite.rb
+++ b/test/mri/fileutils/test_nowrite.rb
@@ -8,7 +8,7 @@
 class TestFileUtilsNoWrite < Test::Unit::TestCase
 
   include FileUtils::NoWrite
-  include TestFileUtils::Visibility
+  include TestFileUtilsInc::Visibility
 
   def setup
     super
diff --git a/test/mri/fileutils/test_verbose.rb b/test/mri/fileutils/test_verbose.rb
index 00199463933..cf65be8e03e 100644
--- a/test/mri/fileutils/test_verbose.rb
+++ b/test/mri/fileutils/test_verbose.rb
@@ -8,7 +8,7 @@
 class TestFileUtilsVerbose < Test::Unit::TestCase
 
   include FileUtils::Verbose
-  include TestFileUtils::Visibility
+  include TestFileUtilsInc::Visibility
 
   def setup
     super
diff --git a/test/mri/fileutils/visibility_tests.rb b/test/mri/fileutils/visibility_tests.rb
index 0ce00d5f2c1..4c02c9d207d 100644
--- a/test/mri/fileutils/visibility_tests.rb
+++ b/test/mri/fileutils/visibility_tests.rb
@@ -2,14 +2,14 @@
 require 'test/unit'
 require 'fileutils'
 
-class TestFileUtils < Test::Unit::TestCase
+class TestFileUtilsInc < Test::Unit::TestCase
 end
 
 ##
 # These tests are reused in the FileUtils::Verbose, FileUtils::NoWrite and
 # FileUtils::DryRun tests
 
-module TestFileUtils::Visibility
+module TestFileUtilsInc::Visibility
 
   FileUtils::METHODS.each do |m|
     define_method "test_singleton_visibility_#{m}" do
diff --git a/test/mri/gdbm/test_gdbm.rb b/test/mri/gdbm/test_gdbm.rb
index 9e97eb3587c..64692a44658 100644
--- a/test/mri/gdbm/test_gdbm.rb
+++ b/test/mri/gdbm/test_gdbm.rb
@@ -164,7 +164,7 @@ def test_s_open_lock
       open_db_child(dbname) do
         assert_raise(Errno::EWOULDBLOCK, Errno::EAGAIN, Errno::EACCES) {
           GDBM.open(dbname, 0644) {|gdbm|
-            assert_instance_of(GDBM, gdbm)
+            assert(false)
           }
         }
       end
@@ -213,7 +213,7 @@ def test_s_open_nolock
     end if defined? GDBM::NOLOCK # gdbm 1.8.0 specific
 
     def test_s_open_error
-    skip if Process.uid == 0 # because root can open anything
+      skip "because root can open anything" if Process.uid == 0
 
       assert_instance_of(GDBM, gdbm = GDBM.open("#{@tmpdir}/#{@prefix}", 0))
       assert_raise(Errno::EACCES, Errno::EWOULDBLOCK) {
@@ -726,7 +726,8 @@ def test_newdb_open
     def test_freeze
       GDBM.open("#{@tmproot}/a.dbm") {|d|
         d.freeze
-        assert_raise(FrozenError) { d["k"] = "v" }
+        expected_error = defined?(FrozenError) ? FrozenError : RuntimeError
+        assert_raise(expected_error) { d["k"] = "v" }
       }
     end
   end
diff --git a/test/mri/io/console/test_io_console.rb b/test/mri/io/console/test_io_console.rb
index dd9fc805365..6c8a5ea54a2 100644
--- a/test/mri/io/console/test_io_console.rb
+++ b/test/mri/io/console/test_io_console.rb
@@ -7,6 +7,15 @@
 end
 
 class TestIO_Console < Test::Unit::TestCase
+  # FreeBSD seems to hang on TTOU when running parallel tests
+  # tested on FreeBSD 11.x
+  def set_winsize_setup
+    @old_ttou = trap(:TTOU, 'IGNORE') if RUBY_PLATFORM =~ /freebsd/i
+  end
+
+  def set_winsize_teardown
+    trap(:TTOU, @old_ttou) if defined?(@old_ttou) and @old_ttou
+  end
 end
 
 defined?(PTY) and defined?(IO.console) and TestIO_Console.class_eval do
@@ -127,22 +136,22 @@ def test_noecho2
       sleep 0.1
       s.print "b\n"
       sleep 0.1
-      assert_equal("a\r\nb\r\n", m.readpartial(10))
-      assert_equal("a\n", s.readpartial(10))
+      assert_equal("a\r\nb\r\n", m.gets + m.gets)
+      assert_equal("a\n", s.gets)
       s.noecho {
         assert_not_send([s, :echo?])
         m.print "a\n"
         s.print "b\n"
-        assert_equal("b\r\n", m.readpartial(10))
-        assert_equal("a\n", s.readpartial(10))
+        assert_equal("b\r\n", m.gets)
+        assert_equal("a\n", s.gets)
       }
       assert_send([s, :echo?])
       m.print "a\n"
       sleep 0.1
       s.print "b\n"
       sleep 0.1
-      assert_equal("a\r\nb\r\n", m.readpartial(10))
-      assert_equal("a\n", s.readpartial(10))
+      assert_equal("a\r\nb\r\n", m.gets + m.gets)
+      assert_equal("a\n", s.gets)
     }
   end
 
@@ -165,22 +174,22 @@ def test_setecho2
       sleep 0.1
       s.print "b\n"
       sleep 0.1
-      assert_equal("a\r\nb\r\n", m.readpartial(10))
-      assert_equal("a\n", s.readpartial(10))
+      assert_equal("a\r\nb\r\n", m.gets + m.gets)
+      assert_equal("a\n", s.gets)
       s.echo = false
       assert_not_send([s, :echo?])
       m.print "a\n"
       s.print "b\n"
-      assert_equal("b\r\n", m.readpartial(10))
-      assert_equal("a\n", s.readpartial(10))
+      assert_equal("b\r\n", m.gets)
+      assert_equal("a\n", s.gets)
       s.echo = true
       assert_send([s, :echo?])
       m.print "a\n"
       sleep 0.1
       s.print "b\n"
       sleep 0.1
-      assert_equal("a\r\nb\r\n", m.readpartial(10))
-      assert_equal("a\n", s.readpartial(10))
+      assert_equal("a\r\nb\r\n", m.gets + m.gets)
+      assert_equal("a\n", s.gets)
     }
   end
 
@@ -202,7 +211,7 @@ def test_iflush
       s.iflush
       m.print "b\n"
       m.flush
-      assert_equal("b\n", s.readpartial(10))
+      assert_equal("b\n", s.gets)
     }
   end
 
@@ -212,6 +221,7 @@ def test_oflush
       s.oflush # oflush may be issued after "a" is already sent.
       s.print "b"
       s.flush
+      sleep 0.1
       assert_include(["b", "ab"], m.readpartial(10))
     }
   end
@@ -222,7 +232,7 @@ def test_ioflush
       s.ioflush
       m.print "b\n"
       m.flush
-      assert_equal("b\n", s.readpartial(10))
+      assert_equal("b\n", s.gets)
     }
   end
 
@@ -254,6 +264,7 @@ def test_winsize
   end
 
   def test_set_winsize_invalid_dev
+    set_winsize_setup
     [IO::NULL, __FILE__].each do |path|
       open(path) do |io|
         begin
@@ -266,6 +277,8 @@ def test_set_winsize_invalid_dev
         assert_raise(ArgumentError) {io.winsize = [0, 0, 0]}
       end
     end
+  ensure
+    set_winsize_teardown
   end
 
   unless IO.console
@@ -321,6 +334,7 @@ def test_get_winsize_console
     end
 
     def test_set_winsize_console
+      set_winsize_setup
       s = IO.console.winsize
       assert_nothing_raised(TypeError) {IO.console.winsize = s}
       bug = '[ruby-core:82741] [Bug #13888]'
@@ -328,6 +342,8 @@ def test_set_winsize_console
       assert_equal([s[0], s[1]+1], IO.console.winsize, bug)
       IO.console.winsize = s
       assert_equal(s, IO.console.winsize, bug)
+    ensure
+      set_winsize_teardown
     end
 
     def test_close
diff --git a/test/mri/io/nonblock/test_flush.rb b/test/mri/io/nonblock/test_flush.rb
index 63e16db5a30..08d129de3f4 100644
--- a/test/mri/io/nonblock/test_flush.rb
+++ b/test/mri/io/nonblock/test_flush.rb
@@ -53,6 +53,7 @@ def flush_test(r, w)
 
   def test_nonblock
     IO.pipe {|r, w|
+      w.nonblock = false
       assert_equal(false, w.nonblock?)
       w.nonblock do
         assert_equal(true, w.nonblock?)
diff --git a/test/mri/io/wait/test_io_wait_uncommon.rb b/test/mri/io/wait/test_io_wait_uncommon.rb
new file mode 100644
index 00000000000..e7f222c5786
--- /dev/null
+++ b/test/mri/io/wait/test_io_wait_uncommon.rb
@@ -0,0 +1,78 @@
+# frozen_string_literal: true
+require 'test/unit'
+require 'io/wait'
+
+# test uncommon device types to check portability problems
+# We may optimize IO#wait_*able for non-Linux kernels in the future
+class TestIOWaitUncommon < Test::Unit::TestCase
+  def test_tty_wait
+    begin
+      tty = File.open('/dev/tty', 'w+')
+    rescue Errno::ENOENT, Errno::ENXIO => e
+      skip "/dev/tty: #{e.message} (#{e.class})"
+    end
+    assert_include [ nil, tty ], tty.wait_readable(0)
+    assert_equal tty, tty.wait_writable(1), 'portability test'
+  ensure
+    tty&.close
+  end
+
+  def test_fifo_wait
+    skip 'no mkfifo' unless File.respond_to?(:mkfifo) && IO.const_defined?(:NONBLOCK)
+    Dir.mktmpdir('rubytest-fifo') do |dir|
+      fifo = "#{dir}/fifo"
+      assert_equal 0, File.mkfifo(fifo)
+      rd = Thread.new { File.open(fifo, IO::RDONLY|IO::NONBLOCK) }
+      begin
+        wr = File.open(fifo, IO::WRONLY|IO::NONBLOCK)
+      rescue Errno::ENXIO
+        Thread.pass
+      end until wr
+      assert_instance_of File, rd.value
+      assert_instance_of File, wr
+      rd = rd.value
+      assert_nil rd.wait_readable(0)
+      assert_same wr, wr.wait_writable(0)
+      wr.syswrite 'hi'
+      assert_same rd, rd.wait_readable(1)
+      wr.close
+      assert_equal 'hi', rd.gets
+      rd.close
+    end
+  end
+
+  # used to find portability problems because some ppoll implementations
+  # are incomplete and do not work for certain "file" types
+  def check_dev(dev, m = :wait_readable)
+    begin
+      fp = File.open("/dev/#{dev}", m == :wait_readable ? 'r' : 'w')
+    rescue SystemCallError => e
+      skip "#{dev} could not be opened #{e.message} (#{e.class})"
+    end
+    assert_same fp, fp.__send__(m)
+  ensure
+    fp&.close
+  end
+
+  def test_wait_readable_urandom
+    check_dev 'urandom'
+  end
+
+  def test_wait_readable_random
+    File.open('/dev/random') do |fp|
+      assert_nothing_raised do
+        fp.wait_readable(0)
+      end
+    end
+  rescue SystemCallError => e
+    skip "/dev/random could not be opened #{e.message} (#{e.class})"
+  end
+
+  def test_wait_readable_zero
+    check_dev 'zero'
+  end
+
+  def test_wait_writable_null
+    check_dev 'null', :wait_writable
+  end
+end
diff --git a/test/mri/irb/test_context.rb b/test/mri/irb/test_context.rb
new file mode 100644
index 00000000000..fa2432b3f33
--- /dev/null
+++ b/test/mri/irb/test_context.rb
@@ -0,0 +1,76 @@
+# frozen_string_literal: false
+require 'test/unit'
+require 'tempfile'
+require 'irb'
+require 'rubygems' if defined?(Gem)
+
+module TestIRB
+  class TestContext < Test::Unit::TestCase
+    class TestInputMethod < ::IRB::InputMethod
+      attr_reader :list, :line_no
+
+      def initialize(list = [])
+        super("test")
+        @line_no = 0
+        @list = list
+      end
+
+      def gets
+        @list[@line_no]&.tap {@line_no += 1}
+      end
+
+      def eof?
+        @line_no >= @list.size
+      end
+
+      def encoding
+        Encoding.default_external
+      end
+    end
+
+    def setup
+      IRB.init_config(nil)
+      IRB.conf[:USE_READLINE] = false
+      IRB.conf[:VERBOSE] = false
+      workspace = IRB::WorkSpace.new(Object.new)
+      @context = IRB::Context.new(nil, workspace, TestInputMethod.new)
+    end
+
+    def test_last_value
+      assert_nil(@context.last_value)
+      assert_nil(@context.evaluate('_', 1))
+      obj = Object.new
+      @context.set_last_value(obj)
+      assert_same(obj, @context.last_value)
+      assert_same(obj, @context.evaluate('_', 1))
+    end
+
+    def test_evaluate_with_exception
+      assert_nil(@context.evaluate("$!", 1))
+      e = assert_raise_with_message(RuntimeError, 'foo') {
+        @context.evaluate("raise 'foo'", 1)
+      }
+      assert_equal('foo', e.message)
+      assert_same(e, @context.evaluate('$!', 1, exception: e))
+    end
+
+    def test_eval_input
+      input = TestInputMethod.new([
+        "raise 'Foo'\n",
+        "_\n",
+        "0\n",
+        "_\n",
+      ])
+      irb = IRB::Irb.new(IRB::WorkSpace.new(Object.new), input)
+      out, err = capture_io do
+        irb.eval_input
+      end
+      assert_empty err
+      assert_pattern_list([:*, /RuntimeError \(.*Foo.*\).*\n/,
+                           :*, /#<RuntimeError: Foo>\n/,
+                           :*, /0$/,
+                           :*, /0$/,
+                           /\s*/], out)
+    end
+  end
+end
diff --git a/test/mri/irb/test_init.rb b/test/mri/irb/test_init.rb
index 3d6c0f3bdc4..11e293ad188 100644
--- a/test/mri/irb/test_init.rb
+++ b/test/mri/irb/test_init.rb
@@ -7,14 +7,14 @@ class TestInit < Test::Unit::TestCase
     def test_setup_with_argv_preserves_global_argv
       argv = ["foo", "bar"]
       with_argv(argv) do
-        IRB.setup(eval("__FILE__"), argv: [])
+        IRB.setup(eval("__FILE__"), argv: %w[-f])
         assert_equal argv, ARGV
       end
     end
 
-    def test_setup_with_empty_argv_does_not_change_dollar0
+    def test_setup_with_minimum_argv_does_not_change_dollar0
       orig = $0.dup
-      IRB.setup(eval("__FILE__"), argv: [])
+      IRB.setup(eval("__FILE__"), argv: %w[-f])
       assert_equal orig, $0
     end
 
diff --git a/test/mri/json/json_parser_test.rb b/test/mri/json/json_parser_test.rb
index 5f454eb1215..68aeb572bb6 100644
--- a/test/mri/json/json_parser_test.rb
+++ b/test/mri/json/json_parser_test.rb
@@ -110,8 +110,8 @@ def test_parse_numbers
   end
 
   def test_parse_bigdecimals
-    assert_equal(BigDecimal,                                 JSON.parse('{"foo": 9.01234567890123456789}', decimal_class: BigDecimal)["foo"].class)
-    assert_equal(BigDecimal.new("0.901234567890123456789E1"),JSON.parse('{"foo": 9.01234567890123456789}', decimal_class: BigDecimal)["foo"]      )
+    assert_equal(BigDecimal,                             JSON.parse('{"foo": 9.01234567890123456789}', decimal_class: BigDecimal)["foo"].class)
+    assert_equal(BigDecimal("0.901234567890123456789E1"),JSON.parse('{"foo": 9.01234567890123456789}', decimal_class: BigDecimal)["foo"]      )
   end
 
   if Array.method_defined?(:permutation)
diff --git a/test/mri/lib/jit_support.rb b/test/mri/lib/jit_support.rb
new file mode 100644
index 00000000000..82f53ec59d7
--- /dev/null
+++ b/test/mri/lib/jit_support.rb
@@ -0,0 +1,65 @@
+require 'rbconfig'
+
+module JITSupport
+  JIT_TIMEOUT = 600 # 10min for each...
+  JIT_SUCCESS_PREFIX = 'JIT success \(\d+\.\dms\)'
+  UNSUPPORTED_COMPILERS = [
+    'icc',
+  ]
+
+  module_function
+  # Run Ruby script with --jit-wait (Synchronous JIT compilation).
+  # Returns [stdout, stderr]
+  def eval_with_jit(env = nil, script, **opts)
+    stdout, stderr = nil, nil
+    # retry 3 times while cc1 error happens.
+    3.times do |i|
+      stdout, stderr, status = eval_with_jit_without_retry(env, script, **opts)
+      assert_equal(true, status.success?, "Failed to run script with JIT:\n#{code_block(script)}\nstdout:\n#{code_block(stdout)}\nstderr:\n#{code_block(stderr)}")
+      break unless retried_stderr?(stderr)
+    end
+    [stdout, stderr]
+  end
+
+  def eval_with_jit_without_retry(env = nil, script, verbose: 0, min_calls: 5, save_temps: false, max_cache: 1000, wait: true, timeout: JIT_TIMEOUT)
+    args = [
+      '--disable-gems', "--jit-verbose=#{verbose}",
+      "--jit-min-calls=#{min_calls}", "--jit-max-cache=#{max_cache}",
+    ]
+    args << '--jit-wait' if wait
+    args << '--jit-save-temps' if save_temps
+    args << '-e' << script
+    base_env = { 'MJIT_SEARCH_BUILD_DIR' => 'true' } # workaround to skip requiring `make install` for `make test-all`
+    if preloadenv = RbConfig::CONFIG['PRELOADENV'] and !preloadenv.empty?
+      so = "mjit_build_dir.#{RbConfig::CONFIG['SOEXT']}"
+      base_env[preloadenv] = File.realpath(so) rescue nil
+    end
+    args.unshift(env ? base_env.merge!(env) : base_env)
+    EnvUtil.invoke_ruby(args,
+      '', true, true, timeout: timeout,
+    )
+  end
+
+  def supported?
+    return @supported if defined?(@supported)
+    @supported = !UNSUPPORTED_COMPILERS.include?(RbConfig::CONFIG['CC'])
+  end
+
+  def remove_mjit_logs(stderr)
+    if RubyVM::MJIT.enabled? # utility for -DFORCE_MJIT_ENABLE
+      stderr.gsub(/^MJIT warning: Skipped to compile unsupported instruction: \w+\n/m, '')
+    else
+      stderr
+    end
+  end
+
+  def code_block(code)
+    "```\n#{code}\n```\n\n"
+  end
+
+  # We're retrying cc1 not found error on gcc, which should be solved in the future but ignored for now.
+  def retried_stderr?(stderr)
+    RbConfig::CONFIG['CC'].start_with?('gcc') &&
+      stderr.include?("error trying to exec 'cc1': execvp: No such file or directory")
+  end
+end
diff --git a/test/mri/lib/leakchecker.rb b/test/mri/lib/leakchecker.rb
index d236b7d7f05..af9200bf77a 100644
--- a/test/mri/lib/leakchecker.rb
+++ b/test/mri/lib/leakchecker.rb
@@ -6,6 +6,7 @@ def initialize
     @thread_info = find_threads
     @env_info = find_env
     @encoding_info = find_encodings
+    @old_verbose = $VERBOSE
   end
 
   def check(test_name)
@@ -15,10 +16,20 @@ def check(test_name)
       check_tempfile_leak(test_name),
       check_env(test_name),
       check_encodings(test_name),
+      check_safe(test_name),
+      check_verbose(test_name),
     ]
     GC.start if leaks.any?
   end
 
+  def check_safe test_name
+    puts "#{test_name}: $SAFE == #{$SAFE}" unless $SAFE == 0
+  end
+
+  def check_verbose test_name
+    puts "#{test_name}: $VERBOSE == #{$VERBOSE}" unless @old_verbose == $VERBOSE
+  end
+
   def find_fds
     if IO.respond_to?(:console) and (m = IO.method(:console)).arity.nonzero?
       m[:close]
diff --git a/test/mri/lib/memory_status.rb b/test/mri/lib/memory_status.rb
index 1b3bd7c8698..ad002b2dda5 100644
--- a/test/mri/lib/memory_status.rb
+++ b/test/mri/lib/memory_status.rb
@@ -8,8 +8,6 @@ module Memory
   keys = []
 
   case
-  when RUBY_ENGINE == "jruby"
-    # do nothing, no memory leak testing will run
   when File.exist?(procfile = "/proc/self/status") && (pat = /^Vm(\w+):\s+(\d+)/) =~ (data = File.binread(procfile))
     PROC_FILE = procfile
     VM_PAT = pat
diff --git a/test/mri/lib/minitest/unit.rb b/test/mri/lib/minitest/unit.rb
index 3f3e6941689..25fd15d0937 100644
--- a/test/mri/lib/minitest/unit.rb
+++ b/test/mri/lib/minitest/unit.rb
@@ -3,7 +3,7 @@
 
 require "optparse"
 require "rbconfig"
-#require "leakchecker"
+require "leakchecker"
 
 ##
 # Minimal (mostly drop-in) replacement for test-unit.
@@ -940,7 +940,7 @@ def _run_suite suite, type
         filter === m || filter === "#{suite}##{m}"
       }
 
-      # leakchecker = LeakChecker.new
+      leakchecker = LeakChecker.new
 
       assertions = filtered_test_methods.map { |method|
         inst = suite.new method
@@ -956,7 +956,9 @@ def _run_suite suite, type
         puts if @verbose
         $stdout.flush
 
-        # leakchecker.check("#{inst.class}\##{inst.__name__}")
+        unless defined?(RubyVM::MJIT) && RubyVM::MJIT.enabled? # compiler process is wrongly considered as leak
+          leakchecker.check("#{inst.class}\##{inst.__name__}")
+        end
 
         inst._assertions
       }
@@ -1169,6 +1171,14 @@ def rubinius? platform = defined?(RUBY_ENGINE) && RUBY_ENGINE
       def windows? platform = RUBY_PLATFORM
         /mswin|mingw/ =~ platform
       end
+
+      ##
+      # Is this running on mingw?
+
+      def mingw? platform = RUBY_PLATFORM
+        /mingw/ =~ platform
+      end
+
     end
 
     ##
diff --git a/test/mri/lib/test/unit.rb b/test/mri/lib/test/unit.rb
index 761fe92df81..35751208a9d 100644
--- a/test/mri/lib/test/unit.rb
+++ b/test/mri/lib/test/unit.rb
@@ -136,8 +136,9 @@ def process_args(args = [])
 
       def non_options(files, options)
         @jobserver = nil
+        makeflags = ENV.delete("MAKEFLAGS")
         if !options[:parallel] and
-          /(?:\A|\s)--jobserver-(?:auth|fds)=(\d+),(\d+)/ =~ ENV["MAKEFLAGS"]
+          /(?:\A|\s)--jobserver-(?:auth|fds)=(\d+),(\d+)/ =~ makeflags
           begin
             r = IO.for_fd($1.to_i(10), "rb", autoclose: false)
             w = IO.for_fd($2.to_i(10), "wb", autoclose: false)
@@ -145,6 +146,8 @@ def non_options(files, options)
             r.close if r
             nil
           else
+            r.close_on_exec = true
+            w.close_on_exec = true
             @jobserver = [r, w]
             options[:parallel] ||= 1
           end
@@ -191,8 +194,10 @@ def setup_options(opts, options)
 
       class Worker
         def self.launch(ruby,args=[])
+          scale = EnvUtil.subprocess_timeout_scale
           io = IO.popen([*ruby, "-W1",
                         "#{File.dirname(__FILE__)}/unit/parallel.rb",
+                        *("--subprocess-timeout-scale=#{scale}" if scale),
                         *args], "rb+")
           new(io, io.pid, :waiting)
         end
@@ -400,7 +405,7 @@ def deal(io, type, result, rep, shutting_down = false)
           end
           if @options[:separate] and not bang
             worker.quit
-            worker = add_worker
+            worker = launch_worker
           end
           worker.run(task, type)
           @test_count += 1
@@ -579,7 +584,6 @@ def setup_options(opts, options)
         end
       end
 
-      private
       def _run_suites(suites, type)
         result = super
         report.reject!{|r| r.start_with? "Skipped:" } if @options[:hide_skip]
@@ -889,10 +893,15 @@ def non_options(files, options)
               next if f.empty?
               path = f
             end
-            if !(match = (Dir["#{path}/**/#{@@testfile_prefix}_*.rb"] + Dir["#{path}/**/*_#{@@testfile_suffix}.rb"]).uniq).empty?
+            if f.end_with?(File::SEPARATOR) or !f.include?(File::SEPARATOR) or File.directory?(path)
+              match = (Dir["#{path}/**/#{@@testfile_prefix}_*.rb"] + Dir["#{path}/**/*_#{@@testfile_suffix}.rb"]).uniq
+            else
+              match = Dir[path]
+            end
+            if !match.empty?
               if reject
                 match.reject! {|n|
-                  n[(prefix.length+1)..-1] if prefix
+                  n = n[(prefix.length+1)..-1] if prefix
                   reject_pat =~ n
                 }
               end
@@ -1045,10 +1054,14 @@ def setup_options(parser, options)
           raise OptionParser::InvalidArgument, "timeout scale must be positive" unless scale > 0
           options[:timeout_scale] = scale
         end
+      end
+
+      def non_options(files, options)
         if scale = options[:timeout_scale] or
           (scale = ENV["RUBY_TEST_SUBPROCESS_TIMEOUT_SCALE"] and (scale = scale.to_f) > 0)
           EnvUtil.subprocess_timeout_scale = scale
         end
+        super
       end
     end
 
diff --git a/test/mri/lib/test/unit/assertions.rb b/test/mri/lib/test/unit/assertions.rb
index eed5aca6a4d..dfa929a1367 100644
--- a/test/mri/lib/test/unit/assertions.rb
+++ b/test/mri/lib/test/unit/assertions.rb
@@ -474,7 +474,7 @@ def assert_not_all?(obj, m = nil, &blk)
         failed = []
         obj.each do |*a, &b|
           if blk.call(*a, &b)
-            failed << a.size > 1 ? a : a[0]
+            failed << (a.size > 1 ? a : a[0])
           end
         end
         assert(failed.empty?, message(m) {failed.pretty_inspect})
@@ -515,8 +515,8 @@ def prepare_syntax_check(code, fname = caller_locations(2, 1)[0], mesg = fname.t
         $VERBOSE = verbose
       end
 
-      def assert_valid_syntax(code, *args)
-        prepare_syntax_check(code, *args) do |src, fname, line, mesg|
+      def assert_valid_syntax(code, *args, **opt)
+        prepare_syntax_check(code, *args, **opt) do |src, fname, line, mesg|
           yield if defined?(yield)
           assert_nothing_raised(SyntaxError, mesg) do
             assert_equal(:ok, syntax_check(src, fname, line), mesg)
@@ -583,6 +583,8 @@ def assert_normal_exit(testsrc, message = '', child_env: nil, **opt)
 
       def assert_in_out_err(args, test_stdin = "", test_stdout = [], test_stderr = [], message = nil,
                             success: nil, **opt)
+        args = Array(args).dup
+        args.insert((Hash === args[0] ? 1 : 0), '--disable=gems')
         stdout, stderr, status = EnvUtil.invoke_ruby(args, test_stdin, true, true, **opt)
         if signo = status.termsig
           EnvUtil.diagnostic_reports(Signal.signame(signo), status.pid, Time.now)
@@ -691,7 +693,20 @@ def assert_warn(*args)
         assert_warning(*args) {$VERBOSE = false; yield}
       end
 
+      def assert_no_warning(pat, msg = nil)
+        stderr = EnvUtil.verbose_warning {
+          EnvUtil.with_default_internal(pat.encoding) {
+            yield
+          }
+        }
+        msg = message(msg) {diff pat, stderr}
+        refute(pat === stderr, msg)
+      end
+
       def assert_no_memory_leak(args, prepare, code, message=nil, limit: 2.0, rss: false, **opt)
+        # TODO: consider choosing some appropriate limit for MJIT and stop skipping this once it does not randomly fail
+        skip 'assert_no_memory_leak may consider MJIT memory usage as leak' if defined?(RubyVM::MJIT) && RubyVM::MJIT.enabled?
+
         require_relative '../../memory_status'
         raise MiniTest::Skip, "unsupported platform" unless defined?(Memory::Status)
 
diff --git a/test/mri/lib/zombie_hunter.rb b/test/mri/lib/zombie_hunter.rb
index 2b81e396aca..33bc4679412 100644
--- a/test/mri/lib/zombie_hunter.rb
+++ b/test/mri/lib/zombie_hunter.rb
@@ -1,4 +1,5 @@
 # frozen_string_literal: true
+
 module ZombieHunter
   def after_teardown
     super
diff --git a/test/mri/logger/test_logger.rb b/test/mri/logger/test_logger.rb
index a153db4a2ae..3f2319b961d 100644
--- a/test/mri/logger/test_logger.rb
+++ b/test/mri/logger/test_logger.rb
@@ -326,7 +326,7 @@ def test_lshift
     r, w = IO.pipe
     logger = Logger.new(w)
     logger << "msg"
-    read_ready, = IO.select([r], nil, nil, 0.1)
+    IO.select([r], nil, nil, 0.1)
     w.close
     msg = r.read
     r.close
@@ -335,7 +335,7 @@ def test_lshift
     r, w = IO.pipe
     logger = Logger.new(w)
     logger << "msg2\n\n"
-    read_ready, = IO.select([r], nil, nil, 0.1)
+    IO.select([r], nil, nil, 0.1)
     w.close
     msg = r.read
     r.close
diff --git a/test/mri/matrix/test_matrix.rb b/test/mri/matrix/test_matrix.rb
index d40e0c04302..3ecb9d2f8ba 100644
--- a/test/mri/matrix/test_matrix.rb
+++ b/test/mri/matrix/test_matrix.rb
@@ -283,7 +283,18 @@ def test_column
   end
 
   def test_collect
-    assert_equal(Matrix[[1, 4, 9], [16, 25, 36]], @m1.collect {|x| x ** 2 })
+    m1 = Matrix.zero(2,2)
+    m2 = Matrix.build(3,4){|row, col| 1}
+
+    assert_equal(Matrix[[5, 5, 5, 5], [5, 5, 5, 5], [5, 5, 5, 5]], m2.collect{|e| e * 5})
+    assert_equal(Matrix[[7, 0],[0, 7]], m1.collect(:diagonal){|e| e + 7})
+    assert_equal(Matrix[[0, 5],[5, 0]], m1.collect(:off_diagonal){|e| e + 5})
+    assert_equal(Matrix[[8, 1, 1, 1], [8, 8, 1, 1], [8, 8, 8, 1]], m2.collect(:lower){|e| e + 7})
+    assert_equal(Matrix[[1, 1, 1, 1], [-11, 1, 1, 1], [-11, -11, 1, 1]], m2.collect(:strict_lower){|e| e - 12})
+    assert_equal(Matrix[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], m2.collect(:strict_upper){|e| e ** 2})
+    assert_equal(Matrix[[-1, -1, -1, -1], [1, -1, -1, -1], [1, 1, -1, -1]], m2.collect(:upper){|e| -e})
+    assert_raise(ArgumentError) {m1.collect(:test){|e| e + 7}}
+    assert_not_equal(m2, m2.collect {|e| e * 2 })
   end
 
   def test_minor
@@ -623,6 +634,134 @@ def test_combine
     assert_equal Matrix.empty(0,3), Matrix.combine(Matrix.empty(0,3), Matrix.empty(0,3)) { raise }
   end
 
+  def test_set_element
+    src = Matrix[
+      [1, 2, 3, 4],
+      [5, 6, 7, 8],
+      [9, 10, 11, 12],
+    ]
+    rows = {
+      range:   [1..2, 1...3, 1..-1, -2..2, 1.., 1..., -2.., -2...],
+      int:     [2, -1],
+      invalid: [-4, 4, -4..2, 2..-4, 0...0, 2..0, -4..],
+    }
+    columns = {
+      range:   [2..3, 2...4, 2..-1, -2..3, 2.., 2..., -2..., -2..],
+      int:     [3, -1],
+      invalid: [-5, 5, -5..2, 2..-5, 0...0, -5..],
+    }
+    values = {
+      element: 42,
+      matrix:  Matrix[[20, 21], [22, 23]],
+      vector:  Vector[30, 31],
+      row:     Matrix[[60, 61]],
+      column:  Matrix[[50], [51]],
+      mismatched_matrix: Matrix.identity(3),
+      mismatched_vector: Vector[0, 1, 2, 3],
+    }
+    solutions = {
+      [:int, :int] => {
+        element: Matrix[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 42]],
+      },
+      [:range , :int] => {
+        element: Matrix[[1, 2, 3, 4], [5, 6, 7, 42], [9, 10, 11, 42]],
+        column:  Matrix[[1, 2, 3, 4], [5, 6, 7, 50], [9, 10, 11, 51]],
+        vector:  Matrix[[1, 2, 3, 4], [5, 6, 7, 30], [9, 10, 11, 31]],
+      },
+      [:int, :range] => {
+        element: Matrix[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 42, 42]],
+        row:     Matrix[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 60, 61]],
+        vector:  Matrix[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 30, 31]],
+      },
+      [:range , :range] => {
+        element: Matrix[[1, 2, 3, 4], [5, 6, 42, 42], [9, 10, 42, 42]],
+        matrix:  Matrix[[1, 2, 3, 4], [5, 6, 20, 21], [9, 10, 22, 23]],
+      },
+    }
+    solutions.default = Hash.new(IndexError)
+
+    rows.each do |row_style, row_arguments|
+      row_arguments.each do |row_argument|
+        columns.each do |column_style, column_arguments|
+          column_arguments.each do |column_argument|
+            values.each do |value_type, value|
+              expected = solutions[[row_style, column_style]][value_type] || Matrix::ErrDimensionMismatch
+
+              result = src.clone
+              begin
+                result[row_argument, column_argument] = value
+                assert_equal expected, result,
+                  "m[#{row_argument.inspect}][#{column_argument.inspect}] = #{value.inspect} failed"
+              rescue Exception => e
+                raise if e.class != expected
+              end
+            end
+          end
+        end
+      end
+    end
+  end
+
+  def test_map!
+    m1 = Matrix.zero(2,2)
+    m2 = Matrix.build(3,4){|row, col| 1}
+    m3 = Matrix.zero(3,5).freeze
+    m4 = Matrix.empty.freeze
+
+    assert_equal Matrix[[5, 5, 5, 5], [5, 5, 5, 5], [5, 5, 5, 5]], m2.map!{|e| e * 5}
+    assert_equal Matrix[[7, 0],[0, 7]], m1.map!(:diagonal){|e| e + 7}
+    assert_equal Matrix[[7, 5],[5, 7]], m1.map!(:off_diagonal){|e| e + 5}
+    assert_equal Matrix[[12, 5, 5, 5], [12, 12, 5, 5], [12, 12, 12, 5]], m2.map!(:lower){|e| e + 7}
+    assert_equal Matrix[[12, 5, 5, 5], [0, 12, 5, 5], [0, 0, 12, 5]], m2.map!(:strict_lower){|e| e - 12}
+    assert_equal Matrix[[12, 25, 25, 25], [0, 12, 25, 25], [0, 0, 12, 25]], m2.map!(:strict_upper){|e| e ** 2}
+    assert_equal Matrix[[-12, -25, -25, -25], [0, -12, -25, -25], [0, 0, -12, -25]], m2.map!(:upper){|e| -e}
+    assert_equal m1, m1.map!{|e| e ** 2 }
+    assert_equal m2, m2.map!(:lower){ |e| e - 3 }
+    assert_raise(ArgumentError) {m1.map!(:test){|e| e + 7}}
+    assert_raise(FrozenError) { m3.map!{|e| e * 2} }
+    assert_raise(FrozenError) { m4.map!{} }
+  end
+
+  def test_freeze
+    m = Matrix[[1, 2, 3],[4, 5, 6]]
+    f = m.freeze
+    assert_equal true, f.frozen?
+    assert m.equal?(f)
+    assert m.equal?(f.freeze)
+    assert_raise(FrozenError){ m[0, 1] = 56 }
+    assert_equal m.dup, m
+  end
+
+  def test_clone
+    a = Matrix[[4]]
+    def a.foo
+      42
+    end
+
+    m = a.clone
+    m[0, 0] = 2
+    assert_equal a, m * 2
+    assert_equal 42, m.foo
+
+    a.freeze
+    m = a.clone
+    assert m.frozen?
+    assert_equal 42, m.foo
+  end
+
+  def test_dup
+    a = Matrix[[4]]
+    def a.foo
+      42
+    end
+    a.freeze
+
+    m = a.dup
+    m[0, 0] = 2
+    assert_equal a, m * 2
+    assert !m.respond_to?(:foo)
+  end
+
   def test_eigenvalues_and_eigenvectors_symmetric
     m = Matrix[
       [8, 1],
diff --git a/test/mri/matrix/test_vector.rb b/test/mri/matrix/test_vector.rb
index 52785120b11..8b771efee33 100644
--- a/test/mri/matrix/test_vector.rb
+++ b/test/mri/matrix/test_vector.rb
@@ -27,6 +27,108 @@ def test_basis
     assert_raise(ArgumentError) { Vector.basis(index: 3) }
   end
 
+  def test_get_element
+    assert_equal(@v1[0..], [1, 2, 3])
+    assert_equal(@v1[0..1], [1, 2])
+    assert_equal(@v1[2], 3)
+    assert_equal(@v1[4], nil)
+  end
+
+  def test_set_element
+
+    assert_block do
+      v = Vector[5, 6, 7, 8, 9]
+      v[1..2] = Vector[1, 2]
+      v == Vector[5, 1, 2, 8, 9]
+    end
+
+    assert_block do
+      v = Vector[6, 7, 8]
+      v[1..2] = Matrix[[1, 3]]
+      v == Vector[6, 1, 3]
+    end
+
+    assert_block do
+      v = Vector[1, 2, 3, 4, 5, 6]
+      v[0..2] = 8
+      v == Vector[8, 8, 8, 4, 5, 6]
+    end
+
+    assert_block do
+      v = Vector[1, 3, 4, 5]
+      v[2] = 5
+      v == Vector[1, 3, 5, 5]
+    end
+
+    assert_block do
+      v = Vector[2, 3, 5]
+      v[-2] = 13
+      v == Vector[2, 13, 5]
+    end
+
+    assert_block do
+      v = Vector[4, 8, 9, 11, 30]
+      v[1..-2] = Vector[1, 2, 3]
+      v == Vector[4, 1, 2, 3, 30]
+    end
+
+    assert_raise(IndexError) {Vector[1, 3, 4, 5][5..6] = 17}
+    assert_raise(IndexError) {Vector[1, 3, 4, 5][6] = 17}
+    assert_raise(Matrix::ErrDimensionMismatch) {Vector[1, 3, 4, 5][0..2] = Matrix[[1], [2], [3]]}
+    assert_raise(ArgumentError) {Vector[1, 2, 3, 4, 5, 6][0..2] = Vector[1, 2, 3, 4, 5, 6]}
+    assert_raise(FrozenError) { Vector[7, 8, 9].freeze[0..1] = 5}
+  end
+
+  def test_map!
+    v1 = Vector[1, 2, 3]
+    v2 = Vector[1, 3, 5].freeze
+    v3 = Vector[].freeze
+    assert_equal Vector[1, 4, 9], v1.map!{|e| e ** 2}
+    assert_equal v1, v1.map!{|e| e - 8}
+    assert_raise(FrozenError) { v2.map!{|e| e + 2 }}
+    assert_raise(FrozenError){ v3.map!{} }
+  end
+
+  def test_freeze
+    v = Vector[1,2,3]
+    f = v.freeze
+    assert_equal true, f.frozen?
+    assert v.equal?(f)
+    assert v.equal?(f.freeze)
+    assert_raise(FrozenError){ v[1] = 56 }
+    assert_equal v.dup, v
+  end
+
+  def test_clone
+    a = Vector[4]
+    def a.foo
+      42
+    end
+
+    v = a.clone
+    v[0] = 2
+    assert_equal a, v * 2
+    assert_equal 42, v.foo
+
+    a.freeze
+    v = a.clone
+    assert v.frozen?
+    assert_equal 42, v.foo
+  end
+
+  def test_dup
+    a = Vector[4]
+    def a.foo
+      42
+    end
+    a.freeze
+
+    v = a.dup
+    v[0] = 2
+    assert_equal a, v * 2
+    assert !v.respond_to?(:foo)
+  end
+
   def test_identity
     assert_same @v1, @v1
     assert_not_same @v1, @v2
@@ -223,6 +325,8 @@ def test_angle_with
     assert_in_epsilon(Math::PI/2, Vector[1, 0].angle_with(Vector[0, -1]))
     assert_in_epsilon(Math::PI/4, Vector[2, 2].angle_with(Vector[0, 1]))
     assert_in_delta(0.0, Vector[1, 1].angle_with(Vector[1, 1]), 0.00001)
+    assert_equal(Vector[6, 6].angle_with(Vector[7, 7]), 0.0)
+    assert_equal(Vector[6, 6].angle_with(Vector[-7, -7]), Math::PI)
 
     assert_raise(Vector::ZeroVectorError) { Vector[1, 1].angle_with(Vector[0, 0]) }
     assert_raise(Vector::ZeroVectorError) { Vector[0, 0].angle_with(Vector[1, 1]) }
diff --git a/test/mri/minitest/test_minitest_unit.rb b/test/mri/minitest/test_minitest_unit.rb
index 0b050c6ee2f..3d92b865c37 100644
--- a/test/mri/minitest/test_minitest_unit.rb
+++ b/test/mri/minitest/test_minitest_unit.rb
@@ -1122,7 +1122,7 @@ def test_assert_raises_module
   # *sigh* This is quite an odd scenario, but it is from real (albeit
   # ugly) test code in ruby-core:
   #
-  # http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=rev&revision=29259
+  # https://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=rev&revision=29259
 
   def test_assert_raises_skip
     @assertion_count = 0
@@ -1528,7 +1528,9 @@ def test_refute_match
 
   def test_refute_match_matcher_object
     @assertion_count = 2
-    @tc.refute_match Object.new, 5 # default #=~ returns false
+    non_verbose do
+      @tc.refute_match Object.new, 5 # default #=~ returns false
+    end
   end
 
   def test_refute_match_object_triggered
diff --git a/test/mri/mkmf/base.rb b/test/mri/mkmf/base.rb
index 3ba3e033879..80dec1421a4 100644
--- a/test/mri/mkmf/base.rb
+++ b/test/mri/mkmf/base.rb
@@ -1,5 +1,13 @@
 # frozen_string_literal: false
 $extmk = true
+require 'rbconfig'
+RbConfig.fire_update!("top_srcdir", File.expand_path("../..", __dir__))
+File.foreach(RbConfig::CONFIG["topdir"]+"/Makefile") do |line|
+  if /^CC_WRAPPER\s*=\s*/ =~ line
+    RbConfig.fire_update!('CC_WRAPPER', $'.strip)
+    break
+  end
+end
 
 require 'test/unit'
 require 'mkmf'
diff --git a/test/mri/mkmf/test_framework.rb b/test/mri/mkmf/test_framework.rb
index eb29c6b5186..ba15299ae03 100644
--- a/test/mri/mkmf/test_framework.rb
+++ b/test/mri/mkmf/test_framework.rb
@@ -10,7 +10,7 @@ def create_framework(fw, hdrname = "#{fw}.h")
         FileUtils.mkdir_p(hdrdir)
         File.write("#{hdrdir}/#{hdrname}", "")
         src = "#{fwdir}/main.c"
-        File.write(src, "void #{fw}(void) {}")
+        File.write(src, "void #{fw}(void) {}\n")
         cmd = LINK_SO.dup
         RbConfig.expand(cmd, RbConfig::CONFIG.merge("OBJS"=>src))
         cmd.gsub!("$@", "#{fwdir}/#{fw}")
diff --git a/test/mri/monitor/test_monitor.rb b/test/mri/monitor/test_monitor.rb
index a0360696479..8854b59ccc8 100644
--- a/test/mri/monitor/test_monitor.rb
+++ b/test/mri/monitor/test_monitor.rb
@@ -269,4 +269,26 @@ def test_timedwait
 #     end
 #     cumber_thread.kill
   end
+
+  def test_wait_interruption
+    queue = Queue.new
+    cond = @monitor.new_cond
+    @monitor.define_singleton_method(:mon_enter_for_cond) do |*args|
+      queue.deq
+      super(*args)
+    end
+    th = Thread.start {
+      @monitor.synchronize do
+        begin
+          cond.wait(0.1)
+        rescue Interrupt
+          @monitor.instance_variable_get(:@mon_owner)
+        end
+      end
+    }
+    sleep(0.1)
+    th.raise(Interrupt)
+    queue.enq(nil)
+    assert_equal th, th.value
+  end
 end
diff --git a/test/mri/net/ftp/test_ftp.rb b/test/mri/net/ftp/test_ftp.rb
index 8177bfe36e1..a5219644bbc 100644
--- a/test/mri/net/ftp/test_ftp.rb
+++ b/test/mri/net/ftp/test_ftp.rb
@@ -335,7 +335,7 @@ def test_read_timeout_exceeded
       sleep(0.1)
       sock.print("331 Please specify the password.\r\n")
       commands.push(sock.gets)
-      sleep(0.3)
+      sleep(2.0) # Net::ReadTimeout
       sock.print("230 Login successful.\r\n")
       commands.push(sock.gets)
       sleep(0.1)
@@ -344,7 +344,7 @@ def test_read_timeout_exceeded
     begin
       begin
         ftp = Net::FTP.new
-        ftp.read_timeout = 0.2
+        ftp.read_timeout = 0.4
         ftp.connect(SERVER_ADDR, server.port)
         assert_raise(Net::ReadTimeout) do
           ftp.login
@@ -377,7 +377,7 @@ def test_read_timeout_not_exceeded
     begin
       begin
         ftp = Net::FTP.new
-        ftp.read_timeout = 0.2
+        ftp.read_timeout = 1.0
         ftp.connect(SERVER_ADDR, server.port)
         ftp.login
         assert_match(/\AUSER /, commands.shift)
@@ -386,7 +386,7 @@ def test_read_timeout_not_exceeded
         assert_equal(nil, commands.shift)
       ensure
         ftp.close
-        assert_equal(0.2, ftp.read_timeout)
+        assert_equal(1.0, ftp.read_timeout)
       end
     ensure
       server.close
@@ -662,7 +662,7 @@ def test_retrbinary_read_timeout_not_exceeded
       sock.print("150 Opening BINARY mode data connection for foo (#{binary_data.size} bytes)\r\n")
       conn = TCPSocket.new(host, port)
       binary_data.scan(/.{1,1024}/nm) do |s|
-        sleep(0.1)
+        sleep(0.2)
         conn.print(s)
       end
       conn.shutdown(Socket::SHUT_WR)
@@ -673,7 +673,7 @@ def test_retrbinary_read_timeout_not_exceeded
     begin
       begin
         ftp = Net::FTP.new
-        ftp.read_timeout = 0.2
+        ftp.read_timeout = 1.0
         ftp.connect(SERVER_ADDR, server.port)
         ftp.login
         assert_match(/\AUSER /, commands.shift)
@@ -2171,7 +2171,7 @@ def test_getbinaryfile_command_injection
           begin
             ftp = Net::FTP.new
             ftp.resume = resume
-            ftp.read_timeout = 0.2
+            ftp.read_timeout = RubyVM::MJIT.enabled? ? 5 : 0.2 # use large timeout for --jit-wait
             ftp.connect(SERVER_ADDR, server.port)
             ftp.login
             assert_match(/\AUSER /, commands.shift)
diff --git a/test/mri/net/http/test_http.rb b/test/mri/net/http/test_http.rb
index d3c2aecb9f0..389b6fa42e0 100644
--- a/test/mri/net/http/test_http.rb
+++ b/test/mri/net/http/test_http.rb
@@ -529,6 +529,28 @@ def _test_patch__base(http)
     assert_equal data, res.entity
   end
 
+  def test_timeout_during_HTTP_session_write
+    th = nil
+    # listen for connections... but deliberately do not read
+    TCPServer.open('localhost', 0) {|server|
+      port = server.addr[1]
+
+      conn = Net::HTTP.new('localhost', port)
+      conn.write_timeout = 0.01
+      conn.read_timeout = 0.01 if windows?
+      conn.open_timeout = 0.1
+
+      th = Thread.new do
+        err = !windows? ? Net::WriteTimeout : Net::ReadTimeout
+        assert_raise(err) { conn.post('/', "a"*50_000_000) }
+      end
+      assert th.join(10)
+    }
+  ensure
+    th&.kill
+    th&.join
+  end
+
   def test_timeout_during_HTTP_session
     bug4246 = "expected the HTTP session to have timed out but have not. c.f. [ruby-core:34203]"
 
diff --git a/test/mri/net/http/test_http_request.rb b/test/mri/net/http/test_http_request.rb
index c2144d86c7d..b7515b7e98b 100644
--- a/test/mri/net/http/test_http_request.rb
+++ b/test/mri/net/http/test_http_request.rb
@@ -65,6 +65,18 @@ def test_initialize_accept_encoding
                          'Bug #7381 - do not decode content if the user overrides'
   end if Net::HTTP::HAVE_ZLIB
 
+  def test_initialize_GET_uri
+    req = Net::HTTP::Get.new(URI("http://example.com/foo"))
+    assert_equal "/foo", req.path
+    assert_equal "example.com", req['Host']
+
+    req = Net::HTTP::Get.new(URI("https://example.com/foo"))
+    assert_equal "/foo", req.path
+    assert_equal "example.com", req['Host']
+
+    assert_raise(ArgumentError){ Net::HTTP::Get.new(URI("urn:ietf:rfc:7231")) }
+  end
+
   def test_header_set
     req = Net::HTTP::Get.new '/'
 
diff --git a/test/mri/net/http/test_httpheader.rb b/test/mri/net/http/test_httpheader.rb
index f8778522eb0..cb4678a8050 100644
--- a/test/mri/net/http/test_httpheader.rb
+++ b/test/mri/net/http/test_httpheader.rb
@@ -31,6 +31,11 @@ def test_initialize
     assert_raise(ArgumentError){ @c.initialize_http_header("foo"=>"a\xff") }
   end
 
+  def test_initialize_with_symbol
+    @c.initialize_http_header(foo: "abc")
+    assert_equal "abc", @c["foo"]
+  end
+
   def test_size
     assert_equal 0, @c.size
     @c['a'] = 'a'
diff --git a/test/mri/net/http/test_httpresponse.rb b/test/mri/net/http/test_httpresponse.rb
index d99c3611c56..a03bb2e1522 100644
--- a/test/mri/net/http/test_httpresponse.rb
+++ b/test/mri/net/http/test_httpresponse.rb
@@ -422,11 +422,41 @@ def test_raises_exception_with_missing_reason
 
     res = Net::HTTPResponse.read_new(io)
     assert_equal(nil, res.message)
-    assert_raise Net::HTTPServerException do
+    assert_raise Net::HTTPClientException do
       res.error!
     end
   end
 
+  def test_read_code_type
+    res = Net::HTTPUnknownResponse.new('1.0', '???', 'test response')
+    assert_equal Net::HTTPUnknownResponse, res.code_type
+
+    res = Net::HTTPInformation.new('1.0', '1xx', 'test response')
+    assert_equal Net::HTTPInformation, res.code_type
+
+    res = Net::HTTPSuccess.new('1.0', '2xx', 'test response')
+    assert_equal Net::HTTPSuccess, res.code_type
+
+    res = Net::HTTPRedirection.new('1.0', '3xx', 'test response')
+    assert_equal Net::HTTPRedirection, res.code_type
+
+    res = Net::HTTPClientError.new('1.0', '4xx', 'test response')
+    assert_equal Net::HTTPClientError, res.code_type
+
+    res = Net::HTTPServerError.new('1.0', '5xx', 'test response')
+    assert_equal Net::HTTPServerError, res.code_type
+  end
+
+  def test_inspect_response
+    res = Net::HTTPUnknownResponse.new('1.0', '???', 'test response')
+    assert_equal '#<Net::HTTPUnknownResponse ??? test response readbody=false>', res.inspect
+
+    res = Net::HTTPUnknownResponse.new('1.0', '???', 'test response')
+    socket = Net::BufferedIO.new(StringIO.new('test body'))
+    res.reading_body(socket, true) {}
+    assert_equal '#<Net::HTTPUnknownResponse ??? test response readbody=true>', res.inspect
+  end
+
 private
 
   def dummy_io(str)
diff --git a/test/mri/net/imap/test_imap.rb b/test/mri/net/imap/test_imap.rb
index 41f25fe1c78..936f4e0f42a 100644
--- a/test/mri/net/imap/test_imap.rb
+++ b/test/mri/net/imap/test_imap.rb
@@ -231,7 +231,7 @@ def test_exception_during_idle
         in_idle = false
         exception_raised = false
         c = m.new_cond
-        @threads << Thread.start do
+        raiser = Thread.start do
           m.synchronize do
             until in_idle
               c.wait(0.1)
@@ -243,6 +243,7 @@ def test_exception_during_idle
             c.signal
           end
         end
+        @threads << raiser
         imap.idle do |res|
           m.synchronize do
             in_idle = true
@@ -260,6 +261,7 @@ def test_exception_during_idle
       imap.logout
     ensure
       imap.disconnect if imap
+      raiser.kill unless in_idle
     end
   end
 
diff --git a/test/mri/net/imap/test_imap_response_parser.rb b/test/mri/net/imap/test_imap_response_parser.rb
index 12c8a27017f..ed31a03f5ae 100644
--- a/test/mri/net/imap/test_imap_response_parser.rb
+++ b/test/mri/net/imap/test_imap_response_parser.rb
@@ -29,6 +29,8 @@ def test_flag_list_safe
 EOF
     }.call
     assert_equal [:Haschildren], response.data.attr
+  ensure
+    $SAFE = 0
   end
 
   def test_flag_list_too_many_flags
diff --git a/test/mri/net/protocol/test_protocol.rb b/test/mri/net/protocol/test_protocol.rb
index 048526b1c73..2ad3709ac5b 100644
--- a/test/mri/net/protocol/test_protocol.rb
+++ b/test/mri/net/protocol/test_protocol.rb
@@ -26,4 +26,99 @@ def test_each_crlf_line
       assert_equal("\u3042\r\n.\r\n", sio.string)
     end
   end
+
+  def create_mockio(capacity: 100)
+    mockio = Object.new
+    mockio.instance_variable_set(:@str, +'')
+    mockio.instance_variable_set(:@capacity, capacity)
+    def mockio.string; @str; end
+    def mockio.to_io; self; end
+    def mockio.wait_writable(sec); sleep sec; false; end
+    def mockio.write_nonblock(*strs, exception: true)
+      if @capacity <= @str.bytesize
+        if exception
+          raise Net::WaitWritable
+        else
+          return :wait_writable
+        end
+      end
+      len = 0
+      strs.each do |str|
+        len1 = @str.bytesize
+        break if @capacity <= len1
+        @str << str.byteslice(0, @capacity - @str.bytesize)
+        len2 = @str.bytesize
+        len += len2 - len1
+      end
+      len
+    end
+    mockio
+  end
+
+  def test_write0_multibyte
+    mockio = create_mockio(capacity: 1)
+    def mockio.write_nonblock(str, *strs, **kw)
+      @str << str.byteslice(0, 1)
+      1
+    end
+    io = Net::BufferedIO.new(mockio)
+    assert_equal(3, io.write("\u3042"))
+  end
+
+  def test_write0_timeout
+    mockio = create_mockio
+    io = Net::BufferedIO.new(mockio)
+    io.write_timeout = 0.1
+    assert_raise(Net::WriteTimeout){ io.write("a"*1000) }
+  end
+
+  def test_write0_success
+    mockio = create_mockio
+    io = Net::BufferedIO.new(mockio)
+    io.write_timeout = 0.1
+    len = io.write("a"*10)
+    assert_equal "a"*10, mockio.string
+    assert_equal 10, len
+  end
+
+  def test_write0_success2
+    mockio = create_mockio
+    io = Net::BufferedIO.new(mockio)
+    io.write_timeout = 0.1
+    len = io.write("a"*100)
+    assert_equal "a"*100, mockio.string
+    assert_equal 100, len
+  end
+
+  def test_write0_success_multi1
+    mockio = create_mockio
+    io = Net::BufferedIO.new(mockio)
+    io.write_timeout = 0.1
+    len = io.write("a"*50, "a"*49)
+    assert_equal "a"*99, mockio.string
+    assert_equal 99, len
+  end
+
+  def test_write0_success_multi2
+    mockio = create_mockio
+    io = Net::BufferedIO.new(mockio)
+    io.write_timeout = 0.1
+    len = io.write("a"*50, "a"*50)
+    assert_equal "a"*100, mockio.string
+    assert_equal 100, len
+  end
+
+  def test_write0_timeout_multi1
+    mockio = create_mockio
+    io = Net::BufferedIO.new(mockio)
+    io.write_timeout = 0.1
+    assert_raise(Net::WriteTimeout){ io.write("a"*50,"a"*51) }
+  end
+
+  def test_write0_timeout_multi2
+    mockio = create_mockio
+    io = Net::BufferedIO.new(mockio)
+    io.write_timeout = 0.1
+    assert_raise(Net::WriteTimeout){ io.write("a"*50,"a"*50,"a") }
+  end
 end
diff --git a/test/mri/objspace/test_objspace.rb b/test/mri/objspace/test_objspace.rb
index 0e1ad327b9d..947170203ac 100644
--- a/test/mri/objspace/test_objspace.rb
+++ b/test/mri/objspace/test_objspace.rb
@@ -318,6 +318,62 @@ def dump_my_heap_please
     end
   end
 
+  def test_dump_addresses_match_dump_all_addresses
+    assert_in_out_err(%w[-robjspace], "#{<<-"begin;"}\n#{<<-'end;'}") do |output, error|
+      begin;
+        def dump_my_heap_please
+          obj = Object.new
+          puts ObjectSpace.dump(obj)
+          ObjectSpace.dump_all(output: $stdout)
+        end
+
+        dump_my_heap_please
+      end;
+      needle = JSON.parse(output.first)
+      addr = needle['address']
+      found  = output.drop(1).find { |l| JSON.parse(l)['address'] == addr }
+      assert found, "object #{addr} should be findable in full heap dump"
+    end
+  end
+
+  def test_dump_class_addresses_match_dump_all_addresses
+    assert_in_out_err(%w[-robjspace], "#{<<-"begin;"}\n#{<<-'end;'}") do |output, error|
+      begin;
+        def dump_my_heap_please
+          obj = Object.new
+          puts ObjectSpace.dump(obj)
+          ObjectSpace.dump_all(output: $stdout)
+        end
+
+        dump_my_heap_please
+      end;
+      needle = JSON.parse(output.first)
+      addr = needle['class']
+      found  = output.drop(1).find { |l| JSON.parse(l)['address'] == addr }
+      assert found, "object #{addr} should be findable in full heap dump"
+    end
+  end
+
+  def test_dump_reference_addresses_match_dump_all_addresses
+    assert_in_out_err(%w[-robjspace], "#{<<-"begin;"}\n#{<<-'end;'}") do |output, error|
+      begin;
+        def dump_my_heap_please
+          obj = Object.new
+          obj2 = Object.new
+          obj2.instance_variable_set(:@ref, obj)
+          puts ObjectSpace.dump(obj)
+          ObjectSpace.dump_all(output: $stdout)
+        end
+
+        dump_my_heap_please
+      end;
+      needle = JSON.parse(output.first)
+      addr = needle['address']
+      found  = output.drop(1).find { |l| (JSON.parse(l)['references'] || []).include? addr }
+      assert found, "object #{addr} should be findable in full heap dump"
+    end
+  end
+
   def test_dump_all
     entry = /"bytesize":11, "value":"TEST STRING", "encoding":"UTF-8", "file":"-", "line":4, "method":"dump_my_heap_please", "generation":/
 
diff --git a/test/mri/open-uri/test_ssl.rb b/test/mri/open-uri/test_ssl.rb
index 948cb6a959e..337139604f2 100644
--- a/test/mri/open-uri/test_ssl.rb
+++ b/test/mri/open-uri/test_ssl.rb
@@ -175,18 +175,18 @@ def test_proxy_cacert_dir
 end if defined?(OpenSSL::SSL)
 
 if defined?(OpenSSL::SSL)
-# cp /etc/ssl/openssl.cnf . # I copied from OpenSSL 1.0.2h source
+# cp /etc/ssl/openssl.cnf . # I copied from OpenSSL 1.1.1b source
 
 # mkdir demoCA demoCA/private demoCA/newcerts
 # touch demoCA/index.txt
 # echo 00 > demoCA/serial
-# openssl genrsa -des3 -out demoCA/private/cakey.pem 1024
+# openssl genrsa -des3 -out demoCA/private/cakey.pem 2048
 # openssl req -new -key demoCA/private/cakey.pem -out demoCA/careq.pem -subj "/C=JP/ST=Tokyo/O=RubyTest/CN=Ruby Test CA"
 # # basicConstraints=CA:TRUE is required; the default openssl.cnf has it in [v3_ca]
 # openssl ca -config openssl.cnf -extensions v3_ca -out demoCA/cacert.pem -startdate 090101000000Z -enddate 491231235959Z -batch -keyfile demoCA/private/cakey.pem -selfsign -infiles demoCA/careq.pem
 
 # mkdir server
-# openssl genrsa -des3 -out server/server.key 1024
+# openssl genrsa -des3 -out server/server.key 2048
 # openssl req -new -key server/server.key -out server/csr.pem -subj "/C=JP/ST=Tokyo/O=RubyTest/CN=127.0.0.1"
 # openssl ca -config openssl.cnf -startdate 090101000000Z -enddate 491231235959Z -in server/csr.pem -keyfile demoCA/private/cakey.pem -cert demoCA/cacert.pem -out server/cert.pem
 
@@ -199,7 +199,7 @@ def test_proxy_cacert_dir
     Data:
         Version: 3 (0x2)
         Serial Number: 0 (0x0)
-    Signature Algorithm: sha256WithRSAEncryption
+        Signature Algorithm: sha256WithRSAEncryption
         Issuer: C=JP, ST=Tokyo, O=RubyTest, CN=Ruby Test CA
         Validity
             Not Before: Jan  1 00:00:00 2009 GMT
@@ -207,49 +207,70 @@ def test_proxy_cacert_dir
         Subject: C=JP, ST=Tokyo, O=RubyTest, CN=Ruby Test CA
         Subject Public Key Info:
             Public Key Algorithm: rsaEncryption
-                Public-Key: (1024 bit)
+                RSA Public-Key: (2048 bit)
                 Modulus:
-                    00:be:74:41:33:c9:1b:e1:12:78:6b:b4:52:2e:ae:
-                    b6:e2:1e:58:65:57:2d:cb:07:3f:91:c9:53:7a:e7:
-                    2e:68:2c:0c:5d:8b:16:a7:42:4a:5c:6f:c7:aa:44:
-                    ff:6d:c6:d7:49:0e:b1:5d:03:5b:51:ce:d5:cc:cd:
-                    ab:69:cc:c2:43:76:b1:b2:30:3b:e7:f6:1f:3e:35:
-                    1d:21:75:41:96:eb:84:a0:34:6f:a4:5d:70:a2:b2:
-                    d5:fe:b9:45:47:a1:e8:ca:e3:b7:bb:4d:37:1c:f3:
-                    96:d4:2d:80:85:cd:8e:31:96:53:92:a0:fe:e4:4c:
-                    16:47:5e:c8:27:32:70:a8:6b
+                    00:ad:f3:4d:5b:0b:01:54:cc:86:36:d1:93:6b:33:
+                    56:25:90:61:d6:9a:a0:f4:24:20:ee:c8:14:ab:0f:
+                    4b:89:d8:7c:bb:c0:f8:7f:fb:e9:a2:d5:1c:6b:6f:
+                    dc:5c:23:b1:49:aa:2c:e8:ca:43:48:64:69:4b:8a:
+                    bd:44:57:9b:14:d9:7a:b2:49:00:d6:c2:74:67:62:
+                    52:1d:a9:32:df:fe:7a:22:20:49:83:e1:cb:3d:dc:
+                    1a:2a:f0:36:20:c1:e8:c8:89:d4:51:1a:68:91:20:
+                    e0:ba:67:0a:b2:6b:f8:e3:8c:f5:ee:a1:36:b1:89:
+                    ec:23:b6:f2:39:a9:b9:2e:ea:de:d9:86:e5:42:11:
+                    46:ed:10:9a:90:76:44:4e:4d:49:2d:49:e8:e3:cb:
+                    ff:7a:7d:80:cb:bf:c4:c3:69:ba:9c:60:4a:de:af:
+                    bf:26:78:b8:fb:46:d1:37:d0:89:ba:78:93:6a:37:
+                    a5:e9:58:e7:e2:e3:7d:7c:95:20:79:41:56:15:cd:
+                    b2:c6:3b:e1:b7:e7:ba:47:60:9a:05:b1:07:f3:26:
+                    72:9d:3b:1b:02:18:3d:d5:de:e6:e9:30:a9:b5:8f:
+                    15:1b:40:f9:64:61:54:d3:53:e8:c4:29:4a:89:f3:
+                    e5:0d:fd:16:61:ee:f2:6d:8a:45:a8:34:7e:53:46:
+                    8e:87
                 Exponent: 65537 (0x10001)
         X509v3 extensions:
             X509v3 Subject Key Identifier:
-                71:DB:DC:BA:F6:7F:75:31:7A:ED:AB:8B:48:93:86:94:1A:FF:30:58
+                A0:7E:0B:AD:A3:AD:37:D7:21:0B:75:6F:8A:90:5F:8C:C9:69:DF:98
             X509v3 Authority Key Identifier:
-                keyid:71:DB:DC:BA:F6:7F:75:31:7A:ED:AB:8B:48:93:86:94:1A:FF:30:58
+                keyid:A0:7E:0B:AD:A3:AD:37:D7:21:0B:75:6F:8A:90:5F:8C:C9:69:DF:98
 
-            X509v3 Basic Constraints:
+            X509v3 Basic Constraints: critical
                 CA:TRUE
     Signature Algorithm: sha256WithRSAEncryption
-         91:1c:45:a5:c0:4e:fc:54:39:62:33:80:7d:03:c1:b8:51:f7:
-         56:83:6c:a3:15:50:cf:92:a0:77:a3:34:16:b5:30:f0:33:5a:
-         be:6a:ac:17:87:70:f8:4e:4d:49:ac:8b:84:fd:e5:0f:15:d7:
-         9a:29:cc:a9:f5:97:f5:13:2a:86:3b:2d:f4:b7:b4:a2:7c:e1:
-         0e:2a:ff:91:64:31:8f:12:cc:99:bf:e1:de:8f:6f:7c:1b:e4:
-         cc:56:c8:bb:85:c9:ba:df:7f:07:7a:cd:03:22:2c:b6:f8:06:
-         35:72:72:b8:52:eb:62:15:85:2b:8f:8c:bc:27:3c:8b:de:32:
-         db:95
+         06:ea:06:02:19:9a:cb:94:a2:7e:c0:86:71:66:e7:a5:71:46:
+         a2:25:55:f5:e5:58:df:d1:91:58:e6:8a:0e:91:b3:22:4c:88:
+         4d:5f:02:af:0f:73:65:0d:af:9a:f2:e4:36:f3:1f:e8:28:1d:
+         9c:74:72:5b:f7:12:e8:fa:45:d6:df:e5:f1:d3:91:f4:0e:db:
+         e2:56:63:ee:82:57:6f:12:ad:d7:0d:de:5a:8c:3d:76:d2:87:
+         c9:48:1c:c4:f3:89:63:3c:c2:25:e0:dd:63:a6:4c:6c:5a:07:
+         7b:86:78:62:86:02:a1:ef:0e:41:75:c5:d4:61:ab:c3:3b:9b:
+         51:0b:e6:34:6d:0b:14:5a:2d:aa:d3:58:26:43:8f:4c:d7:45:
+         73:1e:67:66:5e:f3:0c:69:70:27:a1:d5:70:f3:5a:10:98:c8:
+         4f:8a:3b:9f:ad:8e:8d:49:8f:fb:f6:36:5d:4f:70:f9:4f:54:
+         33:cf:a2:a6:1d:8c:61:b9:30:42:f2:49:d1:3d:a1:f1:eb:1e:
+         78:a6:30:f8:8a:48:89:c7:3e:bd:0d:d8:72:04:a6:00:e5:62:
+         a4:13:3f:9e:b6:86:25:dc:d1:ff:3a:fc:f5:0e:e4:0e:f7:b8:
+         66:90:fe:4f:c2:54:2a:7f:61:6e:e7:4b:bf:40:7e:75:30:02:
+         5b:bb:91:1b
 -----BEGIN CERTIFICATE-----
-MIICVDCCAb2gAwIBAgIBADANBgkqhkiG9w0BAQsFADBHMQswCQYDVQQGEwJKUDEO
+MIIDXDCCAkSgAwIBAgIBADANBgkqhkiG9w0BAQsFADBHMQswCQYDVQQGEwJKUDEO
 MAwGA1UECAwFVG9reW8xETAPBgNVBAoMCFJ1YnlUZXN0MRUwEwYDVQQDDAxSdWJ5
 IFRlc3QgQ0EwHhcNMDkwMTAxMDAwMDAwWhcNNDkxMjMxMjM1OTU5WjBHMQswCQYD
 VQQGEwJKUDEOMAwGA1UECAwFVG9reW8xETAPBgNVBAoMCFJ1YnlUZXN0MRUwEwYD
-VQQDDAxSdWJ5IFRlc3QgQ0EwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAL50
-QTPJG+ESeGu0Ui6utuIeWGVXLcsHP5HJU3rnLmgsDF2LFqdCSlxvx6pE/23G10kO
-sV0DW1HO1czNq2nMwkN2sbIwO+f2Hz41HSF1QZbrhKA0b6RdcKKy1f65RUeh6Mrj
-t7tNNxzzltQtgIXNjjGWU5Kg/uRMFkdeyCcycKhrAgMBAAGjUDBOMB0GA1UdDgQW
-BBRx29y69n91MXrtq4tIk4aUGv8wWDAfBgNVHSMEGDAWgBRx29y69n91MXrtq4tI
-k4aUGv8wWDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4GBAJEcRaXATvxU
-OWIzgH0DwbhR91aDbKMVUM+SoHejNBa1MPAzWr5qrBeHcPhOTUmsi4T95Q8V15op
-zKn1l/UTKoY7LfS3tKJ84Q4q/5FkMY8SzJm/4d6Pb3wb5MxWyLuFybrffwd6zQMi
-LLb4BjVycrhS62IVhSuPjLwnPIveMtuV
+VQQDDAxSdWJ5IFRlc3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
+AQCt801bCwFUzIY20ZNrM1YlkGHWmqD0JCDuyBSrD0uJ2Hy7wPh/++mi1Rxrb9xc
+I7FJqizoykNIZGlLir1EV5sU2XqySQDWwnRnYlIdqTLf/noiIEmD4cs93Boq8DYg
+wejIidRRGmiRIOC6Zwqya/jjjPXuoTaxiewjtvI5qbku6t7ZhuVCEUbtEJqQdkRO
+TUktSejjy/96fYDLv8TDabqcYErer78meLj7RtE30Im6eJNqN6XpWOfi4318lSB5
+QVYVzbLGO+G357pHYJoFsQfzJnKdOxsCGD3V3ubpMKm1jxUbQPlkYVTTU+jEKUqJ
+8+UN/RZh7vJtikWoNH5TRo6HAgMBAAGjUzBRMB0GA1UdDgQWBBSgfguto6031yEL
+dW+KkF+MyWnfmDAfBgNVHSMEGDAWgBSgfguto6031yELdW+KkF+MyWnfmDAPBgNV
+HRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQAG6gYCGZrLlKJ+wIZxZuel
+cUaiJVX15Vjf0ZFY5ooOkbMiTIhNXwKvD3NlDa+a8uQ28x/oKB2cdHJb9xLo+kXW
+3+Xx05H0DtviVmPugldvEq3XDd5ajD120ofJSBzE84ljPMIl4N1jpkxsWgd7hnhi
+hgKh7w5BdcXUYavDO5tRC+Y0bQsUWi2q01gmQ49M10VzHmdmXvMMaXAnodVw81oQ
+mMhPijufrY6NSY/79jZdT3D5T1Qzz6KmHYxhuTBC8knRPaHx6x54pjD4ikiJxz69
+DdhyBKYA5WKkEz+etoYl3NH/Ovz1DuQO97hmkP5PwlQqf2Fu50u/QH51MAJbu5Eb
 -----END CERTIFICATE-----
 End
 
@@ -258,7 +279,7 @@ def test_proxy_cacert_dir
     Data:
         Version: 3 (0x2)
         Serial Number: 1 (0x1)
-    Signature Algorithm: sha256WithRSAEncryption
+        Signature Algorithm: sha256WithRSAEncryption
         Issuer: C=JP, ST=Tokyo, O=RubyTest, CN=Ruby Test CA
         Validity
             Not Before: Jan  1 00:00:00 2009 GMT
@@ -266,17 +287,26 @@ def test_proxy_cacert_dir
         Subject: C=JP, ST=Tokyo, O=RubyTest, CN=127.0.0.1
         Subject Public Key Info:
             Public Key Algorithm: rsaEncryption
-                Public-Key: (1024 bit)
+                RSA Public-Key: (2048 bit)
                 Modulus:
-                    00:bb:bd:74:69:53:58:50:24:79:f2:eb:db:8b:97:
-                    e4:69:a4:dd:48:0c:40:35:62:42:b3:35:8c:96:2a:
-                    62:76:98:b5:2a:e0:f8:78:33:b6:ff:f8:55:bf:44:
-                    69:21:d7:b5:0e:bd:8a:dd:31:1b:88:d5:b4:5e:7a:
-                    82:e0:ba:99:6c:04:76:e9:ff:e6:f8:f5:06:8e:7e:
-                    a4:db:db:eb:43:44:12:a7:ca:ca:2b:aa:5f:83:10:
-                    e2:9e:35:55:e8:e8:af:be:c8:7d:bb:c2:d4:aa:c1:
-                    1c:57:0b:c0:0c:3a:1d:6e:23:a9:03:26:7c:ea:8c:
-                    f0:86:61:ce:f1:ff:42:c7:23
+                    00:cb:b3:71:95:12:70:fc:db:d4:a9:a7:66:d6:d3:
+                    09:dd:06:80:19:e1:f2:d6:1e:31:b6:6b:20:75:51:
+                    dc:a7:37:a9:ac:5b:57:5d:69:36:b6:de:1d:2c:f6:
+                    44:64:f8:e8:d6:f0:da:38:6a:ba:c2:b1:9e:dc:bb:
+                    79:94:e0:25:0c:ce:76:87:17:5d:79:9e:14:9e:bd:
+                    4c:0d:aa:74:10:3a:96:ef:76:82:d5:72:16:b5:c1:
+                    ac:17:2d:90:83:73:5c:d7:a6:f5:36:0f:4c:55:f3:
+                    30:5d:19:dc:01:0e:f8:e6:fe:a5:ad:52:88:59:dc:
+                    4a:07:ed:a2:eb:a1:01:63:c4:8a:92:ba:06:80:9b:
+                    0d:85:f2:9f:f9:70:ac:d7:ad:f0:7a:3f:b8:92:2a:
+                    33:ca:69:d0:01:65:5d:31:38:1d:f6:1f:b2:17:07:
+                    7e:ac:88:67:a6:c4:5f:3e:93:94:61:e6:e4:49:9d:
+                    ba:d4:d2:e8:e3:93:d1:66:79:c5:e3:1d:f8:5a:50:
+                    54:58:3d:04:b0:fd:65:d1:b3:8a:b5:8a:30:5f:b2:
+                    dc:34:1a:14:f7:74:4c:03:29:97:63:5a:d7:de:bb:
+                    eb:7f:4a:2a:90:59:c0:2b:47:09:82:8f:75:de:14:
+                    3f:bc:78:9a:69:25:80:5b:6c:a0:65:12:0d:29:61:
+                    ac:f9
                 Exponent: 65537 (0x10001)
         X509v3 extensions:
             X509v3 Basic Constraints:
@@ -284,104 +314,167 @@ def test_proxy_cacert_dir
             Netscape Comment:
                 OpenSSL Generated Certificate
             X509v3 Subject Key Identifier:
-                7F:17:5A:58:88:96:E1:1F:44:EA:FF:AD:C6:2E:90:E2:95:32:DD:F0
+                EC:6B:7C:79:B8:3B:11:1D:42:F3:9A:2A:CF:9A:15:59:D7:F9:D8:C6
             X509v3 Authority Key Identifier:
-                keyid:71:DB:DC:BA:F6:7F:75:31:7A:ED:AB:8B:48:93:86:94:1A:FF:30:58
+                keyid:A0:7E:0B:AD:A3:AD:37:D7:21:0B:75:6F:8A:90:5F:8C:C9:69:DF:98
 
     Signature Algorithm: sha256WithRSAEncryption
-         1c:80:02:67:f0:4e:a8:5a:6a:73:9c:de:75:ad:7d:2e:e9:ce:
-         c3:2e:cd:70:b4:21:d9:42:0d:7c:0e:77:9e:97:91:13:02:77:
-         4a:cd:f6:fc:26:3d:42:2e:08:85:05:10:df:3a:5f:f0:77:85:
-         44:29:41:dd:03:6b:eb:e7:c8:89:8e:d1:57:a8:ac:43:c8:85:
-         c3:95:64:9f:a5:6e:e9:2e:6e:06:45:21:36:ec:d5:79:f5:0e:
-         a8:53:b5:f7:02:b0:59:12:e3:ae:73:25:fd:18:ab:23:b2:fc:
-         a9:f9:60:e5:a7:d8:ba:0f:db:be:17:81:25:90:fd:7a:21:cb:
-         fa:8b
+         29:14:db:71:e9:a0:86:f8:cc:4d:e4:8a:76:78:a7:ff:4e:94:
+         b4:4d:92:dc:57:9a:52:64:46:27:15:8b:4f:2a:18:a7:0d:fc:
+         d2:75:ce:4e:49:97:0b:46:71:57:23:e3:a5:c0:c5:71:94:fc:
+         f2:1d:3b:06:93:82:03:59:56:d4:fb:09:06:08:b4:97:50:33:
+         cf:58:89:dd:91:31:07:26:9a:7e:7f:8d:71:de:09:dc:4f:e5:
+         6b:a3:10:71:d4:50:24:43:a0:1c:f5:2a:d9:1a:fb:e3:d6:f1:
+         bc:6b:42:67:16:b4:3b:31:f4:ec:03:7d:78:e2:64:16:57:6d:
+         ba:7c:0c:e1:14:b2:7c:75:4e:2b:09:3e:86:e4:aa:cc:7e:5c:
+         2b:bd:8d:26:4d:49:36:74:86:fe:c5:a6:15:4a:af:e8:b4:4e:
+         d5:f2:e1:59:c2:fb:7e:c3:c4:f1:63:d8:c2:b0:9a:ae:31:96:
+         90:c3:09:d0:ce:2e:31:90:d7:83:dd:ac:31:cc:f7:87:41:08:
+         92:33:28:52:fa:2d:9e:ad:ae:6a:9f:c3:be:ce:c1:a6:e4:16:
+         2f:69:34:40:86:b6:10:21:0e:31:69:81:9e:fc:fd:c3:06:25:
+         65:37:d3:d9:4a:20:84:aa:e7:0e:60:7c:bf:3f:88:67:ac:e5:
+         8c:e0:61:d6
 -----BEGIN CERTIFICATE-----
-MIICfDCCAeWgAwIBAgIBATANBgkqhkiG9w0BAQsFADBHMQswCQYDVQQGEwJKUDEO
+MIIDgTCCAmmgAwIBAgIBATANBgkqhkiG9w0BAQsFADBHMQswCQYDVQQGEwJKUDEO
 MAwGA1UECAwFVG9reW8xETAPBgNVBAoMCFJ1YnlUZXN0MRUwEwYDVQQDDAxSdWJ5
 IFRlc3QgQ0EwHhcNMDkwMTAxMDAwMDAwWhcNNDkxMjMxMjM1OTU5WjBEMQswCQYD
 VQQGEwJKUDEOMAwGA1UECAwFVG9reW8xETAPBgNVBAoMCFJ1YnlUZXN0MRIwEAYD
-VQQDDAkxMjcuMC4wLjEwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALu9dGlT
-WFAkefLr24uX5Gmk3UgMQDViQrM1jJYqYnaYtSrg+Hgztv/4Vb9EaSHXtQ69it0x
-G4jVtF56guC6mWwEdun/5vj1Bo5+pNvb60NEEqfKyiuqX4MQ4p41Vejor77IfbvC
-1KrBHFcLwAw6HW4jqQMmfOqM8IZhzvH/QscjAgMBAAGjezB5MAkGA1UdEwQCMAAw
-LAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0G
-A1UdDgQWBBR/F1pYiJbhH0Tq/63GLpDilTLd8DAfBgNVHSMEGDAWgBRx29y69n91
-MXrtq4tIk4aUGv8wWDANBgkqhkiG9w0BAQsFAAOBgQAcgAJn8E6oWmpznN51rX0u
-6c7DLs1wtCHZQg18Dneel5ETAndKzfb8Jj1CLgiFBRDfOl/wd4VEKUHdA2vr58iJ
-jtFXqKxDyIXDlWSfpW7pLm4GRSE27NV59Q6oU7X3ArBZEuOucyX9GKsjsvyp+WDl
-p9i6D9u+F4ElkP16Icv6iw==
+VQQDDAkxMjcuMC4wLjEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDL
+s3GVEnD829Spp2bW0wndBoAZ4fLWHjG2ayB1UdynN6msW1ddaTa23h0s9kRk+OjW
+8No4arrCsZ7cu3mU4CUMznaHF115nhSevUwNqnQQOpbvdoLVcha1wawXLZCDc1zX
+pvU2D0xV8zBdGdwBDvjm/qWtUohZ3EoH7aLroQFjxIqSugaAmw2F8p/5cKzXrfB6
+P7iSKjPKadABZV0xOB32H7IXB36siGemxF8+k5Rh5uRJnbrU0ujjk9FmecXjHfha
+UFRYPQSw/WXRs4q1ijBfstw0GhT3dEwDKZdjWtfeu+t/SiqQWcArRwmCj3XeFD+8
+eJppJYBbbKBlEg0pYaz5AgMBAAGjezB5MAkGA1UdEwQCMAAwLAYJYIZIAYb4QgEN
+BB8WHU9wZW5TU0wgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1UdDgQWBBTsa3x5
+uDsRHULzmirPmhVZ1/nYxjAfBgNVHSMEGDAWgBSgfguto6031yELdW+KkF+MyWnf
+mDANBgkqhkiG9w0BAQsFAAOCAQEAKRTbcemghvjMTeSKdnin/06UtE2S3FeaUmRG
+JxWLTyoYpw380nXOTkmXC0ZxVyPjpcDFcZT88h07BpOCA1lW1PsJBgi0l1Azz1iJ
+3ZExByaafn+Ncd4J3E/la6MQcdRQJEOgHPUq2Rr749bxvGtCZxa0OzH07AN9eOJk
+FldtunwM4RSyfHVOKwk+huSqzH5cK72NJk1JNnSG/sWmFUqv6LRO1fLhWcL7fsPE
+8WPYwrCarjGWkMMJ0M4uMZDXg92sMcz3h0EIkjMoUvotnq2uap/Dvs7BpuQWL2k0
+QIa2ECEOMWmBnvz9wwYlZTfT2UoghKrnDmB8vz+IZ6zljOBh1g==
 -----END CERTIFICATE-----
 End
 
 TestOpenURISSL::SERVER_KEY = <<'End'
-Private-Key: (1024 bit)
+RSA Private-Key: (2048 bit, 2 primes)
 modulus:
-    00:bb:bd:74:69:53:58:50:24:79:f2:eb:db:8b:97:
-    e4:69:a4:dd:48:0c:40:35:62:42:b3:35:8c:96:2a:
-    62:76:98:b5:2a:e0:f8:78:33:b6:ff:f8:55:bf:44:
-    69:21:d7:b5:0e:bd:8a:dd:31:1b:88:d5:b4:5e:7a:
-    82:e0:ba:99:6c:04:76:e9:ff:e6:f8:f5:06:8e:7e:
-    a4:db:db:eb:43:44:12:a7:ca:ca:2b:aa:5f:83:10:
-    e2:9e:35:55:e8:e8:af:be:c8:7d:bb:c2:d4:aa:c1:
-    1c:57:0b:c0:0c:3a:1d:6e:23:a9:03:26:7c:ea:8c:
-    f0:86:61:ce:f1:ff:42:c7:23
+    00:cb:b3:71:95:12:70:fc:db:d4:a9:a7:66:d6:d3:
+    09:dd:06:80:19:e1:f2:d6:1e:31:b6:6b:20:75:51:
+    dc:a7:37:a9:ac:5b:57:5d:69:36:b6:de:1d:2c:f6:
+    44:64:f8:e8:d6:f0:da:38:6a:ba:c2:b1:9e:dc:bb:
+    79:94:e0:25:0c:ce:76:87:17:5d:79:9e:14:9e:bd:
+    4c:0d:aa:74:10:3a:96:ef:76:82:d5:72:16:b5:c1:
+    ac:17:2d:90:83:73:5c:d7:a6:f5:36:0f:4c:55:f3:
+    30:5d:19:dc:01:0e:f8:e6:fe:a5:ad:52:88:59:dc:
+    4a:07:ed:a2:eb:a1:01:63:c4:8a:92:ba:06:80:9b:
+    0d:85:f2:9f:f9:70:ac:d7:ad:f0:7a:3f:b8:92:2a:
+    33:ca:69:d0:01:65:5d:31:38:1d:f6:1f:b2:17:07:
+    7e:ac:88:67:a6:c4:5f:3e:93:94:61:e6:e4:49:9d:
+    ba:d4:d2:e8:e3:93:d1:66:79:c5:e3:1d:f8:5a:50:
+    54:58:3d:04:b0:fd:65:d1:b3:8a:b5:8a:30:5f:b2:
+    dc:34:1a:14:f7:74:4c:03:29:97:63:5a:d7:de:bb:
+    eb:7f:4a:2a:90:59:c0:2b:47:09:82:8f:75:de:14:
+    3f:bc:78:9a:69:25:80:5b:6c:a0:65:12:0d:29:61:
+    ac:f9
 publicExponent: 65537 (0x10001)
 privateExponent:
-    00:af:3a:ec:17:0a:f5:d9:07:d2:d3:4c:15:c5:3b:
-    66:b4:bc:6e:d5:ba:a9:8b:aa:45:3b:63:f5:ee:8b:
-    6d:0f:e9:04:e0:1a:cf:8f:d2:25:32:d1:a5:a7:3a:
-    c1:2e:17:5a:25:82:00:c4:e7:fb:1d:42:ea:71:6c:
-    c4:0f:e1:db:23:ff:1e:d6:c8:d6:60:ca:2d:06:fc:
-    54:3c:03:d4:09:96:bb:38:7a:22:a1:61:2c:f7:d0:
-    d0:90:6c:9f:61:ba:61:30:5a:aa:64:ad:43:3a:53:
-    38:e8:ba:cc:8c:51:3e:68:3e:3a:6a:0f:5d:5d:e0:
-    d6:df:f2:54:93:d3:14:22:a1
+    12:be:d5:b2:01:3b:72:99:8c:4d:7c:81:43:3d:b2:
+    87:ab:84:78:5d:49:aa:98:a6:bc:81:c9:3f:e2:a3:
+    aa:a3:bd:b2:85:c9:59:68:48:47:b5:d2:fb:83:42:
+    32:04:91:f0:cd:c3:57:33:c3:32:0d:84:70:0d:b4:
+    97:95:b4:f3:23:c0:d6:97:b8:db:6b:47:bc:7f:f1:
+    12:c4:df:df:6a:74:df:5e:89:95:b8:e5:0c:1e:e1:
+    86:54:84:1b:04:af:c3:8c:b2:be:21:d4:45:88:96:
+    a7:ca:ac:6b:50:84:69:45:7f:db:9e:5f:bb:dd:40:
+    d6:cf:f0:91:3c:84:d3:38:65:c9:15:f7:9e:37:aa:
+    1a:2e:bc:16:b6:95:be:bc:af:45:76:ba:ad:99:f6:
+    ef:6a:e8:fd:f0:31:89:19:c4:04:67:a1:ec:c4:79:
+    59:08:77:ab:0b:65:88:88:02:b1:38:5c:80:4e:27:
+    78:b2:a5:bd:b5:ad:d5:9c:4c:ea:ad:db:05:56:25:
+    70:28:da:22:fb:d8:de:8c:3b:78:fe:3e:cf:ed:1b:
+    f9:97:c6:b6:4a:bf:60:08:8f:dc:85:5e:b1:49:ab:
+    87:8b:68:72:f4:6a:3f:bc:db:a3:6c:f7:e8:b0:15:
+    bb:4b:ba:37:49:a2:d1:7c:f8:4f:1b:05:11:22:d9:
+    81
 prime1:
-    00:e8:ec:11:fe:e6:2b:23:21:29:d5:40:a6:11:ec:
-    4c:ae:4d:08:2a:71:18:ac:d1:3e:40:2f:12:41:59:
-    12:09:e2:f7:c2:d7:6b:0a:96:0a:06:e3:90:6a:4e:
-    b2:eb:25:b7:09:68:e9:13:ab:d0:5a:29:7a:e4:72:
-    1a:ee:46:a0:8b
+    00:fb:d2:cb:14:61:00:c1:7a:83:ba:fe:79:97:a2:
+    4d:5a:ea:40:78:96:6e:d2:be:71:5b:c6:2c:1f:c9:
+    18:48:6b:ae:20:86:87:b5:08:0b:17:69:ca:93:cd:
+    00:36:22:51:7b:d5:2d:8c:0c:0e:de:bc:86:a8:07:
+    0e:c5:57:e4:df:be:ed:7d:cc:b1:a4:d6:a8:2b:00:
+    65:2a:69:30:5e:dc:6d:6d:c4:c8:7e:20:34:eb:6f:
+    5e:cf:b3:b8:2e:8d:56:31:44:a8:17:ea:be:65:19:
+    ff:da:14:e0:0c:73:56:14:08:47:4c:5b:79:51:74:
+    5d:bc:e7:fe:01:2f:55:27:69
 prime2:
-    00:ce:57:5e:31:e9:c9:a8:5b:1f:55:af:67:e2:49:
-    2a:af:90:b6:02:c0:32:2f:ca:ae:1e:de:47:81:73:
-    a8:f8:37:53:70:93:24:62:77:d4:b8:80:30:9f:65:
-    26:20:46:ae:5a:65:6e:6d:af:68:4c:8d:e8:3c:f3:
-    d1:d1:d9:6e:c9
+    00:cf:14:54:47:bb:5f:5d:d6:2b:2d:ed:a6:8a:6f:
+    36:fc:47:5e:9f:84:ae:aa:1f:f8:44:50:91:15:f5:
+    ed:9d:29:d9:2b:2a:19:66:56:2e:96:15:b5:8e:a9:
+    7f:89:27:21:b5:57:55:7e:2a:c5:8c:93:fe:f6:0a:
+    a5:17:15:91:91:b3:7d:35:1a:d5:9a:2e:b8:0d:ad:
+    e6:97:6d:83:a3:27:29:ee:00:74:ef:57:34:f3:07:
+    ad:12:43:37:0c:5c:b7:26:34:bc:4e:3a:43:65:6b:
+    0c:b8:23:ac:77:fd:b2:23:eb:7b:65:70:f6:96:c4:
+    17:2c:aa:24:b8:a5:5e:b7:11
 exponent1:
-    03:f1:02:b8:f2:82:26:5d:08:4d:30:83:de:e7:c5:
-    c0:69:53:4b:0c:90:e3:53:c3:1e:e8:ed:01:28:15:
-    b3:0f:21:2c:2d:e3:04:d1:d7:27:98:b0:37:ec:4f:
-    00:c5:a9:9c:42:27:37:8a:ff:c2:96:d3:1a:8c:87:
-    c2:22:75:d3
+    00:92:32:ae:f4:05:dd:0a:76:b6:43:b9:b9:9d:ee:
+    fc:39:ec:05:c1:fc:94:1a:85:b6:0a:31:e3:2c:10:
+    f3:a8:17:db:df:c6:3a:c3:3f:08:31:6f:99:cc:75:
+    17:ca:55:e2:38:a2:6a:ef:03:91:1e:7f:15:2e:37:
+    ea:bb:67:6b:d8:fa:5f:a6:c9:4f:d9:03:46:5e:b0:
+    bc:0b:03:46:b1:cc:07:3b:d3:23:13:16:5f:a2:cf:
+    e5:9b:70:1b:5d:eb:70:3e:ea:3d:2c:a5:7c:23:f6:
+    14:33:e8:2a:ab:0f:ca:c9:96:84:ce:2f:cd:1f:1d:
+    0f:ce:bc:61:1b:0e:ff:c1:01
 exponent2:
-    6f:17:32:ab:84:c7:01:51:2d:e9:9f:ea:3a:36:52:
-    38:fb:9c:42:96:df:6e:43:9c:c3:19:c1:3d:bc:db:
-    77:e7:b1:90:a6:67:ac:6b:ff:a6:e5:bd:47:d3:d9:
-    56:ff:36:d7:8c:4c:8b:d9:28:3a:2f:1c:9d:d4:57:
-    5e:b7:c5:a1
+    00:9e:0b:f3:03:48:73:d1:e7:9a:cf:13:f9:ae:e0:
+    91:03:dc:e8:d0:30:f1:2a:30:fa:48:11:81:9a:54:
+    37:c5:62:e2:37:fa:8a:a6:3b:92:94:c3:fe:ec:e2:
+    5a:cf:70:09:5f:21:47:c3:e2:9b:21:de:f6:92:0c:
+    af:d1:bd:89:7b:bd:95:0b:49:ee:cb:1d:6b:26:2d:
+    9a:b7:ea:42:b4:ec:38:29:49:39:f6:4e:05:c0:93:
+    14:39:c3:09:29:ab:3d:b1:b0:40:24:28:7d:b5:d3:
+    0d:43:21:1f:09:f9:9b:d3:a4:6f:6a:8d:db:f6:57:
+    b5:24:46:bb:7e:1d:e0:fb:31
 coefficient:
-    45:50:47:66:56:e9:21:d9:40:0e:af:3f:f2:05:77:
-    ab:e7:08:40:97:88:2a:51:b3:7e:86:b0:b2:03:2e:
-    6d:36:3f:46:42:97:7d:5a:a2:93:6c:05:c2:8b:8b:
-    2d:af:d5:7d:75:e9:70:f0:2d:21:e3:b9:cf:4d:9a:
-    c4:97:e2:79
+    10:93:1d:c8:33:a5:c1:d3:84:6a:22:68:e5:60:cc:
+    9c:27:0a:52:0b:58:a3:0c:83:f4:f4:46:09:0c:a1:
+    41:a6:ea:bf:80:9d:0e:5d:d8:3d:25:00:c5:a1:35:
+    7a:8c:ea:95:16:94:c3:7c:8f:2b:e0:53:ea:66:ae:
+    19:be:55:04:3d:ee:e2:4b:a8:69:1b:7e:d8:09:7f:
+    ed:7c:ee:95:88:10:dc:4b:5b:bf:81:a4:e8:dc:7e:
+    4f:e5:c3:90:c4:e5:5a:90:10:32:d6:08:b5:1f:5d:
+    09:18:d8:44:28:e4:c4:c7:07:75:9b:9b:b3:80:86:
+    68:9d:fe:68:f3:4d:db:66
+writing RSA key
 -----BEGIN RSA PRIVATE KEY-----
-MIICXAIBAAKBgQC7vXRpU1hQJHny69uLl+RppN1IDEA1YkKzNYyWKmJ2mLUq4Ph4
-M7b/+FW/RGkh17UOvYrdMRuI1bReeoLguplsBHbp/+b49QaOfqTb2+tDRBKnysor
-ql+DEOKeNVXo6K++yH27wtSqwRxXC8AMOh1uI6kDJnzqjPCGYc7x/0LHIwIDAQAB
-AoGBAK867BcK9dkH0tNMFcU7ZrS8btW6qYuqRTtj9e6LbQ/pBOAaz4/SJTLRpac6
-wS4XWiWCAMTn+x1C6nFsxA/h2yP/HtbI1mDKLQb8VDwD1AmWuzh6IqFhLPfQ0JBs
-n2G6YTBaqmStQzpTOOi6zIxRPmg+OmoPXV3g1t/yVJPTFCKhAkEA6OwR/uYrIyEp
-1UCmEexMrk0IKnEYrNE+QC8SQVkSCeL3wtdrCpYKBuOQak6y6yW3CWjpE6vQWil6
-5HIa7kagiwJBAM5XXjHpyahbH1WvZ+JJKq+QtgLAMi/Krh7eR4FzqPg3U3CTJGJ3
-1LiAMJ9lJiBGrlplbm2vaEyN6Dzz0dHZbskCQAPxArjygiZdCE0wg97nxcBpU0sM
-kONTwx7o7QEoFbMPISwt4wTR1yeYsDfsTwDFqZxCJzeK/8KW0xqMh8IiddMCQG8X
-MquExwFRLemf6jo2Ujj7nEKW325DnMMZwT2823fnsZCmZ6xr/6blvUfT2Vb/NteM
-TIvZKDovHJ3UV163xaECQEVQR2ZW6SHZQA6vP/IFd6vnCECXiCpRs36GsLIDLm02
-P0ZCl31aopNsBcKLiy2v1X116XDwLSHjuc9NmsSX4nk=
+MIIEpAIBAAKCAQEAy7NxlRJw/NvUqadm1tMJ3QaAGeHy1h4xtmsgdVHcpzeprFtX
+XWk2tt4dLPZEZPjo1vDaOGq6wrGe3Lt5lOAlDM52hxddeZ4Unr1MDap0EDqW73aC
+1XIWtcGsFy2Qg3Nc16b1Ng9MVfMwXRncAQ745v6lrVKIWdxKB+2i66EBY8SKkroG
+gJsNhfKf+XCs163wej+4kiozymnQAWVdMTgd9h+yFwd+rIhnpsRfPpOUYebkSZ26
+1NLo45PRZnnF4x34WlBUWD0EsP1l0bOKtYowX7LcNBoU93RMAymXY1rX3rvrf0oq
+kFnAK0cJgo913hQ/vHiaaSWAW2ygZRINKWGs+QIDAQABAoIBABK+1bIBO3KZjE18
+gUM9soerhHhdSaqYpryByT/io6qjvbKFyVloSEe10vuDQjIEkfDNw1czwzINhHAN
+tJeVtPMjwNaXuNtrR7x/8RLE399qdN9eiZW45Qwe4YZUhBsEr8OMsr4h1EWIlqfK
+rGtQhGlFf9ueX7vdQNbP8JE8hNM4ZckV9543qhouvBa2lb68r0V2uq2Z9u9q6P3w
+MYkZxARnoezEeVkId6sLZYiIArE4XIBOJ3iypb21rdWcTOqt2wVWJXAo2iL72N6M
+O3j+Ps/tG/mXxrZKv2AIj9yFXrFJq4eLaHL0aj+826Ns9+iwFbtLujdJotF8+E8b
+BREi2YECgYEA+9LLFGEAwXqDuv55l6JNWupAeJZu0r5xW8YsH8kYSGuuIIaHtQgL
+F2nKk80ANiJRe9UtjAwO3ryGqAcOxVfk377tfcyxpNaoKwBlKmkwXtxtbcTIfiA0
+629ez7O4Lo1WMUSoF+q+ZRn/2hTgDHNWFAhHTFt5UXRdvOf+AS9VJ2kCgYEAzxRU
+R7tfXdYrLe2mim82/Eden4Suqh/4RFCRFfXtnSnZKyoZZlYulhW1jql/iSchtVdV
+firFjJP+9gqlFxWRkbN9NRrVmi64Da3ml22Doycp7gB071c08wetEkM3DFy3JjS8
+TjpDZWsMuCOsd/2yI+t7ZXD2lsQXLKokuKVetxECgYEAkjKu9AXdCna2Q7m5ne78
+OewFwfyUGoW2CjHjLBDzqBfb38Y6wz8IMW+ZzHUXylXiOKJq7wORHn8VLjfqu2dr
+2PpfpslP2QNGXrC8CwNGscwHO9MjExZfos/lm3AbXetwPuo9LKV8I/YUM+gqqw/K
+yZaEzi/NHx0PzrxhGw7/wQECgYEAngvzA0hz0eeazxP5ruCRA9zo0DDxKjD6SBGB
+mlQ3xWLiN/qKpjuSlMP+7OJaz3AJXyFHw+KbId72kgyv0b2Je72VC0nuyx1rJi2a
+t+pCtOw4KUk59k4FwJMUOcMJKas9sbBAJCh9tdMNQyEfCfmb06Rvao3b9le1JEa7
+fh3g+zECgYAQkx3IM6XB04RqImjlYMycJwpSC1ijDIP09EYJDKFBpuq/gJ0OXdg9
+JQDFoTV6jOqVFpTDfI8r4FPqZq4ZvlUEPe7iS6hpG37YCX/tfO6ViBDcS1u/gaTo
+3H5P5cOQxOVakBAy1gi1H10JGNhEKOTExwd1m5uzgIZonf5o803bZg==
 -----END RSA PRIVATE KEY-----
 End
 
diff --git a/test/mri/openssl/fixtures/pkey/dh-1.pem b/test/mri/openssl/fixtures/pkey/dh-1.pem
new file mode 100644
index 00000000000..3340a6a1887
--- /dev/null
+++ b/test/mri/openssl/fixtures/pkey/dh-1.pem
@@ -0,0 +1,13 @@
+-----BEGIN DH PARAMETERS-----
+MIICCAKCAgEAvRzXYxY6L2DjeYmm1eowtMDu1it3j+VwFr6s6PRWzc1apMtztr9G
+xZ2mYndUAJLgNLO3n2fUDCYVMB6ZkcekW8Siocof3xWiMA6wqZ6uw0dsE3q7ZX+6
+TLjgSjaXeGvjutvuEwVrFeaUi83bMgfXN8ToxIQVprIF35sYFt6fpbFATKfW7qqi
+P1pQkjmCskU4tztaWvlLh0qg85wuQGnpJaQT3gS30378i0IGbA0EBvJcSpTHYbLa
+nsdI9bfN/ZVgeolVMNMU9/n8R8vRhNPcHuciFwaqS656q+HavCIyxw/LfjSwwFvR
+TngCn0wytRErkzFIXnRKckh8/BpI4S+0+l1NkOwG4WJ55KJ/9OOdZW5o/QCp2bDi
+E0JN1EP/gkSom/prq8JR/yEqtsy99uc5nUxPmzv0IgdcFHZEfiQU7iRggEbx7qfQ
+Ve55XksmmJInmpCy1bSabAEgIKp8Ckt5KLYZ0RgTXUhcEpsxEo6cuAwoSJT5o4Rp
+yG3xow2ozPcqZkvb+d2CHj1sc54w9BVFAjVANEKmRil/9WKz14bu3wxEhOPqC54n
+QojjLcoXSoT66ZUOQnYxTSiLtzoKGPy8cAVPbkBrXz2u2sj5gcvr1JjoGjdHm9/3
+qnqC8fsTz8UndKNIQC337o4K0833bQMzRGl1/qjbAPit2B7E3b6xTZMCAQI=
+-----END DH PARAMETERS-----
diff --git a/test/mri/openssl/fixtures/pkey/rsa-1.pem b/test/mri/openssl/fixtures/pkey/rsa-1.pem
new file mode 100644
index 00000000000..bd5a624f6b2
--- /dev/null
+++ b/test/mri/openssl/fixtures/pkey/rsa-1.pem
@@ -0,0 +1,51 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIJJwIBAAKCAgEArIEJUYZrXhMfUXXdl2gLcXrRB4ciWNEeXt5UVLG0nPhygZwJ
+xis8tOrjXOJEpUXUsfgF35pQiJLD4T9/Vp3zLFtMOOQjOR3AxjIelbH9KPyGFEr9
+TcPtsJ24zhcG7RbwOGXR4iIcDaTx+bCLSAd7BjG3XHQtyeepGGRZkGyGUvXjPorH
+XP+dQjQnMd09wv0GMZSqQ06PedUUKQ4PJRfMCP+mwjFP+rB3NZuThF0CsNmpoixg
+GdoQ591Yrf5rf2Bs848JrYdqJlKlBL6rTFf2glHiC+mE5YRny7RZtv/qIkyUNotV
+ce1cE0GFrRmCpw9bqulDDcgKjFkhihTg4Voq0UYdJ6Alg7Ur4JerKTfyCaRGF27V
+fh/g2A2/6Vu8xKYYwTAwLn+Tvkx9OTVZ1t15wM7Ma8hHowNoO0g/lWkeltgHLMji
+rmeuIYQ20BQmdx2RRgWKl57D0wO/N0HIR+Bm4vcBoNPgMlk9g5WHA6idHR8TLxOr
+dMMmTiWfefB0/FzGXBv7DuuzHN3+urdCvG1QIMFQ06kHXhr4rC28KbWIxg+PJGM8
+oGNEGtGWAOvi4Ov+BVsIdbD5Sfyb4nY3L9qqPl6TxRxMWTKsYCYx11jC8civCzOu
+yL1z+wgIICJ6iGzrfYf6C2BiNV3BC1YCtp2XsG+AooIxCwjL2CP/54MuRnUCAwEA
+AQKCAgAP4+8M0HoRd2d6JIZeDRqIwIyCygLy9Yh7qrVP+/KsRwKdR9dqps73x29c
+Pgeexdj67+Lynw9uFT7v/95mBzTAUESsNO+9sizw1OsWVQgB/4kGU4YT5Ml/bHf6
+nApqSqOkPlTgJM46v4f+vTGHWBEQGAJRBO62250q/wt1D1osSDQ/rZ8BxRYiZBV8
+NWocDRzF8nDgtFrpGSS7R21DuHZ2Gb6twscgS6MfkA49sieuTM6gfr/3gavu/+fM
+V1Rlrmc65GE61++CSjijQEEdTjkJ9isBd+hjEBhTnnBpOBfEQxOgFqOvU/MYXv/G
+W0Q6yWJjUwt3OIcoOImrY5L3j0vERneA1Alweqsbws3fXXMjA+jhLxlJqjPvSAKc
+POi7xu7QCJjSSLAzHSDPdmGmfzlrbdWS1h0mrC5YZYOyToLajfnmAlXNNrytnePg
+JV9/1136ZFrJyEi1JVN3kyrC+1iVd1E+lWK0U1UQ6/25tJvKFc1I+xToaUbK10UN
+ycXib7p2Zsc/+ZMlPRgCxWmpIHmKhnwbO7vtRunnnc6wzhvlQQNHWlIvkyQukV50
+6k/bzWw0M6A98B4oCICIcxcpS3njDlHyL7NlkCD+/OfZp6X3RZF/m4grmA2doebz
+glsaNMyGHFrpHkHq19Y63Y4jtBdW/XuBv06Cnr4r3BXdjEzzwQKCAQEA5bj737Nk
+ZLA0UgzVVvY67MTserTOECIt4i37nULjRQwsSFiz0AWFOBwUCBJ5N2qDEelbf0Fa
+t4VzrphryEgzLz/95ZXi+oxw1liqCHi8iHeU2wSclDtx2jKv2q7bFvFSaH4CKC4N
+zBJNfP92kdXuAjXkbK/jWwr64fLNh/2KFWUAmrYmtGfnOjjyL+yZhPxBatztE58q
+/T61pkvP9NiLfrr7Xq8fnzrwqGERhXKueyoK6ig9ZJPZ2VTykMUUvNYJJ7OYQZru
+EYA3zkuEZifqmjgF57Bgg7dkkIh285TzH3CNf3MCMTmjlWVyHjlyeSPYgISB9Mys
+VKKQth+SvYcChQKCAQEAwDyCcolA7+bQBfECs6GXi7RYy2YSlx562S5vhjSlY9Ko
+WiwVJWviF7uSBdZRnGUKoPv4K4LV34o2lJpSSTi5Xgp7FH986VdGePe3p4hcXSIZ
+NtsKImLVLnEjrmkZExfQl7p0MkcU/LheCf/eEZVp0Z84O54WCs6GRm9wHYIUyrag
+9FREqqxTRVNhQQ2EDVGq1slREdwB+aygE76axK/qosk0RaoLzGZiMn4Sb8bpJxXO
+mee+ftq5bayVltfR0DhC8eHkcPPFeQMll1g+ML7HbINwHTr01ONm3cFUO4zOLBOO
+ws/+vtNfiv6S/lO1RQSRoiApbENBLdSc3V8Cy70PMQKCAQBOcZN4uP5gL5c+KWm0
+T1KhxUDnSdRPyAwY/xC7i7qlullovvlv4GK0XUot03kXBkUJmcEHvF5o6qYtCZlM
+g/MOgHCHtF4Upl5lo1M0n13pz8PB4lpBd+cR1lscdrcTp4Y3bkf4RnmppNpXA7kO
+ZZnnoVWGE620ShSPkWTDuj0rvxisu+SNmClqRUXWPZnSwnzoK9a86443efF3fs3d
+UxCXTuxFUdGfgvXo2XStOBMCtcGSYflM3fv27b4C13mUXhY0O2yTgn8m9LyZsknc
+xGalENpbWmwqrjYl8KOF2+gFZV68FZ67Bm6otkJ4ta80VJw6joT9/eIe6IA34KIw
+G+ktAoIBAFRuPxzvC4ZSaasyX21l25mQbC9pdWDKEkqxCmp3VOyy6R4xnlgBOhwS
+VeAacV2vQyvRfv4dSLIVkkNSRDHEqCWVlNk75TDXFCytIAyE54xAHbLqIVlY7yim
+qHVB07F/FC6PxdkPPziAAU2DA5XVedSHibslg6jbbD4jU6qiJ1+hNrAZEs+jQC+C
+n4Ri20y+Qbp0URb2+icemnARlwgr+3HjzQGL3gK4NQjYNmDBjEWOXl9aWWB90FNL
+KahGwfAhxcVW4W56opCzwR7nsujV4eDXGba83itidRuQfd5pyWOyc1E86TYGwD/b
+79OkEElv6Ea8uXTDVS075GmWATRapQECggEAd9ZAbyT+KouTfi2e6yLOosxSZfns
+eF06QAJi5n9GOtdfK5fqdmHJqJI7wbubCnd0oxPeL71lRjrOAMXufaQRdZtfXSMn
+B1TljteNrh1en5xF451rCPR/Y6tNKBvIKnhy1waO27/vA+ovXrm17iR9rRuGZ29i
+IurlKA6z/96UdrSdpqITTCyTjSOBYg34f49ueGjlpL4+8HJq2wor4Cb1Sbv8ErqA
+bsQ/Jz+KIGUiuFCfNa6d6McPRXIrGgzpprXgfimkV3nj49QyrnuCF/Pc4psGgIaN
+l3EiGXzRt/55K7DQVadtbcjo9zREac8QnDD6dS/gOfJ82L7frQfMpNWgQA==
+-----END RSA PRIVATE KEY-----
diff --git a/test/mri/openssl/fixtures/pkey/rsa-2.pem b/test/mri/openssl/fixtures/pkey/rsa-2.pem
new file mode 100644
index 00000000000..e4fd4f4370d
--- /dev/null
+++ b/test/mri/openssl/fixtures/pkey/rsa-2.pem
@@ -0,0 +1,51 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIJKAIBAAKCAgEA1HUbx825tG7+/ulC5DpDogzXqM2/KmeCwGXZY4XjiWa+Zj7b
+ECkZwQh7zxFUsPixGqQKJSyFwCogdaPzYTRNtqKKaw/IWS0um1PTn4C4/9atbIsf
+HVKu/fWg4VrZL+ixFIZxa8Z6pvTB2omMcx+uEzbXPsO01i1pHf7MaWBxUDGFyC9P
+lASJBfFZAf2Ar1H99OTS4SP+gxM9Kk5tcc22r8uFiqqbhJmQNSDApdHvT1zSZxAc
+T1BFEZqfmR0B0UegPyJc/9hW0dYpB9JjR29UaZRSta3LUMpqltoOF5bzaKVgMuBm
+Qy79xJ71LjGp8bKhgRaWXyPsDzAC0MQlOW6En0v8LK8fntivJEvw9PNOMcZ8oMTn
+no0NeVt32HiQJW8LIVo7dOLVFtguSBMWUVe8mdKbuIIULD6JlSYke9Ob6andUhzO
+U79m/aRWs2yjD6o5QAktjFBARdPgcpTdWfppc8xpJUkQgRmVhINoIMT9W6Wl898E
+P4aPx6mRV/k05ellN3zRgd9tx5dyNuj3RBaNmR47cAVvGYRQgtH9bQYs6jtf0oer
+A5yIYEKspNRlZZJKKrQdLflQFOEwjQJyZnTk7Mp0y21wOuEGgZBexew55/hUJDC2
+mQ8CqjV4ki/Mm3z6Cw3jXIMNBJkH7oveBGSX0S9bF8A/73oOCU3W/LkORxECAwEA
+AQKCAgBLK7RMmYmfQbaPUtEMF2FesNSNMV72DfHBSUgFYpYDQ4sSeiLgMOqf1fSY
+azVf+F4RYwED7iDUwRMDDKNMPUlR2WjIQKlOhCH9a0dxJAZQ3xA1W3QC2AJ6cLIf
+ihlWTip5bKgszekPsYH1ZL2A7jCVM84ssuoE7cRHjKOelTUCfsMq9TJe2MvyglZP
+0fX6EjSctWm3pxiiH+iAU4d9wJ9my8fQLFUiMYNIiPIguYrGtbzsIlMh7PDDLcZS
+UmUWOxWDwRDOpSjyzadu0Q23dLiVMpmhFoDdcQENptFdn1c4K2tCFQuZscKwEt4F
+HiVXEzD5j5hcyUT4irA0VXImQ+hAH3oSDmn7wyHvyOg0bDZpUZXEHXb83Vvo54/d
+Fb4AOUva1dwhjci8CTEMxCENMy/CLilRv46AeHbOX8KMPM7BnRSJPptvTTh/qB9C
+HI5hxfkO+EOYnu0kUlxhJfrqG86H4IS+zA8HWiSEGxQteMjUQfgJoBzJ94YChpzo
+ePpKSpjxxl1PNNWKxWM3yUvlKmI2lNl6YNC8JpF2wVg4VvYkG7iVjleeRg21ay89
+NCVMF98n3MI5jdzfDKACnuYxg7sw+gjMy8PSoFvQ5pvHuBBOpa8tho6vk7bLJixT
+QY5uXMNQaO6OwpkBssKpnuXhIJzDhO48nSjJ5nUEuadPH1nGwQKCAQEA7twrUIMi
+Vqze/X6VyfEBnX+n3ZyQHLGqUv/ww1ZOOHmSW5ceC4GxHa8EPDjoh9NEjYffwGq9
+bfQh9Gntjk5gFipT/SfPrIhbPt59HthUqVvOGgSErCmn0vhsa0+ROpVi4K2WHS7O
+7SEwnoCWd6p1omon2olVY0ODlMH4neCx/ZuKV8SRMREubABlL8/MLp37AkgKarTY
+tewd0lpaZMvsjOhr1zVCGUUBxy87Fc7OKAcoQY8//0r8VMH7Jlga7F2PKVPzqRKf
+tjeW5jMAuRxTqtEdIeclJZwvUMxvb23BbBE+mtvKpXv69TB3DK8T1YIkhW2CidZW
+lad4MESC+QFNbQKCAQEA47PtULM/0ZFdE+PDDHOa2kJ2arm94sVIqF2168ZLXR69
+NkvCWfjkUPDeejINCx7XQgk0d/+5BCvrJpcM7lE4XfnYVNtPpct1el6eTfaOcPU8
+wAMsnq5n9Mxt02U+XRPtEqGk+lt0KLPDDSG88Z7jPmfftigLyPH6i/ZJyRUETlGk
+rGnWSx/LFUxQU5aBa2jUCjKOKa+OOk2jGg50A5Cmk26v9sA/ksOHisMjfdIpZc9P
+r4R0IteDDD5awlkWTF++5u1GpgU2yav4uan0wzY8OWYFzVyceA6+wffEcoplLm82
+CPd/qJOB5HHkjoM+CJgfumFxlNtdowKvKNUxpoQNtQKCAQEAh3ugofFPp+Q0M4r6
+gWnPZbuDxsLIR05K8vszYEjy4zup1YO4ygQNJ24fM91/n5Mo/jJEqwqgWd6w58ax
+tRclj00BCMXtGMrbHqTqSXWhR9LH66AGdPTHuXWpYZDnKliTlic/z1u+iWhbAHyl
+XEj2omIeKunc4gnod5cyYrKRouz3omLfi/pX33C19FGkWgjH2HpuViowBbhhDfCr
+9yJoEWC/0njl/hlTMdzLYcpEyxWMMuuC/FZXG+hPgWdWFh3XVzTEL3Fd3+hWEkp5
+rYWwu2ITaSiHvHaDrAvZZVXW8WoynXnvzr+tECgmTq57zI4eEwSTl4VY5VfxZ0dl
+FsIzXQKCAQBC07GYd6MJPGJWzgeWhe8yk0Lxu6WRAll6oFYd5kqD/9uELePSSAup
+/actsbbGRrziMpVlinWgVctjvf0bjFbArezhqqPLgtTtnwtS0kOnvzGfIM9dms4D
+uGObISGWa5yuVSZ4G5MRxwA9wGMVfo4u6Iltin868FmZ7iRlkXd8DNYJi95KmgAe
+NhF1FrzQ6ykf/QpgDZfuYI63vPorea6JonieMHn39s622OJ3sNBZguheGL+E4j8h
+vsMgOskijQ8X8xdC7lDQC1qqEsk06ZvvNJQLW1zIl3tArhjHjPp5EEaJhym+Ldx3
+UT3E3Zu9JfhZ2PNevqrShp0lnLw/pI3pAoIBAAUMz5Lj6V9ftsl1pTa8WDFeBJW0
+Wa5AT1BZg/ip2uq2NLPnA5JWcD+v682fRSvIj1pU0DRi6VsXlzhs+1q3+sgqiXGz
+u2ArFylh8TvC1gXUctXKZz/M3Rqr6aSNoejUGLmvHre+ja/k6Zwmu6ePtB7dL50d
+6+xMTYquS4gLbrbSLcEu3iBAAnvRLreXK4KguPxaBdICB7v7epdpAKe3Z7hp/sst
+eJj1+6KRdlcmt8fh5MPkBBXa6I/9XGmX5UEo7q4wAxeM9nuFWY3watz/EO9LiO6P
+LmqUSWL65m4cX0VZPvhYEsHppKi1eoWGlHqS4Af5+aIXi2alu2iljQFeA+Q=
+-----END RSA PRIVATE KEY-----
diff --git a/test/mri/openssl/fixtures/pkey/rsa-3.pem b/test/mri/openssl/fixtures/pkey/rsa-3.pem
new file mode 100644
index 00000000000..6c9c9cedd2c
--- /dev/null
+++ b/test/mri/openssl/fixtures/pkey/rsa-3.pem
@@ -0,0 +1,51 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIJKAIBAAKCAgEAzn+YCcOh7BIRzrb7TEuhQLD545+/Fx/zCYO3l+y/8ogUxMTg
+LG5HrcXlX3JP796ie90/GHIf8/lwczVhP1jk/keYjkwoTYDt477R7KRcJPyGqHRr
+qLp7AnZxtz3JLNboTgO3bAYzlvtsSKU/R3oehBbGHzEWCP2UEYj/Kky0zpcjkhZU
+jiErr9ARPq8+dOGqBf+CE2NLKYC1bu8hZe9AddvvN2SvfMN6uhJtEGZO1k8tScwf
+AyvPJ1Po/6z08pzMAgfBUCE95waAVeYJWIOlnNB4eEievzlXdPB9vEt8OOwtWfQX
+V8xyMsoKeAW05s413E0eTYx1aulFXdWwG2mWEBRtNzKF1iBudlg1a3x1zThWi1pY
+jW5vROvoWZMCbl9bYQ/LxOCVqDoUl86+NPEGeuESMzm5NvOQA2e0Ty5wphnt9M19
+Wcc8neBhb6iCGqYzxWNvUYXZWUv1+/MrPHKyJuv7MSivwtctfp8SacUGxkd6T+u6
+V6ntHf3qtN/5pAmni6nzUTgjC65MS0LEhi/RTzwafkIfifeJH7/LqFtjrursuwua
++p9lkACck/J5TpzaAfLroFQuepP8qgeq1cpD5Iii56IJ+FPSnkvesHuRUmZIkhtR
+VVsVqMaNPv/Uzc02bOaRXWP4auUY91mDKx/FDmORa9YCDQxMkKke05SWQ90CAwEA
+AQKCAgA0+B/c6VTgxGXS+7cMhB3yBTOkgva2jNh/6Uyv6Of345ZIPyQt4X/7gFbt
+G9qLcjWFxmQH9kZiA+snclrmr/vVijIE1l5EOz1KfUlGBYcpaal1DqALIQKqyA01
+buDq4pmmYWesiw6yvP2yyMipohav1VOu7p1zYvCXaufhRtneYICcWaQI7VNSfvHd
+fYBs5PIDJd6M8Jx4Ie7obOjJSAzl7qu3LtmhDFev4Ugeu8+fQ6IfWv/dhWBW+zw6
+UXhnv3bJUonw7wX8+/rxjdd54BMcXZF5cU9fR+s6MPJf2ZEc3OBpQaa3O9dTVeZH
+kVctGVpRj2qlg9EewoWro0PQVE5Mjah+mdFhPAHWoGl1xht6xJmg0uHYxMCzbUSz
+7NSS3knR0qieFvsp5ESY72i7DnQsbhbn6mTuYdVtm9bphxifAWCP3jFdft/bjtSF
+4yuPI7Qga+3m0B8QhtbWhEzPVon6NyiY7qfa6qllp0opEbw2hE22uGFFNJo2mpPa
+pe9VwARtD0IyfeklE7KrBEwV8NjTaAipZTZODw0w/dt4K3dOiePDl3pPWjmERpVg
+Lkw7XSCMtu5X87I1BbfOYbQhOXksPY+W9Asf6ETBeIZ8bD6Iypuk2ssool1lukqv
+yq1Y8gbR9B2x91ftYwXgzqBSvd8PFNsaXWLD3nrai2G1vb81lQKCAQEA6W02eZcN
+7wJfkqNokcuqhc5OKXH14gVIRV+KocG6f3vg88wrCg5J2GqNhBFuwVrafJjRenm6
+C8zWdneeyrl6cztgbaySw7kXnqFdTBiuOT8bhiG5NTPjDQ109EucaTbZU9KUXk6k
+ChPlr4G6IPrONpvi/9BvDDZLZkwR6uIg1kFWBy9kZaxFUEIug02hrbkTpPtnEUrO
+r3nG0QL/D0vf+bm4YHIVRMH2O2ZTTWexMw9XlfCe1+WjbJ+PS35QRCRDcRdWHXDb
+HnIFIAajtH5LtaJLgWUYq3B25WkQYtbHmFkm94sp/G4trb8JIJGzVO8cj9t6KeAT
+LG+tk8OqplqsYwKCAQEA4ne81KXx8VNwsKVFqwmiDIoi1q3beNa2hoXdzAMrnYdj
+iLxbfCVgrKPav9hdfXPBncHaNlGsd2G5W1a1UsOr128lTdfBsgm1RVPhVMKvo3fl
+yUnWajtAR1q3tVEUhuFlbJ/RHEtxJaGrzudYCPWQiYhydpDgSckbxD8PuElEgFBX
+O91vnWZEjMsxrABWiZNBxmtBUEv+fjUU/9USYzO4sN79UeD1+ZuBxPFwscsRcjLr
+bPgZWOwiywH6UmQ+DJTzeu0wJ6jgPoy/pgEujsbPDz1wNos6NhA/RQv31QeX33/B
+7/F5XKNmbJ2AFb/B+xTaTQPg0pjT5Exm+HrNU5OivwKCAQEAsLLVi9FG4OiBBHXi
+UItFuChljoYPxVqOTMV4Id6OmLZjoOmqouASElsGaTTxDDkEL1FXMUk4Bnq21dLT
+R06EXPpTknISX0qbkJ9CCrqcGAWnhi+9DYMLmvPW1p7t9c9pUESVv5X0IxTQx7yB
+8zkoJLp4aYGUrj/jb7qhzZYDmWy3/JRpgXWYupp+rzJy8xiowDj22mYwczDRyaJl
+BWVAVL+7zHZPl07kYC6jXHLj9mzktkIBXBkfTriyNkmV5R82VkN+Eqc9l5xkOMwN
+3DHGieYjFf47YHuv5RVVLBy91puWHckgrU+SEHYOKLNidybSDivsHArdOMQJN1Pk
+uCznVQKCAQAYY7DQbfa6eLQAMixomSb8lrvdxueGAgmyPyR93jGKS5Rqm2521ket
+EBB07MZUxmyposDvbKhYSwv9TD9G5I/TKcMouP3BQM5m4vu3dygXQMhcfzk6Q5tO
+k/SI8Gx3gjq8EhIhK/bJiLnKFJwkit3AEhPRtRSSnbgB0JDO1gUslHpwlg55MxRa
+3V9CGN84/cTtq4tjLGwCB5F1Y+sRB/byBXHeqY2UDi1Rmnb6jtYYKGe2WpnQO84b
+cuEUknskO75lFLpE6ykLU3koVaQ/+CVAjOtS1He2btWBiCJurNysU0P9pVHeqjJT
+rDqpHPe1JK/F74783zyir5+/Tuph/9pdAoIBAANPdFRQkJVH8K6iuhxQk6vFqiYB
+MUxpIVeLonD0p9TgMdezVNESht/AIutc0+5wabM45XuDWFRTuonvcE8lckv2Ux3a
+AvSsamjuesxw2YmkEtzZouVqDU0+oxppQJiwBG3MiaHX9F5IfnK6YmQ6xPwZ6MXi
+9feq1jR4KOc1ZrHtRMNgjnBWEFWroGe3FHgV7O133hpMSshRFmwcbE0nAaDr82U9
+sl8dclDjEKBxaqjAeNajOr+BU0w0AAwWXL7dt/ctG2QClcj9wqbEfsXnOR10h4AI
+rqkcvQrOLbTwcrOD/6R1rQfQXtEHKf1maThxosootAQZXdf6jxU3oonx3tU=
+-----END RSA PRIVATE KEY-----
diff --git a/test/mri/openssl/test_bn.rb b/test/mri/openssl/test_bn.rb
index 274afba3bb0..0b5cd842418 100644
--- a/test/mri/openssl/test_bn.rb
+++ b/test/mri/openssl/test_bn.rb
@@ -272,6 +272,11 @@ def test_comparison
     assert_equal(0, @e1.ucmp(-999))
     assert_instance_of(String, @e1.hash.to_s)
   end
+
+  def test_type_error
+    bug15760 = '[ruby-core:92231] [Bug #15760]'
+    assert_raise(TypeError, bug15760) { OpenSSL::BN.new(nil, 2) }
+  end
 end
 
 end
diff --git a/test/mri/openssl/test_pair.rb b/test/mri/openssl/test_pair.rb
index 29d5c9bbb1a..08c15a0f750 100644
--- a/test/mri/openssl/test_pair.rb
+++ b/test/mri/openssl/test_pair.rb
@@ -10,7 +10,7 @@ def setup
     ee_exts = [
       ["keyUsage", "keyEncipherment,digitalSignature", true],
     ]
-    @svr_key = OpenSSL::TestUtils::Fixtures.pkey("rsa1024")
+    @svr_key = OpenSSL::TestUtils::Fixtures.pkey("rsa-1")
     @svr_cert = issue_cert(svr_dn, @svr_key, 1, ee_exts, nil, nil)
   end
 
@@ -23,7 +23,7 @@ def ssl_pair
       sctx = OpenSSL::SSL::SSLContext.new
       sctx.cert = @svr_cert
       sctx.key = @svr_key
-      sctx.tmp_dh_callback = proc { OpenSSL::TestUtils::Fixtures.pkey_dh("dh1024") }
+      sctx.tmp_dh_callback = proc { OpenSSL::TestUtils::Fixtures.pkey("dh-1") }
       sctx.options |= OpenSSL::SSL::OP_NO_COMPRESSION
       ssls = OpenSSL::SSL::SSLServer.new(tcps, sctx)
       ns = ssls.accept
@@ -397,7 +397,7 @@ def test_connect_accept_nonblock_no_exception
     ctx2 = OpenSSL::SSL::SSLContext.new
     ctx2.cert = @svr_cert
     ctx2.key = @svr_key
-    ctx2.tmp_dh_callback = proc { OpenSSL::TestUtils::Fixtures.pkey_dh("dh1024") }
+    ctx2.tmp_dh_callback = proc { OpenSSL::TestUtils::Fixtures.pkey("dh-1") }
 
     sock1, sock2 = tcp_pair
 
@@ -442,54 +442,47 @@ def test_connect_accept_nonblock_no_exception
   end
 
   def test_connect_accept_nonblock
-    ctx = OpenSSL::SSL::SSLContext.new()
+    ctx = OpenSSL::SSL::SSLContext.new
     ctx.cert = @svr_cert
     ctx.key = @svr_key
-    ctx.tmp_dh_callback = proc { OpenSSL::TestUtils::Fixtures.pkey_dh("dh1024") }
+    ctx.tmp_dh_callback = proc { OpenSSL::TestUtils::Fixtures.pkey("dh-1") }
 
     sock1, sock2 = tcp_pair
 
     th = Thread.new {
       s2 = OpenSSL::SSL::SSLSocket.new(sock2, ctx)
-      s2.sync_close = true
-      begin
+      5.times {
+        begin
+          break s2.accept_nonblock
+        rescue IO::WaitReadable
+          IO.select([s2], nil, nil, 1)
+        rescue IO::WaitWritable
+          IO.select(nil, [s2], nil, 1)
+        end
         sleep 0.2
-        s2.accept_nonblock
+      }
+    }
+
+    s1 = OpenSSL::SSL::SSLSocket.new(sock1)
+    5.times {
+      begin
+        break s1.connect_nonblock
       rescue IO::WaitReadable
-        IO.select([s2])
-        retry
+        IO.select([s1], nil, nil, 1)
       rescue IO::WaitWritable
-        IO.select(nil, [s2])
-        retry
+        IO.select(nil, [s1], nil, 1)
       end
-      s2
-    }
-
-    sleep 0.1
-    ctx = OpenSSL::SSL::SSLContext.new()
-    s1 = OpenSSL::SSL::SSLSocket.new(sock1, ctx)
-    begin
       sleep 0.2
-      s1.connect_nonblock
-    rescue IO::WaitReadable
-      IO.select([s1])
-      retry
-    rescue IO::WaitWritable
-      IO.select(nil, [s1])
-      retry
-    end
-    s1.sync_close = true
+    }
 
     s2 = th.value
 
     s1.print "a\ndef"
     assert_equal("a\n", s2.gets)
   ensure
-    th.join if th
-    s1.close if s1 && !s1.closed?
-    s2.close if s2 && !s2.closed?
-    sock1.close if sock1 && !sock1.closed?
-    sock2.close if sock2 && !sock2.closed?
+    sock1&.close
+    sock2&.close
+    th&.join
   end
 end
 
diff --git a/test/mri/openssl/test_pkcs7.rb b/test/mri/openssl/test_pkcs7.rb
index 149d3b9b5df..6437112b74a 100644
--- a/test/mri/openssl/test_pkcs7.rb
+++ b/test/mri/openssl/test_pkcs7.rb
@@ -133,6 +133,8 @@ def test_enveloped
     assert_equal(@ca_cert.subject.to_s, recip[1].issuer.to_s)
     assert_equal(3, recip[1].serial)
     assert_equal(data, p7.decrypt(@rsa1024, @ee2_cert))
+
+    assert_equal(data, p7.decrypt(@rsa1024))
   end
 
   def test_graceful_parsing_failure #[ruby-core:43250]
diff --git a/test/mri/openssl/test_pkey_dh.rb b/test/mri/openssl/test_pkey_dh.rb
index 77cdb0ab84f..8c8fbaeefbe 100644
--- a/test/mri/openssl/test_pkey_dh.rb
+++ b/test/mri/openssl/test_pkey_dh.rb
@@ -19,7 +19,7 @@ def test_new_break
   end
 
   def test_DHparams
-    dh1024 = Fixtures.pkey_dh("dh1024")
+    dh1024 = Fixtures.pkey("dh1024")
     asn1 = OpenSSL::ASN1::Sequence([
       OpenSSL::ASN1::Integer(dh1024.p),
       OpenSSL::ASN1::Integer(dh1024.g)
@@ -42,7 +42,7 @@ def test_DHparams
   end
 
   def test_public_key
-    dh = Fixtures.pkey_dh("dh1024")
+    dh = Fixtures.pkey("dh1024")
     public_key = dh.public_key
     assert_no_key(public_key) #implies public_key.public? is false!
     assert_equal(dh.to_der, public_key.to_der)
@@ -50,14 +50,14 @@ def test_public_key
   end
 
   def test_generate_key
-    dh = Fixtures.pkey_dh("dh1024").public_key # creates a copy
+    dh = Fixtures.pkey("dh1024").public_key # creates a copy
     assert_no_key(dh)
     dh.generate_key!
     assert_key(dh)
   end
 
   def test_key_exchange
-    dh = Fixtures.pkey_dh("dh1024")
+    dh = Fixtures.pkey("dh1024")
     dh2 = dh.public_key
     dh.generate_key!
     dh2.generate_key!
diff --git a/test/mri/openssl/test_ssl.rb b/test/mri/openssl/test_ssl.rb
index 060c1f1cfc4..dad9a437791 100644
--- a/test/mri/openssl/test_ssl.rb
+++ b/test/mri/openssl/test_ssl.rb
@@ -81,7 +81,7 @@ def test_add_certificate_multiple_certs
     add0_chain_supported = openssl?(1, 0, 2)
 
     if add0_chain_supported
-      ca2_key = Fixtures.pkey("rsa1024")
+      ca2_key = Fixtures.pkey("rsa2048")
       ca2_exts = [
         ["basicConstraints", "CA:TRUE", true],
         ["keyUsage", "cRLSign, keyCertSign", true],
@@ -526,8 +526,12 @@ def test_verify_certificate_identity
       assert_equal(true,  OpenSSL::SSL.verify_certificate_identity(cert, "www.example.com\0.evil.com"))
       assert_equal(false, OpenSSL::SSL.verify_certificate_identity(cert, '192.168.7.255'))
       assert_equal(true,  OpenSSL::SSL.verify_certificate_identity(cert, '192.168.7.1'))
-      assert_equal(false, OpenSSL::SSL.verify_certificate_identity(cert, '13::17'))
+      assert_equal(true,  OpenSSL::SSL.verify_certificate_identity(cert, '13::17'))
+      assert_equal(false,  OpenSSL::SSL.verify_certificate_identity(cert, '13::18'))
       assert_equal(true,  OpenSSL::SSL.verify_certificate_identity(cert, '13:0:0:0:0:0:0:17'))
+      assert_equal(false,  OpenSSL::SSL.verify_certificate_identity(cert, '44:0:0:0:0:0:0:17'))
+      assert_equal(true,  OpenSSL::SSL.verify_certificate_identity(cert, '0013:0000:0000:0000:0000:0000:0000:0017'))
+      assert_equal(false,  OpenSSL::SSL.verify_certificate_identity(cert, '1313:0000:0000:0000:0000:0000:0000:0017'))
     end
   end
 
@@ -708,7 +712,7 @@ def socketpair
 
   def test_tlsext_hostname
     fooctx = OpenSSL::SSL::SSLContext.new
-    fooctx.tmp_dh_callback = proc { Fixtures.pkey_dh("dh1024") }
+    fooctx.tmp_dh_callback = proc { Fixtures.pkey("dh-1") }
     fooctx.cert = @cli_cert
     fooctx.key = @cli_key
 
@@ -760,7 +764,7 @@ def test_servername_cb_raises_an_exception_on_unknown_objects
     ctx2 = OpenSSL::SSL::SSLContext.new
     ctx2.cert = @svr_cert
     ctx2.key = @svr_key
-    ctx2.tmp_dh_callback = proc { Fixtures.pkey_dh("dh1024") }
+    ctx2.tmp_dh_callback = proc { Fixtures.pkey("dh-1") }
     ctx2.servername_cb = lambda { |args| Object.new }
 
     sock1, sock2 = socketpair
@@ -1140,7 +1144,7 @@ def test_alpn_protocol_selection_cancel
     ctx1 = OpenSSL::SSL::SSLContext.new
     ctx1.cert = @svr_cert
     ctx1.key = @svr_key
-    ctx1.tmp_dh_callback = proc { Fixtures.pkey_dh("dh1024") }
+    ctx1.tmp_dh_callback = proc { Fixtures.pkey("dh-1") }
     ctx1.alpn_select_cb = -> (protocols) { nil }
     ssl1 = OpenSSL::SSL::SSLSocket.new(sock1, ctx1)
 
@@ -1357,7 +1361,12 @@ def test_fallback_scsv
     # Server support better, so refuse the connection
     sock1, sock2 = socketpair
     begin
+      # This test is for the downgrade protection mechanism of TLS1.2.
+      # This is why ctx1 bounds max_version == TLS1.2.
+      # Otherwise, this test fails when using openssl 1.1.1 (or later) that supports TLS1.3.
+      # TODO: We may need another test for TLS1.3 because it seems to have a different mechanism.
       ctx1 = OpenSSL::SSL::SSLContext.new
+      ctx1.max_version = OpenSSL::SSL::TLS1_2_VERSION
       s1 = OpenSSL::SSL::SSLSocket.new(sock1, ctx1)
 
       ctx2 = OpenSSL::SSL::SSLContext.new
@@ -1382,20 +1391,21 @@ def test_fallback_scsv
   def test_dh_callback
     pend "TLS 1.2 is not supported" unless tls12_supported?
 
+    dh = Fixtures.pkey("dh-1")
     called = false
     ctx_proc = -> ctx {
       ctx.ssl_version = :TLSv1_2
       ctx.ciphers = "DH:!NULL"
       ctx.tmp_dh_callback = ->(*args) {
         called = true
-        Fixtures.pkey_dh("dh1024")
+        dh
       }
     }
     start_server(ctx_proc: ctx_proc) do |port|
       server_connect(port) { |ssl|
         assert called, "dh callback should be called"
         if ssl.respond_to?(:tmp_key)
-          assert_equal Fixtures.pkey_dh("dh1024").to_der, ssl.tmp_key.to_der
+          assert_equal dh.to_der, ssl.tmp_key.to_der
         end
       }
     end
diff --git a/test/mri/openssl/utils.rb b/test/mri/openssl/utils.rb
index 6318246ddb2..1da3d8f7970 100644
--- a/test/mri/openssl/utils.rb
+++ b/test/mri/openssl/utils.rb
@@ -42,10 +42,8 @@ module Fixtures
 
     def pkey(name)
       OpenSSL::PKey.read(read_file("pkey", name))
-    end
-
-    def pkey_dh(name)
-      # DH parameters can be read by OpenSSL::PKey.read atm
+    rescue OpenSSL::PKey::PKeyError
+      # TODO: DH parameters can be read by OpenSSL::PKey.read atm
       OpenSSL::PKey::DH.new(read_file("pkey", name))
     end
 
@@ -157,9 +155,9 @@ class OpenSSL::SSLTestCase < OpenSSL::TestCase
 
   def setup
     super
-    @ca_key  = Fixtures.pkey("rsa2048")
-    @svr_key = Fixtures.pkey("rsa1024")
-    @cli_key = Fixtures.pkey("rsa2048")
+    @ca_key  = Fixtures.pkey("rsa-1")
+    @svr_key = Fixtures.pkey("rsa-2")
+    @cli_key = Fixtures.pkey("rsa-3")
     @ca  = OpenSSL::X509::Name.parse("/DC=org/DC=ruby-lang/CN=CA")
     @svr = OpenSSL::X509::Name.parse("/DC=org/DC=ruby-lang/CN=localhost")
     @cli = OpenSSL::X509::Name.parse("/DC=org/DC=ruby-lang/CN=localhost")
@@ -200,7 +198,7 @@ def start_server(verify_mode: OpenSSL::SSL::VERIFY_NONE, start_immediately: true
       ctx.cert_store = store
       ctx.cert = @svr_cert
       ctx.key = @svr_key
-      ctx.tmp_dh_callback = proc { Fixtures.pkey_dh("dh1024") }
+      ctx.tmp_dh_callback = proc { Fixtures.pkey("dh-1") }
       ctx.verify_mode = verify_mode
       ctx_proc.call(ctx) if ctx_proc
 
diff --git a/test/mri/optparse/test_summary.rb b/test/mri/optparse/test_summary.rb
index b743aa00c1d..67b05672d4e 100644
--- a/test/mri/optparse/test_summary.rb
+++ b/test/mri/optparse/test_summary.rb
@@ -44,4 +44,15 @@ def test_summary_containing_space
     assert_equal("foo bar\n", o.to_s, bug6348)
     assert_equal(["foo bar"], o.to_a, bug6348)
   end
+
+  def test_ver
+    o = OptionParser.new("foo bar")
+    o.program_name = "foo"
+    assert_warning('') {assert_nil(o.version)}
+    assert_warning('') {assert_nil(o.release)}
+    o.version = [0, 1]
+    assert_equal "foo 0.1", o.ver
+    o.release = "rel"
+    assert_equal "foo 0.1 (rel)", o.ver
+  end
 end
diff --git a/test/mri/ostruct/test_ostruct.rb b/test/mri/ostruct/test_ostruct.rb
index 19f06a85a7e..61a4822810a 100644
--- a/test/mri/ostruct/test_ostruct.rb
+++ b/test/mri/ostruct/test_ostruct.rb
@@ -66,15 +66,16 @@ def test_frozen
     o = OpenStruct.new(foo: 42)
     o.a = 'a'
     o.freeze
-    assert_raise(RuntimeError) {o.b = 'b'}
+    expected_error = defined?(FrozenError) ? FrozenError : RuntimeError
+    assert_raise(expected_error) {o.b = 'b'}
     assert_not_respond_to(o, :b)
-    assert_raise(RuntimeError) {o.a = 'z'}
+    assert_raise(expected_error) {o.a = 'z'}
     assert_equal('a', o.a)
     assert_equal(42, o.foo)
     o = OpenStruct.new :a => 42
     def o.frozen?; nil end
     o.freeze
-    assert_raise(RuntimeError, '[ruby-core:22559]') {o.a = 1764}
+    assert_raise(expected_error, '[ruby-core:22559]') {o.a = 1764}
   end
 
   def test_delete_field
@@ -140,6 +141,13 @@ def test_to_h
     assert_equal(h, OpenStruct.new("name" => "John Smith", "age" => 70, pension: 300).to_h)
   end
 
+  def test_to_h_with_block
+    os = OpenStruct.new("country" => "Australia", :capital => "Canberra")
+    assert_equal({"country" => "AUSTRALIA", "capital" => "CANBERRA" },
+                 os.to_h {|name, value| [name.to_s, value.upcase]})
+    assert_equal("Australia", os.country)
+  end
+
   def test_each_pair
     h = {name: "John Smith", age: 70, pension: 300}
     os = OpenStruct.new(h)
diff --git a/test/mri/pathname/test_pathname.rb b/test/mri/pathname/test_pathname.rb
index 8a72b8026d0..f8e4937802c 100644
--- a/test/mri/pathname/test_pathname.rb
+++ b/test/mri/pathname/test_pathname.rb
@@ -291,9 +291,10 @@ def relative?(path)
   end
 
   def relative_path_from(dest_directory, base_directory)
-    Pathname.new(dest_directory).relative_path_from(Pathname.new(base_directory)).to_s
+    Pathname.new(dest_directory).relative_path_from(base_directory).to_s
   end
 
+  defassert(:relative_path_from, "../a", Pathname.new("a"), "b")
   defassert(:relative_path_from, "../a", "a", "b")
   defassert(:relative_path_from, "../a", "a", "b/")
   defassert(:relative_path_from, "../a", "a/", "b")
@@ -1412,6 +1413,8 @@ def test_file_join
       $SAFE = 1
       assert_equal("foo/bar", File.join(Pathname.new("foo"), Pathname.new("bar").taint))
     }.call
+  ensure
+    $SAFE = 0
   end
 
   def test_relative_path_from_casefold
@@ -1426,4 +1429,19 @@ module File::Constants
       assert_instance_of(Pathname, foo.relative_path_from(bar))
     end;
   end
+
+  def test_relative_path_from_mock
+    assert_equal(
+      Pathname.new("../bar"),
+      Pathname.new("/foo/bar").relative_path_from(Pathname.new("/foo/baz")))
+    assert_equal(
+      Pathname.new("../bar"),
+      Pathname.new("/foo/bar").relative_path_from("/foo/baz"))
+    obj = Object.new
+    def obj.cleanpath() Pathname.new("/foo/baz") end
+    def obj.is_a?(m) m == Pathname end
+    assert_equal(
+      Pathname.new("../bar"),
+      Pathname.new("/foo/bar").relative_path_from(obj))
+  end
 end
diff --git a/test/mri/psych/test_exception.rb b/test/mri/psych/test_exception.rb
index 3040bfb7a2e..df7fd73740c 100644
--- a/test/mri/psych/test_exception.rb
+++ b/test/mri/psych/test_exception.rb
@@ -15,6 +15,12 @@ def initialize *args
     def setup
       super
       @wups = Wups.new
+
+      @orig_verbose, $VERBOSE = $VERBOSE, nil
+    end
+
+    def teardown
+      $VERBOSE = @orig_verbose
     end
 
     def test_naming_exception
@@ -30,9 +36,15 @@ def test_load_takes_file
       assert_nil ex.file
 
       ex = assert_raises(Psych::SyntaxError) do
-        Psych.load '--- `', 'meow'
+        Psych.load '--- `', filename: 'meow'
       end
       assert_equal 'meow', ex.file
+
+      # deprecated interface
+      ex = assert_raises(Psych::SyntaxError) do
+        Psych.load '--- `', 'deprecated'
+      end
+      assert_equal 'deprecated', ex.file
     end
 
     def test_psych_parse_stream_takes_file
@@ -43,7 +55,7 @@ def test_psych_parse_stream_takes_file
       assert_match '(<unknown>)', ex.message
 
       ex = assert_raises(Psych::SyntaxError) do
-        Psych.parse_stream '--- `', 'omg!'
+        Psych.parse_stream '--- `', filename: 'omg!'
       end
       assert_equal 'omg!', ex.file
       assert_match 'omg!', ex.message
@@ -57,9 +69,15 @@ def test_load_stream_takes_file
       assert_match '(<unknown>)', ex.message
 
       ex = assert_raises(Psych::SyntaxError) do
-        Psych.load_stream '--- `', 'omg!'
+        Psych.load_stream '--- `', filename: 'omg!'
       end
       assert_equal 'omg!', ex.file
+
+      # deprecated interface
+      ex = assert_raises(Psych::SyntaxError) do
+        Psych.load_stream '--- `', 'deprecated'
+      end
+      assert_equal 'deprecated', ex.file
     end
 
     def test_parse_file_exception
@@ -94,9 +112,15 @@ def test_psych_parse_takes_file
       assert_nil ex.file
 
       ex = assert_raises(Psych::SyntaxError) do
-        Psych.parse '--- `', 'omg!'
+        Psych.parse '--- `', filename: 'omg!'
       end
       assert_match 'omg!', ex.message
+
+      # deprecated interface
+      ex = assert_raises(Psych::SyntaxError) do
+        Psych.parse '--- `', 'deprecated'
+      end
+      assert_match 'deprecated', ex.message
     end
 
     def test_attributes
diff --git a/test/mri/psych/test_psych.rb b/test/mri/psych/test_psych.rb
index 2812fd1bd8f..eeadc864ef4 100644
--- a/test/mri/psych/test_psych.rb
+++ b/test/mri/psych/test_psych.rb
@@ -5,8 +5,14 @@
 require 'tempfile'
 
 class TestPsych < Psych::TestCase
+
+  def setup
+    @orig_verbose, $VERBOSE = $VERBOSE, nil
+  end
+
   def teardown
     Psych.domain_types.clear
+    $VERBOSE = @orig_verbose
   end
 
   def test_line_width_invalid
@@ -60,6 +66,22 @@ def test_load_argument_error
     end
   end
 
+  def test_parse
+    assert_equal %w[a b], Psych.parse("- a\n- b").to_ruby
+  end
+
+  def test_parse_default_fallback
+    assert_equal false, Psych.parse("")
+  end
+
+  def test_parse_raises_on_bad_input
+    assert_raises(Psych::SyntaxError) { Psych.parse("--- `") }
+  end
+
+  def test_parse_with_fallback
+    assert_equal 42, Psych.parse("", fallback: 42)
+  end
+
   def test_non_existing_class_on_deserialize
     e = assert_raises(ArgumentError) do
       Psych.load("--- !ruby/object:NonExistent\nfoo: 1")
@@ -103,9 +125,44 @@ def test_load_stream
     assert_equal %w{ foo bar }, docs
   end
 
+  def test_load_stream_default_fallback
+    assert_equal [], Psych.load_stream("")
+  end
+
+  def test_load_stream_raises_on_bad_input
+    assert_raises(Psych::SyntaxError) { Psych.load_stream("--- `") }
+  end
+
   def test_parse_stream
     docs = Psych.parse_stream("--- foo\n...\n--- bar\n...")
-    assert_equal %w{ foo bar }, docs.children.map { |x| x.transform }
+    assert_equal(%w[foo bar], docs.children.map(&:transform))
+  end
+
+  def test_parse_stream_with_block
+    docs = []
+    Psych.parse_stream("--- foo\n...\n--- bar\n...") do |node|
+      docs << node
+    end
+
+    assert_equal %w[foo bar], docs.map(&:to_ruby)
+  end
+
+  def test_parse_stream_default_fallback
+    docs = Psych.parse_stream("")
+    assert_equal [], docs.children.map(&:to_ruby)
+  end
+
+  def test_parse_stream_with_block_default_fallback
+    docs = []
+    Psych.parse_stream("") do |node|
+      docs << node
+    end
+
+    assert_equal [], docs.map(&:to_ruby)
+  end
+
+  def test_parse_stream_raises_on_bad_input
+    assert_raises(Psych::SyntaxError) { Psych.parse_stream("--- `") }
   end
 
   def test_add_builtin_type
@@ -135,6 +192,31 @@ def test_domain_types
     assert_equal({ 'hello' => 'world' }, got)
   end
 
+  def test_load_default_fallback
+    assert_equal false, Psych.load("")
+  end
+
+  def test_load_with_fallback
+    assert_equal 42, Psych.load("", "file", fallback: 42)
+  end
+
+  def test_load_with_fallback_nil_or_false
+    assert_nil Psych.load("", "file", fallback: nil)
+    assert_equal false, Psych.load("", "file", fallback: false)
+  end
+
+  def test_load_with_fallback_hash
+    assert_equal Hash.new, Psych.load("", "file", fallback: Hash.new)
+  end
+
+  def test_load_with_fallback_for_nil
+    assert_nil Psych.load("--- null", "file", fallback: 42)
+  end
+
+  def test_load_with_fallback_for_false
+    assert_equal false, Psych.load("--- false", "file", fallback: 42)
+  end
+
   def test_load_file
     Tempfile.create(['yikes', 'yml']) {|t|
       t.binmode
@@ -144,12 +226,49 @@ def test_load_file
     }
   end
 
+  def test_load_file_default_fallback
+    Tempfile.create(['empty', 'yml']) {|t|
+      assert_equal false, Psych.load_file(t.path)
+    }
+  end
+
   def test_load_file_with_fallback
+    Tempfile.create(['empty', 'yml']) {|t|
+      assert_equal 42, Psych.load_file(t.path, fallback: 42)
+    }
+  end
+
+  def test_load_file_with_fallback_nil_or_false
+    Tempfile.create(['empty', 'yml']) {|t|
+      assert_nil Psych.load_file(t.path, fallback: nil)
+      assert_equal false, Psych.load_file(t.path, fallback: false)
+    }
+  end
+
+  def test_load_file_with_fallback_hash
     Tempfile.create(['empty', 'yml']) {|t|
       assert_equal Hash.new, Psych.load_file(t.path, fallback: Hash.new)
     }
   end
 
+  def test_load_file_with_fallback_for_nil
+    Tempfile.create(['nil', 'yml']) {|t|
+      t.binmode
+      t.write('--- null')
+      t.close
+      assert_nil Psych.load_file(t.path, fallback: 42)
+    }
+  end
+
+  def test_load_file_with_fallback_for_false
+    Tempfile.create(['false', 'yml']) {|t|
+      t.binmode
+      t.write('--- false')
+      t.close
+      assert_equal false, Psych.load_file(t.path, fallback: 42)
+    }
+  end
+
   def test_parse_file
     Tempfile.create(['yikes', 'yml']) {|t|
       t.binmode
@@ -159,6 +278,12 @@ def test_parse_file
     }
   end
 
+  def test_parse_file_default_fallback
+    Tempfile.create(['empty', 'yml']) do |t|
+      assert_equal false, Psych.parse_file(t.path)
+    end
+  end
+
   def test_degenerate_strings
     assert_equal false, Psych.load('    ')
     assert_equal false, Psych.parse('   ')
diff --git a/test/mri/psych/test_safe_load.rb b/test/mri/psych/test_safe_load.rb
index f3fdb9b9a22..e3972712fc6 100644
--- a/test/mri/psych/test_safe_load.rb
+++ b/test/mri/psych/test_safe_load.rb
@@ -3,6 +3,14 @@
 
 module Psych
   class TestSafeLoad < TestCase
+    def setup
+      @orig_verbose, $VERBOSE = $VERBOSE, nil
+    end
+
+    def teardown
+      $VERBOSE = @orig_verbose
+    end
+
     class Foo; end
 
     [1, 2.2, {}, [], "foo"].each do |obj|
@@ -22,14 +30,26 @@ def test_no_recursion
     def test_explicit_recursion
       x = []
       x << x
+      assert_equal(x, Psych.safe_load(Psych.dump(x), permitted_classes: [], permitted_symbols: [], aliases: true))
+      # deprecated interface
       assert_equal(x, Psych.safe_load(Psych.dump(x), [], [], true))
     end
 
-    def test_symbol_whitelist
+    def test_permitted_symbol
       yml = Psych.dump :foo
       assert_raises(Psych::DisallowedClass) do
         Psych.safe_load yml
       end
+      assert_equal(
+        :foo,
+        Psych.safe_load(
+          yml,
+          permitted_classes: [Symbol],
+          permitted_symbols: [:foo]
+        )
+      )
+
+      # deprecated interface
       assert_equal(:foo, Psych.safe_load(yml, [Symbol], [:foo]))
     end
 
@@ -37,33 +57,72 @@ def test_symbol
       assert_raises(Psych::DisallowedClass) do
         assert_safe_cycle :foo
       end
+      assert_raises(Psych::DisallowedClass) do
+        Psych.safe_load '--- !ruby/symbol foo', permitted_classes: []
+      end
+
+      # deprecated interface
       assert_raises(Psych::DisallowedClass) do
         Psych.safe_load '--- !ruby/symbol foo', []
       end
-      assert_safe_cycle :foo, [Symbol]
-      assert_safe_cycle :foo, %w{ Symbol }
+
+      assert_safe_cycle :foo, permitted_classes: [Symbol]
+      assert_safe_cycle :foo, permitted_classes: %w{ Symbol }
+      assert_equal :foo, Psych.safe_load('--- !ruby/symbol foo', permitted_classes: [Symbol])
+
+      # deprecated interface
       assert_equal :foo, Psych.safe_load('--- !ruby/symbol foo', [Symbol])
     end
 
     def test_foo
+      assert_raises(Psych::DisallowedClass) do
+        Psych.safe_load '--- !ruby/object:Foo {}', permitted_classes: [Foo]
+      end
+
+      # deprecated interface
       assert_raises(Psych::DisallowedClass) do
         Psych.safe_load '--- !ruby/object:Foo {}', [Foo]
       end
+
       assert_raises(Psych::DisallowedClass) do
         assert_safe_cycle Foo.new
       end
+      assert_kind_of(Foo, Psych.safe_load(Psych.dump(Foo.new), permitted_classes: [Foo]))
+
+      # deprecated interface
       assert_kind_of(Foo, Psych.safe_load(Psych.dump(Foo.new), [Foo]))
     end
 
     X = Struct.new(:x)
     def test_struct_depends_on_sym
-      assert_safe_cycle(X.new, [X, Symbol])
+      assert_safe_cycle(X.new, permitted_classes: [X, Symbol])
       assert_raises(Psych::DisallowedClass) do
-        cycle X.new, [X]
+        cycle X.new, permitted_classes: [X]
       end
     end
 
     def test_anon_struct
+      assert Psych.safe_load(<<-eoyml, permitted_classes: [Struct, Symbol])
+--- !ruby/struct
+  foo: bar
+                      eoyml
+
+      assert_raises(Psych::DisallowedClass) do
+        Psych.safe_load(<<-eoyml, permitted_classes: [Struct])
+--- !ruby/struct
+  foo: bar
+                      eoyml
+      end
+
+      assert_raises(Psych::DisallowedClass) do
+        Psych.safe_load(<<-eoyml, permitted_classes: [Symbol])
+--- !ruby/struct
+  foo: bar
+                      eoyml
+      end
+    end
+
+    def test_deprecated_anon_struct
       assert Psych.safe_load(<<-eoyml, [Struct, Symbol])
 --- !ruby/struct
   foo: bar
@@ -84,14 +143,28 @@ def test_anon_struct
       end
     end
 
+    def test_safe_load_default_fallback
+      assert_nil Psych.safe_load("")
+    end
+
+    def test_safe_load
+      assert_equal %w[a b], Psych.safe_load("- a\n- b")
+    end
+
+    def test_safe_load_raises_on_bad_input
+      assert_raises(Psych::SyntaxError) { Psych.safe_load("--- `") }
+    end
+
     private
 
-    def cycle object, whitelist = []
-      Psych.safe_load(Psych.dump(object), whitelist)
+    def cycle object, permitted_classes: []
+      Psych.safe_load(Psych.dump(object), permitted_classes: permitted_classes)
+      # deprecated interface test
+      Psych.safe_load(Psych.dump(object), permitted_classes)
     end
 
-    def assert_safe_cycle object, whitelist = []
-      other = cycle object, whitelist
+    def assert_safe_cycle object, permitted_classes: []
+      other = cycle object, permitted_classes: permitted_classes
       assert_equal object, other
     end
   end
diff --git a/test/mri/psych/test_stream.rb b/test/mri/psych/test_stream.rb
index 3bd557cb68c..9b71c6d9965 100644
--- a/test/mri/psych/test_stream.rb
+++ b/test/mri/psych/test_stream.rb
@@ -3,6 +3,22 @@
 
 module Psych
   class TestStream < TestCase
+    [
+      [Psych::Nodes::Alias, :alias?],
+      [Psych::Nodes::Document, :document?],
+      [Psych::Nodes::Mapping, :mapping?],
+      [Psych::Nodes::Scalar, :scalar?],
+      [Psych::Nodes::Sequence, :sequence?],
+      [Psych::Nodes::Stream, :stream?],
+    ].each do |klass, block|
+      define_method :"test_predicate_#{block}" do
+        rb = Psych.parse_stream("---\n- foo: bar\n- &a !!str Anchored\n- *a")
+        nodes = rb.grep(klass)
+        assert_operator nodes.length, :>, 0
+        assert_equal nodes, rb.find_all(&block)
+      end
+    end
+
     def test_parse_partial
       rb = Psych.parse("--- foo\n...\n--- `").to_ruby
       assert_equal 'foo', rb
diff --git a/test/mri/psych/test_yaml_special_cases.rb b/test/mri/psych/test_yaml_special_cases.rb
new file mode 100644
index 00000000000..4501704030e
--- /dev/null
+++ b/test/mri/psych/test_yaml_special_cases.rb
@@ -0,0 +1,130 @@
+# frozen_string_literal: true
+
+require_relative 'helper'
+
+require 'stringio'
+require 'tempfile'
+
+module Psych
+  class TestYamlSpecialCases < TestCase
+    def setup
+      super
+    end
+
+    def test_empty_string
+      s = ""
+      assert_equal false, Psych.load(s)
+      assert_equal [], Psych.load_stream(s)
+      assert_equal false, Psych.parse(s)
+      assert_equal [], Psych.parse_stream(s).transform
+      assert_nil   Psych.safe_load(s)
+    end
+
+    def test_false
+      s = "false"
+      assert_equal false, Psych.load(s)
+      assert_equal [false], Psych.load_stream(s)
+      assert_equal false, Psych.parse(s).transform
+      assert_equal [false], Psych.parse_stream(s).transform
+      assert_equal false, Psych.safe_load(s)
+    end
+
+    def test_n
+      s = "n"
+      assert_equal "n", Psych.load(s)
+      assert_equal ["n"], Psych.load_stream(s)
+      assert_equal "n", Psych.parse(s).transform
+      assert_equal ["n"], Psych.parse_stream(s).transform
+      assert_equal "n", Psych.safe_load(s)
+    end
+
+    def test_off
+      s = "off"
+      assert_equal false, Psych.load(s)
+      assert_equal [false], Psych.load_stream(s)
+      assert_equal false, Psych.parse(s).transform
+      assert_equal [false], Psych.parse_stream(s).transform
+      assert_equal false, Psych.safe_load(s)
+    end
+
+    def test_inf
+      s = "-.inf"
+      assert_equal(-Float::INFINITY, Psych.load(s))
+      assert_equal([-Float::INFINITY], Psych.load_stream(s))
+      assert_equal(-Float::INFINITY, Psych.parse(s).transform)
+      assert_equal([-Float::INFINITY], Psych.parse_stream(s).transform)
+      assert_equal(-Float::INFINITY, Psych.safe_load(s))
+    end
+
+    def test_NaN
+      s = ".NaN"
+      assert Float::NAN, Psych.load(s).nan?
+      assert [Float::NAN], Psych.load_stream(s).first.nan?
+      assert Psych.parse(s).transform.nan?
+      assert Psych.parse_stream(s).transform.first.nan?
+      assert Psych.safe_load(s).nan?
+    end
+
+    def test_0xC
+      s = "0xC"
+      assert_equal 12, Psych.load(s)
+      assert_equal [12], Psych.load_stream(s)
+      assert_equal 12, Psych.parse(s).transform
+      assert_equal [12], Psych.parse_stream(s).transform
+      assert_equal 12, Psych.safe_load(s)
+    end
+
+    def test_arrows
+      s = "<<"
+      assert_equal "<<", Psych.load(s)
+      assert_equal ["<<"], Psych.load_stream(s)
+      assert_equal "<<", Psych.parse(s).transform
+      assert_equal ["<<"], Psych.parse_stream(s).transform
+      assert_equal "<<", Psych.safe_load(s)
+    end
+
+    def test_arrows_hash
+      s = "<<: {}"
+      assert_equal({}, Psych.load(s))
+      assert_equal [{}], Psych.load_stream(s)
+      assert_equal({}, Psych.parse(s).transform)
+      assert_equal [{}], Psych.parse_stream(s).transform
+      assert_equal({}, Psych.safe_load(s))
+    end
+
+    def test_thousand
+      s = "- 1000\n- +1000\n- 1_000"
+      assert_equal [1000, 1000, 1000], Psych.load(s)
+      assert_equal [[1000, 1000, 1000]], Psych.load_stream(s)
+      assert_equal [1000, 1000, 1000], Psych.parse(s).transform
+      assert_equal [[1000, 1000, 1000]], Psych.parse_stream(s).transform
+      assert_equal [1000, 1000, 1000], Psych.safe_load(s)
+    end
+
+    def test_8
+      s = "[8, 08, 0o10, 010]"
+      assert_equal [8, "08", "0o10", 8], Psych.load(s)
+      assert_equal [[8, "08", "0o10", 8]], Psych.load_stream(s)
+      assert_equal [8, "08", "0o10", 8], Psych.parse(s).transform
+      assert_equal [[8, "08", "0o10", 8]], Psych.parse_stream(s).transform
+      assert_equal [8, "08", "0o10", 8], Psych.safe_load(s)
+    end
+
+    def test_null
+      s = "null"
+      assert_nil   Psych.load(s)
+      assert_equal [nil], Psych.load_stream(s)
+      assert_nil   Psych.parse(s).transform
+      assert_equal [nil], Psych.parse_stream(s).transform
+      assert_nil   Psych.safe_load(s)
+    end
+
+    private
+
+    def special_case_cycle(object)
+      %w[load load_stream parse parse_stream safe_load].map do |m|
+        Psych.public_send(m, object)
+      end
+    end
+  end
+end
diff --git a/test/mri/rdoc/minitest_helper.rb b/test/mri/rdoc/minitest_helper.rb
new file mode 100644
index 00000000000..9fb0cd676b7
--- /dev/null
+++ b/test/mri/rdoc/minitest_helper.rb
@@ -0,0 +1,204 @@
+# frozen_string_literal: true
+require 'bundler/errors'
+begin
+  gem 'minitest', '~> 5.0'
+rescue NoMethodError, Gem::LoadError, Bundler::GemfileNotFound
+  # for ruby tests
+end
+
+require 'minitest/autorun'
+require 'minitest/benchmark' unless ENV['NOBENCHMARK']
+
+require 'fileutils'
+require 'pp'
+require 'tempfile'
+require 'tmpdir'
+require 'stringio'
+
+require 'rdoc'
+
+##
+# RDoc::TestCase is an abstract TestCase to provide common setup and teardown
+# across all RDoc tests.  The test case uses minitest, so all the assertions
+# of minitest may be used.
+#
+# The testcase provides the following:
+#
+# * A reset code-object tree
+# * A reset markup preprocessor (RDoc::Markup::PreProcess)
+# * The <code>@RM</code> alias of RDoc::Markup (for less typing)
+# * <code>@pwd</code> containing the current working directory
+# * FileUtils, pp, Tempfile, Dir.tmpdir and StringIO
+
+class RDoc::TestCase < (defined?(Minitest::Test) ? Minitest::Test : MiniTest::Unit::TestCase)
+
+  ##
+  # Abstract test-case setup
+
+  def setup
+    super
+
+    @top_level = nil
+
+    @RM = RDoc::Markup
+
+    @pwd = Dir.pwd
+
+    @store = RDoc::Store.new
+
+    @rdoc = RDoc::RDoc.new
+    @rdoc.store = @store
+    @rdoc.options = RDoc::Options.new
+
+    g = Object.new
+    def g.class_dir() end
+    def g.file_dir() end
+    @rdoc.generator = g
+
+    RDoc::Markup::PreProcess.reset
+  end
+
+  ##
+  # Asserts +path+ is a file
+
+  def assert_file path
+    assert File.file?(path), "#{path} is not a file"
+  end
+
+  ##
+  # Asserts +path+ is a directory
+
+  def assert_directory path
+    assert File.directory?(path), "#{path} is not a directory"
+  end
+
+  ##
+  # Refutes +path+ exists
+
+  def refute_file path
+    refute File.exist?(path), "#{path} exists"
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::BlankLine.new
+
+  def blank_line
+    @RM::BlankLine.new
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::BlockQuote.new with +contents+
+
+  def block *contents
+    @RM::BlockQuote.new(*contents)
+  end
+
+  ##
+  # Creates an RDoc::Comment with +text+ which was defined on +top_level+.
+  # By default the comment has the 'rdoc' format.
+
+  def comment text, top_level = @top_level
+    RDoc::Comment.new text, top_level
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::Document.new with +contents+
+
+  def doc *contents
+    @RM::Document.new(*contents)
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::HardBreak.new
+
+  def hard_break
+    @RM::HardBreak.new
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::Heading.new with +level+ and +text+
+
+  def head level, text
+    @RM::Heading.new level, text
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::ListItem.new with +label+ and +parts+
+
+  def item label = nil, *parts
+    @RM::ListItem.new label, *parts
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::List.new with +type+ and +items+
+
+  def list type = nil, *items
+    @RM::List.new type, *items
+  end
+
+  ##
+  # Enables pretty-print output
+
+  def mu_pp obj # :nodoc:
+    s = obj.pretty_inspect
+    s = RDoc::Encoding.change_encoding s, Encoding.default_external
+    s.chomp
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::Paragraph.new with +contents+
+
+  def para *a
+    @RM::Paragraph.new(*a)
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::Rule.new with +weight+
+
+  def rule weight
+    @RM::Rule.new weight
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::Raw.new with +contents+
+
+  def raw *contents
+    @RM::Raw.new(*contents)
+  end
+
+  ##
+  # Creates a temporary directory changes the current directory to it for the
+  # duration of the block.
+  #
+  # Depends upon Dir.mktmpdir
+
+  def temp_dir
+    Dir.mktmpdir do |temp_dir|
+      Dir.chdir temp_dir do
+        yield temp_dir
+      end
+    end
+  end
+
+  ##
+  # Shortcut for RDoc::Markup::Verbatim.new with +parts+
+
+  def verb *parts
+    @RM::Verbatim.new(*parts)
+  end
+
+  ##
+  # run capture_io with setting $VERBOSE = true
+
+  def verbose_capture_io
+    capture_io do
+      begin
+        orig_verbose = $VERBOSE
+        $VERBOSE = true
+        yield
+      ensure
+        $VERBOSE = orig_verbose
+      end
+    end
+  end
+end
diff --git a/test/mri/rdoc/test_rdoc_any_method.rb b/test/mri/rdoc/test_rdoc_any_method.rb
index 55793255ba4..6dd46b0b462 100644
--- a/test/mri/rdoc/test_rdoc_any_method.rb
+++ b/test/mri/rdoc/test_rdoc_any_method.rb
@@ -85,6 +85,33 @@ def test_markup_code
     assert_equal expected, @c2_a.markup_code
   end
 
+  def test_markup_code_with_line_numbers
+    position_comment = "# File #{@file_name}, line 1"
+    tokens = [
+      { :line_no => 1, :char_no => 0, :kind => :on_comment, :text => position_comment },
+      { :line_no => 1, :char_no => position_comment.size, :kind => :on_nl, :text => "\n" },
+      { :line_no => 2, :char_no => 0, :kind => :on_const, :text => 'A' },
+      { :line_no => 2, :char_no => 1, :kind => :on_nl, :text => "\n" },
+      { :line_no => 3, :char_no => 0, :kind => :on_const, :text => 'B' }
+    ]
+
+    @c2_a.collect_tokens
+    @c2_a.add_tokens(*tokens)
+
+    assert_equal <<-EXPECTED.chomp, @c2_a.markup_code
+<span class="ruby-comment"># File xref_data.rb, line 1</span>
+<span class="ruby-constant">A</span>
+<span class="ruby-constant">B</span>
+    EXPECTED
+
+    @options.line_numbers = true
+    assert_equal <<-EXPECTED.chomp, @c2_a.markup_code
+  <span class="ruby-comment"># File xref_data.rb</span>
+<span class="line-num">1</span> <span class="ruby-constant">A</span>
+<span class="line-num">2</span> <span class="ruby-constant">B</span>
+    EXPECTED
+  end
+
   def test_markup_code_empty
     assert_equal '', @c2_a.markup_code
   end
@@ -133,7 +160,7 @@ def test_marshal_dump
     assert_equal 'Klass#method', loaded.full_name
     assert_equal 'method',       loaded.name
     assert_equal 'param',        loaded.params
-    assert_equal nil,            loaded.singleton # defaults to nil
+    assert_nil                   loaded.singleton # defaults to nil
     assert_equal :public,        loaded.visibility
     assert_equal cm,             loaded.parent
     assert_equal section,        loaded.section
@@ -151,8 +178,21 @@ def test_marshal_load_aliased_method
     assert                aliased_method.display?
   end
 
+  def test_marshal_load_aliased_method_with_nil_singleton
+    aliased_method = Marshal.load Marshal.dump(@c2_a)
+
+    aliased_method.store = @store
+    aliased_method.is_alias_for = ["C2", nil, "b"]
+
+    assert_equal 'C2#a',  aliased_method.full_name
+    assert_equal 'C2',    aliased_method.parent_name
+    assert_equal '()',    aliased_method.params
+    assert_equal @c2_b,   aliased_method.is_alias_for, 'is_alias_for'
+    assert                aliased_method.display?
+  end
+
   def test_marshal_load_class_method
-    class_method = Marshal.load Marshal.dump(@c1.method_list.first)
+    class_method = Marshal.load Marshal.dump(@c1.find_class_method_named 'm')
 
     assert_equal 'C1::m', class_method.full_name
     assert_equal 'C1',    class_method.parent_name
@@ -161,7 +201,7 @@ def test_marshal_load_class_method
   end
 
   def test_marshal_load_instance_method
-    instance_method = Marshal.load Marshal.dump(@c1.method_list.last)
+    instance_method = Marshal.load Marshal.dump(@c1.find_instance_method_named 'm')
 
     assert_equal 'C1#m',  instance_method.full_name
     assert_equal 'C1',    instance_method.parent_name
@@ -207,9 +247,9 @@ def test_marshal_load_version_0
     assert_equal 'Klass#method', loaded.full_name
     assert_equal 'method',       loaded.name
     assert_equal 'param',        loaded.params
-    assert_equal nil,            loaded.singleton # defaults to nil
+    assert_nil                   loaded.singleton # defaults to nil
     assert_equal :public,        loaded.visibility
-    assert_equal nil,            loaded.file
+    assert_nil                   loaded.file
     assert_equal cm,             loaded.parent
     assert_equal section,        loaded.section
     assert_nil                   loaded.is_alias_for
@@ -264,7 +304,7 @@ def test_marshal_dump_version_2
     assert_equal 'Klass#method', loaded.full_name
     assert_equal 'method',       loaded.name
     assert_equal 'param',        loaded.params
-    assert_equal nil,            loaded.singleton # defaults to nil
+    assert_nil                   loaded.singleton # defaults to nil
     assert_equal :public,        loaded.visibility
     assert_equal cm,             loaded.parent
     assert_equal section,        loaded.section
@@ -467,4 +507,3 @@ def test_superclass_method_multilevel
   end
 
 end
-
diff --git a/test/mri/rdoc/test_rdoc_attr.rb b/test/mri/rdoc/test_rdoc_attr.rb
index ae702ac702c..5910c0fad33 100644
--- a/test/mri/rdoc/test_rdoc_attr.rb
+++ b/test/mri/rdoc/test_rdoc_attr.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocAttr < RDoc::TestCase
 
@@ -139,7 +139,7 @@ def test_marshal_load_version_1
     assert_equal cm,           loaded.parent
     assert_equal section,      loaded.section
 
-    assert loaded.display?
+    assert                     loaded.display?
   end
 
   def test_marshal_load_version_2
@@ -188,4 +188,3 @@ def test_type
   end
 
 end
-
diff --git a/test/mri/rdoc/test_rdoc_class_module.rb b/test/mri/rdoc/test_rdoc_class_module.rb
index 273a21120f3..cc53a13528a 100644
--- a/test/mri/rdoc/test_rdoc_class_module.rb
+++ b/test/mri/rdoc/test_rdoc_class_module.rb
@@ -91,6 +91,7 @@ def test_docuent_self_or_methods
 
     assert @c1.document_self_or_methods
 
+    @c1_plus.document_self = false
     @c1_m.document_self = false
 
     assert @c1.document_self_or_methods
@@ -1277,7 +1278,8 @@ def test_update_aliases_class
     n1 = @xref_data.add_module RDoc::NormalClass, 'N1'
     n1_k2 = n1.add_module RDoc::NormalClass, 'N2'
 
-    n1.add_module_alias n1_k2, 'A1', @xref_data
+    a1 = RDoc::Constant.new 'A1', '', ''
+    n1.add_module_alias n1_k2, n1_k2.name, a1, @xref_data
 
     n1_a1_c = n1.constants.find { |c| c.name == 'A1' }
     refute_nil n1_a1_c
@@ -1301,7 +1303,8 @@ def test_update_aliases_module
     n1 = @xref_data.add_module RDoc::NormalModule, 'N1'
     n1_n2 = n1.add_module RDoc::NormalModule, 'N2'
 
-    n1.add_module_alias n1_n2, 'A1', @xref_data
+    a1 = RDoc::Constant.new 'A1', '', ''
+    n1.add_module_alias n1_n2, n1_n2.name, a1, @xref_data
 
     n1_a1_c = n1.constants.find { |c| c.name == 'A1' }
     refute_nil n1_a1_c
@@ -1326,7 +1329,8 @@ def test_update_aliases_reparent
     l1_l2 = l1.add_module RDoc::NormalModule, 'L2'
     o1 = @xref_data.add_module RDoc::NormalModule, 'O1'
 
-    o1.add_module_alias l1_l2, 'A1', @xref_data
+    a1 = RDoc::Constant.new 'A1', '', ''
+    o1.add_module_alias l1_l2, l1_l2.name, a1, @xref_data
 
     o1_a1_c = o1.constants.find { |c| c.name == 'A1' }
     refute_nil o1_a1_c
@@ -1358,7 +1362,8 @@ def test_update_aliases_reparent_root
     const.record_location top_level
     const.is_alias_for = klass
 
-    top_level.add_module_alias klass, 'A', top_level
+    a = RDoc::Constant.new 'A', '', ''
+    top_level.add_module_alias klass, klass.name, a, top_level
 
     object.add_constant const
 
diff --git a/test/mri/rdoc/test_rdoc_code_object.rb b/test/mri/rdoc/test_rdoc_code_object.rb
index d189ac1c4bf..fad182722a7 100644
--- a/test/mri/rdoc/test_rdoc_code_object.rb
+++ b/test/mri/rdoc/test_rdoc_code_object.rb
@@ -213,7 +213,7 @@ def test_each_parent
   end
 
   def test_file_name
-    assert_equal nil, @co.file_name
+    assert_nil @co.file_name
 
     @co.record_location @store.add_file 'lib/file.rb'
 
diff --git a/test/mri/rdoc/test_rdoc_comment.rb b/test/mri/rdoc/test_rdoc_comment.rb
index 567daae51c5..9b3c105bb04 100644
--- a/test/mri/rdoc/test_rdoc_comment.rb
+++ b/test/mri/rdoc/test_rdoc_comment.rb
@@ -1,7 +1,7 @@
 # coding: us-ascii
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocComment < RDoc::TestCase
 
@@ -77,7 +77,7 @@ def test_extract_call_seq_commented
 
     comment.extract_call_seq m
 
-    assert_equal nil, m.call_seq
+    assert_nil m.call_seq
   end
 
   def test_extract_call_seq_no_blank
diff --git a/test/mri/rdoc/test_rdoc_constant.rb b/test/mri/rdoc/test_rdoc_constant.rb
index e7151315798..79dcdad57ea 100644
--- a/test/mri/rdoc/test_rdoc_constant.rb
+++ b/test/mri/rdoc/test_rdoc_constant.rb
@@ -118,7 +118,7 @@ def test_marshal_load
     assert_equal cm,             loaded.parent
     assert_equal section,        loaded.section
 
-    assert loaded.display?
+    assert                       loaded.display?
   end
 
   def test_marshal_load_version_0
diff --git a/test/mri/rdoc/test_rdoc_context.rb b/test/mri/rdoc/test_rdoc_context.rb
index a7d6a58716e..be17496f407 100644
--- a/test/mri/rdoc/test_rdoc_context.rb
+++ b/test/mri/rdoc/test_rdoc_context.rb
@@ -14,10 +14,10 @@ def test_initialize
     assert_empty @context.in_files
     assert_equal 'unknown', @context.name
     assert_equal '', @context.comment
-    assert_equal nil, @context.parent
+    assert_nil   @context.parent
     assert_equal :public, @context.visibility
     assert_equal 1, @context.sections.length
-    assert_equal nil, @context.temporary_section
+    assert_nil   @context.temporary_section
 
     assert_empty @context.classes_hash
     assert_empty @context.modules_hash
@@ -280,7 +280,8 @@ def test_add_module
   def test_add_module_alias
     tl = @store.add_file 'file.rb'
 
-    c3_c4 = @c2.add_module_alias @c2_c3, 'C4', tl
+    c4 = RDoc::Constant.new 'C4', '', ''
+    c3_c4 = @c2.add_module_alias @c2_c3, @c2_c3.name, c4, tl
 
     alias_constant = @c2.constants.first
 
@@ -298,7 +299,8 @@ def test_add_module_alias_top_level
 
     object = top_level.add_class RDoc::NormalClass, 'Object'
 
-    top_level.add_module_alias klass, 'A', top_level
+    a = RDoc::Constant.new 'A', '', ''
+    top_level.add_module_alias klass, klass.name, a, top_level
 
     refute_empty object.constants
 
@@ -512,7 +514,7 @@ def test_each_section_enumerator
   end
 
   def test_find_attribute_named
-    assert_equal nil,  @c1.find_attribute_named('none')
+    assert_nil         @c1.find_attribute_named('none')
     assert_equal 'R',  @c1.find_attribute_named('attr').rw
     assert_equal 'R',  @c1.find_attribute_named('attr_reader').rw
     assert_equal 'W',  @c1.find_attribute_named('attr_writer').rw
@@ -520,7 +522,7 @@ def test_find_attribute_named
   end
 
   def test_find_class_method_named
-    assert_equal nil, @c1.find_class_method_named('none')
+    assert_nil @c1.find_class_method_named('none')
 
     m = @c1.find_class_method_named('m')
     assert_instance_of RDoc::AnyMethod, m
@@ -528,23 +530,23 @@ def test_find_class_method_named
   end
 
   def test_find_constant_named
-    assert_equal nil,      @c1.find_constant_named('NONE')
+    assert_nil             @c1.find_constant_named('NONE')
     assert_equal ':const', @c1.find_constant_named('CONST').value
   end
 
   def test_find_enclosing_module_named
-    assert_equal nil, @c2_c3.find_enclosing_module_named('NONE')
+    assert_nil        @c2_c3.find_enclosing_module_named('NONE')
     assert_equal @c1, @c2_c3.find_enclosing_module_named('C1')
     assert_equal @c2, @c2_c3.find_enclosing_module_named('C2')
   end
 
   def test_find_file_named
-    assert_equal nil,        @c1.find_file_named('nonexistent.rb')
+    assert_nil               @c1.find_file_named('nonexistent.rb')
     assert_equal @xref_data, @c1.find_file_named(@file_name)
   end
 
   def test_find_instance_method_named
-    assert_equal nil, @c1.find_instance_method_named('none')
+    assert_nil @c1.find_instance_method_named('none')
 
     m = @c1.find_instance_method_named('m')
     assert_instance_of RDoc::AnyMethod, m
@@ -559,6 +561,14 @@ def test_find_local_symbol
     assert_equal @c2_c3,     @c2.find_local_symbol('C3')
   end
 
+  def test_find_method
+    loaded_c2 = Marshal.load Marshal.dump @c2
+    assert_equal @c2_a, loaded_c2.find_method('a', false)
+    assert_equal @c2_b, loaded_c2.find_method('b', false)
+    assert_equal @c2_a, loaded_c2.find_method('a', nil)
+    assert_equal @c2_b, loaded_c2.find_method('b', nil)
+  end
+
   def test_find_method_named
     assert_equal true, @c1.find_method_named('m').singleton
   end
@@ -650,7 +660,7 @@ def test_methods_by_type
       'instance' => {
         :private   => [],
         :protected => [],
-        :public    => [@c1_m],
+        :public    => [@c1_plus, @c1_m],
       },
       'class' => {
         :private   => [],
diff --git a/test/mri/rdoc/test_rdoc_context_section.rb b/test/mri/rdoc/test_rdoc_context_section.rb
index ff88b9b66a4..f1cf493d3d0 100644
--- a/test/mri/rdoc/test_rdoc_context_section.rb
+++ b/test/mri/rdoc/test_rdoc_context_section.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocContextSection < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_cross_reference.rb b/test/mri/rdoc/test_rdoc_cross_reference.rb
index a294553704b..183de0930d3 100644
--- a/test/mri/rdoc/test_rdoc_cross_reference.rb
+++ b/test/mri/rdoc/test_rdoc_cross_reference.rb
@@ -107,18 +107,24 @@ def test_resolve_file
   end
 
   def test_resolve_method
-    assert_ref @c1__m, 'm'
-    assert_ref @c1_m,  '#m'
-    assert_ref @c1__m, '::m'
-
-    assert_ref @c1_m,  'C1#m'
-    assert_ref @c1__m, 'C1.m'
-    assert_ref @c1__m, 'C1::m'
+    assert_ref @c1__m,    'm'
+    assert_ref @c1__m,    '::m'
+    assert_ref @c1_m,     '#m'
+    assert_ref @c1_plus,  '#+'
+
+    assert_ref @c1_m,     'C1#m'
+    assert_ref @c1_plus,  'C1#+'
+    assert_ref @c1__m,    'C1.m'
+    assert_ref @c1__m,    'C1::m'
 
     assert_ref @c1_m, 'C1#m'
     assert_ref @c1_m, 'C1#m()'
     assert_ref @c1_m, 'C1#m(*)'
 
+    assert_ref @c1_plus, 'C1#+'
+    assert_ref @c1_plus, 'C1#+()'
+    assert_ref @c1_plus, 'C1#+(*)'
+
     assert_ref @c1__m, 'C1.m'
     assert_ref @c1__m, 'C1.m()'
     assert_ref @c1__m, 'C1.m(*)'
@@ -139,6 +145,15 @@ def test_resolve_method
     assert_ref @c2_c3_m, '::C2::C3#m(*)'
   end
 
+  def test_resolve_the_same_name_in_instance_and_class_method
+    assert_ref @c9_a_i_foo, 'C9::A#foo'
+    assert_ref @c9_a_c_bar, 'C9::A::bar'
+    assert_ref @c9_b_c_foo, 'C9::B::foo'
+    assert_ref @c9_b_i_bar, 'C9::B#bar'
+    assert_ref @c9_b_c_foo, 'C9::B.foo'
+    assert_ref @c9_a_c_bar, 'C9::B.bar'
+  end
+
   def test_resolve_method_equals3
     m = RDoc::AnyMethod.new '', '==='
     @c1.add_method m
@@ -147,8 +162,7 @@ def test_resolve_method_equals3
   end
 
   def test_resolve_page
-    page = @store.add_file 'README.txt'
-    page.parser = RDoc::Parser::Simple
+    page = @store.add_file 'README.txt', parser: RDoc::Parser::Simple
 
     assert_ref page, 'README'
   end
diff --git a/test/mri/rdoc/test_rdoc_encoding.rb b/test/mri/rdoc/test_rdoc_encoding.rb
index 9d9ded4bbd1..5b2de47aa24 100644
--- a/test/mri/rdoc/test_rdoc_encoding.rb
+++ b/test/mri/rdoc/test_rdoc_encoding.rb
@@ -1,7 +1,7 @@
 # coding: US-ASCII
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocEncoding < RDoc::TestCase
 
@@ -31,7 +31,7 @@ def test_class_read_file_encoding
     @tempfile.flush
 
     contents = RDoc::Encoding.read_file @tempfile.path, Encoding::UTF_8
-    assert_equal "hi everybody", contents
+    assert_equal "# coding: utf-8\nhi everybody", contents
     assert_equal Encoding::UTF_8, contents.encoding
   end
 
@@ -45,7 +45,7 @@ def test_class_read_file_encoding_convert
 
     contents = RDoc::Encoding.read_file @tempfile.path, Encoding::UTF_8
     assert_equal Encoding::UTF_8, contents.encoding
-    assert_equal "hi \u00e9verybody", contents.sub("\r", '')
+    assert_equal "# coding: ISO-8859-1\nhi \u00e9verybody", contents.sub("\r", '')
   end
 
   def test_class_read_file_encoding_fail
@@ -65,13 +65,13 @@ def test_class_read_file_encoding_fail
 
   def test_class_read_file_encoding_fancy
     expected = "# -*- coding: utf-8; fill-column: 74 -*-\nhi everybody"
-    exptected = RDoc::Encoding.change_encoding expected, Encoding::UTF_8
+    expected = RDoc::Encoding.change_encoding expected, Encoding::UTF_8
 
     @tempfile.write expected
     @tempfile.flush
 
     contents = RDoc::Encoding.read_file @tempfile.path, Encoding::UTF_8
-    assert_equal "hi everybody", contents
+    assert_equal "# -*- coding: utf-8; fill-column: 74 -*-\nhi everybody", contents
     assert_equal Encoding::UTF_8, contents.encoding
   end
 
@@ -81,7 +81,7 @@ def test_class_read_file_encoding_force_transcode
 
     contents = RDoc::Encoding.read_file @tempfile.path, Encoding::US_ASCII, true
 
-    assert_equal '?', contents
+    assert_equal "# coding: utf-8\n?", contents
     assert_equal Encoding::US_ASCII, contents.encoding
   end
 
@@ -124,108 +124,58 @@ def test_class_read_file_encoding_iso_2022_jp
 
     contents = RDoc::Encoding.read_file @tempfile.path, Encoding::UTF_8
 
-    expected = ":\xe3\x82\xb3\xe3\x83\x9e\xe3\x83\xb3\xe3\x83\x89:"
+    expected = "# coding: ISO-2022-JP\n:\xe3\x82\xb3\xe3\x83\x9e\xe3\x83\xb3\xe3\x83\x89:"
     expected = RDoc::Encoding.change_encoding expected, Encoding::UTF_8
 
     assert_equal expected, contents
     assert_equal Encoding::UTF_8, contents.encoding
   end
 
-  def test_class_set_encoding
+  def test_class_detect_encoding
     s = "# coding: UTF-8\n"
-    s = RDoc::Encoding.set_encoding s
+    encoding = RDoc::Encoding.detect_encoding s
 
     # sanity check for 1.8
 
-    assert_equal Encoding::UTF_8, s.encoding
+    assert_equal Encoding::UTF_8, encoding
 
     s = "#!/bin/ruby\n# coding: UTF-8\n"
-    s = RDoc::Encoding.set_encoding s
+    encoding = RDoc::Encoding.detect_encoding s
 
-    assert_equal Encoding::UTF_8, s.encoding
+    assert_equal Encoding::UTF_8, encoding
 
     s = "<?xml version='1.0' encoding='UTF-8'?>\n"
-    s = RDoc::Encoding.set_encoding s
+    encoding = RDoc::Encoding.detect_encoding s
 
-    assert_equal Encoding::UTF_8, s.encoding
+    assert_equal Encoding::UTF_8, encoding
 
     s = "<?xml version='1.0' encoding=\"UTF-8\"?>\n"
-    s = RDoc::Encoding.set_encoding s
-
-    assert_equal Encoding::UTF_8, s.encoding
-  end
-
-  def test_class_set_encoding_strip
-    s = "# coding: UTF-8\n# more comments"
-
-    s = RDoc::Encoding.set_encoding s
-
-    assert_equal "# more comments", s
-
-    s = "#!/bin/ruby\n# coding: UTF-8\n# more comments"
-
-    s = RDoc::Encoding.set_encoding s
+    encoding = RDoc::Encoding.detect_encoding s
 
-    assert_equal "#!/bin/ruby\n# more comments", s
+    assert_equal Encoding::UTF_8, encoding
   end
 
   def test_class_set_encoding_bad
     s = ""
-    expected = s.encoding
-    s = RDoc::Encoding.set_encoding s
+    encoding = RDoc::Encoding.detect_encoding s
 
-    assert_equal expected, s.encoding
+    assert_nil encoding
 
     s = "# vim:set fileencoding=utf-8:\n"
-    expected = s.encoding
-    s = RDoc::Encoding.set_encoding s
+    encoding = RDoc::Encoding.detect_encoding s
 
-    assert_equal expected, s.encoding
+    assert_nil encoding
 
     s = "# vim:set fileencoding=utf-8:\n"
-    expected = s.encoding
-    s = RDoc::Encoding.set_encoding s
+    encoding = RDoc::Encoding.detect_encoding s
 
-    assert_equal expected, s.encoding
+    assert_nil encoding
 
     assert_raises ArgumentError do
-      s = RDoc::Encoding.set_encoding "# -*- encoding: undecided -*-\n"
+      s = RDoc::Encoding.detect_encoding "# -*- encoding: undecided -*-\n"
     end
   end
 
-  def test_skip_frozen_string_literal
-    expected = "# frozen_string_literal: true\nhi everybody"
-
-    @tempfile.write expected
-    @tempfile.flush
-
-    contents = RDoc::Encoding.read_file @tempfile.path, Encoding::UTF_8
-    assert_equal "hi everybody", contents
-    assert_equal Encoding::UTF_8, contents.encoding
-  end
-
-  def test_skip_frozen_string_literal_after_coding
-    expected = "# coding: utf-8\n# frozen-string-literal: false\nhi everybody"
-
-    @tempfile.write expected
-    @tempfile.flush
-
-    contents = RDoc::Encoding.read_file @tempfile.path, Encoding::UTF_8
-    assert_equal "hi everybody", contents
-    assert_equal Encoding::UTF_8, contents.encoding
-  end
-
-  def test_skip_frozen_string_literal_before_coding
-    expected = "# frozen_string_literal: true\n# coding: utf-8\nhi everybody"
-
-    @tempfile.write expected
-    @tempfile.flush
-
-    contents = RDoc::Encoding.read_file @tempfile.path, Encoding::UTF_8
-    assert_equal "hi everybody", contents
-    assert_equal Encoding::UTF_8, contents.encoding
-  end
-
   def test_sanity
     assert_equal Encoding::US_ASCII, ''.encoding,
                  'If this file is not ASCII tests may incorrectly pass'
diff --git a/test/mri/rdoc/test_rdoc_generator_darkfish.rb b/test/mri/rdoc/test_rdoc_generator_darkfish.rb
index c004bb271ee..edabe4fad45 100644
--- a/test/mri/rdoc/test_rdoc_generator_darkfish.rb
+++ b/test/mri/rdoc/test_rdoc_generator_darkfish.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocGeneratorDarkfish < RDoc::TestCase
 
@@ -39,7 +39,7 @@ def setup
 
     @top_level.add_constant @alias_constant
 
-    @klass.add_module_alias @klass, 'A', @top_level
+    @klass.add_module_alias @klass, @klass.name, @alias_constant, @top_level
 
     @meth = RDoc::AnyMethod.new nil, 'method'
     @meth_bang = RDoc::AnyMethod.new nil, 'method!'
@@ -135,7 +135,7 @@ def test_generate_static_dry_run
   end
 
   def test_install_rdoc_static_file
-    src = Pathname(__FILE__)
+    src = Pathname File.expand_path(__FILE__, @pwd)
     dst = File.join @tmpdir, File.basename(src)
     options = {}
 
diff --git a/test/mri/rdoc/test_rdoc_generator_json_index.rb b/test/mri/rdoc/test_rdoc_generator_json_index.rb
index 6cb5463d295..ab8f6f15212 100644
--- a/test/mri/rdoc/test_rdoc_generator_json_index.rb
+++ b/test/mri/rdoc/test_rdoc_generator_json_index.rb
@@ -1,14 +1,14 @@
 # coding: US-ASCII
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocGeneratorJsonIndex < RDoc::TestCase
 
   def setup
     super
 
-    @tmpdir = File.join Dir.tmpdir, "test_rdoc_generator_darkfish_#{$$}"
+    @tmpdir = Dir.mktmpdir "test_rdoc_generator_darkfish_#{$$}_"
     FileUtils.mkdir_p @tmpdir
 
     @options = RDoc::Options.new
@@ -95,6 +95,19 @@ def test_generate
     assert_file 'js/navigation.js'
     assert_file 'js/search_index.js'
 
+    srcdir = File.expand_path('lib/rdoc', @pwd)
+    if !File.directory? srcdir
+      # for Ruby core repository
+      srcdir = File.expand_path("../../../lib/rdoc", __FILE__)
+    end
+
+    orig_file = Pathname(File.join srcdir, 'generator/template/json_index/js/navigation.js')
+    generated_file = Pathname(File.join @tmpdir, 'js/navigation.js')
+
+    # This is dirty hack on JRuby for MiniTest 4
+    assert orig_file.mtime.inspect == generated_file.mtime.inspect,
+      '.js files should be tha same timestamp of original'
+
     json = File.read 'js/search_index.js'
 
     json =~ /\Avar search_data = /
@@ -137,6 +150,20 @@ def test_generate
     assert_equal expected, index
   end
 
+  def test_generate_search_index_with_reproducible_builds
+    backup_epoch = ENV['SOURCE_DATE_EPOCH']
+    ruby_birthday = Time.parse 'Wed, 24 Feb 1993 21:00:00 +0900'
+    ENV['SOURCE_DATE_EPOCH'] = ruby_birthday.to_i.to_s
+
+    @g.generate
+
+    assert_file 'js/search_index.js'
+    generated_search_index = Pathname(File.join @tmpdir, 'js/search_index.js')
+    assert_equal ruby_birthday, generated_search_index.mtime
+
+    ENV['SOURCE_DATE_EPOCH'] = backup_epoch
+  end
+
   def test_generate_gzipped
     begin
       require 'zlib'
diff --git a/test/mri/rdoc/test_rdoc_generator_markup.rb b/test/mri/rdoc/test_rdoc_generator_markup.rb
index d13f5119be1..5588d9c5f0b 100644
--- a/test/mri/rdoc/test_rdoc_generator_markup.rb
+++ b/test/mri/rdoc/test_rdoc_generator_markup.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocGeneratorMarkup < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_generator_pot.rb b/test/mri/rdoc/test_rdoc_generator_pot.rb
index 5675f96b759..26641345efd 100644
--- a/test/mri/rdoc/test_rdoc_generator_pot.rb
+++ b/test/mri/rdoc/test_rdoc_generator_pot.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocGeneratorPOT < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_generator_pot_po.rb b/test/mri/rdoc/test_rdoc_generator_pot_po.rb
index 8786f632c09..c50899d4469 100644
--- a/test/mri/rdoc/test_rdoc_generator_pot_po.rb
+++ b/test/mri/rdoc/test_rdoc_generator_pot_po.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocGeneratorPOTPO < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_generator_pot_po_entry.rb b/test/mri/rdoc/test_rdoc_generator_pot_po_entry.rb
index 5c24c2d70dc..f3bf329348b 100644
--- a/test/mri/rdoc/test_rdoc_generator_pot_po_entry.rb
+++ b/test/mri/rdoc/test_rdoc_generator_pot_po_entry.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocGeneratorPOTPOEntry < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_generator_ri.rb b/test/mri/rdoc/test_rdoc_generator_ri.rb
index 02bcee8904b..a33f5ca2ac3 100644
--- a/test/mri/rdoc/test_rdoc_generator_ri.rb
+++ b/test/mri/rdoc/test_rdoc_generator_ri.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocGeneratorRI < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_i18n_locale.rb b/test/mri/rdoc/test_rdoc_i18n_locale.rb
index ff9836f9a6d..c936a7219fc 100644
--- a/test/mri/rdoc/test_rdoc_i18n_locale.rb
+++ b/test/mri/rdoc/test_rdoc_i18n_locale.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocI18nLocale < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_i18n_text.rb b/test/mri/rdoc/test_rdoc_i18n_text.rb
index be5ff581f50..beb9f307a7a 100644
--- a/test/mri/rdoc/test_rdoc_i18n_text.rb
+++ b/test/mri/rdoc/test_rdoc_i18n_text.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocI18nText < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markdown.rb b/test/mri/rdoc/test_rdoc_markdown.rb
index 99f8abf5ab7..8b58150f8a2 100644
--- a/test/mri/rdoc/test_rdoc_markdown.rb
+++ b/test/mri/rdoc/test_rdoc_markdown.rb
@@ -1,7 +1,7 @@
 # coding: UTF-8
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
 require 'rdoc/markup/block_quote'
 require 'rdoc/markdown'
 
diff --git a/test/mri/rdoc/test_rdoc_markdown_test.rb b/test/mri/rdoc/test_rdoc_markdown_test.rb
index 8664ac45a0e..6445fb5e654 100644
--- a/test/mri/rdoc/test_rdoc_markdown_test.rb
+++ b/test/mri/rdoc/test_rdoc_markdown_test.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'minitest/autorun'
+require 'minitest_helper'
 require 'pp'
 
 require 'rdoc'
diff --git a/test/mri/rdoc/test_rdoc_markup.rb b/test/mri/rdoc/test_rdoc_markup.rb
index 8e4e8b968e9..2812a2994f5 100644
--- a/test/mri/rdoc/test_rdoc_markup.rb
+++ b/test/mri/rdoc/test_rdoc_markup.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkup < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_attribute_manager.rb b/test/mri/rdoc/test_rdoc_markup_attribute_manager.rb
index a939623e010..d6eccdf76f2 100644
--- a/test/mri/rdoc/test_rdoc_markup_attribute_manager.rb
+++ b/test/mri/rdoc/test_rdoc_markup_attribute_manager.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupAttributeManager < RDoc::TestCase
 
@@ -36,12 +36,12 @@ def setup
   end
 
   def crossref(text)
-    crossref_bitmap = @am.attributes.bitmap_for(:_SPECIAL_) |
+    crossref_bitmap = @am.attributes.bitmap_for(:_REGEXP_HANDLING_) |
                       @am.attributes.bitmap_for(:CROSSREF)
 
-    [ @am.changed_attribute_by_name([], [:CROSSREF, :_SPECIAL_]),
-      RDoc::Markup::Special.new(crossref_bitmap, text),
-      @am.changed_attribute_by_name([:CROSSREF, :_SPECIAL_], [])
+    [ @am.changed_attribute_by_name([], [:CROSSREF, :_REGEXP_HANDLING_]),
+      RDoc::Markup::RegexpHandling.new(crossref_bitmap, text),
+      @am.changed_attribute_by_name([:CROSSREF, :_REGEXP_HANDLING_], [])
     ]
   end
 
@@ -58,12 +58,12 @@ def test_add_html_tag
     assert(tags.has_key?("test"))
   end
 
-  def test_add_special
-    @am.add_special "WikiWord", :WIKIWORD
-    specials = @am.special
+  def test_add_regexp_handling
+    @am.add_regexp_handling "WikiWord", :WIKIWORD
+    regexp_handlings = @am.regexp_handlings
 
-    assert_equal 1, specials.size
-    assert specials.assoc "WikiWord"
+    assert_equal 1, regexp_handlings.size
+    assert regexp_handlings.assoc "WikiWord"
   end
 
   def test_add_word_pair
@@ -340,8 +340,8 @@ def test_lost_tag_for_the_second_time
                  @am.flow(str))
   end
 
-  def test_special
-    @am.add_special(RDoc::CrossReference::CROSSREF_REGEXP, :CROSSREF)
+  def test_regexp_handling
+    @am.add_regexp_handling(RDoc::CrossReference::CROSSREF_REGEXP, :CROSSREF)
 
     #
     # The apostrophes in "cats'" and "dogs'" suppress the flagging of these
diff --git a/test/mri/rdoc/test_rdoc_markup_attributes.rb b/test/mri/rdoc/test_rdoc_markup_attributes.rb
index 1fad62208c1..e592fa7145d 100644
--- a/test/mri/rdoc/test_rdoc_markup_attributes.rb
+++ b/test/mri/rdoc/test_rdoc_markup_attributes.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupAttributes < RDoc::TestCase
 
@@ -19,10 +19,10 @@ def test_as_string
     @as.bitmap_for 'two'
     @as.bitmap_for 'three'
 
-    assert_equal 'none',          @as.as_string(0)
-    assert_equal '_SPECIAL_',     @as.as_string(1)
-    assert_equal 'two',           @as.as_string(2)
-    assert_equal '_SPECIAL_,two', @as.as_string(3)
+    assert_equal 'none',                  @as.as_string(0)
+    assert_equal '_REGEXP_HANDLING_',     @as.as_string(1)
+    assert_equal 'two',                   @as.as_string(2)
+    assert_equal '_REGEXP_HANDLING_,two', @as.as_string(3)
   end
 
   def test_each_name_of
diff --git a/test/mri/rdoc/test_rdoc_markup_document.rb b/test/mri/rdoc/test_rdoc_markup_document.rb
index d817f1b9aad..82029162386 100644
--- a/test/mri/rdoc/test_rdoc_markup_document.rb
+++ b/test/mri/rdoc/test_rdoc_markup_document.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupDocument < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_formatter.rb b/test/mri/rdoc/test_rdoc_markup_formatter.rb
index 0e7f72fb16d..cdc5944cdf4 100644
--- a/test/mri/rdoc/test_rdoc_markup_formatter.rb
+++ b/test/mri/rdoc/test_rdoc_markup_formatter.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupFormatter < RDoc::TestCase
 
@@ -19,8 +19,8 @@ def attributes text
       convert_flow @am.flow text.dup
     end
 
-    def handle_special_CAPS special
-      "handled #{special.text}"
+    def handle_regexp_CAPS target
+      "handled #{target.text}"
     end
 
     def start_accepting
@@ -37,16 +37,16 @@ def setup
     super
 
     @markup = @RM.new
-    @markup.add_special(/[A-Z]+/, :CAPS)
+    @markup.add_regexp_handling(/[A-Z]+/, :CAPS)
 
     @attribute_manager = @markup.attribute_manager
     @attributes = @attribute_manager.attributes
 
     @to = ToTest.new @markup
 
-    @caps    = @attributes.bitmap_for :CAPS
-    @special = @attributes.bitmap_for :_SPECIAL_
-    @tt      = @attributes.bitmap_for :TT
+    @caps            = @attributes.bitmap_for :CAPS
+    @regexp_handling = @attributes.bitmap_for :_REGEXP_HANDLING_
+    @tt              = @attributes.bitmap_for :TT
   end
 
   def test_class_gen_relative_url
@@ -62,19 +62,19 @@ def gen(from, to)
     assert_equal 'a/c.html',  gen('a.html',   'a/c.html')
   end
 
-  def special_names
-    @attribute_manager.special.map do |_, mask|
+  def regexp_handling_names
+    @attribute_manager.regexp_handlings.map do |_, mask|
       @attributes.as_string mask
     end
   end
 
-  def test_add_special_RDOCLINK
-    @to.add_special_RDOCLINK
+  def test_add_regexp_handling_RDOCLINK
+    @to.add_regexp_handling_RDOCLINK
 
-    assert_includes special_names, 'RDOCLINK'
+    assert_includes regexp_handling_names, 'RDOCLINK'
 
-    def @to.handle_special_RDOCLINK special
-      "<#{special.text}>"
+    def @to.handle_regexp_RDOCLINK target
+      "<#{target.text}>"
     end
 
     document = doc(para('{foo}[rdoc-label:bar].'))
@@ -84,13 +84,13 @@ def @to.handle_special_RDOCLINK special
     assert_equal '{foo}[<rdoc-label:bar>].', formatted
   end
 
-  def test_add_special_TIDYLINK
-    @to.add_special_TIDYLINK
+  def test_add_regexp_handling_TIDYLINK
+    @to.add_regexp_handling_TIDYLINK
 
-    assert_includes special_names, 'TIDYLINK'
+    assert_includes regexp_handling_names, 'TIDYLINK'
 
-    def @to.handle_special_TIDYLINK special
-      "<#{special.text}>"
+    def @to.handle_regexp_TIDYLINK target
+      "<#{target.text}>"
     end
 
     document = doc(para('foo[rdoc-label:bar].'))
@@ -111,15 +111,15 @@ def test_parse_url
 
     assert_equal 'http',        scheme
     assert_equal 'example/foo', url
-    assert_equal nil,           id
+    assert_nil   id
   end
 
   def test_parse_url_anchor
     scheme, url, id = @to.parse_url '#foottext-1'
 
-    assert_equal nil,           scheme
+    assert_nil   scheme
     assert_equal '#foottext-1', url
-    assert_equal nil,           id
+    assert_nil   id
   end
 
   def test_parse_url_link
@@ -127,7 +127,7 @@ def test_parse_url_link
 
     assert_equal 'link',       scheme
     assert_equal 'README.txt', url
-    assert_equal nil,          id
+    assert_nil   id
   end
 
   def test_parse_url_link_id
@@ -135,7 +135,7 @@ def test_parse_url_link_id
 
     assert_equal 'link',                 scheme
     assert_equal 'README.txt#label-foo', url
-    assert_equal nil,                    id
+    assert_nil   id
   end
 
   def test_parse_url_rdoc_label
@@ -143,7 +143,7 @@ def test_parse_url_rdoc_label
 
     assert_equal 'link', scheme
     assert_equal '#foo', url
-    assert_equal nil,    id
+    assert_nil   id
 
     scheme, url, id = @to.parse_url 'rdoc-label:foo:bar'
 
@@ -157,20 +157,19 @@ def test_parse_url_scheme
 
     assert_equal 'http',               scheme
     assert_equal 'http://example/foo', url
-    assert_equal nil,                  id
+    assert_nil   id
 
     scheme, url, id = @to.parse_url 'https://example/foo'
 
     assert_equal 'https',               scheme
     assert_equal 'https://example/foo', url
-    assert_equal nil,                   id
+    assert_nil   id
   end
 
-  def test_convert_tt_special
+  def test_convert_tt_regexp_handling
     converted = @to.convert '<code>AAA</code>'
 
     assert_equal '<code>AAA</code>', converted
   end
 
 end
-
diff --git a/test/mri/rdoc/test_rdoc_markup_hard_break.rb b/test/mri/rdoc/test_rdoc_markup_hard_break.rb
index d93d52eeda7..1d6c8927b58 100644
--- a/test/mri/rdoc/test_rdoc_markup_hard_break.rb
+++ b/test/mri/rdoc/test_rdoc_markup_hard_break.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupHardBreak < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_heading.rb b/test/mri/rdoc/test_rdoc_markup_heading.rb
index 33e29e90e6b..4508561a791 100644
--- a/test/mri/rdoc/test_rdoc_markup_heading.rb
+++ b/test/mri/rdoc/test_rdoc_markup_heading.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupHeading < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_include.rb b/test/mri/rdoc/test_rdoc_markup_include.rb
index 28712fa7ed8..6b2d5702860 100644
--- a/test/mri/rdoc/test_rdoc_markup_include.rb
+++ b/test/mri/rdoc/test_rdoc_markup_include.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupInclude < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_indented_paragraph.rb b/test/mri/rdoc/test_rdoc_markup_indented_paragraph.rb
index 53d44dcec20..06dcb253577 100644
--- a/test/mri/rdoc/test_rdoc_markup_indented_paragraph.rb
+++ b/test/mri/rdoc/test_rdoc_markup_indented_paragraph.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupIndentedParagraph < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_paragraph.rb b/test/mri/rdoc/test_rdoc_markup_paragraph.rb
index dce3ed8efd5..00e4320119a 100644
--- a/test/mri/rdoc/test_rdoc_markup_paragraph.rb
+++ b/test/mri/rdoc/test_rdoc_markup_paragraph.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupParagraph < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_parser.rb b/test/mri/rdoc/test_rdoc_markup_parser.rb
index fa4730a06f0..344d67df398 100644
--- a/test/mri/rdoc/test_rdoc_markup_parser.rb
+++ b/test/mri/rdoc/test_rdoc_markup_parser.rb
@@ -1,7 +1,7 @@
 # coding: utf-8
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupParser < RDoc::TestCase
 
@@ -1045,6 +1045,41 @@ def test_parse_whitespace
     assert_equal expected, @RMP.parse("  1\n   2\n\n    3").parts
   end
 
+  def test_parse_block_quote
+    expected = [
+      @RM::BlockQuote.new(@RM::Paragraph.new("foo"))
+    ]
+    assert_equal expected, @RMP.parse(<<-DOC).parts
+>>>
+  foo
+    DOC
+
+    expected = [
+      @RM::BlockQuote.new(@RM::Paragraph.new("foo"),
+                          @RM::Verbatim.new("code\n"),
+                          @RM::Paragraph.new("bar"))
+    ]
+    assert_equal expected, @RMP.parse(<<-DOC).parts
+>>>
+  foo
+    code
+  bar
+    DOC
+
+    expected = [
+      @RM::BlockQuote.new(@RM::Paragraph.new("foo"),
+                          @RM::BlockQuote.new(@RM::Paragraph.new("bar")),
+                          @RM::Paragraph.new("zot"))
+    ]
+    assert_equal expected, @RMP.parse(<<-DOC).parts
+>>>
+  foo
+  >>>
+    bar
+  zot
+    DOC
+  end
+
   def test_peek_token
     parser = util_parser
 
@@ -1068,7 +1103,7 @@ def test_skip
 
     assert_equal [:NEWLINE, "\n", 9, 0], parser.peek_token
 
-    assert_equal nil, parser.skip(:NONE, false)
+    assert_nil parser.skip(:NONE, false)
 
     assert_equal [:NEWLINE, "\n", 9, 0], parser.peek_token
   end
diff --git a/test/mri/rdoc/test_rdoc_markup_pre_process.rb b/test/mri/rdoc/test_rdoc_markup_pre_process.rb
index 887ff6de9c6..60ec75c19e0 100644
--- a/test/mri/rdoc/test_rdoc_markup_pre_process.rb
+++ b/test/mri/rdoc/test_rdoc_markup_pre_process.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupPreProcess < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_raw.rb b/test/mri/rdoc/test_rdoc_markup_raw.rb
index aaf4e484394..95de62208a4 100644
--- a/test/mri/rdoc/test_rdoc_markup_raw.rb
+++ b/test/mri/rdoc/test_rdoc_markup_raw.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupRaw < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_to_ansi.rb b/test/mri/rdoc/test_rdoc_markup_to_ansi.rb
index d06ad98fa3f..4c312e79722 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_ansi.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_ansi.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToAnsi < RDoc::Markup::TextFormatterTestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_to_bs.rb b/test/mri/rdoc/test_rdoc_markup_to_bs.rb
index 9b798c92b3b..f2697903572 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_bs.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_bs.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToBs < RDoc::Markup::TextFormatterTestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_to_html.rb b/test/mri/rdoc/test_rdoc_markup_to_html.rb
index fa5828a007f..c30c89a7e3b 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_html.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_html.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToHtml < RDoc::Markup::FormatterTestCase
 
@@ -395,7 +395,7 @@ def test_accept_paragraph_newline
 
     @to.accept_paragraph para("hello\n", "world\n")
 
-    assert_equal "\n<p>hello world</p>\n", @to.res.join
+    assert_equal "\n<p>hello world </p>\n", @to.res.join
   end
 
   def test_accept_heading_output_decoration
@@ -727,18 +727,18 @@ def test_gen_url_ssl_image_url
     assert_equal '<img src="https://example.com/image.png" />', @to.gen_url('https://example.com/image.png', 'ignored')
   end
 
-  def test_handle_special_HYPERLINK_link
-    special = RDoc::Markup::Special.new 0, 'link:README.txt'
+  def test_handle_regexp_HYPERLINK_link
+    target = RDoc::Markup::RegexpHandling.new 0, 'link:README.txt'
 
-    link = @to.handle_special_HYPERLINK special
+    link = @to.handle_regexp_HYPERLINK target
 
     assert_equal '<a href="README.txt">README.txt</a>', link
   end
 
-  def test_handle_special_HYPERLINK_irc
-    special = RDoc::Markup::Special.new 0, 'irc://irc.freenode.net/#ruby-lang'
+  def test_handle_regexp_HYPERLINK_irc
+    target = RDoc::Markup::RegexpHandling.new 0, 'irc://irc.freenode.net/#ruby-lang'
 
-    link = @to.handle_special_HYPERLINK special
+    link = @to.handle_regexp_HYPERLINK target
 
     assert_equal '<a href="irc://irc.freenode.net/#ruby-lang">irc.freenode.net/#ruby-lang</a>', link
   end
diff --git a/test/mri/rdoc/test_rdoc_markup_to_html_crossref.rb b/test/mri/rdoc/test_rdoc_markup_to_html_crossref.rb
index 73b76de4d93..598bae3d3f5 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_html_crossref.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_html_crossref.rb
@@ -14,26 +14,26 @@ def setup
   def test_convert_CROSSREF
     result = @to.convert 'C1'
 
-    assert_equal para("<a href=\"C1.html\">C1</a>"), result
+    assert_equal para("<a href=\"C1.html\"><code>C1</code></a>"), result
   end
 
   def test_convert_CROSSREF_label
     result = @to.convert 'C1@foo'
-    assert_equal para("<a href=\"C1.html#label-foo\">foo at C1</a>"), result
+    assert_equal para("<a href=\"C1.html#label-foo\">foo at <code>C1</code></a>"), result
 
     result = @to.convert 'C1#m@foo'
-    assert_equal para("<a href=\"C1.html#method-i-m-label-foo\">foo at C1#m</a>"),
+    assert_equal para("<a href=\"C1.html#method-i-m-label-foo\">foo at <code>C1#m</code></a>"),
                  result
   end
 
   def test_convert_CROSSREF_label_period
     result = @to.convert 'C1@foo.'
-    assert_equal para("<a href=\"C1.html#label-foo\">foo at C1</a>."), result
+    assert_equal para("<a href=\"C1.html#label-foo\">foo at <code>C1</code></a>."), result
   end
 
   def test_convert_CROSSREF_label_space
     result = @to.convert 'C1@foo+bar'
-    assert_equal para("<a href=\"C1.html#label-foo+bar\">foo bar at C1</a>"),
+    assert_equal para("<a href=\"C1.html#label-foo+bar\">foo bar at <code>C1</code></a>"),
                  result
   end
 
@@ -41,31 +41,31 @@ def test_convert_CROSSREF_section
     @c1.add_section 'Section'
 
     result = @to.convert 'C1@Section'
-    assert_equal para("<a href=\"C1.html#Section\">Section at C1</a>"), result
+    assert_equal para("<a href=\"C1.html#Section\">Section at <code>C1</code></a>"), result
   end
 
   def test_convert_CROSSREF_constant
     result = @to.convert 'C1::CONST'
 
-    assert_equal para("<a href=\"C1.html#CONST\">C1::CONST</a>"), result
+    assert_equal para("<a href=\"C1.html#CONST\"><code>C1::CONST</code></a>"), result
   end
 
   def test_convert_RDOCLINK_rdoc_ref
     result = @to.convert 'rdoc-ref:C1'
 
-    assert_equal para("<a href=\"C1.html\">C1</a>"), result
+    assert_equal para("<a href=\"C1.html\"><code>C1</code></a>"), result
   end
 
   def test_convert_RDOCLINK_rdoc_ref_method
     result = @to.convert 'rdoc-ref:C1#m'
 
-    assert_equal para("<a href=\"C1.html#method-i-m\">#m</a>"), result
+    assert_equal para("<a href=\"C1.html#method-i-m\"><code>C1#m</code></a>"), result
   end
 
   def test_convert_RDOCLINK_rdoc_ref_method_label
     result = @to.convert 'rdoc-ref:C1#m@foo'
 
-    assert_equal para("<a href=\"C1.html#method-i-m-label-foo\">foo at C1#m</a>"),
+    assert_equal para("<a href=\"C1.html#method-i-m-label-foo\">foo at <code>C1#m</code></a>"),
                  result, 'rdoc-ref:C1#m@foo'
   end
 
@@ -75,13 +75,13 @@ def test_convert_RDOCLINK_rdoc_ref_method_percent
 
     result = @to.convert 'rdoc-ref:C1#%'
 
-    assert_equal para("<a href=\"C1.html#method-i-25\">#%</a>"), result
+    assert_equal para("<a href=\"C1.html#method-i-25\"><code>C1#%</code></a>"), result
 
     m.singleton = true
 
     result = @to.convert 'rdoc-ref:C1::%'
 
-    assert_equal para("<a href=\"C1.html#method-c-25\">::%</a>"), result
+    assert_equal para("<a href=\"C1.html#method-c-25\"><code>C1::%</code></a>"), result
   end
 
   def test_convert_RDOCLINK_rdoc_ref_method_percent_label
@@ -90,21 +90,21 @@ def test_convert_RDOCLINK_rdoc_ref_method_percent_label
 
     result = @to.convert 'rdoc-ref:C1#%@f'
 
-    assert_equal para("<a href=\"C1.html#method-i-25-label-f\">f at C1#%</a>"),
+    assert_equal para("<a href=\"C1.html#method-i-25-label-f\">f at <code>C1#%</code></a>"),
                  result
 
     m.singleton = true
 
     result = @to.convert 'rdoc-ref:C1::%@f'
 
-    assert_equal para("<a href=\"C1.html#method-c-25-label-f\">f at C1::%</a>"),
+    assert_equal para("<a href=\"C1.html#method-c-25-label-f\">f at <code>C1::%</code></a>"),
                  result
   end
 
   def test_convert_RDOCLINK_rdoc_ref_label
     result = @to.convert 'rdoc-ref:C1@foo'
 
-    assert_equal para("<a href=\"C1.html#label-foo\">foo at C1</a>"), result,
+    assert_equal para("<a href=\"C1.html#label-foo\">foo at <code>C1</code></a>"), result,
                  'rdoc-ref:C1@foo'
   end
 
@@ -116,66 +116,66 @@ def test_gen_url
                  @to.gen_url('http://example', 'HTTP example')
   end
 
-  def test_handle_special_CROSSREF
-    assert_equal "<a href=\"C2/C3.html\">C2::C3</a>", SPECIAL('C2::C3')
+  def test_handle_regexp_CROSSREF
+    assert_equal "<a href=\"C2/C3.html\"><code>C2::C3</code></a>", REGEXP_HANDLING('C2::C3')
   end
 
-  def test_handle_special_CROSSREF_label
-    assert_equal "<a href=\"C1.html#method-i-m-label-foo\">foo at C1#m</a>",
-                  SPECIAL('C1#m@foo')
+  def test_handle_regexp_CROSSREF_label
+    assert_equal "<a href=\"C1.html#method-i-m-label-foo\">foo at <code>C1#m</code></a>",
+                 REGEXP_HANDLING('C1#m@foo')
   end
 
-  def test_handle_special_CROSSREF_show_hash_false
+  def test_handle_regexp_CROSSREF_show_hash_false
     @to.show_hash = false
 
-    assert_equal "<a href=\"C1.html#method-i-m\">m</a>",
-                 SPECIAL('#m')
+    assert_equal "<a href=\"C1.html#method-i-m\"><code>m</code></a>",
+                 REGEXP_HANDLING('#m')
   end
 
-  def test_handle_special_HYPERLINK_rdoc
+  def test_handle_regexp_HYPERLINK_rdoc
     readme = @store.add_file 'README.txt'
     readme.parser = RDoc::Parser::Simple
 
     @to = RDoc::Markup::ToHtmlCrossref.new @options, 'C2.html', @c2
 
-    link = @to.handle_special_HYPERLINK hyper 'C2::C3'
+    link = @to.handle_regexp_HYPERLINK hyper 'C2::C3'
 
-    assert_equal '<a href="C2/C3.html">C2::C3</a>', link
+    assert_equal '<a href="C2/C3.html"><code>C2::C3</code></a>', link
 
-    link = @to.handle_special_HYPERLINK hyper 'C4'
+    link = @to.handle_regexp_HYPERLINK hyper 'C4'
 
-    assert_equal '<a href="C4.html">C4</a>', link
+    assert_equal '<a href="C4.html"><code>C4</code></a>', link
 
-    link = @to.handle_special_HYPERLINK hyper 'README.txt'
+    link = @to.handle_regexp_HYPERLINK hyper 'README.txt'
 
     assert_equal '<a href="README_txt.html">README.txt</a>', link
   end
 
-  def test_handle_special_TIDYLINK_rdoc
+  def test_handle_regexp_TIDYLINK_rdoc
     readme = @store.add_file 'README.txt'
     readme.parser = RDoc::Parser::Simple
 
     @to = RDoc::Markup::ToHtmlCrossref.new @options, 'C2.html', @c2
 
-    link = @to.handle_special_TIDYLINK tidy 'C2::C3'
+    link = @to.handle_regexp_TIDYLINK tidy 'C2::C3'
 
     assert_equal '<a href="C2/C3.html">tidy</a>', link
 
-    link = @to.handle_special_TIDYLINK tidy 'C4'
+    link = @to.handle_regexp_TIDYLINK tidy 'C4'
 
     assert_equal '<a href="C4.html">tidy</a>', link
 
-    link = @to.handle_special_TIDYLINK tidy 'C1#m'
+    link = @to.handle_regexp_TIDYLINK tidy 'C1#m'
 
     assert_equal '<a href="C1.html#method-i-m">tidy</a>', link
 
-    link = @to.handle_special_TIDYLINK tidy 'README.txt'
+    link = @to.handle_regexp_TIDYLINK tidy 'README.txt'
 
     assert_equal '<a href="README_txt.html">tidy</a>', link
   end
 
-  def test_handle_special_TIDYLINK_label
-    link = @to.handle_special_TIDYLINK tidy 'C1#m@foo'
+  def test_handle_regexp_TIDYLINK_label
+    link = @to.handle_regexp_TIDYLINK tidy 'C1#m@foo'
 
     assert_equal "<a href=\"C1.html#method-i-m-label-foo\">tidy</a>",
                  link, 'C1#m@foo'
@@ -200,11 +200,16 @@ def test_to_html_CROSSREF_email_hyperlink_all
   def test_link
     assert_equal 'n', @to.link('n', 'n')
 
-    assert_equal '<a href="C1.html#method-c-m">::m</a>', @to.link('m', 'm')
+    assert_equal '<a href="C1.html#method-c-m"><code>m</code></a>', @to.link('m', 'm')
+  end
+
+  def test_link_for_method_traverse
+    @to = RDoc::Markup::ToHtmlCrossref.new @options, 'C2.html', @c9
+    assert_equal '<a href="C9/A.html#method-i-foo"><code>C9::B#foo</code></a>', @to.link('C9::B#foo', 'C9::B#foo')
   end
 
   def test_link_class_method_full
-    assert_equal '<a href="Parent.html#method-c-m">Parent.m</a>',
+    assert_equal '<a href="Parent.html#method-c-m"><code>Parent::m</code></a>',
                  @to.link('Parent::m', 'Parent::m')
   end
 
@@ -212,20 +217,20 @@ def para text
     "\n<p>#{text}</p>\n"
   end
 
-  def SPECIAL text
-    @to.handle_special_CROSSREF special text
+  def REGEXP_HANDLING text
+    @to.handle_regexp_CROSSREF regexp_handling text
   end
 
   def hyper reference
-    RDoc::Markup::Special.new 0, "rdoc-ref:#{reference}"
+    RDoc::Markup::RegexpHandling.new 0, "rdoc-ref:#{reference}"
   end
 
-  def special text
-    RDoc::Markup::Special.new 0, text
+  def regexp_handling text
+    RDoc::Markup::RegexpHandling.new 0, text
   end
 
   def tidy reference
-    RDoc::Markup::Special.new 0, "{tidy}[rdoc-ref:#{reference}]"
+    RDoc::Markup::RegexpHandling.new 0, "{tidy}[rdoc-ref:#{reference}]"
   end
 
 end
diff --git a/test/mri/rdoc/test_rdoc_markup_to_html_snippet.rb b/test/mri/rdoc/test_rdoc_markup_to_html_snippet.rb
index d7ce2119993..7e01413ddac 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_html_snippet.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_html_snippet.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToHtmlSnippet < RDoc::Markup::FormatterTestCase
 
@@ -458,8 +458,7 @@ def test_convert_limit
 
     expected = <<-EXPECTED
 <p>Hello
-<p>This is some text, it <strong>will</strong> be cut off after 100 characters
-and an ellipsis must follow
+<p>This is some text, it <strong>will</strong> be cut off after 100 characters and an ellipsis must follow
 <p>So there you #{@ellipsis}
     EXPECTED
 
@@ -563,8 +562,7 @@ def test_convert_limit_verbatim_2
     RDOC
 
     expected = <<-EXPECTED
-<p>Extracts the class, selector and method name parts from <code>name</code>
-like Foo::Bar#baz.
+<p>Extracts the class, selector and method name parts from <code>name</code> like Foo::Bar#baz.
 <p>NOTE: Given Foo::Bar, #{@ellipsis}
     EXPECTED
 
@@ -652,10 +650,10 @@ def test_convert_TIDYLINK_rdoc_label
     assert_equal 3, @to.characters
   end
 
-  def test_handle_special_HYPERLINK_link
-    special = RDoc::Markup::Special.new 0, 'link:README.txt'
+  def test_handle_regexp_HYPERLINK_link
+    target = RDoc::Markup::RegexpHandling.new 0, 'link:README.txt'
 
-    link = @to.handle_special_HYPERLINK special
+    link = @to.handle_regexp_HYPERLINK target
 
     assert_equal 'README.txt', link
   end
diff --git a/test/mri/rdoc/test_rdoc_markup_to_joined_paragraph.rb b/test/mri/rdoc/test_rdoc_markup_to_joined_paragraph.rb
index 0a6a864bfae..b4eed5f601b 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_joined_paragraph.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_joined_paragraph.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToJoinedParagraph < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_to_label.rb b/test/mri/rdoc/test_rdoc_markup_to_label.rb
index 23ab8cbfab5..b869745528d 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_label.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_label.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToLabel < RDoc::Markup::FormatterTestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_to_markdown.rb b/test/mri/rdoc/test_rdoc_markup_to_markdown.rb
index f5ea8d05da8..9c5b6d3e574 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_markdown.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_markdown.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToMarkdown < RDoc::Markup::TextFormatterTestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_to_rdoc.rb b/test/mri/rdoc/test_rdoc_markup_to_rdoc.rb
index 31761eb44d3..e81bc2f1adb 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_rdoc.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_rdoc.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToRDoc < RDoc::Markup::TextFormatterTestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_to_table_of_contents.rb b/test/mri/rdoc/test_rdoc_markup_to_table_of_contents.rb
index f21dbfe7487..bfeb2d6f58b 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_table_of_contents.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_table_of_contents.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToTableOfContents < RDoc::Markup::FormatterTestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_to_tt_only.rb b/test/mri/rdoc/test_rdoc_markup_to_tt_only.rb
index b08362cd0b0..856eb592c56 100644
--- a/test/mri/rdoc/test_rdoc_markup_to_tt_only.rb
+++ b/test/mri/rdoc/test_rdoc_markup_to_tt_only.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupToTtOnly < RDoc::Markup::FormatterTestCase
 
diff --git a/test/mri/rdoc/test_rdoc_markup_verbatim.rb b/test/mri/rdoc/test_rdoc_markup_verbatim.rb
index 3b05100a33f..88ca4906bbd 100644
--- a/test/mri/rdoc/test_rdoc_markup_verbatim.rb
+++ b/test/mri/rdoc/test_rdoc_markup_verbatim.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocMarkupVerbatim < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_options.rb b/test/mri/rdoc/test_rdoc_options.rb
index 400ed9a5491..baef2d860e7 100644
--- a/test/mri/rdoc/test_rdoc_options.rb
+++ b/test/mri/rdoc/test_rdoc_options.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocOptions < RDoc::TestCase
 
@@ -18,7 +18,7 @@ def teardown
 
   def test_check_files
     skip "assumes UNIX permission model" if /mswin|mingw/ =~ RUBY_PLATFORM
-    skip "skipped in root privilege" if Process.uid == 0
+    skip "assumes that euid is not root" if Process.euid == 0
 
     out, err = capture_io do
       temp_dir do
diff --git a/test/mri/rdoc/test_rdoc_parser.rb b/test/mri/rdoc/test_rdoc_parser.rb
index 5d4da7e4250..2638adcd151 100644
--- a/test/mri/rdoc/test_rdoc_parser.rb
+++ b/test/mri/rdoc/test_rdoc_parser.rb
@@ -1,7 +1,7 @@
 # -*- coding: us-ascii -*-
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocParser < RDoc::TestCase
 
@@ -19,7 +19,7 @@ def setup
   def test_class_binary_eh_ISO_2022_JP
     iso_2022_jp = File.join Dir.tmpdir, "test_rdoc_parser_#{$$}.rd"
 
-    open iso_2022_jp, 'wb' do |io|
+    File.open iso_2022_jp, 'wb' do |io|
       io.write "# coding: ISO-2022-JP\n"
       io.write ":\e$B%3%^%s%I\e(B:\n"
     end
@@ -31,7 +31,7 @@ def test_class_binary_eh_ISO_2022_JP
 
   def test_class_binary_eh_marshal
     marshal = File.join Dir.tmpdir, "test_rdoc_parser_#{$$}.marshal"
-    open marshal, 'wb' do |io|
+    File.open marshal, 'wb' do |io|
       io.write Marshal.dump('')
       io.write 'lots of text ' * 500
     end
@@ -92,7 +92,7 @@ def test_class_can_parse
   def test_class_for_executable
     temp_dir do
       content = "#!/usr/bin/env ruby -w\n"
-      open 'app', 'w' do |io| io.write content end
+      File.open 'app', 'w' do |io| io.write content end
       app = @store.add_file 'app'
 
       parser = @RP.for app, 'app', content, @options, :stats
@@ -126,7 +126,7 @@ def test_class_for_modeline
     temp_dir do
       content = "# -*- rdoc -*-\n= NEWS\n"
 
-      open 'NEWS', 'w' do |io| io.write content end
+      File.open 'NEWS', 'w' do |io| io.write content end
       app = @store.add_file 'NEWS'
 
       parser = @RP.for app, 'NEWS', content, @options, :stats
@@ -140,7 +140,7 @@ def test_class_for_modeline
   def test_can_parse_modeline
     readme_ext = File.join Dir.tmpdir, "README.EXT.#{$$}"
 
-    open readme_ext, 'w' do |io|
+    File.open readme_ext, 'w' do |io|
       io.puts "# README.EXT -  -*- rdoc -*- created at: Mon Aug 7 16:45:54 JST 1995"
       io.puts
       io.puts "This document explains how to make extension libraries for Ruby."
@@ -162,7 +162,7 @@ def test_class_can_parse_zip
   def test_check_modeline
     readme_ext = File.join Dir.tmpdir, "README.EXT.#{$$}"
 
-    open readme_ext, 'w' do |io|
+    File.open readme_ext, 'w' do |io|
       io.puts "# README.EXT -  -*- RDoc -*- created at: Mon Aug 7 16:45:54 JST 1995"
       io.puts
       io.puts "This document explains how to make extension libraries for Ruby."
@@ -176,7 +176,7 @@ def test_check_modeline
   def test_check_modeline_coding
     readme_ext = File.join Dir.tmpdir, "README.EXT.#{$$}"
 
-    open readme_ext, 'w' do |io|
+    File.open readme_ext, 'w' do |io|
       io.puts "# -*- coding: utf-8 -*-"
     end
 
@@ -188,7 +188,7 @@ def test_check_modeline_coding
   def test_check_modeline_with_other
     readme_ext = File.join Dir.tmpdir, "README.EXT.#{$$}"
 
-    open readme_ext, 'w' do |io|
+    File.open readme_ext, 'w' do |io|
       io.puts "# README.EXT -  -*- mode: RDoc; indent-tabs-mode: nil -*-"
       io.puts
       io.puts "This document explains how to make extension libraries for Ruby."
@@ -202,7 +202,7 @@ def test_check_modeline_with_other
   def test_check_modeline_no_modeline
     readme_ext = File.join Dir.tmpdir, "README.EXT.#{$$}"
 
-    open readme_ext, 'w' do |io|
+    File.open readme_ext, 'w' do |io|
       io.puts "This document explains how to make extension libraries for Ruby."
     end
 
diff --git a/test/mri/rdoc/test_rdoc_parser_c.rb b/test/mri/rdoc/test_rdoc_parser_c.rb
index 2cc8ddf79ae..3d30d767dfb 100644
--- a/test/mri/rdoc/test_rdoc_parser_c.rb
+++ b/test/mri/rdoc/test_rdoc_parser_c.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 =begin
   TODO: test call-seq parsing
@@ -327,7 +327,7 @@ def test_do_classes_boot_class_nil
 
     klass = util_get_class content, 'cFoo'
     assert_equal "this is the Foo boot class", klass.comment.text
-    assert_equal nil, klass.superclass
+    assert_nil klass.superclass
   end
 
   def test_do_aliases_missing_class
@@ -1377,7 +1377,7 @@ def test_find_modifiers_nodoc
 
     parser.find_modifiers comment, method_obj
 
-    assert_equal nil, method_obj.document_self
+    assert_nil method_obj.document_self
   end
 
   def test_find_modifiers_yields
@@ -1630,6 +1630,19 @@ def test_define_method
     assert read_method.singleton
   end
 
+  def test_define_method_dynamically
+    content = <<-EOF
+void
+Init_foo(void)
+{
+    rb_define_singleton_method(obj, "foo", foo, -1);
+}
+    EOF
+
+    klass = util_get_class content, 'obj'
+    assert_nil klass
+  end
+
   def test_define_method_with_prototype
     content = <<-EOF
 static VALUE rb_io_s_read(int, VALUE*, VALUE);
diff --git a/test/mri/rdoc/test_rdoc_parser_changelog.rb b/test/mri/rdoc/test_rdoc_parser_changelog.rb
index 06c3ff206ec..18ea81b34e0 100644
--- a/test/mri/rdoc/test_rdoc_parser_changelog.rb
+++ b/test/mri/rdoc/test_rdoc_parser_changelog.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocParserChangeLog < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_parser_markdown.rb b/test/mri/rdoc/test_rdoc_parser_markdown.rb
index 50893ecf997..30e66e2833b 100644
--- a/test/mri/rdoc/test_rdoc_parser_markdown.rb
+++ b/test/mri/rdoc/test_rdoc_parser_markdown.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocParserMarkdown < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_parser_rd.rb b/test/mri/rdoc/test_rdoc_parser_rd.rb
index e8f4250284a..15112fdb0e5 100644
--- a/test/mri/rdoc/test_rdoc_parser_rd.rb
+++ b/test/mri/rdoc/test_rdoc_parser_rd.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocParserRd < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_parser_ruby.rb b/test/mri/rdoc/test_rdoc_parser_ruby.rb
index e28112fbee8..81883187693 100644
--- a/test/mri/rdoc/test_rdoc_parser_ruby.rb
+++ b/test/mri/rdoc/test_rdoc_parser_ruby.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocParserRuby < RDoc::TestCase
 
@@ -73,7 +73,7 @@ class C; end
 
     comment = parser.collect_first_comment
 
-    assert_equal RDoc::Comment.new("=begin\nfirst\n=end\n", @top_level), comment
+    assert_equal RDoc::Comment.new("first\n", @top_level), comment
   end
 
   def test_get_class_or_module
@@ -231,8 +231,8 @@ def test_look_for_directives_in_commented
     @parser.look_for_directives_in @top_level, comment
 
     section = @top_level.current_section
-    assert_equal nil, section.title
-    assert_equal nil, section.comment
+    assert_nil   section.title
+    assert_nil   section.comment
 
     assert_equal "# how to make a section:\n# # :section: new section\n",
                  comment.text
@@ -306,6 +306,67 @@ def sum(n)
     assert_equal @top_level, sum.file
   end
 
+  def test_parse_on_ignored_nl_with_nil_text
+    util_parser <<ruby
+class Foo
+  def meth
+    variable # comment
+      .chain
+  end
+end
+ruby
+
+    expected = <<EXPECTED
+<span class="ruby-keyword">def</span> <span class="ruby-identifier ruby-title">meth</span>
+  <span class="ruby-identifier">variable</span> <span class="ruby-comment"># comment</span>
+    .<span class="ruby-identifier">chain</span>
+<span class="ruby-keyword">end</span>
+EXPECTED
+    expected = expected.rstrip
+
+    @parser.scan
+
+    foo = @store.find_class_named 'Foo'
+    meth = foo.method_list.first
+
+    assert_equal 'meth',     meth.name
+    assert_equal @top_level, meth.file
+
+    markup_code = meth.markup_code.sub(/^.*\n/, '')
+    assert_equal expected, markup_code
+  end
+
+  def test_parse_redefined_op_with_constant
+    klass = RDoc::NormalClass.new 'Foo'
+    klass.parent = @top_level
+
+    comment = RDoc::Comment.new '', @top_level
+
+    util_parser <<ruby
+def meth
+  Integer::**()
+  return Integer::**()
+  break Integer::**()
+  case Integer::**()
+  when Integer::**()
+  end
+  while Integer::**()
+  end
+  yield Integer::**()
+  defined? Integer::**()
+  if Integer::**()
+  end
+end
+ruby
+
+    tk = @parser.get_tk
+
+    @parser.parse_method klass, RDoc::Parser::Ruby::NORMAL, tk, comment
+
+    meth = klass.method_list.first
+    assert_equal 'meth',     meth.name
+  end
+
   def test_parse_alias
     klass = RDoc::NormalClass.new 'Foo'
     klass.parent = @top_level
@@ -434,6 +495,43 @@ def test_parse_attr_accessor
     assert_equal 'my attr', bar.comment.text
   end
 
+  def test_parse_attr_accessor_with_newline
+    klass = RDoc::NormalClass.new 'Foo'
+    klass.parent = @top_level
+
+    comment = RDoc::Comment.new "##\n# my attr\n", @top_level
+
+    util_parser "attr_accessor :foo, :bar,\n  :baz,\n  :qux"
+
+    tk = @parser.get_tk
+
+    @parser.parse_attr_accessor klass, RDoc::Parser::Ruby::NORMAL, tk, comment
+
+    assert_equal 4, klass.attributes.length
+
+    foo = klass.attributes[0]
+    assert_equal 'foo', foo.name
+    assert_equal 'RW', foo.rw
+    assert_equal 'my attr', foo.comment.text
+    assert_equal @top_level, foo.file
+    assert_equal 1, foo.line
+
+    bar = klass.attributes[1]
+    assert_equal 'bar', bar.name
+    assert_equal 'RW', bar.rw
+    assert_equal 'my attr', bar.comment.text
+
+    bar = klass.attributes[2]
+    assert_equal 'baz', bar.name
+    assert_equal 'RW', bar.rw
+    assert_equal 'my attr', bar.comment.text
+
+    bar = klass.attributes[3]
+    assert_equal 'qux', bar.name
+    assert_equal 'RW', bar.rw
+    assert_equal 'my attr', bar.comment.text
+  end
+
   def test_parse_attr_accessor_nodoc
     klass = RDoc::NormalClass.new 'Foo'
     klass.parent = @top_level
@@ -813,6 +911,31 @@ def test_parse_class_lower_name_warning
     assert_match(/Expected class name or '<<'\. Got/, err)
   end
 
+  def test_parse_syntax_error_code
+    @options.verbosity = 2
+    stds = capture_io do
+      begin
+        util_parser <<INVALID_CODE
+# invalid class name
+class Invalid::@@Code
+end
+INVALID_CODE
+        @parser.scan
+      rescue
+      end
+    end
+    err = stds[1]
+
+    expected = <<EXPECTED
+RDoc::Parser::Ruby failure around line 2 of
+#{@filename}
+
+class Invalid::@@Code
+EXPECTED
+
+    assert_match(expected, err)
+  end
+
   def test_parse_multi_ghost_methods
     util_parser <<-'CLASS'
 class Foo
@@ -1139,7 +1262,7 @@ def test_parse_comment_attr
     assert_equal @top_level, foo.file
     assert_equal 1,          foo.line
 
-    assert_equal nil,        foo.viewer
+    assert_nil               foo.viewer
     assert_equal true,       foo.document_children
     assert_equal true,       foo.document_self
     assert_equal false,      foo.done_documenting
@@ -1202,21 +1325,21 @@ def test_parse_comment_method
     assert_equal @top_level,  foo.file
     assert_equal 1,           foo.line
 
-    assert_equal [],        foo.aliases
-    assert_equal nil,       foo.block_params
-    assert_equal nil,       foo.call_seq
-    assert_equal nil,       foo.is_alias_for
-    assert_equal nil,       foo.viewer
-    assert_equal true,      foo.document_children
-    assert_equal true,      foo.document_self
-    assert_equal '',        foo.params
-    assert_equal false,     foo.done_documenting
-    assert_equal false,     foo.dont_rename_initialize
-    assert_equal false,     foo.force_documentation
-    assert_equal klass,     foo.parent
-    assert_equal false,     foo.singleton
-    assert_equal :public,   foo.visibility
-    assert_equal "\n",      foo.text
+    assert_equal [],          foo.aliases
+    assert_nil                foo.block_params
+    assert_nil                foo.call_seq
+    assert_nil                foo.is_alias_for
+    assert_nil                foo.viewer
+    assert_equal true,        foo.document_children
+    assert_equal true,        foo.document_self
+    assert_equal '',          foo.params
+    assert_equal false,       foo.done_documenting
+    assert_equal false,       foo.dont_rename_initialize
+    assert_equal false,       foo.force_documentation
+    assert_equal klass,       foo.parent
+    assert_equal false,       foo.singleton
+    assert_equal :public,     foo.visibility
+    assert_equal "\n",        foo.text
     assert_equal klass.current_section, foo.section
 
     stream = [
@@ -1227,8 +1350,16 @@ def test_parse_comment_method
       { :line_no => 0, :char_no => 0, :kind => :on_nl, :text => "\n" },
       { :line_no => 1, :char_no => 1, :kind => :on_sp, :text => '' }
     ]
+    parsed_stream = foo.token_stream.map { |t|
+      {
+        :line_no => t[:line_no],
+        :char_no => t[:char_no],
+        :kind => t[:kind],
+        :text => t[:text]
+      }
+    }
 
-    assert_equal stream, foo.token_stream
+    assert_equal stream, parsed_stream
   end
 
   def test_parse_comment_method_args
@@ -1302,6 +1433,9 @@ def test_parse_constant_alias
 
     @parser.parse_constant klass, tk, @comment
 
+    assert_equal [], klass.modules.map(&:full_name)
+    assert_equal ['Foo::B', 'Foo::A'], klass.classes.map(&:full_name)
+    assert_equal ['Foo::A'], klass.constants.map(&:full_name)
     assert_equal 'Foo::A', klass.find_module_named('A').full_name
   end
 
@@ -1516,19 +1650,19 @@ def test_parse_meta_method
     assert_equal 1,           foo.line
 
     assert_equal [],      foo.aliases
-    assert_equal nil,     foo.block_params
-    assert_equal nil,     foo.call_seq
+    assert_nil            foo.block_params
+    assert_nil            foo.call_seq
     assert_equal true,    foo.document_children
     assert_equal true,    foo.document_self
     assert_equal false,   foo.done_documenting
     assert_equal false,   foo.dont_rename_initialize
     assert_equal false,   foo.force_documentation
-    assert_equal nil,     foo.is_alias_for
+    assert_nil            foo.is_alias_for
     assert_equal '',      foo.params
     assert_equal klass,   foo.parent
     assert_equal false,   foo.singleton
     assert_equal 'add_my_method :foo', foo.text
-    assert_equal nil,     foo.viewer
+    assert_nil            foo.viewer
     assert_equal :public, foo.visibility
     assert_equal klass.current_section, foo.section
 
@@ -1726,10 +1860,10 @@ def test_parse_method
     assert_equal 1,           foo.line
 
     assert_equal [],        foo.aliases
-    assert_equal nil,       foo.block_params
-    assert_equal nil,       foo.call_seq
-    assert_equal nil,       foo.is_alias_for
-    assert_equal nil,       foo.viewer
+    assert_nil              foo.block_params
+    assert_nil              foo.call_seq
+    assert_nil              foo.is_alias_for
+    assert_nil              foo.viewer
     assert_equal true,      foo.document_children
     assert_equal true,      foo.document_self
     assert_equal '()',      foo.params
@@ -2221,6 +2355,31 @@ def bar
     assert_equal 'C#bar', methods[1].full_name
   end
 
+  def test_parse_statements_postfix_if_unless_with_expr_mid
+    util_parser <<-CODE
+class A
+  class B
+    def foo
+      return if nil
+    end
+  end
+
+  class C
+  end
+end
+    CODE
+
+    @parser.parse_statements @top_level, RDoc::Parser::Ruby::NORMAL, nil
+
+    a = @top_level.classes.first
+    assert_equal 'A', a.full_name, 'class A'
+    assert_equal 2, a.classes.length
+    b = a.classes[0]
+    assert_equal 'A::B', b.full_name, 'class A::B'
+    c = a.classes[1]
+    assert_equal 'A::C', c.full_name, 'class A::C'
+  end
+
   def test_parse_statements_class_nested
     comment = RDoc::Comment.new "##\n# my method\n", @top_level
 
@@ -2726,6 +2885,35 @@ def blah()
     assert_equal expected, markup_code
   end
 
+  def test_parse_mutable_heredocbeg
+    @filename = 'file.rb'
+    util_parser <<RUBY
+class Foo
+  def blah()
+    @str = -<<-EOM
+    EOM
+  end
+end
+RUBY
+
+    expected = <<EXPECTED
+  <span class="ruby-keyword">def</span> <span class="ruby-identifier ruby-title">blah</span>()
+    <span class="ruby-ivar">@str</span> = <span class="ruby-identifier">-&lt;&lt;-EOM</span>
+<span class="ruby-value"></span><span class="ruby-identifier">    EOM</span>
+  <span class="ruby-keyword">end</span>
+EXPECTED
+    expected = expected.rstrip
+
+    @parser.scan
+
+    foo = @top_level.classes.first
+    assert_equal 'Foo', foo.full_name
+
+    blah = foo.method_list.first
+    markup_code = blah.markup_code.sub(/^.*\n/, '')
+    assert_equal expected, markup_code
+  end
+
   def test_parse_statements_method_oneliner_with_regexp
     util_parser <<RUBY
 class Foo
@@ -2981,12 +3169,12 @@ def test_parse_symbol_in_arg
 
     @parser.skip_tkspace
 
-    assert_equal nil, @parser.parse_symbol_in_arg
+    assert_nil @parser.parse_symbol_in_arg
     @parser.get_tk # skip ','
 
     @parser.skip_tkspace
 
-    assert_equal nil, @parser.parse_symbol_in_arg
+    assert_nil @parser.parse_symbol_in_arg
   end
 
   def test_parse_statements_alias_method
@@ -3090,7 +3278,7 @@ def test_read_directive
     assert_equal 'category', directive
     assert_equal 'test', value
 
-    assert_equal nil, parser.get_tk
+    assert_nil parser.get_tk
   end
 
   def test_read_directive_allow
@@ -3100,7 +3288,7 @@ def test_read_directive_allow
 
     assert_nil directive
 
-    assert_equal nil, parser.get_tk
+    assert_nil parser.get_tk
   end
 
   def test_read_directive_empty
@@ -3110,7 +3298,7 @@ def test_read_directive_empty
 
     assert_nil directive
 
-    assert_equal nil, parser.get_tk
+    assert_nil parser.get_tk
   end
 
   def test_read_directive_no_comment
@@ -3120,7 +3308,7 @@ def test_read_directive_no_comment
 
     assert_nil directive
 
-    assert_equal nil, parser.get_tk
+    assert_nil parser.get_tk
   end
 
   def test_read_directive_one_liner
@@ -3197,14 +3385,14 @@ def test_sanity_interpolation_crazy
     util_parser '"#{"#{"a")}" if b}"'
 
     assert_equal '"#{"#{"a")}" if b}"', @parser.get_tk[:text]
-    assert_equal nil, @parser.get_tk
+    assert_nil @parser.get_tk
   end
 
   def test_sanity_interpolation_curly
     util_parser '%{ #{} }'
 
     assert_equal '%{ #{} }', @parser.get_tk[:text]
-    assert_equal nil, @parser.get_tk
+    assert_nil @parser.get_tk
   end
 
   def test_sanity_interpolation_format
@@ -3260,11 +3448,11 @@ def m() end
 
     foo = @top_level.classes.first
 
-    assert_equal "=begin rdoc\nFoo comment\n=end", foo.comment.text
+    assert_equal 'Foo comment', foo.comment.text
 
     m = foo.method_list.first
 
-    assert_equal "=begin\nm comment\n=end", m.comment.text
+    assert_equal 'm comment', m.comment.text
   end
 
   def test_scan_block_comment_nested # Issue #41
@@ -3286,7 +3474,7 @@ class Bar
     foo = @top_level.modules.first
 
     assert_equal 'Foo', foo.full_name
-    assert_equal "=begin rdoc\nfindmeindoc\n=end", foo.comment.text
+    assert_equal 'findmeindoc', foo.comment.text
 
     bar = foo.classes.first
 
@@ -3297,9 +3485,10 @@ class Bar
   def test_scan_block_comment_notflush
   ##
   #
-  # The previous test assumes that between the =begin/=end blocs that there is
-  # only one line, or minima formatting directives. This test tests for those
-  # who use the =begin bloc with longer / more advanced formatting within.
+  # The previous test assumes that between the =begin/=end blocks that there
+  # is only one line, or minima formatting directives. This test tests for
+  # those who use the =begin bloc with longer / more advanced formatting
+  # within.
   #
   ##
     content = <<-CONTENT
@@ -3333,12 +3522,12 @@ def lauren
 
     foo = @top_level.classes.first
 
-    assert_equal "=begin rdoc\n\n= DESCRIPTION\n\nThis is a simple test class\n\n= RUMPUS\n\nIs a silly word\n\n=end",
+    assert_equal "= DESCRIPTION\n\nThis is a simple test class\n\n= RUMPUS\n\nIs a silly word",
       foo.comment.text
 
     m = foo.method_list.first
 
-    assert_equal "=begin rdoc\nA nice girl\n=end", m.comment.text
+    assert_equal 'A nice girl', m.comment.text
   end
 
   def test_scan_class_nested_nodoc
@@ -3842,4 +4031,242 @@ def util_two_parsers(first_file_content, second_file_content)
                                       second_file_content, @options, @stats
   end
 
+  def test_parse_const_third_party
+    util_parser <<-CLASS
+class A
+  true if B
+  true if B::C
+  true if B::C::D
+
+  module B
+  end
+end
+    CLASS
+
+    tk = @parser.get_tk
+
+    @parser.parse_class @top_level, RDoc::Parser::Ruby::NORMAL, tk, @comment
+
+    a = @top_level.classes.first
+    assert_equal 'A', a.full_name
+
+    visible = @store.all_modules.reject { |mod| mod.suppressed? }
+    visible = visible.map { |mod| mod.full_name }
+
+    assert_equal ['A::B'], visible
+  end
+
+  def test_parse_const_alias_defined_elsewhere
+    util_parser <<-CLASS
+module A
+  Aliased = Defined
+end
+
+module A
+  class Defined
+  end
+end
+    CLASS
+
+    @parser.scan
+
+    a = @top_level.modules.first
+    assert_equal 'A', a.full_name
+    aliased = a.constants.first
+    assert_equal 'A::Aliased', aliased.full_name
+    assert_equal [], a.modules.map(&:full_name)
+    assert_equal ['A::Defined', 'A::Aliased'], a.classes.map(&:full_name)
+    assert_equal ['A::Aliased'], a.constants.map(&:full_name)
+
+    visible = @store.all_modules.reject { |mod| mod.suppressed? }
+    visible = visible.map { |mod| mod.full_name }
+
+    assert_equal ['A'], visible
+  end
+
+  def test_parse_const_alias_defined_far_away
+    util_parser <<-CLASS
+module A
+  Aliased = ::B::C::Defined
+end
+
+module B
+  module C
+    class Defined
+    end
+  end
+end
+    CLASS
+
+    @parser.scan
+
+    a = @top_level.modules.first
+    assert_equal 'A', a.full_name
+    assert_empty a.classes
+    assert_empty a.modules
+    assert_equal ['A::Aliased'], a.constants.map(&:full_name)
+
+    defined = @store.find_class_named 'B::C::Defined'
+    assert_equal 'B::C::Defined', defined.full_name
+
+    aliased = @store.find_class_named 'B::C::Aliased'
+    assert_equal 'B::C::Aliased', aliased.full_name
+
+    visible = @store.all_modules.reject { |mod| mod.suppressed? }
+    visible = visible.map { |mod| mod.full_name }
+
+    assert_equal ['A', 'B', 'B::C'], visible
+  end
+
+  def test_parse_include_by_dynamic_definition
+    util_parser <<-CLASS
+module A
+  class B
+    include(Module.new do
+      def e(m)
+      end
+    end)
+  end
+
+  class C
+  end
+
+  class D
+  end
+end
+    CLASS
+
+    @parser.scan
+
+    a = @store.find_module_named 'A'
+    assert_equal 'A', a.full_name
+    a_b = a.find_class_named 'B'
+    assert_equal 'A::B', a_b.full_name
+    a_c = a.find_class_named 'C'
+    assert_equal 'A::C', a_c.full_name
+    a_d = a.find_class_named 'D'
+    assert_equal 'A::D', a_d.full_name
+  end
+
+  def test_parse_include_by_dynamic_definition_without_paren
+    util_parser <<-CLASS
+module A
+  class B
+    include(Module.new do
+      def e m
+      end
+    end)
+  end
+
+  class C
+  end
+
+  class D
+  end
+end
+    CLASS
+
+    @parser.scan
+
+    a = @store.find_module_named 'A'
+    assert_equal 'A', a.full_name
+    a_b = a.find_class_named 'B'
+    assert_equal 'A::B', a_b.full_name
+    a_c = a.find_class_named 'C'
+    assert_equal 'A::C', a_c.full_name
+    a_d = a.find_class_named 'D'
+    assert_equal 'A::D', a_d.full_name
+  end
+
+  def test_parse_include_by_dynamic_definition_via_variable
+    util_parser <<-CLASS
+module A
+  class B
+    m = Module.new do
+      def e(m)
+      end
+    end
+    include m
+  end
+
+  class C
+  end
+
+  class D
+  end
+end
+    CLASS
+
+    @parser.scan
+
+    a = @store.find_module_named 'A'
+    assert_equal 'A', a.full_name
+    a_b = a.find_class_named 'B'
+    assert_equal 'A::B', a_b.full_name
+    a_c = a.find_class_named 'C'
+    assert_equal 'A::C', a_c.full_name
+    a_d = a.find_class_named 'D'
+    assert_equal 'A::D', a_d.full_name
+  end
+
+  def test_parse_include_by_dynamic_definition_with_brace
+    util_parser <<-CLASS
+module A
+  class B
+    extend(e {
+      def f(g)
+      end
+    })
+  end
+
+  class C
+  end
+
+  class D
+  end
+end
+    CLASS
+
+    @parser.scan
+
+    a = @store.find_module_named 'A'
+    assert_equal 'A', a.full_name
+    a_b = a.find_class_named 'B'
+    assert_equal 'A::B', a_b.full_name
+    a_c = a.find_class_named 'C'
+    assert_equal 'A::C', a_c.full_name
+    a_d = a.find_class_named 'D'
+    assert_equal 'A::D', a_d.full_name
+  end
+
+  def test_parse_include_by_dynamic_definition_directly
+    util_parser <<-CLASS
+module A
+  class B
+    include Module.new do
+      def e m
+      end
+    end
+  end
+
+  class C
+  end
+
+  class D
+  end
+end
+    CLASS
+
+    @parser.scan
+
+    a = @store.find_module_named 'A'
+    assert_equal 'A', a.full_name
+    a_b = a.find_class_named 'B'
+    assert_equal 'A::B', a_b.full_name
+    a_c = a.find_class_named 'C'
+    assert_equal 'A::C', a_c.full_name
+    a_d = a.find_class_named 'D'
+    assert_equal 'A::D', a_d.full_name
+  end
+
 end
diff --git a/test/mri/rdoc/test_rdoc_parser_simple.rb b/test/mri/rdoc/test_rdoc_parser_simple.rb
index cdbcd7929db..5bde34b746a 100644
--- a/test/mri/rdoc/test_rdoc_parser_simple.rb
+++ b/test/mri/rdoc/test_rdoc_parser_simple.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocParserSimple < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_rd.rb b/test/mri/rdoc/test_rdoc_rd.rb
index ed67ae2caa2..70bb94d24b6 100644
--- a/test/mri/rdoc/test_rdoc_rd.rb
+++ b/test/mri/rdoc/test_rdoc_rd.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocRd < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_rd_block_parser.rb b/test/mri/rdoc/test_rdoc_rd_block_parser.rb
index a73c2065082..0f0bc4f891a 100644
--- a/test/mri/rdoc/test_rdoc_rd_block_parser.rb
+++ b/test/mri/rdoc/test_rdoc_rd_block_parser.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocRdBlockParser < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_rd_inline.rb b/test/mri/rdoc/test_rdoc_rd_inline.rb
index 2869681c6e6..dbba164865f 100644
--- a/test/mri/rdoc/test_rdoc_rd_inline.rb
+++ b/test/mri/rdoc/test_rdoc_rd_inline.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocRdInline < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_rd_inline_parser.rb b/test/mri/rdoc/test_rdoc_rd_inline_parser.rb
index b4394019b3c..3673de48e1d 100644
--- a/test/mri/rdoc/test_rdoc_rd_inline_parser.rb
+++ b/test/mri/rdoc/test_rdoc_rd_inline_parser.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocRdInlineParser < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_rdoc.rb b/test/mri/rdoc/test_rdoc_rdoc.rb
index bd4794342c3..3bce54b243c 100644
--- a/test/mri/rdoc/test_rdoc_rdoc.rb
+++ b/test/mri/rdoc/test_rdoc_rdoc.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocRDoc < RDoc::TestCase
 
@@ -115,7 +115,7 @@ def test_load_options
 
   def test_load_options_invalid
     temp_dir do
-      open '.rdoc_options', 'w' do |io|
+      File.open '.rdoc_options', 'w' do |io|
         io.write "a: !ruby.yaml.org,2002:str |\nfoo"
       end
 
@@ -181,13 +181,67 @@ def test_normalized_file_list_non_file_directory
     assert_match %r"#{dev}$",           err
   end
 
+  def test_normalized_file_list_with_dot_doc
+    expected_files = []
+    files = temp_dir do |dir|
+      a = File.expand_path('a.rb')
+      b = File.expand_path('b.rb')
+      c = File.expand_path('c.rb')
+      FileUtils.touch a
+      FileUtils.touch b
+      FileUtils.touch c
+
+      dot_doc = File.expand_path('.document')
+      FileUtils.touch dot_doc
+      open(dot_doc, 'w') do |f|
+        f.puts 'a.rb'
+        f.puts 'b.rb'
+      end
+      expected_files << a
+      expected_files << b
+
+      @rdoc.normalized_file_list [File.realpath(dir)]
+    end
+
+    files = files.map { |file| File.expand_path file }
+
+    assert_equal expected_files, files
+  end
+
+  def test_normalized_file_list_with_dot_doc_overridden_by_exclude_option
+    expected_files = []
+    files = temp_dir do |dir|
+      a = File.expand_path('a.rb')
+      b = File.expand_path('b.rb')
+      c = File.expand_path('c.rb')
+      FileUtils.touch a
+      FileUtils.touch b
+      FileUtils.touch c
+
+      dot_doc = File.expand_path('.document')
+      FileUtils.touch dot_doc
+      open(dot_doc, 'w') do |f|
+        f.puts 'a.rb'
+        f.puts 'b.rb'
+      end
+      expected_files << a
+
+      @rdoc.options.exclude = Regexp.new(['b.rb'].join('|'))
+      @rdoc.normalized_file_list [File.realpath(dir)]
+    end
+
+    files = files.map { |file| File.expand_path file }
+
+    assert_equal expected_files, files
+  end
+
   def test_parse_file
     @rdoc.store = RDoc::Store.new
 
     temp_dir do |dir|
       @rdoc.options.root = Pathname(Dir.pwd)
 
-      open 'test.txt', 'w' do |io|
+      File.open 'test.txt', 'w' do |io|
         io.puts 'hi'
       end
 
@@ -223,7 +277,7 @@ def test_parse_file_include_root
     temp_dir do |dir|
       @rdoc.options.parse %W[--root #{test_path}]
 
-      open 'include.txt', 'w' do |io|
+      File.open 'include.txt', 'w' do |io|
         io.puts ':include: test.txt'
       end
 
@@ -244,7 +298,7 @@ def test_parse_file_page_dir
       @rdoc.options.page_dir = Pathname('pages')
       @rdoc.options.root = Pathname(Dir.pwd)
 
-      open 'pages/test.txt', 'w' do |io|
+      File.open 'pages/test.txt', 'w' do |io|
         io.puts 'hi'
       end
 
@@ -263,7 +317,7 @@ def test_parse_file_relative
     temp_dir do |dir|
       @rdoc.options.root = Pathname(dir)
 
-      open 'test.txt', 'w' do |io|
+      File.open 'test.txt', 'w' do |io|
         io.puts 'hi'
       end
 
@@ -296,7 +350,7 @@ def test_parse_file_encoding
 
   def test_parse_file_forbidden
     skip 'chmod not supported' if Gem.win_platform?
-    skip 'skipped in root privilege' if Process.uid == 0
+    skip "assumes that euid is not root" if Process.euid == 0
 
     @rdoc.store = RDoc::Store.new
 
@@ -340,7 +394,7 @@ def test_remove_unparseable
 
   def test_remove_unparseable_tags_emacs
     temp_dir do
-      open 'TAGS', 'wb' do |io| # emacs
+      File.open 'TAGS', 'wb' do |io| # emacs
         io.write "\f\nlib/foo.rb,43\n"
       end
 
@@ -354,7 +408,7 @@ def test_remove_unparseable_tags_emacs
 
   def test_remove_unparseable_tags_vim
     temp_dir do
-      open 'TAGS', 'w' do |io| # emacs
+      File.open 'TAGS', 'w' do |io| # emacs
         io.write "!_TAG_"
       end
 
@@ -393,7 +447,7 @@ def test_setup_output_dir_dry_run
 
   def test_setup_output_dir_exists
     Dir.mktmpdir {|path|
-      open @rdoc.output_flag_file(path), 'w' do |io|
+      File.open @rdoc.output_flag_file(path), 'w' do |io|
         io.puts Time.at 0
         io.puts "./lib/rdoc.rb\t#{Time.at 86400}"
       end
@@ -407,7 +461,7 @@ def test_setup_output_dir_exists
 
   def test_setup_output_dir_exists_empty_created_rid
     Dir.mktmpdir {|path|
-      open @rdoc.output_flag_file(path), 'w' do end
+      File.open @rdoc.output_flag_file(path), 'w' do end
 
       e = assert_raises RDoc::Error do
         @rdoc.setup_output_dir path, false
@@ -468,6 +522,25 @@ def test_update_output_dir_dry_run
     end
   end
 
+  def test_update_output_dir_with_reproducible_time
+    Dir.mktmpdir do |d|
+      backup_epoch = ENV['SOURCE_DATE_EPOCH']
+      ruby_birthday = Time.parse 'Wed, 24 Feb 1993 21:00:00 +0900'
+      ENV['SOURCE_DATE_EPOCH'] = ruby_birthday.to_i.to_s
+
+      @rdoc.update_output_dir d, Time.now, {}
+
+      assert File.exist? "#{d}/created.rid"
+
+      f = File.open("#{d}/created.rid", 'r')
+      head_timestamp = Time.parse f.gets.chomp
+      f.close
+      assert_equal ruby_birthday, head_timestamp
+
+      ENV['SOURCE_DATE_EPOCH'] = backup_epoch
+    end
+  end
+
   def test_normalized_file_list_removes_created_rid_dir
     temp_dir do |d|
       FileUtils.mkdir "doc"
diff --git a/test/mri/rdoc/test_rdoc_ri_driver.rb b/test/mri/rdoc/test_rdoc_ri_driver.rb
index 687d0968df9..18dcb5b68ae 100644
--- a/test/mri/rdoc/test_rdoc_ri_driver.rb
+++ b/test/mri/rdoc/test_rdoc_ri_driver.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocRIDriver < RDoc::TestCase
 
@@ -243,6 +243,32 @@ def test_add_method
     assert_equal expected, out
   end
 
+  def test_add_method_that_is_alias_for_original
+    util_store
+
+    out = doc
+
+    @driver.add_method out, 'Qux#aliased'
+
+    expected =
+      doc(
+        head(1, 'Qux#aliased'),
+        blank_line,
+        para('(from ~/.rdoc)'),
+        rule(1),
+        blank_line,
+        para('alias comment'),
+        blank_line,
+        blank_line,
+        para('(This method is an alias for Qux#original.)'),
+        blank_line,
+        para('original comment'),
+        blank_line,
+        blank_line)
+
+    assert_equal expected, out
+  end
+
   def test_add_method_attribute
     util_store
 
@@ -348,6 +374,22 @@ def test_add_method_list
     assert_equal expected, out
   end
 
+  def test_output_width
+    @options[:width] = 10
+    driver = RDoc::RI::Driver.new @options
+
+    doc = @RM::Document.new
+    doc << @RM::IndentedParagraph.new(0, 'new, parse, foo, bar, baz')
+
+    out, = capture_io do
+      driver.display doc
+    end
+
+    expected = "new, parse, foo,\nbar, baz\n"
+
+    assert_equal expected, out
+  end
+
   def test_add_method_list_interative
     @options[:interactive] = true
     driver = RDoc::RI::Driver.new @options
@@ -390,6 +432,7 @@ def test_classes
       'Foo::Bar'  => [@store1],
       'Foo::Baz'  => [@store1, @store2],
       'Inc'       => [@store1],
+      'Qux'       => [@store1],
     }
 
     classes = @driver.classes
@@ -656,6 +699,21 @@ def test_display_method_overridden
     refute_match %r%must not be displayed%, out
   end
 
+  def test_display_name
+    util_store
+
+    out, = capture_io do
+      assert_equal true, @driver.display_name('home:README.rdoc')
+    end
+
+    expected = <<-EXPECTED
+= README
+This is a README
+    EXPECTED
+
+    assert_equal expected, out
+  end
+
   def test_display_name_not_found_class
     util_store
 
@@ -923,6 +981,7 @@ def test_find_methods_method
       [@store1, 'Foo::Bar',  'Foo::Bar',  :both, 'blah'],
       [@store1, 'Foo::Baz',  'Foo::Baz',  :both, 'blah'],
       [@store1, 'Inc',       'Inc',       :both, 'blah'],
+      [@store1, 'Qux',       'Qux',       :both, 'blah'],
     ]
 
     assert_equal expected, items
@@ -1056,7 +1115,7 @@ def test_list_known_classes
       @driver.list_known_classes
     end
 
-    assert_equal "Ambiguous\nExt\nFoo\nFoo::Bar\nFoo::Baz\nInc\n", out
+    assert_equal "Ambiguous\nExt\nFoo\nFoo::Bar\nFoo::Baz\nInc\nQux\n", out
   end
 
   def test_list_known_classes_name
@@ -1127,7 +1186,7 @@ def test_load_method_inherited
     method = @driver.load_method(@store2, :instance_methods, 'Bar', '#',
                                  'inherit')
 
-    assert_equal nil, method
+    assert_nil method
   end
 
   def test_load_methods_matching
@@ -1232,7 +1291,7 @@ def test_parse_name_page
 
     assert_equal 'ruby',   klass, 'ruby project'
     assert_equal ':',      type,  'ruby type'
-    assert_equal nil,      meth,  'ruby page'
+    assert_nil             meth,  'ruby page'
   end
 
   def test_parse_name_page_extenson
@@ -1247,26 +1306,26 @@ def test_parse_name_single_class
     klass, type, meth = @driver.parse_name 'Foo'
 
     assert_equal 'Foo', klass, 'Foo class'
-    assert_equal nil,   type,  'Foo type'
-    assert_equal nil,   meth,  'Foo method'
+    assert_nil          type,  'Foo type'
+    assert_nil          meth,  'Foo method'
 
     klass, type, meth = @driver.parse_name 'Foo#'
 
     assert_equal 'Foo', klass, 'Foo# class'
     assert_equal '#',   type,  'Foo# type'
-    assert_equal nil,   meth,  'Foo# method'
+    assert_nil          meth,  'Foo# method'
 
     klass, type, meth = @driver.parse_name 'Foo::'
 
     assert_equal 'Foo', klass, 'Foo:: class'
     assert_equal '::',  type,  'Foo:: type'
-    assert_equal nil,   meth,  'Foo:: method'
+    assert_nil          meth,  'Foo:: method'
 
     klass, type, meth = @driver.parse_name 'Foo.'
 
     assert_equal 'Foo', klass, 'Foo. class'
     assert_equal '.',   type,  'Foo. type'
-    assert_equal nil,   meth,  'Foo. method'
+    assert_nil          meth,  'Foo. method'
 
     klass, type, meth = @driver.parse_name 'Foo#Bar'
 
@@ -1291,14 +1350,14 @@ def test_parse_name_namespace
     klass, type, meth = @driver.parse_name 'Foo::Bar'
 
     assert_equal 'Foo::Bar', klass, 'Foo::Bar class'
-    assert_equal nil,        type,  'Foo::Bar type'
-    assert_equal nil,        meth,  'Foo::Bar method'
+    assert_nil               type,  'Foo::Bar type'
+    assert_nil               meth,  'Foo::Bar method'
 
     klass, type, meth = @driver.parse_name 'Foo::Bar#'
 
     assert_equal 'Foo::Bar', klass, 'Foo::Bar# class'
     assert_equal '#',        type,  'Foo::Bar# type'
-    assert_equal nil,        meth,  'Foo::Bar# method'
+    assert_nil               meth,  'Foo::Bar# method'
 
     klass, type, meth = @driver.parse_name 'Foo::Bar#baz'
 
@@ -1481,6 +1540,15 @@ def util_store
     @overridden.comment = 'must not be displayed in Bar#override'
     @overridden.record_location @top_level
 
+    @cQux = @top_level.add_class RDoc::NormalClass, 'Qux'
+
+    @original = @cQux.add_method RDoc::AnyMethod.new(nil, 'original')
+    @original.comment = 'original comment'
+    @original.record_location @top_level
+
+    @aliased = @original.add_alias RDoc::Alias.new(nil, 'original', 'aliased', 'alias comment'), @cQux
+    @aliased.record_location @top_level
+
     @store1.save
 
     @driver.stores = [@store1]
diff --git a/test/mri/rdoc/test_rdoc_ri_paths.rb b/test/mri/rdoc/test_rdoc_ri_paths.rb
index b0f368353a5..eb9b7fc93c1 100644
--- a/test/mri/rdoc/test_rdoc_ri_paths.rb
+++ b/test/mri/rdoc/test_rdoc_ri_paths.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocRIPaths < RDoc::TestCase
 
@@ -22,7 +22,7 @@ def setup
     specs.each do |spec|
       spec.loaded_from = spec.spec_file
 
-      open spec.spec_file, 'w' do |file|
+      File.open spec.spec_file, 'w' do |file|
         file.write spec.to_ruby_for_cache
       end
 
diff --git a/test/mri/rdoc/test_rdoc_rubygems_hook.rb b/test/mri/rdoc/test_rdoc_rubygems_hook.rb
index 2664b35cbbb..ff0c29ae1b8 100644
--- a/test/mri/rdoc/test_rdoc_rubygems_hook.rb
+++ b/test/mri/rdoc/test_rdoc_rubygems_hook.rb
@@ -200,7 +200,8 @@ def test_remove
 
   def test_remove_unwritable
     skip 'chmod not supported' if Gem.win_platform?
-    skip 'skipped in root privilege' if Process.uid == 0
+    skip "assumes that euid is not root" if Process.euid == 0
+
     FileUtils.mkdir_p @a.base_dir
     FileUtils.chmod 0, @a.base_dir
 
@@ -229,7 +230,8 @@ def test_setup
 
   def test_setup_unwritable
     skip 'chmod not supported' if Gem.win_platform?
-    skip 'skipped in root privilege' if Process.uid == 0
+    skip "assumes that euid is not root" if Process.euid == 0
+
     FileUtils.mkdir_p @a.doc_dir
     FileUtils.chmod 0, @a.doc_dir
 
diff --git a/test/mri/rdoc/test_rdoc_servlet.rb b/test/mri/rdoc/test_rdoc_servlet.rb
index 4dd1f08ddd8..0a197a31b6d 100644
--- a/test/mri/rdoc/test_rdoc_servlet.rb
+++ b/test/mri/rdoc/test_rdoc_servlet.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocServlet < RDoc::TestCase
 
@@ -69,7 +69,7 @@ def test_asset
       FileUtils.mkdir 'css'
 
       now = Time.now
-      open 'css/rdoc.css', 'w' do |io| io.write 'h1 { color: red }' end
+      File.open 'css/rdoc.css', 'w' do |io| io.write 'h1 { color: red }' end
       File.utime now, now, 'css/rdoc.css'
 
       @s.asset_dirs[:darkfish] = '.'
@@ -143,7 +143,7 @@ def test_do_GET_mount_path
 
       @s.asset_dirs[:darkfish] = '.'
 
-      @req.path = '/mount/path/css/rdoc.css'
+      @req.path = '/mount/path/css/rdoc.css'.dup
 
       @s.do_GET @req, @res
 
@@ -224,8 +224,7 @@ def test_documentation_page_page
 
     generator = @s.generator_for store
 
-    readme = store.add_file 'README.rdoc'
-    readme.parser = RDoc::Parser::Simple
+    readme = store.add_file 'README.rdoc', parser: RDoc::Parser::Simple
 
     @s.documentation_page store, generator, 'README_rdoc.html', @req, @res
 
diff --git a/test/mri/rdoc/test_rdoc_single_class.rb b/test/mri/rdoc/test_rdoc_single_class.rb
index 5761bfef4d1..e4123cb9bc5 100644
--- a/test/mri/rdoc/test_rdoc_single_class.rb
+++ b/test/mri/rdoc/test_rdoc_single_class.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocSingleClass < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_stats.rb b/test/mri/rdoc/test_rdoc_stats.rb
index 19fc2365b39..cac30d15aa5 100644
--- a/test/mri/rdoc/test_rdoc_stats.rb
+++ b/test/mri/rdoc/test_rdoc_stats.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocStats < RDoc::TestCase
 
diff --git a/test/mri/rdoc/test_rdoc_store.rb b/test/mri/rdoc/test_rdoc_store.rb
index 4a4cf3ac0fc..5a884c0b5f8 100644
--- a/test/mri/rdoc/test_rdoc_store.rb
+++ b/test/mri/rdoc/test_rdoc_store.rb
@@ -14,8 +14,7 @@ def setup
 
     @top_level = @s.add_file 'file.rb'
 
-    @page = @s.add_file 'README.txt'
-    @page.parser = RDoc::Parser::Simple
+    @page = @s.add_file 'README.txt', parser: RDoc::Parser::Simple
     @page.comment = RDoc::Comment.new 'This is a page', @page
 
     @klass = @top_level.add_class RDoc::NormalClass, 'Object'
@@ -146,7 +145,7 @@ def test_add_file
   end
 
   def test_add_file_relative
-    top_level = @store.add_file 'path/file.rb', 'file.rb'
+    top_level = @store.add_file 'path/file.rb', relative_name: 'file.rb'
 
     assert_kind_of RDoc::TopLevel, top_level
     assert_equal @store, top_level.store
@@ -162,7 +161,7 @@ def test_add_file_relative
 
   def test_all_classes_and_modules
     expected = %w[
-      C1 C2 C2::C3 C2::C3::H1 C3 C3::H1 C3::H2 C4 C4::C4 C5 C5::C1 C6 C7
+      C1 C2 C2::C3 C2::C3::H1 C3 C3::H1 C3::H2 C4 C4::C4 C5 C5::C1 C6 C7 C8 C8::S1 C9 C9::A C9::B
       Child
       M1 M1::M2
       Parent
@@ -213,7 +212,7 @@ def test_class_path
 
   def test_classes
     expected = %w[
-      C1 C2 C2::C3 C2::C3::H1 C3 C3::H1 C3::H2 C4 C4::C4 C5 C5::C1 C6 C7
+      C1 C2 C2::C3 C2::C3::H1 C3 C3::H1 C3::H2 C4 C4::C4 C5 C5::C1 C6 C7 C8 C8::S1 C9 C9::A C9::B
       Child
       Parent
     ]
@@ -222,7 +221,8 @@ def test_classes
   end
 
   def test_complete
-    @c2.add_module_alias @c2_c3, 'A1', @top_level
+    a1 = RDoc::Constant.new 'A1', '', ''
+    @c2.add_module_alias @c2_c3, @c2_c3.name, a1, @top_level
 
     @store.complete :public
 
@@ -309,8 +309,7 @@ def test_find_module_named
   end
 
   def test_find_text_page
-    page = @store.add_file 'PAGE.txt'
-    page.parser = RDoc::Parser::Simple
+    page = @store.add_file 'PAGE.txt', parser: RDoc::Parser::Simple
 
     assert_nil @store.find_text_page 'no such page'
 
@@ -407,7 +406,7 @@ def test_load_cache
 
     Dir.mkdir @tmpdir
 
-    open File.join(@tmpdir, 'cache.ri'), 'wb' do |io|
+    File.open File.join(@tmpdir, 'cache.ri'), 'wb' do |io|
       Marshal.dump cache, io
     end
 
@@ -441,7 +440,7 @@ def test_load_cache_encoding_differs
 
     Dir.mkdir @tmpdir
 
-    open File.join(@tmpdir, 'cache.ri'), 'wb' do |io|
+    File.open File.join(@tmpdir, 'cache.ri'), 'wb' do |io|
       Marshal.dump cache, io
     end
 
@@ -490,7 +489,7 @@ def test_load_cache_legacy
 
     Dir.mkdir @tmpdir
 
-    open File.join(@tmpdir, 'cache.ri'), 'wb' do |io|
+    File.open File.join(@tmpdir, 'cache.ri'), 'wb' do |io|
       Marshal.dump cache, io
     end
 
@@ -524,6 +523,15 @@ def test_load_class
     assert_includes @s.classes_hash, 'Object'
   end
 
+  def test_load_single_class
+    @s.save_class @c8_s1
+    @s.classes_hash.clear
+
+    assert_equal @c8_s1, @s.load_class('C8::S1')
+
+    assert_includes @s.classes_hash, 'C8::S1'
+  end
+
   def test_load_method
     @s.save_method @klass, @meth_bang
 
@@ -538,7 +546,7 @@ def test_load_method_legacy
 
     file = @s.method_file @klass.full_name, @meth.full_name
 
-    open file, 'wb' do |io|
+    File.open file, 'wb' do |io|
       io.write "\x04\bU:\x14RDoc::AnyMethod[\x0Fi\x00I" +
                "\"\vmethod\x06:\x06EF\"\x11Klass#method0:\vpublic" +
                "o:\eRDoc::Markup::Document\x06:\v@parts[\x06" +
@@ -563,7 +571,7 @@ def test_load_page
   end
 
   def test_main
-    assert_equal nil, @s.main
+    assert_nil @s.main
 
     @s.main = 'README.txt'
 
@@ -591,8 +599,7 @@ def test_module_names
   end
 
   def test_page
-    page = @store.add_file 'PAGE.txt'
-    page.parser = RDoc::Parser::Simple
+    page = @store.add_file 'PAGE.txt', parser: RDoc::Parser::Simple
 
     assert_nil @store.page 'no such page'
 
@@ -633,7 +640,7 @@ def test_save
 
     expected[:ancestors]['Object'] = %w[BasicObject]
 
-    open File.join(@tmpdir, 'cache.ri'), 'rb' do |io|
+    File.open File.join(@tmpdir, 'cache.ri'), 'rb' do |io|
       cache = Marshal.load io.read
 
       assert_equal expected, cache
@@ -701,7 +708,7 @@ def test_save_cache
 
     expected[:ancestors]['Object'] = %w[BasicObject]
 
-    open File.join(@tmpdir, 'cache.ri'), 'rb' do |io|
+    File.open File.join(@tmpdir, 'cache.ri'), 'rb' do |io|
       cache = Marshal.load io.read
 
       assert_equal expected, cache
@@ -981,7 +988,7 @@ def test_source
   end
 
   def test_title
-    assert_equal nil, @s.title
+    assert_nil @s.title
 
     @s.title = 'rdoc'
 
diff --git a/test/mri/rdoc/test_rdoc_task.rb b/test/mri/rdoc/test_rdoc_task.rb
index ac3512f42a4..3ce8529aefc 100644
--- a/test/mri/rdoc/test_rdoc_task.rb
+++ b/test/mri/rdoc/test_rdoc_task.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 begin
   require 'rake'
 rescue LoadError
diff --git a/test/mri/rdoc/test_rdoc_text.rb b/test/mri/rdoc/test_rdoc_text.rb
index 9f0e9480d3e..2669766e71e 100644
--- a/test/mri/rdoc/test_rdoc_text.rb
+++ b/test/mri/rdoc/test_rdoc_text.rb
@@ -1,6 +1,7 @@
 # frozen_string_literal: true
 
-require 'rdoc/test_case'
+require 'minitest_helper'
+require 'timeout'
 
 class TestRDocText < RDoc::TestCase
 
@@ -258,8 +259,7 @@ def test_snippet
     TEXT
 
     expected = <<-EXPECTED
-<p>This is one-hundred characters or more of text in a single paragraph.  This
-paragraph will be cut off …
+<p>This is one-hundred characters or more of text in a single paragraph.  This paragraph will be cut off …
     EXPECTED
 
     assert_equal expected, snippet(text)
@@ -377,6 +377,32 @@ def test_strip_stars_document_method
     assert_equal expected, strip_stars(text)
   end
 
+  def test_strip_stars_document_method_special
+    text = <<-TEXT
+/*
+ * Document-method: Zlib::GzipFile#mtime=
+ * Document-method: []
+ * Document-method: `
+ * Document-method: |
+ * Document-method: &
+ * Document-method: <=>
+ * Document-method: =~
+ * Document-method: +
+ * Document-method: -
+ * Document-method: +@
+ *
+ * A comment
+ */
+    TEXT
+
+    expected = <<-EXPECTED
+
+   A comment
+    EXPECTED
+
+    assert_equal expected, strip_stars(text)
+  end
+
   def test_strip_stars_encoding
     text = <<-TEXT
 /*
diff --git a/test/mri/rdoc/test_rdoc_token_stream.rb b/test/mri/rdoc/test_rdoc_token_stream.rb
index abf1469bbc4..c946d0f1ef6 100644
--- a/test/mri/rdoc/test_rdoc_token_stream.rb
+++ b/test/mri/rdoc/test_rdoc_token_stream.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocTokenStream < RDoc::TestCase
 
@@ -39,5 +39,20 @@ def test_class_to_html_empty
     assert_equal '', RDoc::TokenStream.to_html([])
   end
 
+  def test_tokens_to_s
+    foo = Class.new do
+      include RDoc::TokenStream
+
+      def initialize
+        @token_stream = [
+          { line_no: 0, char_no: 0, kind: :on_ident,   text: "foo" },
+          { line_no: 0, char_no: 0, kind: :on_sp,      text: " " },
+          { line_no: 0, char_no: 0, kind: :on_tstring, text: "'bar'" },
+        ]
+      end
+    end.new
+
+    assert_equal "foo 'bar'", foo.tokens_to_s
+  end
 end
 
diff --git a/test/mri/rdoc/test_rdoc_tom_doc.rb b/test/mri/rdoc/test_rdoc_tom_doc.rb
index 15bbd9b32d6..27a3e6f1782 100644
--- a/test/mri/rdoc/test_rdoc_tom_doc.rb
+++ b/test/mri/rdoc/test_rdoc_tom_doc.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-require 'rdoc/test_case'
+require 'minitest_helper'
 
 class TestRDocTomDoc < RDoc::TestCase
 
@@ -301,6 +301,44 @@ def test_parse_returns
     assert_equal expected, @TD.parse(text)
   end
 
+  def test_parse_returns_with_raises
+    text = <<-TEXT
+Do some stuff
+
+Returns a thing
+Raises ArgumentError when stuff
+Raises StandardError when stuff
+    TEXT
+    expected =
+      doc(
+        para('Do some stuff'),
+        blank_line,
+        head(3, 'Returns'),
+        blank_line,
+        para('Returns a thing'),
+        para('Raises ArgumentError when stuff'),
+        para('Raises StandardError when stuff'))
+
+    assert_equal expected, @TD.parse(text)
+  end
+
+  def test_parse_raises_without_returns
+    text = <<-TEXT
+Do some stuff
+
+Raises ArgumentError when stuff
+    TEXT
+    expected =
+      doc(
+        para('Do some stuff'),
+        blank_line,
+        head(3, 'Returns'),
+        blank_line,
+        para('Raises ArgumentError when stuff'))
+
+    assert_equal expected, @TD.parse(text)
+  end
+
   def test_parse_returns_multiline
     text = <<-TEXT
 Do some stuff
@@ -320,6 +358,27 @@ def test_parse_returns_multiline
     assert_equal expected, @TD.parse(text)
   end
 
+  def test_parse_returns_multiline_and_raises
+    text = <<-TEXT
+Do some stuff
+
+Returns a thing
+  that is multiline
+Raises ArgumentError
+    TEXT
+
+    expected =
+      doc(
+        para('Do some stuff'),
+        blank_line,
+        head(3, 'Returns'),
+        blank_line,
+        para('Returns a thing', ' ', 'that is multiline'),
+        para('Raises ArgumentError'))
+
+    assert_equal expected, @TD.parse(text)
+  end
+
   def test_parse_signature
     text = <<-TEXT
 Do some stuff
@@ -518,4 +577,3 @@ def test_tokenize_returns_multiline
   end
 
 end
-
diff --git a/test/mri/rdoc/test_rdoc_top_level.rb b/test/mri/rdoc/test_rdoc_top_level.rb
index 00fc7a1bd53..e396791ab80 100644
--- a/test/mri/rdoc/test_rdoc_top_level.rb
+++ b/test/mri/rdoc/test_rdoc_top_level.rb
@@ -160,7 +160,7 @@ def test_http_url
   end
 
   def test_last_modified
-    assert_equal nil, @top_level.last_modified
+    assert_nil @top_level.last_modified
     stat = Object.new
     def stat.mtime() 0 end
     @top_level.file_stat = stat
diff --git a/test/mri/rdoc/xref_data.rb b/test/mri/rdoc/xref_data.rb
index bc20d8ed917..aa9faaecd95 100644
--- a/test/mri/rdoc/xref_data.rb
+++ b/test/mri/rdoc/xref_data.rb
@@ -20,6 +20,8 @@ def self.m
   def m foo
   end
 
+  def +
+  end
 end
 
 class C2
@@ -94,6 +96,25 @@ class C7
   CONST_NODOC = :const_nodoc # :nodoc:
 end
 
+class C8
+  class << self
+    class S1
+    end
+  end
+end
+
+class C9
+  class A
+    def foo() end
+    def self.bar() end
+  end
+
+  class B < A
+    def self.foo() end
+    def bar() end
+  end
+end
+
 module M1
   def m
   end
diff --git a/test/mri/rdoc/xref_test_case.rb b/test/mri/rdoc/xref_test_case.rb
index 9f709964c64..d42cf398e7f 100644
--- a/test/mri/rdoc/xref_test_case.rb
+++ b/test/mri/rdoc/xref_test_case.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: true
 ENV['RDOC_TEST'] = 'yes'
 
-require 'rdoc'
+require 'minitest_helper'
 require File.expand_path '../xref_data', __FILE__
 
 class XrefTestCase < RDoc::TestCase
@@ -31,9 +31,10 @@ def generator.file_dir() nil end
     @rdoc.options = @options
     @rdoc.generator = generator
 
-    @c1    = @xref_data.find_module_named 'C1'
-    @c1_m  = @c1.method_list.last  # C1#m
-    @c1__m = @c1.method_list.first # C1::m
+    @c1       = @xref_data.find_module_named 'C1'
+    @c1__m    = @c1.find_class_method_named 'm' # C1::m
+    @c1_m     = @c1.find_instance_method_named 'm'  # C1#m
+    @c1_plus  = @c1.find_instance_method_named '+'
 
     @c2    = @xref_data.find_module_named 'C2'
     @c2_a  = @c2.method_list.last
@@ -53,6 +54,16 @@ def generator.file_dir() nil end
     @c3_h2 = @xref_data.find_module_named 'C3::H2'
     @c6    = @xref_data.find_module_named 'C6'
     @c7    = @xref_data.find_module_named 'C7'
+    @c8    = @xref_data.find_module_named 'C8'
+    @c8_s1 = @xref_data.find_module_named 'C8::S1'
+
+    @c9         = @xref_data.find_module_named 'C9'
+    @c9_a       = @xref_data.find_module_named 'C9::A'
+    @c9_a_i_foo = @c9_a.method_list.first
+    @c9_a_c_bar = @c9_a.method_list.last
+    @c9_b       = @xref_data.find_module_named 'C9::B'
+    @c9_b_c_foo = @c9_b.method_list.first
+    @c9_b_i_bar = @c9_b.method_list.last
 
     @m1    = @xref_data.find_module_named 'M1'
     @m1_m  = @m1.method_list.first
diff --git a/test/mri/readline/test_readline.rb b/test/mri/readline/test_readline.rb
index 68c1ff7312f..5adeca251a7 100644
--- a/test/mri/readline/test_readline.rb
+++ b/test/mri/readline/test_readline.rb
@@ -53,6 +53,8 @@ def test_readline
             end
           end
         }.join
+      ensure
+        $SAFE = 0
       end
     end
 
@@ -410,6 +412,7 @@ def test_modify_text_in_pre_input_hook
   end if !/EditLine|\A4\.3\z/n.match(Readline::VERSION)
 
   def test_input_metachar
+    skip("Won't pass on mingw w/readline 7.0.005 [ruby-core:45682]") if mingw?
     bug6601 = '[ruby-core:45682]'
     Readline::HISTORY << "hello"
     wo = nil
@@ -419,7 +422,7 @@ def test_input_metachar
     end
     assert_equal("hello", line, bug6601)
   ensure
-    wo.close
+    wo&.close
     Readline.delete_text
     Readline::HISTORY.clear
   end if !/EditLine/n.match(Readline::VERSION)
@@ -550,6 +553,65 @@ def test_using_quoting_detection_proc_with_multibyte_input
     Readline.completer_word_break_characters = saved_completer_word_break_characters
   end
 
+  def test_completion_quote_character_completing_unquoted_argument
+    return unless Readline.respond_to?(:completion_quote_character)
+
+    quote_character = "original value"
+    Readline.completion_proc = -> (_) do
+      quote_character = Readline.completion_quote_character
+      []
+    end
+    Readline.completer_quote_characters = "'\""
+
+    with_temp_stdio do |stdin, stdout|
+      replace_stdio(stdin.path, stdout.path) do
+        stdin.write("input\t")
+        stdin.flush
+        Readline.readline("> ", false)
+      end
+    end
+
+    assert_nil(quote_character)
+  end
+
+  def test_completion_quote_character_completing_quoted_argument
+    return unless Readline.respond_to?(:completion_quote_character)
+
+    quote_character = "original value"
+    Readline.completion_proc = -> (_) do
+      quote_character = Readline.completion_quote_character
+      []
+    end
+    Readline.completer_quote_characters = "'\""
+
+    with_temp_stdio do |stdin, stdout|
+      replace_stdio(stdin.path, stdout.path) do
+        stdin.write("'input\t")
+        stdin.flush
+        Readline.readline("> ", false)
+      end
+    end
+
+    assert_equal("'", quote_character)
+  end
+
+  def test_completion_quote_character_after_completion
+    return unless Readline.respond_to?(:completion_quote_character)
+
+    Readline.completion_proc = -> (_) { [] }
+    Readline.completer_quote_characters = "'\""
+
+    with_temp_stdio do |stdin, stdout|
+      replace_stdio(stdin.path, stdout.path) do
+        stdin.write("'input\t")
+        stdin.flush
+        Readline.readline("> ", false)
+      end
+    end
+
+    assert_nil(Readline.completion_quote_character)
+  end
+
   private
 
   def replace_stdio(stdin_path, stdout_path)
@@ -581,6 +643,11 @@ def with_temp_stdio
     Tempfile.create("test_readline_stdin") {|stdin|
       Tempfile.create("test_readline_stdout") {|stdout|
         yield stdin, stdout
+        if windows?
+          # needed since readline holds refs to tempfiles, can't delete on Windows
+          Readline.input = STDIN
+          Readline.output = STDOUT
+        end
       }
     }
   end
diff --git a/test/mri/resolv/test_dns.rb b/test/mri/resolv/test_dns.rb
index 1ac3aea7b85..669d86bd834 100644
--- a/test/mri/resolv/test_dns.rb
+++ b/test/mri/resolv/test_dns.rb
@@ -159,7 +159,7 @@ def test_no_server
     u.bind("127.0.0.1", 0)
     _, port, _, host = u.addr
     u.close
-    # A rase condition here.
+    # A race condition here.
     # Another program may use the port.
     # But no way to prevent it.
     Timeout.timeout(5) do
@@ -212,8 +212,8 @@ def test_ipv6_name
 
   def test_ipv6_create
     ref = '[Bug #11910] [ruby-core:72559]'
-    assert_instance_of Resolv::IPv6, Resolv::IPv6.create('::1')
-    assert_instance_of Resolv::IPv6, Resolv::IPv6.create('::1:127.0.0.1')
+    assert_instance_of Resolv::IPv6, Resolv::IPv6.create('::1'), ref
+    assert_instance_of Resolv::IPv6, Resolv::IPv6.create('::1:127.0.0.1'), ref
   end
 
   def test_ipv6_should_be_16
diff --git a/test/mri/resolv/test_mdns.rb b/test/mri/resolv/test_mdns.rb
index 8e401883f1e..ff66276f9ab 100644
--- a/test/mri/resolv/test_mdns.rb
+++ b/test/mri/resolv/test_mdns.rb
@@ -3,20 +3,25 @@
 require 'resolv'
 
 class TestResolvMDNS < Test::Unit::TestCase
-  def setup
-  end
-
   def test_mdns_each_address
-    begin
-      mdns = Resolv::MDNS.new
-      mdns.each_resource '_http._tcp.local', Resolv::DNS::Resource::IN::PTR do |r|
-        srv = mdns.getresource r.name, Resolv::DNS::Resource::IN::SRV
-        mdns.each_address(srv.target) do |result|
-          assert_not_nil(result)
-        end
+    mdns = Resolv::MDNS.new
+    def mdns.each_resource(name, typeclass)
+      if typeclass == Resolv::DNS::Resource::IN::A
+        yield typeclass.new("127.0.0.1")
+      else
+        yield typeclass.new("::1")
+      end
+    end
+    addrs = mdns.__send__(:use_ipv6?) ? ["127.0.0.1", "::1"] : ["127.0.0.1"]
+    [
+      ["example.com", []],
+      ["foo.local", addrs],
+    ].each do |name, expect|
+      results = []
+      mdns.each_address(name) do |result|
+        results << result.to_s
       end
-    rescue Errno::EADDRNOTAVAIL
-      # Handle Raspberry Pi environment.
+      assert_equal expect, results.sort, "GH-1484"
     end
   end
 end
diff --git a/test/mri/rexml/data/t75.xml b/test/mri/rexml/data/t75.xml
index 0911fb1b1ae..eb3cccee4ba 100644
--- a/test/mri/rexml/data/t75.xml
+++ b/test/mri/rexml/data/t75.xml
@@ -1,4 +1,4 @@
-<?xml version="1.0" encoding="ISO-8859-1"?><?pos="3"?>
+<?xml version="1.0" encoding="ISO-8859-1"?>
 <!-- generated by hnb 1.9.17 (http://hnb.sourceforge.net) -->
 
 <!DOCTYPE tree[
diff --git a/test/mri/rexml/formatter/test_default.rb b/test/mri/rexml/formatter/test_default.rb
new file mode 100644
index 00000000000..b5b131724b8
--- /dev/null
+++ b/test/mri/rexml/formatter/test_default.rb
@@ -0,0 +1,19 @@
+require_relative "../rexml_test_utils"
+
+module REXMLTests
+  class DefaultFormatterTest < Test::Unit::TestCase
+    def format(node)
+      formatter = REXML::Formatters::Default.new
+      output = ""
+      formatter.write(node, output)
+      output
+    end
+
+    class InstructionTest < self
+      def test_content_nil
+        instruction = REXML::Instruction.new("target")
+        assert_equal("<?target?>", format(instruction))
+      end
+    end
+  end
+end
diff --git a/test/mri/rexml/parse/test_element.rb b/test/mri/rexml/parse/test_element.rb
new file mode 100644
index 00000000000..aad915fe7bf
--- /dev/null
+++ b/test/mri/rexml/parse/test_element.rb
@@ -0,0 +1,38 @@
+require "test/unit"
+require "rexml/document"
+
+module REXMLTests
+  class TestParseElement < Test::Unit::TestCase
+    def parse(xml)
+      REXML::Document.new(xml)
+    end
+
+    class TestInvalid < self
+      def test_no_end_tag
+        exception = assert_raise(REXML::ParseException) do
+          parse("<a></")
+        end
+        assert_equal(<<-DETAIL.chomp, exception.to_s)
+Missing end tag for 'a'
+Line: 1
+Position: 5
+Last 80 unconsumed characters:
+</
+        DETAIL
+      end
+
+      def test_empty_namespace_attribute_name
+        exception = assert_raise(REXML::ParseException) do
+          parse("<x :a=\"\"></x>")
+        end
+        assert_equal(<<-DETAIL.chomp, exception.to_s)
+Invalid attribute name: <:a="">
+Line: 1
+Position: 9
+Last 80 unconsumed characters:
+
+        DETAIL
+      end
+    end
+  end
+end
diff --git a/test/mri/rexml/parse/test_processing_instruction.rb b/test/mri/rexml/parse/test_processing_instruction.rb
new file mode 100644
index 00000000000..a23513fc6e2
--- /dev/null
+++ b/test/mri/rexml/parse/test_processing_instruction.rb
@@ -0,0 +1,25 @@
+require "test/unit"
+require "rexml/document"
+
+module REXMLTests
+  class TestParseProcessinInstruction < Test::Unit::TestCase
+    def parse(xml)
+      REXML::Document.new(xml)
+    end
+
+    class TestInvalid < self
+      def test_no_name
+        exception = assert_raise(REXML::ParseException) do
+          parse("<??>")
+        end
+        assert_equal(<<-DETAIL.chomp, exception.to_s)
+Invalid processing instruction node
+Line: 1
+Position: 4
+Last 80 unconsumed characters:
+<??>
+        DETAIL
+      end
+    end
+  end
+end
diff --git a/test/mri/rexml/parser/test_tree.rb b/test/mri/rexml/parser/test_tree.rb
index 7ab0addca1b..8a5d9d1223f 100644
--- a/test/mri/rexml/parser/test_tree.rb
+++ b/test/mri/rexml/parser/test_tree.rb
@@ -12,7 +12,7 @@ def test_unmatched_close_tag
         parse(xml)
       end
       assert_equal(<<-MESSAGE, exception.to_s)
-Missing end tag for 'root' (got "not-root")
+Missing end tag for 'root' (got 'not-root')
 Line: 1
 Position: #{xml.bytesize}
 Last 80 unconsumed characters:
diff --git a/test/mri/rexml/parser/test_ultra_light.rb b/test/mri/rexml/parser/test_ultra_light.rb
index c48a13d3115..8f4a3980d58 100644
--- a/test/mri/rexml/parser/test_ultra_light.rb
+++ b/test/mri/rexml/parser/test_ultra_light.rb
@@ -55,7 +55,7 @@ def normalize_child(child)
         normalized_doctype[1] = normalized_parent
         normalized_doctype
       when :start_element
-        tag, parent, name, attributes, *children = child
+        tag, _parent, name, attributes, *children = child
         normalized_parent = :parent
         normalized_children = children.collect do |sub_child|
           normalize_child(sub_child)
diff --git a/test/mri/rexml/rexml_test_utils.rb b/test/mri/rexml/rexml_test_utils.rb
index 7c59629e538..8bb002cee23 100644
--- a/test/mri/rexml/rexml_test_utils.rb
+++ b/test/mri/rexml/rexml_test_utils.rb
@@ -1,5 +1,8 @@
 # frozen_string_literal: false
-require 'test/unit'
+
+require "test/unit"
+require "rexml/document"
+
 module REXMLTestUtils
   def fixture_path(*components)
     File.join(File.dirname(__FILE__), "data", *components)
diff --git a/test/mri/rexml/test_attribute.rb b/test/mri/rexml/test_attribute.rb
new file mode 100644
index 00000000000..5175bd44548
--- /dev/null
+++ b/test/mri/rexml/test_attribute.rb
@@ -0,0 +1,14 @@
+require_relative "rexml_test_utils"
+
+module REXMLTests
+  class AttributeTest < Test::Unit::TestCase
+    def test_empty_prefix
+      error = assert_raise(ArgumentError) do
+        REXML::Attribute.new(":x")
+      end
+      assert_equal("name must be " +
+                   "\#{PREFIX}:\#{LOCAL_NAME} or \#{LOCAL_NAME}: <\":x\">",
+                   error.message)
+    end
+  end
+end
diff --git a/test/mri/rexml/test_core.rb b/test/mri/rexml/test_core.rb
index 00710631283..46036d7f127 100644
--- a/test/mri/rexml/test_core.rb
+++ b/test/mri/rexml/test_core.rb
@@ -877,18 +877,18 @@ def test_ticket_51
       EOL
 
       # The most common case.  People not caring about the namespaces much.
-      assert_equal( "XY", XPath.match( doc, "/test/a/text()" ).join )
-      assert_equal( "XY", XPath.match( doc, "/test/x:a/text()" ).join )
+      assert_equal( "XY", XPath.match( doc, "/*:test/*:a/text()" ).join )
+      assert_equal( "XY", XPath.match( doc, "/*:test/x:a/text()" ).join )
       # Surprising?  I don't think so, if you believe my definition of the "common case"
-      assert_equal( "XYZ", XPath.match( doc, "//a/text()" ).join )
+      assert_equal( "XYZ", XPath.match( doc, "//*:a/text()" ).join )
 
       # These are the uncommon cases.  Namespaces are actually important, so we define our own
       # mappings, and pass them in.
       assert_equal( "XY", XPath.match( doc, "/f:test/f:a/text()", { "f" => "1" } ).join )
       # The namespaces are defined, and override the original mappings
-      assert_equal( "", XPath.match( doc, "/test/a/text()", { "f" => "1" } ).join )
+      assert_equal( "XY", XPath.match( doc, "/*:test/*:a/text()", { "f" => "1" } ).join )
       assert_equal( "", XPath.match( doc, "/x:test/x:a/text()", { "f" => "1" } ).join )
-      assert_equal( "", XPath.match( doc, "//a/text()", { "f" => "1" } ).join )
+      assert_equal( "XYZ", XPath.match( doc, "//*:a/text()", { "f" => "1" } ).join )
     end
 
     def test_processing_instruction
@@ -1274,14 +1274,15 @@ def test_ticket_76
 
     def test_ticket_21
       src = "<foo bar=value/>"
-      assert_raise( ParseException, "invalid XML should be caught" ) {
+      exception = assert_raise(ParseException) do
         Document.new(src)
-      }
-      begin
-        Document.new(src)
-      rescue
-        assert_match( /missing attribute quote/, $!.message )
       end
+      assert_equal(<<-DETAIL, exception.to_s)
+Missing attribute value start quote: <bar>
+Line: 1
+Position: 16
+Last 80 unconsumed characters:
+      DETAIL
     end
 
     def test_ticket_63
@@ -1390,8 +1391,8 @@ def test_ticket_95
 
     def test_ticket_102
       doc = REXML::Document.new '<doc xmlns="ns"><item name="foo"/></doc>'
-      assert_equal( "foo", doc.root.elements["item"].attribute("name","ns").to_s )
-      assert_equal( "item", doc.root.elements["item[@name='foo']"].name )
+      assert_equal( "foo", doc.root.elements["*:item"].attribute("name","ns").to_s )
+      assert_equal( "item", doc.root.elements["*:item[@name='foo']"].name )
     end
 
     def test_ticket_14
@@ -1420,11 +1421,11 @@ def test_ticket_121
       doc = REXML::Document.new(
         '<doc xmlns="ns" xmlns:phantom="ns"><item name="foo">text</item></doc>'
       )
-      assert_equal 'text', doc.text( "/doc/item[@name='foo']" )
+      assert_equal 'text', doc.text( "/*:doc/*:item[@name='foo']" )
       assert_equal "name='foo'",
-        doc.root.elements["item"].attribute("name", "ns").inspect
+        doc.root.elements["*:item"].attribute("name", "ns").inspect
       assert_equal "<item name='foo'>text</item>",
-        doc.root.elements["item[@name='foo']"].to_s
+        doc.root.elements["*:item[@name='foo']"].to_s
     end
 
     def test_ticket_135
diff --git a/test/mri/rexml/test_doctype.rb b/test/mri/rexml/test_doctype.rb
index 91de05b05fb..7f426691707 100644
--- a/test/mri/rexml/test_doctype.rb
+++ b/test/mri/rexml/test_doctype.rb
@@ -1,68 +1,92 @@
 # frozen_string_literal: false
-require 'test/unit'
-require 'rexml/document'
+
+require_relative "rexml_test_utils"
 
 module REXMLTests
   class TestDocTypeAccessor < Test::Unit::TestCase
-
     def setup
       @sysid = "urn:x-test:sysid1"
-      @notid1 = "urn:x-test:notation1"
-      @notid2 = "urn:x-test:notation2"
-      document_string1 = <<-"XMLEND"
-      <!DOCTYPE r SYSTEM "#{@sysid}" [
-        <!NOTATION n1 SYSTEM "#{@notid1}">
-        <!NOTATION n2 SYSTEM "#{@notid2}">
+      @notation_id1 = "urn:x-test:notation1"
+      @notation_id2 = "urn:x-test:notation2"
+      xml_system = <<-XML
+      <!DOCTYPE root SYSTEM "#{@sysid}" [
+        <!NOTATION n1 SYSTEM "#{@notation_id1}">
+        <!NOTATION n2 SYSTEM "#{@notation_id2}">
       ]>
-      <r/>
-      XMLEND
-      @doctype1 = REXML::Document.new(document_string1).doctype
+      <root/>
+      XML
+      @doc_type_system = REXML::Document.new(xml_system).doctype
 
       @pubid = "TEST_ID"
-      document_string2 = <<-"XMLEND"
-      <!DOCTYPE r PUBLIC "#{@pubid}">
-      <r/>
-      XMLEND
-      @doctype2 = REXML::Document.new(document_string2).doctype
+      xml_public = <<-XML
+      <!DOCTYPE root PUBLIC "#{@pubid}">
+      <root/>
+      XML
+      @doc_type_public = REXML::Document.new(xml_public).doctype
+
+      xml_public_system = <<-XML
+      <!DOCTYPE root PUBLIC "#{@pubid}" "#{@sysid}">
+      <root/>
+      XML
+      @doc_type_public_system = REXML::Document.new(xml_public_system).doctype
+    end
 
-      document_string3 = <<-"XMLEND"
-      <!DOCTYPE r PUBLIC "#{@pubid}" "#{@sysid}">
-      <r/>
-      XMLEND
-      @doctype3 = REXML::Document.new(document_string3).doctype
+    def test_public
+      assert_equal([
+                     nil,
+                     @pubid,
+                     @pubid,
+                   ],
+                   [
+                     @doc_type_system.public,
+                     @doc_type_public.public,
+                     @doc_type_public_system.public,
+                   ])
+    end
 
+    def test_to_s
+      assert_equal("<!DOCTYPE root PUBLIC \"#{@pubid}\" \"#{@sysid}\">",
+                   @doc_type_public_system.to_s)
     end
 
-    def test_public
-      assert_equal(nil, @doctype1.public)
-      assert_equal(@pubid, @doctype2.public)
-      assert_equal(@pubid, @doctype3.public)
+    def test_to_s_apostrophe
+      @doc_type_public_system.parent.context[:prologue_quote] = :apostrophe
+      assert_equal("<!DOCTYPE root PUBLIC '#{@pubid}' '#{@sysid}'>",
+                   @doc_type_public_system.to_s)
     end
 
     def test_system
-      assert_equal(@sysid, @doctype1.system)
-      assert_equal(nil, @doctype2.system)
-      assert_equal(@sysid, @doctype3.system)
+      assert_equal([
+                     @sysid,
+                     nil,
+                     @sysid,
+                   ],
+                   [
+                     @doc_type_system.system,
+                     @doc_type_public.system,
+                     @doc_type_public_system.system,
+                   ])
     end
 
     def test_notation
-      assert_equal(@notid1, @doctype1.notation("n1").system)
-      assert_equal(@notid2, @doctype1.notation("n2").system)
+      assert_equal([
+                     @notation_id1,
+                     @notation_id2,
+                   ],
+                   [
+                     @doc_type_system.notation("n1").system,
+                     @doc_type_system.notation("n2").system,
+                   ])
     end
 
     def test_notations
-      notations = @doctype1.notations
-      assert_equal(2, notations.length)
-      assert_equal(@notid1, find_notation(notations, "n1").system)
-      assert_equal(@notid2, find_notation(notations, "n2").system)
-    end
-
-    def find_notation(notations, name)
-      notations.find { |notation|
-        name == notation.name
-      }
+      notations = @doc_type_system.notations
+      assert_equal([
+                     @notation_id1,
+                     @notation_id2,
+                   ],
+                   notations.collect(&:system))
     end
-
   end
 
   class TestNotationDeclPublic < Test::Unit::TestCase
@@ -82,6 +106,19 @@ def test_to_s_with_uri
                    decl(@id, @uri).to_s)
     end
 
+    def test_to_s_apostrophe
+      document = REXML::Document.new(<<-XML)
+      <!DOCTYPE root SYSTEM "urn:x-test:sysid" [
+        #{decl(@id, @uri).to_s}
+      ]>
+      <root/>
+      XML
+      document.context[:prologue_quote] = :apostrophe
+      notation = document.doctype.notations[0]
+      assert_equal("<!NOTATION #{@name} PUBLIC '#{@id}' '#{@uri}'>",
+                   notation.to_s)
+    end
+
     private
     def decl(id, uri)
       REXML::NotationDecl.new(@name, "PUBLIC", id, uri)
@@ -99,6 +136,19 @@ def test_to_s
                    decl(@id).to_s)
     end
 
+    def test_to_s_apostrophe
+      document = REXML::Document.new(<<-XML)
+      <!DOCTYPE root SYSTEM "urn:x-test:sysid" [
+        #{decl(@id).to_s}
+      ]>
+      <root/>
+      XML
+      document.context[:prologue_quote] = :apostrophe
+      notation = document.doctype.notations[0]
+      assert_equal("<!NOTATION #{@name} SYSTEM '#{@id}'>",
+                   notation.to_s)
+    end
+
     private
     def decl(id)
       REXML::NotationDecl.new(@name, "SYSTEM", id, nil)
diff --git a/test/mri/rexml/test_instruction.rb b/test/mri/rexml/test_instruction.rb
new file mode 100644
index 00000000000..96fa909e17d
--- /dev/null
+++ b/test/mri/rexml/test_instruction.rb
@@ -0,0 +1,14 @@
+require_relative "rexml_test_utils"
+
+module REXMLTests
+  class InstructionTest < Test::Unit::TestCase
+    def test_target_nil
+      error = assert_raise(ArgumentError) do
+        REXML::Instruction.new(nil)
+      end
+      assert_equal("processing instruction target must be String or " +
+                   "REXML::Instruction: <nil>",
+                   error.message)
+    end
+  end
+end
diff --git a/test/mri/rexml/test_jaxen.rb b/test/mri/rexml/test_jaxen.rb
index 9cd7bee8c27..9640b8290b8 100644
--- a/test/mri/rexml/test_jaxen.rb
+++ b/test/mri/rexml/test_jaxen.rb
@@ -12,119 +12,120 @@ class JaxenTester < Test::Unit::TestCase
     include REXMLTestUtils
     include REXML
 
-    def test_axis ; test("axis") ; end
-    def test_basic ; test("basic") ; end
-    def test_basicupdate ; test("basicupdate") ; end
-    def test_contents ; test("contents") ; end
-    def test_defaultNamespace ; test("defaultNamespace") ; end
-    def test_fibo ; test("fibo") ; end
-    def test_id ; test("id") ; end
-    def test_jaxen24 ; test("jaxen24") ; end
-    def test_lang ; test("lang") ; end
-    def test_message ; test("message") ; end
-    def test_moreover ; test("moreover") ; end
-    def test_much_ado ; test("much_ado") ; end
-    def test_namespaces ; test("namespaces") ; end
-    def test_nitf ; test("nitf") ; end
-    def test_numbers ; test("numbers") ; end
-    def test_pi ; test("pi") ; end
-    def test_pi2 ; test("pi2") ; end
-    def test_simple ; test("simple") ; end
-    def test_testNamespaces ; test("testNamespaces") ; end
-    def test_text ; test("text") ; end
-    def test_underscore ; test("underscore") ; end
-    def test_web ; test("web") ; end
-    def test_web2 ; test("web2") ; end
+    def test_axis ; process_test_case("axis") ; end
+    def test_basic ; process_test_case("basic") ; end
+    def test_basicupdate ; process_test_case("basicupdate") ; end
+    def test_contents ; process_test_case("contents") ; end
+    def test_defaultNamespace ; process_test_case("defaultNamespace") ; end
+    def test_fibo ; process_test_case("fibo") ; end
+    def test_id ; process_test_case("id") ; end
+    def test_jaxen24 ; process_test_case("jaxen24") ; end
+    def test_lang ; process_test_case("lang") ; end
+    # document() function for XSLT isn't supported
+    def _test_message ; process_test_case("message") ; end
+    def test_moreover ; process_test_case("moreover") ; end
+    def test_much_ado ; process_test_case("much_ado") ; end
+    def test_namespaces ; process_test_case("namespaces") ; end
+    def test_nitf ; process_test_case("nitf") ; end
+    # Exception should be considered
+    def _test_numbers ; process_test_case("numbers") ; end
+    def test_pi ; process_test_case("pi") ; end
+    def test_pi2 ; process_test_case("pi2") ; end
+    def test_simple ; process_test_case("simple") ; end
+    # TODO: namespace node is needed
+    def _test_testNamespaces ; process_test_case("testNamespaces") ; end
+    # document() function for XSLT isn't supported
+    def _test_text ; process_test_case("text") ; end
+    def test_underscore ; process_test_case("underscore") ; end
+    def _test_web ; process_test_case("web") ; end
+    def test_web2 ; process_test_case("web2") ; end
 
     private
-    def test( fname )
-#      Dir.entries( xml_dir ).each { |fname|
-#        if fname =~ /\.xml$/
-          doc = File.open(fixture_path(fname+".xml")) do |file|
-            Document.new(file)
-          end
-          XPath.each( doc, "/tests/document" ) {|e| handleDocument(e)}
-#        end
-#      }
+    def process_test_case(name)
+      xml_path = "#{name}.xml"
+      doc = File.open(fixture_path(xml_path)) do |file|
+        Document.new(file)
+      end
+      test_doc = File.open(fixture_path("test/tests.xml")) do |file|
+        Document.new(file)
+      end
+      XPath.each(test_doc,
+                 "/tests/document[@url='xml/#{xml_path}']/context") do |context|
+        process_context(doc, context)
+      end
     end
 
     # processes a tests/document/context node
-    def handleContext( testDoc, ctxElement)
-      testCtx = XPath.match( testDoc, ctxElement.attributes["select"] )[0]
-      namespaces = {}
-      if testCtx.class == Element
-        testCtx.prefixes.each { |pre| handleNamespace( testCtx, pre, namespaces ) }
-      end
+    def process_context(doc, context)
+      test_context = XPath.match(doc, context.attributes["select"])
+      namespaces = context.namespaces
+      namespaces.delete("var")
+      namespaces = nil if namespaces.empty?
       variables = {}
-      XPath.each( ctxElement, "@*[namespace-uri() = 'http://jaxen.org/test-harness/var']") { |attrib| handleVariable(testCtx, variables, attrib) }
-      XPath.each( ctxElement, "valueOf") { |e| handleValueOf(testCtx, variables, namespaces, e) }
-      XPath.each( ctxElement, "test[not(@exception) or (@exception != 'true') ]") { |e| handleNominalTest(testCtx,variables, namespaces, e) }
-      XPath.each( ctxElement, "test[@exception = 'true']") { |e| handleExceptionalTest(testCtx,variables, namespaces, e) }
+      var_namespace = "http://jaxen.org/test-harness/var"
+      XPath.each(context,
+                 "@*[namespace-uri() = '#{var_namespace}']") do |attribute|
+        variables[attribute.name] = attribute.value
+      end
+      XPath.each(context, "valueOf") do |value|
+        process_value_of(test_context, variables, namespaces, value)
+      end
+      XPath.each(context,
+                 "test[not(@exception) or (@exception != 'true')]") do |test|
+        process_nominal_test(test_context, variables, namespaces, test)
+      end
+      XPath.each(context,
+                 "test[@exception = 'true']") do |test|
+        process_exceptional_test(test_context, variables, namespaces, test)
+      end
     end
 
     # processes a tests/document/context/valueOf or tests/document/context/test/valueOf node
-    def handleValueOf(ctx,variables, namespaces, valueOfElement)
-      expected = valueOfElement.text
-      got = XPath.match( ctx, valueOfElement.attributes["select"], namespaces, variables )[0]
-      assert_true( (got.nil? && expected.nil?) || !got.nil? )
-      case got.class
-      when Element
-        assert_equal( got.class, Element )
-      when Attribute, Text, Comment, TrueClass, FalseClass
-        assert_equal( expected, got.to_s )
-      when Instruction
-        assert_equal( expected, got.content )
-      when Integer
-        assert_equal( exected.to_f, got )
-      when String
-        # normalize values for comparison
-        got = "" if got == nil or got == ""
-        expected = "" if expected == nil or expected == ""
-        assert_equal( expected, got )
-      else
-        assert_fail( "Wassup?" )
-      end
-    end
+    def process_value_of(context, variables, namespaces, value_of)
+      expected = value_of.text
+      xpath = value_of.attributes["select"]
+      matched = XPath.match(context, xpath, namespaces, variables, strict: true)
 
+      message = user_message(context, xpath, matched)
+      assert_equal(expected || "",
+                   REXML::Functions.string(matched),
+                   message)
+    end
 
     # processes a tests/document/context/test node ( where @exception is false or doesn't exist )
-    def handleNominalTest(ctx, variables, namespaces, testElement)
-      expected = testElement.attributes["count"]
-      got = XPath.match( ctx, testElement.attributes["select"], namespaces, variables )
+    def process_nominal_test(context, variables, namespaces, test)
+      xpath = test.attributes["select"]
+      matched = XPath.match(context, xpath, namespaces, variables, strict: true)
       # might be a test with no count attribute, but nested valueOf elements
-      assert( expected == got.size.to_s ) if !expected.nil?
+      expected = test.attributes["count"]
+      if expected
+        assert_equal(Integer(expected, 10),
+                     matched.size,
+                     user_message(context, xpath, matched))
+      end
 
-      XPath.each( testElement, "valueOf") { |e|
-        handleValueOf(got, variables, namespaces, e)
-      }
+      XPath.each(test, "valueOf") do |value_of|
+        process_value_of(matched, variables, namespaces, value_of)
+      end
     end
 
     # processes a tests/document/context/test node ( where @exception is true )
-    def handleExceptionalTest(ctx, variables, namespaces, testElement)
-      assert_raise( Exception ) {
-        XPath.match( ctx, testElement.attributes["select"], namespaces, variables )
-      }
-    end
-
-    # processes a tests/document node
-    def handleDocument(docElement)
-      puts "- Processing document: #{docElement.attributes['url']}"
-      testFile = File.new( docElement.attributes["url"] )
-      testDoc = Document.new testFile
-      XPath.each( docElement, "context") { |e| handleContext(testDoc, e) }
-    end
-
-    # processes a variable definition in a namespace like <test var:foo="bar">
-    def handleVariable( ctx, variables, attrib )
-      puts "--- Found attribute: #{attrib.name}"
-      variables[attrib.name] = attrib.value
+    def process_exceptional_test(context, variables, namespaces, test)
+      xpath = test.attributes["select"]
+      assert_raise(REXML::ParseException) do
+        XPath.match(context, xpath, namespaces, variables, strict: true)
+      end
     end
 
-    # processes a namespace definition like <test xmlns:foo="fiz:bang:bam">
-    def handleNamespace( ctx, prefix, namespaces )
-      puts "--- Found namespace: #{prefix}"
-      namespaces[prefix] = ctx.namespaces[prefix]
+    def user_message(context, xpath, matched)
+      message = ""
+      context.each_with_index do |node, i|
+        message << "Node#{i}:\n"
+        message << "#{node}\n"
+      end
+      message << "XPath: <#{xpath}>\n"
+      message << "Matched <#{matched}>"
+      message
     end
-
   end
 end
diff --git a/test/mri/rexml/test_martin_fowler.rb b/test/mri/rexml/test_martin_fowler.rb
index da685a80ec1..add3c827233 100644
--- a/test/mri/rexml/test_martin_fowler.rb
+++ b/test/mri/rexml/test_martin_fowler.rb
@@ -3,7 +3,7 @@
 require 'rexml/document'
 
 module REXMLTests
-  class OrderTester < Test::Unit::TestCase
+  class OrderTesterMF < Test::Unit::TestCase
     DOC = <<END
 <paper>
 <title>Remove this element and figs order differently</title>
diff --git a/test/mri/rexml/test_stream.rb b/test/mri/rexml/test_stream.rb
index d7ceedc70e8..08d4462ef93 100644
--- a/test/mri/rexml/test_stream.rb
+++ b/test/mri/rexml/test_stream.rb
@@ -15,8 +15,8 @@ class StreamTester < Test::Unit::TestCase
     def test_listener
       data = %Q{<session1 user="han" password="rootWeiler" />\n<session2 user="han" password="rootWeiler" />}
 
-      b = RequestReader.new( data )
-      b = RequestReader.new( data )
+      RequestReader.new( data )
+      RequestReader.new( data )
     end
 
     def test_ticket_49
diff --git a/test/mri/rexml/test_text.rb b/test/mri/rexml/test_text.rb
index 3f8036eee34..e9a246e27f8 100644
--- a/test/mri/rexml/test_text.rb
+++ b/test/mri/rexml/test_text.rb
@@ -1,10 +1,57 @@
 # frozen_string_literal: false
-require "rexml/text"
+
+require_relative "rexml_test_utils"
 
 module REXMLTests
   class TextTester < Test::Unit::TestCase
     include REXML
 
+    def test_new_text_response_whitespace_default
+      text = Text.new("a  b\t\tc", true)
+      assert_equal("a b\tc", Text.new(text).to_s)
+    end
+
+    def test_new_text_response_whitespace_true
+      text = Text.new("a  b\t\tc", true)
+      assert_equal("a  b\t\tc", Text.new(text, true).to_s)
+    end
+
+    def test_new_text_raw_default
+      text = Text.new("&amp;lt;", false, nil, true)
+      assert_equal("&amp;lt;", Text.new(text).to_s)
+    end
+
+    def test_new_text_raw_false
+      text = Text.new("&amp;lt;", false, nil, true)
+      assert_equal("&amp;amp;lt;", Text.new(text, false, nil, false).to_s)
+    end
+
+    def test_new_text_entity_filter_default
+      document = REXML::Document.new(<<-XML)
+<!DOCTYPE root [
+  <!ENTITY a "aaa">
+  <!ENTITY b "bbb">
+]>
+<root/>
+      XML
+      text = Text.new("aaa bbb", false, document.root, nil, ["a"])
+      assert_equal("aaa &b;",
+                   Text.new(text, false, document.root).to_s)
+    end
+
+    def test_new_text_entity_filter_custom
+      document = REXML::Document.new(<<-XML)
+<!DOCTYPE root [
+  <!ENTITY a "aaa">
+  <!ENTITY b "bbb">
+]>
+<root/>
+      XML
+      text = Text.new("aaa bbb", false, document.root, nil, ["a"])
+      assert_equal("&a; bbb",
+                   Text.new(text, false, document.root, nil, ["b"]).to_s)
+    end
+
     def test_shift_operator_chain
       text = Text.new("original\r\n")
       text << "append1\r\n" << "append2\r\n"
@@ -18,5 +65,11 @@ def test_shift_operator_cache
       text << "append3\r\n" << "append4\r\n"
       assert_equal("original\nappend1\nappend2\nappend3\nappend4\n", text.to_s)
     end
+
+    def test_clone
+      text = Text.new("&amp;lt; <")
+      assert_equal(text.to_s,
+                   text.clone.to_s)
+    end
   end
 end
diff --git a/test/mri/rexml/test_xml_declaration.rb b/test/mri/rexml/test_xml_declaration.rb
index a4d97c41d00..1d5a6d312ff 100644
--- a/test/mri/rexml/test_xml_declaration.rb
+++ b/test/mri/rexml/test_xml_declaration.rb
@@ -1,4 +1,3 @@
-# -*- coding: utf-8 -*-
 # frozen_string_literal: false
 #
 #  Created by Henrik Mårtensson on 2007-02-18.
@@ -10,11 +9,11 @@
 module REXMLTests
   class TestXmlDeclaration < Test::Unit::TestCase
     def setup
-      xml = <<-'END_XML'
+      xml = <<-XML
       <?xml encoding= 'UTF-8' standalone='yes'?>
       <root>
       </root>
-      END_XML
+      XML
       @doc = REXML::Document.new xml
       @root = @doc.root
       @xml_declaration = @doc.children[0]
@@ -32,5 +31,12 @@ def test_has_sibling
       assert_kind_of(REXML::XMLDecl, @root.previous_sibling.previous_sibling)
       assert_kind_of(REXML::Element, @xml_declaration.next_sibling.next_sibling)
     end
+
+    def test_write_prologue_quote
+      @doc.context[:prologue_quote] = :quote
+      assert_equal("<?xml version=\"1.0\" " +
+                   "encoding=\"UTF-8\" standalone=\"yes\"?>",
+                   @xml_declaration.to_s)
+    end
   end
 end
diff --git a/test/mri/rexml/xpath/test_base.rb b/test/mri/rexml/xpath/test_base.rb
index 5079fdd75a8..5a03087ca6d 100644
--- a/test/mri/rexml/xpath/test_base.rb
+++ b/test/mri/rexml/xpath/test_base.rb
@@ -632,29 +632,36 @@ def test_spaces
           <c id='a'/>
         </b>
         <c id='b'/>
+        <c id='c'/>
+        <c/>
       </a>")
-      assert_equal( 1, REXML::XPath.match(doc,
-        "//*[local-name()='c' and @id='b']").size )
-      assert_equal( 1, REXML::XPath.match(doc,
-        "//*[ local-name()='c' and @id='b' ]").size )
-      assert_equal( 1, REXML::XPath.match(doc,
-        "//*[ local-name() = 'c' and @id = 'b' ]").size )
-      assert_equal( 1,
-        REXML::XPath.match(doc, '/a/c[@id]').size )
-      assert_equal( 1,
-        REXML::XPath.match(doc, '/a/c[(@id)]').size )
-      assert_equal( 1,
-        REXML::XPath.match(doc, '/a/c[ @id ]').size )
-      assert_equal( 1,
-        REXML::XPath.match(doc, '/a/c[ (@id) ]').size )
-      assert_equal( 1,
-        REXML::XPath.match(doc, '/a/c[( @id )]').size )
-      assert_equal( 1, REXML::XPath.match(doc.root,
-        '/a/c[ ( @id ) ]').size )
-      assert_equal( 1, REXML::XPath.match(doc,
-        '/a/c [ ( @id ) ] ').size )
-      assert_equal( 1, REXML::XPath.match(doc,
-        ' / a / c [ ( @id ) ] ').size )
+      match = lambda do |xpath|
+        REXML::XPath.match(doc, xpath).collect(&:to_s)
+      end
+      assert_equal(["<c id='b'/>"],
+                   match.call("//*[local-name()='c' and @id='b']"))
+      assert_equal(["<c id='b'/>"],
+                   match.call("//*[ local-name()='c' and @id='b' ]"))
+      assert_equal(["<c id='b'/>"],
+                   match.call("//*[ local-name() = 'c' and @id = 'b' ]"))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call('/a/c[@id]'))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call('/a/c[(@id)]'))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call('/a/c[ @id ]'))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call('/a/c[ (@id) ]'))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call('/a/c[( @id )]'))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call('/a/c[ ( @id ) ]'))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call('/a/c [ ( @id ) ] '))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call(' / a / c [ ( @id ) ] '))
+      assert_equal(["<c id='b'/>", "<c id='c'/>"],
+                   match.call('/ a / child:: c [( @id )] /'))
     end
 
     def test_text_nodes
@@ -692,11 +699,22 @@ def test_auto_string_value
     end
 
     def test_ordering
-      source = "<a><b><c id='1'/><c id='2'/></b><b><d id='1'/><d id='2'/></b></a>"
+      source = <<-XML
+<a>
+  <b>
+    <c id='1'/>
+    <c id='2'/>
+  </b>
+  <b>
+    <d id='3'/>
+    <d id='4'/>
+  </b>
+</a>
+      XML
       d = REXML::Document.new( source )
       r = REXML::XPath.match( d, %q{/a/*/*[1]} )
-      assert_equal( 1, r.size )
-      r.each { |el| assert_equal( '1', el.attribute('id').value ) }
+      assert_equal(["1", "3"],
+                   r.collect {|element| element.attribute("id").value})
     end
 
     def test_descendant_or_self_ordering
@@ -830,31 +848,44 @@ def test_a_star_star_one
 </a>
       EOL
       d = REXML::Document.new( string )
-      c1 = XPath.match( d, '/a/*/*[1]' )
-      assert_equal( 1, c1.length )
-      assert_equal( 'c1', c1[0].name )
+      cs = XPath.match( d, '/a/*/*[1]' )
+      assert_equal(["c1", "c2"], cs.collect(&:name))
     end
 
     def test_sum
-      d = Document.new("<a>"+
-      "<b>1</b><b>2</b><b>3</b>"+
-      "<c><d>1</d><d>2</d></c>"+
-      "<e att='1'/><e att='2'/>"+
-      "</a>")
-
-      for v,p in [[6, "sum(/a/b)"],
-        [9, "sum(//b | //d)"],
-        [3, "sum(/a/e/@*)"] ]
-        assert_equal( v, XPath::match( d, p ).first )
-      end
+      d = Document.new(<<-XML)
+<a>
+  <b>1</b>
+  <b>2</b>
+  <b>3</b>
+  <c>
+    <d>1</d>
+    <d>2</d>
+  </c>
+  <e att='1'/>
+  <e att='2'/>
+</a>
+      XML
+
+      assert_equal([6], XPath::match(d, "sum(/a/b)"))
+      assert_equal([9], XPath::match(d, "sum(//b | //d)"))
+      assert_equal([3], XPath::match(d, "sum(/a/e/@*)"))
     end
 
     def test_xpath_namespace
-      d = REXML::Document.new("<tag1 xmlns='ns1'><tag2 xmlns='ns2'/><tada>xa</tada></tag1>")
-      x = d.root
-      num = 0
-      x.each_element('tada') {  num += 1 }
-      assert_equal(1, num)
+      d = REXML::Document.new(<<-XML)
+<tag1 xmlns='ns1'>
+  <tag2 xmlns='ns2'/>
+  <tada>xa</tada>
+  <tada xmlns=''>xb</tada>
+</tag1>
+      XML
+      actual = []
+      d.root.each_element('tada') do |element|
+        actual << element.to_s
+      end
+      assert_equal(["<tada>xa</tada>", "<tada xmlns=''>xb</tada>"],
+                   actual)
     end
 
     def test_ticket_39
@@ -990,7 +1021,7 @@ def test_ticket_59
       </a>"
       d = Document.new(data)
       res = d.elements.to_a( "//c" ).collect {|e| e.attributes['id'].to_i}
-      assert_equal( res, res.sort )
+      assert_equal((1..12).to_a, res)
     end
 
     def ticket_61_fixture(doc, xpath)
diff --git a/test/mri/rinda/test_rinda.rb b/test/mri/rinda/test_rinda.rb
index c899f32a8ab..9a25661bd9a 100644
--- a/test/mri/rinda/test_rinda.rb
+++ b/test/mri/rinda/test_rinda.rb
@@ -17,16 +17,36 @@ class MyTS < Rinda::TupleSpace
     def keeper_thread
       nil
     end
+
+    def stop_keeper
+      if @keeper
+        @keeper.kill
+        @keeper.join
+        @keeper = nil
+      end
+    end
   end
 
   def initialize
     @now = 2
     @reso = 1
+    @ts = nil
+    @inf = 2**31 - 1
+  end
+
+  def start_keeper
+    @now = 2
+    @reso = 1
+    @ts&.stop_keeper
     @ts = MyTS.new
     @ts.write([2, :now])
     @inf = 2**31 - 1
   end
 
+  def stop_keeper
+    @ts.stop_keeper
+  end
+
   def now
     @now.to_f
   end
@@ -100,6 +120,14 @@ def sleep(n)
 end
 
 module TupleSpaceTestModule
+  def setup
+    MockClock.instance.start_keeper
+  end
+
+  def teardown
+    MockClock.instance.stop_keeper
+  end
+
   def sleep(n)
     if Thread.current == Thread.main
       Time.forward(n)
@@ -446,6 +474,7 @@ class TupleSpaceTest < Test::Unit::TestCase
   include TupleSpaceTestModule
 
   def setup
+    super
     ThreadGroup.new.add(Thread.current)
     @ts = Rinda::TupleSpace.new(1)
   end
@@ -457,6 +486,7 @@ def teardown
         th.join
       end
     }
+    super
   end
 end
 
@@ -464,6 +494,7 @@ class TupleSpaceProxyTest < Test::Unit::TestCase
   include TupleSpaceTestModule
 
   def setup
+    super
     ThreadGroup.new.add(Thread.current)
     @ts_base = Rinda::TupleSpace.new(1)
     @ts = Rinda::TupleSpaceProxy.new(@ts_base)
@@ -478,6 +509,7 @@ def teardown
       end
     }
     @server.stop_service
+    super
   end
 
   def test_remote_array_and_hash
@@ -569,6 +601,8 @@ def ipv6_mc(rf, hops = nil)
       return # IPv6 address for multicast not available
     rescue Errno::ENETDOWN
       return # Network is down
+    rescue Errno::EHOSTUNREACH
+      return # Unreachable for some reason
     end
     begin
       yield v6mc
diff --git a/test/mri/ripper/test_lexer.rb b/test/mri/ripper/test_lexer.rb
index 2a1c7881e4d..48110857f86 100644
--- a/test/mri/ripper/test_lexer.rb
+++ b/test/mri/ripper/test_lexer.rb
@@ -90,4 +90,9 @@ def test_expr_at_beginning_in_heredoc
     ]
     assert_equal expect, Ripper.lex(src).map {|e| e[1]}
   end
+
+  def test_slice
+    assert_equal "string\#{nil}\n",
+      Ripper.slice(%(<<HERE\nstring\#{nil}\nHERE), "heredoc_beg .*? nl $(.*?) heredoc_end", 1)
+  end
 end
diff --git a/test/mri/ripper/test_parser_events.rb b/test/mri/ripper/test_parser_events.rb
index 2fca61e1d19..95ec661fcf5 100644
--- a/test/mri/ripper/test_parser_events.rb
+++ b/test/mri/ripper/test_parser_events.rb
@@ -1457,8 +1457,11 @@ def test_local_variables
   def test_block_variables
     assert_equal("[fcall(proc,[],&block([],[void()]))]", parse("proc{|;y|}"))
     if defined?(Process::RLIMIT_AS)
-      assert_in_out_err(["-I#{File.dirname(__FILE__)}", "-rdummyparser"],
-                        'Process.setrlimit(Process::RLIMIT_AS,100*1024*1024); puts DummyParser.new("proc{|;y|!y}").parse',
+      dir = File.dirname(__FILE__)
+      as = (RubyVM::MJIT.enabled? ? 150 : 100) * 1024 * 1024
+      assert_in_out_err(%W(-I#{dir} -rdummyparser),
+                        "Process.setrlimit(Process::RLIMIT_AS,#{as}); "\
+                        "puts DummyParser.new('proc{|;y|!y}').parse",
                         ["[fcall(proc,[],&block([],[unary(!,ref(y))]))]"], [], '[ruby-dev:39423]')
     end
   end
@@ -1484,13 +1487,6 @@ def test_invalid_global_variable_name
     assert_equal("`$' without identifiers is not allowed as a global variable name", compile_error('$'))
   end
 
-  def test_warning_shadowing
-    fmt, *args = warning("x = 1; tap {|;x|}")
-    assert_match(/shadowing outer local variable/, fmt)
-    assert_equal("x", args[0])
-    assert_match(/x/, fmt % args)
-  end
-
   def test_warning_ignored_magic_comment
     fmt, *args = warning("1; #-*- frozen-string-literal: true -*-")
     assert_match(/ignored after any tokens/, fmt)
diff --git a/test/mri/ripper/test_scanner_events.rb b/test/mri/ripper/test_scanner_events.rb
index b815da18f27..1a3413a0f09 100644
--- a/test/mri/ripper/test_scanner_events.rb
+++ b/test/mri/ripper/test_scanner_events.rb
@@ -60,11 +60,11 @@ def test_lex
                   [[1, 7], :on_rparen, ")", Ripper::EXPR_ENDFN],
                   [[1, 8], :on_kw, "end", Ripper::EXPR_END]],
                  Ripper.lex("def m(a)end")
-    assert_equal [[[1, 0], :on_int, "1", Ripper::EXPR_END | Ripper::EXPR_ENDARG],
+    assert_equal [[[1, 0], :on_int, "1", Ripper::EXPR_END],
                   [[1, 1], :on_nl, "\n", Ripper::EXPR_BEG],
-                  [[2, 0], :on_int, "2", Ripper::EXPR_END | Ripper::EXPR_ENDARG],
+                  [[2, 0], :on_int, "2", Ripper::EXPR_END],
                   [[2, 1], :on_nl, "\n", Ripper::EXPR_BEG],
-                  [[3, 0], :on_int, "3", Ripper::EXPR_END | Ripper::EXPR_ENDARG]],
+                  [[3, 0], :on_int, "3", Ripper::EXPR_END]],
                  Ripper.lex("1\n2\n3")
     assert_equal [[[1, 0], :on_heredoc_beg, "<<""EOS", Ripper::EXPR_BEG],
                   [[1, 5], :on_nl, "\n", Ripper::EXPR_BEG],
@@ -86,21 +86,21 @@ def test_lex
                  Ripper.lex("/foo\n\u3020/")
     assert_equal [[[1, 0], :on_tstring_beg, "'", Ripper::EXPR_BEG],
                   [[1, 1], :on_tstring_content, "foo\n\xe3\x80\xa0", Ripper::EXPR_BEG],
-                  [[2, 3], :on_tstring_end, "'", Ripper::EXPR_END | Ripper::EXPR_ENDARG]],
+                  [[2, 3], :on_tstring_end, "'", Ripper::EXPR_END]],
                  Ripper.lex("'foo\n\xe3\x80\xa0'")
     assert_equal [[[1, 0], :on_tstring_beg, "'", Ripper::EXPR_BEG],
                   [[1, 1], :on_tstring_content, "\u3042\n\u3044", Ripper::EXPR_BEG],
-                  [[2, 3], :on_tstring_end, "'", Ripper::EXPR_END | Ripper::EXPR_ENDARG]],
+                  [[2, 3], :on_tstring_end, "'", Ripper::EXPR_END]],
                  Ripper.lex("'\u3042\n\u3044'")
-    assert_equal [[[1, 0], :on_rational, "1r", Ripper::EXPR_END | Ripper::EXPR_ENDARG],
+    assert_equal [[[1, 0], :on_rational, "1r", Ripper::EXPR_END],
                   [[1, 2], :on_nl, "\n", Ripper::EXPR_BEG],
-                  [[2, 0], :on_imaginary, "2i", Ripper::EXPR_END | Ripper::EXPR_ENDARG],
+                  [[2, 0], :on_imaginary, "2i", Ripper::EXPR_END],
                   [[2, 2], :on_nl, "\n", Ripper::EXPR_BEG],
-                  [[3, 0], :on_imaginary, "3ri", Ripper::EXPR_END | Ripper::EXPR_ENDARG],
+                  [[3, 0], :on_imaginary, "3ri", Ripper::EXPR_END],
                   [[3, 3], :on_nl, "\n", Ripper::EXPR_BEG],
-                  [[4, 0], :on_rational, "4.2r", Ripper::EXPR_END | Ripper::EXPR_ENDARG],
+                  [[4, 0], :on_rational, "4.2r", Ripper::EXPR_END],
                   [[4, 4], :on_nl, "\n", Ripper::EXPR_BEG],
-                  [[5, 0], :on_imaginary, "5.6ri", Ripper::EXPR_END | Ripper::EXPR_ENDARG],
+                  [[5, 0], :on_imaginary, "5.6ri", Ripper::EXPR_END],
                  ],
                  Ripper.lex("1r\n2i\n3ri\n4.2r\n5.6ri")
      assert_equal [[[1, 0], :on_heredoc_beg, "<<~EOS", Ripper::EXPR_BEG],
@@ -840,6 +840,11 @@ def test_sp
                  scan('sp', "%w(  w  )")
     assert_equal [],
                  scan('sp', "p(/ /)")
+
+    assert_equal ["\\\n"],
+                 scan('sp', "\\\n")
+    assert_equal ['\ '],
+                 scan('sp', '\ ')
   end
 
   # `nl' event always means End-Of-Statement.
diff --git a/test/mri/rss/test_parser.rb b/test/mri/rss/test_parser.rb
index 7d64657d579..4e7cc1b963f 100644
--- a/test/mri/rss/test_parser.rb
+++ b/test/mri/rss/test_parser.rb
@@ -61,5 +61,61 @@ def test_parse_tag_includes_hyphen
 EOR
       end
     end
+
+    def test_parse_option_validate_nil
+      assert_raise(RSS::MissingTagError) do
+        RSS::Parser.parse(make_RDF(<<-RDF), :validate => nil)
+        RDF
+      end
+    end
+
+    def test_parse_option_validate_true
+      assert_raise(RSS::MissingTagError) do
+        RSS::Parser.parse(make_RDF(<<-RDF), :validate => true)
+        RDF
+      end
+    end
+
+    def test_parse_option_validate_false
+      rdf = RSS::Parser.parse(make_RDF(<<-RDF), :validate => false)
+      RDF
+      assert_nil(rdf.channel)
+    end
+
+    def test_parse_option_ignore_unknown_element_nil
+      assert_nothing_raised do
+        RSS::Parser.parse(make_RDF(<<-RDF), :ignore_unknown_element => nil)
+<unknown/>
+#{make_channel}
+#{make_item}
+#{make_textinput}
+#{make_image}
+        RDF
+      end
+    end
+
+    def test_parse_option_ignore_unknown_element_true
+      assert_nothing_raised do
+        RSS::Parser.parse(make_RDF(<<-RDF), :ignore_unknown_element => true)
+<unknown/>
+#{make_channel}
+#{make_item}
+#{make_textinput}
+#{make_image}
+        RDF
+      end
+    end
+
+    def test_parse_option_ignore_unknown_element_false
+      assert_raise(RSS::NotExpectedTagError) do
+        RSS::Parser.parse(make_RDF(<<-RDF), :ignore_unknown_element => false)
+<unknown/>
+#{make_channel}
+#{make_item}
+#{make_textinput}
+#{make_image}
+        RDF
+      end
+    end
   end
 end
diff --git a/test/mri/ruby/enc/test_case_comprehensive.rb b/test/mri/ruby/enc/test_case_comprehensive.rb
index cd6447e9282..bde47017a20 100644
--- a/test/mri/ruby/enc/test_case_comprehensive.rb
+++ b/test/mri/ruby/enc/test_case_comprehensive.rb
@@ -73,7 +73,11 @@ def self.read_data
       @@codepoints << code
       upcase[code] = hex2utf8 data[12] unless data[12].empty?
       downcase[code] = hex2utf8 data[13] unless data[13].empty?
-      titlecase[code] = hex2utf8 data[14] unless data[14].empty?
+      if code>="\u1C90" and code<="\u1CBF" # exception for Georgian: use lowercase for titlecase
+        titlecase[code] = hex2utf8(data[13]) unless data[13].empty?
+      else
+        titlecase[code] = hex2utf8 data[14] unless data[14].empty?
+      end
     end
     read_data_file('CaseFolding') do |code, data|
       casefold[code] = hex2utf8(data[2]) if data[1] =~ /^[CF]$/
diff --git a/test/mri/ruby/enc/test_case_mapping.rb b/test/mri/ruby/enc/test_case_mapping.rb
index d095cd569ca..aa20531783e 100644
--- a/test/mri/ruby/enc/test_case_mapping.rb
+++ b/test/mri/ruby/enc/test_case_mapping.rb
@@ -187,6 +187,29 @@ def test_reorder_unfold
     assert_equal 0, "\ua64A" =~ /\uA64B/i
   end
 
+  def test_georgian_canary
+    message = "Reexamine implementation of Georgian in String#capitalize"
+    assert_equal false, "\u1CBB".match?(/\p{assigned}/), message
+    assert_equal false, "\u1CBC".match?(/\p{assigned}/), message
+  end
+
+  def test_georgian_unassigned
+    message = "Unassigned codepoints should not be converted"
+    assert_equal "\u1CBB", "\u1CBB".capitalize, message
+    assert_equal "\u1CBC", "\u1CBC".capitalize, message
+  end
+
+  def test_georgian_capitalize
+    assert_equal "\u10D0\u10D1\u10D2", "\u1C90\u1C91\u1C92".capitalize
+    assert_equal "\u10D0\u10D1\u10D2", "\u1C90\u1C91\u10D2".capitalize
+    assert_equal "\u10D0\u10D1\u10D2", "\u1C90\u10D1\u1C92".capitalize
+    assert_equal "\u10D0\u10D1\u10D2", "\u1C90\u10D1\u10D2".capitalize
+    assert_equal "\u10D0\u10D1\u10D2", "\u10D0\u1C91\u1C92".capitalize
+    assert_equal "\u10D0\u10D1\u10D2", "\u10D0\u1C91\u10D2".capitalize
+    assert_equal "\u10D0\u10D1\u10D2", "\u10D0\u10D1\u1C92".capitalize
+    assert_equal "\u10D0\u10D1\u10D2", "\u10D0\u10D1\u10D2".capitalize
+  end
+
   def no_longer_a_test_buffer_allocations
     assert_equal 'TURKISH*ı'*10, ('I'*10).downcase(:turkic)
     assert_equal 'TURKISH*ı'*100, ('I'*100).downcase(:turkic)
diff --git a/test/mri/ruby/enc/test_emoji_breaks.rb b/test/mri/ruby/enc/test_emoji_breaks.rb
new file mode 100644
index 00000000000..37a29640d85
--- /dev/null
+++ b/test/mri/ruby/enc/test_emoji_breaks.rb
@@ -0,0 +1,119 @@
+# frozen_string_literal: true
+# Copyright © 2018 Martin J. Dürst (duerst@it.aoyama.ac.jp)
+
+require "test/unit"
+
+class BreakTest
+  attr_reader :string, :comment, :filename, :line_number, :type, :shortname
+
+  def initialize (filename, line_number, data, comment='')
+    @filename = filename
+    @line_number = line_number
+    @comment = comment.gsub(/\s+/, ' ').strip
+    if filename=='emoji-test'
+      codes, @type = data.split(/\s*;\s*/)
+      @shortname = ''
+    else
+      codes, @type, @shortname = data.split(/\s*;\s*/)
+    end
+    @type = @type.gsub(/\s+/, ' ').strip
+    @shortname = @shortname.gsub(/\s+/, ' ').strip
+    @string = codes.split(/\s+/)
+                   .map do |ch|
+                          c = ch.to_i(16)
+                           # eliminate cases with surrogates
+                          # raise ArgumentError if 0xD800 <= c and c <= 0xDFFF
+                          c.chr('UTF-8')
+                        end.join
+  end
+end
+
+class TestEmojiBreaks < Test::Unit::TestCase
+  EMOJI_DATA_FILES = %w[emoji-sequences emoji-test emoji-variation-sequences emoji-zwj-sequences]
+  EMOJI_VERSION = RbConfig::CONFIG['UNICODE_EMOJI_VERSION']
+  EMOJI_DATA_PATH = File.expand_path("../../../enc/unicode/data/emoji/#{EMOJI_VERSION}", __dir__)
+
+  def self.expand_filename(basename)
+    File.expand_path("#{EMOJI_DATA_PATH}/#{basename}.txt", __dir__)
+  end
+
+  def self.data_files_available?
+    EMOJI_DATA_FILES.all? do |f|
+      File.exist?(expand_filename(f))
+    end
+  end
+
+  def test_data_files_available
+    unless TestEmojiBreaks.data_files_available?
+      skip "Emoji data files not available in #{EMOJI_DATA_PATH}."
+    end
+  end
+end
+
+TestEmojiBreaks.data_files_available? and  class TestEmojiBreaks
+  def read_data
+    tests = []
+    EMOJI_DATA_FILES.each do |filename|
+      version_mismatch = true
+      file_tests = []
+      IO.foreach(TestEmojiBreaks.expand_filename(filename), encoding: Encoding::UTF_8) do |line|
+        line.chomp!
+        raise "File Name Mismatch"  if $.==1 and not line=="# #{filename}.txt"
+        version_mismatch = false  if line=="# Version: #{EMOJI_VERSION}"
+        next  if /\A(#|\z)/.match? line
+        file_tests << BreakTest.new(filename, $., *line.split('#')) rescue 'whatever'
+      end
+      raise "File Version Mismatch"  if version_mismatch
+      tests += file_tests
+    end
+    tests
+  end
+
+  def all_tests
+    @@tests ||= read_data
+  rescue Errno::ENOENT
+    @@tests ||= []
+  end
+
+  def test_single_emoji
+    all_tests.each do |test|
+      expected = [test.string]
+      actual = test.string.each_grapheme_cluster.to_a
+      assert_equal expected, actual,
+        "file: #{test.filename}, line #{test.line_number}, " +
+        "type: #{test.type}, shortname: #{test.shortname}, comment: #{test.comment}"
+    end
+  end
+
+  def test_embedded_emoji
+    all_tests.each do |test|
+      expected = ["\t", test.string, "\t"]
+      actual = "\t#{test.string}\t".each_grapheme_cluster.to_a
+      assert_equal expected, actual,
+        "file: #{test.filename}, line #{test.line_number}, " +
+        "type: #{test.type}, shortname: #{test.shortname}, comment: #{test.comment}"
+    end
+  end
+
+  # test some pseodorandom combinations of emoji
+  def test_mixed_emoji
+    srand 0
+    length = all_tests.length
+    step =  503 # use a prime number
+    all_tests.each do |test1|
+      start = rand step
+      start.step(by: step, to: length-1) do |t2|
+        test2 = all_tests[t2]
+        # exclude skin tones, because they glue to previous grapheme clusters
+        next  if (0x1F3FB..0x1F3FF).include? test2.string.ord
+        expected = [test1.string, test2.string]
+        actual = (test1.string+test2.string).each_grapheme_cluster.to_a
+        assert_equal expected, actual,
+          "file1: #{test1.filename}, line1 #{test1.line_number}, " +
+          "file2: #{test2.filename}, line2 #{test2.line_number},\n" +
+          "type1: #{test1.type}, shortname1: #{test1.shortname}, comment1: #{test1.comment},\n" +
+          "type2: #{test2.type}, shortname2: #{test2.shortname}, comment2: #{test2.comment}"
+      end
+    end
+  end
+end
diff --git a/test/mri/ruby/marshaltestlib.rb b/test/mri/ruby/marshaltestlib.rb
index 358d3c5133e..5c48a8d8535 100644
--- a/test/mri/ruby/marshaltestlib.rb
+++ b/test/mri/ruby/marshaltestlib.rb
@@ -110,7 +110,9 @@ def test_array_ivar
   class MyException < Exception; def initialize(v, *args) super(*args); @v = v; end; attr_reader :v; end
   def test_exception
     marshal_equal(Exception.new('foo')) {|o| o.message}
-    marshal_equal(assert_raise(NoMethodError) {no_such_method()}) {|o| o.message}
+    obj = Object.new
+    e = assert_raise(NoMethodError) {obj.no_such_method()}
+    marshal_equal(e) {|o| o.message}
   end
 
   def test_exception_subclass
diff --git a/test/mri/ruby/test_argf.rb b/test/mri/ruby/test_argf.rb
index 311469aad95..a76bdccf45c 100644
--- a/test/mri/ruby/test_argf.rb
+++ b/test/mri/ruby/test_argf.rb
@@ -35,8 +35,8 @@ def make_tempfile0(basename)
     open("#{@tmpdir}/#{basename}-#{@tmp_count}", "w")
   end
 
-  def make_tempfile
-    t = make_tempfile0("argf-qux")
+  def make_tempfile(basename = "argf-qux")
+    t = make_tempfile0(basename)
     t.puts "foo"
     t.puts "bar"
     t.puts "baz"
@@ -255,6 +255,26 @@ def test_inplace_rename_impossible
     assert_warning(/#{base}/) {argf.gets}
   end
 
+  def test_inplace_nonascii
+    ext = Encoding.default_external or
+      skip "no default external encoding"
+    t = nil
+    ["\u{3042}", "\u{e9}"].any? do |n|
+      t = make_tempfile(n.encode(ext))
+    rescue Encoding::UndefinedConversionError
+    end
+    t or skip "no name to test"
+    assert_in_out_err(["-i.bak", "-", t.path],
+                      "#{<<~"{#"}\n#{<<~'};'}")
+    {#
+      puts ARGF.gets.chomp + '.new'
+      puts ARGF.gets.chomp + '.new'
+      puts ARGF.gets.chomp + '.new'
+    };
+    assert_equal("foo.new\n""bar.new\n""baz.new\n", File.read(t.path))
+    assert_equal("foo\n""bar\n""baz\n", File.read(t.path + ".bak"))
+  end
+
   def test_inplace_no_backup
     t = make_tempfile
 
diff --git a/test/mri/ruby/test_arithmetic_sequence.rb b/test/mri/ruby/test_arithmetic_sequence.rb
new file mode 100644
index 00000000000..88fd3136cce
--- /dev/null
+++ b/test/mri/ruby/test_arithmetic_sequence.rb
@@ -0,0 +1,459 @@
+# frozen_string_literal: false
+require 'test/unit'
+
+class TestArithmeticSequence < Test::Unit::TestCase
+  def test_new
+    assert_raise(NoMethodError) { Enumerator::ArithmeticSequence.new }
+  end
+
+  def test_allocate
+    assert_raise(TypeError) { Enumerator::ArithmeticSequence.allocate }
+  end
+
+  def test_begin
+    assert_equal(1, 1.step.begin)
+    assert_equal(1, 1.step(10).begin)
+    assert_equal(1, 1.step(to: 10).begin)
+    assert_equal(1, 1.step(nil).begin)
+    assert_equal(1, 1.step(to: nil).begin)
+    assert_equal(1, 1.step(by: 2).begin)
+    assert_equal(1, 1.step(by: -1).begin)
+    assert_equal(1, 1.step(by: nil).begin)
+    assert_equal(1, 1.step(10, 2).begin)
+    assert_equal(1, 1.step(10, by: 2).begin)
+    assert_equal(1, 1.step(to: 10, by: 2).begin)
+    assert_equal(10, 10.step(to: 1, by: -1).begin)
+    assert_equal(10, 10.step(to: 1, by: -2).begin)
+    assert_equal(10, 10.step(to: -1, by: -2).begin)
+    assert_equal(10.0, 10.0.step(to: -1.0, by: -2.0).begin)
+  end
+
+  def test_end
+    assert_equal(nil, 1.step.end)
+    assert_equal(10, 1.step(10).end)
+    assert_equal(10, 1.step(to: 10).end)
+    assert_equal(nil, 1.step(nil).end)
+    assert_equal(nil, 1.step(to: nil).end)
+    assert_equal(nil, 1.step(by: 2).end)
+    assert_equal(nil, 1.step(by: -1).end)
+    assert_equal(nil, 1.step(by: nil).end)
+    assert_equal(10, 1.step(10, 2).end)
+    assert_equal(10, 1.step(10, by: 2).end)
+    assert_equal(10, 1.step(to: 10, by: 2).end)
+    assert_equal(1, 10.step(to: 1, by: -1).end)
+    assert_equal(1, 10.step(to: 1, by: -2).end)
+    assert_equal(-1, 10.step(to: -1, by: -2).end)
+    assert_equal(-1.0, 10.0.step(to: -1.0, by: -2.0).end)
+  end
+
+  def test_exclude_end_p
+    assert_equal(false, 1.step.exclude_end?)
+    assert_equal(false, 1.step(10).exclude_end?)
+    assert_equal(false, 1.step(to: 10).exclude_end?)
+    assert_equal(false, 1.step(nil).exclude_end?)
+    assert_equal(false, 1.step(to: nil).exclude_end?)
+    assert_equal(false, 1.step(by: 2).exclude_end?)
+    assert_equal(false, 1.step(by: -1).exclude_end?)
+    assert_equal(false, 1.step(by: nil).exclude_end?)
+    assert_equal(false, 1.step(10, 2).exclude_end?)
+    assert_equal(false, 1.step(10, by: 2).exclude_end?)
+    assert_equal(false, 1.step(to: 10, by: 2).exclude_end?)
+    assert_equal(false, 10.step(to: 1, by: -1).exclude_end?)
+    assert_equal(false, 10.step(to: 1, by: -2).exclude_end?)
+    assert_equal(false, 10.step(to: -1, by: -2).exclude_end?)
+  end
+
+  def test_step
+    assert_equal(1, 1.step.step)
+    assert_equal(1, 1.step(10).step)
+    assert_equal(1, 1.step(to: 10).step)
+    assert_equal(1, 1.step(nil).step)
+    assert_equal(1, 1.step(to: nil).step)
+    assert_equal(2, 1.step(by: 2).step)
+    assert_equal(-1, 1.step(by: -1).step)
+    assert_equal(1, 1.step(by: nil).step)
+    assert_equal(2, 1.step(10, 2).step)
+    assert_equal(2, 1.step(10, by: 2).step)
+    assert_equal(2, 1.step(to: 10, by: 2).step)
+    assert_equal(-1, 10.step(to: 1, by: -1).step)
+    assert_equal(-2, 10.step(to: 1, by: -2).step)
+    assert_equal(-2, 10.step(to: -1, by: -2).step)
+    assert_equal(-2.0, 10.0.step(to: -1.0, by: -2.0).step)
+  end
+
+  def test_eq
+    seq = 1.step
+    assert_equal(seq, seq)
+    assert_equal(seq, 1.step)
+    assert_equal(seq, 1.step(nil))
+  end
+
+  def test_eqq
+    seq = 1.step
+    assert_operator(seq, :===, seq)
+    assert_operator(seq, :===, 1.step)
+    assert_operator(seq, :===, 1.step(nil))
+  end
+
+  def test_eql_p
+    seq = 1.step
+    assert_operator(seq, :eql?, seq)
+    assert_operator(seq, :eql?, 1.step)
+    assert_operator(seq, :eql?, 1.step(nil))
+  end
+
+  def test_hash
+    seq = 1.step
+    assert_equal(seq.hash, seq.hash)
+    assert_equal(seq.hash, 1.step.hash)
+    assert_equal(seq.hash, 1.step(nil).hash)
+    assert_kind_of(String, seq.hash.to_s)
+  end
+
+  def test_first
+    seq = 1.step
+    assert_equal(1, seq.first)
+    assert_equal([1], seq.first(1))
+    assert_equal([1, 2, 3], seq.first(3))
+
+    seq = 1.step(by: 2)
+    assert_equal(1, seq.first)
+    assert_equal([1], seq.first(1))
+    assert_equal([1, 3, 5], seq.first(3))
+
+    seq = 10.step(by: -2)
+    assert_equal(10, seq.first)
+    assert_equal([10], seq.first(1))
+    assert_equal([10, 8, 6], seq.first(3))
+
+    seq = 1.step(by: 4)
+    assert_equal([1, 5, 9], seq.first(3))
+
+    seq = 1.step(10, by: 4)
+    assert_equal([1, 5, 9], seq.first(5))
+
+    seq = 1.step(0)
+    assert_equal(nil, seq.first)
+    assert_equal([], seq.first(1))
+    assert_equal([], seq.first(3))
+
+    seq = 1.step(10, by: -1)
+    assert_equal(nil, seq.first)
+    assert_equal([], seq.first(1))
+    assert_equal([], seq.first(3))
+
+    seq = 1.step(10, by: 0)
+    assert_equal(1, seq.first)
+    assert_equal([1], seq.first(1))
+    assert_equal([1, 1, 1], seq.first(3))
+
+    seq = 10.0.step(-1.0, by: -2.0)
+    assert_equal(10.0, seq.first)
+    assert_equal([10.0], seq.first(1))
+    assert_equal([10.0, 8.0, 6.0], seq.first(3))
+  end
+
+  def test_first_bug15518
+    bug15518 = '[Bug #15518]'
+    seq = (1 .. 10.0).step(1)
+    five_float_classes = Array.new(5) { Float }
+    assert_equal(five_float_classes, seq.first(5).map(&:class), bug15518)
+    assert_equal([1.0, 2.0, 3.0, 4.0, 5.0], seq.first(5), bug15518)
+    seq = (1 .. Float::INFINITY).step(1)
+    assert_equal(five_float_classes, seq.first(5).map(&:class), bug15518)
+    assert_equal([1.0, 2.0, 3.0, 4.0, 5.0], seq.first(5), bug15518)
+    seq = (1 .. Float::INFINITY).step(1r)
+    assert_equal(five_float_classes, seq.first(5).map(&:class), bug15518)
+    assert_equal([1.0, 2.0, 3.0, 4.0, 5.0], seq.first(5), bug15518)
+  end
+
+  def test_last
+    seq = 1.step(10)
+    assert_equal(10, seq.last)
+    assert_equal([10], seq.last(1))
+    assert_equal([8, 9, 10], seq.last(3))
+
+    seq = 1.step(10, 2)
+    assert_equal(9, seq.last)
+    assert_equal([9], seq.last(1))
+    assert_equal([5, 7, 9], seq.last(3))
+
+    seq = 10.step(1, -2)
+    assert_equal(2, seq.last)
+    assert_equal([2], seq.last(1))
+    assert_equal([6, 4, 2], seq.last(3))
+
+    seq = 10.step(-1, -2)
+    assert_equal(0, seq.last)
+
+    seq = 1.step(10, 4)
+    assert_equal([1, 5, 9], seq.last(5))
+
+    seq = 10.step(1)
+    assert_equal(nil, seq.last)
+    assert_equal([], seq.last(1))
+    assert_equal([], seq.last(5))
+
+    seq = 1.step(10, -1)
+    assert_equal(nil, seq.last)
+    assert_equal([], seq.last(1))
+    assert_equal([], seq.last(5))
+
+    seq = (1..10).step
+    assert_equal(10, seq.last)
+    assert_equal([10], seq.last(1))
+    assert_equal([8, 9, 10], seq.last(3))
+
+    seq = (1...10).step
+    assert_equal(9, seq.last)
+    assert_equal([9], seq.last(1))
+    assert_equal([7, 8, 9], seq.last(3))
+
+    seq = 10.0.step(-3.0, by: -2.0)
+    assert_equal(-2.0, seq.last)
+    assert_equal([-2.0], seq.last(1))
+    assert_equal([2.0, 0.0, -2.0], seq.last(3))
+  end
+
+  def test_last_with_float
+    res = (1..3).step(2).last(2.0)
+    assert_equal([1, 3], res)
+    assert_instance_of Integer, res[0]
+    assert_instance_of Integer, res[1]
+
+    res = (1..3).step(2).last(5.0)
+    assert_equal([1, 3], res)
+    assert_instance_of Integer, res[0]
+    assert_instance_of Integer, res[1]
+  end
+
+  def test_last_with_rational
+    res = (1..3).step(2).last(2r)
+    assert_equal([1, 3], res)
+    assert_instance_of Integer, res[0]
+    assert_instance_of Integer, res[1]
+
+    res = (1..3).step(2).last(10/2r)
+    assert_equal([1, 3], res)
+    assert_instance_of Integer, res[0]
+    assert_instance_of Integer, res[1]
+  end
+
+  def test_to_a
+    assert_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 1.step(10).to_a)
+    assert_equal([1, 3, 5, 7, 9], 1.step(10, 2).to_a)
+    assert_equal([1, 3, 5, 7, 9], (1..10).step(2).to_a)
+    assert_equal([10, 8, 6, 4, 2], 10.step(1, by: -2).to_a)
+    assert_equal([10, 8, 6, 4, 2], (10..1).step(-2).to_a)
+    assert_equal([10.0, 8.0, 6.0, 4.0, 2.0], (10.0..1.0).step(-2.0).to_a)
+  end
+
+  def test_to_a_bug15444
+    seq = ((1/10r)..(1/2r)).step(1/10r)
+    assert_num_equal_type([1/10r, 1/5r, 3/10r, 2/5r, 1/2r], seq.to_a,
+                          '[ruby-core:90648] [Bug #15444]')
+  end
+
+  def test_slice
+    seq = 1.step(10, 2)
+    assert_equal([[1, 3, 5], [7, 9]], seq.each_slice(3).to_a)
+
+    seq = 10.step(1, -2)
+    assert_equal([[10, 8, 6], [4, 2]], seq.each_slice(3).to_a)
+  end
+
+  def test_cons
+    seq = 1.step(10, 2)
+    assert_equal([[1, 3, 5], [3, 5, 7], [5, 7, 9]], seq.each_cons(3).to_a)
+
+    seq = 10.step(1, -2)
+    assert_equal([[10, 8, 6], [8, 6, 4], [6, 4, 2]], seq.each_cons(3).to_a)
+  end
+
+  def test_with_index
+    seq = 1.step(6, 2)
+    assert_equal([[1, 0], [3, 1], [5, 2]], seq.with_index.to_a)
+    assert_equal([[1, 10], [3, 11], [5, 12]], seq.with_index(10).to_a)
+
+    seq = 10.step(5, -2)
+    assert_equal([[10, 0], [8, 1], [6, 2]], seq.with_index.to_a)
+    assert_equal([[10, 10], [8, 11], [6, 12]], seq.with_index(10).to_a)
+  end
+
+  def test_with_object
+    obj = [0, 1]
+    seq = 1.step(10, 2)
+    ret = seq.each_with_object(obj) do |i, memo|
+      memo[0] += i
+      memo[1] *= i
+    end
+    assert_same(obj, ret)
+    assert_equal([25, 945], ret)
+
+    obj = [0, 1]
+    seq = 10.step(1, -2)
+    ret = seq.each_with_object(obj) do |i, memo|
+      memo[0] += i
+      memo[1] *= i
+    end
+    assert_same(obj, ret)
+    assert_equal([30, 3840], ret)
+  end
+
+  def test_next
+    seq = 1.step(10, 2)
+    [1, 3, 5, 7, 9].each do |i|
+      assert_equal(i, seq.next)
+    end
+
+    seq = 10.step(1, -2)
+    [10, 8, 6, 4, 2].each do |i|
+      assert_equal(i, seq.next)
+    end
+
+    seq = ((1/10r)..(1/2r)).step(0)
+    assert_equal(1/10r, seq.next)
+  end
+
+  def test_next_bug15444
+    seq = ((1/10r)..(1/2r)).step(1/10r)
+    assert_equal(1/10r, seq.next, '[ruby-core:90648] [Bug #15444]')
+  end
+
+  def test_next_rewind
+    seq = 1.step(6, 2)
+    assert_equal(1, seq.next)
+    assert_equal(3, seq.next)
+    seq.rewind
+    assert_equal(1, seq.next)
+    assert_equal(3, seq.next)
+    assert_equal(5, seq.next)
+    assert_raise(StopIteration) { seq.next }
+
+    seq = 10.step(5, -2)
+    assert_equal(10, seq.next)
+    assert_equal(8, seq.next)
+    seq.rewind
+    assert_equal(10, seq.next)
+    assert_equal(8, seq.next)
+    assert_equal(6, seq.next)
+    assert_raise(StopIteration) { seq.next }
+  end
+
+  def test_next_after_stopiteration
+    seq = 1.step(2, 2)
+    assert_equal(1, seq.next)
+    assert_raise(StopIteration) { seq.next }
+    assert_raise(StopIteration) { seq.next }
+    seq.rewind
+    assert_equal(1, seq.next)
+    assert_raise(StopIteration) { seq.next }
+    assert_raise(StopIteration) { seq.next }
+  end
+
+  def test_stop_result
+    seq = 1.step(2, 2)
+    res = seq.each {}
+    assert_equal(1, seq.next)
+    exc = assert_raise(StopIteration) { seq.next }
+    assert_equal(res, exc.result)
+  end
+
+  def test_peek
+    seq = 1.step(2, 2)
+    assert_equal(1, seq.peek)
+    assert_equal(1, seq.peek)
+    assert_equal(1, seq.next)
+    assert_raise(StopIteration) { seq.peek }
+    assert_raise(StopIteration) { seq.peek }
+
+    seq = 10.step(9, -2)
+    assert_equal(10, seq.peek)
+    assert_equal(10, seq.peek)
+    assert_equal(10, seq.next)
+    assert_raise(StopIteration) { seq.peek }
+    assert_raise(StopIteration) { seq.peek }
+  end
+
+  def test_next_values
+    seq = 1.step(2, 2)
+    assert_equal([1], seq.next_values)
+  end
+
+  def test_peek_values
+    seq = 1.step(2, 2)
+    assert_equal([1], seq.peek_values)
+  end
+
+  def test_num_step_inspect
+    assert_equal('(1.step)', 1.step.inspect)
+    assert_equal('(1.step(10))', 1.step(10).inspect)
+    assert_equal('(1.step(10, 2))', 1.step(10, 2).inspect)
+    assert_equal('(1.step(10, by: 2))', 1.step(10, by: 2).inspect)
+    assert_equal('(1.step(by: 2))', 1.step(by: 2).inspect)
+  end
+
+  def test_range_step_inspect
+    assert_equal('((1..).step)', (1..).step.inspect)
+    assert_equal('((1..10).step)', (1..10).step.inspect)
+    assert_equal('((1..10).step(2))', (1..10).step(2).inspect)
+  end
+
+  def test_num_step_size
+    assert_equal(10, 1.step(10).size)
+    assert_equal(5, 1.step(10, 2).size)
+    assert_equal(4, 1.step(10, 3).size)
+    assert_equal(1, 1.step(10, 10).size)
+    assert_equal(0, 1.step(0).size)
+    assert_equal(Float::INFINITY, 1.step.size)
+
+    assert_equal(10, 10.step(1, -1).size)
+    assert_equal(5, 10.step(1, -2).size)
+    assert_equal(4, 10.step(1, -3).size)
+    assert_equal(1, 10.step(1, -10).size)
+    assert_equal(0, 1.step(2, -1).size)
+    assert_equal(Float::INFINITY, 1.step(by: -1).size)
+  end
+
+  def test_range_step_size
+    assert_equal(10, (1..10).step.size)
+    assert_equal(9, (1...10).step.size)
+    assert_equal(5, (1..10).step(2).size)
+    assert_equal(5, (1...10).step(2).size)
+    assert_equal(4, (1...9).step(2).size)
+    assert_equal(Float::INFINITY, (1..).step.size)
+
+    assert_equal(10, (10..1).step(-1).size)
+    assert_equal(9, (10...1).step(-1).size)
+    assert_equal(5, (10..1).step(-2).size)
+    assert_equal(5, (10...1).step(-2).size)
+    assert_equal(4, (10...2).step(-2).size)
+    assert_equal(Float::INFINITY, (1..).step(-1).size)
+  end
+
+  def assert_num_equal_type(ary1, ary2, message=nil)
+    assert_equal(ary1.length, ary2.length, message)
+    ary1.zip(ary2) do |e1, e2|
+      assert_equal(e1.class, e2.class, message)
+      if e1.is_a? Complex
+        assert_equal(e1.real, e2.real, message)
+        assert_equal(e1.imag, e2.imag, message)
+      else
+        assert_equal(e1, e2, message)
+      end
+    end
+  end
+
+  def test_complex
+    assert_num_equal_type([1, 1+1i, 1+2i], (1..).step(1i).take(3))
+    assert_num_equal_type([1, 1+1.0i, 1+2.0i], (1..).step(1.0i).take(3))
+    assert_num_equal_type([0.0, 0.0+1.0i, 0.0+2.0i], (0.0..).step(1.0i).take(3))
+    assert_num_equal_type([0.0+0.0i, 0.0+1.0i, 0.0+2.0i], (0.0i..).step(1.0i).take(3))
+  end
+
+  def test_sum
+    assert_equal([1, 3, 5, 7, 9].sum, (1..10).step(2).sum)
+    assert_equal([1.0, 2.5, 4.0, 5.5, 7.0, 8.5, 10.0].sum, (1.0..10.0).step(1.5).sum)
+    assert_equal([1/2r, 1r, 3/2r, 2, 5/2r, 3, 7/2r, 4].sum, ((1/2r)...(9/2r)).step(1/2r).sum)
+  end
+end
diff --git a/test/mri/ruby/test_array.rb b/test/mri/ruby/test_array.rb
index 3212ed3aca5..8d48b86ea96 100644
--- a/test/mri/ruby/test_array.rb
+++ b/test/mri/ruby/test_array.rb
@@ -41,6 +41,7 @@ def test_0_literal
     assert_equal(2, x[2])
     assert_equal([1, 2, 3], x[1..3])
     assert_equal([1, 2, 3], x[1,3])
+    assert_equal([3, 4, 5], x[3..])
 
     x[0, 2] = 10
     assert_equal([10, 2, 3, 4, 5], x)
@@ -145,14 +146,17 @@ def test_beg_end_0
     assert_equal(1, x.first)
     assert_equal([1], x.first(1))
     assert_equal([1, 2, 3], x.first(3))
+    assert_raise_with_message(ArgumentError, /0\.\.1/) {x.first(1, 2)}
 
     assert_equal(5, x.last)
     assert_equal([5], x.last(1))
     assert_equal([3, 4, 5], x.last(3))
+    assert_raise_with_message(ArgumentError, /0\.\.1/) {x.last(1, 2)}
 
     assert_equal(1, x.shift)
     assert_equal([2, 3, 4], x.shift(3))
     assert_equal([5], x)
+    assert_raise_with_message(ArgumentError, /0\.\.1/) {x.first(1, 2)}
 
     assert_equal([2, 3, 4, 5], x.unshift(2, 3, 4))
     assert_equal([1, 2, 3, 4, 5], x.unshift(1))
@@ -161,6 +165,7 @@ def test_beg_end_0
     assert_equal(5, x.pop)
     assert_equal([3, 4], x.pop(2))
     assert_equal([1, 2], x)
+    assert_raise_with_message(ArgumentError, /0\.\.1/) {x.pop(1, 2)}
 
     assert_equal([1, 2, 3, 4], x.push(3, 4))
     assert_equal([1, 2, 3, 4, 5], x.push(5))
@@ -170,6 +175,7 @@ def test_beg_end_0
   def test_find_all_0
     assert_respond_to([], :find_all)
     assert_respond_to([], :select)       # Alias
+    assert_respond_to([], :filter)       # Alias
     assert_equal([], [].find_all{ |obj| obj == "foo"})
 
     x = ["foo", "bar", "baz", "baz", 1, 2, 3, 3, 4]
@@ -198,6 +204,8 @@ def test_fill_0
     assert_equal([0, 1, 2, 13, 4, 5], [0, 1, 2, 3, 4, 5].fill(3...4){|i| i+10})
     assert_equal([0, 1, 12, 13, 14, 5], [0, 1, 2, 3, 4, 5].fill(2..-2){|i| i+10})
     assert_equal([0, 1, 12, 13, 4, 5], [0, 1, 2, 3, 4, 5].fill(2...-2){|i| i+10})
+    assert_equal([0, 1, 2, 13, 14, 15], [0, 1, 2, 3, 4, 5].fill(3..){|i| i+10})
+    assert_equal([0, 1, 2, 13, 14, 15], [0, 1, 2, 3, 4, 5].fill(3...){|i| i+10})
   end
 
   # From rubicon
@@ -254,29 +262,43 @@ def test_PLUS # '+'
   def test_MINUS # '-'
     assert_equal(@cls[],  @cls[1] - @cls[1])
     assert_equal(@cls[1], @cls[1, 2, 3, 4, 5] - @cls[2, 3, 4, 5])
-    # Ruby 1.8 feature change
-    #assert_equal(@cls[1], @cls[1, 2, 1, 3, 1, 4, 1, 5] - @cls[2, 3, 4, 5])
     assert_equal(@cls[1, 1, 1, 1], @cls[1, 2, 1, 3, 1, 4, 1, 5] - @cls[2, 3, 4, 5])
     a = @cls[]
     1000.times { a << 1 }
     assert_equal(1000, a.length)
-    #assert_equal(@cls[1], a - @cls[2])
     assert_equal(@cls[1] * 1000, a - @cls[2])
-    #assert_equal(@cls[1],  @cls[1, 2, 1] - @cls[2])
     assert_equal(@cls[1, 1],  @cls[1, 2, 1] - @cls[2])
     assert_equal(@cls[1, 2, 3], @cls[1, 2, 3] - @cls[4, 5, 6])
   end
 
   def test_MINUS_big_array # '-'
     assert_equal(@cls[1]*64, @cls[1, 2, 3, 4, 5]*64 - @cls[2, 3, 4, 5]*64)
-    # Ruby 1.8 feature change
-    #assert_equal(@cls[1], @cls[1, 2, 1, 3, 1, 4, 1, 5]*64 - @cls[2, 3, 4, 5]*64)
     assert_equal(@cls[1, 1, 1, 1]*64, @cls[1, 2, 1, 3, 1, 4, 1, 5]*64 - @cls[2, 3, 4, 5]*64)
     a = @cls[]
     1000.times { a << 1 }
     assert_equal(1000, a.length)
-    #assert_equal(@cls[1], a - @cls[2])
-   assert_equal(@cls[1] * 1000, a - @cls[2])
+    assert_equal(@cls[1] * 1000, a - @cls[2])
+  end
+
+  def test_difference
+    assert_equal(@cls[],  @cls[1].difference(@cls[1]))
+    assert_equal(@cls[1], @cls[1, 2, 3, 4, 5].difference(@cls[2, 3, 4, 5]))
+    assert_equal(@cls[1, 1],  @cls[1, 2, 1].difference(@cls[2]))
+    assert_equal(@cls[1, 1, 1, 1], @cls[1, 2, 1, 3, 1, 4, 1, 5].difference(@cls[2, 3, 4, 5]))
+    assert_equal(@cls[], @cls[1, 2, 3, 4].difference(@cls[1], @cls[2], @cls[3], @cls[4]))
+    a = [1]
+    assert_equal(@cls[1], a.difference(@cls[2], @cls[2]))
+    assert_equal(@cls[], a.difference(@cls[1]))
+    assert_equal(@cls[1], a)
+  end
+
+  def test_difference_big_array
+    assert_equal(@cls[1]*64, (@cls[1, 2, 3, 4, 5] * 64).difference(@cls[2, 3, 4] * 64, @cls[3, 5] * 64))
+    assert_equal(@cls[1, 1, 1, 1]*64, (@cls[1, 2, 1, 3, 1, 4, 1, 5] * 64).difference(@cls[2, 3, 4, 5] * 64))
+    a = @cls[1] * 1000
+    assert_equal(@cls[1] * 1000, a.difference(@cls[2], @cls[2]))
+    assert_equal(@cls[], a.difference(@cls[1]))
+    assert_equal(@cls[1] * 1000, a)
   end
 
   def test_LSHIFT # '<<'
@@ -352,12 +374,11 @@ def test_AREF # '[]'
     assert_equal(@cls[99],  a[-2..-2])
 
     assert_equal(@cls[10, 11, 12], a[9..11])
+    assert_equal(@cls[98, 99, 100], a[97..])
     assert_equal(@cls[10, 11, 12], a[-91..-89])
+    assert_equal(@cls[98, 99, 100], a[-3..])
 
     assert_nil(a[10, -3])
-    # Ruby 1.8 feature change:
-    # Array#[size..x] returns [] instead of nil.
-    #assert_nil(a[10..7])
     assert_equal [], a[10..7]
 
     assert_raise(TypeError) {a['cat']}
@@ -413,33 +434,33 @@ def test_ASET # '[]='
     assert_equal(b, a[10..19] = b)
     assert_equal(@cls[*(0..9).to_a] + b + @cls[*(20..99).to_a], a)
 
-    # Ruby 1.8 feature change:
-    # assigning nil does not remove elements.
-=begin
     a = @cls[*(0..99).to_a]
     assert_equal(nil, a[0,1] = nil)
-    assert_equal(@cls[*(1..99).to_a], a)
+    assert_equal(@cls[nil] + @cls[*(1..99).to_a], a)
 
     a = @cls[*(0..99).to_a]
     assert_equal(nil, a[10,10] = nil)
-    assert_equal(@cls[*(0..9).to_a] + @cls[*(20..99).to_a], a)
+    assert_equal(@cls[*(0..9).to_a] + @cls[nil] + @cls[*(20..99).to_a], a)
 
     a = @cls[*(0..99).to_a]
     assert_equal(nil, a[-1, 1] = nil)
-    assert_equal(@cls[*(0..98).to_a], a)
+    assert_equal(@cls[*(0..98).to_a] + @cls[nil], a)
 
     a = @cls[*(0..99).to_a]
     assert_equal(nil, a[-10, 10] = nil)
-    assert_equal(@cls[*(0..89).to_a], a)
+    assert_equal(@cls[*(0..89).to_a] + @cls[nil], a)
 
     a = @cls[*(0..99).to_a]
     assert_equal(nil, a[0,1000] = nil)
-    assert_equal(@cls[] , a)
+    assert_equal(@cls[nil] , a)
 
     a = @cls[*(0..99).to_a]
     assert_equal(nil, a[10..19] = nil)
-    assert_equal(@cls[*(0..9).to_a] + @cls[*(20..99).to_a], a)
-=end
+    assert_equal(@cls[*(0..9).to_a] + @cls[nil] + @cls[*(20..99).to_a], a)
+
+    a = @cls[*(0..99).to_a]
+    assert_equal(nil, a[10..] = nil)
+    assert_equal(@cls[*(0..9).to_a] + @cls[nil], a)
 
     a = @cls[1, 2, 3]
     a[1, 0] = a
@@ -530,12 +551,11 @@ def test_collect
 
     assert_equal([], @cls[].collect { 99 })
 
-    # Ruby 1.9 feature change:
-    # Enumerable#collect without block returns an Enumerator.
-    #assert_equal([1, 2, 3], @cls[1, 2, 3].collect)
     assert_kind_of Enumerator, @cls[1, 2, 3].collect
 
-    assert_equal([[1, 2, 3]], [[1, 2, 3]].collect(&->(a, b, c) {[a, b, c]}))
+    assert_raise(ArgumentError) {
+      assert_equal([[1, 2, 3]], [[1, 2, 3]].collect(&->(a, b, c) {[a, b, c]}))
+    }
   end
 
   # also update map!
@@ -734,7 +754,7 @@ def test_each
     a = @cls[]
     i = 0
     a.each { |e|
-      assert_equal(a[i], e)
+      assert(false, "Never get here")
       i += 1
     }
     assert_equal(0, i)
@@ -754,7 +774,7 @@ def test_each_index
     a = @cls[]
     i = 0
     a.each_index { |ind|
-      assert_equal(i, ind)
+      assert(false, "Never get here")
       i += 1
     }
     assert_equal(0, i)
@@ -1249,9 +1269,6 @@ def test_push
     a = @cls[1, 2, 3]
     assert_equal(@cls[1, 2, 3, 4, 5], a.push(4, 5))
     assert_equal(@cls[1, 2, 3, 4, 5, nil], a.push(nil))
-    # Ruby 1.8 feature:
-    # Array#push accepts any number of arguments.
-    #assert_raise(ArgumentError, "a.push()") { a.push() }
     a.push
     assert_equal @cls[1, 2, 3, 4, 5, nil], a
     a.push 6, 7
@@ -1377,9 +1394,6 @@ def test_reverse!
     a = @cls[*%w( dog cat bee ant )]
     assert_equal(@cls[*%w(ant bee cat dog)], a.reverse!)
     assert_equal(@cls[*%w(ant bee cat dog)], a)
-    # Ruby 1.8 feature change:
-    # Array#reverse always returns self.
-    #assert_nil(@cls[].reverse!)
     assert_equal @cls[], @cls[].reverse!
   end
 
@@ -1459,14 +1473,14 @@ def test_slice
     assert_equal(@cls[99],  a.slice(-2..-2))
 
     assert_equal(@cls[10, 11, 12], a.slice(9..11))
+    assert_equal(@cls[98, 99, 100], a.slice(97..))
+    assert_equal(@cls[10, 11, 12], a.slice(-91..-89))
     assert_equal(@cls[10, 11, 12], a.slice(-91..-89))
 
     assert_nil(a.slice(-101..-1))
+    assert_nil(a.slice(-101..))
 
     assert_nil(a.slice(10, -3))
-    # Ruby 1.8 feature change:
-    # Array#slice[size..x] always returns [].
-    #assert_nil(a.slice(10..7))
     assert_equal @cls[], a.slice(10..7)
   end
 
@@ -1507,6 +1521,8 @@ def test_slice!
     assert_equal(nil, a.slice!(-6,2))
     assert_equal(@cls[1, 2, 3, 4, 5], a)
 
+    assert_equal("[2, 3]", [1,2,3].slice!(1,10000).inspect, "moved from btest/knownbug")
+
     assert_raise(ArgumentError) { @cls[1].slice! }
     assert_raise(ArgumentError) { @cls[1].slice!(0, 0, 0) }
   end
@@ -1632,7 +1648,7 @@ def o.to_ary
     def o.to_ary
       foo_bar()
     end
-    assert_match(/foo_bar/, assert_raise(NoMethodError) {a.concat(o)}.message)
+    assert_raise_with_message(NoMethodError, /foo_bar/) {a.concat(o)}
   end
 
   def test_to_s
@@ -1655,15 +1671,17 @@ def test_to_s
     $, = nil
   end
 
+  StubToH = [
+    [:key, :value],
+    Object.new.tap do |kvp|
+      def kvp.to_ary
+        [:obtained, :via_to_ary]
+      end
+    end,
+  ]
+
   def test_to_h
-    kvp = Object.new
-    def kvp.to_ary
-      [:obtained, :via_to_ary]
-    end
-    array = [
-      [:key, :value],
-      kvp,
-    ]
+    array = StubToH
     assert_equal({key: :value, obtained: :via_to_ary}, array.to_h)
 
     e = assert_raise(TypeError) {
@@ -1678,6 +1696,27 @@ def kvp.to_ary
     assert_equal "wrong array length at 2 (expected 2, was 1)", e.message
   end
 
+  def test_to_h_block
+    array = StubToH
+    assert_equal({"key" => "value", "obtained" => "via_to_ary"},
+                 array.to_h {|k, v| [k.to_s, v.to_s]})
+
+    assert_equal({first_one: :ok, not_ok: :ng},
+                 [[:first_one, :ok], :not_ok].to_h {|k, v| [k, v || :ng]})
+
+    e = assert_raise(TypeError) {
+      [[:first_one, :ok], :not_ok].to_h {|k, v| v ? [k, v] : k}
+    }
+    assert_equal "wrong element type Symbol at 1 (expected array)", e.message
+    array = [1]
+    k = eval("class C\u{1f5ff}; self; end").new
+    assert_raise_with_message(TypeError, /C\u{1f5ff}/) {array.to_h {k}}
+    e = assert_raise(ArgumentError) {
+      [[:first_one, :ok], [1, 2], [:not_ok]].to_h {|kv| kv}
+    }
+    assert_equal "wrong array length at 2 (expected 2, was 1)", e.message
+  end
+
   def test_min
     assert_equal(1, [1, 2, 3, 1, 2].min)
     assert_equal(3, [1, 2, 3, 1, 2].min {|a,b| b <=> a })
@@ -1965,6 +2004,44 @@ def test_OR_big_array # '|'
     assert_equal((1..128).to_a, b)
   end
 
+  def test_union
+    assert_equal(@cls[],  @cls[].union(@cls[]))
+    assert_equal(@cls[1], @cls[1].union(@cls[]))
+    assert_equal(@cls[1], @cls[].union(@cls[1]))
+    assert_equal(@cls[1], @cls[].union(@cls[], @cls[1]))
+    assert_equal(@cls[1], @cls[1].union(@cls[1]))
+    assert_equal(@cls[1], @cls[1].union(@cls[1], @cls[1], @cls[1]))
+
+    assert_equal(@cls[1,2], @cls[1].union(@cls[2]))
+    assert_equal(@cls[1,2], @cls[1, 1].union(@cls[2, 2]))
+    assert_equal(@cls[1,2], @cls[1, 2].union(@cls[1, 2]))
+    assert_equal(@cls[1,2], @cls[1, 1].union(@cls[1, 1], @cls[1, 2], @cls[2, 1], @cls[2, 2, 2]))
+
+    a = %w(a b c)
+    b = %w(a b c d e)
+    c = a.union(b)
+    assert_equal(c, b)
+    assert_not_same(c, b)
+    assert_equal(%w(a b c), a)
+    assert_equal(%w(a b c d e), b)
+    assert(a.none?(&:frozen?))
+    assert(b.none?(&:frozen?))
+    assert(c.none?(&:frozen?))
+  end
+
+  def test_union_big_array
+    assert_equal(@cls[1,2], (@cls[1]*64).union(@cls[2]*64))
+    assert_equal(@cls[1,2,3], (@cls[1, 2]*64).union(@cls[1, 2]*64, @cls[3]*60))
+
+    a = (1..64).to_a
+    b = (1..128).to_a
+    c = a | b
+    assert_equal(c, b)
+    assert_not_same(c, b)
+    assert_equal((1..64).to_a, a)
+    assert_equal((1..128).to_a, b)
+  end
+
   def test_combination
     a = @cls[]
     assert_equal(1, a.combination(0).size)
@@ -2199,6 +2276,7 @@ def test_aset_error
     assert_raise(IndexError) { [0][LONGP] = 2 }
     assert_raise(IndexError) { [0][(LONGP + 1) / 2 - 1] = 2 }
     assert_raise(IndexError) { [0][LONGP..-1] = 2 }
+    assert_raise(IndexError) { [0][LONGP..] = 2 }
     a = [0]
     a[2] = 4
     assert_equal([0, nil, 4], a)
@@ -2236,6 +2314,7 @@ def test_unshift_error
 
   def test_aref
     assert_raise(ArgumentError) { [][0, 0, 0] }
+    assert_raise(TypeError) { [][(1..10).step(2)] }
   end
 
   def test_fetch
@@ -2373,6 +2452,25 @@ def test_keep_if
     assert_equal(@cls[4, 5], a)
   end
 
+  def test_filter
+    assert_equal([0, 2], [0, 1, 2, 3].filter {|x| x % 2 == 0 })
+  end
+
+  # alias for select!
+  def test_filter!
+    a = @cls[ 1, 2, 3, 4, 5 ]
+    assert_equal(nil, a.filter! { true })
+    assert_equal(@cls[1, 2, 3, 4, 5], a)
+
+    a = @cls[ 1, 2, 3, 4, 5 ]
+    assert_equal(a, a.filter! { false })
+    assert_equal(@cls[], a)
+
+    a = @cls[ 1, 2, 3, 4, 5 ]
+    assert_equal(a, a.filter! { |i| i > 3 })
+    assert_equal(@cls[4, 5], a)
+  end
+
   def test_delete2
     a = [0] * 1024 + [1] + [0] * 1024
     a.delete(0)
diff --git a/test/mri/ruby/test_assignment.rb b/test/mri/ruby/test_assignment.rb
index 45c4d6e058a..c1f8c46890e 100644
--- a/test/mri/ruby/test_assignment.rb
+++ b/test/mri/ruby/test_assignment.rb
@@ -129,17 +129,17 @@ def []=(i, a); 42; end
     }
 
     assert_raise(NoMethodError, bug11096) {
-      assert_equal(43, o.instance_eval {self.foo += 1})
+      o.instance_eval {self.foo += 1}
     }
     assert_raise(NoMethodError, bug11096) {
-      assert_equal(1, o.instance_eval {self.foo &&= 1})
+      o.instance_eval {self.foo &&= 1}
     }
 
     assert_raise(NoMethodError, bug11096) {
-      assert_equal(43, o.instance_eval {self[0] += 1})
+      o.instance_eval {self[0] += 1}
     }
     assert_raise(NoMethodError, bug11096) {
-      assert_equal(1, o.instance_eval {self[0] &&= 1})
+      o.instance_eval {self[0] &&= 1}
     }
   end
 
@@ -480,11 +480,10 @@ def test_massign
     assert_equal 1, a
     assert_equal [2, 3], b
 
-    # not supported yet
-    #a, *b, c = 1, 2, 3, 4
-    #assert_equal 1, a
-    #assert_equal [2,3], b
-    #assert_equal 4, c
+    a, *b, c = 1, 2, 3, 4
+    assert_equal 1, a
+    assert_equal [2,3], b
+    assert_equal 4, c
 
     a = 1, 2
     assert_equal [1, 2], a
diff --git a/test/mri/ruby/test_ast.rb b/test/mri/ruby/test_ast.rb
new file mode 100644
index 00000000000..1a897ef502b
--- /dev/null
+++ b/test/mri/ruby/test_ast.rb
@@ -0,0 +1,272 @@
+# frozen_string_literal: false
+require 'test/unit'
+require 'tempfile'
+
+class RubyVM
+  module AbstractSyntaxTree
+    class Node
+      class CodePosition
+        include Comparable
+        attr_reader :lineno, :column
+        def initialize(lineno, column)
+          @lineno = lineno
+          @column = column
+        end
+
+        def <=>(other)
+          case
+          when lineno < other.lineno
+            -1
+          when lineno == other.lineno
+            column <=> other.column
+          when lineno > other.lineno
+            1
+          end
+        end
+      end
+
+      def beg_pos
+        CodePosition.new(first_lineno, first_column)
+      end
+
+      def end_pos
+        CodePosition.new(last_lineno, last_column)
+      end
+
+      alias to_s inspect
+    end
+  end
+end
+
+class TestAst < Test::Unit::TestCase
+  class Helper
+    attr_reader :errors
+
+    def initialize(path)
+      @path = path
+      @errors = []
+      @debug = false
+    end
+
+    def validate_range
+      @errors = []
+      validate_range0(ast)
+
+      @errors.empty?
+    end
+
+    def validate_not_cared
+      @errors = []
+      validate_not_cared0(ast)
+
+      @errors.empty?
+    end
+
+    def ast
+      return @ast if defined?(@ast)
+      @ast = RubyVM::AbstractSyntaxTree.parse_file(@path)
+    end
+
+    private
+
+    def validate_range0(node)
+      beg_pos, end_pos = node.beg_pos, node.end_pos
+      children = node.children.grep(RubyVM::AbstractSyntaxTree::Node)
+
+      return true if children.empty?
+      # These NODE_D* has NODE_ARRAY as nd_next->nd_next whose last locations
+      # we can not update when item is appended.
+      return true if [:DSTR, :DXSTR, :DREGX, :DSYM].include? node.type
+
+      min = children.map(&:beg_pos).min
+      max = children.map(&:end_pos).max
+
+      unless beg_pos <= min
+        @errors << { type: :min_validation_error, min: min, beg_pos: beg_pos, node: node }
+      end
+
+      unless max <= end_pos
+        @errors << { type: :max_validation_error, max: max, end_pos: end_pos, node: node }
+      end
+
+      p "#{node} => #{children}" if @debug
+
+      children.each do |child|
+        p child if @debug
+        validate_range0(child)
+      end
+    end
+
+    def validate_not_cared0(node)
+      beg_pos, end_pos = node.beg_pos, node.end_pos
+      children = node.children.grep(RubyVM::AbstractSyntaxTree::Node)
+
+      @errors << { type: :first_lineno, node: node } if beg_pos.lineno == 0
+      @errors << { type: :first_column, node: node } if beg_pos.column == -1
+      @errors << { type: :last_lineno,  node: node } if end_pos.lineno == 0
+      @errors << { type: :last_column,  node: node } if end_pos.column == -1
+
+      children.each {|c| validate_not_cared0(c) }
+    end
+  end
+
+  SRCDIR = File.expand_path("../../..", __FILE__)
+
+  Dir.glob("test/**/*.rb", base: SRCDIR).each do |path|
+    define_method("test_ranges:#{path}") do
+      helper = Helper.new("#{SRCDIR}/#{path}")
+      helper.validate_range
+
+      assert_equal([], helper.errors)
+    end
+  end
+
+  Dir.glob("test/**/*.rb", base: SRCDIR).each do |path|
+    define_method("test_not_cared:#{path}") do
+      helper = Helper.new("#{SRCDIR}/#{path}")
+      helper.validate_not_cared
+
+      assert_equal([], helper.errors)
+    end
+  end
+
+  def test_allocate
+    assert_raise(TypeError) {RubyVM::AbstractSyntaxTree::Node.allocate}
+  end
+
+  def test_parse_argument_error
+    assert_raise(TypeError) {RubyVM::AbstractSyntaxTree.parse(0)}
+    assert_raise(TypeError) {RubyVM::AbstractSyntaxTree.parse(nil)}
+    assert_raise(TypeError) {RubyVM::AbstractSyntaxTree.parse(false)}
+    assert_raise(TypeError) {RubyVM::AbstractSyntaxTree.parse(true)}
+    assert_raise(TypeError) {RubyVM::AbstractSyntaxTree.parse(:foo)}
+  end
+
+  def test_column_with_long_heredoc_identifier
+    term = "A"*257
+    ast = RubyVM::AbstractSyntaxTree.parse("<<-#{term}\n""ddddddd\n#{term}\n")
+    node = ast.children[2]
+    assert_equal(:STR, node.type)
+    assert_equal(0, node.first_column)
+  end
+
+  def test_column_of_heredoc
+    node = RubyVM::AbstractSyntaxTree.parse("<<-SRC\nddddddd\nSRC\n").children[2]
+    assert_equal(:STR, node.type)
+    assert_equal(0, node.first_column)
+    assert_equal(6, node.last_column)
+
+    node = RubyVM::AbstractSyntaxTree.parse("<<SRC\nddddddd\nSRC\n").children[2]
+    assert_equal(:STR, node.type)
+    assert_equal(0, node.first_column)
+    assert_equal(5, node.last_column)
+  end
+
+  def test_parse_raises_syntax_error
+    assert_raise_with_message(SyntaxError, /\bend\b/) do
+      RubyVM::AbstractSyntaxTree.parse("end")
+    end
+  end
+
+  def test_parse_file_raises_syntax_error
+    Tempfile.create(%w"test_ast .rb") do |f|
+      f.puts "end"
+      f.close
+      assert_raise_with_message(SyntaxError, /\bend\b/) do
+        RubyVM::AbstractSyntaxTree.parse_file(f.path)
+      end
+    end
+  end
+
+  def test_of
+    proc = Proc.new { 1 + 2 }
+    method = self.method(__method__)
+
+    node_proc = RubyVM::AbstractSyntaxTree.of(proc)
+    node_method = RubyVM::AbstractSyntaxTree.of(method)
+
+    assert_instance_of(RubyVM::AbstractSyntaxTree::Node, node_proc)
+    assert_instance_of(RubyVM::AbstractSyntaxTree::Node, node_method)
+    assert_raise(TypeError) { RubyVM::AbstractSyntaxTree.of("1 + 2") }
+
+    Tempfile.create(%w"test_of .rb") do |tmp|
+      tmp.print "#{<<-"begin;"}\n#{<<-'end;'}"
+      begin;
+        SCRIPT_LINES__ = {}
+        assert_instance_of(RubyVM::AbstractSyntaxTree::Node, RubyVM::AbstractSyntaxTree.of(proc {|x| x}))
+      end;
+      tmp.close
+      assert_separately(["-", tmp.path], "#{<<~"begin;"}\n#{<<~'end;'}")
+      begin;
+        load ARGV[0]
+        assert_empty(SCRIPT_LINES__)
+      end;
+    end
+  end
+
+  def test_scope_local_variables
+    node = RubyVM::AbstractSyntaxTree.parse("x = 0")
+    lv, _, body = *node.children
+    assert_equal([:x], lv)
+    assert_equal(:LASGN, body.type)
+  end
+
+  def test_call
+    node = RubyVM::AbstractSyntaxTree.parse("nil.foo")
+    _, _, body = *node.children
+    assert_equal(:CALL, body.type)
+    recv, mid, args = body.children
+    assert_equal(:NIL, recv.type)
+    assert_equal(:foo, mid)
+    assert_nil(args)
+  end
+
+  def test_fcall
+    node = RubyVM::AbstractSyntaxTree.parse("foo()")
+    _, _, body = *node.children
+    assert_equal(:FCALL, body.type)
+    mid, args = body.children
+    assert_equal(:foo, mid)
+    assert_nil(args)
+  end
+
+  def test_vcall
+    node = RubyVM::AbstractSyntaxTree.parse("foo")
+    _, _, body = *node.children
+    assert_equal(:VCALL, body.type)
+    mid, args = body.children
+    assert_equal(:foo, mid)
+    assert_nil(args)
+  end
+
+  def test_defn
+    node = RubyVM::AbstractSyntaxTree.parse("def a; end")
+    _, _, body = *node.children
+    assert_equal(:DEFN, body.type)
+    mid, defn = body.children
+    assert_equal(:a, mid)
+    assert_equal(:SCOPE, defn.type)
+  end
+
+  def test_defs
+    node = RubyVM::AbstractSyntaxTree.parse("def a.b; end")
+    _, _, body = *node.children
+    assert_equal(:DEFS, body.type)
+    recv, mid, defn = body.children
+    assert_equal(:VCALL, recv.type)
+    assert_equal(:b, mid)
+    assert_equal(:SCOPE, defn.type)
+  end
+
+  def test_dstr
+    node = RubyVM::AbstractSyntaxTree.parse('"foo#{1}bar"')
+    _, _, body = *node.children
+    assert_equal(:DSTR, body.type)
+    head, body = body.children
+    assert_equal("foo", head)
+    assert_equal(:EVSTR, body.type)
+    body, = body.children
+    assert_equal(:LIT, body.type)
+    assert_equal([1], body.children)
+  end
+end
diff --git a/test/mri/ruby/test_autoload.rb b/test/mri/ruby/test_autoload.rb
index 3095052a819..8311c40c357 100644
--- a/test/mri/ruby/test_autoload.rb
+++ b/test/mri/ruby/test_autoload.rb
@@ -311,6 +311,42 @@ def test_autoload_fork
     end
   end if Process.respond_to?(:fork)
 
+  def test_autoload_same_file
+    Dir.mktmpdir('autoload') do |tmpdir|
+      File.write("#{tmpdir}/b.rb", "#{<<~'begin;'}\n#{<<~'end;'}")
+      begin;
+        module Foo; end
+        module Bar; end
+      end;
+      3.times do # timing-dependent, needs a few times to hit [Bug #14742]
+        assert_separately(%W[-I #{tmpdir}], "#{<<-'begin;'}\n#{<<-'end;'}")
+        begin;
+          autoload :Foo, 'b'
+          autoload :Bar, 'b'
+          t1 = Thread.new do Foo end
+          t2 = Thread.new do Bar end
+          t1.join
+          t2.join
+          bug = '[ruby-core:86935] [Bug #14742]'
+          assert_instance_of Module, t1.value, bug
+          assert_instance_of Module, t2.value, bug
+        end;
+      end
+    end
+  end
+
+  def test_no_leak
+    assert_no_memory_leak([], '', <<~'end;', 'many autoloads', timeout: 30)
+      200000.times do |i|
+        m = Module.new
+        m.instance_eval do
+          autoload :Foo, 'x'
+          autoload :Bar, i.to_s
+        end
+      end
+    end;
+  end
+
   def add_autoload(path)
     (@autoload_paths ||= []) << path
     ::Object.class_eval {autoload(:AutoloadTest, path)}
diff --git a/test/mri/ruby/test_backtrace.rb b/test/mri/ruby/test_backtrace.rb
index d38628cdb24..0730b5d1c53 100644
--- a/test/mri/ruby/test_backtrace.rb
+++ b/test/mri/ruby/test_backtrace.rb
@@ -297,4 +297,36 @@ def test_core_backtrace_hash_merge
     end
     assert_not_match(/\Acore#/, e.backtrace_locations[0].base_label)
   end
+
+  def test_notty_backtrace
+    err = ["-:1:in `<main>': unhandled exception"]
+    assert_in_out_err([], "raise", [], err)
+
+    err = ["-:2:in `foo': foo! (RuntimeError)",
+           "\tfrom -:4:in `<main>'"]
+    assert_in_out_err([], <<-"end;", [], err)
+    def foo
+      raise "foo!"
+    end
+    foo
+    end;
+
+    err = ["-:7:in `rescue in bar': bar! (RuntimeError)",
+           "\tfrom -:4:in `bar'",
+           "\tfrom -:9:in `<main>'",
+           "-:2:in `foo': foo! (RuntimeError)",
+           "\tfrom -:5:in `bar'",
+           "\tfrom -:9:in `<main>'"]
+    assert_in_out_err([], <<-"end;", [], err)
+    def foo
+      raise "foo!"
+    end
+    def bar
+      foo
+    rescue
+      raise "bar!"
+    end
+    bar
+    end;
+  end
 end
diff --git a/test/mri/ruby/test_basicinstructions.rb b/test/mri/ruby/test_basicinstructions.rb
index dd3ca4dd222..ab32ee54e2a 100644
--- a/test/mri/ruby/test_basicinstructions.rb
+++ b/test/mri/ruby/test_basicinstructions.rb
@@ -117,7 +117,6 @@ def test_hash
     assert_equal({1=>2}, {1=>2})
     assert_equal({1=>2, 3=>4}, {1=>2, 3=>4})
     assert_equal({1=>2, 3=>4}, {3=>4, 1=>2})
-    # assert_equal({1=>2, 3=>4}, {1,2, 3,4}) # 1.9 doesn't support
     assert_equal({"key"=>"val"}, {"key"=>"val"})
   end
 
diff --git a/test/mri/ruby/test_bignum.rb b/test/mri/ruby/test_bignum.rb
index 65d974005ee..58d63a7c291 100644
--- a/test/mri/ruby/test_bignum.rb
+++ b/test/mri/ruby/test_bignum.rb
@@ -615,14 +615,15 @@ def test_interrupt_during_to_s
     start_flag = false
     end_flag = false
     num = (65536 ** 65536)
+    q = Queue.new
     thread = Thread.new do
-      start_flag = true
       assert_raise(RuntimeError) {
+        q << true
         num.to_s
         end_flag = true
       }
     end
-    sleep 0.001 until start_flag
+    q.pop # sync
     thread.raise
     thread.join
     time = Time.now - time
diff --git a/test/mri/ruby/test_clone.rb b/test/mri/ruby/test_clone.rb
index 93ef438461b..321feb07c74 100644
--- a/test/mri/ruby/test_clone.rb
+++ b/test/mri/ruby/test_clone.rb
@@ -26,4 +26,39 @@ def bar.test2
 
     assert_equal([M003, M002, M001], M003.ancestors)
   end
+
+  def test_user_flags
+    assert_separately([], <<-EOS)
+      #
+      class Array
+        undef initialize_copy
+        def initialize_copy(*); end
+      end
+      x = [1, 2, 3].clone
+      assert_equal [], x, '[Bug #14847]'
+    EOS
+
+    assert_separately([], <<-EOS)
+      #
+      class Array
+        undef initialize_copy
+        def initialize_copy(*); end
+      end
+      x = [1,2,3,4,5,6,7][1..-2].clone
+      x.push(1,1,1,1,1)
+      assert_equal [1, 1, 1, 1, 1], x, '[Bug #14847]'
+    EOS
+
+    assert_separately([], <<-EOS)
+      #
+      class Hash
+        undef initialize_copy
+        def initialize_copy(*); end
+      end
+      h = {}
+      h.default_proc = proc { raise }
+      h = h.clone
+      assert_equal nil, h[:not_exist], '[Bug #14847]'
+    EOS
+  end
 end
diff --git a/test/mri/ruby/test_complex.rb b/test/mri/ruby/test_complex.rb
index 316e3e21ff4..0161ce8ffee 100644
--- a/test/mri/ruby/test_complex.rb
+++ b/test/mri/ruby/test_complex.rb
@@ -269,6 +269,39 @@ def test_add
     assert_equal(Complex(Rational(5,3),Rational(2)), c + Rational(2,3))
   end
 
+  def test_add_with_redefining_int_plus
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Integer
+        remove_method :+
+        def +(other); 42; end
+      end
+      a = Complex(1, 2) + Complex(0, 1)
+      puts a == Complex(42, 42)
+    end;
+  end
+
+  def test_add_with_redefining_float_plus
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Float
+        remove_method :+
+        def +(other); 42.0; end
+      end
+      a = Complex(1.0, 2.0) + Complex(0, 1)
+      puts a == Complex(42.0, 42.0)
+    end;
+  end
+
+  def test_add_with_redefining_rational_plus
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Rational
+        remove_method :+
+        def +(other); 355/113r; end
+      end
+      a = Complex(1r, 2r) + Complex(0, 1)
+      puts a == Complex(355/113r, 355/113r)
+    end;
+  end
+
   def test_sub
     c = Complex(1,2)
     c2 = Complex(2,3)
@@ -282,6 +315,39 @@ def test_sub
     assert_equal(Complex(Rational(1,3),Rational(2)), c - Rational(2,3))
   end
 
+  def test_sub_with_redefining_int_minus
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Integer
+        remove_method :-
+        def -(other); 42; end
+      end
+      a = Complex(1, 2) - Complex(0, 1)
+      puts a == Complex(42, 42)
+    end;
+  end
+
+  def test_sub_with_redefining_float_minus
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Float
+        remove_method :-
+        def -(other); 42.0; end
+      end
+      a = Complex(1.0, 2.0) - Complex(0, 1)
+      puts a == Complex(42.0, 42.0)
+    end;
+  end
+
+  def test_sub_with_redefining_rational_minus
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Rational
+        remove_method :-
+        def -(other); 355/113r; end
+      end
+      a = Complex(1r, 2r) - Complex(0, 1)
+      puts a == Complex(355/113r, 355/113r)
+    end;
+  end
+
   def test_mul
     c = Complex(1,2)
     c2 = Complex(2,3)
@@ -300,6 +366,42 @@ def test_mul
     c = Complex(0, Float::INFINITY)
     assert_equal(Complex(0, Float::INFINITY), c * Complex(1, 0))
     assert_equal(Complex(-Float::INFINITY, 0), c * Complex(0, 1))
+
+    assert_equal(Complex(-0.0, -0.0), Complex(-0.0, 0) * Complex(0, 0))
+  end
+
+  def test_mul_with_redefining_int_mult
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Integer
+        remove_method :*
+        def *(other); 42; end
+      end
+      a = Complex(2, 0) * Complex(1, 2)
+      puts a == Complex(0, 84)
+    end;
+  end
+
+  def test_mul_with_redefining_float_mult
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Float
+        remove_method :*
+        def *(other); 42.0; end
+      end
+      a = Complex(2.0, 0.0) * Complex(1, 2)
+      puts a == Complex(0.0, 84.0)
+    end;
+  end
+
+
+  def test_mul_with_redefining_rational_mult
+    assert_in_out_err([], <<-'end;', ['true'], [])
+      class Rational
+        remove_method :*
+        def *(other); 355/113r; end
+      end
+      a = Complex(2r, 0r) * Complex(1, 2)
+      puts a == Complex(0r, 2*355/113r)
+    end;
   end
 
   def test_div
@@ -323,6 +425,13 @@ def test_div
 
     assert_equal(Complex(Rational(1,2),Rational(1)), c / Rational(2))
     assert_equal(Complex(Rational(3,2),Rational(3)), c / Rational(2,3))
+
+    c = Complex(1)
+    r = c / c
+    assert_instance_of(Complex, r)
+    assert_equal(1, r)
+    assert_predicate(r.real, :integer?)
+    assert_predicate(r.imag, :integer?)
   end
 
   def test_quo
@@ -400,6 +509,10 @@ def test_expt
     r = c ** Rational(-2,3)
     assert_in_delta(0.432, r.real, 0.001)
     assert_in_delta(-0.393, r.imag, 0.001)
+
+    c = Complex(0.0, -888888888888888.0)**8888
+    assert_not_predicate(c.real, :nan?)
+    assert_not_predicate(c.imag, :nan?)
   end
 
   def test_cmp
@@ -746,6 +859,33 @@ def test_parse
 
   end
 
+  def test_Complex_without_exception
+    assert_nothing_raised(ArgumentError){
+      assert_equal(nil, Complex('5x', exception: false))
+    }
+    assert_nothing_raised(ArgumentError){
+      assert_equal(nil, Complex(nil, exception: false))
+    }
+    assert_nothing_raised(ArgumentError){
+      assert_equal(nil, Complex(Object.new, exception: false))
+    }
+    assert_nothing_raised(ArgumentError){
+      assert_equal(nil, Complex(1, nil, exception: false))
+    }
+    assert_nothing_raised(ArgumentError){
+      assert_equal(nil, Complex(1, Object.new, exception: false))
+    }
+
+    o = Object.new
+    def o.to_c; raise; end
+    assert_nothing_raised(ArgumentError){
+      assert_equal(nil, Complex(o, exception: false))
+    }
+    assert_nothing_raised(ArgumentError){
+      assert_equal(nil, Complex(1, o, exception: false))
+    }
+  end
+
   def test_respond
     c = Complex(1,1)
     assert_not_respond_to(c, :%)
@@ -958,4 +1098,30 @@ def test_fixed_bug
   def test_known_bug
   end
 
+  def test_canonicalize_internal
+    obj = Class.new(Numeric) do
+      attr_accessor :real
+      alias real? real
+    end.new
+    obj.real = true
+    c = Complex.rect(obj, 1);
+    obj.real = false
+    c = c.conj
+    assert_equal(obj, c.real)
+    assert_equal(-1, c.imag)
+  end
+
+  def test_canonicalize_polar
+    obj = Class.new(Numeric) do
+      def initialize
+        @x = 2
+      end
+      def real?
+        (@x -= 1) > 0
+      end
+    end.new
+    assert_raise(TypeError) do
+      Complex.polar(1, obj)
+    end
+  end
 end
diff --git a/test/mri/ruby/test_continuation.rb b/test/mri/ruby/test_continuation.rb
index a06ac98c8c9..8c62d208402 100644
--- a/test/mri/ruby/test_continuation.rb
+++ b/test/mri/ruby/test_continuation.rb
@@ -88,11 +88,16 @@ def tracing_with_set_trace_func
           @memo += 1
           c = cont
           cont = nil
-          c.call(nil)
+          begin
+            c.call(nil)
+          rescue RuntimeError
+            set_trace_func(nil)
+          end
         end
       end
     end
     cont = callcc { |cc| cc }
+
     if cont
       set_trace_func(func)
     else
@@ -100,12 +105,12 @@ def tracing_with_set_trace_func
     end
   end
 
-  def test_tracing_with_set_trace_func
+  def _test_tracing_with_set_trace_func
     @memo = 0
     tracing_with_set_trace_func
     tracing_with_set_trace_func
     tracing_with_set_trace_func
-    assert_equal 3, @memo
+    assert_equal 0, @memo
   end
 
   def tracing_with_thread_set_trace_func
@@ -115,7 +120,11 @@ def tracing_with_thread_set_trace_func
         @memo += 1
         c = cont
         cont = nil
-        c.call(nil)
+        begin
+          c.call(nil)
+        rescue RuntimeError
+          Thread.current.set_trace_func(nil)
+        end
       end
     end
     cont = callcc { |cc| cc }
diff --git a/test/mri/ruby/test_default_gems.rb b/test/mri/ruby/test_default_gems.rb
new file mode 100644
index 00000000000..837f7571ea9
--- /dev/null
+++ b/test/mri/ruby/test_default_gems.rb
@@ -0,0 +1,15 @@
+# frozen_string_literal: false
+require 'rubygems'
+
+class TestDefaultGems < Test::Unit::TestCase
+
+  def test_validate_gemspec
+    srcdir = File.expand_path('../../..', __FILE__)
+    Dir.glob("#{srcdir}/{lib,ext}/**/*.gemspec").map do |src|
+      assert_nothing_raised do
+        raise("invalid spec in #{src}") unless Gem::Specification.load(src)
+      end
+    end
+  end
+
+end
diff --git a/test/mri/ruby/test_dir.rb b/test/mri/ruby/test_dir.rb
index 000bc24e85b..5196c08f811 100644
--- a/test/mri/ruby/test_dir.rb
+++ b/test/mri/ruby/test_dir.rb
@@ -11,11 +11,13 @@ def setup
     $VERBOSE = nil
     @root = File.realpath(Dir.mktmpdir('__test_dir__'))
     @nodir = File.join(@root, "dummy")
+    @dirs = []
     for i in "a".."z"
       if i.ord % 2 == 0
         FileUtils.touch(File.join(@root, i))
       else
         FileUtils.mkdir(File.join(@root, i))
+        @dirs << File.join(i, "")
       end
     end
   end
@@ -136,8 +138,10 @@ def test_glob
                  Dir.glob(File.join(@root, "*"), File::FNM_DOTMATCH).sort)
     assert_equal([@root] + ("a".."z").map {|f| File.join(@root, f) }.sort,
                  Dir.glob([@root, File.join(@root, "*")]).sort)
-    assert_equal([@root] + ("a".."z").map {|f| File.join(@root, f) }.sort,
-                 Dir.glob(@root + "\0\0\0" + File.join(@root, "*")).sort)
+    assert_warning(/nul-separated patterns/) do
+      assert_equal([@root] + ("a".."z").map {|f| File.join(@root, f) }.sort,
+                   Dir.glob(@root + "\0\0\0" + File.join(@root, "*")).sort)
+    end
 
     assert_equal(("a".."z").step(2).map {|f| File.join(File.join(@root, f), "") }.sort,
                  Dir.glob(File.join(@root, "*/")).sort)
@@ -187,6 +191,28 @@ def test_glob_recursive
     end
   end
 
+  def test_glob_recursive_directory
+    Dir.chdir(@root) do
+      ['d', 'e'].each do |path|
+        FileUtils.mkdir_p("c/#{path}/a/b/c")
+        FileUtils.touch("c/#{path}/a/a.file")
+        FileUtils.touch("c/#{path}/a/b/b.file")
+        FileUtils.touch("c/#{path}/a/b/c/c.file")
+      end
+      bug15540 = '[ruby-core:91110] [Bug #15540]'
+      assert_equal(["c/d/a/", "c/d/a/b/", "c/d/a/b/c/", "c/e/a/", "c/e/a/b/", "c/e/a/b/c/"],
+                   Dir.glob('c/{d,e}/a/**/'), bug15540)
+    end
+  end
+
+  def test_glob_starts_with_brace
+    Dir.chdir(@root) do
+      bug15649 = '[ruby-core:91728] [Bug #15649]'
+      assert_equal(["#{@root}/a", "#{@root}/b"],
+                   Dir.glob("{#{@root}/a,#{@root}/b}"), bug15649)
+    end
+  end
+
   if Process.const_defined?(:RLIMIT_NOFILE)
     def test_glob_too_may_open_files
       assert_separately([], "#{<<-"begin;"}\n#{<<-'end;'}", chdir: @root)
@@ -208,18 +234,38 @@ def test_glob_too_may_open_files
   def test_glob_base
     files = %w[a/foo.c c/bar.c]
     files.each {|n| File.write(File.join(@root, n), "")}
+    Dir.mkdir(File.join(@root, "a/dir"))
+    dirs = @dirs + %w[a/dir/]
+    dirs.sort!
     assert_equal(files, Dir.glob("*/*.c", base: @root).sort)
     assert_equal(files, Dir.chdir(@root) {Dir.glob("*/*.c", base: ".").sort})
     assert_equal(%w[foo.c], Dir.chdir(@root) {Dir.glob("*.c", base: "a").sort})
     assert_equal(files, Dir.chdir(@root) {Dir.glob("*/*.c", base: "").sort})
     assert_equal(files, Dir.chdir(@root) {Dir.glob("*/*.c", base: nil).sort})
+    assert_equal(@dirs, Dir.glob("*/", base: @root).sort)
+    assert_equal(@dirs, Dir.chdir(@root) {Dir.glob("*/", base: ".").sort})
+    assert_equal(%w[dir/], Dir.chdir(@root) {Dir.glob("*/", base: "a").sort})
+    assert_equal(@dirs, Dir.chdir(@root) {Dir.glob("*/", base: "").sort})
+    assert_equal(@dirs, Dir.chdir(@root) {Dir.glob("*/", base: nil).sort})
+    assert_equal(dirs, Dir.glob("**/*/", base: @root).sort)
+    assert_equal(dirs, Dir.chdir(@root) {Dir.glob("**/*/", base: ".").sort})
+    assert_equal(%w[dir/], Dir.chdir(@root) {Dir.glob("**/*/", base: "a").sort})
+    assert_equal(dirs, Dir.chdir(@root) {Dir.glob("**/*/", base: "").sort})
+    assert_equal(dirs, Dir.chdir(@root) {Dir.glob("**/*/", base: nil).sort})
   end
 
   def test_glob_base_dir
     files = %w[a/foo.c c/bar.c]
     files.each {|n| File.write(File.join(@root, n), "")}
+    Dir.mkdir(File.join(@root, "a/dir"))
+    dirs = @dirs + %w[a/dir/]
+    dirs.sort!
     assert_equal(files, Dir.open(@root) {|d| Dir.glob("*/*.c", base: d)}.sort)
-    assert_equal(%w[foo.c], Dir.chdir(@root) {Dir.open("a") {|d| Dir.glob("*", base: d)}})
+    assert_equal(%w[foo.c], Dir.chdir(@root) {Dir.open("a") {|d| Dir.glob("*.c", base: d)}})
+    assert_equal(@dirs, Dir.open(@root) {|d| Dir.glob("*/", base: d).sort})
+    assert_equal(%w[dir/], Dir.chdir(@root) {Dir.open("a") {|d| Dir.glob("*/", base: d).sort}})
+    assert_equal(dirs, Dir.open(@root) {|d| Dir.glob("**/*/", base: d).sort})
+    assert_equal(%w[dir/], Dir.chdir(@root) {Dir.open("a") {|d| Dir.glob("**/*/", base: d).sort}})
   end
 
   def assert_entries(entries, children_only = false)
@@ -242,11 +288,13 @@ def test_foreach
   end
 
   def test_children
+    assert_entries(Dir.open(@root) {|dir| dir.children}, true)
     assert_entries(Dir.children(@root), true)
     assert_raise(ArgumentError) {Dir.children(@root+"\0")}
   end
 
   def test_each_child
+    assert_entries(Dir.open(@root) {|dir| dir.each_child.to_a}, true)
     assert_entries(Dir.each_child(@root).to_a, true)
     assert_raise(ArgumentError) {Dir.each_child(@root+"\0").to_a}
   end
@@ -344,14 +392,18 @@ def test_home
     ENV.delete("LOGDIR")
 
     ENV["HOME"] = @nodir
-    assert_nothing_raised(ArgumentError) {
+    assert_nothing_raised(ArgumentError) do
       assert_equal(@nodir, Dir.home)
+    end
+    assert_nothing_raised(ArgumentError) do
       assert_equal(@nodir, Dir.home(""))
-      if user = ENV["USER"]
-        ENV["HOME"] = env_home
-        assert_equal(File.expand_path(env_home), Dir.home(user))
+    end
+    if user = ENV["USER"]
+      tilde = windows? ? "~" : "~#{user}"
+      assert_nothing_raised(ArgumentError) do
+        assert_equal(File.expand_path(tilde), Dir.home(user))
       end
-    }
+    end
     %W[no:such:user \u{7559 5b88}:\u{756a}].each do |user|
       assert_raise_with_message(ArgumentError, /#{user}/) {Dir.home(user)}
     end
diff --git a/test/mri/ruby/test_enum.rb b/test/mri/ruby/test_enum.rb
index 21672718863..c56e280e061 100644
--- a/test/mri/ruby/test_enum.rb
+++ b/test/mri/ruby/test_enum.rb
@@ -144,8 +144,7 @@ def size
     assert_equal([], inf.to_a)
   end
 
-  def test_to_h
-    obj = Object.new
+  StubToH = Object.new.tap do |obj|
     def obj.each(*args)
       yield(*args)
       yield [:key, :value]
@@ -157,6 +156,12 @@ def kvp.to_ary
       yield kvp
     end
     obj.extend Enumerable
+    obj.freeze
+  end
+
+  def test_to_h
+    obj = StubToH
+
     assert_equal({
       :hello => :world,
       :key => :value,
@@ -175,6 +180,27 @@ def kvp.to_ary
     assert_equal "element has wrong array length (expected 2, was 1)", e.message
   end
 
+  def test_to_h_block
+    obj = StubToH
+
+    assert_equal({
+      "hello" => "world",
+      "key" => "value",
+      "other_key" => "other_value",
+      "obtained" => "via_to_ary",
+    }, obj.to_h(:hello, :world) {|k, v| [k.to_s, v.to_s]})
+
+    e = assert_raise(TypeError) {
+      obj.to_h {:not_an_array}
+    }
+    assert_equal "wrong element type Symbol (expected array)", e.message
+
+    e = assert_raise(ArgumentError) {
+      obj.to_h {[1]}
+    }
+    assert_equal "element has wrong array length (expected 2, was 1)", e.message
+  end
+
   def test_inject
     assert_equal(12, @obj.inject {|z, x| z * x })
     assert_equal(48, @obj.inject {|z, x| z * 2 + x })
@@ -314,6 +340,21 @@ def test_all
     assert_equal(false, @obj.all?(1..2))
   end
 
+  def test_all_with_unused_block
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      [1, 2].all?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      (1..2).all?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      3.times.all?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      {a: 1, b: 2}.all?([:b, 2]) {|x| x == 4 }
+    EOS
+  end
+
   def test_any
     assert_equal(true, @obj.any? {|x| x >= 3 })
     assert_equal(false, @obj.any? {|x| x > 3 })
@@ -329,6 +370,21 @@ def test_any
     assert_equal(true, {a: 1, b: 2}.any?(->(kv) { kv == [:b, 2] }))
   end
 
+  def test_any_with_unused_block
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      [1, 23].any?(1) {|x| x == 1 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      (1..2).any?(34) {|x| x == 2 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      3.times.any?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      {a: 1, b: 2}.any?([:b, 2]) {|x| x == 4 }
+    EOS
+  end
+
   def test_one
     assert(@obj.one? {|x| x == 3 })
     assert(!(@obj.one? {|x| x == 1 }))
@@ -348,6 +404,21 @@ def test_one
     assert([ nil, true, 99 ].one?(Integer))
   end
 
+  def test_one_with_unused_block
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      [1, 2].one?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      (1..2).one?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      3.times.one?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      {a: 1, b: 2}.one?([:b, 2]) {|x| x == 4 }
+    EOS
+  end
+
   def test_none
     assert(@obj.none? {|x| x == 4 })
     assert(!(@obj.none? {|x| x == 1 }))
@@ -365,6 +436,21 @@ def test_none
     assert(@empty.none?)
   end
 
+  def test_none_with_unused_block
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      [1, 2].none?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      (1..2).none?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      3.times.none?(1) {|x| x == 3 }
+    EOS
+    assert_in_out_err [], <<-EOS, [], ["-:1: warning: given block not used"]
+      {a: 1, b: 2}.none?([:b, 2]) {|x| x == 4 }
+    EOS
+  end
+
   def test_min
     assert_equal(1, @obj.min)
     assert_equal(3, @obj.min {|a,b| b <=> a })
@@ -1029,4 +1115,19 @@ def test_uniq
     assert_equal([1, 2, 3, 4, 5, 10], (1..100).uniq{|x| (x**2) % 10 }.first(6))
     assert_equal([1, [1, 2]], Foo.new.to_enum.uniq)
   end
+
+  def test_transient_heap_sort_by
+    klass = Class.new do
+      include Comparable
+      attr_reader :i
+      def initialize e
+        @i = e
+      end
+      def <=> other
+        GC.start
+        i <=> other.i
+      end
+    end
+    assert_equal [1, 2, 3, 4, 5], (1..5).sort_by{|e| klass.new e}
+  end
 end
diff --git a/test/mri/ruby/test_enumerator.rb b/test/mri/ruby/test_enumerator.rb
index 66a45cc14e1..efcfef580fa 100644
--- a/test/mri/ruby/test_enumerator.rb
+++ b/test/mri/ruby/test_enumerator.rb
@@ -301,8 +301,11 @@ def o.each(ary)
       yield
     end
     ary = []
-    e = o.to_enum.each(ary)
-    e.next
+    e = o.to_enum { 1 }
+    assert_equal(1, e.size)
+    e_arg = e.each(ary)
+    assert_equal(nil, e_arg.size)
+    e_arg.next
     assert_equal([1], ary)
   end
 
@@ -404,6 +407,12 @@ def test_inspect
     e = (0..10).each_cons(2)
     assert_equal("#<Enumerator: 0..10:each_cons(2)>", e.inspect)
 
+    e = (0..10).each_with_object({})
+    assert_equal("#<Enumerator: 0..10:each_with_object({})>", e.inspect)
+
+    e = (0..10).each_with_object(a: 1)
+    assert_equal("#<Enumerator: 0..10:each_with_object(a: 1)>", e.inspect)
+
     e = Enumerator.new {|y| y.yield; 10 }
     assert_match(/\A#<Enumerator: .*:each>/, e.inspect)
 
@@ -476,6 +485,12 @@ def test_yielder
     assert_equal([1], y.yield(1))
     assert_equal([1, 2], y.yield(2))
     assert_equal([1, 2, 3], y.yield(3))
+    assert_equal([1, 2, 3, 4], y.yield(4, 5))
+
+    a = []
+    y = Enumerator::Yielder.new {|*x| a.concat(x) }
+    assert_equal([1], y.yield(1))
+    assert_equal([1, 2, 3], y.yield(2, 3))
 
     assert_raise(LocalJumpError) { Enumerator::Yielder.new }
   end
@@ -505,7 +520,7 @@ def test_size_for_enum_created_by_enumerators
   def test_size_for_enum_created_from_array
     arr = %w[hello world]
     %i[each each_with_index reverse_each sort_by! sort_by map map!
-      keep_if reject! reject select! select delete_if].each do |method|
+      keep_if reject! reject select! select filter! filter delete_if].each do |method|
       assert_equal arr.size, arr.send(method).size
     end
   end
@@ -522,7 +537,7 @@ def test_size_for_enum_created_from_enumerable
 
   def test_size_for_enum_created_from_hash
     h = {a: 1, b: 2, c: 3}
-    methods = %i[delete_if reject reject! select select! keep_if each each_key each_pair]
+    methods = %i[delete_if reject reject! select select! filter filter! keep_if each each_key each_pair]
     enums = methods.map {|method| h.send(method)}
     s = enums.group_by(&:size)
     assert_equal([3], s.keys, ->{s.reject!{|k| k==3}.inspect})
@@ -532,7 +547,7 @@ def test_size_for_enum_created_from_hash
   end
 
   def test_size_for_enum_created_from_env
-    %i[each_pair reject! delete_if select select! keep_if].each do |method|
+    %i[each_pair reject! delete_if select select! filter filter! keep_if].each do |method|
       assert_equal ENV.size, ENV.send(method).size
     end
   end
@@ -632,7 +647,7 @@ def test_size_for_step
     assert_equal 4, (1..10).step(3).size
     assert_equal 3, (1...10).step(3).size
     assert_equal Float::INFINITY, (42..Float::INFINITY).step(2).size
-    assert_raise(ArgumentError){ (1..10).step(-2).size }
+    assert_equal 0, (1..10).step(-2).size
   end
 
   def test_size_for_downup_to
@@ -661,5 +676,119 @@ def test_uniq
     assert_equal([0, 1], u.force)
     assert_equal([0, 1], u.force)
   end
-end
 
+  def test_enum_chain_and_plus
+    r = 1..5
+
+    e1 = r.chain()
+    assert_kind_of(Enumerator::Chain, e1)
+    assert_equal(5, e1.size)
+    ary = []
+    e1.each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5], ary)
+
+    e2 = r.chain([6, 7, 8])
+    assert_kind_of(Enumerator::Chain, e2)
+    assert_equal(8, e2.size)
+    ary = []
+    e2.each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5, 6, 7, 8], ary)
+
+    e3 = r.chain([6, 7], 8.step)
+    assert_kind_of(Enumerator::Chain, e3)
+    assert_equal(Float::INFINITY, e3.size)
+    ary = []
+    e3.take(10).each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ary)
+
+    # `a + b + c` should not return `Enumerator::Chain.new(a, b, c)`
+    # because it is expected that `(a + b).each` be called.
+    e4 = e2.dup
+    class << e4
+      attr_reader :each_is_called
+      def each
+        super
+        @each_is_called = true
+      end
+    end
+    e5 = e4 + 9.step
+    assert_kind_of(Enumerator::Chain, e5)
+    assert_equal(Float::INFINITY, e5.size)
+    ary = []
+    e5.take(10).each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ary)
+    assert_equal(true, e4.each_is_called)
+  end
+
+  def test_chained_enums
+    a = (1..5).each
+
+    e0 = Enumerator::Chain.new()
+    assert_kind_of(Enumerator::Chain, e0)
+    assert_equal(0, e0.size)
+    ary = []
+    e0.each { |x| ary << x }
+    assert_equal([], ary)
+
+    e1 = Enumerator::Chain.new(a)
+    assert_kind_of(Enumerator::Chain, e1)
+    assert_equal(5, e1.size)
+    ary = []
+    e1.each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5], ary)
+
+    e2 = Enumerator::Chain.new(a, [6, 7, 8])
+    assert_kind_of(Enumerator::Chain, e2)
+    assert_equal(8, e2.size)
+    ary = []
+    e2.each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5, 6, 7, 8], ary)
+
+    e3 = Enumerator::Chain.new(a, [6, 7], 8.step)
+    assert_kind_of(Enumerator::Chain, e3)
+    assert_equal(Float::INFINITY, e3.size)
+    ary = []
+    e3.take(10).each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ary)
+
+    e4 = Enumerator::Chain.new(a, Enumerator.new { |y| y << 6 << 7 << 8 })
+    assert_kind_of(Enumerator::Chain, e4)
+    assert_equal(nil, e4.size)
+    ary = []
+    e4.each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5, 6, 7, 8], ary)
+
+    e5 = Enumerator::Chain.new(e1, e2)
+    assert_kind_of(Enumerator::Chain, e5)
+    assert_equal(13, e5.size)
+    ary = []
+    e5.each { |x| ary << x }
+    assert_equal([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8], ary)
+
+    rewound = []
+    e1.define_singleton_method(:rewind) { rewound << object_id }
+    e2.define_singleton_method(:rewind) { rewound << object_id }
+    e5.rewind
+    assert_equal(rewound, [e2.object_id, e1.object_id])
+
+    rewound = []
+    a = [1]
+    e6 = Enumerator::Chain.new(a)
+    a.define_singleton_method(:rewind) { rewound << object_id }
+    e6.rewind
+    assert_equal(rewound, [])
+
+    assert_equal(
+      '#<Enumerator::Chain: [' +
+        '#<Enumerator::Chain: [' +
+          '#<Enumerator: 1..5:each>' +
+        ']>, ' +
+        '#<Enumerator::Chain: [' +
+          '#<Enumerator: 1..5:each>, ' +
+          '[6, 7, 8]' +
+        ']>' +
+      ']>',
+      e5.inspect
+    )
+  end
+end
diff --git a/test/mri/ruby/test_env.rb b/test/mri/ruby/test_env.rb
index ffed94efa6f..6343642ac1b 100644
--- a/test/mri/ruby/test_env.rb
+++ b/test/mri/ruby/test_env.rb
@@ -222,6 +222,18 @@ def test_select_bang
     assert_nil(ENV.select! {|k, v| IGNORE_CASE ? k.upcase != "TEST" : k != "test" })
   end
 
+  def test_filter_bang
+    h1 = {}
+    ENV.each_pair {|k, v| h1[k] = v }
+    ENV["test"] = "foo"
+    ENV.filter! {|k, v| IGNORE_CASE ? k.upcase != "TEST" : k != "test" }
+    h2 = {}
+    ENV.each_pair {|k, v| h2[k] = v }
+    assert_equal(h1, h2)
+
+    assert_nil(ENV.filter! {|k, v| IGNORE_CASE ? k.upcase != "TEST" : k != "test" })
+  end
+
   def test_keep_if
     h1 = {}
     ENV.each_pair {|k, v| h1[k] = v }
@@ -254,6 +266,32 @@ def test_select
     end
   end
 
+  def test_filter
+    ENV["test"] = "foo"
+    h = ENV.filter {|k| IGNORE_CASE ? k.upcase == "TEST" : k == "test" }
+    assert_equal(1, h.size)
+    k = h.keys.first
+    v = h.values.first
+    if IGNORE_CASE
+      assert_equal("TEST", k.upcase)
+      assert_equal("FOO", v.upcase)
+    else
+      assert_equal("test", k)
+      assert_equal("foo", v)
+    end
+  end
+
+  def test_slice
+    ENV.clear
+    ENV["foo"] = "bar"
+    ENV["baz"] = "qux"
+    ENV["bar"] = "rab"
+    assert_equal({}, ENV.slice())
+    assert_equal({}, ENV.slice(""))
+    assert_equal({}, ENV.slice("unknown"))
+    assert_equal({"foo"=>"bar", "baz"=>"qux"}, ENV.slice("foo", "baz"))
+  end
+
   def test_clear
     ENV.clear
     assert_equal(0, ENV.size)
@@ -361,6 +399,8 @@ def test_to_hash
 
   def test_to_h
     assert_equal(ENV.to_hash, ENV.to_h)
+    assert_equal(ENV.map {|k, v| ["$#{k}", v.size]}.to_h,
+                 ENV.to_h {|k, v| ["$#{k}", v.size]})
   end
 
   def test_reject
@@ -419,7 +459,7 @@ def test_update
   def test_huge_value
     huge_value = "bar" * 40960
     ENV["foo"] = "bar"
-    if /mswin|mingw/ =~ RUBY_PLATFORM
+    if /mswin/ =~ RUBY_PLATFORM
       assert_raise(Errno::EINVAL) { ENV["foo"] = huge_value }
       assert_equal("bar", ENV["foo"])
     else
@@ -429,6 +469,10 @@ def test_huge_value
   end
 
   if /mswin|mingw/ =~ RUBY_PLATFORM
+    def windows_version
+      @windows_version ||= %x[ver][/Version (\d+)/, 1].to_i
+    end
+
     def test_win32_blocksize
       keys = []
       len = 32767 - ENV.to_a.flatten.inject(1) {|r,e| r + e.bytesize + 1}
@@ -438,9 +482,15 @@ def test_win32_blocksize
         keys << key
         ENV[key] = val
       end
-      1.upto(12) {|i|
-        assert_raise(Errno::EINVAL) { ENV[key] = val }
-      }
+      if windows_version < 6
+        1.upto(12) {|i|
+          assert_raise(Errno::EINVAL) { ENV[key] = val }
+        }
+      else
+        1.upto(12) {|i|
+          assert_nothing_raised(Errno::EINVAL) { ENV[key] = val }
+        }
+      end
     ensure
       keys.each {|k| ENV.delete(k)}
     end
diff --git a/test/mri/ruby/test_eval.rb b/test/mri/ruby/test_eval.rb
index 0bc0390d643..9cb69ddc379 100644
--- a/test/mri/ruby/test_eval.rb
+++ b/test/mri/ruby/test_eval.rb
@@ -320,20 +320,6 @@ module EvTest
     end
     assert(!bad)
 
-    if false
-      # Ruby 2.0 doesn't see Proc as Binding
-      x = proc{}
-      eval "i4 = 1", x
-      assert_equal(1, eval("i4", x))
-      x = proc{proc{}}.call
-      eval "i4 = 22", x
-      assert_equal(22, eval("i4", x))
-      t = []
-      x = proc{proc{}}.call
-      eval "(0..9).each{|i5| t[i5] = proc{i5*2}}", x
-      assert_equal(8, t[4].call)
-    end
-
     x = binding
     eval "i = 1", x
     assert_equal(1, eval("i", x))
@@ -360,27 +346,6 @@ module EvTest
       assert_equal(eval("foo22"), eval("foo22", p))
       assert_equal(55, eval("foo22"))
     }.call
-
-    if false
-      # Ruby 2.0 doesn't see Proc as Binding
-      p1 = proc{i7 = 0; proc{i7}}.call
-      assert_equal(0, p1.call)
-      eval "i7=5", p1
-      assert_equal(5, p1.call)
-      assert(!defined?(i7))
-    end
-
-    if false
-      # Ruby 2.0 doesn't see Proc as Binding
-      p1 = proc{i7 = 0; proc{i7}}.call
-      i7 = nil
-      assert_equal(0, p1.call)
-      eval "i7=1", p1
-      assert_equal(1, p1.call)
-      eval "i7=5", p1
-      assert_equal(5, p1.call)
-      assert_nil(i7)
-    end
   end
 
   def test_nil_instance_eval_cvar
@@ -503,6 +468,12 @@ def test_eval_location_fstring
     assert_same a, b
   end
 
+  def test_eval_location_binding
+    assert_warning(/__FILE__ in eval/) do
+      assert_equal(__FILE__, eval("__FILE__", binding))
+    end
+  end
+
   def test_fstring_instance_eval
     bug = "[ruby-core:78116] [Bug #12930]".freeze
     assert_same bug, (bug.instance_eval {self})
@@ -526,6 +497,17 @@ def m
     }, '[Bug #10368]'
   end
 
+  def test_gced_eval_location
+    Dir.mktmpdir do |d|
+      File.write("#{d}/2.rb", "")
+      File.write("#{d}/1.rb", "require_relative '2'\n""__FILE__\n")
+      file = "1.rb"
+      path = File.expand_path(file, d)
+      assert_equal(path, eval(File.read(path), nil, File.expand_path(file, d)))
+      assert_equal(path, eval(File.read(path), nil, File.expand_path(file, d)))
+    end
+  end
+
   def orphan_proc
     proc {eval("return :ng")}
   end
diff --git a/test/mri/ruby/test_exception.rb b/test/mri/ruby/test_exception.rb
index 5750df4ec99..05c74f6dcd5 100644
--- a/test/mri/ruby/test_exception.rb
+++ b/test/mri/ruby/test_exception.rb
@@ -352,6 +352,7 @@ def test_errat
   end
 
   def test_thread_signal_location
+    skip
     _, stderr, _ = EnvUtil.invoke_ruby(%w"--disable-gems -d", <<-RUBY, false, true)
 Thread.start do
   Thread.current.report_on_exception = false
@@ -699,7 +700,11 @@ def test_cause_at_raised
   end
 
   def test_cause_at_end
-    assert_in_out_err([], <<-'end;', [], [/-: unexpected return\n/, /.*undefined local variable or method `n'.*\n/])
+    errs = [
+      /-: unexpected return\n/,
+      /.*undefined local variable or method `n'.*\n/,
+    ]
+    assert_in_out_err([], <<-'end;', [], errs)
       END{n}; END{return}
     end;
   end
@@ -803,7 +808,7 @@ def initialize(msg = nil)
     e = assert_raise(exc, bug) {raise exc, "foo" => "bar", foo: "bar"}
     assert_equal({"foo" => "bar", foo: "bar"}, e.arg, bug)
 
-    e = assert_raise(exc, bug) {raise exc, "foo" => "bar", foo: "bar", cause: "zzz"}
+    e = assert_raise(exc, bug) {raise exc, "foo" => "bar", foo: "bar", cause: RuntimeError.new("zzz")}
     assert_equal({"foo" => "bar", foo: "bar"}, e.arg, bug)
 
     e = assert_raise(exc, bug) {raise exc, {}}
@@ -848,6 +853,113 @@ def pretty_inspect; "`obj'"; end
       alias inspect pretty_inspect
     end
 
+  def test_name_error_new_default
+    error = NameError.new
+    assert_equal("NameError", error.message)
+  end
+
+  def test_name_error_new_message
+    error = NameError.new("Message")
+    assert_equal("Message", error.message)
+  end
+
+  def test_name_error_new_name
+    error = NameError.new("Message")
+    assert_nil(error.name)
+
+    error = NameError.new("Message", :foo)
+    assert_equal(:foo, error.name)
+  end
+
+  def test_name_error_new_receiver
+    receiver = Object.new
+
+    error = NameError.new
+    assert_raise(ArgumentError) {error.receiver}
+    assert_equal("NameError", error.message)
+
+    error = NameError.new(receiver: receiver)
+    assert_equal(["NameError", receiver],
+                 [error.message, error.receiver])
+
+    error = NameError.new("Message", :foo, receiver: receiver)
+    assert_equal(["Message", receiver, :foo],
+                 [error.message, error.receiver, error.name])
+  end
+
+  def test_nomethod_error_new_default
+    error = NoMethodError.new
+    assert_equal("NoMethodError", error.message)
+  end
+
+  def test_nomethod_error_new_message
+    error = NoMethodError.new("Message")
+    assert_equal("Message", error.message)
+  end
+
+  def test_nomethod_error_new_name
+    error = NoMethodError.new("Message")
+    assert_nil(error.name)
+
+    error = NoMethodError.new("Message", :foo)
+    assert_equal(:foo, error.name)
+  end
+
+  def test_nomethod_error_new_name_args
+    error = NoMethodError.new("Message", :foo)
+    assert_nil(error.args)
+
+    error = NoMethodError.new("Message", :foo, [1, 2])
+    assert_equal([:foo, [1, 2]], [error.name, error.args])
+  end
+
+  def test_nomethod_error_new_name_args_priv
+    error = NoMethodError.new("Message", :foo, [1, 2])
+    assert_not_predicate(error, :private_call?)
+
+    error = NoMethodError.new("Message", :foo, [1, 2], true)
+    assert_equal([:foo, [1, 2], true],
+                 [error.name, error.args, error.private_call?])
+  end
+
+  def test_nomethod_error_new_receiver
+    receiver = Object.new
+
+    error = NoMethodError.new
+    assert_raise(ArgumentError) {error.receiver}
+
+    error = NoMethodError.new(receiver: receiver)
+    assert_equal(receiver, error.receiver)
+
+    error = NoMethodError.new("Message")
+    assert_raise(ArgumentError) {error.receiver}
+
+    error = NoMethodError.new("Message", receiver: receiver)
+    assert_equal(["Message", receiver],
+                 [error.message, error.receiver])
+
+    error = NoMethodError.new("Message", :foo)
+    assert_raise(ArgumentError) {error.receiver}
+
+    error = NoMethodError.new("Message", :foo, receiver: receiver)
+    assert_equal(["Message", :foo, receiver],
+                 [error.message, error.name, error.receiver])
+
+    error = NoMethodError.new("Message", :foo, [1, 2])
+    assert_raise(ArgumentError) {error.receiver}
+
+    error = NoMethodError.new("Message", :foo, [1, 2], receiver: receiver)
+    assert_equal(["Message", :foo, [1, 2], receiver],
+                 [error.message, error.name, error.args, error.receiver])
+
+    error = NoMethodError.new("Message", :foo, [1, 2], true)
+    assert_raise(ArgumentError) {error.receiver}
+
+    error = NoMethodError.new("Message", :foo, [1, 2], true, receiver: receiver)
+    assert_equal([:foo, [1, 2], true, receiver],
+                 [error.name, error.args, error.private_call?, error.receiver])
+  end
+
   def test_name_error_info_const
     obj = PrettyObject.new
 
@@ -1013,6 +1125,11 @@ def test_warning_warn
   def test_kernel_warn_uplevel
     warning = capture_warning_warn {warn("test warning", uplevel: 0)}
     assert_equal("#{__FILE__}:#{__LINE__-1}: warning: test warning\n", warning[0])
+    def (obj = Object.new).w(n) warn("test warning", uplevel: n) end
+    warning = capture_warning_warn {obj.w(0)}
+    assert_equal("#{__FILE__}:#{__LINE__-2}: warning: test warning\n", warning[0])
+    warning = capture_warning_warn {obj.w(1)}
+    assert_equal("#{__FILE__}:#{__LINE__-1}: warning: test warning\n", warning[0])
     assert_raise(ArgumentError) {warn("test warning", uplevel: -1)}
     assert_in_out_err(["-e", "warn 'ok', uplevel: 1"], '', [], /warning:/)
   end
@@ -1141,16 +1258,39 @@ def backtrace; :backtrace; end
     end
   end
 
+  def test_backtrace_in_eval
+    bug = '[ruby-core:84434] [Bug #14229]'
+    assert_in_out_err(['-e', 'eval("raise")'], "", [], /^\(eval\):1:/, bug)
+  end
+
   def test_full_message
+    message = RuntimeError.new("testerror").full_message
+    assert_operator(message, :end_with?, "\n")
+
     test_method = "def foo; raise 'testerror'; end"
 
     out1, err1, status1 = EnvUtil.invoke_ruby(['-e', "#{test_method}; begin; foo; rescue => e; puts e.full_message; end"], '', true, true)
-    assert(status1.success?)
-    assert(err1.empty?, "expected nothing wrote to $stdout by #long_message")
+    assert_predicate(status1, :success?)
+    assert_empty(err1, "expected nothing wrote to $stdout by #full_message")
 
     _, err2, status1 = EnvUtil.invoke_ruby(['-e', "#{test_method}; begin; foo; end"], '', true, true)
     assert_equal(err2, out1)
 
+    e = RuntimeError.new("a\n")
+    message = assert_nothing_raised(ArgumentError, proc {e.pretty_inspect}) do
+      e.full_message
+    end
+    assert_operator(message, :end_with?, "\n")
+    message = message.gsub(/\e\[[\d;]*m/, '')
+    assert_not_operator(message, :end_with?, "\n\n")
+    e = RuntimeError.new("a\n\nb\n\nc")
+    message = assert_nothing_raised(ArgumentError, proc {e.pretty_inspect}) do
+      e.full_message
+    end
+    assert_all?(message.lines) do |m|
+      /\e\[\d[;\d]*m[^\e]*\n/ !~ m
+    end
+
     e = RuntimeError.new("testerror")
     message = e.full_message(highlight: false)
     assert_not_match(/\e/, message)
@@ -1158,20 +1298,40 @@ def test_full_message
     bt = ["test:100", "test:99", "test:98", "test:1"]
     e = assert_raise(RuntimeError) {raise RuntimeError, "testerror", bt}
 
+    bottom = "test:100: testerror (RuntimeError)\n"
+    top = "test:1\n"
+    remark = "Traceback (most recent call last):"
+
     message = e.full_message(highlight: false, order: :top)
     assert_not_match(/\e/, message)
     assert_operator(message.count("\n"), :>, 2)
-    assert_operator(message, :start_with?, "test:100: testerror (RuntimeError)\n")
-    assert_operator(message, :end_with?, "test:1\n")
+    assert_operator(message, :start_with?, bottom)
+    assert_operator(message, :end_with?, top)
 
     message = e.full_message(highlight: false, order: :bottom)
     assert_not_match(/\e/, message)
     assert_operator(message.count("\n"), :>, 2)
-    assert_operator(message, :start_with?, "Traceback (most recent call last):")
-    assert_operator(message, :end_with?, "test:100: testerror (RuntimeError)\n")
+    assert_operator(message, :start_with?, remark)
+    assert_operator(message, :end_with?, bottom)
+
+    assert_raise_with_message(ArgumentError, /:top or :bottom/) {
+      e.full_message(highlight: false, order: :middle)
+    }
 
     message = e.full_message(highlight: true)
     assert_match(/\e/, message)
+
+    message = e.full_message
+    if Exception.to_tty?
+      assert_match(/\e/, message)
+      message = message.gsub(/\e\[[\d;]*m/, '')
+      assert_operator(message, :start_with?, remark)
+      assert_operator(message, :end_with?, bottom)
+    else
+      assert_not_match(/\e/, message)
+      assert_operator(message, :start_with?, bottom)
+      assert_operator(message, :end_with?, top)
+    end
   end
 
   def test_exception_in_message
@@ -1182,6 +1342,39 @@ def message; raise self.class; end
       end
       raise Bug14566
     end;
-    assert_in_out_err([], code, [], /Bug14566/, success: false, timeout: 10)
+    assert_in_out_err([], code, [], /Bug14566/, success: false, timeout: 2)
+  end
+
+  def test_non_exception_cause
+    assert_raise_with_message(TypeError, /exception/) do
+      raise "foo", cause: 1
+    end;
+  end
+
+  def test_circular_cause_handle
+    assert_raise_with_message(ArgumentError, /circular cause/) do
+      begin
+        raise "error 1"
+      rescue => e1
+        raise "error 2" rescue raise e1, cause: $!
+      end
+    end;
+  end
+
+  def test_super_in_method_missing
+    assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
+      $VERBOSE = nil
+      class Object
+        def method_missing(name, *args, &block)
+          super
+        end
+      end
+
+      bug14670 = '[ruby-dev:50522] [Bug #14670]'
+      assert_raise_with_message(NoMethodError, /`foo'/, bug14670) do
+        Object.new.foo
+      end
+    end;
   end
 end
diff --git a/test/mri/ruby/test_fiber.rb b/test/mri/ruby/test_fiber.rb
index 0d070dcbc41..e6b89ffa453 100644
--- a/test/mri/ruby/test_fiber.rb
+++ b/test/mri/ruby/test_fiber.rb
@@ -260,18 +260,27 @@ def test_prohibit_resume_transferred_fiber
   end
 
   def test_fork_from_fiber
-    begin
-      pid = Process.fork{}
-    rescue NotImplementedError
-      return
-    else
-      Process.wait(pid)
-    end
+    skip 'fork not supported' unless Process.respond_to?(:fork)
+    pid = nil
     bug5700 = '[ruby-core:41456]'
     assert_nothing_raised(bug5700) do
       Fiber.new do
         pid = fork do
-          Fiber.new {}.transfer
+          xpid = nil
+          Fiber.new {
+            xpid = fork do
+              # enough to trigger GC on old root fiber
+              count = 10000
+              count = 1000 if /openbsd/i =~ RUBY_PLATFORM
+              count.times do
+                Fiber.new {}.transfer
+                Fiber.new { Fiber.yield }
+              end
+              exit!(0)
+            end
+          }.transfer
+          _, status = Process.waitpid2(xpid)
+          exit!(status.success?)
         end
       end.resume
     end
@@ -383,6 +392,15 @@ def test_to_s
     assert_match(/resumed/, Fiber.current.to_s)
   end
 
+  def test_create_fiber_in_new_thread
+    ret = Thread.new{
+      Thread.new{
+        Fiber.new{Fiber.yield :ok}.resume
+      }.value
+    }.value
+    assert_equal :ok, ret, '[Bug #14642]'
+  end
+
   def test_machine_stack_gc
     assert_normal_exit <<-RUBY, '[Bug #14561]', timeout: 10
       enum = Enumerator.new { |y| y << 1 }
diff --git a/test/mri/ruby/test_file.rb b/test/mri/ruby/test_file.rb
index 10bfbd9ae04..3deab76e93c 100644
--- a/test/mri/ruby/test_file.rb
+++ b/test/mri/ruby/test_file.rb
@@ -473,6 +473,8 @@ def test_untainted_path
     (0..1).each do |level|
       assert_nothing_raised(SecurityError, bug5374) {in_safe[level]}
     end
+  ensure
+    $SAFE = 0
   end
 
   if /(bcc|ms|cyg)win|mingw|emx/ =~ RUBY_PLATFORM
@@ -502,6 +504,8 @@ def test_open_tempfile_path
         io = File.open(tmpdir, File::RDWR | File::TMPFILE)
       rescue Errno::EINVAL
         skip 'O_TMPFILE not supported (EINVAL)'
+      rescue Errno::EISDIR
+        skip 'O_TMPFILE not supported (EISDIR)'
       rescue Errno::EOPNOTSUPP
         skip 'O_TMPFILE not supported (EOPNOTSUPP)'
       end
diff --git a/test/mri/ruby/test_file_exhaustive.rb b/test/mri/ruby/test_file_exhaustive.rb
index 817c3580d14..7d4eeb6d59b 100644
--- a/test/mri/ruby/test_file_exhaustive.rb
+++ b/test/mri/ruby/test_file_exhaustive.rb
@@ -495,22 +495,39 @@ def test_grpowned_p ## xxx
     assert_file.grpowned?(utf8_file)
   end if POSIX
 
+  def io_open(file_name)
+    # avoid File.open since we do not want #to_path
+    io = IO.for_fd(IO.sysopen(file_name))
+    yield io
+  ensure
+    io&.close
+  end
+
   def test_suid
     assert_file.not_setuid?(regular_file)
     assert_file.not_setuid?(utf8_file)
-    assert_file.setuid?(suidfile) if suidfile
+    if suidfile
+      assert_file.setuid?(suidfile)
+      io_open(suidfile) { |io| assert_file.setuid?(io) }
+    end
   end
 
   def test_sgid
     assert_file.not_setgid?(regular_file)
     assert_file.not_setgid?(utf8_file)
-    assert_file.setgid?(sgidfile) if sgidfile
+    if sgidfile
+      assert_file.setgid?(sgidfile)
+      io_open(sgidfile) { |io| assert_file.setgid?(io) }
+    end
   end
 
   def test_sticky
     assert_file.not_sticky?(regular_file)
     assert_file.not_sticky?(utf8_file)
-    assert_file.sticky?(stickyfile) if stickyfile
+    if stickyfile
+      assert_file.sticky?(stickyfile)
+      io_open(stickyfile) { |io| assert_file.sticky?(io) }
+    end
   end
 
   def test_path_identical_p
@@ -764,7 +781,10 @@ def test_umask
   def test_expand_path
     assert_equal(regular_file, File.expand_path(File.basename(regular_file), File.dirname(regular_file)))
     assert_equal(utf8_file, File.expand_path(File.basename(utf8_file), File.dirname(utf8_file)))
-    if NTFS
+  end
+
+  if NTFS
+    def test_expand_path_ntfs
       [regular_file, utf8_file].each do |file|
         assert_equal(file, File.expand_path(file + " "))
         assert_equal(file, File.expand_path(file + "."))
@@ -775,8 +795,11 @@ def test_expand_path
       assert_match(/\Ae:\//i, File.expand_path('e:foo', 'd:/bar'))
       assert_match(%r'\Ac:/bar/foo\z'i, File.expand_path('c:foo', 'c:/bar'))
     end
-    case RUBY_PLATFORM
-    when /darwin/
+  end
+
+  case RUBY_PLATFORM
+  when /darwin/
+    def test_expand_path_hfs
       ["\u{feff}", *"\u{2000}"..."\u{2100}"].each do |c|
         file = regular_file + c
         full_path = File.expand_path(file)
@@ -792,11 +815,16 @@ def test_expand_path
         end
       end
     end
-    if DRIVE
+  end
+
+  if DRIVE
+    def test_expand_path_absolute
       assert_match(%r"\Az:/foo\z"i, File.expand_path('/foo', "z:/bar"))
       assert_match(%r"\A//host/share/foo\z"i, File.expand_path('/foo', "//host/share/bar"))
       assert_match(%r"\A#{DRIVE}/foo\z"i, File.expand_path('/foo'))
-    else
+    end
+  else
+    def test_expand_path_absolute
       assert_equal("/foo", File.expand_path('/foo'))
     end
   end
@@ -1166,7 +1194,10 @@ def test_basename
     assert_equal("foo", File.basename("foo", ".ext"))
     assert_equal("foo", File.basename("foo.ext", ".ext"))
     assert_equal("foo", File.basename("foo.ext", ".*"))
-    if NTFS
+  end
+
+  if NTFS
+    def test_basename_strip
       [regular_file, utf8_file].each do |file|
         basename = File.basename(file)
         assert_equal(basename, File.basename(file + " "))
@@ -1180,7 +1211,9 @@ def test_basename
         assert_equal(basename, File.basename(file + ".", ".*"))
         assert_equal(basename, File.basename(file + "::$DATA", ".*"))
       end
-    else
+    end
+  else
+    def test_basename_strip
       [regular_file, utf8_file].each do |file|
         basename = File.basename(file)
         assert_equal(basename + " ", File.basename(file + " "))
@@ -1195,13 +1228,18 @@ def test_basename
         assert_equal(basename, File.basename(file + "::$DATA", ".*"))
       end
     end
-    if File::ALT_SEPARATOR == '\\'
+  end
+
+  if File::ALT_SEPARATOR == '\\'
+    def test_basename_backslash
       a = "foo/\225\\\\"
       [%W"cp437 \225", %W"cp932 \225\\"].each do |cp, expected|
         assert_equal(expected.force_encoding(cp), File.basename(a.dup.force_encoding(cp)), cp)
       end
     end
+  end
 
+  def test_basename_encoding
     assert_incompatible_encoding {|d| File.basename(d)}
     assert_incompatible_encoding {|d| File.basename(d, ".*")}
     assert_raise(Encoding::CompatibilityError) {File.basename("foo.ext", ".*".encode("utf-16le"))}
@@ -1217,8 +1255,14 @@ def test_dirname
     assert_equal(@dir, File.dirname(regular_file))
     assert_equal(@dir, File.dirname(utf8_file))
     assert_equal(".", File.dirname(""))
+  end
+
+  def test_dirname_encoding
     assert_incompatible_encoding {|d| File.dirname(d)}
-    if File::ALT_SEPARATOR == '\\'
+  end
+
+  if File::ALT_SEPARATOR == '\\'
+    def test_dirname_backslash
       a = "\225\\\\foo"
       [%W"cp437 \225", %W"cp932 \225\\"].each do |cp, expected|
         assert_equal(expected.force_encoding(cp), File.dirname(a.dup.force_encoding(cp)), cp)
@@ -1477,11 +1521,7 @@ def test_stat_init
       assert_integer_or_nil(fs1.rdev_minor)
       assert_integer(fs1.ino)
       assert_integer(fs1.mode)
-      unless /emx|mswin|mingw/ =~ RUBY_PLATFORM
-        # on Windows, nlink is always 1. but this behavior will be changed
-        # in the future.
-        assert_equal(hardlinkfile ? 2 : 1, fs1.nlink)
-      end
+      assert_equal(hardlinkfile ? 2 : 1, fs1.nlink)
       assert_integer(fs1.uid)
       assert_integer(fs1.gid)
       assert_equal(3, fs1.size)
diff --git a/test/mri/ruby/test_flip.rb b/test/mri/ruby/test_flip.rb
index b8b05aed6d5..8ea6416bdbe 100644
--- a/test/mri/ruby/test_flip.rb
+++ b/test/mri/ruby/test_flip.rb
@@ -2,7 +2,16 @@
 require 'test/unit'
 
 class TestFlip < Test::Unit::TestCase
+  def setup
+    @verbose_bak, $VERBOSE = $VERBOSE, nil
+  end
+
+  def teardown
+    $VERBOSE = @verbose_bak
+  end
+
   def test_flip_flop
+    eval <<-END
     assert_equal [4,5], (1..9).select {|n| true if (n==4)..(n==5)}
     assert_equal [4,5], (1..9).select {|n| true if (n==4)...(n==5)}
     assert_equal [2], (1..9).select {|n| true if (n==2)..(n%2).zero?}
@@ -10,6 +19,7 @@ def test_flip_flop
     assert_equal [4,5,7,8], (1..9).select {|n| true if (n==4)...(n==5) or (n==7)...(n==8)}
     assert_equal [nil, 2, 3, 4, nil], (1..5).map {|x| x if (x==2..x==4)}
     assert_equal [1, nil, nil, nil, 5], (1..5).map {|x| x if !(x==2..x==4)}
+    END
   end
 
   def test_hidden_key
@@ -25,13 +35,13 @@ def test_hidden_key
   def test_shared_eval
     bug7671 = '[ruby-core:51296]'
     vs = (1..9).to_a
-    vs.select {|n| if n==2..n==16 then 1 end}
+    eval("vs.select {|n| if n==2..n==16 then 1 end}")
     v = eval("vs.select {|n| if n==3..n==6 then 1 end}")
     assert_equal([*3..6], v, bug7671)
   end
 
   def test_shared_thread
-    ff = proc {|n| true if n==3..n==5}
+    ff = eval("proc {|n| true if n==3..n==5}")
     v = 1..9
     a = true
     th = Thread.new {
diff --git a/test/mri/ruby/test_float.rb b/test/mri/ruby/test_float.rb
index 7fabfd351de..34534406946 100644
--- a/test/mri/ruby/test_float.rb
+++ b/test/mri/ruby/test_float.rb
@@ -791,6 +791,7 @@ def test_Float
     assert_equal(Float::INFINITY, Float('0xf.fp1000000000000000'))
     assert_equal(1, suppress_warning {Float("1e10_00")}.infinite?)
     assert_raise(TypeError) { Float(nil) }
+    assert_raise(TypeError) { Float(:test) }
     o = Object.new
     def o.to_f; inf = Float::INFINITY; inf/inf; end
     assert_predicate(Float(o), :nan?)
@@ -801,6 +802,43 @@ def test_invalid_str
     assert_raise(ArgumentError, bug4310) {under_gc_stress {Float('a'*10000)}}
   end
 
+  def test_Float_with_exception_keyword
+    assert_raise(ArgumentError) {
+      Float(".", exception: true)
+    }
+    assert_nothing_raised(ArgumentError) {
+      assert_equal(nil, Float(".", exception: false))
+    }
+    assert_raise(RangeError) {
+      Float(1i, exception: true)
+    }
+    assert_nothing_raised(RangeError) {
+      assert_equal(nil, Float(1i, exception: false))
+    }
+    assert_raise(TypeError) {
+      Float(nil, exception: true)
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Float(nil, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Float(:test, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Float(Object.new, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      o = Object.new
+      def o.to_f; 3.14; end
+      assert_equal(3.14, Float(o, exception: false))
+    }
+    assert_nothing_raised(RuntimeError) {
+      o = Object.new
+      def o.to_f; raise; end
+      assert_equal(nil, Float(o, exception: false))
+    }
+  end
+
   def test_num2dbl
     assert_raise(ArgumentError, "comparison of String with 0 failed") do
       1.0.step(2.0, "0.5") {}
diff --git a/test/mri/ruby/test_fnmatch.rb b/test/mri/ruby/test_fnmatch.rb
index 30250b5a193..16f1076e48c 100644
--- a/test/mri/ruby/test_fnmatch.rb
+++ b/test/mri/ruby/test_fnmatch.rb
@@ -10,6 +10,7 @@ def bracket_test(s, t) # `s' should start with neither '!' nor '^'
       assert_equal(t.include?(i.chr), !File.fnmatch("[!#{s}]", i.chr, File::FNM_DOTMATCH))
     end
   end
+
   def test_fnmatch
     assert_file.for("[ruby-dev:22819]").fnmatch('\[1\]' , '[1]')
     assert_file.for("[ruby-dev:22815]").fnmatch('*?', 'a')
@@ -17,10 +18,16 @@ def test_fnmatch
     assert_file.fnmatch('\[1\]' , '[1]', File::FNM_PATHNAME)
     assert_file.fnmatch('*?', 'a', File::FNM_PATHNAME)
     assert_file.fnmatch('*/', 'a/', File::FNM_PATHNAME)
+  end
+
+  def test_text
     # text
     assert_file.fnmatch('cat', 'cat')
     assert_file.not_fnmatch('cat', 'category')
     assert_file.not_fnmatch('cat', 'wildcat')
+  end
+
+  def test_any_one
     # '?' matches any one character
     assert_file.fnmatch('?at', 'cat')
     assert_file.fnmatch('c?t', 'cat')
@@ -29,6 +36,9 @@ def test_fnmatch
     assert_file.not_fnmatch('c??t', 'cat')
     assert_file.not_fnmatch('??at', 'cat')
     assert_file.not_fnmatch('ca??', 'cat')
+  end
+
+  def test_any_chars
     # '*' matches any number (including 0) of any characters
     assert_file.fnmatch('c*', 'cats')
     assert_file.fnmatch('c*ts', 'cats')
@@ -40,9 +50,15 @@ def test_fnmatch
     assert_file.not_fnmatch('a*abc', 'abc')
     assert_file.fnmatch('a*bc', 'abc')
     assert_file.not_fnmatch('a*bc', 'abcd')
+  end
+
+  def test_char_class
     # [seq] : matches any character listed between bracket
     # [!seq] or [^seq] : matches any character except those listed between bracket
     bracket_test("bd-gikl-mosv-x", "bdefgiklmosvwx")
+  end
+
+  def test_escape
     # escaping character
     assert_file.fnmatch('\?', '?')
     assert_file.not_fnmatch('\?', '\?')
@@ -59,6 +75,9 @@ def test_fnmatch
     assert_file.fnmatch('[a\-c]', 'c')
     assert_file.not_fnmatch('[a\-c]', 'b')
     assert_file.not_fnmatch('[a\-c]', '\\')
+  end
+
+  def test_fnm_escape
     # escaping character loses its meaning if FNM_NOESCAPE is set
     assert_file.not_fnmatch('\?', '?', File::FNM_NOESCAPE)
     assert_file.fnmatch('\?', '\?', File::FNM_NOESCAPE)
@@ -75,6 +94,9 @@ def test_fnmatch
     assert_file.fnmatch('[a\-c]', 'c', File::FNM_NOESCAPE)
     assert_file.fnmatch('[a\-c]', 'b', File::FNM_NOESCAPE) # '\\' < 'b' < 'c'
     assert_file.fnmatch('[a\-c]', '\\', File::FNM_NOESCAPE)
+  end
+
+  def test_fnm_casefold
     # case is ignored if FNM_CASEFOLD is set
     assert_file.not_fnmatch('cat', 'CAT')
     assert_file.fnmatch('cat', 'CAT', File::FNM_CASEFOLD)
@@ -82,11 +104,17 @@ def test_fnmatch
     assert_file.fnmatch('[a-z]', 'D', File::FNM_CASEFOLD)
     assert_file.not_fnmatch('[abc]', 'B')
     assert_file.fnmatch('[abc]', 'B', File::FNM_CASEFOLD)
+  end
+
+  def test_fnm_pathname
     # wildcard doesn't match '/' if FNM_PATHNAME is set
     assert_file.fnmatch('foo?boo', 'foo/boo')
     assert_file.fnmatch('foo*', 'foo/boo')
     assert_file.not_fnmatch('foo?boo', 'foo/boo', File::FNM_PATHNAME)
     assert_file.not_fnmatch('foo*', 'foo/boo', File::FNM_PATHNAME)
+  end
+
+  def test_fnm_dotmatch
     # wildcard matches leading period if FNM_DOTMATCH is set
     assert_file.not_fnmatch('*', '.profile')
     assert_file.fnmatch('*', '.profile', File::FNM_DOTMATCH)
@@ -95,6 +123,9 @@ def test_fnmatch
     assert_file.fnmatch('*/*', 'dave/.profile')
     assert_file.not_fnmatch('*/*', 'dave/.profile', File::FNM_PATHNAME)
     assert_file.fnmatch('*/*', 'dave/.profile', File::FNM_PATHNAME | File::FNM_DOTMATCH)
+  end
+
+  def test_recursive
     # recursive matching
     assert_file.fnmatch('**/foo', 'a/b/c/foo', File::FNM_PATHNAME)
     assert_file.fnmatch('**/foo', '/foo', File::FNM_PATHNAME)
diff --git a/test/mri/ruby/test_hash.rb b/test/mri/ruby/test_hash.rb
index bdcf0226686..c934d1015eb 100644
--- a/test/mri/ruby/test_hash.rb
+++ b/test/mri/ruby/test_hash.rb
@@ -280,6 +280,24 @@ def test_ASET_fstring_key
     assert_same a.keys[0], b.keys[0]
   end
 
+  def test_ASET_fstring_non_literal_key
+    underscore = "_"
+    non_literal_strings = Proc.new{ ["abc#{underscore}def", "abc" * 5, "abc" + "def", "" << "ghi" << "jkl"] }
+
+    a, b = {}, {}
+    non_literal_strings.call.each do |string|
+      assert_equal 1, a[string] = 1
+    end
+
+    non_literal_strings.call.each do |string|
+      assert_equal 1, b[string] = 1
+    end
+
+    [a.keys, b.keys].transpose.each do |key_a, key_b|
+      assert_same key_a, key_b
+    end
+  end
+
   def test_hash_aset_fstring_identity
     h = {}.compare_by_identity
     h['abc'] = 1
@@ -298,6 +316,9 @@ def test_NEWHASH_fstring_key
     b = {"ABC" => :t}
     assert_same a.keys[0], b.keys[0]
     assert_same "ABC".freeze, a.keys[0]
+    var = +'ABC'
+    c = { var => :t }
+    assert_same "ABC".freeze, c.keys[0]
   end
 
   def test_tainted_string_key
@@ -305,10 +326,10 @@ def test_tainted_string_key
     h = {}
     h[str] = nil
     key = h.keys.first
-    assert_equal true, str.tainted?
-    assert_equal false, str.frozen?
-    assert_equal true, key.tainted?
-    assert_equal true, key.frozen?
+    assert_predicate str, :tainted?
+    assert_not_predicate str, :frozen?
+    assert_predicate key, :tainted?
+    assert_predicate key, :frozen?
   end
 
   def test_EQUAL # '=='
@@ -734,6 +755,14 @@ def test_replace_bug9230
     assert_predicate(h, :compare_by_identity?)
   end
 
+  def test_replace_bug15358
+    h1 = {}
+    h2 = {a:1,b:2,c:3,d:4,e:5}
+    h2.replace(h1)
+    GC.start
+    assert(true)
+  end
+
   def test_shift
     h = @h.dup
 
@@ -844,6 +873,16 @@ def test_to_h_default_proc
     assert_equal("nope42", h[42])
   end
 
+  def test_to_h_block
+    h = @h.to_h {|k, v| [k.to_s, v.to_s]}
+    assert_equal({
+                   "1"=>"one", "2"=>"two", "3"=>"three", to_s=>"self",
+                   "true"=>"true", ""=>"nil", "nil"=>""
+                 },
+                 h)
+    assert_instance_of(Hash, h)
+  end
+
   def test_nil_to_h
     h = nil.to_h
     assert_equal({}, h)
@@ -1014,6 +1053,44 @@ def test_slice
     assert_equal({}, {}.slice)
   end
 
+  def test_filter
+    assert_equal({3=>4,5=>6}, @cls[1=>2,3=>4,5=>6].filter {|k, v| k + v >= 7 })
+
+    base = @cls[ 1 => 'one', '2' => false, true => 'true', 'cat' => 99 ]
+    h1   = @cls[ '2' => false, 'cat' => 99 ]
+    h2   = @cls[ 1 => 'one', true => 'true' ]
+    h3   = @cls[ 1 => 'one', true => 'true', 'cat' => 99 ]
+
+    h = base.dup
+    assert_equal(h, h.filter { true })
+    assert_equal(@cls[], h.filter { false })
+
+    h = base.dup
+    assert_equal(h1, h.filter {|k,v| k.instance_of?(String) })
+
+    assert_equal(h2, h.filter {|k,v| v.instance_of?(String) })
+
+    assert_equal(h3, h.filter {|k,v| v })
+    assert_equal(base, h)
+
+    h.instance_variable_set(:@foo, :foo)
+    h.default = 42
+    h.taint
+    h = h.filter {true}
+    assert_instance_of(Hash, h)
+    assert_not_predicate(h, :tainted?)
+    assert_nil(h.default)
+    assert_not_send([h, :instance_variable_defined?, :@foo])
+  end
+
+  def test_filter!
+    h = @cls[1=>2,3=>4,5=>6]
+    assert_equal(h, h.filter! {|k, v| k + v >= 7 })
+    assert_equal({3=>4,5=>6}, h)
+    h = @cls[1=>2,3=>4,5=>6]
+    assert_equal(nil, h.filter!{true})
+  end
+
   def test_clear2
     assert_equal({}, @cls[1=>2,3=>4,5=>6].clear)
     h = @cls[1=>2,3=>4,5=>6]
@@ -1082,11 +1159,35 @@ def test_update2
     assert_equal({1=>6, 3=>4, 5=>7}, h1)
   end
 
+  def test_update3
+    h1 = @cls[1=>2, 3=>4]
+    h1.update()
+    assert_equal({1=>2, 3=>4}, h1)
+    h2 = {1=>3, 5=>7}
+    h3 = {1=>1, 2=>4}
+    h1.update(h2, h3)
+    assert_equal({1=>1, 2=>4, 3=>4, 5=>7}, h1)
+  end
+
+  def test_update4
+    h1 = @cls[1=>2, 3=>4]
+    h1.update(){|k, v1, v2| k + v1 + v2 }
+    assert_equal({1=>2, 3=>4}, h1)
+    h2 = {1=>3, 5=>7}
+    h3 = {1=>1, 2=>4}
+    h1.update(h2, h3){|k, v1, v2| k + v1 + v2 }
+    assert_equal({1=>8, 2=>4, 3=>4, 5=>7}, h1)
+  end
+
   def test_merge
     h1 = @cls[1=>2, 3=>4]
     h2 = {1=>3, 5=>7}
+    h3 = {1=>1, 2=>4}
+    assert_equal({1=>2, 3=>4}, h1.merge())
     assert_equal({1=>3, 3=>4, 5=>7}, h1.merge(h2))
     assert_equal({1=>6, 3=>4, 5=>7}, h1.merge(h2) {|k, v1, v2| k + v1 + v2 })
+    assert_equal({1=>1, 2=>4, 3=>4, 5=>7}, h1.merge(h2, h3))
+    assert_equal({1=>8, 2=>4, 3=>4, 5=>7}, h1.merge(h2, h3) {|k, v1, v2| k + v1 + v2 })
   end
 
   def test_assoc
@@ -1611,6 +1712,15 @@ def test_broken_hash_value
     assert_equal(0, 1_000_000.times.count{a=Object.new.hash; b=Object.new.hash; 0 + a + b != 0 + b + a}, bug14218)
   end
 
+  def test_reserved_hash_val
+    s = Struct.new(:hash)
+    h = {}
+    keys = [*0..8]
+    keys.each {|i| h[s.new(i)]=true}
+    msg = proc {h.inspect}
+    assert_equal(keys, h.keys.map(&:hash), msg)
+  end
+
   class TestSubHash < TestHash
     class SubHash < Hash
       def reject(*)
diff --git a/test/mri/ruby/test_ifunless.rb b/test/mri/ruby/test_ifunless.rb
index d533e155bc1..f68e5154a23 100644
--- a/test/mri/ruby/test_ifunless.rb
+++ b/test/mri/ruby/test_ifunless.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
 require 'test/unit'
 
-class TestIfunless < Test::Unit::TestCase
+class TestIfUnless < Test::Unit::TestCase
   def test_if_unless
     x = 'test';
     assert(if x == x then true else false end)
diff --git a/test/mri/ruby/test_integer.rb b/test/mri/ruby/test_integer.rb
index 1b485760e3d..69347b6b114 100644
--- a/test/mri/ruby/test_integer.rb
+++ b/test/mri/ruby/test_integer.rb
@@ -24,6 +24,32 @@ def test_pow
                         rescue
                           nil
                         end, "[ruby-dev:32084] [ruby-dev:34547]")
+
+    x = EnvUtil.suppress_warning {2 ** -0x4000000000000000}
+    assert_in_delta(0.0, (x / 2), Float::EPSILON)
+
+    <<~EXPRS.each_line.with_index(__LINE__+1) do |expr, line|
+      crash01: 111r+11**-11111161111111
+      crash02: 1118111111111**-1111111111111111**1+1==11111
+      crash03: -1111111**-1111*11 - -1111111** -111111111
+      crash04: 1118111111111** -1111111111111111**1+11111111111**1 ===111
+      crash05: 11** -111155555555555555  -55   !=5-555
+      crash07: 1 + 111111111**-1111811111
+      crash08: 18111111111**-1111111111111111**1 + 1111111111**-1111**1
+      crash10: -7 - -1111111** -1111**11
+      crash12: 1118111111111** -1111111111111111**1 + 1111 - -1111111** -1111*111111111119
+      crash13: 1.0i - -1111111** -111111111
+      crash14: 11111**111111111**111111 * -11111111111111111111**-111111111111
+      crash15: ~1**1111 + -~1**~1**111
+      crash17: 11** -1111111**1111 /11i
+      crash18: 5555i**-5155 - -9111111**-1111**11
+      crash19: 111111*-11111111111111111111**-1111111111111111
+      crash20: 1111**111-11**-11111**11
+      crash21: 11**-10111111119-1i -1r
+    EXPRS
+      name, expr = expr.split(':', 2)
+      assert_ruby_status(%w"-W0", expr, name)
+    end
   end
 
   def test_lshift
@@ -92,6 +118,17 @@ def test_Integer
     assert_equal(2 ** 50, Integer(2.0 ** 50))
     assert_raise(TypeError) { Integer(nil) }
 
+    bug14552 = '[ruby-core:85813]'
+    obj = Object.new
+    def obj.to_int; "str"; end
+    assert_raise(TypeError, bug14552) { Integer(obj) }
+    def obj.to_i; 42; end
+    assert_equal(42, Integer(obj), bug14552)
+
+    obj = Object.new
+    def obj.to_i; "str"; end
+    assert_raise(TypeError) { Integer(obj) }
+
     bug6192 = '[ruby-core:43566]'
     assert_raise(Encoding::CompatibilityError, bug6192) {Integer("0".encode("utf-16be"))}
     assert_raise(Encoding::CompatibilityError, bug6192) {Integer("0".encode("utf-16le"))}
@@ -116,6 +153,55 @@ def to_int; raise "conversion failed"; end
     end;
   end
 
+  def test_Integer_with_exception_keyword
+    assert_nothing_raised(ArgumentError) {
+      assert_equal(nil, Integer("1z", exception: false))
+    }
+    assert_nothing_raised(ArgumentError) {
+      assert_equal(nil, Integer(Object.new, exception: false))
+    }
+    assert_nothing_raised(ArgumentError) {
+      o = Object.new
+      def o.to_i; 42.5; end
+      assert_equal(nil, Integer(o, exception: false))
+    }
+    assert_nothing_raised(ArgumentError) {
+      o = Object.new
+      def o.to_i; raise; end
+      assert_equal(nil, Integer(o, exception: false))
+    }
+    assert_nothing_raised(ArgumentError) {
+      o = Object.new
+      def o.to_int; raise; end
+      assert_equal(nil, Integer(o, exception: false))
+    }
+    assert_nothing_raised(FloatDomainError) {
+      assert_equal(nil, Integer(Float::INFINITY, exception: false))
+    }
+    assert_nothing_raised(FloatDomainError) {
+      assert_equal(nil, Integer(-Float::INFINITY, exception: false))
+    }
+    assert_nothing_raised(FloatDomainError) {
+      assert_equal(nil, Integer(Float::NAN, exception: false))
+    }
+
+    assert_raise(ArgumentError) {
+      Integer("1z", exception: true)
+    }
+    assert_raise(TypeError) {
+      Integer(nil, exception: true)
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Integer(nil, exception: false))
+    }
+
+    assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
+      class Integer;def method_missing(*);"";end;end
+      assert_equal(0, Integer("0", 2))
+    end;
+  end
+
   def test_int_p
     assert_not_predicate(1.0, :integer?)
     assert_predicate(1, :integer?)
diff --git a/test/mri/ruby/test_io.rb b/test/mri/ruby/test_io.rb
index 178e3c3d7e3..48eed7e6876 100644
--- a/test/mri/ruby/test_io.rb
+++ b/test/mri/ruby/test_io.rb
@@ -49,8 +49,8 @@ def pipe(wp, rp)
     end
     flunk("timeout") unless wt.join(10) && rt.join(10)
   ensure
-    w.close unless !w || w.closed?
-    r.close unless !r || r.closed?
+    w&.close
+    r&.close
     (wt.kill; wt.join) if wt
     (rt.kill; rt.join) if rt
     raise we if we
@@ -62,8 +62,8 @@ def with_pipe
     begin
       yield r, w
     ensure
-      r.close unless r.closed?
-      w.close unless w.closed?
+      r.close
+      w.close
     end
   end
 
@@ -84,12 +84,17 @@ def mkcdtmpdir
     }
   end
 
-  def trapping_usr1
-    @usr1_rcvd  = 0
-    trap(:USR1) { @usr1_rcvd += 1 }
-    yield
+  def trapping_usr2
+    @usr2_rcvd  = 0
+    r, w = IO.pipe
+    trap(:USR2) do
+      w.write([@usr2_rcvd += 1].pack('L'))
+    end
+    yield r
   ensure
-    trap(:USR1, "DEFAULT")
+    trap(:USR2, "DEFAULT")
+    w&.close
+    r&.close
   end
 
   def test_pipe
@@ -556,6 +561,9 @@ def test_copy_stream_file_to_pipe
 
   if have_nonblock?
     def test_copy_stream_no_busy_wait
+      skip "MJIT has busy wait on GC. This sometimes fails with --jit." if RubyVM::MJIT.enabled?
+      skip "multiple threads already active" if Thread.list.size > 1
+
       msg = 'r58534 [ruby-core:80969] [Backport #13533]'
       IO.pipe do |r,w|
         r.nonblock = true
@@ -577,7 +585,6 @@ def test_copy_stream_pipe_nonblock
               w2.nonblock = true
             rescue Errno::EBADF
               skip "nonblocking IO for pipe is not implemented"
-              break
             end
             s = w2.syswrite("a" * 100000)
             t = Thread.new { sleep 0.1; r2.read }
@@ -643,7 +650,7 @@ def test_copy_stream_bigcontent_fpos
           assert_equal(bigcontent[30, 40], File.read("bigdst"))
           assert_equal(0, f.pos)
         rescue NotImplementedError
-          #skip "pread(2) is not implemtented."
+          #skip "pread(2) is not implemented."
         end
       }
     }
@@ -875,20 +882,21 @@ def test_copy_stream_socket7
         rescue Errno::EBADF
           skip "nonblocking IO for pipe is not implemented"
         end
-        trapping_usr1 do
+        trapping_usr2 do |rd|
           nr = 30
           begin
             pid = fork do
               s1.close
               IO.select([s2])
-              Process.kill(:USR1, Process.ppid)
-              s2.read
+              Process.kill(:USR2, Process.ppid)
+              buf = String.new(capacity: 16384)
+              nil while s2.read(16384, buf)
             end
             s2.close
             nr.times do
               assert_equal megacontent.bytesize, IO.copy_stream("megasrc", s1)
             end
-            assert_equal(1, @usr1_rcvd)
+            assert_equal(1, rd.read(4).unpack1('L'))
           ensure
             s1.close
             _, status = Process.waitpid2(pid) if pid
@@ -1192,10 +1200,11 @@ def test_copy_stream_dst_rbuf
 
   def test_copy_stream_to_duplex_io
     result = IO.pipe {|a,w|
-      Thread.start {w.puts "yes"; w.close}
+      th = Thread.start {w.puts "yes"; w.close}
       IO.popen([EnvUtil.rubybin, '-pe$_="#$.:#$_"'], "r+") {|b|
         IO.copy_stream(a, b)
         b.close_write
+        assert_join_threads([th])
         b.read
       }
     }
@@ -1208,7 +1217,7 @@ def ruby(*args)
     opts = {}
     if defined?(Process::RLIMIT_NPROC)
       lim = Process.getrlimit(Process::RLIMIT_NPROC)[1]
-      opts[:rlimit_nproc] = [lim, 1024].min
+      opts[:rlimit_nproc] = [lim, 2048].min
     end
     f = IO.popen([ruby] + args, 'r+', opts)
     pid = f.pid
@@ -1296,6 +1305,13 @@ def test_write_buffered_with_multiple_arguments
     assert_empty(err)
   end
 
+  def test_write_no_args
+    IO.pipe do |r, w|
+      assert_equal 0, w.write, '[ruby-core:86285] [Bug #14338]'
+      assert_equal :wait_readable, r.read_nonblock(1, exception: false)
+    end
+  end
+
   def test_write_non_writable
     with_pipe do |r, w|
       assert_raise(IOError) do
@@ -1861,7 +1877,6 @@ def test_close_on_exec
 
   def test_pos
     make_tempfile {|t|
-
       open(t.path, IO::RDWR|IO::CREAT|IO::TRUNC, 0600) do |f|
         f.write "Hello"
         assert_equal(5, f.pos)
@@ -2144,6 +2159,10 @@ def test_autoclose
   end
 
   def test_autoclose_true_closed_by_finalizer
+    # http://ci.rvm.jp/results/trunk-mjit@silicon-docker/1465760
+    # http://ci.rvm.jp/results/trunk-mjit@silicon-docker/1469765
+    skip 'this randomly fails with MJIT' if RubyVM::MJIT.enabled?
+
     feature2250 = '[ruby-core:26222]'
     pre = 'ft2250'
     t = Tempfile.new(pre)
@@ -2159,7 +2178,7 @@ def test_autoclose_true_closed_by_finalizer
       assert_raise(Errno::EBADF, feature2250) {t.close}
     end
   ensure
-    t.close!
+    t&.close!
   end
 
   def test_autoclose_false_closed_by_finalizer
@@ -2199,10 +2218,10 @@ def test_open_pipe
 
   def test_read_command
     assert_equal("foo\n", IO.read("|echo foo"))
-    assert_warn(/invoke external command/) do
+    assert_raise(Errno::ENOENT, Errno::EINVAL) do
       File.read("|#{EnvUtil.rubybin} -e puts")
     end
-    assert_warn(/invoke external command/) do
+    assert_raise(Errno::ENOENT, Errno::EINVAL) do
       File.binread("|#{EnvUtil.rubybin} -e puts")
     end
     assert_raise(Errno::ENOENT, Errno::EINVAL) do
@@ -2254,13 +2273,13 @@ def test_reopen
 
   def test_reopen_inherit
     mkcdtmpdir {
-      system(EnvUtil.rubybin, '-e', <<"End")
+      system(EnvUtil.rubybin, '-e', <<-"End")
         f = open("out", "w")
         STDOUT.reopen(f)
         STDERR.reopen(f)
         system(#{EnvUtil.rubybin.dump}, '-e', 'STDOUT.print "out"')
         system(#{EnvUtil.rubybin.dump}, '-e', 'STDERR.print "err"')
-End
+      End
       assert_equal("outerr", File.read("out"))
     }
   end
@@ -2321,7 +2340,7 @@ def make_tempfile_for_encoding
       t
     end
   ensure
-    t.close(true) if t and block_given?
+    t&.close(true) if block_given?
   end
 
   def test_reopen_encoding
@@ -2547,7 +2566,8 @@ def test_set_stdout
 
     assert_in_out_err([], "$> = $stderr\nputs 'foo'", [], %w(foo))
 
-    assert_separately(%w[-Eutf-8], <<-"end;") #    do
+    assert_separately(%w[-Eutf-8], "#{<<~"begin;"}\n#{<<~"end;"}")
+    begin;
       alias $\u{6a19 6e96 51fa 529b} $stdout
       x = eval("class X\u{307b 3052}; self; end".encode("euc-jp"))
       assert_raise_with_message(TypeError, /\\$\u{6a19 6e96 51fa 529b} must.*, X\u{307b 3052} given/) do
@@ -2560,7 +2580,6 @@ def test_initialize
     return unless defined?(Fcntl::F_GETFL)
 
     make_tempfile {|t|
-
       fd = IO.sysopen(t.path, "w")
       assert_kind_of(Integer, fd)
       %w[r r+ w+ a+].each do |mode|
@@ -2678,7 +2697,7 @@ def test_threaded_flush
     end;
     10.times.map do
       Thread.start do
-        assert_in_out_err([], src) {|stdout, stderr|
+        assert_in_out_err([], src, timeout: 20) {|stdout, stderr|
           assert_no_match(/hi.*hi/, stderr.join, bug3585)
         }
       end
@@ -2686,7 +2705,6 @@ def test_threaded_flush
   end
 
   def test_flush_in_finalizer1
-    require 'tempfile'
     bug3910 = '[ruby-dev:42341]'
     tmp = Tempfile.open("bug3910") {|t|
       path = t.path
@@ -2712,7 +2730,6 @@ def test_flush_in_finalizer1
   end
 
   def test_flush_in_finalizer2
-    require 'tempfile'
     bug3910 = '[ruby-dev:42341]'
     Tempfile.open("bug3910") {|t|
       path = t.path
@@ -2846,7 +2863,7 @@ def test_invalid_advise
   end
 
   def test_fcntl_lock_linux
-    pad=0
+    pad = 0
     Tempfile.create(self.class.name) do |f|
       r, w = IO.pipe
       pid = fork do
@@ -3155,7 +3172,7 @@ def test_ioctl_linux2
         f.ioctl(tiocgwinsz, winsize)
       }
     ensure
-      f.close if f
+      f&.close
     end
   end if /^(?:i.?86|x86_64)-linux/ =~ RUBY_PLATFORM
 
@@ -3251,17 +3268,12 @@ def test_readpartial_locktmp
 
       assert_equal 100, buf.bytesize
 
-      begin
+      msg = /can't modify string; temporarily locked/
+      assert_raise_with_message(RuntimeError, msg) do
         buf.replace("")
-      rescue RuntimeError => e
-        assert_match(/can't modify string; temporarily locked/, e.message)
-        Thread.pass
-      end until buf.empty?
-
-      assert_empty(buf, bug6099)
+      end
       assert_predicate(th, :alive?)
       w.write(data)
-      Thread.pass while th.alive?
       th.join
     end
     assert_equal(data, buf, bug6099)
@@ -3548,8 +3560,17 @@ def test_open_flag_binary
     end
   end if File::BINARY != 0
 
+  def test_exclusive_mode
+    make_tempfile do |t|
+      assert_raise(Errno::EEXIST){ open(t.path, 'wx'){} }
+      assert_raise(ArgumentError){ open(t.path, 'rx'){} }
+      assert_raise(ArgumentError){ open(t.path, 'ax'){} }
+    end
+  end
+
   def test_race_gets_and_close
-    assert_separately([], "#{<<-"begin;"}\n#{<<-"end;"}")
+    opt = { signal: :ABRT, timeout: 200 }
+    assert_separately([], "#{<<-"begin;"}\n#{<<-"end;"}", opt)
     bug13076 = '[ruby-core:78845] [Bug #13076]'
     begin;
       10.times do |i|
@@ -3571,9 +3592,9 @@ def test_race_gets_and_close
           w.close
           r.close
         end
-        assert_nothing_raised(IOError, bug13076) {
-          t.each(&:join)
-        }
+        t.each do |th|
+          assert_same(th, th.join(2), bug13076)
+        end
       end
     end;
   end
@@ -3696,6 +3717,7 @@ def test_closed_stream_in_rescue
     end
 
     def test_write_no_garbage
+      skip "multiple threads already active" if Thread.list.size > 1
       res = {}
       ObjectSpace.count_objects(res) # creates strings on first call
       [ 'foo'.b, '*' * 24 ].each do |buf|
@@ -3756,20 +3778,81 @@ def test_select_exceptfds
     end
   end if Socket.const_defined?(:MSG_OOB)
 
+  def test_recycled_fd_close
+    dot = -'.'
+    IO.pipe do |sig_rd, sig_wr|
+      noex = Thread.new do # everything right and never see exceptions :)
+        until sig_rd.wait_readable(0)
+          IO.pipe do |r, w|
+            th = Thread.new { r.read(1) }
+            w.write(dot)
+
+            assert_same th, th.join(15), '"good" reader timeout'
+            assert_equal(dot, th.value)
+          end
+        end
+        sig_rd.read(4)
+      end
+      1000.times do |i| # stupid things and make exceptions:
+        IO.pipe do |r,w|
+          th = Thread.new do
+            begin
+              while r.gets
+              end
+            rescue IOError => e
+              e
+            end
+          end
+          Thread.pass until th.stop?
+
+          r.close
+          assert_same th, th.join(30), '"bad" reader timeout'
+          assert_match(/stream closed/, th.value.message)
+        end
+      end
+      sig_wr.write 'done'
+      assert_same noex, noex.join(20), '"good" writer timeout'
+      assert_equal 'done', noex.value ,'r63216'
+    end
+  end
+
   def test_select_leak
-    assert_no_memory_leak([], <<-"end;", <<-"end;", rss: true, timeout: 240)
+    # avoid malloc arena explosion from glibc and jemalloc:
+    env = {
+      'MALLOC_ARENA_MAX' => '1',
+      'MALLOC_ARENA_TEST' => '1',
+      'MALLOC_CONF' => 'narenas:1',
+    }
+    assert_no_memory_leak([env], <<-"end;", <<-"end;", rss: true, timeout: 60)
       r, w = IO.pipe
       rset = [r]
       wset = [w]
+      exc = StandardError.new(-"select used to leak on exception")
+      exc.set_backtrace([])
       Thread.new { IO.select(rset, wset, nil, 0) }.join
     end;
-      20_000.times do
-        th = Thread.new { IO.select(rset, wset) }
+      th = Thread.new do
+        Thread.handle_interrupt(StandardError => :on_blocking) do
+          begin
+            IO.select(rset, wset)
+          rescue
+            retry
+          end while true
+        end
+      end
+      50_000.times do
         Thread.pass until th.stop?
-        th.kill
-        th.join
-        GC.start
+        th.raise(exc)
       end
+      th.kill
+      th.join
     end;
   end
+
+  def test_external_encoding_index
+    IO.pipe {|r, w|
+      assert_raise(TypeError) {Marshal.dump(r)}
+      assert_raise(TypeError) {Marshal.dump(w)}
+    }
+  end
 end
diff --git a/test/mri/ruby/test_io_m17n.rb b/test/mri/ruby/test_io_m17n.rb
index 9ff5307fc3a..416a24ba6b3 100644
--- a/test/mri/ruby/test_io_m17n.rb
+++ b/test/mri/ruby/test_io_m17n.rb
@@ -2121,12 +2121,14 @@ def test_strip_bom
   end
 
   def test_bom_too_long_utfname
-    assert_separately([], <<-'end;') # do
+    assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
       assert_warn(/Unsupported encoding/) {
         open(IO::NULL, "r:bom|utf-" + "x" * 10000) {}
       }
     end;
-    assert_separately([], <<-'end;') # do
+    assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
       assert_warn(/Unsupported encoding/) {
         open(IO::NULL, encoding: "bom|utf-" + "x" * 10000) {}
       }
diff --git a/test/mri/ruby/test_iseq.rb b/test/mri/ruby/test_iseq.rb
index ed88c9b43d0..9de241c485a 100644
--- a/test/mri/ruby/test_iseq.rb
+++ b/test/mri/ruby/test_iseq.rb
@@ -1,6 +1,8 @@
 require 'test/unit'
 require 'tempfile'
 
+return
+
 class TestISeq < Test::Unit::TestCase
   ISeq = RubyVM::InstructionSequence
 
@@ -91,6 +93,11 @@ def test_disasm_encoding
     asm = compile(src).disasm
     assert_equal(src.encoding, asm.encoding)
     assert_predicate(asm, :valid_encoding?)
+
+    obj = Object.new
+    name = "\u{2603 26a1}"
+    obj.instance_eval("def #{name}; tap {}; end")
+    assert_include(RubyVM::InstructionSequence.of(obj.method(name)).disasm, name)
   end
 
   LINE_BEFORE_METHOD = __LINE__
@@ -251,7 +258,7 @@ def test_compile_file_error
       f.puts "end"
       f.close
       path = f.path
-      assert_in_out_err(%W[- #{path}], "#{<<-"begin;"}\n#{<<-"end;"}", /keyword_end/, [], success: true)
+      assert_in_out_err(%W[- #{path}], "#{<<-"begin;"}\n#{<<-"end;"}", /unexpected end/, [], success: true)
       begin;
         path = ARGV[0]
         begin
@@ -281,8 +288,12 @@ def test_inspect
     end
   end
 
+  def strip_lineno(source)
+    source.gsub(/^.*?: /, "")
+  end
+
   def sample_iseq
-    ISeq.compile <<-EOS.gsub(/^.*?: /, "")
+    ISeq.compile(strip_lineno(<<-EOS))
      1: class C
      2:   def foo
      3:     begin
@@ -391,44 +402,138 @@ class C   # line 7 empty class
     }
   end
 
-  def test_to_binary_with_objects
-    # conceptually backport from r62856.
-    # ISeq binary dump doesn't consider alignment in 2.5 and older
-    skip "does not work on other than x86" unless /x(?:86|64)|i\d86/ =~ RUBY_PLATFORM
-    code = "[]"+100.times.map{|i|"<</#{i}/"}.join
+  def hexdump(bin)
+    bin.unpack1("H*").gsub(/.{1,32}/) {|s|
+      "#{'%04x:' % $~.begin(0)}#{s.gsub(/../, " \\&").tap{|_|_[24]&&="-"}}\n"
+    }
+  end
+
+  def assert_iseq_to_binary(code, mesg = nil)
     iseq = RubyVM::InstructionSequence.compile(code)
-    bin = assert_nothing_raised do
+    bin = assert_nothing_raised(mesg) do
       iseq.to_binary
     rescue RuntimeError => e
       skip e.message if /compile with coverage/ =~ e.message
       raise
     end
+    10.times do
+      bin2 = iseq.to_binary
+      assert_equal(bin, bin2, message(mesg) {diff hexdump(bin), hexdump(bin2)})
+    end
     iseq2 = RubyVM::InstructionSequence.load_from_binary(bin)
-    assert_equal(iseq2.to_a, iseq.to_a)
+    a1 = iseq.to_a
+    a2 = iseq2.to_a
+    assert_equal(a1, a2, message(mesg) {diff iseq.disassemble, iseq2.disassemble})
+    iseq2
   end
 
-  def test_to_binary_tracepoint
-    # conceptually backport from r62856.
-    # ISeq binary dump doesn't consider alignment in 2.5 and older
-    skip "does not work on other than x86" unless /x(?:86|64)|i\d86/ =~ RUBY_PLATFORM
-    filename = "#{File.basename(__FILE__)}_#{__LINE__}"
-    iseq = RubyVM::InstructionSequence.compile("x = 1\n y = 2", filename)
-    # conceptually partial backport from r63103, r65567.
-    # All ISeq#to_binary should rescue to skip when running with coverage.
-    # current trunk (2.6-) has assert_iseq_to_binary.
-    begin
-      iseq_bin = iseq.to_binary
-    rescue RuntimeError => e
-      skip e.message if /compile with coverage/ =~ e.message
-      raise
-    end
-    ary = []
-    TracePoint.new(:line){|tp|
+  def test_to_binary_with_objects
+    assert_iseq_to_binary("[]"+100.times.map{|i|"<</#{i}/"}.join)
+    assert_iseq_to_binary("@x ||= (1..2)")
+  end
+
+  def test_to_binary_line_info
+    assert_iseq_to_binary("#{<<~"begin;"}\n#{<<~'end;'}", '[Bug #14660]').eval
+    begin;
+      class P
+        def p; end
+        def q; end
+        E = ""
+        N = "#{E}"
+        attr_reader :i
+      end
+    end;
+  end
+
+  def collect_from_binary_tracepoint_lines(tracepoint_type, filename)
+    iseq = RubyVM::InstructionSequence.compile(strip_lineno(<<-RUBY), filename)
+      class A
+        class B
+          2.times {
+            def self.foo
+              a = 'good day'
+              raise
+            rescue
+              'dear reader'
+            end
+          }
+        end
+        B.foo
+      end
+    RUBY
+
+    iseq_bin = iseq.to_binary
+    lines = []
+    TracePoint.new(tracepoint_type){|tp|
       next unless tp.path == filename
-      ary << [tp.path, tp.lineno]
+      lines << tp.lineno
     }.enable{
       ISeq.load_from_binary(iseq_bin).eval
     }
-    assert_equal [[filename, 1], [filename, 2]], ary, '[Bug #14702]'
+
+    lines
+  end
+
+  def test_to_binary_line_tracepoint
+    filename = "#{File.basename(__FILE__)}_#{__LINE__}"
+    lines = collect_from_binary_tracepoint_lines(:line, filename)
+
+    assert_equal [1, 2, 3, 4, 4, 12, 5, 6, 8], lines, '[Bug #14702]'
+  end
+
+  def test_to_binary_class_tracepoint
+    filename = "#{File.basename(__FILE__)}_#{__LINE__}"
+    lines = collect_from_binary_tracepoint_lines(:class, filename)
+
+    assert_equal [1, 2], lines, '[Bug #14702]'
+  end
+
+  def test_to_binary_end_tracepoint
+    filename = "#{File.basename(__FILE__)}_#{__LINE__}"
+    lines = collect_from_binary_tracepoint_lines(:end, filename)
+
+    assert_equal [11, 13], lines, '[Bug #14702]'
+  end
+
+  def test_to_binary_return_tracepoint
+    filename = "#{File.basename(__FILE__)}_#{__LINE__}"
+    lines = collect_from_binary_tracepoint_lines(:return, filename)
+
+    assert_equal [9], lines, '[Bug #14702]'
+  end
+
+  def test_to_binary_b_call_tracepoint
+    filename = "#{File.basename(__FILE__)}_#{__LINE__}"
+    lines = collect_from_binary_tracepoint_lines(:b_call, filename)
+
+    assert_equal [3, 3], lines, '[Bug #14702]'
+  end
+
+  def test_to_binary_b_return_tracepoint
+    filename = "#{File.basename(__FILE__)}_#{__LINE__}"
+    lines = collect_from_binary_tracepoint_lines(:b_return, filename)
+
+    assert_equal [10, 10], lines, '[Bug #14702]'
+  end
+
+  def test_iseq_of
+    [proc{},
+     method(:test_iseq_of),
+     RubyVM::InstructionSequence.compile("p 1", __FILE__)].each{|src|
+      iseq = RubyVM::InstructionSequence.of(src)
+      assert_equal __FILE__, iseq.path
+    }
+  end
+
+  def test_iseq_of_twice_for_same_code
+    [proc{},
+     method(:test_iseq_of_twice_for_same_code),
+     RubyVM::InstructionSequence.compile("p 1")].each{|src|
+      iseq1 = RubyVM::InstructionSequence.of(src)
+      iseq2 = RubyVM::InstructionSequence.of(src)
+
+      # ISeq objects should be same for same src
+      assert_equal iseq1.object_id, iseq2.object_id
+    }
   end
 end
diff --git a/test/mri/ruby/test_iterator.rb b/test/mri/ruby/test_iterator.rb
index 9bfa9476071..ebfb60354ad 100644
--- a/test/mri/ruby/test_iterator.rb
+++ b/test/mri/ruby/test_iterator.rb
@@ -107,6 +107,16 @@ def test_break
     assert_equal([1, 2, 3, 4, 5, 6, 7], x)
   end
 
+  def test_array_for_masgn
+    a = [Struct.new(:to_ary).new([1,2])]
+    x = []
+    a.each {|i,j|x << [i,j]}
+    assert_equal([[1,2]], x)
+    x = []
+    for i,j in a; x << [i,j]; end
+    assert_equal([[1,2]], x)
+  end
+
   def test_append_method_to_built_in_class
     x = [[1,2],[3,4],[5,6]]
     assert_equal(x.iter_test1{|e|e}, x.iter_test2{|e|e})
diff --git a/test/mri/ruby/test_jit.rb b/test/mri/ruby/test_jit.rb
new file mode 100644
index 00000000000..7fe58ea336a
--- /dev/null
+++ b/test/mri/ruby/test_jit.rb
@@ -0,0 +1,966 @@
+# frozen_string_literal: true
+require 'test/unit'
+require 'tmpdir'
+require_relative '../lib/jit_support'
+
+return if RbConfig::CONFIG["MJIT_SUPPORT"] == 'no'
+
+# Test for --jit option
+class TestJIT < Test::Unit::TestCase
+  include JITSupport
+
+  IGNORABLE_PATTERNS = [
+    /\ASuccessful MJIT finish\n\z/,
+  ]
+
+  # trace_* insns are not compiled for now...
+  TEST_PENDING_INSNS = RubyVM::INSTRUCTION_NAMES.select { |n| n.start_with?('trace_') }.map(&:to_sym) + [
+    # not supported yet
+    :getblockparamproxy,
+    :defineclass,
+    :opt_call_c_function,
+
+    # joke
+    :bitblt,
+    :answer,
+
+    # TODO: write tests for them
+    :reput,
+    :tracecoverage,
+  ]
+
+  def self.untested_insns
+    @untested_insns ||= (RubyVM::INSTRUCTION_NAMES.map(&:to_sym) - TEST_PENDING_INSNS)
+  end
+
+  def setup
+    unless JITSupport.supported?
+      skip 'JIT seems not supported on this platform'
+    end
+
+    # ruby -w -Itest/lib test/ruby/test_jit.rb
+    if $VERBOSE && !defined?(@@at_exit_hooked)
+      at_exit do
+        unless TestJIT.untested_insns.empty?
+          warn "untested insns are found!: #{TestJIT.untested_insns.join(' ')}"
+        end
+      end
+      @@at_exit_hooked = true
+    end
+  end
+
+  def test_compile_insn_nop
+    assert_compile_once('nil rescue true', result_inspect: 'nil', insns: %i[nop])
+  end
+
+  def test_compile_insn_local
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '1', insns: %i[setlocal_WC_0 getlocal_WC_0])
+    begin;
+      foo = 1
+      foo
+    end;
+
+    insns = %i[setlocal getlocal setlocal_WC_0 getlocal_WC_0 setlocal_WC_1 getlocal_WC_1]
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", success_count: 3, stdout: '168', insns: insns)
+    begin;
+      def foo
+        a = 0
+        [1, 2].each do |i|
+          a += i
+          [3, 4].each do |j|
+            a *= j
+          end
+        end
+        a
+      end
+
+      print foo
+    end;
+  end
+
+  def test_compile_insn_blockparam
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '3', success_count: 2, insns: %i[getblockparam setblockparam])
+    begin;
+      def foo(&b)
+        a = b
+        b = 2
+        a.call + 2
+      end
+
+      print foo { 1 }
+    end;
+  end
+
+  def test_compile_insn_getblockparamproxy
+    skip "support this in mjit_compile"
+  end
+
+  def test_compile_insn_getspecial
+    assert_compile_once('$1', result_inspect: 'nil', insns: %i[getspecial])
+  end
+
+  def test_compile_insn_setspecial
+    verbose_bak, $VERBOSE = $VERBOSE, nil
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: 'true', insns: %i[setspecial])
+    begin;
+      true if nil.nil?..nil.nil?
+    end;
+  ensure
+    $VERBOSE = verbose_bak
+  end
+
+  def test_compile_insn_instancevariable
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '1', insns: %i[getinstancevariable setinstancevariable])
+    begin;
+      @foo = 1
+      @foo
+    end;
+
+    # optimized getinstancevariable call
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '33', success_count: 1, min_calls: 2)
+    begin;
+      class A
+        def initialize
+          @a = 1
+          @b = 2
+        end
+
+        def three
+          @a + @b
+        end
+      end
+
+      a = A.new
+      print(a.three) # set ic
+      print(a.three) # inlined ic
+    end;
+  end
+
+  def test_compile_insn_classvariable
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '1', success_count: 1, insns: %i[getclassvariable setclassvariable])
+    begin;
+      class Foo
+        def self.foo
+          @@foo = 1
+          @@foo
+        end
+      end
+
+      print Foo.foo
+    end;
+  end
+
+  def test_compile_insn_constant
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '1', insns: %i[getconstant setconstant])
+    begin;
+      FOO = 1
+      FOO
+    end;
+  end
+
+  def test_compile_insn_global
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '1', insns: %i[getglobal setglobal])
+    begin;
+      $foo = 1
+      $foo
+    end;
+  end
+
+  def test_compile_insn_putnil
+    assert_compile_once('nil', result_inspect: 'nil', insns: %i[putnil])
+  end
+
+  def test_compile_insn_putself
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: 'hello', success_count: 1, insns: %i[putself])
+    begin;
+      proc { print "hello" }.call
+    end;
+  end
+
+  def test_compile_insn_putobject
+    assert_compile_once('0', result_inspect: '0', insns: %i[putobject_INT2FIX_0_])
+    assert_compile_once('1', result_inspect: '1', insns: %i[putobject_INT2FIX_1_])
+    assert_compile_once('2', result_inspect: '2', insns: %i[putobject])
+  end
+
+  def test_compile_insn_putspecialobject_putiseq
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: 'hellohello', success_count: 2, insns: %i[putspecialobject putiseq])
+    begin;
+      print 2.times.map {
+        def method_definition
+          'hello'
+        end
+        method_definition
+      }.join
+    end;
+  end
+
+  def test_compile_insn_putstring_concatstrings_tostring
+    assert_compile_once('"a#{}b" + "c"', result_inspect: '"abc"', insns: %i[putstring concatstrings tostring])
+  end
+
+  def test_compile_insn_freezestring
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~'end;'}", stdout: 'true', success_count: 1, insns: %i[freezestring])
+    begin;
+      # frozen_string_literal: true
+      print proc { "#{true}".frozen? }.call
+    end;
+  end
+
+  def test_compile_insn_toregexp
+    assert_compile_once('/#{true}/ =~ "true"', result_inspect: '0', insns: %i[toregexp])
+  end
+
+  def test_compile_insn_newarray
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '[1, 2, 3]', insns: %i[newarray])
+    begin;
+      a, b, c = 1, 2, 3
+      [a, b, c]
+    end;
+  end
+
+  def test_compile_insn_intern_duparray
+    assert_compile_once('[:"#{0}"] + [1,2,3]', result_inspect: '[:"0", 1, 2, 3]', insns: %i[intern duparray])
+  end
+
+  def test_compile_insn_expandarray
+    assert_compile_once('y = [ true, false, nil ]; x, = y; x', result_inspect: 'true', insns: %i[expandarray])
+  end
+
+  def test_compile_insn_concatarray
+    assert_compile_once('["t", "r", *x = "u", "e"].join', result_inspect: '"true"', insns: %i[concatarray])
+  end
+
+  def test_compile_insn_splatarray
+    assert_compile_once('[*(1..2)]', result_inspect: '[1, 2]', insns: %i[splatarray])
+  end
+
+  def test_compile_insn_newhash
+    assert_compile_once('a = 1; { a: a }', result_inspect: '{:a=>1}', insns: %i[newhash])
+  end
+
+  def test_compile_insn_duphash
+    assert_compile_once('{ a: 1 }', result_inspect: '{:a=>1}', insns: %i[duphash])
+  end
+
+  def test_compile_insn_newrange
+    assert_compile_once('a = 1; 0..a', result_inspect: '0..1', insns: %i[newrange])
+  end
+
+  def test_compile_insn_pop
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '1', insns: %i[pop])
+    begin;
+      a = false
+      b = 1
+      a || b
+    end;
+  end
+
+  def test_compile_insn_dup
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '3', insns: %i[dup])
+    begin;
+      a = 1
+      a&.+(2)
+    end;
+  end
+
+  def test_compile_insn_dupn
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: 'true', insns: %i[dupn])
+    begin;
+      klass = Class.new
+      klass::X ||= true
+    end;
+  end
+
+  def test_compile_insn_swap_topn
+    assert_compile_once('{}["true"] = true', result_inspect: 'true', insns: %i[swap topn])
+  end
+
+  def test_compile_insn_reverse
+    assert_compile_once('q, (w, e), r = 1, [2, 3], 4; [q, w, e, r]', result_inspect: '[1, 2, 3, 4]', insns: %i[reverse])
+  end
+
+  def test_compile_insn_reput
+    skip "write test"
+  end
+
+  def test_compile_insn_setn
+    assert_compile_once('[nil][0] = 1', result_inspect: '1', insns: %i[setn])
+  end
+
+  def test_compile_insn_adjuststack
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: 'true', insns: %i[adjuststack])
+    begin;
+      x = [true]
+      x[0] ||= nil
+      x[0]
+    end;
+  end
+
+  def test_compile_insn_defined
+    assert_compile_once('defined?(a)', result_inspect: 'nil', insns: %i[defined])
+  end
+
+  def test_compile_insn_checkkeyword
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: 'true', success_count: 1, insns: %i[checkkeyword])
+    begin;
+      def test(x: rand)
+        x
+      end
+      print test(x: true)
+    end;
+  end
+
+  def test_compile_insn_tracecoverage
+    skip "write test"
+  end
+
+  def test_compile_insn_defineclass
+    skip "support this in mjit_compile (low priority)"
+  end
+
+  def test_compile_insn_send
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '1', success_count: 2, insns: %i[send])
+    begin;
+      print proc { yield_self { 1 } }.call
+    end;
+  end
+
+  def test_compile_insn_opt_str_freeze
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '"foo"', insns: %i[opt_str_freeze])
+    begin;
+      'foo'.freeze
+    end;
+  end
+
+  def test_compile_insn_opt_str_uminus
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '"bar"', insns: %i[opt_str_uminus])
+    begin;
+      -'bar'
+    end;
+  end
+
+  def test_compile_insn_opt_newarray_max
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '2', insns: %i[opt_newarray_max])
+    begin;
+      a = 1
+      b = 2
+      [a, b].max
+    end;
+  end
+
+  def test_compile_insn_opt_newarray_min
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '1', insns: %i[opt_newarray_min])
+    begin;
+      a = 1
+      b = 2
+      [a, b].min
+    end;
+  end
+
+  def test_compile_insn_opt_send_without_block
+    assert_compile_once('print', result_inspect: 'nil', insns: %i[opt_send_without_block])
+  end
+
+  def test_compile_insn_invokesuper
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '3', success_count: 4, insns: %i[invokesuper])
+    begin;
+      mod = Module.new {
+        def test
+          super + 2
+        end
+      }
+      klass = Class.new {
+        prepend mod
+        def test
+          1
+        end
+      }
+      print klass.new.test
+    end;
+  end
+
+  def test_compile_insn_invokeblock_leave
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '2', success_count: 2, insns: %i[invokeblock leave])
+    begin;
+      def foo
+        yield
+      end
+      print foo { 2 }
+    end;
+  end
+
+  def test_compile_insn_throw
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '4', success_count: 2, insns: %i[throw])
+    begin;
+      def test
+        proc do
+          if 1+1 == 1
+            return 3
+          else
+            return 4
+          end
+          5
+        end.call
+      end
+      print test
+    end;
+  end
+
+  def test_compile_insn_jump_branchif
+    assert_compile_once("#{<<~"begin;"}\n#{<<~'end;'}", result_inspect: 'nil', insns: %i[jump branchif])
+    begin;
+      a = false
+      1 + 1 while a
+    end;
+  end
+
+  def test_compile_insn_branchunless
+    assert_compile_once("#{<<~"begin;"}\n#{<<~'end;'}", result_inspect: '1', insns: %i[branchunless])
+    begin;
+      a = true
+      if a
+        1
+      else
+        2
+      end
+    end;
+  end
+
+  def test_compile_insn_branchnil
+    assert_compile_once("#{<<~"begin;"}\n#{<<~'end;'}", result_inspect: '3', insns: %i[branchnil])
+    begin;
+      a = 2
+      a&.+(1)
+    end;
+  end
+
+  def test_compile_insn_checktype
+    assert_compile_once("#{<<~"begin;"}\n#{<<~'end;'}", result_inspect: '"42"', insns: %i[checktype])
+    begin;
+      a = '2'
+      "4#{a}"
+    end;
+  end
+
+  def test_compile_insn_inlinecache
+    assert_compile_once('Struct', result_inspect: 'Struct', insns: %i[opt_getinlinecache opt_setinlinecache])
+  end
+
+  def test_compile_insn_once
+    assert_compile_once('/#{true}/o =~ "true" && $~.to_a', result_inspect: '["true"]', insns: %i[once])
+  end
+
+  def test_compile_insn_checkmatch_opt_case_dispatch
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '"world"', insns: %i[checkmatch opt_case_dispatch])
+    begin;
+      case 'hello'
+      when 'hello'
+        'world'
+      end
+    end;
+  end
+
+  def test_compile_insn_opt_calc
+    assert_compile_once('4 + 2 - ((2 * 3 / 2) % 2)', result_inspect: '5', insns: %i[opt_plus opt_minus opt_mult opt_div opt_mod])
+    assert_compile_once('4.0 + 2.0 - ((2.0 * 3.0 / 2.0) % 2.0)', result_inspect: '5.0', insns: %i[opt_plus opt_minus opt_mult opt_div opt_mod])
+    assert_compile_once('4 + 2', result_inspect: '6')
+  end
+
+  def test_compile_insn_opt_cmp
+    assert_compile_once('(1 == 1) && (1 != 2)', result_inspect: 'true', insns: %i[opt_eq opt_neq])
+  end
+
+  def test_compile_insn_opt_rel
+    assert_compile_once('1 < 2 && 1 <= 1 && 2 > 1 && 1 >= 1', result_inspect: 'true', insns: %i[opt_lt opt_le opt_gt opt_ge])
+  end
+
+  def test_compile_insn_opt_ltlt
+    assert_compile_once('[1] << 2', result_inspect: '[1, 2]', insns: %i[opt_ltlt])
+  end
+
+  def test_compile_insn_opt_and
+    assert_compile_once('1 & 3', result_inspect: '1', insns: %i[opt_and])
+  end
+
+  def test_compile_insn_opt_or
+    assert_compile_once('1 | 3', result_inspect: '3', insns: %i[opt_or])
+  end
+
+  def test_compile_insn_opt_aref
+    # optimized call (optimized JIT) -> send call
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '21', success_count: 2, min_calls: 1, insns: %i[opt_aref])
+    begin;
+      obj = Object.new
+      def obj.[](h)
+        h
+      end
+
+      block = proc { |h| h[1] }
+      print block.call({ 1 => 2 })
+      print block.call(obj)
+    end;
+
+    # send call -> optimized call (send JIT) -> optimized call
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '122', success_count: 1, min_calls: 2)
+    begin;
+      obj = Object.new
+      def obj.[](h)
+        h
+      end
+
+      block = proc { |h| h[1] }
+      print block.call(obj)
+      print block.call({ 1 => 2 })
+      print block.call({ 1 => 2 })
+    end;
+  end
+
+  def test_compile_insn_opt_aref_with
+    assert_compile_once("{ '1' => 2 }['1']", result_inspect: '2', insns: %i[opt_aref_with])
+  end
+
+  def test_compile_insn_opt_aset
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '5', insns: %i[opt_aset opt_aset_with])
+    begin;
+      hash = { '1' => 2 }
+      (hash['2'] = 2) + (hash[1.to_s] = 3)
+    end;
+  end
+
+  def test_compile_insn_opt_length_size
+    assert_compile_once("#{<<~"begin;"}\n#{<<~"end;"}", result_inspect: '4', insns: %i[opt_length opt_size])
+    begin;
+      array = [1, 2]
+      array.length + array.size
+    end;
+  end
+
+  def test_compile_insn_opt_empty_p
+    assert_compile_once('[].empty?', result_inspect: 'true', insns: %i[opt_empty_p])
+  end
+
+  def test_compile_insn_opt_succ
+    assert_compile_once('1.succ', result_inspect: '2', insns: %i[opt_succ])
+  end
+
+  def test_compile_insn_opt_not
+    assert_compile_once('!!true', result_inspect: 'true', insns: %i[opt_not])
+  end
+
+  def test_compile_insn_opt_regexpmatch1
+    assert_compile_once("/true/ =~ 'true'", result_inspect: '0', insns: %i[opt_regexpmatch1])
+  end
+
+  def test_compile_insn_opt_regexpmatch2
+    assert_compile_once("'true' =~ /true/", result_inspect: '0', insns: %i[opt_regexpmatch2])
+  end
+
+  def test_compile_insn_opt_call_c_function
+    skip "support this in opt_call_c_function (low priority)"
+  end
+
+  def test_jit_output
+    out, err = eval_with_jit('5.times { puts "MJIT" }', verbose: 1, min_calls: 5)
+    assert_equal("MJIT\n" * 5, out)
+    assert_match(/^#{JIT_SUCCESS_PREFIX}: block in <main>@-e:1 -> .+_ruby_mjit_p\d+u\d+\.c$/, err)
+    assert_match(/^Successful MJIT finish$/, err)
+  end
+
+  def test_unload_units_and_compaction
+    Dir.mktmpdir("jit_test_unload_units_") do |dir|
+      # MIN_CACHE_SIZE is 10
+      out, err = eval_with_jit({"TMPDIR"=>dir}, "#{<<~"begin;"}\n#{<<~'end;'}", verbose: 1, min_calls: 1, max_cache: 10)
+      begin;
+        i = 0
+        while i < 11
+          eval(<<-EOS)
+            def mjit#{i}
+              print #{i}
+            end
+            mjit#{i}
+          EOS
+          i += 1
+        end
+
+        if defined?(fork)
+          # test the child does not try to delete files which are deleted by parent,
+          # and test possible deadlock on fork during MJIT unload and JIT compaction on child
+          Process.waitpid(Process.fork {})
+        end
+      end;
+
+      debug_info = "stdout:\n```\n#{out}\n```\n\nstderr:\n```\n#{err}```\n"
+      assert_equal('012345678910', out, debug_info)
+      compactions, errs = err.lines.partition do |l|
+        l.match?(/\AJIT compaction \(\d+\.\dms\): Compacted \d+ methods ->/)
+      end
+      10.times do |i|
+        assert_match(/\A#{JIT_SUCCESS_PREFIX}: mjit#{i}@\(eval\):/, errs[i], debug_info)
+      end
+      assert_equal("Too many JIT code -- 1 units unloaded\n", errs[10], debug_info)
+      assert_match(/\A#{JIT_SUCCESS_PREFIX}: mjit10@\(eval\):/, errs[11], debug_info)
+
+      # On --jit-wait, when the number of JIT-ed code reaches --jit-max-cache,
+      # it should trigger compaction.
+      unless RUBY_PLATFORM.match?(/mswin|mingw/) # compaction is not supported on Windows yet
+        assert_equal(3, compactions.size, debug_info)
+      end
+
+      if appveyor_mswin?
+        # "Permission Denied" error is preventing to remove so file on AppVeyor.
+        warn 'skipped to test directory emptiness in TestJIT#test_unload_units on AppVeyor mswin'
+      else
+        # verify .o files are deleted on unload_units
+        assert_send([Dir, :empty?, dir], debug_info)
+      end
+    end
+  end
+
+  def test_local_stack_on_exception
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '3', success_count: 2)
+    begin;
+      def b
+        raise
+      rescue
+        2
+      end
+
+      def a
+        # Calling #b should be vm_exec, not direct mjit_exec.
+        # Otherwise `1` on local variable would be purged.
+        1 + b
+      end
+
+      print a
+    end;
+  end
+
+  def test_local_stack_with_sp_motion_by_blockargs
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '1', success_count: 2)
+    begin;
+      def b(base)
+        1
+      end
+
+      # This method is simple enough to have false in catch_except_p.
+      # So local_stack_p would be true in JIT compiler.
+      def a
+        m = method(:b)
+
+        # ci->flag has VM_CALL_ARGS_BLOCKARG and cfp->sp is moved in vm_caller_setup_arg_block.
+        # So, for this send insn, JIT-ed code should use cfp->sp instead of local variables for stack.
+        Module.module_eval(&m)
+      end
+
+      print a
+    end;
+  end
+
+  def test_catching_deep_exception
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '1', success_count: 4)
+    begin;
+      def catch_true(paths, prefixes) # catch_except_p: TRUE
+        prefixes.each do |prefix| # catch_except_p: TRUE
+          paths.each do |path| # catch_except_p: FALSE
+            return path
+          end
+        end
+      end
+
+      def wrapper(paths, prefixes)
+        catch_true(paths, prefixes)
+      end
+
+      print wrapper(['1'], ['2'])
+    end;
+  end
+
+  def test_inlined_undefined_ivar
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: "bbb", success_count: 2, min_calls: 3)
+    begin;
+      class Foo
+        def initialize
+          @a = :a
+        end
+
+        def bar
+          if @b.nil?
+            @b = :b
+          end
+        end
+      end
+
+      print(Foo.new.bar)
+      print(Foo.new.bar)
+      print(Foo.new.bar)
+    end;
+  end
+
+  def test_attr_reader
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: "4nil\nnil\n6", success_count: 2, min_calls: 2)
+    begin;
+      class A
+        attr_reader :a, :b
+
+        def initialize
+          @a = 2
+        end
+
+        def test
+          a
+        end
+
+        def undefined
+          b
+        end
+      end
+
+      a = A.new
+      print(a.test * a.test)
+      p(a.undefined)
+      p(a.undefined)
+
+      # redefinition
+      class A
+        def test
+          3
+        end
+      end
+
+      print(2 * a.test)
+    end;
+
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: "true", success_count: 1, min_calls: 2)
+    begin;
+      class Hoge
+        attr_reader :foo
+
+        def initialize
+          @foo = []
+          @bar = nil
+        end
+      end
+
+      class Fuga < Hoge
+        def initialize
+          @bar = nil
+          @foo = []
+        end
+      end
+
+      def test(recv)
+        recv.foo.empty?
+      end
+
+      hoge = Hoge.new
+      fuga = Fuga.new
+
+      test(hoge) # VM: cc set index=1
+      test(hoge) # JIT: compile with index=1
+      test(fuga) # JIT -> VM: cc set index=2
+      print test(hoge) # JIT: should use index=1, not index=2 in cc
+    end;
+  end
+
+  def test_clean_so
+    if appveyor_mswin?
+      skip 'Removing so file is failing on AppVeyor mswin due to Permission Denied.'
+    end
+    Dir.mktmpdir("jit_test_clean_so_") do |dir|
+      code = "x = 0; 10.times {|i|x+=i}"
+      eval_with_jit({"TMPDIR"=>dir}, code)
+      assert_send([Dir, :empty?, dir])
+      eval_with_jit({"TMPDIR"=>dir}, code, save_temps: true)
+      assert_not_send([Dir, :empty?, dir])
+    end
+  end
+
+  def test_clean_objects_on_exec
+    if /mswin|mingw/ =~ RUBY_PLATFORM
+      # TODO: check call stack and close handle of code which is not on stack, and remove objects on best-effort basis
+      skip 'Removing so file being used does not work on Windows'
+    end
+    Dir.mktmpdir("jit_test_clean_objects_on_exec_") do |dir|
+      eval_with_jit({"TMPDIR"=>dir}, "#{<<~"begin;"}\n#{<<~"end;"}", min_calls: 1)
+      begin;
+        def a; end; a
+        exec "true"
+      end;
+      error_message = "Undeleted files:\n  #{Dir.glob("#{dir}/*").join("\n  ")}\n"
+      assert_send([Dir, :empty?, dir], error_message)
+    end
+  end
+
+  def test_lambda_longjmp
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: '5', success_count: 1)
+    begin;
+      fib = lambda do |x|
+        return x if x == 0 || x == 1
+        fib.call(x-1) + fib.call(x-2)
+      end
+      print fib.call(5)
+    end;
+  end
+
+  def test_stack_pointer_with_assignment
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: "nil\nnil\n", success_count: 1)
+    begin;
+      2.times do
+        a, _ = nil
+        p a
+      end
+    end;
+  end
+
+  def test_program_counter_with_regexpmatch
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: "aa", success_count: 1)
+    begin;
+      2.times do
+        break if /a/ =~ "ab" && !$~[0]
+        print $~[0]
+      end
+    end;
+  end
+
+  def test_pushed_values_with_opt_aset_with
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: "{}{}", success_count: 1)
+    begin;
+      2.times do
+        print(Thread.current["a"] = {})
+      end
+    end;
+  end
+
+  def test_pushed_values_with_opt_aref_with
+    assert_eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", stdout: "nil\nnil\n", success_count: 1)
+    begin;
+      2.times do
+        p(Thread.current["a"])
+      end
+    end;
+  end
+
+  def test_caller_locations_without_catch_table
+    out, _ = eval_with_jit("#{<<~"begin;"}\n#{<<~"end;"}", min_calls: 1)
+    begin;
+      def b                             # 2
+        caller_locations.first          # 3
+      end                               # 4
+                                        # 5
+      def a                             # 6
+        print # <-- don't leave PC here # 7
+        b                               # 8
+      end
+      puts a
+      puts a
+    end;
+    lines = out.lines
+    assert_equal("-e:8:in `a'\n", lines[0])
+    assert_equal("-e:8:in `a'\n", lines[1])
+  end
+
+  def test_fork_with_mjit_worker_thread
+    Dir.mktmpdir("jit_test_fork_with_mjit_worker_thread_") do |dir|
+      # min_calls: 2 to skip fork block
+      out, err = eval_with_jit({ "TMPDIR" => dir }, "#{<<~"begin;"}\n#{<<~"end;"}", min_calls: 2, verbose: 1)
+      begin;
+        def before_fork; end
+        def after_fork; end
+
+        before_fork; before_fork # the child should not delete this .o file
+        pid = Process.fork do # this child should not delete shared .pch file
+          after_fork; after_fork # this child does not share JIT-ed after_fork with parent
+        end
+        after_fork; after_fork # this parent does not share JIT-ed after_fork with child
+
+        Process.waitpid(pid)
+      end;
+      success_count = err.scan(/^#{JIT_SUCCESS_PREFIX}:/).size
+      debug_info = "stdout:\n```\n#{out}\n```\n\nstderr:\n```\n#{err}```\n"
+      assert_equal(3, success_count, debug_info)
+
+      # assert no remove error
+      assert_equal("Successful MJIT finish\n" * 2, err.gsub(/^#{JIT_SUCCESS_PREFIX}:[^\n]+\n/, ''), debug_info)
+
+      # ensure objects are deleted
+      assert_send([Dir, :empty?, dir], debug_info)
+    end
+  end if defined?(fork)
+
+  private
+
+  def appveyor_mswin?
+    ENV['APPVEYOR'] == 'True' && RUBY_PLATFORM.match?(/mswin/)
+  end
+
+  # The shortest way to test one proc
+  def assert_compile_once(script, result_inspect:, insns: [])
+    if script.match?(/\A\n.+\n\z/m)
+      script = script.gsub(/^/, '  ')
+    else
+      script = " #{script} "
+    end
+    assert_eval_with_jit("p proc {#{script}}.call", stdout: "#{result_inspect}\n", success_count: 1, insns: insns, uplevel: 2)
+  end
+
+  # Shorthand for normal test cases
+  def assert_eval_with_jit(script, stdout: nil, success_count:, min_calls: 1, insns: [], uplevel: 3)
+    out, err = eval_with_jit(script, verbose: 1, min_calls: min_calls)
+    actual = err.scan(/^#{JIT_SUCCESS_PREFIX}:/).size
+
+    # Make sure that the script has insns expected to be tested
+    used_insns = method_insns(script)
+    insns.each do |insn|
+      unless used_insns.include?(insn)
+        $stderr.puts
+        warn "'#{insn}' insn is not included in the script. Actual insns are: #{used_insns.join(' ')}\n", uplevel: uplevel
+      end
+      TestJIT.untested_insns.delete(insn)
+    end
+
+    assert_equal(
+      success_count, actual,
+      "Expected #{success_count} times of JIT success, but succeeded #{actual} times.\n\n"\
+      "script:\n#{code_block(script)}\nstderr:\n#{code_block(err)}",
+    )
+    if stdout
+      assert_equal(stdout, out, "Expected stdout #{out.inspect} to match #{stdout.inspect} with script:\n#{code_block(script)}")
+    end
+    err_lines = err.lines.reject! do |l|
+      l.chomp.empty? || l.match?(/\A#{JIT_SUCCESS_PREFIX}/) || IGNORABLE_PATTERNS.any? { |pat| pat.match?(l) }
+    end
+    unless err_lines.empty?
+      warn err_lines.join(''), uplevel: uplevel
+    end
+  end
+
+  # Collect block's insns or defined method's insns, which are expected to be JIT-ed.
+  # Note that this intentionally excludes insns in script's toplevel because they are not JIT-ed.
+  def method_insns(script)
+    insns = []
+    RubyVM::InstructionSequence.compile(script).to_a.last.each do |(insn, *args)|
+      case insn
+      when :putiseq, :send
+        insns += collect_insns(args.last)
+      when :defineclass
+        insns += collect_insns(args[1])
+      end
+    end
+    insns.uniq
+  end
+
+  # Recursively collect insns in iseq_array
+  def collect_insns(iseq_array)
+    return [] if iseq_array.nil?
+
+    insns = iseq_array.last.select { |x| x.is_a?(Array) }.map(&:first)
+    iseq_array.last.each do |(insn, *args)|
+      case insn
+      when :putiseq, :send
+        insns += collect_insns(args.last)
+      end
+    end
+    insns
+  end
+end
diff --git a/test/mri/ruby/test_key_error.rb b/test/mri/ruby/test_key_error.rb
new file mode 100644
index 00000000000..fe1d5bb5abf
--- /dev/null
+++ b/test/mri/ruby/test_key_error.rb
@@ -0,0 +1,42 @@
+require 'test/unit'
+
+class TestKeyError < Test::Unit::TestCase
+  def test_default
+    error = KeyError.new
+    assert_equal("KeyError", error.message)
+  end
+
+  def test_message
+    error = KeyError.new("Message")
+    assert_equal("Message", error.message)
+  end
+
+  def test_receiver
+    receiver = Object.new
+    error = KeyError.new(receiver: receiver)
+    assert_equal(receiver, error.receiver)
+    error = KeyError.new
+    assert_raise(ArgumentError) {error.receiver}
+  end
+
+  def test_key
+    error = KeyError.new(key: :key)
+    assert_equal(:key, error.key)
+    error = KeyError.new
+    assert_raise(ArgumentError) {error.key}
+  end
+
+  def test_receiver_and_key
+    receiver = Object.new
+    error = KeyError.new(receiver: receiver, key: :key)
+    assert_equal([receiver, :key],
+                 [error.receiver, error.key])
+  end
+
+  def test_all
+    receiver = Object.new
+    error = KeyError.new("Message", receiver: receiver, key: :key)
+    assert_equal(["Message", receiver, :key],
+                 [error.message, error.receiver, error.key])
+  end
+end
diff --git a/test/mri/ruby/test_keyword.rb b/test/mri/ruby/test_keyword.rb
index 8a45016c138..84a5cfec661 100644
--- a/test/mri/ruby/test_keyword.rb
+++ b/test/mri/ruby/test_keyword.rb
@@ -506,7 +506,10 @@ def o.to_hash() { k: 9 } end
   def test_splat_hash
     m = Object.new
     def m.f() :ok; end
+    def m.f1(a) a; end
     def m.f2(a = nil) a; end
+    def m.f3(**a) a; end
+    def m.f4(*a) a; end
     o = {a: 1}
     assert_raise_with_message(ArgumentError, /unknown keyword: a/) {
       m.f(**o)
@@ -517,9 +520,22 @@ def m.f2(a = nil) a; end
     assert_equal(:ok, m.f(*a, **o), '[ruby-core:83638] [Bug #10856]')
 
     o = {a: 42}
-    assert_equal({a: 42}, m.f2(**o), '[ruby-core:82280] [Bug #13791]')
+    assert_warning(/splat keyword/, 'splat to mandatory') do
+      assert_equal({a: 42}, m.f1(**o))
+    end
+    assert_warning(/splat keyword/) do
+      assert_equal({a: 42}, m.f2(**o), '[ruby-core:82280] [Bug #13791]')
+    end
+    assert_warning('', 'splat to kwrest') do
+      assert_equal({a: 42}, m.f3(**o))
+    end
+    assert_warning('', 'splat to rest') do
+      assert_equal([{a: 42}], m.f4(**o))
+    end
 
-    assert_equal({a: 42}, m.f2("a".to_sym => 42), '[ruby-core:82291] [Bug #13793]')
+    assert_warning('') do
+      assert_equal({a: 42}, m.f2("a".to_sym => 42), '[ruby-core:82291] [Bug #13793]')
+    end
 
     o = {}
     a = [:ok]
@@ -679,6 +695,59 @@ def obj.t(x:, y:, z: nil) end
     end
   end
 
+  def many_kwargs(a0: '', a1: '', a2: '', a3: '', a4: '', a5: '', a6: '', a7: '',
+                  b0: '', b1: '', b2: '', b3: '', b4: '', b5: '', b6: '', b7: '',
+                  c0: '', c1: '', c2: '', c3: '', c4: '', c5: '', c6: '', c7: '',
+                  d0: '', d1: '', d2: '', d3: '', d4: '', d5: '', d6: '', d7: '',
+                  e0: '')
+    [a0, a1, a2, a3, a4, a5, a6, a7,
+     b0, b1, b2, b3, b4, b5, b6, b7,
+     c0, c1, c2, c3, c4, c5, c6, c7,
+     d0, d1, d2, d3, d4, d5, d6, d7,
+     e0]
+  end
+
+  def test_many_kwargs
+    i = 0
+    assert_equal(:ok, many_kwargs(a0: :ok)[i], "#{i}: a0"); i+=1
+    assert_equal(:ok, many_kwargs(a1: :ok)[i], "#{i}: a1"); i+=1
+    assert_equal(:ok, many_kwargs(a2: :ok)[i], "#{i}: a2"); i+=1
+    assert_equal(:ok, many_kwargs(a3: :ok)[i], "#{i}: a3"); i+=1
+    assert_equal(:ok, many_kwargs(a4: :ok)[i], "#{i}: a4"); i+=1
+    assert_equal(:ok, many_kwargs(a5: :ok)[i], "#{i}: a5"); i+=1
+    assert_equal(:ok, many_kwargs(a6: :ok)[i], "#{i}: a6"); i+=1
+    assert_equal(:ok, many_kwargs(a7: :ok)[i], "#{i}: a7"); i+=1
+
+    assert_equal(:ok, many_kwargs(b0: :ok)[i], "#{i}: b0"); i+=1
+    assert_equal(:ok, many_kwargs(b1: :ok)[i], "#{i}: b1"); i+=1
+    assert_equal(:ok, many_kwargs(b2: :ok)[i], "#{i}: b2"); i+=1
+    assert_equal(:ok, many_kwargs(b3: :ok)[i], "#{i}: b3"); i+=1
+    assert_equal(:ok, many_kwargs(b4: :ok)[i], "#{i}: b4"); i+=1
+    assert_equal(:ok, many_kwargs(b5: :ok)[i], "#{i}: b5"); i+=1
+    assert_equal(:ok, many_kwargs(b6: :ok)[i], "#{i}: b6"); i+=1
+    assert_equal(:ok, many_kwargs(b7: :ok)[i], "#{i}: b7"); i+=1
+
+    assert_equal(:ok, many_kwargs(c0: :ok)[i], "#{i}: c0"); i+=1
+    assert_equal(:ok, many_kwargs(c1: :ok)[i], "#{i}: c1"); i+=1
+    assert_equal(:ok, many_kwargs(c2: :ok)[i], "#{i}: c2"); i+=1
+    assert_equal(:ok, many_kwargs(c3: :ok)[i], "#{i}: c3"); i+=1
+    assert_equal(:ok, many_kwargs(c4: :ok)[i], "#{i}: c4"); i+=1
+    assert_equal(:ok, many_kwargs(c5: :ok)[i], "#{i}: c5"); i+=1
+    assert_equal(:ok, many_kwargs(c6: :ok)[i], "#{i}: c6"); i+=1
+    assert_equal(:ok, many_kwargs(c7: :ok)[i], "#{i}: c7"); i+=1
+
+    assert_equal(:ok, many_kwargs(d0: :ok)[i], "#{i}: d0"); i+=1
+    assert_equal(:ok, many_kwargs(d1: :ok)[i], "#{i}: d1"); i+=1
+    assert_equal(:ok, many_kwargs(d2: :ok)[i], "#{i}: d2"); i+=1
+    assert_equal(:ok, many_kwargs(d3: :ok)[i], "#{i}: d3"); i+=1
+    assert_equal(:ok, many_kwargs(d4: :ok)[i], "#{i}: d4"); i+=1
+    assert_equal(:ok, many_kwargs(d5: :ok)[i], "#{i}: d5"); i+=1
+    assert_equal(:ok, many_kwargs(d6: :ok)[i], "#{i}: d6"); i+=1
+    assert_equal(:ok, many_kwargs(d7: :ok)[i], "#{i}: d7"); i+=1
+
+    assert_equal(:ok, many_kwargs(e0: :ok)[i], "#{i}: e0"); i+=1
+  end
+
   def test_splat_empty_hash_with_block_passing
     assert_valid_syntax("bug15087(**{}, &nil)")
   end
diff --git a/test/mri/ruby/test_literal.rb b/test/mri/ruby/test_literal.rb
index cf1a2babd73..ff40474bf77 100644
--- a/test/mri/ruby/test_literal.rb
+++ b/test/mri/ruby/test_literal.rb
@@ -177,6 +177,12 @@ def test_frozen_string
     end
   end
 
+  def test_frozen_string_in_array_literal
+    list = eval("# frozen-string-literal: true\n""['foo', 'bar']")
+    assert_equal 2, list.length
+    list.each { |str| assert_predicate str, :frozen? }
+  end
+
   if defined?(RubyVM::InstructionSequence.compile_option) and
     RubyVM::InstructionSequence.compile_option.key?(:debug_frozen_string_literal)
     def test_debug_frozen_string
@@ -189,6 +195,17 @@ def test_debug_frozen_string
         str << "x"
       }
     end
+
+    def test_debug_frozen_string_in_array_literal
+      src = '["foo"]'; f = "test.rb"; n = 1
+      opt = {frozen_string_literal: true, debug_frozen_string_literal: true}
+      ary = RubyVM::InstructionSequence.compile(src, f, f, n, opt).eval
+      assert_equal("foo", ary.first)
+      assert_predicate(ary.first, :frozen?)
+      assert_raise_with_message(FrozenError, /created at #{Regexp.quote(f)}:#{n}/) {
+        ary.first << "x"
+      } unless ENV['RUBY_ISEQ_DUMP_DEBUG']
+    end
   end
 
   def test_regexp
@@ -266,6 +283,24 @@ def test_hash
     assert_equal "literal", h["string"]
   end
 
+  def test_hash_literal_frozen
+    assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
+      def frozen_hash_literal_arg
+        {0=>1,1=>4,2=>17}
+      end
+
+      ObjectSpace.each_object(Hash) do |a|
+        if a.class == Hash and !a.default_proc and a.size == 3 &&
+           a[0] == 1 && a[1] == 4 && a[2] == 17
+          # should not be found.
+          raise
+        end
+      end
+      assert_not_include frozen_hash_literal_arg, 3
+    end;
+  end
+
   def test_big_array_and_hash_literal
     assert_normal_exit %q{GC.disable=true; x = nil; raise if eval("[#{(1..1_000_000).map{'x'}.join(", ")}]").size != 1_000_000}, "", timeout: 300, child_env: %[--disable-gems]
     assert_normal_exit %q{GC.disable=true; x = nil; raise if eval("[#{(1..1_000_000).to_a.join(", ")}]").size != 1_000_000}, "", timeout: 300, child_env: %[--disable-gems]
@@ -516,15 +551,12 @@ def test_integer
       }
     }
     bug2407 = '[ruby-dev:39798]'
-    head.each {|h|
-      if /^0/ =~ h
-        begin
-          eval("#{h}_")
-        rescue SyntaxError => e
-          assert_match(/numeric literal without digits\Z/, e.message, bug2407)
-        end
+    head.grep_v(/^0/) do |s|
+      head.grep(/^0/) do |h|
+        h = "#{s}#{h}_"
+        assert_syntax_error(h, /numeric literal without digits\Z/, "#{bug2407}: #{h.inspect}")
       end
-    }
+    end
   end
 
   def test_float
diff --git a/test/mri/ruby/test_m17n.rb b/test/mri/ruby/test_m17n.rb
index 9c7df4cb037..75daf613769 100644
--- a/test/mri/ruby/test_m17n.rb
+++ b/test/mri/ruby/test_m17n.rb
@@ -365,7 +365,10 @@ def test_str_dump
       "\u3042".encode("UTF-16LE"),
       "\u3042".encode("UTF-16BE"),
     ].each do |str|
-      assert_equal(str, eval(str.dump), "[ruby-dev:33142]")
+      dump = str.dump
+      assert_equal(str, eval(dump), "[ruby-dev:33142]")
+      assert_equal(str, dump.undump)
+      assert_equal(str, eval("# frozen-string-literal: true\n#{dump}"), '[Bug #14687]')
     end
   end
 
@@ -1528,6 +1531,17 @@ def test_setbyte
     }
   end
 
+  def test_setbyte_range
+    s = u("\xE3\x81\x82\xE3\x81\x84")
+    assert_nothing_raised { s.setbyte(0, -1) }
+    assert_nothing_raised { s.setbyte(0, 0x00) }
+    assert_nothing_raised { s.setbyte(0, 0x7F) }
+    assert_nothing_raised { s.setbyte(0, 0x80) }
+    assert_nothing_raised { s.setbyte(0, 0xff) }
+    assert_nothing_raised { s.setbyte(0, 0x100) }
+    assert_nothing_raised { s.setbyte(0, 0x4f7574206f6620636861722072616e6765) }
+  end
+
   def test_compatible
     assert_nil Encoding.compatible?("",0)
     assert_equal(Encoding::UTF_8, Encoding.compatible?(u(""), ua("abc")))
diff --git a/test/mri/ruby/test_math.rb b/test/mri/ruby/test_math.rb
index f2262874425..5cc12bcfeb8 100644
--- a/test/mri/ruby/test_math.rb
+++ b/test/mri/ruby/test_math.rb
@@ -202,6 +202,7 @@ def test_cbrt
     check(3, Math.cbrt(27))
     check(-0.1, Math.cbrt(-0.001))
     assert_nothing_raised { assert_infinity(Math.cbrt(1.0/0)) }
+    assert_operator(Math.cbrt(1.0 - Float::EPSILON), :<=, 1.0)
   end
 
   def test_frexp
diff --git a/test/mri/ruby/test_method.rb b/test/mri/ruby/test_method.rb
index 77273dade55..3a7186584a7 100644
--- a/test/mri/ruby/test_method.rb
+++ b/test/mri/ruby/test_method.rb
@@ -1046,4 +1046,55 @@ def test_eqq
     assert_operator(0.method(:<), :===, 5)
     assert_not_operator(0.method(:<), :===, -5)
   end
+
+  def test_compose_with_method
+    c = Class.new {
+      def f(x) x * 2 end
+      def g(x) x + 1 end
+    }
+    f = c.new.method(:f)
+    g = c.new.method(:g)
+
+    assert_equal(6, (f << g).call(2))
+    assert_equal(6, (g >> f).call(2))
+  end
+
+  def test_compose_with_proc
+    c = Class.new {
+      def f(x) x * 2 end
+    }
+    f = c.new.method(:f)
+    g = proc {|x| x + 1}
+
+    assert_equal(6, (f << g).call(2))
+    assert_equal(6, (g >> f).call(2))
+  end
+
+  def test_compose_with_callable
+    c = Class.new {
+      def f(x) x * 2 end
+    }
+    c2 = Class.new {
+      def call(x) x + 1 end
+    }
+    f = c.new.method(:f)
+    g = c2.new
+
+    assert_equal(6, (f << g).call(2))
+    assert_equal(5, (f >> g).call(2))
+  end
+
+  def test_compose_with_noncallable
+    c = Class.new {
+      def f(x) x * 2 end
+    }
+    f = c.new.method(:f)
+
+    assert_raise(NoMethodError) {
+      (f << 5).call(2)
+    }
+    assert_raise(NoMethodError) {
+      (f >> 5).call(2)
+    }
+  end
 end
diff --git a/test/mri/ruby/test_module.rb b/test/mri/ruby/test_module.rb
index 076ea0901f5..9e9eb13fbaa 100644
--- a/test/mri/ruby/test_module.rb
+++ b/test/mri/ruby/test_module.rb
@@ -338,6 +338,17 @@ def test_nested_defined_symbol
     assert_raise(NameError) {self.class.const_defined?(const)}
   end
 
+  def test_nested_defined_inheritance
+    assert_send([Object, :const_defined?, [self.class.name, 'User', 'MIXIN'].join('::')])
+    assert_send([self.class, :const_defined?, 'User::MIXIN'])
+    assert_send([Object, :const_defined?, 'File::SEEK_SET'])
+
+    # const_defined? with `false`
+    assert_not_send([Object, :const_defined?, [self.class.name, 'User', 'MIXIN'].join('::'), false])
+    assert_not_send([self.class, :const_defined?, 'User::MIXIN', false])
+    assert_not_send([Object, :const_defined?, 'File::SEEK_SET', false])
+  end
+
   def test_nested_defined_bad_class
     assert_raise(TypeError) do
       self.class.const_defined?('User::USER::Foo')
@@ -462,26 +473,48 @@ def test_instance_methods
     assert_equal([:cClass], (class << CClass; self; end).instance_methods(false))
     assert_equal([], (class << BClass; self; end).instance_methods(false))
     assert_equal([:cm2], (class << AClass; self; end).instance_methods(false))
-    # Ruby 1.8 feature change:
-    # #instance_methods includes protected methods.
-    #assert_equal([:aClass], AClass.instance_methods(false))
     assert_equal([:aClass, :aClass2], AClass.instance_methods(false).sort)
     assert_equal([:aClass, :aClass2],
         (AClass.instance_methods(true) - Object.instance_methods(true)).sort)
   end
 
   def test_method_defined?
-    assert !User.method_defined?(:wombat)
-    assert User.method_defined?(:mixin)
-    assert User.method_defined?(:user)
-    assert User.method_defined?(:user2)
-    assert !User.method_defined?(:user3)
+    [User, Class.new{include User}, Class.new{prepend User}].each do |klass|
+      [[], [true]].each do |args|
+        assert !klass.method_defined?(:wombat, *args)
+        assert klass.method_defined?(:mixin, *args)
+        assert klass.method_defined?(:user, *args)
+        assert klass.method_defined?(:user2, *args)
+        assert !klass.method_defined?(:user3, *args)
+
+        assert !klass.method_defined?("wombat", *args)
+        assert klass.method_defined?("mixin", *args)
+        assert klass.method_defined?("user", *args)
+        assert klass.method_defined?("user2", *args)
+        assert !klass.method_defined?("user3", *args)
+      end
+    end
+  end
 
-    assert !User.method_defined?("wombat")
-    assert User.method_defined?("mixin")
-    assert User.method_defined?("user")
-    assert User.method_defined?("user2")
-    assert !User.method_defined?("user3")
+  def test_method_defined_without_include_super
+    assert User.method_defined?(:user, false)
+    assert !User.method_defined?(:mixin, false)
+    assert Mixin.method_defined?(:mixin, false)
+
+    User.const_set(:FOO, c = Class.new)
+
+    c.prepend(User)
+    assert !c.method_defined?(:user, false)
+    c.define_method(:user){}
+    assert c.method_defined?(:user, false)
+
+    assert !c.method_defined?(:mixin, false)
+    c.define_method(:mixin){}
+    assert c.method_defined?(:mixin, false)
+
+    assert !c.method_defined?(:userx, false)
+    c.define_method(:userx){}
+    assert c.method_defined?(:userx, false)
   end
 
   def module_exec_aux
@@ -977,8 +1010,8 @@ def self.foo
   end
 
   def test_method_defined
-    c = Class.new
-    c.class_eval do
+    cl = Class.new
+    def_methods = proc do
       def foo; end
       def bar; end
       def baz; end
@@ -986,33 +1019,47 @@ def baz; end
       protected :bar
       private :baz
     end
+    cl.class_eval(&def_methods)
+    sc = Class.new(cl)
+    mod = Module.new(&def_methods)
+    only_prepend = Class.new{prepend(mod)}
+    empty_prepend = cl.clone
+    empty_prepend.prepend(Module.new)
+    overlap_prepend = cl.clone
+    overlap_prepend.prepend(mod)
+
+    [[], [true], [false]].each do |args|
+      [cl, sc, only_prepend, empty_prepend, overlap_prepend].each do |c|
+        always_false = [sc, only_prepend].include?(c) && args == [false]
 
-    assert_equal(true, c.public_method_defined?(:foo))
-    assert_equal(false, c.public_method_defined?(:bar))
-    assert_equal(false, c.public_method_defined?(:baz))
+        assert_equal(always_false ? false : true, c.public_method_defined?(:foo, *args))
+        assert_equal(always_false ? false : false, c.public_method_defined?(:bar, *args))
+        assert_equal(always_false ? false : false, c.public_method_defined?(:baz, *args))
 
-    # Test if string arguments are converted to symbols
-    assert_equal(true, c.public_method_defined?("foo"))
-    assert_equal(false, c.public_method_defined?("bar"))
-    assert_equal(false, c.public_method_defined?("baz"))
+        # Test if string arguments are converted to symbols
+        assert_equal(always_false ? false : true, c.public_method_defined?("foo", *args))
+        assert_equal(always_false ? false : false, c.public_method_defined?("bar", *args))
+        assert_equal(always_false ? false : false, c.public_method_defined?("baz", *args))
 
-    assert_equal(false, c.protected_method_defined?(:foo))
-    assert_equal(true, c.protected_method_defined?(:bar))
-    assert_equal(false, c.protected_method_defined?(:baz))
+        assert_equal(always_false ? false : false, c.protected_method_defined?(:foo, *args))
+        assert_equal(always_false ? false : true, c.protected_method_defined?(:bar, *args))
+        assert_equal(always_false ? false : false, c.protected_method_defined?(:baz, *args))
 
-    # Test if string arguments are converted to symbols
-    assert_equal(false, c.protected_method_defined?("foo"))
-    assert_equal(true, c.protected_method_defined?("bar"))
-    assert_equal(false, c.protected_method_defined?("baz"))
+        # Test if string arguments are converted to symbols
+        assert_equal(always_false ? false : false, c.protected_method_defined?("foo", *args))
+        assert_equal(always_false ? false : true, c.protected_method_defined?("bar", *args))
+        assert_equal(always_false ? false : false, c.protected_method_defined?("baz", *args))
 
-    assert_equal(false, c.private_method_defined?(:foo))
-    assert_equal(false, c.private_method_defined?(:bar))
-    assert_equal(true, c.private_method_defined?(:baz))
+        assert_equal(always_false ? false : false, c.private_method_defined?(:foo, *args))
+        assert_equal(always_false ? false : false, c.private_method_defined?(:bar, *args))
+        assert_equal(always_false ? false : true, c.private_method_defined?(:baz, *args))
 
-    # Test if string arguments are converted to symbols
-    assert_equal(false, c.private_method_defined?("foo"))
-    assert_equal(false, c.private_method_defined?("bar"))
-    assert_equal(true, c.private_method_defined?("baz"))
+        # Test if string arguments are converted to symbols
+        assert_equal(always_false ? false : false, c.private_method_defined?("foo", *args))
+        assert_equal(always_false ? false : false, c.private_method_defined?("bar", *args))
+        assert_equal(always_false ? false : true, c.private_method_defined?("baz", *args))
+      end
+    end
   end
 
   def test_top_public_private
@@ -1425,6 +1472,21 @@ class X
     RUBY
   end
 
+  def test_private_constant_const_missing
+    c = Class.new
+    c.const_set(:FOO, "foo")
+    c.private_constant(:FOO)
+    class << c
+      attr_reader :const_missing_arg
+      def const_missing(name)
+        @const_missing_arg = name
+	name == :FOO ? const_get(:FOO) : super
+      end
+    end
+    assert_equal("foo", c::FOO)
+    assert_equal(:FOO, c.const_missing_arg)
+  end
+
   class PrivateClass
   end
   private_constant :PrivateClass
@@ -1463,6 +1525,17 @@ def test_deprecate_constant
     assert_warn(/deprecated/, bug12382) {c.class_eval "FOO"}
   end
 
+  NIL = nil
+  FALSE = false
+  deprecate_constant(:NIL, :FALSE)
+
+  def test_deprecate_nil_constant
+    w = EnvUtil.verbose_warning {2.times {FALSE}}
+    assert_equal(1, w.scan("::FALSE").size, w)
+    w = EnvUtil.verbose_warning {2.times {NIL}}
+    assert_equal(1, w.scan("::NIL").size, w)
+  end
+
   def test_constants_with_private_constant
     assert_not_include(::TestModule.constants, :PrivateClass)
     assert_not_include(::TestModule.constants(true), :PrivateClass)
diff --git a/test/mri/ruby/test_not.rb b/test/mri/ruby/test_not.rb
index 721f868a5a1..12e4c4b696f 100644
--- a/test/mri/ruby/test_not.rb
+++ b/test/mri/ruby/test_not.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: false
 require 'test/unit'
 
-class TestIfunless < Test::Unit::TestCase
+class TestNot < Test::Unit::TestCase
   def test_not_with_grouped_expression
     assert_equal(false, (not (true)))
     assert_equal(true, (not (false)))
diff --git a/test/mri/ruby/test_numeric.rb b/test/mri/ruby/test_numeric.rb
index 6efc40320a7..e48c3448e85 100644
--- a/test/mri/ruby/test_numeric.rb
+++ b/test/mri/ruby/test_numeric.rb
@@ -260,11 +260,11 @@ def test_step
     assert_raise(ArgumentError) { 1.step(10, 1, 0) { } }
     assert_raise(ArgumentError) { 1.step(10, 1, 0).size }
     assert_raise(ArgumentError) { 1.step(10, 0) { } }
-    assert_raise(ArgumentError) { 1.step(10, 0).size }
     assert_raise(ArgumentError) { 1.step(10, "1") { } }
     assert_raise(ArgumentError) { 1.step(10, "1").size }
     assert_raise(TypeError) { 1.step(10, nil) { } }
-    assert_raise(TypeError) { 1.step(10, nil).size }
+    assert_nothing_raised { 1.step(10, 0).size }
+    assert_nothing_raised { 1.step(10, nil).size }
     assert_nothing_raised { 1.step(by: 0, to: nil) }
     assert_nothing_raised { 1.step(by: 0, to: nil).size }
     assert_nothing_raised { 1.step(by: 0) }
@@ -272,6 +272,14 @@ def test_step
     assert_nothing_raised { 1.step(by: nil) }
     assert_nothing_raised { 1.step(by: nil).size }
 
+    assert_kind_of(Enumerator::ArithmeticSequence, 1.step(10))
+    assert_kind_of(Enumerator::ArithmeticSequence, 1.step(10, 2))
+    assert_kind_of(Enumerator::ArithmeticSequence, 1.step(10, by: 2))
+    assert_kind_of(Enumerator::ArithmeticSequence, 1.step(by: 2))
+    assert_kind_of(Enumerator::ArithmeticSequence, 1.step(by: 2, to: nil))
+    assert_kind_of(Enumerator::ArithmeticSequence, 1.step(by: 2, to: 10))
+    assert_kind_of(Enumerator::ArithmeticSequence, 1.step(by: -1))
+
     bug9811 = '[ruby-dev:48177] [Bug #9811]'
     assert_raise(ArgumentError, bug9811) { 1.step(10, foo: nil) {} }
     assert_raise(ArgumentError, bug9811) { 1.step(10, foo: nil).size }
@@ -289,7 +297,6 @@ def test_step
     i <<= 1 until (bigflo - i).to_i < bignum
     bigflo -= i >> 1
     assert_equal(bigflo.to_i, (0.0).step(bigflo-1.0, 1.0).size)
-    assert_operator((0.0).step(bignum.to_f, 1.0).size, :>=, bignum) # may loose precision
 
     assert_step [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 10]
     assert_step [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, to: 10]
diff --git a/test/mri/ruby/test_object.rb b/test/mri/ruby/test_object.rb
index c25dcf9c374..28e07162d7f 100644
--- a/test/mri/ruby/test_object.rb
+++ b/test/mri/ruby/test_object.rb
@@ -883,6 +883,7 @@ def test_redef_method_missing
     ['ArgumentError.new("bug5473")', 'ArgumentError, "bug5473"', '"bug5473"'].each do |code|
       exc = code[/\A[A-Z]\w+/] || 'RuntimeError'
       assert_separately([], <<-SRC)
+      $VERBOSE = nil
       class ::Object
         def method_missing(m, *a, &b)
           raise #{code}
diff --git a/test/mri/ruby/test_optimization.rb b/test/mri/ruby/test_optimization.rb
index 2a4cc196996..eb77c74e9b7 100644
--- a/test/mri/ruby/test_optimization.rb
+++ b/test/mri/ruby/test_optimization.rb
@@ -187,6 +187,16 @@ def test_string_ltlt
     assert_redefine_method('String', '<<', 'assert_equal "b", "a" << "b"')
   end
 
+  def test_fixnum_and
+    assert_equal 1, 1&3
+    assert_redefine_method('Integer', '&', 'assert_equal 3, 1&3')
+  end
+
+  def test_fixnum_or
+    assert_equal 3, 1|3
+    assert_redefine_method('Integer', '|', 'assert_equal 1, 3|1')
+  end
+
   def test_array_plus
     assert_equal [1,2], [1]+[2]
     assert_redefine_method('Array', '+', 'assert_equal [2], [1]+[2]')
@@ -557,12 +567,30 @@ def test_peephole_string_literal_range
       when "1.8.0"..."1.8.8" then :bar
       end
     end;
-    iseq = RubyVM::InstructionSequence.compile(code)
-    insn = iseq.disasm
-    assert_match %r{putobject\s+#{Regexp.quote('"1.8.0"..."1.8.8"')}}, insn
-    assert_match %r{putobject\s+#{Regexp.quote('"2.0.0".."2.3.2"')}}, insn
-    assert_no_match(/putstring/, insn)
-    assert_no_match(/newrange/, insn)
+    [ true, false ].each do |opt|
+      iseq = RubyVM::InstructionSequence.compile(code,
+                                                 frozen_string_literal: opt)
+      insn = iseq.disasm
+      assert_match %r{putobject\s+#{Regexp.quote('"1.8.0"..."1.8.8"')}}, insn
+      assert_match %r{putobject\s+#{Regexp.quote('"2.0.0".."2.3.2"')}}, insn
+      assert_no_match(/putstring/, insn)
+      assert_no_match(/newrange/, insn)
+    end
+  end
+
+  def test_peephole_dstr
+    code = "#{<<~'begin;'}\n#{<<~'end;'}"
+    begin;
+      exp = -'a'
+      z = 'a'
+      [exp, -"#{z}"]
+    end;
+    [ false, true ].each do |fsl|
+      iseq = RubyVM::InstructionSequence.compile(code,
+                                                 frozen_string_literal: fsl)
+      assert_same(*iseq.eval,
+                  "[ruby-core:85542] [Bug #14475] fsl: #{fsl}")
+    end
   end
 
   def test_branch_condition_backquote
@@ -677,7 +705,7 @@ def foo &b
         $SAFE = 1
         b.call
       end
-      assert_equal 0, foo{$SAFE}
+      assert_equal 1, foo{$SAFE}
     END
   end
 
@@ -689,7 +717,7 @@ def test_peephole_optimization_without_trace
   end
 
   def test_clear_unreachable_keyword_args
-    assert_separately [], <<-END, timeout: 15
+    assert_separately [], <<-END, timeout: 30
       script =  <<-EOS
         if true
         else
@@ -735,6 +763,18 @@ def obj.a(&block)
     assert_equal(:ok, obj.a())
   end
 
+  def test_blockparam_in_rescue
+    obj = Object.new
+    def obj.foo(&b)
+      raise
+    rescue
+      b.call
+    end
+    result = nil
+    assert_equal(42, obj.foo {result = 42})
+    assert_equal(42, result)
+  end
+
   def test_unconditional_branch_to_leave_block
     assert_valid_syntax("#{<<~"begin;"}\n#{<<~'end;'}")
     begin;
@@ -777,7 +817,11 @@ def test_peephole_jump_after_newarray
   end
 
   def test_optimized_empty_ensure
+<<<<<<< HEAD
+    assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}", timeout: 1)
+=======
     assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}", timeout: 10)
+>>>>>>> master
     begin;
       assert_raise(RuntimeError) {
         begin raise ensure nil if nil end
diff --git a/test/mri/ruby/test_pack.rb b/test/mri/ruby/test_pack.rb
index aec418913e7..658208d9df8 100644
--- a/test/mri/ruby/test_pack.rb
+++ b/test/mri/ruby/test_pack.rb
@@ -428,6 +428,7 @@ def test_pack_unpack_lL
     assert_operator(4, :<=, [1].pack("L!").bytesize)
   end
 
+  require 'rbconfig'
   def test_pack_unpack_qQ
     s1 = [578437695752307201, -506097522914230529].pack("q*")
     s2 = [578437695752307201, 17940646550795321087].pack("Q*")
@@ -437,6 +438,7 @@ def test_pack_unpack_qQ
 
     # Note: q! and Q! should not work on platform which has no long long type.
     # Is there a such platform now?
+    # @shyouhei: Yes. gcc -ansi is one of such platform.
     s1 = [578437695752307201, -506097522914230529].pack("q!*")
     s2 = [578437695752307201, 17940646550795321087].pack("Q!*")
     assert_equal([578437695752307201, -506097522914230529], s2.unpack("q!*"))
@@ -446,7 +448,7 @@ def test_pack_unpack_qQ
     assert_equal(8, [1].pack("Q").bytesize)
     assert_operator(8, :<=, [1].pack("q!").bytesize)
     assert_operator(8, :<=, [1].pack("Q!").bytesize)
-  end
+  end if RbConfig::CONFIG['HAVE_LONG_LONG']
 
   def test_pack_unpack_jJ
     # Note: we assume that the size of intptr_t and uintptr_t equals to the size
@@ -800,6 +802,13 @@ def test_invalid_warning
     assert_warning(/\A(.* in '\u{3042}'\n)+\z/) {
       [].pack("\u{3042}")
     }
+
+    assert_warning(/\A.* in '.*U'\Z/) {
+      assert_equal "\000", [0].pack("\0U")
+    }
+    assert_warning(/\A.* in '.*U'\Z/) {
+      "\000".unpack("\0U")
+    }
   end
 
   def test_pack_resize
diff --git a/test/mri/ruby/test_parse.rb b/test/mri/ruby/test_parse.rb
index 15c6245bac2..c7aeeecb616 100644
--- a/test/mri/ruby/test_parse.rb
+++ b/test/mri/ruby/test_parse.rb
@@ -14,13 +14,12 @@ def teardown
   end
 
   def test_else_without_rescue
-    x = eval <<-END, nil, __FILE__, __LINE__+1
+    assert_syntax_error(<<-END, %r":#{__LINE__+2}: else without rescue"o, [__FILE__, __LINE__+1])
       begin
       else
         42
       end
     END
-    assert_equal(42, x)
   end
 
   def test_alias_backref
@@ -457,6 +456,30 @@ def ("foo").foo; end
     end
   end
 
+  def test_op_asgn1_with_block
+    t = Object.new
+    a = []
+    blk = proc {|x| a << x }
+    def t.[](_)
+      yield(:aref)
+      nil
+    end
+    def t.[]=(_, _)
+      yield(:aset)
+    end
+    def t.dummy(_)
+    end
+    eval <<-END, nil, __FILE__, __LINE__+1
+      t[42, &blk] ||= 42
+    END
+    assert_equal([:aref, :aset], a)
+    a.clear
+    eval <<-END, nil, __FILE__, __LINE__+1
+    t[42, &blk] ||= t.dummy 42 # command_asgn test
+    END
+    assert_equal([:aref, :aset], a)
+  end
+
   def test_backquote
     t = Object.new
 
@@ -888,10 +911,8 @@ def test_method_block_location
     assert_equal(expected, actual, bug5614)
   end
 
-  def test_shadowing_variable
-    assert_warning(/shadowing outer local variable/) {eval("a=1; tap {|a|}")}
-    a = "\u{3042}"
-    assert_warning(/#{a}/o) {eval("#{a}=1; tap {|#{a}|}")}
+  def test_no_shadowing_variable_warning
+    assert_no_warning(/shadowing outer local variable/) {eval("a=1; tap {|a|}")}
   end
 
   def test_unused_variable
@@ -1099,6 +1120,84 @@ def test_eof_in_def
     assert_raise(SyntaxError) { eval("def m\n\C-z""end") }
   end
 
+  def test_location_of_invalid_token
+    assert_raise_with_message(SyntaxError, /^      \^~~\z/) do
+      eval('class xxx end')
+    end
+  end
+
+  def test_whitespace_warning
+    assert_raise_with_message(SyntaxError, /backslash/) do
+      eval("\\foo")
+    end
+    assert_raise_with_message(SyntaxError, /escaped space/) do
+      eval("\\ ")
+    end
+    assert_raise_with_message(SyntaxError, /escaped horizontal tab/) do
+      eval("\\\t")
+    end
+    assert_raise_with_message(SyntaxError, /escaped form feed/) do
+      eval("\\\f")
+    end
+    assert_raise_with_message(SyntaxError, /escaped carriage return/) do
+      assert_warn(/middle of line/) {eval("\\\r")}
+    end
+    assert_raise_with_message(SyntaxError, /escaped vertical tab/) do
+      eval("\\\v")
+    end
+  end
+
+  def test_command_def_cmdarg
+    assert_valid_syntax("\n#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
+      m def x(); end
+      1.tap do end
+    end;
+  end
+
+  NONASCII_CONSTANTS = [
+    *%W"\u{00de} \u{00C0}".flat_map {|c| [c, c.encode("iso-8859-15")]},
+    "\u{1c4}", "\u{1f2}", "\u{1f88}", "\u{370}",
+    *%W"\u{391} \u{ff21}".flat_map {|c| [c, c.encode("cp932"), c.encode("euc-jp")]},
+  ]
+
+  def assert_nonascii_const
+    assert_all_assertions_foreach("NONASCII_CONSTANTS", *NONASCII_CONSTANTS) do |n|
+      m = Module.new
+      assert_not_operator(m, :const_defined?, n)
+      assert_raise_with_message(NameError, /uninitialized/) do
+        m.const_get(n)
+      end
+      assert_nil(eval("defined?(m::#{n})"))
+
+      v = yield m, n
+
+      assert_operator(m, :const_defined?, n)
+      assert_equal("constant", eval("defined?(m::#{n})"))
+      assert_same(v, m.const_get(n))
+
+      m.__send__(:remove_const, n)
+      assert_not_operator(m, :const_defined?, n)
+      assert_nil(eval("defined?(m::#{n})"))
+    end
+  end
+
+  def test_nonascii_const_set
+    assert_nonascii_const do |m, n|
+      m.const_set(n, 42)
+    end
+  end
+
+  def test_nonascii_constant
+    assert_nonascii_const do |m, n|
+      m.module_eval("class #{n}; self; end")
+    end
+  end
+
+  def test_cdmarg_after_command_args_and_tlbrace_arg
+    assert_valid_syntax('let () { m(a) do; end }')
+  end
+
 =begin
   def test_past_scope_variable
     assert_warning(/past scope/) {catch {|tag| eval("BEGIN{throw tag}; tap {a = 1}; a")}}
diff --git a/test/mri/ruby/test_pipe.rb b/test/mri/ruby/test_pipe.rb
index efca8f28c1f..9fa42fd3750 100644
--- a/test/mri/ruby/test_pipe.rb
+++ b/test/mri/ruby/test_pipe.rb
@@ -27,4 +27,23 @@ def open_file(content)
       end
     end
   end
+
+  def test_stdout_epipe
+    assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
+      io = STDOUT
+      begin
+        save = io.dup
+        IO.popen("echo", "w", out: IO::NULL) do |f|
+          io.reopen(f)
+          Process.wait(f.pid)
+          assert_raise(Errno::EPIPE) do
+            io.print "foo\n"
+          end
+        end
+      ensure
+        io.reopen(save)
+      end
+    end;
+  end
 end
diff --git a/test/mri/ruby/test_proc.rb b/test/mri/ruby/test_proc.rb
index df9bb5f5496..9ae1de62fff 100644
--- a/test/mri/ruby/test_proc.rb
+++ b/test/mri/ruby/test_proc.rb
@@ -160,26 +160,34 @@ def test_safe
       $SAFE += 1
       proc {$SAFE}
     }.call
-    assert_equal(safe, $SAFE)
+
+    assert_equal(safe + 1, $SAFE)
     assert_equal(safe + 1, p.call)
-    assert_equal(safe, $SAFE)
+    assert_equal(safe + 1, $SAFE)
 
+    $SAFE = 0
     c.class_eval {define_method(:safe, p)}
     assert_equal(safe, x.safe)
-    assert_equal(safe, x.method(:safe).call)
-    assert_equal(safe, x.method(:safe).to_proc.call)
 
+    $SAFE = 0
     p = proc {$SAFE += 1}
     assert_equal(safe + 1, p.call)
-    assert_equal(safe, $SAFE)
+    assert_equal(safe + 1, $SAFE)
 
+    $SAFE = 0
     c.class_eval {define_method(:inc, p)}
     assert_equal(safe + 1, proc {x.inc; $SAFE}.call)
-    assert_equal(safe, $SAFE)
+    assert_equal(safe + 1, $SAFE)
+
+    $SAFE = 0
     assert_equal(safe + 1, proc {x.method(:inc).call; $SAFE}.call)
-    assert_equal(safe, $SAFE)
+    assert_equal(safe + 1, $SAFE)
+
+    $SAFE = 0
     assert_equal(safe + 1, proc {x.method(:inc).to_proc.call; $SAFE}.call)
-    assert_equal(safe, $SAFE)
+    assert_equal(safe + 1, $SAFE)
+  ensure
+    $SAFE = 0
   end
 
   def m2
@@ -397,6 +405,15 @@ class << b; attr_accessor :foo; end
     assert_equal([1, 2, 3], b.eval("[x, y, z]"))
   end
 
+  def test_binding_source_location
+    b, expected_location = binding, [__FILE__, __LINE__]
+    assert_equal(expected_location, b.source_location)
+
+    file, lineno = method(:source_location_test).to_proc.binding.source_location
+    assert_match(/^#{ Regexp.quote(__FILE__) }$/, file)
+    assert_equal(@@line_of_source_location_test, lineno, 'Bug #2427')
+  end
+
   def test_proc_lambda
     assert_raise(ArgumentError) { proc }
     assert_raise(ArgumentError) { lambda }
@@ -1328,7 +1345,7 @@ def test_local_variable_set
   end
 
   def test_local_variable_set_wb
-    assert_ruby_status([], <<-'end;', '[Bug #13605]', timeout: 15)
+    assert_ruby_status([], <<-'end;', '[Bug #13605]', timeout: 30)
       b = binding
       n = 20_000
 
@@ -1376,4 +1393,95 @@ def g
       e.each {}
     EOS
   end
+
+  def test_prepended_call
+    assert_in_out_err([], "#{<<~"begin;"}\n#{<<~'end;'}", ["call"])
+    begin;
+      Proc.prepend Module.new {def call() puts "call"; super; end}
+      def m(&blk) blk.call; end
+      m {}
+    end;
+  end
+
+  def test_refined_call
+    assert_in_out_err([], "#{<<~"begin;"}\n#{<<~'end;'}", ["call"])
+    begin;
+      using Module.new {refine(Proc) {def call() puts "call"; super; end}}
+      def m(&blk) blk.call; end
+      m {}
+    end;
+  end
+
+  def method_for_test_proc_without_block_for_symbol
+    binding.eval('proc')
+  end
+
+  def test_proc_without_block_for_symbol
+    assert_equal('1', method_for_test_proc_without_block_for_symbol(&:to_s).call(1), '[Bug #14782]')
+  end
+
+  def test_compose
+    f = proc {|x| x * 2}
+    g = proc {|x| x + 1}
+
+    assert_equal(6, (f << g).call(2))
+    assert_equal(6, (g >> f).call(2))
+  end
+
+  def test_compose_with_multiple_args
+    f = proc {|x| x * 2}
+    g = proc {|x, y| x + y}
+
+    assert_equal(6, (f << g).call(1, 2))
+    assert_equal(6, (g >> f).call(1, 2))
+  end
+
+  def test_compose_with_block
+    f = proc {|x| x * 2}
+    g = proc {|&blk| blk.call(1) }
+
+    assert_equal(8, (f << g).call { |x| x + 3 })
+    assert_equal(8, (g >> f).call { |x| x + 3 })
+  end
+
+  def test_compose_with_lambda
+    f = lambda {|x| x * 2}
+    g = lambda {|x| x}
+
+    assert_predicate((f << g), :lambda?)
+    assert_predicate((g >> f), :lambda?)
+  end
+
+  def test_compose_with_method
+    f = proc {|x| x * 2}
+    c = Class.new {
+      def g(x) x + 1 end
+    }
+    g = c.new.method(:g)
+
+    assert_equal(6, (f << g).call(2))
+    assert_equal(5, (f >> g).call(2))
+  end
+
+  def test_compose_with_callable
+    f = proc {|x| x * 2}
+    c = Class.new {
+      def call(x) x + 1 end
+    }
+    g = c.new
+
+    assert_equal(6, (f << g).call(2))
+    assert_equal(5, (f >> g).call(2))
+  end
+
+  def test_compose_with_noncallable
+    f = proc {|x| x * 2}
+
+    assert_raise(NoMethodError) {
+      (f << 5).call(2)
+    }
+    assert_raise(NoMethodError) {
+      (f >> 5).call(2)
+    }
+  end
 end
diff --git a/test/mri/ruby/test_process.rb b/test/mri/ruby/test_process.rb
index ba7b0f11771..b2f1ad70566 100644
--- a/test/mri/ruby/test_process.rb
+++ b/test/mri/ruby/test_process.rb
@@ -246,11 +246,14 @@ def test_execopts_rlimit
     assert_raise(ArgumentError) do
       system(RUBY, '-e', 'exit',  'rlimit_bogus'.to_sym => 123)
     end
-    assert_separately([],<<-"end;") # [ruby-core:82033] [Bug #13744]
+    assert_separately([],"#{<<-"begin;"}\n#{<<~'end;'}")
+    BUG = "[ruby-core:82033] [Bug #13744]"
+    RUBY = "#{RUBY}"
+    begin;
       assert(system("#{RUBY}", "-e",
                  "exit([3600,3600] == Process.getrlimit(:CPU))",
-             'rlimit_cpu'.to_sym => 3600))
-      assert_raise(ArgumentError) do
+             'rlimit_cpu'.to_sym => 3600), BUG)
+      assert_raise(ArgumentError, BUG) do
         system("#{RUBY}", '-e', 'exit',  :rlimit_bogus => 123)
       end
     end;
@@ -260,7 +263,7 @@ def test_execopts_rlimit
     }
   end
 
-  MANDATORY_ENVS = %w[RUBYLIB]
+  MANDATORY_ENVS = %w[RUBYLIB MJIT_SEARCH_BUILD_DIR]
   case RbConfig::CONFIG['target_os']
   when /linux/
     MANDATORY_ENVS << 'LD_PRELOAD'
@@ -272,6 +275,9 @@ def test_execopts_rlimit
   if e = RbConfig::CONFIG['LIBPATHENV']
     MANDATORY_ENVS << e
   end
+  if e = RbConfig::CONFIG['PRELOADENV'] and !e.empty?
+    MANDATORY_ENVS << e
+  end
   PREENVARG = ['-e', "%w[#{MANDATORY_ENVS.join(' ')}].each{|e|ENV.delete(e)}"]
   ENVARG = ['-e', 'ENV.each {|k,v| puts "#{k}=#{v}" }']
   ENVCOMMAND = [RUBY].concat(PREENVARG).concat(ENVARG)
@@ -676,14 +682,17 @@ def test_execopts_redirect_open_fifo_interrupt_print
         return
       end
       IO.popen([RUBY, '-e', <<-'EOS']) {|io|
+        STDOUT.sync = true
         trap(:USR1) { print "trap\n" }
+        puts "start"
         system("cat", :in => "fifo")
       EOS
-        sleep 1
+        assert_equal("start\n", io.gets)
+        sleep 0.2 # wait for the child to stop at opening "fifo"
         Process.kill(:USR1, io.pid)
-        sleep 1
+        assert_equal("trap\n", io.readpartial(8))
         File.write("fifo", "ok\n")
-        assert_equal("trap\nok\n", io.read)
+        assert_equal("ok\n", io.read)
       }
     }
   end unless windows? # does not support fifo
@@ -756,6 +765,15 @@ def test_execopts_redirect_pipe
           Process.wait pid
         end
       }
+
+      # ensure standard FDs we redirect to are blocking for compatibility
+      with_pipes(3) do |pipes|
+        src = 'p [STDIN,STDOUT,STDERR].map(&:nonblock?)'
+        rdr = { 0 => pipes[0][0], 1 => pipes[1][1], 2 => pipes[2][1] }
+        pid = spawn(RUBY, '-rio/nonblock', '-e', src, rdr)
+        assert_equal("[false, false, false]\n", pipes[1][0].gets)
+        Process.wait pid
+      end
     end
   end
 
@@ -1003,6 +1021,15 @@ def test_execopts_close_others
     }
   end
 
+  def test_close_others_default_false
+    IO.pipe do |r,w|
+      w.close_on_exec = false
+      src = "IO.new(#{w.fileno}).puts(:hi)"
+      assert_equal true, system(*%W(#{RUBY} --disable=gems -e #{src}))
+      assert_equal "hi\n", r.gets
+    end
+  end unless windows? # passing non-stdio fds is not supported on Windows
+
   def test_execopts_redirect_self
     begin
       with_pipe {|r, w|
@@ -1458,7 +1485,9 @@ def test_waitall
   def test_wait_exception
     bug11340 = '[ruby-dev:49176] [Bug #11340]'
     t0 = t1 = nil
-    IO.popen([RUBY, '-e', 'puts;STDOUT.flush;Thread.start{gets;exit};sleep(3)'], 'r+') do |f|
+    sec = 3
+    code = "puts;STDOUT.flush;Thread.start{gets;exit};sleep(#{sec})"
+    IO.popen([RUBY, '-e', code], 'r+') do |f|
       pid = f.pid
       f.gets
       t0 = Time.now
@@ -1472,10 +1501,11 @@ def test_wait_exception
         th.kill.join
       end
       t1 = Time.now
+      diff = t1 - t0
+      assert_operator(diff, :<, sec,
+                  ->{"#{bug11340}: #{diff} seconds to interrupt Process.wait"})
       f.puts
     end
-    assert_operator(t1 - t0, :<, 3,
-                    ->{"#{bug11340}: #{t1-t0} seconds to interrupt Process.wait"})
   end
 
   def test_abort
@@ -1487,6 +1517,9 @@ def test_abort
 
   def test_sleep
     assert_raise(ArgumentError) { sleep(1, 1) }
+    [-1, -1.0, -1r].each do |sec|
+      assert_raise_with_message(ArgumentError, /not.*negative/) { sleep(sec) }
+    end
   end
 
   def test_getpgid
@@ -1524,6 +1557,8 @@ def test_maxgroups
   rescue NotImplementedError
   else
     assert_kind_of(Integer, max)
+    assert_predicate(max, :positive?)
+    skip "not limited to NGROUPS_MAX" if /darwin/ =~ RUBY_PLATFORM
     gs = Process.groups
     assert_operator(gs.size, :<=, max)
     gs[0] ||= 0
@@ -1540,7 +1575,7 @@ def test_seteuid
   end
 
   def test_seteuid_name
-    user = ENV["USER"] or return
+    user = (Etc.getpwuid(Process.euid).name rescue ENV["USER"]) or return
     assert_nothing_raised(TypeError) {Process.euid = user}
   rescue NotImplementedError
   end
@@ -1585,22 +1620,28 @@ def test_wait_and_sigchild
       skip "this fails on FreeBSD and OpenBSD on multithreaded environment"
     end
     signal_received = []
-    Signal.trap(:CHLD)  { signal_received << true }
-    pid = nil
-    IO.pipe do |r, w|
-      pid = fork { r.read(1); exit }
-      Thread.start {
-        Thread.current.report_on_exception = false
-        raise
-      }
-      w.puts
+    IO.pipe do |sig_r, sig_w|
+      Signal.trap(:CHLD) do
+        signal_received << true
+        sig_w.write('?')
+      end
+      pid = nil
+      IO.pipe do |r, w|
+        pid = fork { r.read(1); exit }
+        Thread.start {
+          Thread.current.report_on_exception = false
+          raise
+        }
+        w.puts
+      end
+      Process.wait pid
+      assert sig_r.wait_readable(5), 'self-pipe not readable'
     end
-    Process.wait pid
-    10.times do
-      break unless signal_received.empty?
-      sleep 0.01
+    if RubyVM::MJIT.enabled? # checking -DMJIT_FORCE_ENABLE. It may trigger extra SIGCHLD.
+      assert_equal [true], signal_received.uniq, "[ruby-core:19744]"
+    else
+      assert_equal [true], signal_received, "[ruby-core:19744]"
     end
-    assert_equal [true], signal_received, " [ruby-core:19744]"
   rescue NotImplementedError, ArgumentError
   ensure
     begin
@@ -1758,7 +1799,7 @@ def test_daemon_no_threads
           puts Dir.entries("/proc/self/task") - %W[. ..]
         end
         bug4920 = '[ruby-dev:43873]'
-        assert_equal(2, data.size, bug4920)
+        assert_include(1..2, data.size, bug4920)
         assert_not_include(data.map(&:to_i), pid)
       end
     else # darwin
@@ -1812,6 +1853,16 @@ def test_popen_exit
     end
   end
 
+  def test_popen_reopen
+    assert_separately([], "#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
+      io = File.open(IO::NULL)
+      io2 = io.dup
+      IO.popen("echo") {|f| io.reopen(f)}
+      io.reopen(io2)
+    end;
+  end
+
   def test_execopts_new_pgroup
     return unless windows?
 
@@ -1855,7 +1906,12 @@ def test_execopts_gid
     skip "Process.groups not implemented on Windows platform" if windows?
     feature6975 = '[ruby-core:47414]'
 
-    [30000, *Process.groups.map {|g| g = Etc.getgrgid(g); [g.name, g.gid]}].each do |group, gid|
+    groups = Process.groups.map do |g|
+      g = Etc.getgrgid(g) rescue next
+      [g.name, g.gid]
+    end
+    groups.compact!
+    [30000, *groups].each do |group, gid|
       assert_nothing_raised(feature6975) do
         begin
           system(*TRUECOMMAND, gid: group)
@@ -2031,7 +2087,11 @@ def test_clock_gettime_constants
 
   def test_clock_gettime_GETTIMEOFDAY_BASED_CLOCK_REALTIME
     n = :GETTIMEOFDAY_BASED_CLOCK_REALTIME
-    t = Process.clock_gettime(n)
+    begin
+      t = Process.clock_gettime(n)
+    rescue Errno::EINVAL
+      return
+    end
     assert_kind_of(Float, t, "Process.clock_gettime(:#{n})")
   end
 
@@ -2109,7 +2169,11 @@ def test_clock_getres_constants
 
   def test_clock_getres_GETTIMEOFDAY_BASED_CLOCK_REALTIME
     n = :GETTIMEOFDAY_BASED_CLOCK_REALTIME
-    t = Process.clock_getres(n)
+    begin
+      t = Process.clock_getres(n)
+    rescue Errno::EINVAL
+      return
+    end
     assert_kind_of(Float, t, "Process.clock_getres(:#{n})")
     assert_equal(1000, Process.clock_getres(n, :nanosecond))
   end
@@ -2175,7 +2239,7 @@ def test_clock_getres_MACH_ABSOLUTE_TIME_BASED_CLOCK_MONOTONIC
   end
 
   def test_deadlock_by_signal_at_forking
-    assert_separately(["-", RUBY], <<-INPUT, timeout: 80)
+    assert_separately(%W(--disable=gems - #{RUBY}), <<-INPUT, timeout: 100)
       ruby = ARGV.shift
       GC.start # reduce garbage
       GC.disable # avoid triggering CoW after forks
@@ -2183,7 +2247,7 @@ def test_deadlock_by_signal_at_forking
       parent = $$
       100.times do |i|
         pid = fork {Process.kill(:QUIT, parent)}
-        IO.popen(ruby, 'r+'){}
+        IO.popen([ruby, -'--disable=gems'], -'r+'){}
         Process.wait(pid)
         $stdout.puts
         $stdout.flush
diff --git a/test/mri/ruby/test_rand.rb b/test/mri/ruby/test_rand.rb
index 882d33fb405..ab9a1837f6b 100644
--- a/test/mri/ruby/test_rand.rb
+++ b/test/mri/ruby/test_rand.rb
@@ -347,10 +347,15 @@ def test_random_bytes
   end
 
   def assert_random_bytes(r)
+    srand(0)
     assert_equal("", r.bytes(0))
-    assert_equal("\xAC".force_encoding("ASCII-8BIT"), r.bytes(1))
-    assert_equal("/\xAA\xC4\x97u\xA6\x16\xB7\xC0\xCC".force_encoding("ASCII-8BIT"),
-                 r.bytes(10))
+    assert_equal("", Random.bytes(0))
+    x = "\xAC".force_encoding("ASCII-8BIT")
+    assert_equal(x, r.bytes(1))
+    assert_equal(x, Random.bytes(1))
+    x = "/\xAA\xC4\x97u\xA6\x16\xB7\xC0\xCC".force_encoding("ASCII-8BIT")
+    assert_equal(x, r.bytes(10))
+    assert_equal(x, Random.bytes(10))
   end
 
   def test_random_range
@@ -394,6 +399,7 @@ def test_random_float
 
     assert_raise(Errno::EDOM, Errno::ERANGE) { r.rand(1.0 / 0.0) }
     assert_raise(Errno::EDOM, Errno::ERANGE) { r.rand(0.0 / 0.0) }
+    assert_raise(Errno::EDOM) {r.rand(1..)}
 
     r = Random.new(0)
     assert_in_delta(1.5488135039273248, r.rand(1.0...2.0), 0.0001, '[ruby-core:24655]')
diff --git a/test/mri/ruby/test_range.rb b/test/mri/ruby/test_range.rb
index da883767bcc..aa490927174 100644
--- a/test/mri/ruby/test_range.rb
+++ b/test/mri/ruby/test_range.rb
@@ -3,6 +3,7 @@
 require 'delegate'
 require 'timeout'
 require 'bigdecimal'
+require 'rbconfig/sizeof'
 
 class TestRange < Test::Unit::TestCase
   def test_new
@@ -12,6 +13,9 @@ def test_new
 
     assert_raise(ArgumentError) { (1.."3") }
 
+    assert_equal((0..nil), Range.new(0, nil, false))
+    assert_equal((0...nil), Range.new(0, nil, true))
+
     obj = Object.new
     def obj.<=>(other)
       raise RuntimeError, "cmp"
@@ -31,14 +35,17 @@ def test_range_string
     assert_equal(["a"], ("a" .. "a").to_a)
     assert_equal(["a"], ("a" ... "b").to_a)
     assert_equal(["a", "b"], ("a" .. "b").to_a)
+    assert_equal([*"a".."z", "aa"], ("a"..).take(27))
   end
 
   def test_range_numeric_string
     assert_equal(["6", "7", "8"], ("6".."8").to_a, "[ruby-talk:343187]")
     assert_equal(["6", "7"], ("6"..."8").to_a)
     assert_equal(["9", "10"], ("9".."10").to_a)
+    assert_equal(["9", "10"], ("9"..).take(2))
     assert_equal(["09", "10"], ("09".."10").to_a, "[ruby-dev:39361]")
     assert_equal(["9", "10"], (SimpleDelegator.new("9").."10").to_a)
+    assert_equal(["9", "10"], (SimpleDelegator.new("9")..).take(2))
     assert_equal(["9", "10"], ("9"..SimpleDelegator.new("10")).to_a)
   end
 
@@ -73,22 +80,29 @@ def test_min
     assert_equal(1, (1..2).min)
     assert_equal(nil, (2..1).min)
     assert_equal(1, (1...2).min)
+    assert_equal(1, (1..).min)
 
     assert_equal(1.0, (1.0..2.0).min)
     assert_equal(nil, (2.0..1.0).min)
     assert_equal(1, (1.0...2.0).min)
+    assert_equal(1, (1.0..).min)
 
     assert_equal(0, (0..0).min)
     assert_equal(nil, (0...0).min)
 
     assert_equal([0,1,2], (0..10).min(3))
     assert_equal([0,1], (0..1).min(3))
+    assert_equal([0,1,2], (0..).min(3))
+
+    assert_raise(RangeError) { (0..).min {|a, b| a <=> b } }
   end
 
   def test_max
     assert_equal(2, (1..2).max)
     assert_equal(nil, (2..1).max)
     assert_equal(1, (1...2).max)
+    assert_raise(RangeError) { (1..).max }
+    assert_raise(RangeError) { (1...).max }
 
     assert_equal(2.0, (1.0..2.0).max)
     assert_equal(nil, (2.0..1.0).max)
@@ -103,6 +117,8 @@ def test_max
 
     assert_equal([10,9,8], (0..10).max(3))
     assert_equal([9,8,7], (0...10).max(3))
+    assert_raise(RangeError) { (1..).max(3) }
+    assert_raise(RangeError) { (1...).max(3) }
   end
 
   def test_initialize_twice
@@ -123,9 +139,10 @@ def test_marshal
     assert_equal(r, Marshal.load(Marshal.dump(r)))
     r = 1...2
     assert_equal(r, Marshal.load(Marshal.dump(r)))
-    s = Marshal.dump(r)
-    s.sub!(/endi./n, 'end0')
-    assert_raise(ArgumentError) {Marshal.load(s)}
+    r = (1..)
+    assert_equal(r, Marshal.load(Marshal.dump(r)))
+    r = (1...)
+    assert_equal(r, Marshal.load(Marshal.dump(r)))
   end
 
   def test_bad_value
@@ -135,6 +152,8 @@ def test_bad_value
   def test_exclude_end
     assert_not_predicate(0..1, :exclude_end?)
     assert_predicate(0...1, :exclude_end?)
+    assert_not_predicate(0.., :exclude_end?)
+    assert_predicate(0..., :exclude_end?)
   end
 
   def test_eq
@@ -145,8 +164,17 @@ def test_eq
     assert_not_equal(r, (1..2))
     assert_not_equal(r, (0..2))
     assert_not_equal(r, (0...1))
+    assert_not_equal(r, (0..nil))
     subclass = Class.new(Range)
     assert_equal(r, subclass.new(0,1))
+
+    r = (0..nil)
+    assert_equal(r, r)
+    assert_equal(r, (0..nil))
+    assert_not_equal(r, 0)
+    assert_not_equal(r, (0...nil))
+    subclass = Class.new(Range)
+    assert_equal(r, subclass.new(0,nil))
   end
 
   def test_eql
@@ -159,12 +187,25 @@ def test_eql
     assert_not_operator(r, :eql?, 0...1)
     subclass = Class.new(Range)
     assert_operator(r, :eql?, subclass.new(0,1))
+
+    r = (0..nil)
+    assert_operator(r, :eql?, r)
+    assert_operator(r, :eql?, 0..nil)
+    assert_not_operator(r, :eql?, 0)
+    assert_not_operator(r, :eql?, 0...nil)
+    subclass = Class.new(Range)
+    assert_operator(r, :eql?, subclass.new(0,nil))
   end
 
   def test_hash
     assert_kind_of(Integer, (0..1).hash)
     assert_equal((0..1).hash, (0..1).hash)
     assert_not_equal((0..1).hash, (0...1).hash)
+<<<<<<< HEAD
+    assert_equal((0..nil).hash, (0..nil).hash)
+    assert_not_equal((0..nil).hash, (0...nil).hash)
+=======
+>>>>>>> master
     assert_kind_of(String, (0..1).hash.to_s)
   end
 
@@ -173,32 +214,74 @@ def test_step
     (0..10).step {|x| a << x }
     assert_equal([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], a)
 
+    a = []
+    (0..).step {|x| a << x; break if a.size == 10 }
+    assert_equal([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], a)
+
     a = []
     (0..10).step(2) {|x| a << x }
     assert_equal([0, 2, 4, 6, 8, 10], a)
 
-    assert_raise(ArgumentError) { (0..10).step(-1) { } }
+    a = []
+    (0..).step(2) {|x| a << x; break if a.size == 10 }
+    assert_equal([0, 2, 4, 6, 8, 10, 12, 14, 16, 18], a)
+
+    assert_kind_of(Enumerator::ArithmeticSequence, (0..10).step)
+    assert_kind_of(Enumerator::ArithmeticSequence, (0..10).step(2))
+    assert_kind_of(Enumerator::ArithmeticSequence, (0..10).step(0.5))
+    assert_kind_of(Enumerator::ArithmeticSequence, (10..0).step(-1))
+
     assert_raise(ArgumentError) { (0..10).step(0) { } }
+    assert_raise(ArgumentError) { (0..).step(-1) { } }
+    assert_raise(ArgumentError) { (0..).step(0) { } }
 
     a = []
     ("a" .. "z").step(2) {|x| a << x }
     assert_equal(%w(a c e g i k m o q s u w y), a)
 
+    a = []
+    ("a" .. ).step(2) {|x| a << x; break if a.size == 13 }
+    assert_equal(%w(a c e g i k m o q s u w y), a)
+
     a = []
     ("a" .. "z").step(2**32) {|x| a << x }
     assert_equal(["a"], a)
 
+    a = []
+    (:a .. :z).step(2) {|x| a << x }
+    assert_equal(%i(a c e g i k m o q s u w y), a)
+
+    a = []
+    (:a .. ).step(2) {|x| a << x; break if a.size == 13 }
+    assert_equal(%i(a c e g i k m o q s u w y), a)
+
+    a = []
+    (:a .. :z).step(2**32) {|x| a << x }
+    assert_equal([:a], a)
+
     a = []
     (2**32-1 .. 2**32+1).step(2) {|x| a << x }
     assert_equal([4294967295, 4294967297], a)
     zero = (2**32).coerce(0).first
     assert_raise(ArgumentError) { (2**32-1 .. 2**32+1).step(zero) { } }
+    a = []
+    (2**32-1 .. ).step(2) {|x| a << x; break if a.size == 2 }
+    assert_equal([4294967295, 4294967297], a)
+
+    max = RbConfig::LIMITS["FIXNUM_MAX"]
+    a = []
+    (max..).step {|x| a << x; break if a.size == 2 }
+    assert_equal([max, max+1], a)
+    a = []
+    (max..).step(max) {|x| a << x; break if a.size == 4 }
+    assert_equal([max, 2*max, 3*max, 4*max], a)
 
     o1 = Object.new
     o2 = Object.new
     def o1.<=>(x); -1; end
     def o2.<=>(x); 0; end
     assert_raise(TypeError) { (o1..o2).step(1) { } }
+    assert_raise(TypeError) { (o1..).step(1) { } }
 
     class << o1; self; end.class_eval do
       define_method(:succ) { o2 }
@@ -217,6 +300,10 @@ class << o1; self; end.class_eval do
     (0..2).step(0.5) {|x| a << x }
     assert_equal([0, 0.5, 1.0, 1.5, 2.0], a)
 
+    a = []
+    (0..).step(0.5) {|x| a << x; break if a.size == 5 }
+    assert_equal([0, 0.5, 1.0, 1.5, 2.0], a)
+
     a = []
     (0x40000000..0x40000002).step(0.5) {|x| a << x }
     assert_equal([1073741824, 1073741824.5, 1073741825.0, 1073741825.5, 1073741826], a)
@@ -224,6 +311,28 @@ class << o1; self; end.class_eval do
     o = Object.new
     def o.to_int() 1 end
     assert_nothing_raised("[ruby-dev:34558]") { (0..2).step(o) {|x| } }
+
+    o = Object.new
+    class << o
+      def to_str() "a" end
+      def <=>(other) to_str <=> other end
+    end
+
+    a = []
+    (o.."c").step(1) {|x| a << x}
+    assert_equal(["a", "b", "c"], a)
+    a = []
+    (o..).step(1) {|x| a << x; break if a.size >= 3}
+    assert_equal(["a", "b", "c"], a)
+  end
+
+  def test_percent_step
+    aseq = (1..10) % 2
+    assert_equal(Enumerator::ArithmeticSequence, aseq.class)
+    assert_equal(1, aseq.begin)
+    assert_equal(10, aseq.end)
+    assert_equal(2, aseq.step)
+    assert_equal([1, 3, 5, 7, 9], aseq.to_a)
   end
 
   def test_step_ruby_core_35753
@@ -240,6 +349,10 @@ def test_each
     (0..10).each {|x| a << x }
     assert_equal([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], a)
 
+    a = []
+    (0..).each {|x| a << x; break if a.size == 10 }
+    assert_equal([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], a)
+
     o1 = Object.new
     o2 = Object.new
     def o1.setcmp(v) @cmpresult = v end
@@ -280,12 +393,28 @@ class << o1; self; end.class_eval do
     a = []
     r2.each {|x| a << x }
     assert_equal([], a)
+
+    o = Object.new
+    class << o
+      def to_str() "a" end
+      def <=>(other) to_str <=> other end
+    end
+
+    a = []
+    (o.."c").each {|x| a << x}
+    assert_equal(["a", "b", "c"], a)
+    a = []
+    (o..).each {|x| a << x; break if a.size >= 3}
+    assert_equal(["a", "b", "c"], a)
   end
 
   def test_begin_end
     assert_equal(0, (0..1).begin)
     assert_equal(1, (0..1).end)
     assert_equal(1, (0...1).end)
+    assert_equal(0, (0..nil).begin)
+    assert_equal(nil, (0..nil).end)
+    assert_equal(nil, (0...nil).end)
   end
 
   def test_first_last
@@ -304,11 +433,19 @@ def test_first_last
     assert_equal("a", ("a"..."c").first)
     assert_equal("c", ("a"..."c").last)
     assert_equal(0, (2...0).last)
+
+    assert_equal([0, 1, 2], (0..nil).first(3))
+    assert_equal(0, (0..nil).first)
+    assert_equal("a", ("a"..nil).first)
+    assert_raise(RangeError) { (0..nil).last }
+    assert_raise(RangeError) { (0..nil).last(3) }
   end
 
   def test_to_s
     assert_equal("0..1", (0..1).to_s)
     assert_equal("0...1", (0...1).to_s)
+    assert_equal("0..", (0..nil).to_s)
+    assert_equal("0...", (0...nil).to_s)
 
     bug11767 = '[ruby-core:71811] [Bug #11767]'
     assert_predicate(("0".taint.."1").to_s, :tainted?, bug11767)
@@ -319,6 +456,8 @@ def test_to_s
   def test_inspect
     assert_equal("0..1", (0..1).inspect)
     assert_equal("0...1", (0...1).inspect)
+    assert_equal("0..", (0..nil).inspect)
+    assert_equal("0...", (0...nil).inspect)
 
     bug11767 = '[ruby-core:71811] [Bug #11767]'
     assert_predicate(("0".taint.."1").inspect, :tainted?, bug11767)
@@ -329,6 +468,8 @@ def test_inspect
   def test_eqq
     assert_operator(0..10, :===, 5)
     assert_not_operator(0..10, :===, 11)
+    assert_operator(5..nil, :===, 11)
+    assert_not_operator(5..nil, :===, 0)
   end
 
   def test_eqq_time
@@ -336,6 +477,8 @@ def test_eqq_time
     t = Time.now
     assert_nothing_raised(TypeError, bug11113) {
       assert_operator(t..(t+10), :===, t+5)
+      assert_operator(t.., :===, t+5)
+      assert_not_operator(t.., :===, t-5)
     }
   end
 
@@ -363,13 +506,27 @@ def <=>(other)
     assert_operator(c.new(0)..c.new(10), :===, c.new(5), bug12003)
   end
 
+  def test_eqq_non_iteratable
+    k = Class.new do
+      include Comparable
+      attr_reader :i
+      def initialize(i) @i = i; end
+      def <=>(o); i <=> o.i; end
+    end
+    assert_operator(k.new(0)..k.new(2), :===, k.new(1))
+  end
+
   def test_include
     assert_include("a".."z", "c")
     assert_not_include("a".."z", "5")
     assert_include("a"..."z", "y")
     assert_not_include("a"..."z", "z")
     assert_not_include("a".."z", "cc")
+    assert_include("a".., "c")
+    assert_not_include("a".., "5")
     assert_include(0...10, 5)
+    assert_include(5..., 10)
+    assert_not_include(5..., 0)
   end
 
   def test_cover
@@ -378,6 +535,55 @@ def test_cover
     assert_operator("a"..."z", :cover?, "y")
     assert_not_operator("a"..."z", :cover?, "z")
     assert_operator("a".."z", :cover?, "cc")
+    assert_not_operator(5..., :cover?, 0)
+    assert_not_operator(5..., :cover?, "a")
+    assert_operator(5.., :cover?, 10)
+
+    assert_operator(2..5, :cover?, 2..5)
+    assert_operator(2...6, :cover?, 2...6)
+    assert_operator(2...6, :cover?, 2..5)
+    assert_operator(2..5, :cover?, 2...6)
+    assert_operator(2..5, :cover?, 2..4)
+    assert_operator(2..5, :cover?, 2...4)
+    assert_operator(2..5, :cover?, 2...5)
+    assert_operator(2..5, :cover?, 3..5)
+    assert_operator(2..5, :cover?, 3..4)
+    assert_operator(2..5, :cover?, 3...6)
+    assert_operator(2...6, :cover?, 2...5)
+    assert_operator(2...6, :cover?, 2..5)
+    assert_operator(2..6, :cover?, 2...6)
+    assert_operator(2.., :cover?, 2..)
+    assert_operator(2.., :cover?, 3..)
+    assert_operator(1.., :cover?, 1..10)
+    assert_operator(2.0..5.0, :cover?, 2..3)
+    assert_operator(2..5, :cover?, 2.0..3.0)
+    assert_operator(2..5, :cover?, 2.0...3.0)
+    assert_operator(2..5, :cover?, 2.0...5.0)
+    assert_operator(2.0..5.0, :cover?, 2.0...3.0)
+    assert_operator(2.0..5.0, :cover?, 2.0...5.0)
+    assert_operator('aa'..'zz', :cover?, 'aa'...'bb')
+
+    assert_not_operator(2..5, :cover?, 1..5)
+    assert_not_operator(2...6, :cover?, 1..5)
+    assert_not_operator(2..5, :cover?, 1...6)
+    assert_not_operator(1..3, :cover?, 1...6)
+    assert_not_operator(2..5, :cover?, 2..6)
+    assert_not_operator(2...6, :cover?, 2..6)
+    assert_not_operator(2...6, :cover?, 2...7)
+    assert_not_operator(2..3, :cover?, 1..4)
+    assert_not_operator(1..2, :cover?, 1.0..3.0)
+    assert_not_operator(1.0..2.9, :cover?, 1.0..3.0)
+    assert_not_operator(1..2, :cover?, 4..3)
+    assert_not_operator(2..1, :cover?, 1..2)
+    assert_not_operator(1...2, :cover?, 1...3)
+    assert_not_operator(2.., :cover?, 1..)
+    assert_not_operator(2.., :cover?, 1..10)
+    assert_not_operator(1..10, :cover?, 1..)
+    assert_not_operator(1..5, :cover?, 3..2)
+    assert_not_operator(1..10, :cover?, 3...2)
+    assert_not_operator(1..10, :cover?, 3...3)
+    assert_not_operator('aa'..'zz', :cover?, 'aa'...'zzz')
+    assert_not_operator(1..10, :cover?, 1...10.1)
   end
 
   def test_beg_len
@@ -455,6 +661,11 @@ def test_size
     assert_equal 6, (1...6.3).size
     assert_equal 5, (1.1...6).size
     assert_equal 42, (1..42).each.size
+    assert_nil ("a"..."z").size
+
+    assert_equal Float::INFINITY, (1...).size
+    assert_equal Float::INFINITY, (1.0...).size
+    assert_nil ("a"...).size
   end
 
   def test_bsearch_typechecks_return_values
@@ -496,6 +707,8 @@ def test_bsearch_for_fixnum
 
     ary = [0, 100, 100, 100, 200]
     assert_equal(1, (0...ary.size).bsearch {|i| ary[i] >= 100 })
+
+    assert_equal(1_000_001, (0...).bsearch {|i| i > 1_000_000 })
   end
 
   def test_bsearch_for_float
@@ -547,6 +760,8 @@ def test_bsearch_for_float
 
     assert_in_delta(1.0, (0.0..inf).bsearch {|x| Math.log(x) >= 0 })
     assert_in_delta(7.0, (0.0..10).bsearch {|x| 7.0 - x })
+
+    assert_equal(1_000_000.0.next_float, (0.0..).bsearch {|x| x > 1_000_000 })
   end
 
   def check_bsearch_values(range, search, a)
@@ -648,6 +863,7 @@ def test_bsearch_for_bignum
     assert_equal(nil, (bignum...bignum+ary.size).bsearch {|i| ary[i - bignum] >= 100 })
     assert_equal(bignum + 0, (bignum...bignum+ary.size).bsearch {|i| true })
     assert_equal(nil, (bignum...bignum+ary.size).bsearch {|i| false })
+    assert_equal(bignum * 2 + 1, (bignum...).bsearch {|i| i > bignum * 2 })
 
     assert_raise(TypeError) { ("a".."z").bsearch {} }
   end
@@ -659,4 +875,10 @@ def a.upto(x, e, &b)
     end
     (a.."c").each {|x, &b| assert_nil(b)}
   end
+
+  def test_to_a
+    assert_equal([1,2,3,4,5], (1..5).to_a)
+    assert_equal([1,2,3,4], (1...5).to_a)
+    assert_raise(RangeError) { (1..).to_a }
+  end
 end
diff --git a/test/mri/ruby/test_rational.rb b/test/mri/ruby/test_rational.rb
index ae1344d07b0..d87f667ee96 100644
--- a/test/mri/ruby/test_rational.rb
+++ b/test/mri/ruby/test_rational.rb
@@ -110,6 +110,7 @@ def test_conv
     assert_equal(Rational(3),Rational('3'))
     assert_equal(Rational(1),Rational('3.0','3.0'))
     assert_equal(Rational(1),Rational('3/3','3/3'))
+    assert_equal(Rational(111, 1), Rational('1.11e+2'))
     assert_equal(Rational(111, 10), Rational('1.11e+1'))
     assert_equal(Rational(111, 10), Rational('1.11e1'))
     assert_equal(Rational(111, 100), Rational('1.11e0'))
@@ -119,7 +120,35 @@ def test_conv
     assert_raise_with_message(ArgumentError, /\u{221a 2668}/) {
       Rational("\u{221a 2668}")
     }
+    assert_warning('') {
+      assert_predicate(Rational('1e-99999999999999999999'), :zero?)
+    }
+
     assert_raise(TypeError){Rational(Object.new)}
+    assert_raise(TypeError){Rational(Object.new, Object.new)}
+    assert_raise(TypeError){Rational(1, Object.new)}
+
+    o = Object.new
+    def o.to_r; 1/42r; end
+    assert_equal(1/42r, Rational(o))
+    assert_equal(1/84r, Rational(o, 2))
+    assert_equal(42, Rational(1, o))
+    assert_equal(1, Rational(o, o))
+
+    o = Object.new
+    def o.to_r; nil; end
+    assert_raise(TypeError) { Rational(o) }
+    assert_raise(TypeError) { Rational(o, 2) }
+    assert_raise(TypeError) { Rational(1, o) }
+    assert_raise(TypeError) { Rational(o, o) }
+
+    o = Object.new
+    def o.to_r; raise; end
+    assert_raise(RuntimeError) { Rational(o) }
+    assert_raise(RuntimeError) { Rational(o, 2) }
+    assert_raise(RuntimeError) { Rational(1, o) }
+    assert_raise(RuntimeError) { Rational(o, o) }
+
     assert_raise(ArgumentError){Rational()}
     assert_raise(ArgumentError){Rational(1,2,3)}
 
@@ -566,7 +595,7 @@ def test_coerce
     assert_equal([Rational(2.2),Rational(1)], Rational(1).coerce(2.2))
     assert_equal([Rational(2),Rational(1)], Rational(1).coerce(Rational(2)))
 
-    assert_nothing_raised(TypeError, '[Bug #5020] [ruby-devl:44088]') do
+    assert_nothing_raised(TypeError, '[Bug #5020] [ruby-dev:44088]') do
       Rational(1,2).coerce(Complex(1,1))
     end
   end
@@ -779,6 +808,36 @@ def test_parse_zero_denominator
     assert_raise(ZeroDivisionError) {Rational("1/0")}
   end
 
+  def test_Rational_without_exception
+    assert_nothing_raised(ArgumentError) {
+      assert_equal(nil, Rational("5/3x", exception: false))
+    }
+    assert_nothing_raised(ZeroDivisionError) {
+      assert_equal(nil, Rational("1/0", exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Rational(nil, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Rational(Object.new, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Rational(1, nil, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Rational(1, Object.new, exception: false))
+    }
+
+    o = Object.new;
+    def o.to_r; raise; end
+    assert_nothing_raised(RuntimeError) {
+      assert_equal(nil, Rational(o, exception: false))
+    }
+    assert_nothing_raised(TypeError) {
+      assert_equal(nil, Rational(1, o, exception: false))
+    }
+  end
+
   def test_to_i
     assert_equal(1, Rational(3,2).to_i)
     assert_equal(1, Integer(Rational(3,2)))
@@ -787,6 +846,7 @@ def test_to_i
   def test_to_f
     assert_equal(1.5, Rational(3,2).to_f)
     assert_equal(1.5, Float(Rational(3,2)))
+    assert_equal(1e-23, Rational(1, 10**23).to_f, "Bug #14637")
   end
 
   def test_to_c
diff --git a/test/mri/ruby/test_refinement.rb b/test/mri/ruby/test_refinement.rb
index 7725820038f..38d0adbd362 100644
--- a/test/mri/ruby/test_refinement.rb
+++ b/test/mri/ruby/test_refinement.rb
@@ -19,6 +19,10 @@ def a
       return "Foo#a"
     end
 
+    def b
+      return "Foo#b"
+    end
+
     def call_x
       return x
     end
@@ -41,6 +45,10 @@ def z
       def a
         return "FooExt#a"
       end
+
+      private def b
+        return "FooExt#b"
+      end
     end
   end
 
@@ -94,6 +102,18 @@ def self.send_z_on(foo)
         return foo.send(:z)
       end
 
+      def self.send_b_on(foo)
+        return foo.send(:b)
+      end
+
+      def self.public_send_z_on(foo)
+        return foo.public_send(:z)
+      end
+
+      def self.public_send_b_on(foo)
+        return foo.public_send(:b)
+      end
+
       def self.method_z(foo)
         return foo.method(:z)
       end
@@ -179,11 +199,20 @@ def test_send_should_use_refinements
     foo = Foo.new
     assert_raise(NoMethodError) { foo.send(:z) }
     assert_equal("FooExt#z", FooExtClient.send_z_on(foo))
+    assert_equal("FooExt#b", FooExtClient.send_b_on(foo))
     assert_raise(NoMethodError) { foo.send(:z) }
 
     assert_equal(true, RespondTo::Sub.new.respond_to?(:foo))
   end
 
+  def test_public_send_should_use_refinements
+    foo = Foo.new
+    assert_raise(NoMethodError) { foo.public_send(:z) }
+    assert_equal("FooExt#z", FooExtClient.public_send_z_on(foo))
+    assert_equal("Foo#b", foo.public_send(:b))
+    assert_raise(NoMethodError) { FooExtClient.public_send_b_on(foo) }
+  end
+
   def test_method_should_not_use_refinements
     foo = Foo.new
     assert_raise(NameError) { foo.method(:z) }
@@ -297,9 +326,9 @@ def foo; "foo"; end
     end
   end
 
-  def test_respond_to_should_not_use_refinements
+  def test_respond_to_should_use_refinements
     assert_equal(false, 1.respond_to?(:foo))
-    assert_equal(false, eval_using(IntegerFooExt, "1.respond_to?(:foo)"))
+    assert_equal(true, eval_using(IntegerFooExt, "1.respond_to?(:foo)"))
   end
 
   module StringCmpExt
@@ -907,6 +936,10 @@ def self.send_z_on(foo)
       return foo.send(:z)
     end
 
+    def self.public_send_z_on(foo)
+      return foo.public_send(:z)
+    end
+
     def self.method_z(foo)
       return foo.method(:z)
     end
@@ -2010,6 +2043,122 @@ def test_dsym_literal
     assert_equal(:foo, ToSymbol.new("foo").symbol)
   end
 
+  module ToProc
+    def self.call &block
+      block.call
+    end
+
+    class ReturnProc
+      c = self
+      using Module.new {
+        refine c do
+          def to_proc
+            proc { "to_proc" }
+          end
+        end
+      }
+      def call
+        ToProc.call &self
+      end
+    end
+
+    class ReturnNoProc
+      c = self
+      using Module.new {
+        refine c do
+          def to_proc
+            true
+          end
+        end
+      }
+
+      def call
+        ToProc.call &self
+      end
+    end
+
+    class PrivateToProc
+      c = self
+      using Module.new {
+        refine c do
+          private
+          def to_proc
+            proc { "private_to_proc" }
+          end
+        end
+      }
+
+      def call
+        ToProc.call &self
+      end
+    end
+
+
+    class NonProc
+      def call
+        ToProc.call &self
+      end
+    end
+
+    class MethodMissing
+      def method_missing *args
+        proc { "method_missing" }
+      end
+
+      def call
+        ToProc.call &self
+      end
+      end
+
+    class ToProcAndMethodMissing
+      def method_missing *args
+        proc { "method_missing" }
+      end
+
+      c = self
+      using Module.new {
+        refine c do
+          def to_proc
+            proc { "to_proc" }
+          end
+        end
+      }
+
+      def call
+        ToProc.call &self
+      end
+    end
+
+    class ToProcAndRefinements
+      def to_proc
+        proc { "to_proc" }
+      end
+
+      c = self
+      using Module.new {
+        refine c do
+          def to_proc
+            proc { "refinements_to_proc" }
+          end
+        end
+      }
+
+      def call
+        ToProc.call &self
+      end
+    end
+  end
+
+  def test_to_proc
+    assert_equal("to_proc", ToProc::ReturnProc.new.call)
+    assert_equal("private_to_proc", ToProc::PrivateToProc.new.call)
+    assert_raise(TypeError){ ToProc::ReturnNoProc.new.call }
+    assert_raise(TypeError){ ToProc::NonProc.new.call }
+    assert_equal("method_missing", ToProc::MethodMissing.new.call)
+    assert_equal("to_proc", ToProc::ToProcAndMethodMissing.new.call)
+    assert_equal("refinements_to_proc", ToProc::ToProcAndRefinements.new.call)
+  end
+
   def test_unused_refinement_for_module
     bug14068 = '[ruby-core:83613] [Bug #14068]'
     assert_in_out_err([], <<-INPUT, ["M1#foo"], [], bug14068)
diff --git a/test/mri/ruby/test_regexp.rb b/test/mri/ruby/test_regexp.rb
index a22975dbd03..aafad0b6df5 100644
--- a/test/mri/ruby/test_regexp.rb
+++ b/test/mri/ruby/test_regexp.rb
@@ -90,6 +90,11 @@ def test_union
     rescue ArgumentError
       :ok
     end
+    re = Regexp.union(/\//, "")
+    re2 = eval(re.inspect)
+    assert_equal(re.to_s, re2.to_s)
+    assert_equal(re.source, re2.source)
+    assert_equal(re, re2)
   end
 
   def test_word_boundary
@@ -211,6 +216,12 @@ def test_assign_named_capture_to_reserved_word
     assert_not_include(local_variables, :nil, "[ruby-dev:32675]")
   end
 
+  def test_assign_named_capture_to_const
+    %W[C \u{1d402}].each do |name|
+      assert_equal(:ok, Class.new.class_eval("#{name} = :ok; /(?<#{name}>.*)/ =~ 'ng'; #{name}"))
+    end
+  end
+
   def test_assign_named_capture_trace
     bug = '[ruby-core:79940] [Bug #13287]'
     assert_normal_exit("#{<<-"begin;"}\n#{<<-"end;"}", bug)
@@ -515,6 +526,8 @@ def test_unescape
     s = ".........."
     5.times { s.sub!(".", "") }
     assert_equal(".....", s)
+
+    assert_equal("\\\u{3042}", Regexp.new("\\\u{3042}").source)
   end
 
   def test_equal
@@ -948,9 +961,9 @@ def test_cclass_X
     assert_match /\A\X\z/, "\u{600 20}"
     assert_match /\A\X\z/, "\u{261d 1F3FB}"
     assert_match /\A\X\z/, "\u{1f600}"
-    assert_match /\A\X\z/, "\u{20 308}"
-    assert_match /\A\X\X\z/, "\u{a 308}"
-    assert_match /\A\X\X\z/, "\u{d 308}"
+    assert_match /\A\X\z/, "\u{20 324}"
+    assert_match /\A\X\X\z/, "\u{a 324}"
+    assert_match /\A\X\X\z/, "\u{d 324}"
     assert_match /\A\X\z/, "\u{1F477 1F3FF 200D 2640 FE0F}"
     assert_match /\A\X\z/, "\u{1F468 200D 1F393}"
     assert_match /\A\X\z/, "\u{1F46F 200D 2642 FE0F}"
@@ -1062,6 +1075,9 @@ def test_unicode_age
     assert_no_match(/^\p{age=3.0}$/u, "\u2754")
     assert_no_match(/^\p{age=2.0}$/u, "\u2754")
     assert_no_match(/^\p{age=1.1}$/u, "\u2754")
+
+    assert_no_match(/^\p{age=12.0}$/u, "\u32FF")
+    assert_match(/^\p{age=12.1}$/u, "\u32FF")
   end
 
   MatchData_A = eval("class MatchData_\u{3042} < MatchData; self; end")
diff --git a/test/mri/ruby/test_require.rb b/test/mri/ruby/test_require.rb
index 28cf686a265..af8e6e30faa 100644
--- a/test/mri/ruby/test_require.rb
+++ b/test/mri/ruby/test_require.rb
@@ -112,6 +112,8 @@ def self.ospath_encoding(path)
       proc do |require_path|
         $SAFE = 1
         require(require_path)
+      ensure
+        $SAFE = 0
       end
     end
 
diff --git a/test/mri/ruby/test_rubyoptions.rb b/test/mri/ruby/test_rubyoptions.rb
index 54213c4698a..69521b1d239 100644
--- a/test/mri/ruby/test_rubyoptions.rb
+++ b/test/mri/ruby/test_rubyoptions.rb
@@ -1,10 +1,19 @@
 # -*- coding: us-ascii -*-
 require 'test/unit'
 
+require 'timeout'
 require 'tmpdir'
 require 'tempfile'
+require_relative '../lib/jit_support'
 
 class TestRubyOptions < Test::Unit::TestCase
+  NO_JIT_DESCRIPTION =
+    if RubyVM::MJIT.enabled? # checking -DMJIT_FORCE_ENABLE
+      RUBY_DESCRIPTION.sub(/\+JIT /, '')
+    else
+      RUBY_DESCRIPTION
+    end
+
   def write_file(filename, content)
     File.open(filename, "w") {|f|
       f << content
@@ -26,7 +35,7 @@ def test_source_file
 
   def test_usage
     assert_in_out_err(%w(-h)) do |r, e|
-      assert_operator(r.size, :<=, 24)
+      assert_operator(r.size, :<=, 25)
       longer = r[1..-1].select {|x| x.size > 80}
       assert_equal([], longer)
       assert_equal([], e)
@@ -96,10 +105,23 @@ def test_debug
     end
   private_constant :VERSION_PATTERN
 
+  VERSION_PATTERN_WITH_JIT =
+    case RUBY_ENGINE
+    when 'ruby'
+      /^ruby #{q[RUBY_VERSION]}(?:[p ]|dev|rc).*? \+JIT \[#{q[RUBY_PLATFORM]}\]$/
+    else
+      VERSION_PATTERN
+    end
+  private_constant :VERSION_PATTERN_WITH_JIT
+
   def test_verbose
     assert_in_out_err(["-vve", ""]) do |r, e|
       assert_match(VERSION_PATTERN, r[0])
-      assert_equal(RUBY_DESCRIPTION, r[0])
+      if RubyVM::MJIT.enabled? && !mjit_force_enabled? # checking -DMJIT_FORCE_ENABLE
+        assert_equal(NO_JIT_DESCRIPTION, r[0])
+      else
+        assert_equal(RUBY_DESCRIPTION, r[0])
+      end
       assert_equal([], e)
     end
 
@@ -116,9 +138,11 @@ def test_copyright
   end
 
   def test_enable
-    assert_in_out_err(%w(--enable all -e) + [""], "", [], [])
-    assert_in_out_err(%w(--enable-all -e) + [""], "", [], [])
-    assert_in_out_err(%w(--enable=all -e) + [""], "", [], [])
+    if JITSupport.supported?
+      assert_in_out_err(%w(--enable all -e) + [""], "", [], [])
+      assert_in_out_err(%w(--enable-all -e) + [""], "", [], [])
+      assert_in_out_err(%w(--enable=all -e) + [""], "", [], [])
+    end
     assert_in_out_err(%w(--enable foobarbazqux -e) + [""], "", [],
                       /unknown argument for --enable: `foobarbazqux'/)
     assert_in_out_err(%w(--enable), "", [], /missing argument for --enable/)
@@ -133,6 +157,7 @@ def test_disable
     assert_in_out_err(%w(--disable), "", [], /missing argument for --disable/)
     assert_in_out_err(%w(--disable-gems -e) + ['p defined? Gem'], "", ["nil"], [])
     assert_in_out_err(%w(--disable-did_you_mean -e) + ['p defined? DidYouMean'], "", ["nil"], [])
+    assert_in_out_err(%w(--disable-gems -e) + ['p defined? DidYouMean'], "", ["nil"], [])
   end
 
   def test_kanji
@@ -155,9 +180,45 @@ def test_kanji
   def test_version
     assert_in_out_err(%w(--version)) do |r, e|
       assert_match(VERSION_PATTERN, r[0])
-      assert_equal(RUBY_DESCRIPTION, r[0])
+      if RubyVM::MJIT.enabled? # checking -DMJIT_FORCE_ENABLE
+        assert_equal(EnvUtil.invoke_ruby(['-e', 'print RUBY_DESCRIPTION'], '', true).first, r[0])
+      else
+        assert_equal(RUBY_DESCRIPTION, r[0])
+      end
       assert_equal([], e)
     end
+
+    return if RbConfig::CONFIG["MJIT_SUPPORT"] == 'no'
+
+    [
+      %w(--version --jit --disable=jit),
+      %w(--version --enable=jit --disable=jit),
+      %w(--version --enable-jit --disable-jit),
+    ].each do |args|
+      assert_in_out_err(args) do |r, e|
+        assert_match(VERSION_PATTERN, r[0])
+        assert_match(NO_JIT_DESCRIPTION, r[0])
+        assert_equal([], e)
+      end
+    end
+
+    if JITSupport.supported?
+      [
+        %w(--version --jit),
+        %w(--version --enable=jit),
+        %w(--version --enable-jit),
+      ].each do |args|
+        assert_in_out_err(args) do |r, e|
+          assert_match(VERSION_PATTERN_WITH_JIT, r[0])
+          if RubyVM::MJIT.enabled? # checking -DMJIT_FORCE_ENABLE
+            assert_equal(RUBY_DESCRIPTION, r[0])
+          else
+            assert_equal(EnvUtil.invoke_ruby(['--jit', '-e', 'print RUBY_DESCRIPTION'], '', true).first, r[0])
+          end
+          assert_equal([], e)
+        end
+      end
+    end
   end
 
   def test_eval
@@ -386,7 +447,7 @@ def test_assignment_in_conditional
       t.puts "  end"
       t.puts "end"
       t.flush
-      warning = ' warning: found = in conditional, should be =='
+      warning = ' warning: found `= literal\' in conditional, should be =='
       err = ["#{t.path}:1:#{warning}",
              "#{t.path}:4:#{warning}",
             ]
@@ -423,10 +484,18 @@ def test_indentation_check
           "begin", "if false", "for _ in []", "while false",
           "def foo", "class X", "module M",
           ["-> do", "end"], ["-> {", "}"],
+          ["if false;", "else ; end"],
+          ["if false;", "elsif false ; end"],
+          ["begin", "rescue ; end"],
+          ["begin rescue", "else ; end"],
+          ["begin", "ensure ; end"],
+          ["  case nil", "when true; end"],
+          ["case nil; when true", "end"],
         ].each do
           |b, e = 'end'|
           src = ["#{b}\n", " #{e}\n"]
-          k = b[/\A\S+/]
+          k = b[/\A\s*(\S+)/, 1]
+          e = e[/\A\s*(\S+)/, 1]
 
           a.for("no directives with #{b}") do
             err = ["#{t.path}:2: warning: mismatched indentations at '#{e}' with '#{k}' at 1"]
@@ -542,7 +611,7 @@ def test_program_name
 
   if /linux|freebsd|netbsd|openbsd|darwin/ =~ RUBY_PLATFORM
     PSCMD = EnvUtil.find_executable("ps", "-o", "command", "-p", $$.to_s) {|out| /ruby/=~out}
-    PSCMD.pop if PSCMD
+    PSCMD&.pop
   end
 
   def test_set_program_name
@@ -553,14 +622,18 @@ def test_set_program_name
 
       pid = spawn(EnvUtil.rubybin, "test-script")
       ps = nil
-      10.times do
+      now = Process.clock_gettime(Process::CLOCK_MONOTONIC)
+      stop = now + 30
+      begin
         sleep 0.1
         ps = `#{PSCMD.join(' ')} #{pid}`
         break if /hello world/ =~ ps
-      end
+        now = Process.clock_gettime(Process::CLOCK_MONOTONIC)
+      end until Process.wait(pid, Process::WNOHANG) || now > stop
       assert_match(/hello world/, ps)
+      assert_operator now, :<, stop
       Process.kill :KILL, pid
-      Process.wait(pid)
+      Timeout.timeout(5) { Process.wait(pid) }
     end
   end
 
@@ -579,14 +652,18 @@ def test_setproctitle
 
       pid = spawn(EnvUtil.rubybin, "test-script")
       ps = nil
-      10.times do
+      now = Process.clock_gettime(Process::CLOCK_MONOTONIC)
+      stop = now + 30
+      begin
         sleep 0.1
         ps = `#{PSCMD.join(' ')} #{pid}`
         break if /hello world/ =~ ps
-      end
+        now = Process.clock_gettime(Process::CLOCK_MONOTONIC)
+      end until Process.wait(pid, Process::WNOHANG) || now > stop
       assert_match(/hello world/, ps)
+      assert_operator now, :<, stop
       Process.kill :KILL, pid
-      Process.wait(pid)
+      Timeout.timeout(5) { Process.wait(pid) }
     end
   end
 
@@ -605,7 +682,7 @@ module SEGVTest
         -e:(?:1:)?\s\[BUG\]\sSegmentation\sfault.*\n
       )x,
       %r(
-        #{ Regexp.quote(RUBY_DESCRIPTION) }\n\n
+        #{ Regexp.quote(NO_JIT_DESCRIPTION) }\n\n
       )x,
       %r(
         (?:--\s(?:.+\n)*\n)?
@@ -631,7 +708,7 @@ module SEGVTest
         You\smay\shave\sencountered\sa\sbug\sin\sthe\sRuby\sinterpreter\sor\sextension\slibraries.\n
         Bug\sreports\sare\swelcome.\n
         (?:.*\n)?
-        For\sdetails:\shttp:\/\/.*\.ruby-lang\.org/.*\n
+        For\sdetails:\shttps:\/\/.*\.ruby-lang\.org/.*\n
         \n
         (?:
           \[IMPORTANT\]\n
@@ -705,20 +782,6 @@ def test_unused_variable
     assert_in_out_err(["-w", "-"], "eval('a=1')", [], [], feature7730)
   end
 
-  def test_shadowing_variable
-    bug4130 = '[ruby-dev:42718]'
-    assert_in_out_err(["-we", "def foo\n""  a=1\n""  1.times do |a| end\n""  a\n""end"],
-                      "", [], ["-e:3: warning: shadowing outer local variable - a"], bug4130)
-    assert_in_out_err(["-we", "def foo\n""  a=1\n""  1.times do |a| end\n""end"],
-                      "", [],
-                      ["-e:3: warning: shadowing outer local variable - a",
-                       "-e:2: warning: assigned but unused variable - a",
-                      ], bug4130)
-    feature6693 = '[ruby-core:46160]'
-    assert_in_out_err(["-we", "def foo\n""  _a=1\n""  1.times do |_a| end\n""end"],
-                      "", [], [], feature6693)
-  end
-
   def test_script_from_stdin
     begin
       require 'pty'
@@ -947,9 +1010,13 @@ def test_frozen_string_literal_debug
     frozen.product(debugs) do |(opt1, freeze), (opt2, debug)|
       opt = opts + [opt1, opt2].compact
       err = !freeze ? [] : debug ? with_debug_pat : wo_debug_pat
-      assert_in_out_err(opt, '"foo" << "bar"', [], err)
-      if freeze
-        assert_in_out_err(opt, '"foo#{123}bar" << "bar"', [], err)
+      [
+        ['"foo" << "bar"', err],
+        ['"foo#{123}bar" << "bar"', err],
+        ['+"foo#{123}bar" << "bar"', []],
+        ['-"foo#{123}bar" << "bar"', freeze && debug ? with_debug_pat : wo_debug_pat],
+      ].each do |code, expected|
+        assert_in_out_err(opt, code, [], expected, [opt, code])
       end
     end
   end
@@ -987,10 +1054,21 @@ def test_cwd_encoding
     end
   end
 
+  def test_null_script
+    skip "#{IO::NULL} is not a character device" unless File.chardev?(IO::NULL)
+    assert_in_out_err([IO::NULL], success: true)
+  end
+
   def test_argv_tainted
     assert_separately(%w[- arg], "#{<<~"begin;"}\n#{<<~'end;'}")
     begin;
       assert_predicate(ARGV[0], :tainted?, '[ruby-dev:50596] [Bug #14941]')
     end;
   end
+
+  private
+
+  def mjit_force_enabled?
+    "#{RbConfig::CONFIG['CFLAGS']} #{RbConfig::CONFIG['CPPFLAGS']}".match?(/(\A|\s)-D ?MJIT_FORCE_ENABLE\b/)
+  end
 end
diff --git a/test/mri/ruby/test_rubyvm_mjit.rb b/test/mri/ruby/test_rubyvm_mjit.rb
new file mode 100644
index 00000000000..12772320f53
--- /dev/null
+++ b/test/mri/ruby/test_rubyvm_mjit.rb
@@ -0,0 +1,75 @@
+# frozen_string_literal: true
+require 'test/unit'
+require_relative '../lib/jit_support'
+
+return if RbConfig::CONFIG["MJIT_SUPPORT"] == 'no'
+
+class TestRubyVMMJIT < Test::Unit::TestCase
+  include JITSupport
+
+  def setup
+    unless JITSupport.supported?
+      skip 'JIT seems not supported on this platform'
+    end
+  end
+
+  def test_pause
+    out, err = eval_with_jit(<<~'EOS', verbose: 1, min_calls: 1, wait: false)
+      i = 0
+      while i < 5
+        eval("def mjit#{i}; end; mjit#{i}")
+        i += 1
+      end
+      print RubyVM::MJIT.pause
+      print RubyVM::MJIT.pause
+      while i < 10
+        eval("def mjit#{i}; end; mjit#{i}")
+        i += 1
+      end
+      print RubyVM::MJIT.pause # no JIT here
+    EOS
+    assert_equal('truefalsefalse', out)
+    assert_equal(
+      5, err.scan(/#{JITSupport::JIT_SUCCESS_PREFIX}/).size,
+      "unexpected stdout:\n```\n#{out}```\n\nstderr:\n```\n#{err}```",
+    )
+  end
+
+  def test_pause_does_not_hang_on_full_units
+    out, _ = eval_with_jit(<<~'EOS', verbose: 1, min_calls: 1, max_cache: 10, wait: false)
+      i = 0
+      while i < 11
+        eval("def mjit#{i}; end; mjit#{i}")
+        i += 1
+      end
+      print RubyVM::MJIT.pause
+    EOS
+    assert_equal('true', out)
+  end
+
+  def test_pause_wait_false
+    out, err = eval_with_jit(<<~'EOS', verbose: 1, min_calls: 1, wait: false)
+      i = 0
+      while i < 10
+        eval("def mjit#{i}; end; mjit#{i}")
+        i += 1
+      end
+      print RubyVM::MJIT.pause(wait: false)
+      print RubyVM::MJIT.pause(wait: false)
+    EOS
+    assert_equal('truefalse', out)
+    assert_equal(true, err.scan(/#{JITSupport::JIT_SUCCESS_PREFIX}/).size < 10)
+  end
+
+  def test_resume
+    out, err = eval_with_jit(<<~'EOS', verbose: 1, min_calls: 1, wait: false)
+      print RubyVM::MJIT.resume
+      print RubyVM::MJIT.pause
+      print RubyVM::MJIT.resume
+      print RubyVM::MJIT.resume
+      print RubyVM::MJIT.pause
+    EOS
+    assert_equal('falsetruetruefalsetrue', out)
+    assert_equal(0, err.scan(/#{JITSupport::JIT_SUCCESS_PREFIX}/).size)
+  end
+end
diff --git a/test/mri/ruby/test_settracefunc.rb b/test/mri/ruby/test_settracefunc.rb
index 3085c0902af..29b69b7ce38 100644
--- a/test/mri/ruby/test_settracefunc.rb
+++ b/test/mri/ruby/test_settracefunc.rb
@@ -703,6 +703,45 @@ def test_tracepoint_enabled
     assert_equal(false, trace.enabled?)
   end
 
+  def parameter_test(a, b, c)
+    yield
+  end
+
+  def test_tracepoint_parameters
+    trace = TracePoint.new(:line, :class, :end, :call, :return, :b_call, :b_return, :c_call, :c_return, :raise){|tp|
+      next if !target_thread?
+      next if tp.path != __FILE__
+      case tp.event
+      when :call, :return
+        assert_equal([[:req, :a], [:req, :b], [:req, :c]], tp.parameters)
+      when :b_call, :b_return
+        next if tp.parameters == []
+        if tp.parameters.first == [:opt, :x]
+          assert_equal([[:opt, :x], [:opt, :y], [:opt, :z]], tp.parameters)
+        else
+          assert_equal([[:req, :p], [:req, :q], [:req, :r]], tp.parameters)
+        end
+      when :c_call, :c_return
+        assert_equal([[:req]], tp.parameters) if tp.method_id == :getbyte
+      when :line, :class, :end, :raise
+        assert_raise(RuntimeError) { tp.parameters }
+      end
+    }
+    obj = Object.new
+    trace.enable{
+      parameter_test(1, 2, 3) {|x, y, z|
+      }
+      lambda {|p, q, r| }.call(4, 5, 6)
+      "".getbyte(0)
+      class << obj
+      end
+      begin
+        raise
+      rescue
+      end
+    }
+  end
+
   def method_test_tracepoint_return_value obj
     obj
   end
@@ -729,13 +768,13 @@ def method_test_tracepoint_raised_exception err
   end
 
   def test_tracepoint_raised_exception
-    trace = TracePoint.new(:call, :return){|tp|
+    trace = TracePoint.new(:call, :return, :raise){|tp|
       next if !target_thread?
       case tp.event
       when :call, :return
         assert_raise(RuntimeError) { tp.raised_exception }
       when :raise
-        assert_equal(XYZZYError, tp.raised_exception)
+        assert_kind_of(XYZZYException, tp.raised_exception)
       end
     }
     trace.enable{
@@ -812,14 +851,16 @@ def test_tracepoint_thread
 
   def test_tracepoint_inspect
     events = []
+    th = nil
     trace = TracePoint.new{|tp|
-      next if !target_thread?
+      next if !target_thread? && th != Thread.current
       events << [tp.event, tp.inspect]
     }
     assert_equal("#<TracePoint:disabled>", trace.inspect)
     trace.enable{
       assert_equal("#<TracePoint:enabled>", trace.inspect)
-      Thread.new{}.join
+      th = Thread.new{}
+      th.join
     }
     assert_equal("#<TracePoint:disabled>", trace.inspect)
     events.each{|(ev, str)|
@@ -1768,7 +1809,6 @@ def test_trace_point_raising_exception_in_bmethod_call
       define_method(:m) {}
 
       tp = TracePoint.new(:call) do
-        next unless target_thread?
         raise ''
       end
 
@@ -1834,6 +1874,9 @@ def test_thread_add_trace_func
     }
     # it is dirty hack. usually we shouldn't use such technique
     Thread.pass until t.status == 'sleep'
+    # When MJIT thread exists, t.status becomes 'sleep' even if it does not reach m2t_q.pop.
+    # This sleep forces it to reach m2t_q.pop for --jit-wait.
+    sleep 1 if RubyVM::MJIT.enabled?
 
     t.add_trace_func proc{|ev, file, line, *args|
       if file == __FILE__
@@ -1858,4 +1901,247 @@ def test_thread_add_trace_func
     assert_equal ["c-call", base_line + 35],   events[9] # Thread#set_trace_func
     assert_equal nil,                          events[10]
   end
+
+  def test_lineno_in_optimized_insn
+    actual, _, _ = EnvUtil.invoke_ruby [], <<-EOF.gsub(/^.*?: */, ""), true
+      1: class String
+      2:   def -@
+      3:     puts caller_locations(1, 1)[0].lineno
+      4:   end
+      5: end
+      6:
+      7: -""
+    EOF
+    assert_equal "7\n", actual, '[Bug #14809]'
+  end
+
+  def method_for_enable_target1
+    a = 1
+    b = 2
+    1.times{|i|
+      x = i
+    }
+    c = a + b
+  end
+
+  def method_for_enable_target2
+    a = 1
+    b = 2
+    1.times{|i|
+      x = i
+    }
+    c = a + b
+  end
+
+  def check_with_events *trace_events
+    all_events = [[:call, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:b_call, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:b_return, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:return, :method_for_enable_target1],
+                  # repeat
+                  [:call, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:b_call, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:b_return, :method_for_enable_target1],
+                  [:line, :method_for_enable_target1],
+                  [:return, :method_for_enable_target1],
+                 ]
+    events = []
+    TracePoint.new(*trace_events) do |tp|
+      next unless target_thread?
+      events << [tp.event, tp.method_id]
+    end.enable(target: method(:method_for_enable_target1)) do
+      method_for_enable_target1
+      method_for_enable_target2
+      method_for_enable_target1
+    end
+    assert_equal all_events.find_all{|(ev, m)| trace_events.include? ev}, events
+  end
+
+  def test_tracepoint_enable_target
+    check_with_events :line
+    check_with_events :call, :return
+    check_with_events :line, :call, :return
+    check_with_events :call, :return, :b_call, :b_return
+    check_with_events :line, :call, :return, :b_call, :b_return
+  end
+
+  def test_tracepoint_nested_enabled_with_target
+    code1 = proc{
+      a = 1
+    }
+    code2 = proc{
+      b = 2
+    }
+
+    ## error
+
+    # targetted TP and targetted TP
+    ex = assert_raise(ArgumentError) do
+      tp = TracePoint.new(:line){}
+      tp.enable(target: code1){
+        tp.enable(target: code2){}
+      }
+    end
+    assert_equal "can't nest-enable a targetting TracePoint", ex.message
+
+    # global TP and targetted TP
+    ex = assert_raise(ArgumentError) do
+      tp = TracePoint.new(:line){}
+      tp.enable{
+        tp.enable(target: code2){}
+      }
+    end
+    assert_equal "can't nest-enable a targetting TracePoint", ex.message
+
+    # targetted TP and global TP
+    ex = assert_raise(ArgumentError) do
+      tp = TracePoint.new(:line){}
+      tp.enable(target: code1){
+        tp.enable{}
+      }
+    end
+    assert_equal "can't nest-enable a targetting TracePoint", ex.message
+
+    # targetted TP and disable
+    ex = assert_raise(ArgumentError) do
+      tp = TracePoint.new(:line){}
+      tp.enable(target: code1){
+        tp.disable{}
+      }
+    end
+    assert_equal "can't disable a targetting TracePoint in a block", ex.message
+
+    ## success with two nesting targetting tracepoints
+    events = []
+    tp1 = TracePoint.new(:line){|tp| events << :tp1}
+    tp2 = TracePoint.new(:line){|tp| events << :tp2}
+    tp1.enable(target: code1) do
+      tp2.enable(target: code1) do
+        code1.call
+        events << :___
+      end
+    end
+    assert_equal [:tp2, :tp1, :___], events
+
+    # succss with two tracepoints (global/targetting)
+    events = []
+    tp1 = TracePoint.new(:line){|tp| events << :tp1}
+    tp2 = TracePoint.new(:line){|tp| events << :tp2}
+    tp1.enable do
+      tp2.enable(target: code1) do
+        code1.call
+        events << :___
+      end
+    end
+    assert_equal [:tp1, :tp1, :tp1, :tp1, :tp2, :tp1, :___], events
+
+    # succss with two tracepoints (targetting/global)
+    events = []
+    tp1 = TracePoint.new(:line){|tp| events << :tp1}
+    tp2 = TracePoint.new(:line){|tp| events << :tp2}
+    tp1.enable(target: code1) do
+      tp2.enable do
+        code1.call
+        events << :___
+      end
+    end
+    assert_equal [:tp2, :tp2, :tp1, :tp2, :___], events
+  end
+
+  def test_tracepoint_enable_with_target_line
+    events = []
+    line_0 = __LINE__
+    code1 = proc{
+      events << 1
+      events << 2
+      events << 3
+    }
+    tp = TracePoint.new(:line) do |tp|
+      events << :tp
+    end
+    tp.enable(target: code1, target_line: line_0 + 3) do
+      code1.call
+    end
+    assert_equal [1, :tp, 2, 3], events
+
+
+    e = assert_raise(ArgumentError) do
+      TracePoint.new(:line){}.enable(target_line: 10){}
+    end
+    assert_equal 'only target_line is specified', e.message
+
+    e = assert_raise(ArgumentError) do
+      TracePoint.new(:call){}.enable(target: code1, target_line: 10){}
+    end
+    assert_equal 'target_line is specified, but line event is not specified', e.message
+  end
+
+  def test_script_compiled
+    events = []
+    tp = TracePoint.new(:script_compiled){|tp|
+      next unless target_thread?
+      events << [tp.instruction_sequence.path,
+                 tp.eval_script]
+    }
+
+    eval_script = 'a = 1'
+    tp.enable{
+      eval(eval_script, nil, __FILE__+"/eval")
+      nil.instance_eval(eval_script, __FILE__+"/instance_eval")
+      Object.class_eval(eval_script, __FILE__+"/class_eval")
+    }
+    assert_equal [[__FILE__+"/eval", eval_script],
+                  [__FILE__+"/instance_eval", eval_script],
+                  [__FILE__+"/class_eval", eval_script],
+                 ], events
+    events.clear
+
+    # TODO: test for requires
+    return
+
+    tp.enable{
+      require ''
+      require_relative ''
+      load ''
+    }
+    assert_equal [], events
+  end
+
+  def test_return_event_with_rescue
+    obj = Object.new
+    def obj.example
+      1 if 1 == 1
+    rescue
+    end
+    ok = false
+    tp = TracePoint.new(:return) {ok = true}
+    tp.enable {obj.example}
+    assert ok, "return event should be emitted"
+  end
+
+  def test_disable_local_tracepoint_in_trace
+    assert_normal_exit <<-EOS
+    def foo
+      trace = TracePoint.new(:b_return){|tp|
+        tp.disable
+      }
+      trace.enable(target: method(:bar))
+    end
+    def bar
+      100.times{|i|
+        foo; foo
+      }
+    end
+    bar
+    EOS
+  end
 end
diff --git a/test/mri/ruby/test_signal.rb b/test/mri/ruby/test_signal.rb
index 2d98b0b564a..425dc26574c 100644
--- a/test/mri/ruby/test_signal.rb
+++ b/test/mri/ruby/test_signal.rb
@@ -28,7 +28,8 @@ def test_signal
   def test_signal_process_group
     bug4362 = '[ruby-dev:43169]'
     assert_nothing_raised(bug4362) do
-      pid = Process.spawn(EnvUtil.rubybin, '-e', 'sleep 10', :pgroup => true)
+      cmd = [ EnvUtil.rubybin, '--disable=gems' '-e', 'sleep 10' ]
+      pid = Process.spawn(*cmd, :pgroup => true)
       Process.kill(:"-TERM", pid)
       Process.waitpid(pid)
       assert_equal(true, $?.signaled?)
@@ -44,7 +45,7 @@ def test_exit_action
       sig = "INT"
       term = :KILL
     end
-    IO.popen([EnvUtil.rubybin, '-e', <<-"End"], 'r+') do |io|
+    IO.popen([EnvUtil.rubybin, '--disable=gems', '-e', <<-"End"], 'r+') do |io|
         Signal.trap(:#{sig}, "EXIT")
         STDOUT.syswrite("a")
         Thread.start { sleep(2) }
@@ -83,10 +84,12 @@ def test_signal_exception
     assert_raise_with_message(ArgumentError, /\u{30eb 30d3 30fc}/) { SignalException.new("\u{30eb 30d3 30fc}") }
     Signal.list.each do |signm, signo|
       next if signm == "EXIT"
-      assert_equal(SignalException.new(signm).signo, signo)
-      assert_equal(SignalException.new(signm.to_sym).signo, signo)
-      assert_equal(SignalException.new(signo).signo, signo)
+      assert_equal(signo, SignalException.new(signm).signo, signm)
+      assert_equal(signo, SignalException.new(signm.to_sym).signo, signm)
+      assert_equal(signo, SignalException.new(signo).signo, signo)
     end
+    e = assert_raise(ArgumentError) {SignalException.new("-SIGEXIT")}
+    assert_not_match(/SIG-SIG/, e.message)
   end
 
   def test_interrupt
@@ -164,6 +167,8 @@ def o.to_str; "SIGINT"; end
       assert_raise(ArgumentError) { Signal.trap("XXXXXXXXXX", "SIG_DFL") }
 
       assert_raise_with_message(ArgumentError, /\u{30eb 30d3 30fc}/) { Signal.trap("\u{30eb 30d3 30fc}", "SIG_DFL") }
+
+      assert_raise(ArgumentError) { Signal.trap("EXIT\0") {} }
     ensure
       Signal.trap(:INT, oldtrap) if oldtrap
     end
@@ -228,20 +233,20 @@ def test_signame
   end
 
   def test_signame_delivered
-    10.times do
-      IO.popen([EnvUtil.rubybin, "-e", <<EOS, :err => File::NULL]) do |child|
-        Signal.trap("INT") do |signo|
-          signame = Signal.signame(signo)
-          Marshal.dump(signame, STDOUT)
-          STDOUT.flush
-          exit 0
-        end
-        Process.kill("INT", $$)
-        sleep 1  # wait signal deliver
-EOS
+    args = [EnvUtil.rubybin, "--disable=gems", "-e", <<"", :err => File::NULL]
+      Signal.trap("INT") do |signo|
+        signame = Signal.signame(signo)
+        Marshal.dump(signame, STDOUT)
+        STDOUT.flush
+        exit 0
+      end
+      Process.kill("INT", $$)
+      sleep 1  # wait signal deliver
 
+    10.times do
+      IO.popen(args) do |child|
         signame = Marshal.load(child)
-        assert_equal(signame, "INT")
+        assert_equal("INT", signame)
       end
     end
   end if Process.respond_to?(:kill)
@@ -321,4 +326,67 @@ def test_self_stop
       end
     end;
   end
+
+  def test_sigchld_ignore
+    skip 'no SIGCHLD' unless Signal.list['CHLD']
+    old = trap(:CHLD, 'IGNORE')
+    cmd = [ EnvUtil.rubybin, '--disable=gems', '-e' ]
+    assert(system(*cmd, 'exit!(0)'), 'no ECHILD')
+    t0 = Process.clock_gettime(Process::CLOCK_MONOTONIC)
+    IO.pipe do |r, w|
+      pid = spawn(*cmd, "STDIN.read", in: r)
+      nb = Process.wait(pid, Process::WNOHANG)
+      th = Thread.new(Thread.current) do |parent|
+        Thread.pass until parent.stop? # wait for parent to Process.wait
+        w.close
+      end
+      assert_raise(Errno::ECHILD) { Process.wait(pid) }
+      assert_nil nb
+    end
+
+    IO.pipe do |r, w|
+      pids = 3.times.map { spawn(*cmd, 'exit!', out: w) }
+      w.close
+      zombies = pids.dup
+      assert_nil r.read(1), 'children dead'
+
+      Timeout.timeout(10) do
+        zombies.delete_if do |pid|
+          begin
+            Process.kill(0, pid)
+            false
+          rescue Errno::ESRCH
+            true
+          end
+        end while zombies[0]
+      end
+      assert_predicate zombies, :empty?, 'zombies leftover'
+
+      pids.each do |pid|
+        assert_raise(Errno::ECHILD) { Process.waitpid(pid) }
+      end
+    end
+  ensure
+    trap(:CHLD, old) if Signal.list['CHLD']
+  end
+
+  def test_sigwait_fd_unused
+    t = EnvUtil.apply_timeout_scale(0.1)
+    assert_separately([], <<-End)
+      tgt = $$
+      trap(:TERM) { exit(0) }
+      e = "Process.daemon; sleep #{t * 2}; Process.kill(:TERM,\#{tgt})"
+      term = [ '#{EnvUtil.rubybin}', '--disable=gems', '-e', e ]
+      t2 = Thread.new { sleep } # grab sigwait_fd
+      Thread.pass until t2.stop?
+      Thread.new do
+        sleep #{t}
+        t2.kill
+        t2.join
+      end
+      Process.spawn(*term)
+      # last thread remaining, ensure it can react to SIGTERM
+      loop { sleep }
+    End
+  end if Process.respond_to?(:kill) && Process.respond_to?(:daemon)
 end
diff --git a/test/mri/ruby/test_sprintf.rb b/test/mri/ruby/test_sprintf.rb
index a07ac7908b6..7986e9d141a 100644
--- a/test/mri/ruby/test_sprintf.rb
+++ b/test/mri/ruby/test_sprintf.rb
@@ -238,6 +238,12 @@ def test_hash
     assert_equal("with options {:capture=>/\\d+/}", sprintf("with options %p" % options))
   end
 
+  def test_inspect
+    obj = Object.new
+    def obj.inspect; "TEST"; end
+    assert_equal("<TEST>", sprintf("<%p>", obj))
+  end
+
   def test_invalid
     # Star precision before star width:
     assert_raise(ArgumentError, "[ruby-core:11569]") {sprintf("%.**d", 5, 10, 1)}
@@ -524,12 +530,17 @@ def test_negative_width_overflow
   end
 
   def test_no_hidden_garbage
+    skip unless Thread.list.size == 1
+
     fmt = [4, 2, 2].map { |x| "%0#{x}d" }.join('-') # defeats optimization
     ObjectSpace.count_objects(res = {}) # creates strings on first call
+    GC.disable
     before = ObjectSpace.count_objects(res)[:T_STRING]
     val = sprintf(fmt, 1970, 1, 1)
     after = ObjectSpace.count_objects(res)[:T_STRING]
     assert_equal before + 1, after, 'only new string is the created one'
     assert_equal '1970-01-01', val
+  ensure
+    GC.enable
   end
 end
diff --git a/test/mri/ruby/test_string.rb b/test/mri/ruby/test_string.rb
index 9574ed31c99..23da9095924 100644
--- a/test/mri/ruby/test_string.rb
+++ b/test/mri/ruby/test_string.rb
@@ -4,6 +4,11 @@
 class TestString < Test::Unit::TestCase
   ENUMERATOR_WANTARRAY = RUBY_VERSION >= "3.0.0"
 
+  WIDE_ENCODINGS = [
+     Encoding::UTF_16BE, Encoding::UTF_16LE,
+     Encoding::UTF_32BE, Encoding::UTF_32LE,
+  ]
+
   def initialize(*args)
     @cls = String
     @aref_re_nth = true
@@ -667,13 +672,14 @@ def test_crypt
     assert_raise(ArgumentError) {S("mypassword").crypt(S("\0a"))}
     assert_raise(ArgumentError) {S("mypassword").crypt(S("a\0"))}
     assert_raise(ArgumentError) {S("poison\u0000null").crypt(S("aa"))}
-    [Encoding::UTF_16BE, Encoding::UTF_16LE,
-     Encoding::UTF_32BE, Encoding::UTF_32LE].each do |enc|
+    WIDE_ENCODINGS.each do |enc|
       assert_raise(ArgumentError) {S("mypassword").crypt(S("aa".encode(enc)))}
       assert_raise(ArgumentError) {S("mypassword".encode(enc)).crypt(S("aa"))}
     end
 
-    @cls == String and assert_no_memory_leak([], 's = ""', <<~'end;') # do
+    @cls == String and
+      assert_no_memory_leak([], 's = ""', "#{<<~"begin;"}\n#{<<~'end;'}")
+    begin;
       1000.times { s.crypt(-"..").clear  }
     end;
   end
@@ -826,6 +832,9 @@ def test_undump
     assert_raise(RuntimeError) { S('"\xA"').undump }
     assert_raise(RuntimeError) { S('"\\"').undump }
     assert_raise(RuntimeError) { S(%("\0")).undump }
+    assert_raise_with_message(RuntimeError, /invalid/) {
+      '"\\u{007F}".xxxxxx'.undump
+    }
   end
 
   def test_dup
@@ -996,15 +1005,19 @@ def test_each_grapheme_cluster
     ].each do |g|
       assert_equal [g], g.each_grapheme_cluster.to_a
       assert_equal 1, g.each_grapheme_cluster.size
+      assert_predicate g.dup.taint.each_grapheme_cluster.to_a[0], :tainted?
     end
 
     [
-      ["\u{a 308}", ["\u000A", "\u0308"]],
-      ["\u{d 308}", ["\u000D", "\u0308"]],
+      ["\u{a 324}", ["\u000A", "\u0324"]],
+      ["\u{d 324}", ["\u000D", "\u0324"]],
       ["abc", ["a", "b", "c"]],
     ].each do |str, grapheme_clusters|
       assert_equal grapheme_clusters, str.each_grapheme_cluster.to_a
       assert_equal grapheme_clusters.size, str.each_grapheme_cluster.size
+      str.dup.taint.each_grapheme_cluster do |g|
+        assert_predicate g, :tainted?
+      end
     end
 
     s = ("x"+"\u{10ABCD}"*250000)
@@ -1023,12 +1036,20 @@ def test_grapheme_clusters
       "\u{1F468 200D 1F393}",
       "\u{1F46F 200D 2642 FE0F}",
       "\u{1f469 200d 2764 fe0f 200d 1f469}",
-    ].each do |g|
+    ].product([Encoding::UTF_8, *WIDE_ENCODINGS]) do |g, enc|
+      g = g.encode(enc)
       assert_equal [g], g.grapheme_clusters
+      assert_predicate g.taint.grapheme_clusters[0], :tainted?
     end
 
-    assert_equal ["\u000A", "\u0308"], "\u{a 308}".grapheme_clusters
-    assert_equal ["\u000D", "\u0308"], "\u{d 308}".grapheme_clusters
+    [
+      "\u{a 324}",
+      "\u{d 324}",
+      "abc",
+    ].product([Encoding::UTF_8, *WIDE_ENCODINGS]) do |g, enc|
+      g = g.encode(enc)
+      assert_equal g.chars, g.grapheme_clusters
+    end
     assert_equal ["a", "b", "c"], "abc".b.grapheme_clusters
 
     if ENUMERATOR_WANTARRAY
@@ -1038,12 +1059,14 @@ def test_grapheme_clusters
     else
       warning = /passing a block to String#grapheme_clusters is deprecated/
       assert_warning(warning) {
-        s = "ABC".b
+        s = "ABC".b.taint
         res = []
         assert_same s, s.grapheme_clusters {|x| res << x }
+        assert_equal(3, res.size)
         assert_equal("A", res[0])
         assert_equal("B", res[1])
         assert_equal("C", res[2])
+        res.each {|g| assert_predicate(g, :tainted?)}
       }
     end
   end
@@ -1721,8 +1744,49 @@ def test_split
     assert_equal([S("a"), S(""), S("b"), S("c"), S("")], S("a||b|c|").split(S('|'), -1))
 
     assert_equal([], "".split(//, 1))
+  ensure
+    $; = fs
+  end
+
+  def test_split_with_block
+    fs, $; = $;, nil
+    result = []; S(" a   b\t c ").split {|s| result << s}
+    assert_equal([S("a"), S("b"), S("c")], result)
+    result = []; S(" a   b\t c ").split(S(" ")) {|s| result << s}
+    assert_equal([S("a"), S("b"), S("c")], result)
+
+    result = []; S(" a | b | c ").split(S("|")) {|s| result << s}
+    assert_equal([S(" a "), S(" b "), S(" c ")], result)
+
+    result = []; S("aXXbXXcXX").split(/X./) {|s| result << s}
+    assert_equal([S("a"), S("b"), S("c")], result)
+
+    result = []; S("abc").split(//) {|s| result << s}
+    assert_equal([S("a"), S("b"), S("c")], result)
+
+    result = []; S("a|b|c").split(S('|'), 1) {|s| result << s}
+    assert_equal([S("a|b|c")], result)
+
+    result = []; S("a|b|c").split(S('|'), 2) {|s| result << s}
+    assert_equal([S("a"), S("b|c")], result)
+    result = []; S("a|b|c").split(S('|'), 3) {|s| result << s}
+    assert_equal([S("a"), S("b"), S("c")], result)
+
+    result = []; S("a|b|c|").split(S('|'), -1) {|s| result << s}
+    assert_equal([S("a"), S("b"), S("c"), S("")], result)
+    result = []; S("a|b|c||").split(S('|'), -1) {|s| result << s}
+    assert_equal([S("a"), S("b"), S("c"), S(""), S("")], result)
 
-    assert_equal("[2, 3]", [1,2,3].slice!(1,10000).inspect, "moved from btest/knownbug")
+    result = []; S("a||b|c|").split(S('|')) {|s| result << s}
+    assert_equal([S("a"), S(""), S("b"), S("c")], result)
+    result = []; S("a||b|c|").split(S('|'), -1) {|s| result << s}
+    assert_equal([S("a"), S(""), S("b"), S("c"), S("")], result)
+
+    result = []; "".split(//, 1) {|s| result << s}
+    assert_equal([], result)
+
+    result = []; "aaa,bbb,ccc,ddd".split(/,/) {|s| result << s.gsub(/./, "A")}
+    assert_equal(["AAA"]*4, result)
   ensure
     $; = fs
   end
@@ -1755,10 +1819,7 @@ def test_split_encoding
 
   def test_split_wchar
     bug8642 = '[ruby-core:56036] [Bug #8642]'
-    [
-     Encoding::UTF_16BE, Encoding::UTF_16LE,
-     Encoding::UTF_32BE, Encoding::UTF_32LE,
-    ].each do |enc|
+    WIDE_ENCODINGS.each do |enc|
       s = S("abc,def".encode(enc))
       assert_equal(["abc", "def"].map {|c| c.encode(enc)},
                    s.split(",".encode(enc)),
@@ -1785,6 +1846,7 @@ def test_split_dupped
     s.split("b", 1).map(&:upcase!)
     assert_equal("abc", s)
   end
+
   def test_squeeze
     assert_equal(S("abc"), S("aaabbbbccc").squeeze)
     assert_equal(S("aa bb cc"), S("aa   bb      cc").squeeze(S(" ")))
@@ -2973,8 +3035,7 @@ def test_shared_force_encoding
 
   def test_ascii_incomat_inspect
     bug4081 = '[ruby-core:33283]'
-    [Encoding::UTF_16LE, Encoding::UTF_16BE,
-     Encoding::UTF_32LE, Encoding::UTF_32BE].each do |e|
+    WIDE_ENCODINGS.each do |e|
       assert_equal('"abc"', "abc".encode(e).inspect)
       assert_equal('"\\u3042\\u3044\\u3046"', "\u3042\u3044\u3046".encode(e).inspect)
       assert_equal('"ab\\"c"', "ab\"c".encode(e).inspect, bug4081)
diff --git a/test/mri/ruby/test_struct.rb b/test/mri/ruby/test_struct.rb
index 384c95f85bf..4748419d6b4 100644
--- a/test/mri/ruby/test_struct.rb
+++ b/test/mri/ruby/test_struct.rb
@@ -212,6 +212,13 @@ def test_select
     assert_raise(ArgumentError) { o.select(1) }
   end
 
+  def test_filter
+    klass = @Struct.new(:a, :b, :c, :d, :e, :f)
+    o = klass.new(1, 2, 3, 4, 5, 6)
+    assert_equal([1, 3, 5], o.filter {|v| v % 2 != 0 })
+    assert_raise(ArgumentError) { o.filter(1) }
+  end
+
   def test_big_struct
     klass1 = @Struct.new(*('a'..'z').map(&:to_sym))
     o = klass1.new
@@ -355,6 +362,13 @@ def test_to_h
     assert_equal({a:1, b:2, c:3, d:4, e:5, f:6}, o.to_h)
   end
 
+  def test_to_h_block
+    klass = @Struct.new(:a, :b, :c, :d, :e, :f)
+    o = klass.new(1, 2, 3, 4, 5, 6)
+    assert_equal({"a" => 1, "b" => 4, "c" => 9, "d" => 16, "e" => 25, "f" => 36},
+                 o.to_h {|k, v| [k.to_s, v*v]})
+  end
+
   def test_question_mark_in_member
     klass = @Struct.new(:a, :b?)
     x = Object.new
diff --git a/test/mri/ruby/test_super.rb b/test/mri/ruby/test_super.rb
index cf7580ab00d..bb78ab516f8 100644
--- a/test/mri/ruby/test_super.rb
+++ b/test/mri/ruby/test_super.rb
@@ -102,11 +102,11 @@ def test_optional1
   def test_optional2
     assert_raise(ArgumentError) do
       # call Base#optional with 2 arguments; the 2nd arg is supplied
-      assert_equal(9, Optional2.new.optional(9))
+      Optional2.new.optional(9)
     end
     assert_raise(ArgumentError) do
       # call Base#optional with 2 arguments
-      assert_equal(9, Optional2.new.optional(9, 2))
+      Optional2.new.optional(9, 2)
     end
   end
   def test_optional3
diff --git a/test/mri/ruby/test_symbol.rb b/test/mri/ruby/test_symbol.rb
index 36cbf4a7109..13d7cc9d573 100644
--- a/test/mri/ruby/test_symbol.rb
+++ b/test/mri/ruby/test_symbol.rb
@@ -161,6 +161,42 @@ def test_to_proc_call_with_symbol_proc
     assert_equal(1, first, bug11594)
   end
 
+  class TestToPRocArgWithRefinements; end
+  def _test_to_proc_arg_with_refinements_call(&block)
+    block.call TestToPRocArgWithRefinements.new
+  end
+  using Module.new {
+    refine TestToPRocArgWithRefinements do
+      def hoge
+        :hoge
+      end
+    end
+  }
+  def test_to_proc_arg_with_refinements
+    assert_equal(:hoge, _test_to_proc_arg_with_refinements_call(&:hoge))
+  end
+
+  def self._test_to_proc_arg_with_refinements_call(&block)
+    block.call TestToPRocArgWithRefinements.new
+  end
+  _test_to_proc_arg_with_refinements_call(&:hoge)
+  using Module.new {
+    refine TestToPRocArgWithRefinements do
+      def hoge
+        :hogehoge
+      end
+    end
+  }
+  def test_to_proc_arg_with_refinements_override
+    assert_equal(:hogehoge, _test_to_proc_arg_with_refinements_call(&:hoge))
+  end
+
+  def test_to_proc_arg_with_refinements_undefined
+    assert_raise(NoMethodError) do
+      _test_to_proc_arg_with_refinements_call(&:foo)
+    end
+  end
+
   private def return_from_proc
     Proc.new { return 1 }.tap(&:call)
   end
diff --git a/test/mri/ruby/test_syntax.rb b/test/mri/ruby/test_syntax.rb
index f8d28a4f8e7..a9d880f2a25 100644
--- a/test/mri/ruby/test_syntax.rb
+++ b/test/mri/ruby/test_syntax.rb
@@ -46,7 +46,7 @@ def test_must_ascii_compatible
       assert_raise(ArgumentError, enc.name) {load(f.path)}
     end
   ensure
-    f.close! if f
+    f&.close!
   end
 
   def test_script_lines
@@ -63,7 +63,7 @@ def test_script_lines
       end
     end
   ensure
-    f.close! if f
+    f&.close!
   end
 
   def test_newline_in_block_parameters
@@ -406,21 +406,30 @@ def test_cmdarg_kwarg_lvar_clashing_method
   def test_duplicated_arg
     assert_syntax_error("def foo(a, a) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_, _) end")
+    (obj = Object.new).instance_eval("def foo(_, x, _) x end")
+    assert_equal(2, obj.foo(1, 2, 3))
   end
 
   def test_duplicated_rest
     assert_syntax_error("def foo(a, *a) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_, *_) end")
+    (obj = Object.new).instance_eval("def foo(_, x, *_) x end")
+    assert_equal(2, obj.foo(1, 2, 3))
   end
 
   def test_duplicated_opt
     assert_syntax_error("def foo(a, a=1) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_, _=1) end")
+    (obj = Object.new).instance_eval("def foo(_, x, _=42) x end")
+    assert_equal(2, obj.foo(1, 2))
   end
 
   def test_duplicated_opt_rest
     assert_syntax_error("def foo(a=1, *a) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_=1, *_) end")
+    (obj = Object.new).instance_eval("def foo(_, x=42, *_) x end")
+    assert_equal(42, obj.foo(1))
+    assert_equal(2, obj.foo(1, 2))
   end
 
   def test_duplicated_rest_opt
@@ -429,41 +438,80 @@ def test_duplicated_rest_opt
 
   def test_duplicated_rest_post
     assert_syntax_error("def foo(*a, a) end", /duplicated argument name/)
+    assert_valid_syntax("def foo(*_, _) end")
+    (obj = Object.new).instance_eval("def foo(*_, x, _) x end")
+    assert_equal(2, obj.foo(1, 2, 3))
+    assert_equal(2, obj.foo(2, 3))
+    (obj = Object.new).instance_eval("def foo(*_, _, x) x end")
+    assert_equal(3, obj.foo(1, 2, 3))
+    assert_equal(3, obj.foo(2, 3))
   end
 
   def test_duplicated_opt_post
     assert_syntax_error("def foo(a=1, a) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_=1, _) end")
+    (obj = Object.new).instance_eval("def foo(_=1, x, _) x end")
+    assert_equal(2, obj.foo(1, 2, 3))
+    assert_equal(2, obj.foo(2, 3))
+    (obj = Object.new).instance_eval("def foo(_=1, _, x) x end")
+    assert_equal(3, obj.foo(1, 2, 3))
+    assert_equal(3, obj.foo(2, 3))
   end
 
   def test_duplicated_kw
     assert_syntax_error("def foo(a, a: 1) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_, _: 1) end")
+    (obj = Object.new).instance_eval("def foo(_, x, _: 1) x end")
+    assert_equal(3, obj.foo(2, 3))
+    assert_equal(3, obj.foo(2, 3, _: 42))
+    (obj = Object.new).instance_eval("def foo(x, _, _: 1) x end")
+    assert_equal(2, obj.foo(2, 3))
+    assert_equal(2, obj.foo(2, 3, _: 42))
   end
 
   def test_duplicated_rest_kw
     assert_syntax_error("def foo(*a, a: 1) end", /duplicated argument name/)
     assert_nothing_raised {def foo(*_, _: 1) end}
+    (obj = Object.new).instance_eval("def foo(*_, x: 42, _: 1) x end")
+    assert_equal(42, obj.foo(42))
+    assert_equal(42, obj.foo(2, _: 0))
+    assert_equal(2, obj.foo(x: 2, _: 0))
   end
 
   def test_duplicated_opt_kw
     assert_syntax_error("def foo(a=1, a: 1) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_=1, _: 1) end")
+    (obj = Object.new).instance_eval("def foo(_=42, x, _: 1) x end")
+    assert_equal(0, obj.foo(0))
+    assert_equal(0, obj.foo(0, _: 3))
   end
 
   def test_duplicated_kw_kwrest
     assert_syntax_error("def foo(a: 1, **a) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_: 1, **_) end")
+    (obj = Object.new).instance_eval("def foo(_: 1, x: 42, **_) x end")
+    assert_equal(42, obj.foo())
+    assert_equal(42, obj.foo(a: 0))
+    assert_equal(42, obj.foo(_: 0, a: 0))
+    assert_equal(1, obj.foo(_: 0, x: 1, a: 0))
   end
 
   def test_duplicated_rest_kwrest
     assert_syntax_error("def foo(*a, **a) end", /duplicated argument name/)
     assert_valid_syntax("def foo(*_, **_) end")
+    (obj = Object.new).instance_eval("def foo(*_, x, **_) x end")
+    assert_equal(1, obj.foo(1))
+    assert_equal(1, obj.foo(1, a: 0))
+    assert_equal(2, obj.foo(1, 2, a: 0))
   end
 
   def test_duplicated_opt_kwrest
     assert_syntax_error("def foo(a=1, **a) end", /duplicated argument name/)
     assert_valid_syntax("def foo(_=1, **_) end")
+    (obj = Object.new).instance_eval("def foo(_=42, x, **_) x end")
+    assert_equal(1, obj.foo(1))
+    assert_equal(1, obj.foo(1, a: 0))
+    assert_equal(1, obj.foo(0, 1, a: 0))
   end
 
   def test_duplicated_when
@@ -711,6 +759,13 @@ def test_dedented_heredoc_invalid_identifer
     assert_syntax_error('<<~ "#{}"', /unexpected <</)
   end
 
+<<<<<<< HEAD
+  def test_dedented_heredoc_concatenation
+    assert_equal("\n0\n1", eval("<<~0 '1'\n \n0\#{}\n0"))
+  end
+
+=======
+>>>>>>> master
   def test_heredoc_mixed_encoding
     assert_syntax_error(<<-'HEREDOC', 'UTF-8 mixed within Windows-31J source')
       #encoding: cp932
@@ -964,7 +1019,7 @@ def test_undef_symbol
   end
 
   def test_parenthesised_statement_argument
-    assert_syntax_error("foo(bar rescue nil)", /unexpected modifier_rescue/)
+    assert_syntax_error("foo(bar rescue nil)", /unexpected rescue \(modifier\)/)
     assert_valid_syntax("foo (bar rescue nil)")
   end
 
@@ -1186,6 +1241,24 @@ def test_rescue_do_end_ensure_result
     assert_equal(:begin, result)
   end
 
+  def test_rescue_do_end_ensure_in_lambda
+    result = []
+    eval("#{<<-"begin;"}\n#{<<-"end;"}")
+    begin;
+      -> do
+        result << :begin
+        raise "An exception occurred!"
+      rescue
+        result << :rescue
+      else
+        result << :else
+      ensure
+        result << :ensure
+      end.call
+    end;
+    assert_equal([:begin, :rescue, :ensure], result)
+  end
+
   def test_return_in_loop
     obj = Object.new
     def obj.test
@@ -1195,6 +1268,47 @@ def obj.test
     assert_nil obj.test
   end
 
+  def test_method_call_location
+    line = __LINE__+5
+    e = assert_raise(NoMethodError) do
+      1.upto(0) do
+      end
+        .
+        foo(
+          1,
+          2,
+        )
+    end
+    assert_equal(line, e.backtrace_locations[0].lineno)
+
+    line = __LINE__+5
+    e = assert_raise(NoMethodError) do
+      1.upto 0 do
+      end
+        .
+        foo(
+          1,
+          2,
+        )
+    end
+    assert_equal(line, e.backtrace_locations[0].lineno)
+  end
+
+  def test_methoddef_in_cond
+    assert_valid_syntax('while def foo; tap do end; end; break; end')
+    assert_valid_syntax('while def foo a = tap do end; end; break; end')
+  end
+
+  def test_classdef_in_cond
+    assert_valid_syntax('while class Foo; tap do end; end; break; end')
+    assert_valid_syntax('while class Foo a = tap do end; end; break; end')
+  end
+
+  def test_command_with_cmd_brace_block
+    assert_valid_syntax('obj.foo (1) {}')
+    assert_valid_syntax('obj::foo (1) {}')
+  end
+
   private
 
   def not_label(x) @result = x; @not_label ||= nil end
diff --git a/test/mri/ruby/test_system.rb b/test/mri/ruby/test_system.rb
index 60037ab0444..477767905bf 100644
--- a/test/mri/ruby/test_system.rb
+++ b/test/mri/ruby/test_system.rb
@@ -160,4 +160,45 @@ def test_fallback_to_sh
       assert_equal(true, system(tmpfilename), '[ruby-core:32745]')
     }
   end if File.executable?("/bin/sh")
+
+  def test_system_exception
+    ruby = EnvUtil.rubybin
+    assert_nothing_raised do
+      system('feature_14235', exception: false)
+    end
+    assert_nothing_raised do
+      system(ruby, "-e", "abort", exception: false)
+    end
+    assert_nothing_raised do
+      system("'#{ruby}' -e abort", exception: false)
+    end
+    assert_raise(Errno::ENOENT) do
+      system('feature_14235', exception: true)
+    end
+    assert_raise_with_message(RuntimeError, /\ACommand failed with exit /) do
+      system(ruby, "-e", "abort", exception: true)
+    end
+    assert_raise_with_message(RuntimeError, /\ACommand failed with exit /) do
+      system("'#{ruby}' -e abort", exception: true)
+    end
+  end
+
+  def test_system_exception_nonascii
+    Dir.mktmpdir("ruby_script_tmp") do |tmpdir|
+      name = "\u{30c6 30b9 30c8}"
+      tmpfilename = "#{tmpdir}/#{name}.cmd"
+      message = /#{name}\.cmd/
+      e = assert_raise_with_message(Errno::ENOENT, message) do
+        system(tmpfilename, exception: true)
+      end
+      open(tmpfilename, "w") {|f|
+        f.print "@" if /mingw|mswin/ =~ RUBY_PLATFORM
+        f.puts "exit 127"
+        f.chmod(0755)
+      }
+      e = assert_raise_with_message(RuntimeError, message) do
+        system(tmpfilename, exception: true)
+      end
+    end
+  end
 end
diff --git a/test/mri/ruby/test_thread.rb b/test/mri/ruby/test_thread.rb
index 135d17237e1..51c03385955 100644
--- a/test/mri/ruby/test_thread.rb
+++ b/test/mri/ruby/test_thread.rb
@@ -1,6 +1,8 @@
 # -*- coding: us-ascii -*-
 # frozen_string_literal: false
 require 'test/unit'
+require "rbconfig/sizeof"
+require "timeout"
 
 class TestThread < Test::Unit::TestCase
   class Thread < ::Thread
@@ -166,6 +168,8 @@ def test_priority
     t1.kill
     t2.kill
     assert_operator(c1, :>, c2, "[ruby-dev:33124]") # not guaranteed
+    t1.join
+    t2.join
   end
 
   def test_new
@@ -184,8 +188,8 @@ def test_new
     end
 
   ensure
-    t1.kill if t1
-    t2.kill if t2
+    t1&.kill&.join
+    t2&.kill&.join
   end
 
   def test_new_symbol_proc
@@ -201,7 +205,7 @@ def test_join
     assert_nil(t.join(0.05))
 
   ensure
-    t.kill if t
+    t&.kill&.join
   end
 
   def test_join2
@@ -222,9 +226,39 @@ def test_join2
     assert_equal(t1, t3.value)
 
   ensure
-    t1.kill if t1
-    t2.kill if t2
-    t3.kill if t3
+    t1&.kill
+    t2&.kill
+    t3&.kill
+  end
+
+  { 'FIXNUM_MAX' => RbConfig::LIMITS['FIXNUM_MAX'],
+    'UINT64_MAX' => RbConfig::LIMITS['UINT64_MAX'],
+    'INFINITY'   => Float::INFINITY
+  }.each do |name, limit|
+    define_method("test_join_limit_#{name}") do
+      t = Thread.new {}
+      assert_same t, t.join(limit), "limit=#{limit.inspect}"
+    end
+  end
+
+  { 'minus_1'        => -1,
+    'minus_0_1'      => -0.1,
+    'FIXNUM_MIN'     => RbConfig::LIMITS['FIXNUM_MIN'],
+    'INT64_MIN'      => RbConfig::LIMITS['INT64_MIN'],
+    'minus_INFINITY' => -Float::INFINITY
+  }.each do |name, limit|
+    define_method("test_join_limit_negative_#{name}") do
+      t = Thread.new { sleep }
+      begin
+        assert_nothing_raised(Timeout::Error) do
+          Timeout.timeout(30) do
+            assert_nil t.join(limit), "limit=#{limit.inspect}"
+          end
+        end
+      ensure
+        t.kill
+      end
+    end
   end
 
   def test_kill_main_thread
@@ -271,14 +305,14 @@ def test_wakeup
       s += 1
     end
     Thread.pass until t.stop?
+    sleep 1 if RubyVM::MJIT.enabled? # t.stop? behaves unexpectedly with --jit-wait
     assert_equal(1, s)
     t.wakeup
     Thread.pass while t.alive?
     assert_equal(2, s)
     assert_raise(ThreadError) { t.wakeup }
-
   ensure
-    t.kill if t
+    t&.kill&.join
   end
 
   def test_stop
@@ -399,6 +433,7 @@ def test_report_on_exception
         }
         assert_equal(false, q1.pop)
         Thread.pass while th.alive?
+        assert_raise(RuntimeError) { th.join }
       }
 
       assert_warn(/report 2/, "exception should be reported when true") {
@@ -408,6 +443,7 @@ def test_report_on_exception
         }
         assert_equal(true, q1.pop)
         Thread.pass while th.alive?
+        assert_raise(RuntimeError) { th.join }
       }
 
       assert_warn("", "the global flag should not affect already started threads") {
@@ -420,6 +456,7 @@ def test_report_on_exception
         q2.push(Thread.report_on_exception = true)
         assert_equal(false, q1.pop)
         Thread.pass while th.alive?
+        assert_raise(RuntimeError) { th.join }
       }
 
       assert_warn(/report 4/, "should defaults to the global flag at the start") {
@@ -430,6 +467,7 @@ def test_report_on_exception
         }
         assert_equal(true, q1.pop)
         Thread.pass while th.alive?
+        assert_raise(RuntimeError) { th.join }
       }
 
       assert_warn(/report 5/, "should first report and then raise with report_on_exception + abort_on_exception") {
@@ -443,6 +481,7 @@ def test_report_on_exception
           q2.push(true)
           Thread.pass while th.alive?
         }
+        assert_raise(RuntimeError) { th.join }
       }
     end;
   end
@@ -470,11 +509,10 @@ def test_status_and_stop_p
     es1 = e.status
     es2 = e.stop?
     assert_equal(["run", false], [es1, es2])
-
+    assert_raise(RuntimeError) { a.join }
   ensure
-    a.kill if a
-    b.kill if b
-    c.kill if c
+    b&.kill&.join
+    c&.join
   end
 
   def test_switch_while_busy_loop
@@ -492,7 +530,7 @@ def test_switch_while_busy_loop
     end
     assert(!flag, bug1402)
   ensure
-    waiter.kill.join
+    waiter&.kill&.join
   end
 
   def test_safe_level
@@ -505,11 +543,11 @@ def test_safe_level
       sleep
     end
     Thread.pass until ok
-    assert_equal(0, Thread.current.safe_level)
-    assert_equal(1, t.safe_level)
-
+    assert_equal($SAFE, Thread.current.safe_level)
+    assert_equal($SAFE, t.safe_level)
   ensure
-    t.kill if t
+    $SAFE = 0
+    t&.kill&.join
   end
 
   def test_thread_local
@@ -529,7 +567,7 @@ def test_thread_local
     assert_equal([:foo, :bar, :baz].sort, t.keys.sort)
 
   ensure
-    t.kill if t
+    t&.kill&.join
   end
 
   def test_thread_local_fetch
@@ -561,7 +599,7 @@ def test_thread_local_fetch
     assert_equal(:qux, e.key)
     assert_equal(t, e.receiver)
   ensure
-    t.kill if t
+    t&.kill&.join
   end
 
   def test_thread_local_security
@@ -591,7 +629,8 @@ def test_select_wait
     end
     Thread.pass until t.stop?
     assert_predicate(t, :alive?)
-    t.kill
+  ensure
+    t&.kill
   end
 
   def test_mutex_deadlock
@@ -919,15 +958,16 @@ def test_backtrace
   def test_thread_timer_and_interrupt
     bug5757 = '[ruby-dev:44985]'
     pid = nil
-    cmd = 'Signal.trap(:INT, "DEFAULT"); r,=IO.pipe; Thread.start {Thread.pass until Thread.main.stop?; puts; STDOUT.flush}; r.read'
+    cmd = 'Signal.trap(:INT, "DEFAULT"); pipe=IO.pipe; Thread.start {Thread.pass until Thread.main.stop?; puts; STDOUT.flush}; pipe[0].read'
     opt = {}
     opt[:new_pgroup] = true if /mswin|mingw/ =~ RUBY_PLATFORM
     s, t, _err = EnvUtil.invoke_ruby(['-e', cmd], "", true, true, opt) do |in_p, out_p, err_p, cpid|
+      assert IO.select([out_p], nil, nil, 10), 'subprocess not ready'
       out_p.gets
       pid = cpid
       t0 = Time.now.to_f
       Process.kill(:SIGINT, pid)
-      Process.wait(pid)
+      Timeout.timeout(10) { Process.wait(pid) }
       t1 = Time.now.to_f
       [$?, t1 - t0, err_p.read]
     end
@@ -1072,7 +1112,7 @@ def test_mutex_owned2
       Thread.pass until mutex.locked?
       assert_equal(mutex.owned?, false)
     ensure
-      th.kill if th
+      th&.kill
     end
   end
 
@@ -1199,6 +1239,42 @@ def test_fork_while_locked
     end
   end if Process.respond_to?(:fork)
 
+  def test_fork_while_parent_locked
+    skip 'needs fork' unless Process.respond_to?(:fork)
+    m = Thread::Mutex.new
+    nr = 1
+    thrs = []
+    m.synchronize do
+      thrs = nr.times.map { Thread.new { m.synchronize {} } }
+      thrs.each { Thread.pass }
+      pid = fork do
+        m.locked? or exit!(2)
+        thrs = nr.times.map { Thread.new { m.synchronize {} } }
+        m.unlock
+        thrs.each { |t| t.join(1) == t or exit!(1) }
+        exit!(0)
+      end
+      _, st = Process.waitpid2(pid)
+      assert_predicate st, :success?, '[ruby-core:90312] [Bug #15383]'
+    end
+    thrs.each { |t| assert_same t, t.join(1) }
+  end
+
+  def test_fork_while_mutex_locked_by_forker
+    skip 'needs fork' unless Process.respond_to?(:fork)
+    m = Mutex.new
+    m.synchronize do
+      pid = fork do
+        exit!(2) unless m.locked?
+        m.unlock rescue exit!(3)
+        m.synchronize {} rescue exit!(4)
+        exit!(0)
+      end
+      _, st = Timeout.timeout(30) { Process.waitpid2(pid) }
+      assert_predicate st, :success?, '[ruby-core:90595] [Bug #15430]'
+    end
+  end
+
   def test_subclass_no_initialize
     t = Module.new do
       break eval("class C\u{30b9 30ec 30c3 30c9} < Thread; self; end")
@@ -1253,12 +1329,18 @@ def test_thread_setname_in_initialize
   end
 
   def test_thread_interrupt_for_killed_thread
-    assert_normal_exit(<<-_end, '[Bug #8996]', timeout: 5, timeout_error: nil)
+    opts = { timeout: 5, timeout_error: nil }
+
+    # prevent SIGABRT from slow shutdown with MJIT
+    opts[:reprieve] = 3 if RubyVM::MJIT.enabled?
+
+    assert_normal_exit(<<-_end, '[Bug #8996]', opts)
       Thread.report_on_exception = false
       trap(:TERM){exit}
       while true
         t = Thread.new{sleep 0}
         t.raise Interrupt
+        Thread.pass # allow t to finish
       end
     _end
   end
@@ -1268,7 +1350,7 @@ def test_signal_at_join
       skip "can't trap a signal from another process on Windows"
       # opt = {new_pgroup: true}
     end
-    assert_separately([], "#{<<~"{#"}\n#{<<~'};'}")
+    assert_separately([], "#{<<~"{#"}\n#{<<~'};'}", timeout: 120)
     {#
       n = 1000
       sig = :INT
diff --git a/test/mri/ruby/test_thread_cv.rb b/test/mri/ruby/test_thread_cv.rb
new file mode 100644
index 00000000000..38bcc3b8fa7
--- /dev/null
+++ b/test/mri/ruby/test_thread_cv.rb
@@ -0,0 +1,245 @@
+# frozen_string_literal: false
+require 'test/unit'
+require 'tmpdir'
+
+class TestThreadConditionVariable < Test::Unit::TestCase
+  ConditionVariable = Thread::ConditionVariable
+  Mutex = Thread::Mutex
+
+  def test_initialized
+    assert_raise(TypeError) {
+      ConditionVariable.allocate.wait(nil)
+    }
+  end
+
+  def test_condvar_signal_and_wait
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+    result = []
+    mutex.synchronize do
+      t = Thread.new do
+        mutex.synchronize do
+          result << 1
+          condvar.signal
+        end
+      end
+
+      result << 0
+      condvar.wait(mutex)
+      result << 2
+      t.join
+    end
+    assert_equal([0, 1, 2], result)
+  end
+
+  def test_condvar_wait_exception_handling
+    # Calling wait in the only thread running should raise a ThreadError of
+    # 'stopping only thread'
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+
+    locked = false
+    thread = Thread.new do
+      Thread.current.abort_on_exception = false
+      mutex.synchronize do
+        assert_raise(Interrupt) {
+          condvar.wait(mutex)
+        }
+        locked = mutex.locked?
+      end
+    end
+
+    until thread.stop?
+      sleep(0.1)
+    end
+
+    thread.raise Interrupt, "interrupt a dead condition variable"
+    thread.join
+    assert(locked)
+  end
+
+  def test_condvar_wait_and_broadcast
+    nr_threads = 3
+    threads = Array.new
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+    result = []
+
+    nr_threads.times do |i|
+      threads[i] = Thread.new do
+        mutex.synchronize do
+          result << "C1"
+          condvar.wait mutex
+          result << "C2"
+        end
+      end
+    end
+    sleep 0.1
+    mutex.synchronize do
+      result << "P1"
+      condvar.broadcast
+      result << "P2"
+    end
+    Timeout.timeout(5) do
+      nr_threads.times do |i|
+        threads[i].join
+      end
+    end
+
+    assert_equal ["C1", "C1", "C1", "P1", "P2", "C2", "C2", "C2"], result
+  end
+
+  def test_condvar_wait_deadlock
+    assert_in_out_err([], <<-INPUT, /\Afatal\nNo live threads left\. Deadlock/, [])
+      mutex = Mutex.new
+      cv = ConditionVariable.new
+
+      klass = nil
+      mesg = nil
+      begin
+        mutex.lock
+        cv.wait mutex
+        mutex.unlock
+      rescue Exception => e
+        klass = e.class
+        mesg = e.message
+      end
+      puts klass
+      print mesg
+INPUT
+  end
+
+  def test_condvar_wait_deadlock_2
+    nr_threads = 3
+    threads = Array.new
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+
+    nr_threads.times do |i|
+      if (i != 0)
+        mutex.unlock
+      end
+      threads[i] = Thread.new do
+        mutex.synchronize do
+          condvar.wait mutex
+        end
+      end
+      mutex.lock
+    end
+
+    assert_raise(Timeout::Error) do
+      Timeout.timeout(0.1) { condvar.wait mutex }
+    end
+    mutex.unlock
+    threads.each(&:kill)
+    threads.each(&:join)
+  end
+
+  def test_condvar_timed_wait
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+    timeout = 0.3
+    locked = false
+
+    t0 = Time.now
+    mutex.synchronize do
+      begin
+        condvar.wait(mutex, timeout)
+      ensure
+        locked = mutex.locked?
+      end
+    end
+    t1 = Time.now
+    t = t1-t0
+
+    assert_operator(timeout*0.9, :<, t)
+    assert(locked)
+  end
+
+  def test_condvar_nolock
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+
+    assert_raise(ThreadError) {condvar.wait(mutex)}
+  end
+
+  def test_condvar_nolock_2
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+
+    Thread.new do
+      assert_raise(ThreadError) {condvar.wait(mutex)}
+    end.join
+  end
+
+  def test_condvar_nolock_3
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+
+    Thread.new do
+      assert_raise(ThreadError) {condvar.wait(mutex, 0.1)}
+    end.join
+  end
+
+  def test_condvar_empty_signal
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+
+    assert_nothing_raised(Exception) { mutex.synchronize {condvar.signal} }
+  end
+
+  def test_condvar_empty_broadcast
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+
+    assert_nothing_raised(Exception) { mutex.synchronize {condvar.broadcast} }
+  end
+
+  def test_dup
+    bug9440 = '[ruby-core:59961] [Bug #9440]'
+    condvar = ConditionVariable.new
+    assert_raise(NoMethodError, bug9440) do
+      condvar.dup
+    end
+  end
+
+  (DumpableCV = ConditionVariable.dup).class_eval {remove_method :marshal_dump}
+
+  def test_dump
+    bug9674 = '[ruby-core:61677] [Bug #9674]'
+    condvar = ConditionVariable.new
+    assert_raise_with_message(TypeError, /#{ConditionVariable}/, bug9674) do
+      Marshal.dump(condvar)
+    end
+
+    condvar = DumpableCV.new
+    assert_raise(TypeError, bug9674) do
+      Marshal.dump(condvar)
+    end
+  end
+
+  def test_condvar_fork
+    mutex = Mutex.new
+    condvar = ConditionVariable.new
+    thrs = (1..10).map do
+      Thread.new { mutex.synchronize { condvar.wait(mutex) } }
+    end
+    thrs.each { 3.times { Thread.pass } }
+    pid = fork do
+      th = Thread.new do
+        mutex.synchronize { condvar.wait(mutex) }
+        :ok
+      end
+      until th.join(0.01)
+        mutex.synchronize { condvar.broadcast }
+      end
+      exit!(th.value == :ok ? 0 : 1)
+    end
+    _, s = Process.waitpid2(pid)
+    assert_predicate s, :success?, 'no segfault [ruby-core:86316] [Bug #14634]'
+    until thrs.empty?
+      mutex.synchronize { condvar.broadcast }
+      thrs.delete_if { |t| t.join(0.01) }
+    end
+  end if Process.respond_to?(:fork)
+end
diff --git a/test/mri/ruby/test_thread_queue.rb b/test/mri/ruby/test_thread_queue.rb
new file mode 100644
index 00000000000..8cebbbecb4a
--- /dev/null
+++ b/test/mri/ruby/test_thread_queue.rb
@@ -0,0 +1,619 @@
+# frozen_string_literal: false
+require 'test/unit'
+require 'tmpdir'
+require 'timeout'
+
+class TestThreadQueue < Test::Unit::TestCase
+  Queue = Thread::Queue
+  SizedQueue = Thread::SizedQueue
+
+  def test_queue_initialized
+    assert_raise(TypeError) {
+      Queue.allocate.push(nil)
+    }
+  end
+
+  def test_sized_queue_initialized
+    assert_raise(TypeError) {
+      SizedQueue.allocate.push(nil)
+    }
+  end
+
+  def test_queue
+    grind(5, 1000, 15, Queue)
+  end
+
+  def test_sized_queue
+    grind(5, 1000, 15, SizedQueue, 1000)
+  end
+
+  def grind(num_threads, num_objects, num_iterations, klass, *args)
+    from_workers = klass.new(*args)
+    to_workers = klass.new(*args)
+
+    workers = (1..num_threads).map {
+      Thread.new {
+        while object = to_workers.pop
+          from_workers.push object
+        end
+      }
+    }
+
+    Thread.new {
+      num_iterations.times {
+        num_objects.times { to_workers.push 99 }
+        num_objects.times { from_workers.pop }
+      }
+    }.join
+
+    # close the queue the old way to test for backwards-compatibility
+    num_threads.times { to_workers.push nil }
+    workers.each { |t| t.join }
+
+    assert_equal 0, from_workers.size
+    assert_equal 0, to_workers.size
+  end
+
+  def test_sized_queue_initialize
+    q = SizedQueue.new(1)
+    assert_equal 1, q.max
+    assert_raise(ArgumentError) { SizedQueue.new(0) }
+    assert_raise(ArgumentError) { SizedQueue.new(-1) }
+  end
+
+  def test_sized_queue_assign_max
+    q = SizedQueue.new(2)
+    assert_equal(2, q.max)
+    q.max = 1
+    assert_equal(1, q.max)
+    assert_raise(ArgumentError) { q.max = 0 }
+    assert_equal(1, q.max)
+    assert_raise(ArgumentError) { q.max = -1 }
+    assert_equal(1, q.max)
+
+    before = q.max
+    q.max.times { q << 1 }
+    t1 = Thread.new { q << 1 }
+    sleep 0.01 until t1.stop?
+    q.max = q.max + 1
+    assert_equal before + 1, q.max
+  ensure
+    t1.join if t1
+  end
+
+  def test_queue_pop_interrupt
+    q = Queue.new
+    t1 = Thread.new { q.pop }
+    sleep 0.01 until t1.stop?
+    t1.kill.join
+    assert_equal(0, q.num_waiting)
+  end
+
+  def test_queue_pop_non_block
+    q = Queue.new
+    assert_raise_with_message(ThreadError, /empty/) do
+      q.pop(true)
+    end
+  end
+
+  def test_sized_queue_pop_interrupt
+    q = SizedQueue.new(1)
+    t1 = Thread.new { q.pop }
+    sleep 0.01 until t1.stop?
+    t1.kill.join
+    assert_equal(0, q.num_waiting)
+  end
+
+  def test_sized_queue_pop_non_block
+    q = SizedQueue.new(1)
+    assert_raise_with_message(ThreadError, /empty/) do
+      q.pop(true)
+    end
+  end
+
+  def test_sized_queue_push_interrupt
+    q = SizedQueue.new(1)
+    q.push(1)
+    assert_raise_with_message(ThreadError, /full/) do
+      q.push(2, true)
+    end
+  end
+
+  def test_sized_queue_push_non_block
+    q = SizedQueue.new(1)
+    q.push(1)
+    t1 = Thread.new { q.push(2) }
+    sleep 0.01 until t1.stop?
+    t1.kill.join
+    assert_equal(0, q.num_waiting)
+  end
+
+  def test_thr_kill
+    bug5343 = '[ruby-core:39634]'
+    Dir.mktmpdir {|d|
+      timeout = 60
+      total_count = 250
+      begin
+        assert_normal_exit(<<-"_eom", bug5343, {:timeout => timeout, :chdir=>d})
+          #{total_count}.times do |i|
+            open("test_thr_kill_count", "w") {|f| f.puts i }
+            queue = Queue.new
+            r, w = IO.pipe
+            th = Thread.start {
+              queue.push(nil)
+              r.read 1
+            }
+            queue.pop
+            th.kill
+            th.join
+          end
+        _eom
+      rescue Timeout::Error
+        count = File.read("#{d}/test_thr_kill_count").to_i
+        flunk "only #{count}/#{total_count} done in #{timeout} seconds."
+      end
+    }
+  end
+
+  def test_queue_push_return_value
+    q = Queue.new
+    retval = q.push(1)
+    assert_same q, retval
+  end
+
+  def test_queue_clear_return_value
+    q = Queue.new
+    retval = q.clear
+    assert_same q, retval
+  end
+
+  def test_sized_queue_clear
+    # Fill queue, then test that SizedQueue#clear wakes up all waiting threads
+    sq = SizedQueue.new(2)
+    2.times { sq << 1 }
+
+    t1 = Thread.new do
+      sq << 1
+    end
+
+    t2 = Thread.new do
+      sq << 1
+    end
+
+    t3 = Thread.new do
+      Thread.pass
+      sq.clear
+    end
+
+    [t3, t2, t1].each(&:join)
+    assert_equal sq.length, 2
+  end
+
+  def test_sized_queue_push_return_value
+    q = SizedQueue.new(1)
+    retval = q.push(1)
+    assert_same q, retval
+  end
+
+  def test_sized_queue_clear_return_value
+    q = SizedQueue.new(1)
+    retval = q.clear
+    assert_same q, retval
+  end
+
+  def test_sized_queue_throttle
+    q = SizedQueue.new(1)
+    i = 0
+    consumer = Thread.new do
+      while q.pop
+        i += 1
+        Thread.pass
+      end
+    end
+    nprod = 4
+    npush = 100
+
+    producer = nprod.times.map do
+      Thread.new do
+        npush.times { q.push(true) }
+      end
+    end
+    producer.each(&:join)
+    q.push(nil)
+    consumer.join
+    assert_equal(nprod * npush, i)
+  end
+
+  def test_queue_thread_raise
+    q = Queue.new
+    th1 = Thread.new do
+      begin
+        q.pop
+      rescue RuntimeError
+        sleep
+      end
+    end
+    th2 = Thread.new do
+      sleep 0.1
+      q.pop
+    end
+    sleep 0.1
+    th1.raise
+    sleep 0.1
+    q << :s
+    assert_nothing_raised(Timeout::Error) do
+      Timeout.timeout(1) { th2.join }
+    end
+  ensure
+    [th1, th2].each do |th|
+      if th and th.alive?
+        th.wakeup
+        th.join
+      end
+    end
+  end
+
+  def test_dup
+    bug9440 = '[ruby-core:59961] [Bug #9440]'
+    q = Queue.new
+    assert_raise(NoMethodError, bug9440) do
+      q.dup
+    end
+  end
+
+  (DumpableQueue = Queue.dup).class_eval {remove_method :marshal_dump}
+
+  def test_dump
+    bug9674 = '[ruby-core:61677] [Bug #9674]'
+    q = Queue.new
+    assert_raise_with_message(TypeError, /#{Queue}/, bug9674) do
+      Marshal.dump(q)
+    end
+
+    sq = SizedQueue.new(1)
+    assert_raise_with_message(TypeError, /#{SizedQueue}/, bug9674) do
+      Marshal.dump(sq)
+    end
+
+    q = DumpableQueue.new
+    assert_raise(TypeError, bug9674) do
+      Marshal.dump(q)
+    end
+  end
+
+  def test_close
+    [->{Queue.new}, ->{SizedQueue.new 3}].each do |qcreate|
+      q = qcreate.call
+      assert_equal false, q.closed?
+      q << :something
+      assert_equal q, q.close
+      assert q.closed?
+      assert_raise_with_message(ClosedQueueError, /closed/){q << :nothing}
+      assert_equal q.pop, :something
+      assert_nil q.pop
+      assert_nil q.pop
+      # non-blocking
+      assert_raise_with_message(ThreadError, /queue empty/){q.pop(non_block=true)}
+    end
+  end
+
+  # test that waiting producers are woken up on close
+  def close_wakeup( num_items, num_threads, &qcreate )
+    raise "This test won't work with num_items(#{num_items}) >= num_threads(#{num_threads})" if num_items >= num_threads
+
+    # create the Queue
+    q = yield
+    threads = num_threads.times.map{Thread.new{q.pop}}
+    num_items.times{|i| q << i}
+
+    # wait until queue empty
+    (Thread.pass; sleep 0.01) until q.size == 0
+
+    # close the queue so remaining threads will wake up
+    q.close
+
+    # wait for them to go away
+    Thread.pass until threads.all?{|thr| thr.status == false}
+
+    # check that they've gone away. Convert nil to -1 so we can sort and do the comparison
+    expected_values = [-1] * (num_threads - num_items) + num_items.times.to_a
+    assert_equal expected_values, threads.map{|thr| thr.value || -1 }.sort
+  end
+
+  def test_queue_close_wakeup
+    close_wakeup(15, 18){Queue.new}
+  end
+
+  def test_size_queue_close_wakeup
+    close_wakeup(5, 8){SizedQueue.new 9}
+  end
+
+  def test_sized_queue_one_closed_interrupt
+    q = SizedQueue.new 1
+    q << :one
+    t1 = Thread.new { q << :two }
+    sleep 0.01 until t1.stop?
+    q.close
+
+    t1.kill.join
+    assert_equal 1, q.size
+    assert_equal :one, q.pop
+    assert q.empty?, "queue not empty"
+  end
+
+  # make sure that shutdown state is handled properly by empty? for the non-blocking case
+  def test_empty_non_blocking
+    return
+    q = SizedQueue.new 3
+    3.times{|i| q << i}
+
+    # these all block cos the queue is full
+    prod_threads = 4.times.map{|i| Thread.new{q << 3+i}}
+    sleep 0.01 until prod_threads.all?{|thr| thr.status == 'sleep'}
+    q.close
+
+    items = []
+    # sometimes empty? is false but pop will raise ThreadError('empty'),
+    # meaning a value is not immediately available but will be soon.
+    until q.empty?
+      items << q.pop(non_block=true) rescue nil
+    end
+    items.compact!
+
+    assert_equal 7.times.to_a, items.sort
+    assert q.empty?
+  end
+
+  def test_sized_queue_closed_push_non_blocking
+    q = SizedQueue.new 7
+    q.close
+    assert_raise_with_message(ClosedQueueError, /queue closed/){q.push(non_block=true)}
+  end
+
+  def test_blocked_pushers
+    q = SizedQueue.new 3
+    prod_threads = 6.times.map do |i|
+      thr = Thread.new{
+        Thread.current.report_on_exception = false
+        q << i
+      }
+      thr[:pc] = i
+      thr
+    end
+
+    # wait until some producer threads have finished, and the other 3 are blocked
+    sleep 0.01 while prod_threads.reject{|t| t.status}.count < 3
+    # this would ensure that all producer threads call push before close
+    # sleep 0.01 while prod_threads.select{|t| t.status == 'sleep'}.count < 3
+    q.close
+
+    # more than prod_threads
+    cons_threads = 10.times.map do |i|
+      thr = Thread.new{q.pop}; thr[:pc] = i; thr
+    end
+
+    # values that came from the queue
+    popped_values = cons_threads.map &:value
+
+    # wait untl all threads have finished
+    sleep 0.01 until prod_threads.find_all{|t| t.status}.count == 0
+
+    # pick only the producer threads that got in before close
+    successful_prod_threads = prod_threads.reject{|thr| thr.status == nil}
+    assert_nothing_raised{ successful_prod_threads.map(&:value) }
+
+    # the producer threads that tried to push after q.close should all fail
+    unsuccessful_prod_threads = prod_threads - successful_prod_threads
+    unsuccessful_prod_threads.each do |thr|
+      assert_raise(ClosedQueueError){ thr.value }
+    end
+
+    assert_equal cons_threads.size, popped_values.size
+    assert_equal 0, q.size
+
+    # check that consumer threads with values match producers that called push before close
+    assert_equal successful_prod_threads.map{|thr| thr[:pc]}, popped_values.compact.sort
+    assert_nil q.pop
+  end
+
+  def test_deny_pushers
+    [->{Queue.new}, ->{SizedQueue.new 3}].each do |qcreate|
+      q = qcreate[]
+      synq = Queue.new
+      prod_threads = 20.times.map do |i|
+        Thread.new {
+          synq.pop
+          assert_raise(ClosedQueueError) {
+            q << i
+          }
+        }
+      end
+      q.close
+      synq.close # start producer threads
+
+      prod_threads.each(&:join)
+    end
+  end
+
+  # size should account for waiting pushers during shutdown
+  def sized_queue_size_close
+    q = SizedQueue.new 4
+    4.times{|i| q << i}
+    Thread.new{ q << 5 }
+    Thread.new{ q << 6 }
+    assert_equal 4, q.size
+    assert_equal 4, q.items
+    q.close
+    assert_equal 6, q.size
+    assert_equal 4, q.items
+  end
+
+  def test_blocked_pushers_empty
+    q = SizedQueue.new 3
+    prod_threads = 6.times.map do |i|
+      Thread.new{
+        Thread.current.report_on_exception = false
+        q << i
+      }
+    end
+
+    # this ensures that all producer threads call push before close
+    sleep 0.01 while prod_threads.select{|t| t.status == 'sleep'}.count < 3
+    q.close
+
+    ary = []
+    until q.empty?
+      ary << q.pop
+    end
+    assert_equal 0, q.size
+
+    assert_equal 3, ary.size
+    ary.each{|e| assert [0,1,2,3,4,5].include?(e)}
+    assert_nil q.pop
+
+    prod_threads.each{|t|
+      begin
+        t.join
+      rescue => e
+      end
+    }
+  end
+
+  # test thread wakeup on one-element SizedQueue with close
+  def test_one_element_sized_queue
+    q = SizedQueue.new 1
+    t = Thread.new{ q.pop }
+    q.close
+    assert_nil t.value
+  end
+
+  def test_close_twice
+    [->{Queue.new}, ->{SizedQueue.new 3}].each do |qcreate|
+      q = qcreate[]
+      q.close
+      assert_nothing_raised(ClosedQueueError){q.close}
+    end
+  end
+
+  def test_queue_close_multi_multi
+    q = SizedQueue.new rand(800..1200)
+
+    count_items = rand(3000..5000)
+    count_producers = rand(10..20)
+
+    producers = count_producers.times.map do
+      Thread.new do
+        sleep(rand / 100)
+        count_items.times{|i| q << [i,"#{i} for #{Thread.current.inspect}"]}
+      end
+    end
+
+    consumers = rand(7..12).times.map do
+      Thread.new do
+        count = 0
+        while e = q.pop
+          i, st = e
+          count += 1 if i.is_a?(Integer) && st.is_a?(String)
+        end
+        count
+      end
+    end
+
+    # No dead or finished threads, give up to 10 seconds to start running
+    t = Time.now
+    Thread.pass until Time.now - t > 10 || (consumers + producers).all?{|thr| thr.status =~ /\A(?:run|sleep)\z/}
+
+    assert (consumers + producers).all?{|thr| thr.status =~ /\A(?:run|sleep)\z/}, 'no threads running'
+
+    # just exercising the concurrency of the support methods.
+    counter = Thread.new do
+      until q.closed? && q.empty?
+        raise if q.size > q.max
+        # otherwise this exercise causes too much contention on the lock
+        sleep 0.01
+      end
+    end
+
+    producers.each &:join
+    q.close
+
+    # results not randomly distributed. Not sure why.
+    # consumers.map{|thr| thr.value}.each do |x|
+    #   assert_not_equal 0, x
+    # end
+
+    all_items_count = consumers.map{|thr| thr.value}.inject(:+)
+    assert_equal count_items * count_producers, all_items_count
+
+    # don't leak this thread
+    assert_nothing_raised{counter.join}
+  end
+
+  def test_queue_with_trap
+    if ENV['APPVEYOR'] == 'True' && RUBY_PLATFORM.match?(/mswin/)
+      skip 'This test fails too often on AppVeyor vs140'
+    end
+    assert_in_out_err([], <<-INPUT, %w(INT INT exit), [])
+      q = Queue.new
+      trap(:INT){
+        q.push 'INT'
+      }
+      Thread.new{
+        loop{
+          Process.kill :INT, $$
+        }
+      }
+      puts q.pop
+      puts q.pop
+      puts 'exit'
+    INPUT
+  end
+
+  def test_fork_while_queue_waiting
+    q = Queue.new
+    sq = SizedQueue.new(1)
+    thq = Thread.new { q.pop }
+    thsq = Thread.new { sq.pop }
+    Thread.pass until thq.stop? && thsq.stop?
+
+    pid = fork do
+      exit!(1) if q.num_waiting != 0
+      exit!(2) if sq.num_waiting != 0
+      exit!(6) unless q.empty?
+      exit!(7) unless sq.empty?
+      q.push :child_q
+      sq.push :child_sq
+      exit!(3) if q.pop != :child_q
+      exit!(4) if sq.pop != :child_sq
+      exit!(0)
+    end
+    _, s = Process.waitpid2(pid)
+    assert_predicate s, :success?, 'no segfault [ruby-core:86316] [Bug #14634]'
+
+    q.push :thq
+    sq.push :thsq
+    assert_equal :thq, thq.value
+    assert_equal :thsq, thsq.value
+
+    sq.push(1)
+    th = Thread.new { q.pop; sq.pop }
+    thsq = Thread.new { sq.push(2) }
+    Thread.pass until th.stop? && thsq.stop?
+    pid = fork do
+      exit!(1) if q.num_waiting != 0
+      exit!(2) if sq.num_waiting != 0
+      exit!(3) unless q.empty?
+      exit!(4) if sq.empty?
+      exit!(5) if sq.pop != 1
+      exit!(0)
+    end
+    _, s = Process.waitpid2(pid)
+    assert_predicate s, :success?, 'no segfault [ruby-core:86316] [Bug #14634]'
+
+    assert_predicate thsq, :stop?
+    assert_equal 1, sq.pop
+    assert_same sq, thsq.value
+    q.push('restart th')
+    assert_equal 2, th.value
+  end if Process.respond_to?(:fork)
+end
diff --git a/test/mri/ruby/test_time.rb b/test/mri/ruby/test_time.rb
index 5ddcc9dcfe3..2bd4bc84556 100644
--- a/test/mri/ruby/test_time.rb
+++ b/test/mri/ruby/test_time.rb
@@ -556,6 +556,10 @@ def assert_zone_encoding(time)
 
   def test_zone
     assert_zone_encoding Time.now
+    t = Time.now.utc
+    assert_equal("UTC", t.zone)
+    assert_nil(t.getlocal(0).zone)
+    assert_nil(t.getlocal("+02:00").zone)
   end
 
   def test_plus_minus_succ
@@ -1127,14 +1131,19 @@ def test_strftime_yearday_on_last_day_of_year
   end
 
   def test_strftime_no_hidden_garbage
+    skip unless Thread.list.size == 1
+
     fmt = %w(Y m d).map { |x| "%#{x}" }.join('-') # defeats optimization
     t = Time.at(0).getutc
     ObjectSpace.count_objects(res = {}) # creates strings on first call
+    GC.disable
     before = ObjectSpace.count_objects(res)[:T_STRING]
     val = t.strftime(fmt)
     after = ObjectSpace.count_objects(res)[:T_STRING]
     assert_equal before + 1, after, 'only new string is the created one'
     assert_equal '1970-01-01', val
+  ensure
+    GC.enable
   end
 
   def test_num_exact_error
@@ -1156,6 +1165,7 @@ def test_memsize
     case size
     when 20 then expect = 50
     when 40 then expect = 86
+    when 48 then expect = 94
     else
       flunk "Unsupported RVALUE_SIZE=#{size}, update test_memsize"
     end
diff --git a/test/mri/ruby/test_time_tz.rb b/test/mri/ruby/test_time_tz.rb
index 8be72944405..8e60cf44c59 100644
--- a/test/mri/ruby/test_time_tz.rb
+++ b/test/mri/ruby/test_time_tz.rb
@@ -1,5 +1,6 @@
 # frozen_string_literal: false
 require 'test/unit'
+require '-test-/time'
 
 class TestTimeTZ < Test::Unit::TestCase
   has_right_tz = true
@@ -212,6 +213,7 @@ def test_pacific_kiritimati
 
   def test_right_utc
     with_tz(tz="right/UTC") {
+      ::Bug::Time.reset_leap_second_info
       assert_time_constructor(tz, "2008-12-31 23:59:59 UTC", :utc, [2008,12,31,23,59,59])
       assert_time_constructor(tz, "2008-12-31 23:59:60 UTC", :utc, [2008,12,31,23,59,60])
       assert_time_constructor(tz, "2009-01-01 00:00:00 UTC", :utc, [2008,12,31,24,0,0])
@@ -219,6 +221,31 @@ def test_right_utc
     }
   end if has_right_tz
 
+  def test_right_utc_switching
+    with_tz("UTC") { # ensure no leap second timezone
+      ::Bug::Time.reset_leap_second_info
+      assert_equal(4102444800, Time.utc(2100,1,1,0,0,0).to_i)
+      with_tz(tz="right/UTC") {
+        assert_time_constructor(tz, "2008-12-31 23:59:59 UTC", :utc, [2008,12,31,23,59,59])
+        assert_time_constructor(tz, "2009-01-01 00:00:00 UTC", :utc, [2008,12,31,23,59,60])
+        assert_time_constructor(tz, "2009-01-01 00:00:00 UTC", :utc, [2008,12,31,24,0,0])
+        assert_time_constructor(tz, "2009-01-01 00:00:00 UTC", :utc, [2009,1,1,0,0,0])
+        assert_equal(4102444800, Time.utc(2100,1,1,0,0,0).to_i)
+      }
+    }
+    with_tz("right/UTC") {
+      ::Bug::Time.reset_leap_second_info
+      assert_not_equal(4102444800, Time.utc(2100,1,1,0,0,0).to_i)
+      with_tz(tz="UTC") {
+        assert_time_constructor(tz, "2008-12-31 23:59:59 UTC", :utc, [2008,12,31,23,59,59])
+        assert_time_constructor(tz, "2009-01-01 00:00:00 UTC", :utc, [2008,12,31,23,59,60])
+        assert_time_constructor(tz, "2009-01-01 00:00:00 UTC", :utc, [2008,12,31,24,0,0])
+        assert_time_constructor(tz, "2009-01-01 00:00:00 UTC", :utc, [2009,1,1,0,0,0])
+        assert_not_equal(4102444800, Time.utc(2100,1,1,0,0,0).to_i)
+      }
+    }
+  end if has_right_tz
+
   def test_right_america_los_angeles
     with_tz(tz="right/America/Los_Angeles") {
       assert_time_constructor(tz, "2008-12-31 15:59:59 -0800", :local, [2008,12,31,15,59,59])
@@ -283,6 +310,7 @@ def self.gen_zdump_test(data)
       mesg = "#{mesg_utc}.localtime"
       define_method(gen_test_name(tz)) {
         with_tz(tz) {
+          ::Bug::Time.reset_leap_second_info
           t = nil
           assert_nothing_raised(mesg) { t = Time.utc(*u) }
           assert_equal(expected_utc, time_to_s(t), mesg_utc)
@@ -454,4 +482,192 @@ def self.gen_variational_zdump_test(hint, data)
 Europe/Lisbon  Mon Jan  1 00:36:44 1912 UT = Sun Dec 31 23:59:59 1911 LMT isdst=0 gmtoff=-2205
 Europe/Lisbon  Sun Dec 31 23:59:59 1911 UT = Sun Dec 31 23:23:14 1911 LMT isdst=0 gmtoff=-2205
 End
+
+  class TZ
+    attr_reader :name, :abbr, :offset
+
+    def initialize(name, abbr, offset)
+      @name = name
+      @abbr = abbr
+      @offset = offset
+    end
+
+    def local_to_utc(t)
+      t - @offset
+    end
+
+    def utc_to_local(t)
+      t + @offset
+    end
+
+    def abbr(t)
+      @abbr
+    end
+
+    def ==(other)
+      @name == other.name and @abbr == other.abbr(0) and @offset == other.offset
+    end
+
+    def inspect
+      "#<TZ: #@name #@abbr #@offset>"
+    end
+  end
+end
+
+module TestTimeTZ::WithTZ
+  def subtest_new(time_class, tz, tzarg, tzname, abbr, utc_offset)
+    t = time_class.new(2018, 9, 1, 12, 0, 0, tzarg)
+    assert_equal([2018, 9, 1, 12, 0, 0, tz], [t.year, t.mon, t.mday, t.hour, t.min, t.sec, t.zone])
+    h, m = (-utc_offset / 60).divmod(60)
+    assert_equal(time_class.utc(2018, 9, 1, 12+h, m, 0).to_i, t.to_i)
+  end
+
+  def subtest_getlocal(time_class, tz, tzarg, tzname, abbr, utc_offset)
+    t = time_class.utc(2018, 9, 1, 12, 0, 0).getlocal(tzarg)
+    h, m = (utc_offset / 60).divmod(60)
+    assert_equal([2018, 9, 1, 12+h, m, 0, tz], [t.year, t.mon, t.mday, t.hour, t.min, t.sec, t.zone])
+    assert_equal(time_class.utc(2018, 9, 1, 12, 0, 0), t)
+  end
+
+  def subtest_strftime(time_class, tz, tzarg, tzname, abbr, utc_offset)
+    t = time_class.new(2018, 9, 1, 12, 0, 0, tzarg)
+    h, m = (utc_offset.abs / 60).divmod(60)
+    h = -h if utc_offset < 0
+    assert_equal("%+.2d%.2d %s" % [h, m, abbr], t.strftime("%z %Z"))
+  end
+
+  def subtest_plus(time_class, tz, tzarg, tzname, abbr, utc_offset)
+    t = time_class.new(2018, 9, 1, 12, 0, 0, tzarg) + 4000
+    assert_equal([2018, 9, 1, 13, 6, 40, tz], [t.year, t.mon, t.mday, t.hour, t.min, t.sec, t.zone])
+    m, s = (4000-utc_offset).divmod(60)
+    h, m = m.divmod(60)
+    assert_equal(time_class.utc(2018, 9, 1, 12+h, m, s), t)
+  end
+
+  def subtest_at(time_class, tz, tzarg, tzname, abbr, utc_offset)
+    h, m = (utc_offset / 60).divmod(60)
+    utc = time_class.utc(2018, 9, 1, 12, 0, 0)
+    t = time_class.at(utc, in: tzarg)
+    assert_equal([2018, 9, 1, 12+h, m, 0, tz], [t.year, t.mon, t.mday, t.hour, t.min, t.sec, t.zone])
+    assert_equal(utc.to_i, t.to_i)
+    utc = utc.to_i
+    t = time_class.at(utc, in: tzarg)
+    assert_equal([2018, 9, 1, 12+h, m, 0, tz], [t.year, t.mon, t.mday, t.hour, t.min, t.sec, t.zone])
+    assert_equal(utc, t.to_i)
+  end
+
+  def subtest_marshal(time_class, tz, tzarg, tzname, abbr, utc_offset)
+    t = time_class.new(2018, 9, 1, 12, 0, 0, tzarg)
+    t2 = Marshal.load(Marshal.dump(t))
+    assert_equal(t, t2)
+    assert_equal(t.utc_offset, t2.utc_offset)
+    assert_equal(t.utc_offset, (t2+1).utc_offset)
+    assert_instance_of(t.zone.class, t2.zone)
+  end
+
+  def test_invalid_zone
+    make_timezone("INVALID", "INV", 0)
+  rescue => e
+    assert_kind_of(StandardError, e)
+  else
+    assert false, "ArgumentError expected but nothing was raised."
+  end
+
+  def nametest_marshal_compatibility(time_class, tzname, abbr, utc_offset)
+    data = [
+      "\x04\x08Iu:".b, Marshal.dump(time_class)[3..-1],
+      "\x0d""\xEF\xA7\x1D\x80\x00\x00\x00\x00".b,
+      Marshal.dump({offset: utc_offset, zone: abbr})[3..-1],
+    ].join('')
+    t = Marshal.load(data)
+    assert_equal(utc_offset, t.utc_offset)
+    assert_equal(utc_offset, (t+1).utc_offset)
+    # t.zone may be a mere String or timezone object.
+  end
+
+  ZONES = {
+    "Asia/Tokyo" => ["JST", +9*3600],
+    "America/Los_Angeles" => ["PDT", -7*3600],
+    "Africa/Ndjamena" => ["WAT", +1*3600],
+  }
+
+  def make_timezone(tzname, abbr, utc_offset)
+    self.class::TIME_CLASS.find_timezone(tzname)
+  end
+
+  instance_methods(false).grep(/\Asub(?=test_)/) do |subtest|
+    test = $'
+    ZONES.each_pair do |tzname, (abbr, utc_offset)|
+      define_method("#{test}@#{tzname}") do
+        tz = make_timezone(tzname, abbr, utc_offset)
+        time_class = self.class::TIME_CLASS
+        __send__(subtest, time_class, tz, tz, tzname, abbr, utc_offset)
+        __send__(subtest, time_class, tz, tzname, tzname, abbr, utc_offset)
+      end
+    end
+  end
+
+  instance_methods(false).grep(/\Aname(?=test_)/) do |subtest|
+    test = $'
+    ZONES.each_pair do |tzname, (abbr, utc_offset)|
+      define_method("#{test}@#{tzname}") do
+        time_class = self.class::TIME_CLASS
+        __send__(subtest, time_class, tzname, abbr, utc_offset)
+      end
+    end
+  end
+end
+
+class TestTimeTZ::DummyTZ < Test::Unit::TestCase
+  include TestTimeTZ::WithTZ
+
+  class TIME_CLASS < ::Time
+    ZONES = TestTimeTZ::WithTZ::ZONES
+    def self.find_timezone(tzname)
+      tz = ZONES[tzname] or raise ArgumentError, "Unknown timezone: #{name}"
+      TestTimeTZ::TZ.new(tzname, *tz)
+    end
+  end
+
+  def self.make_timezone(tzname, abbr, utc_offset)
+    TestTimeTZ::TZ.new(tzname, abbr, utc_offset)
+  end
+end
+
+begin
+  require "tzinfo"
+rescue LoadError
+else
+  class TestTimeTZ::GemTZInfo < Test::Unit::TestCase
+    include TestTimeTZ::WithTZ
+
+    class TIME_CLASS < ::Time
+      def self.find_timezone(tzname)
+        TZInfo::Timezone.get(tzname)
+      end
+    end
+
+    def tz
+      @tz ||= TZInfo::Timezone.get(tzname)
+    end
+  end
+end
+
+begin
+  require "timezone"
+rescue LoadError
+else
+  class TestTimeTZ::GemTimezone < Test::Unit::TestCase
+    include TestTimeTZ::WithTZ
+
+    class TIME_CLASS < ::Time
+      def self.find_timezone(name)
+        Timezone.fetch(name)
+      end
+    end
+
+    def tz
+      @tz ||= Timezone[tzname]
+    end
+  end
 end
diff --git a/test/mri/ruby/test_undef.rb b/test/mri/ruby/test_undef.rb
index 6d513a238fa..e0add7c3aba 100644
--- a/test/mri/ruby/test_undef.rb
+++ b/test/mri/ruby/test_undef.rb
@@ -25,7 +25,7 @@ def test_undef
     y = Undef1.new
     assert_equal "bar", y.bar
     z = Undef2.new
-    assert_raise(NoMethodError) { z.foo }
+    assert_raise(NoMethodError) { z.bar }
   end
 
   def test_special_const_undef
diff --git a/test/mri/ruby/test_weakmap.rb b/test/mri/ruby/test_weakmap.rb
index cde186c5f39..fb57903c981 100644
--- a/test/mri/ruby/test_weakmap.rb
+++ b/test/mri/ruby/test_weakmap.rb
@@ -28,18 +28,27 @@ def test_aset_const
     assert_raise(ArgumentError) {@wm[x] = :foo}
   end
 
-  def test_include?
-    m = __callee__[/test_(.*)/, 1]
-    k = "foo"
+  def assert_weak_include(m, k, n = 100)
+    if n > 0
+      return assert_weak_include(m, k, n-1)
+    end
     1.times do
       x = Object.new
       @wm[k] = x
       assert_send([@wm, m, k])
       assert_not_send([@wm, m, "FOO".downcase])
-      x = nil
+      x = Object.new
+    end
+  end
+
+  def test_include?
+    m = __callee__[/test_(.*)/, 1]
+    k = "foo"
+    1.times do
+      assert_weak_include(m, k)
     end
     GC.start
-    skip # TODO: failure introduced from r60440
+    skip('TODO: failure introduced from r60440')
     assert_not_send([@wm, m, k])
   end
   alias test_member? test_include?
diff --git a/test/mri/rubygems/fix_openssl_warnings.rb b/test/mri/rubygems/fix_openssl_warnings.rb
deleted file mode 100644
index 1f5b8b5e0a9..00000000000
--- a/test/mri/rubygems/fix_openssl_warnings.rb
+++ /dev/null
@@ -1,13 +0,0 @@
-# frozen_string_literal: true
-##
-# HACK: this drives me BONKERS
-
-if defined? OpenSSL then
-  class OpenSSL::X509::ExtensionFactory
-    alias :old_create_ext :create_ext
-    def create_ext(*args)
-      @config ||= nil
-      old_create_ext(*args)
-    end
-  end
-end if RUBY_VERSION < "1.9"
diff --git a/test/mri/rubygems/rubygems_plugin.rb b/test/mri/rubygems/rubygems_plugin.rb
index 30a67789c61..7fac2ebec64 100644
--- a/test/mri/rubygems/rubygems_plugin.rb
+++ b/test/mri/rubygems/rubygems_plugin.rb
@@ -23,4 +23,3 @@ def execute
 end
 
 Gem::CommandManager.instance.register_command :interrupt
-
diff --git a/test/mri/rubygems/simple_gem.rb b/test/mri/rubygems/simple_gem.rb
index 1650910aaf4..0f2ea48198a 100644
--- a/test/mri/rubygems/simple_gem.rb
+++ b/test/mri/rubygems/simple_gem.rb
@@ -1,5 +1,5 @@
 # frozen_string_literal: true
-SIMPLE_GEM = <<-GEMDATA
+SIMPLE_GEM = <<-GEMDATA.freeze
         MD5SUM = "989bf34a1cbecd52e0ea66b662b3a405"
         if $0 == __FILE__
           require 'optparse'
diff --git a/test/mri/rubygems/test_config.rb b/test/mri/rubygems/test_config.rb
index f8aadb4a232..70fc4e23f08 100644
--- a/test/mri/rubygems/test_config.rb
+++ b/test/mri/rubygems/test_config.rb
@@ -1,6 +1,7 @@
 # frozen_string_literal: true
 require 'rubygems/test_case'
 require 'rubygems'
+require 'shellwords'
 
 class TestConfig < Gem::TestCase
 
@@ -13,12 +14,16 @@ def test_datadir
 
   def test_good_rake_path_is_escaped
     path = Gem::TestCase.class_eval('@@good_rake')
-    assert_match(/#{Gem.ruby} "[^"]*good_rake.rb"/, path)
+    ruby, rake = path.shellsplit
+    assert_equal(Gem.ruby, ruby)
+    assert_match(/\/good_rake.rb\z/, rake)
   end
 
   def test_bad_rake_path_is_escaped
     path = Gem::TestCase.class_eval('@@bad_rake')
-    assert_match(/#{Gem.ruby} "[^"]*bad_rake.rb"/, path)
+    ruby, rake = path.shellsplit
+    assert_equal(Gem.ruby, ruby)
+    assert_match(/\/bad_rake.rb\z/, rake)
   end
 
 end
diff --git a/test/mri/rubygems/test_gem.rb b/test/mri/rubygems/test_gem.rb
index 419497c75f3..e740a5ab94e 100644
--- a/test/mri/rubygems/test_gem.rb
+++ b/test/mri/rubygems/test_gem.rb
@@ -5,16 +5,18 @@
 require 'rubygems/installer'
 require 'pathname'
 require 'tmpdir'
+require 'rbconfig'
 
 # TODO: push this up to test_case.rb once battle tested
-$SAFE=1
+
 $LOAD_PATH.map! do |path|
   path.dup.untaint
 end
 
 class TestGem < Gem::TestCase
+  RUBY_INSTALL_NAME = RbConfig::CONFIG['RUBY_INSTALL_NAME']
 
-  PLUGINS_LOADED = []
+  PLUGINS_LOADED = [] # rubocop:disable Style/MutableConstant
 
   def setup
     super
@@ -31,11 +33,11 @@ def setup
 
   def test_self_finish_resolve
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 1"
-      b2 = new_spec "b", "2", "c" => ">= 2"
-      c1 = new_spec "c", "1"
-      c2 = new_spec "c", "2"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 1"
+      b2 = util_spec "b", "2", "c" => ">= 2"
+      c1 = util_spec "c", "1"
+      c2 = util_spec "c", "2"
 
       install_specs c1, c2, b1, b2, a1
 
@@ -53,13 +55,13 @@ def test_self_finish_resolve
 
   def test_self_finish_resolve_wtf
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0", "d" => "> 0"    # this
-      b1 = new_spec "b", "1", { "c" => ">= 1" }, "lib/b.rb" # this
-      b2 = new_spec "b", "2", { "c" => ">= 2" }, "lib/b.rb"
-      c1 = new_spec "c", "1"                                # this
-      c2 = new_spec "c", "2"
-      d1 = new_spec "d", "1", { "c" => "< 2" },  "lib/d.rb"
-      d2 = new_spec "d", "2", { "c" => "< 2" },  "lib/d.rb" # this
+      a1 = util_spec "a", "1", "b" => "> 0", "d" => "> 0"    # this
+      b1 = util_spec "b", "1", { "c" => ">= 1" }, "lib/b.rb" # this
+      b2 = util_spec "b", "2", { "c" => ">= 2" }, "lib/b.rb"
+      c1 = util_spec "c", "1"                                # this
+      c2 = util_spec "c", "2"
+      d1 = util_spec "d", "1", { "c" => "< 2" },  "lib/d.rb"
+      d2 = util_spec "d", "2", { "c" => "< 2" },  "lib/d.rb" # this
 
       install_specs c1, c2, b1, b2, d1, d2, a1
 
@@ -77,11 +79,11 @@ def test_self_finish_resolve_wtf
 
   def test_self_finish_resolve_respects_loaded_specs
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 1"
-      b2 = new_spec "b", "2", "c" => ">= 2"
-      c1 = new_spec "c", "1"
-      c2 = new_spec "c", "2"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 1"
+      b2 = util_spec "b", "2", "c" => ">= 2"
+      c1 = util_spec "c", "1"
+      c2 = util_spec "c", "2"
 
       install_specs c1, c2, b1, b2, a1
 
@@ -130,6 +132,83 @@ def test_self_install_in_rescue
     assert_equal %w[a-1], installed.map { |spec| spec.full_name }
   end
 
+  def test_self_install_permissions
+    assert_self_install_permissions
+  end
+
+  def test_self_install_permissions_umask_0
+    umask = File.umask(0)
+    assert_self_install_permissions
+  ensure
+    File.umask(umask)
+  end
+
+  def test_self_install_permissions_umask_077
+    umask = File.umask(077)
+    assert_self_install_permissions
+  ensure
+    File.umask(umask)
+  end
+
+  def test_self_install_permissions_with_format_executable
+    @format_executable = true
+    assert_self_install_permissions
+  end
+
+  def assert_self_install_permissions
+    mask = /mingw|mswin/ =~ RUBY_PLATFORM ? 0700 : 0777
+    options = {
+      :dir_mode => 0500,
+      :prog_mode => 0510,
+      :data_mode => 0640,
+      :wrappers => true,
+      :format_executable => !!(@format_executable if defined?(@format_executable))
+    }
+    Dir.chdir @tempdir do
+      Dir.mkdir 'bin'
+      File.open 'bin/foo.cmd', 'w' do |fp|
+        fp.chmod(0755)
+        fp.puts 'p'
+      end
+
+      Dir.mkdir 'data'
+      File.open 'data/foo.txt', 'w' do |fp|
+        fp.puts 'blah'
+      end
+
+      spec_fetcher do |f|
+        f.gem 'foo', 1 do |s|
+          s.executables = ['foo.cmd']
+          s.files = %w[bin/foo.cmd data/foo.txt]
+        end
+      end
+      Gem.install 'foo', Gem::Requirement.default, options
+    end
+
+    prog_mode = (options[:prog_mode] & mask).to_s(8)
+    dir_mode = (options[:dir_mode] & mask).to_s(8)
+    data_mode = (options[:data_mode] & mask).to_s(8)
+    prog_name = 'foo.cmd'
+    prog_name = RUBY_INSTALL_NAME.sub('ruby', 'foo.cmd') if options[:format_executable]
+    expected = {
+      "bin/#{prog_name}" => prog_mode,
+      'gems/foo-1' => dir_mode,
+      'gems/foo-1/bin' => dir_mode,
+      'gems/foo-1/data' => dir_mode,
+      'gems/foo-1/bin/foo.cmd' => prog_mode,
+      'gems/foo-1/data/foo.txt' => data_mode,
+    }
+    result = {}
+    Dir.chdir @gemhome do
+      expected.each_key do |n|
+        result[n] = (File.stat(n).mode & mask).to_s(8)
+      end
+    end
+    assert_equal(expected, result)
+  ensure
+    File.chmod(0755, *Dir.glob(@gemhome+'/gems/**/').map {|path| path.untaint})
+  end
+
   def test_require_missing
     save_loaded_features do
       assert_raises ::LoadError do
@@ -140,7 +219,7 @@ def test_require_missing
 
   def test_require_does_not_glob
     save_loaded_features do
-      a1 = new_spec "a", "1", nil, "lib/a1.rb"
+      a1 = util_spec "a", "1", nil, "lib/a1.rb"
 
       install_specs a1
 
@@ -422,8 +501,7 @@ def test_self_default_sources
     assert_equal %w[https://rubygems.org/], Gem.default_sources
   end
 
-  def test_self_detect_gemdeps
-    skip 'Insecure operation - chdir' if RUBY_VERSION <= "1.8.7"
+  def test_self_use_gemdeps
     rubygems_gemdeps, ENV['RUBYGEMS_GEMDEPS'] = ENV['RUBYGEMS_GEMDEPS'], '-'
 
     FileUtils.mkdir_p 'detect/a/b'
@@ -434,7 +512,7 @@ def test_self_detect_gemdeps
     begin
       Dir.chdir 'detect/a/b'
 
-      assert_equal add_bundler_full_name([]), Gem.detect_gemdeps.map(&:full_name)
+      assert_equal add_bundler_full_name([]), Gem.use_gemdeps.map(&:full_name)
     ensure
       Dir.chdir @tempdir
     end
@@ -498,7 +576,7 @@ def test_self_ensure_gem_directories_missing_parents
     assert File.directory?(util_cache_dir)
   end
 
-  unless win_platform? || Process.uid.zero? then # only for FS that support write protection
+  unless win_platform? || Process.uid.zero?  # only for FS that support write protection
     def test_self_ensure_gem_directories_write_protected
       gemdir = File.join @tempdir, "egd"
       FileUtils.rm_r gemdir rescue nil
@@ -577,9 +655,6 @@ def test_self_find_files
   end
 
   def test_self_find_files_with_gemfile
-    # write_file(File.join Dir.pwd, 'Gemfile') fails on travis 1.8.7 with $SAFE=1
-    skip if RUBY_VERSION <= "1.8.7"
-
     cwd = File.expand_path("test/rubygems", @@project_dir)
     actual_load_path = $LOAD_PATH.unshift(cwd).dup
 
@@ -612,7 +687,7 @@ def test_self_find_files_with_gemfile
     assert_equal expected, Gem.find_files('sff/discover').sort
     assert_equal expected, Gem.find_files('sff/**.rb').sort, '[ruby-core:31730]'
   ensure
-    assert_equal cwd, actual_load_path.shift unless RUBY_VERSION <= "1.8.7"
+    assert_equal cwd, actual_load_path.shift
   end
 
   def test_self_find_latest_files
@@ -828,7 +903,6 @@ def test_self_read_binary
   end
 
   def test_self_refresh
-    skip 'Insecure operation - mkdir' if RUBY_VERSION <= "1.8.7"
     util_make_gems
 
     a1_spec = @a1.spec_file
@@ -848,7 +922,6 @@ def test_self_refresh
   end
 
   def test_self_refresh_keeps_loaded_specs_activated
-    skip 'Insecure operation - mkdir' if RUBY_VERSION <= "1.8.7"
     util_make_gems
 
     a1_spec = @a1.spec_file
@@ -930,7 +1003,7 @@ def test_self_env_requirement
     assert_equal Gem::Requirement.default, Gem.env_requirement('qux')
   end
 
-  def test_self_ruby_version_1_8_5
+  def test_self_ruby_version_with_patchlevel_less_ancient_rubies
     util_set_RUBY_VERSION '1.8.5'
 
     assert_equal Gem::Version.new('1.8.5'), Gem.ruby_version
@@ -938,7 +1011,7 @@ def test_self_ruby_version_1_8_5
     util_restore_RUBY_VERSION
   end
 
-  def test_self_ruby_version_1_8_6p287
+  def test_self_ruby_version_with_release
     util_set_RUBY_VERSION '1.8.6', 287
 
     assert_equal Gem::Version.new('1.8.6.287'), Gem.ruby_version
@@ -946,10 +1019,34 @@ def test_self_ruby_version_1_8_6p287
     util_restore_RUBY_VERSION
   end
 
-  def test_self_ruby_version_1_9_2dev_r23493
-    util_set_RUBY_VERSION '1.9.2', -1, 23493
+  def test_self_ruby_version_with_non_mri_implementations
+    util_set_RUBY_VERSION '2.5.0', 0, 60928, 'jruby 9.2.0.0 (2.5.0) 2018-05-24 81156a8 OpenJDK 64-Bit Server VM 25.171-b11 on 1.8.0_171-8u171-b11-0ubuntu0.16.04.1-b11 [linux-x86_64]'
 
-    assert_equal Gem::Version.new('1.9.2.dev.23493'), Gem.ruby_version
+    assert_equal Gem::Version.new('2.5.0'), Gem.ruby_version
+  ensure
+    util_restore_RUBY_VERSION
+  end
+
+  def test_self_ruby_version_with_prerelease
+    util_set_RUBY_VERSION '2.6.0', -1, 63539, 'ruby 2.6.0preview2 (2018-05-31 trunk 63539) [x86_64-linux]'
+
+    assert_equal Gem::Version.new('2.6.0.preview2'), Gem.ruby_version
+  ensure
+    util_restore_RUBY_VERSION
+  end
+
+  def test_self_ruby_version_with_non_mri_implementations_with_mri_prerelase_compatibility
+    util_set_RUBY_VERSION '2.6.0', -1, 63539, 'weirdjruby 9.2.0.0 (2.6.0preview2) 2018-05-24 81156a8 OpenJDK 64-Bit Server VM 25.171-b11 on 1.8.0_171-8u171-b11-0ubuntu0.16.04.1-b11 [linux-x86_64]', 'weirdjruby', '9.2.0.0'
+
+    assert_equal Gem::Version.new('2.6.0.preview2'), Gem.ruby_version
+  ensure
+    util_restore_RUBY_VERSION
+  end
+
+  def test_self_ruby_version_with_trunk
+    util_set_RUBY_VERSION '1.9.2', -1, 23493, 'ruby 1.9.2dev (2009-05-20 trunk 23493) [x86_64-linux]'
+
+    assert_equal Gem::Version.new('1.9.2.dev'), Gem.ruby_version
   ensure
     util_restore_RUBY_VERSION
   end
@@ -1197,7 +1294,7 @@ def test_self_user_dir
   end
 
   def test_self_user_home
-    if ENV['HOME'] then
+    if ENV['HOME']
       assert_equal ENV['HOME'], Gem.user_home
     else
       assert true, 'count this test'
@@ -1223,13 +1320,12 @@ def test_self_needs
   end
 
   def test_self_needs_picks_up_unresolved_deps
-    skip 'loading from unsafe file' if RUBY_VERSION <= "1.8.7"
     save_loaded_features do
       util_clear_gems
       a = util_spec "a", "1"
       b = util_spec "b", "1", "c" => nil
       c = util_spec "c", "2"
-      d =  new_spec "d", "1", {'e' => '= 1'}, "lib/d.rb"
+      d =  util_spec "d", "1", {'e' => '= 1'}, "lib/d.rb"
       e = util_spec "e", "1"
 
       install_specs a, c, b, e, d
@@ -1249,72 +1345,23 @@ def test_self_gunzip
     input = "\x1F\x8B\b\0\xED\xA3\x1AQ\0\x03\xCBH" +
             "\xCD\xC9\xC9\a\0\x86\xA6\x106\x05\0\0\0"
 
-    output = Gem.gunzip input
+    output = Gem::Util.gunzip input
 
     assert_equal 'hello', output
-
-    return unless Object.const_defined? :Encoding
-
     assert_equal Encoding::BINARY, output.encoding
   end
 
   def test_self_gzip
     input = 'hello'
 
-    output = Gem.gzip input
+    output = Gem::Util.gzip input
 
     zipped = StringIO.new output
 
     assert_equal 'hello', Zlib::GzipReader.new(zipped).read
-
-    return unless Object.const_defined? :Encoding
-
     assert_equal Encoding::BINARY, output.encoding
   end
 
-  if Gem.win_platform? && '1.9' > RUBY_VERSION
-    # Ruby 1.9 properly handles ~ path expansion, so no need to run such tests.
-    def test_self_user_home_userprofile
-
-      Gem.clear_paths
-
-      # safe-keep env variables
-      orig_home, orig_user_profile = ENV['HOME'], ENV['USERPROFILE']
-
-      # prepare for the test
-      ENV.delete('HOME')
-      ENV['USERPROFILE'] = "W:\\Users\\RubyUser"
-
-      assert_equal 'W:/Users/RubyUser', Gem.user_home
-
-    ensure
-      ENV['HOME'] = orig_home
-      ENV['USERPROFILE'] = orig_user_profile
-    end
-
-    def test_self_user_home_user_drive_and_path
-      Gem.clear_paths
-
-      # safe-keep env variables
-      orig_home, orig_user_profile = ENV['HOME'], ENV['USERPROFILE']
-      orig_home_drive, orig_home_path = ENV['HOMEDRIVE'], ENV['HOMEPATH']
-
-      # prepare the environment
-      ENV.delete('HOME')
-      ENV.delete('USERPROFILE')
-      ENV['HOMEDRIVE'] = 'Z:'
-      ENV['HOMEPATH'] = "\\Users\\RubyUser"
-
-      assert_equal 'Z:/Users/RubyUser', Gem.user_home
-
-    ensure
-      ENV['HOME'] = orig_home
-      ENV['USERPROFILE'] = orig_user_profile
-      ENV['HOMEDRIVE'] = orig_home_drive
-      ENV['HOMEPATH'] = orig_home_path
-    end
-  end
-
   def test_self_vendor_dir
     expected =
       File.join RbConfig::CONFIG['vendordir'], 'gems',
@@ -1340,7 +1387,6 @@ def test_self_vendor_dir_missing
   end
 
   def test_load_plugins
-    skip 'Insecure operation - chdir' if RUBY_VERSION <= "1.8.7"
     plugin_path = File.join "lib", "rubygems_plugin.rb"
 
     Dir.chdir @tempdir do
@@ -1395,8 +1441,8 @@ def test_gem_path_ordering
     write_file File.join(@tempdir, 'lib', "g.rb") { |fp| fp.puts "" }
     write_file File.join(@tempdir, 'lib', 'm.rb') { |fp| fp.puts "" }
 
-    g = new_spec 'g', '1', nil, "lib/g.rb"
-    m = new_spec 'm', '1', nil, "lib/m.rb"
+    g = util_spec 'g', '1', nil, "lib/g.rb"
+    m = util_spec 'm', '1', nil, "lib/m.rb"
 
     install_gem g, :install_dir => Gem.dir
     m0 = install_gem m, :install_dir => Gem.dir
@@ -1451,8 +1497,8 @@ def test_gem_path_ordering_short
     write_file File.join(@tempdir, 'lib', "g.rb") { |fp| fp.puts "" }
     write_file File.join(@tempdir, 'lib', 'm.rb') { |fp| fp.puts "" }
 
-    g = new_spec 'g', '1', nil, "lib/g.rb"
-    m = new_spec 'm', '1', nil, "lib/m.rb"
+    g = util_spec 'g', '1', nil, "lib/g.rb"
+    m = util_spec 'm', '1', nil, "lib/m.rb"
 
     install_gem g, :install_dir => Gem.dir
     install_gem m, :install_dir => Gem.dir
@@ -1469,9 +1515,9 @@ def test_gem_path_ordering_short
   def test_auto_activation_of_specific_gemdeps_file
     util_clear_gems
 
-    a = new_spec "a", "1", nil, "lib/a.rb"
-    b = new_spec "b", "1", nil, "lib/b.rb"
-    c = new_spec "c", "1", nil, "lib/c.rb"
+    a = util_spec "a", "1", nil, "lib/a.rb"
+    b = util_spec "b", "1", nil, "lib/b.rb"
+    c = util_spec "c", "1", nil, "lib/c.rb"
 
     install_specs a, b, c
 
@@ -1485,18 +1531,17 @@ def test_auto_activation_of_specific_gemdeps_file
 
     ENV['RUBYGEMS_GEMDEPS'] = path
 
-    Gem.detect_gemdeps
+    Gem.use_gemdeps
 
     assert_equal add_bundler_full_name(%W(a-1 b-1 c-1)), loaded_spec_names
   end
 
-  def test_auto_activation_of_detected_gemdeps_file
-    skip 'Insecure operation - chdir' if RUBY_VERSION <= "1.8.7"
+  def test_auto_activation_of_used_gemdeps_file
     util_clear_gems
 
-    a = new_spec "a", "1", nil, "lib/a.rb"
-    b = new_spec "b", "1", nil, "lib/b.rb"
-    c = new_spec "c", "1", nil, "lib/c.rb"
+    a = util_spec "a", "1", nil, "lib/a.rb"
+    b = util_spec "b", "1", nil, "lib/b.rb"
+    c = util_spec "c", "1", nil, "lib/c.rb"
 
     install_specs a, b, c
 
@@ -1511,14 +1556,14 @@ def test_auto_activation_of_detected_gemdeps_file
     ENV['RUBYGEMS_GEMDEPS'] = "-"
 
     expected_specs = [a, b, (Gem::USE_BUNDLER_FOR_GEMDEPS || nil) && util_spec("bundler", Bundler::VERSION), c].compact
-    assert_equal expected_specs, Gem.detect_gemdeps.sort_by { |s| s.name }
+    assert_equal expected_specs, Gem.use_gemdeps.sort_by { |s| s.name }
   end
 
   LIB_PATH = File.expand_path "../../../lib".dup.untaint, __FILE__.dup.untaint
 
   if Gem::USE_BUNDLER_FOR_GEMDEPS
     BUNDLER_LIB_PATH = File.expand_path $LOAD_PATH.find {|lp| File.file?(File.join(lp, "bundler.rb")) }.dup.untaint
-    BUNDLER_FULL_NAME = "bundler-#{Bundler::VERSION}"
+    BUNDLER_FULL_NAME = "bundler-#{Bundler::VERSION}".freeze
   end
 
   def add_bundler_full_name(names)
@@ -1531,9 +1576,9 @@ def add_bundler_full_name(names)
   def test_looks_for_gemdeps_files_automatically_on_start
     util_clear_gems
 
-    a = new_spec "a", "1", nil, "lib/a.rb"
-    b = new_spec "b", "1", nil, "lib/b.rb"
-    c = new_spec "c", "1", nil, "lib/c.rb"
+    a = util_spec "a", "1", nil, "lib/a.rb"
+    b = util_spec "b", "1", nil, "lib/b.rb"
+    c = util_spec "c", "1", nil, "lib/c.rb"
 
     install_specs a, b, c
 
@@ -1548,12 +1593,7 @@ def test_looks_for_gemdeps_files_automatically_on_start
     path = File.join @tempdir, "gem.deps.rb"
     cmd = [Gem.ruby.dup.untaint, "-I#{LIB_PATH.untaint}",
            "-I#{BUNDLER_LIB_PATH.untaint}", "-rrubygems"]
-    if RUBY_VERSION < '1.9'
-      cmd << "-e 'puts Gem.loaded_specs.values.map(&:full_name).sort'"
-      cmd = cmd.join(' ')
-    else
-      cmd << "-eputs Gem.loaded_specs.values.map(&:full_name).sort"
-    end
+    cmd << "-eputs Gem.loaded_specs.values.map(&:full_name).sort"
 
     File.open path, "w" do |f|
       f.puts "gem 'a'"
@@ -1572,9 +1612,9 @@ def test_looks_for_gemdeps_files_automatically_on_start
   def test_looks_for_gemdeps_files_automatically_on_start_in_parent_dir
     util_clear_gems
 
-    a = new_spec "a", "1", nil, "lib/a.rb"
-    b = new_spec "b", "1", nil, "lib/b.rb"
-    c = new_spec "c", "1", nil, "lib/c.rb"
+    a = util_spec "a", "1", nil, "lib/a.rb"
+    b = util_spec "b", "1", nil, "lib/b.rb"
+    c = util_spec "c", "1", nil, "lib/c.rb"
 
     install_specs a, b, c
 
@@ -1591,12 +1631,7 @@ def test_looks_for_gemdeps_files_automatically_on_start_in_parent_dir
     path = File.join @tempdir, "gem.deps.rb"
     cmd = [Gem.ruby.dup.untaint, "-Csub1", "-I#{LIB_PATH.untaint}",
            "-I#{BUNDLER_LIB_PATH.untaint}", "-rrubygems"]
-    if RUBY_VERSION < '1.9'
-      cmd << "-e 'puts Gem.loaded_specs.values.map(&:full_name).sort'"
-      cmd = cmd.join(' ')
-    else
-      cmd << "-eputs Gem.loaded_specs.values.map(&:full_name).sort"
-    end
+    cmd << "-eputs Gem.loaded_specs.values.map(&:full_name).sort"
 
     File.open path, "w" do |f|
       f.puts "gem 'a'"
@@ -1625,7 +1660,7 @@ def test_register_default_spec
 
     assert_equal old_style, Gem.find_unresolved_default_spec("foo.rb")
     assert_equal old_style, Gem.find_unresolved_default_spec("bar.rb")
-    assert_equal nil, Gem.find_unresolved_default_spec("baz.rb")
+    assert_nil              Gem.find_unresolved_default_spec("baz.rb")
 
     Gem.clear_default_specs
 
@@ -1638,13 +1673,13 @@ def test_register_default_spec
 
     assert_equal new_style, Gem.find_unresolved_default_spec("foo.rb")
     assert_equal new_style, Gem.find_unresolved_default_spec("bar.rb")
-    assert_equal nil, Gem.find_unresolved_default_spec("exec")
-    assert_equal nil, Gem.find_unresolved_default_spec("README")
+    assert_nil              Gem.find_unresolved_default_spec("exec")
+    assert_nil              Gem.find_unresolved_default_spec("README")
   end
 
   def test_default_gems_use_full_paths
     begin
-      if defined?(RUBY_ENGINE) then
+      if defined?(RUBY_ENGINE)
         engine = RUBY_ENGINE
         Object.send :remove_const, :RUBY_ENGINE
       end
@@ -1657,7 +1692,7 @@ def test_default_gems_use_full_paths
     end
 
     begin
-      if defined?(RUBY_ENGINE) then
+      if defined?(RUBY_ENGINE)
         engine = RUBY_ENGINE
         Object.send :remove_const, :RUBY_ENGINE
       end
@@ -1731,7 +1766,6 @@ def test_use_gemdeps_argument_missing_match_ENV
   end
 
   def test_use_gemdeps_automatic
-    skip 'Insecure operation - chdir' if RUBY_VERSION <= "1.8.7"
     rubygems_gemdeps, ENV['RUBYGEMS_GEMDEPS'] = ENV['RUBYGEMS_GEMDEPS'], '-'
 
     spec = util_spec 'a', 1
@@ -1752,7 +1786,6 @@ def test_use_gemdeps_automatic
   end
 
   def test_use_gemdeps_automatic_missing
-    skip 'Insecure operation - chdir' if RUBY_VERSION <= "1.8.7"
     rubygems_gemdeps, ENV['RUBYGEMS_GEMDEPS'] = ENV['RUBYGEMS_GEMDEPS'], '-'
 
     Gem.use_gemdeps
@@ -1781,7 +1814,6 @@ def test_use_gemdeps_disabled
   end
 
   def test_use_gemdeps_missing_gem
-    skip 'Insecure operation - read' if RUBY_VERSION <= "1.8.7"
     rubygems_gemdeps, ENV['RUBYGEMS_GEMDEPS'] = ENV['RUBYGEMS_GEMDEPS'], 'x'
 
     File.open 'x', 'w' do |io|
@@ -1794,19 +1826,20 @@ def test_use_gemdeps_missing_gem
     else
       platform = " #{platform}"
     end
-    expected = if Gem::USE_BUNDLER_FOR_GEMDEPS
-      <<-EXPECTED
+    expected =
+      if Gem::USE_BUNDLER_FOR_GEMDEPS
+        <<-EXPECTED
 Could not find gem 'a#{platform}' in any of the gem sources listed in your Gemfile.
 You may need to `gem install -g` to install missing gems
 
-      EXPECTED
-    else
-      <<-EXPECTED
+        EXPECTED
+      else
+        <<-EXPECTED
 Unable to resolve dependency: user requested 'a (>= 0)'
 You may need to `gem install -g` to install missing gems
 
-      EXPECTED
-    end
+        EXPECTED
+      end
 
     assert_output nil, expected do
       Gem.use_gemdeps
@@ -1816,7 +1849,6 @@ def test_use_gemdeps_missing_gem
   end if Gem::USE_BUNDLER_FOR_GEMDEPS
 
   def test_use_gemdeps_specific
-    skip 'Insecure operation - read' if RUBY_VERSION <= "1.8.7"
     rubygems_gemdeps, ENV['RUBYGEMS_GEMDEPS'] = ENV['RUBYGEMS_GEMDEPS'], 'x'
 
     spec = util_spec 'a', 1
@@ -1836,6 +1868,13 @@ def test_use_gemdeps_specific
     ENV['RUBYGEMS_GEMDEPS'] = rubygems_gemdeps
   end
 
+  def test_operating_system_defaults
+    operating_system_defaults = Gem.operating_system_defaults
+
+    assert operating_system_defaults != nil
+    assert operating_system_defaults.is_a? Hash
+  end
+
   def test_platform_defaults
     platform_defaults = Gem.platform_defaults
 
@@ -1843,13 +1882,13 @@ def test_platform_defaults
     assert platform_defaults.is_a? Hash
   end
 
-  def ruby_install_name name
+  def ruby_install_name(name)
     orig_RUBY_INSTALL_NAME = RbConfig::CONFIG['ruby_install_name']
     RbConfig::CONFIG['ruby_install_name'] = name
 
     yield
   ensure
-    if orig_RUBY_INSTALL_NAME then
+    if orig_RUBY_INSTALL_NAME
       RbConfig::CONFIG['ruby_install_name'] = orig_RUBY_INSTALL_NAME
     else
       RbConfig::CONFIG.delete 'ruby_install_name'
diff --git a/test/mri/rubygems/test_gem_command.rb b/test/mri/rubygems/test_gem_command.rb
index 4442c6108ea..8caa9c6e2eb 100644
--- a/test/mri/rubygems/test_gem_command.rb
+++ b/test/mri/rubygems/test_gem_command.rb
@@ -251,4 +251,3 @@ def test_show_lookup_failure_suggestions_remote
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_command_manager.rb b/test/mri/rubygems/test_gem_command_manager.rb
index 2d2fc7d7a0a..6ada96f1c1c 100644
--- a/test/mri/rubygems/test_gem_command_manager.rb
+++ b/test/mri/rubygems/test_gem_command_manager.rb
@@ -29,6 +29,12 @@ def test_find_command_ambiguous
                  e.message
   end
 
+  def test_find_alias_command
+    command = @command_manager.find_command 'i'
+
+    assert_kind_of Gem::Commands::InstallCommand, command
+  end
+
   def test_find_command_ambiguous_exact
     ins_command = Class.new
     Gem::Commands.send :const_set, :InsCommand, ins_command
@@ -114,13 +120,13 @@ def test_process_args_install
       assert_equal :both, check_options[:domain]
       assert_equal true, check_options[:wrappers]
       assert_equal Gem::Requirement.default, check_options[:version]
-      assert_equal nil, check_options[:install_dir]
-      assert_equal nil, check_options[:bin_dir]
+      assert_nil   check_options[:install_dir]
+      assert_nil   check_options[:bin_dir]
 
       #check settings
       check_options = nil
       @command_manager.process_args %w[
-        install --force --local --rdoc --install-dir .
+        install --force --local --document=ri,rdoc --install-dir .
                 --version 3.0 --no-wrapper --bindir .
       ]
       assert_equal %w[rdoc ri], check_options[:document].sort
@@ -254,11 +260,10 @@ def test_process_args_update
 
     #check settings
     check_options = nil
-    @command_manager.process_args %w[update --force --rdoc --install-dir .]
+    @command_manager.process_args %w[update --force --document=ri --install-dir .]
     assert_includes check_options[:document], 'ri'
     assert_equal true, check_options[:force]
     assert_equal Dir.pwd, check_options[:install_dir]
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_build_command.rb b/test/mri/rubygems/test_gem_commands_build_command.rb
index 08854f0bf18..ac82a408c77 100644
--- a/test/mri/rubygems/test_gem_commands_build_command.rb
+++ b/test/mri/rubygems/test_gem_commands_build_command.rb
@@ -6,16 +6,71 @@
 
 class TestGemCommandsBuildCommand < Gem::TestCase
 
+  CERT_FILE = cert_path 'public3072'
+  SIGNING_KEY = key_path 'private3072'
+
+  EXPIRED_CERT_FILE = cert_path 'expired'
+  PRIVATE_KEY_FILE  = key_path 'private'
+
   def setup
     super
 
+    readme_file = File.join(@tempdir, 'README.md')
+
+    File.open readme_file, 'w' do |f|
+      f.write 'My awesome gem'
+    end
+
     @gem = util_spec 'some_gem' do |s|
-      s.rubyforge_project = 'example'
+      s.license = 'AGPL-3.0'
+      s.files = ['README.md']
     end
 
     @cmd = Gem::Commands::BuildCommand.new
   end
 
+  def test_handle_options
+    @cmd.handle_options %w[--force --strict]
+
+    assert @cmd.options[:force]
+    assert @cmd.options[:strict]
+  end
+
+  def test_options_filename
+    gemspec_file = File.join(@tempdir, @gem.spec_name)
+
+    File.open gemspec_file, 'w' do |gs|
+      gs.write @gem.to_ruby
+    end
+
+    @cmd.options[:args] = [gemspec_file]
+    @cmd.options[:output] = "test.gem"
+
+    use_ui @ui do
+      Dir.chdir @tempdir do
+        @cmd.execute
+      end
+    end
+
+    file = File.join(@tempdir, File::SEPARATOR, "test.gem")
+    assert File.exist?(file)
+
+    output = @ui.output.split "\n"
+    assert_equal "  Successfully built RubyGem", output.shift
+    assert_equal "  Name: some_gem", output.shift
+    assert_equal "  Version: 2", output.shift
+    assert_equal "  File: test.gem", output.shift
+    assert_equal [], output
+  end
+
+  def test_handle_options_defaults
+    @cmd.handle_options []
+
+    refute @cmd.options[:force]
+    refute @cmd.options[:strict]
+    assert_nil @cmd.options[:output]
+  end
+
   def test_execute
     gemspec_file = File.join(@tempdir, @gem.spec_name)
 
@@ -23,7 +78,80 @@ def test_execute
       gs.write @gem.to_ruby
     end
 
-    util_test_build_gem @gem, gemspec_file
+    @cmd.options[:args] = [gemspec_file]
+
+    util_test_build_gem @gem
+  end
+
+  def test_execute_bad_name
+    [".", "-", "_"].each do |special_char|
+      gem = util_spec 'some_gem_with_bad_name' do |s|
+        s.name = "#{special_char}bad_gem_name"
+        s.license = 'AGPL-3.0'
+        s.files = ['README.md']
+      end
+
+      gemspec_file = File.join(@tempdir, gem.spec_name)
+
+      File.open gemspec_file, 'w' do |gs|
+        gs.write gem.to_ruby
+      end
+
+      @cmd.options[:args] = [gemspec_file]
+
+      use_ui @ui do
+        Dir.chdir @tempdir do
+          assert_raises Gem::InvalidSpecificationException do
+            @cmd.execute
+          end
+        end
+      end
+    end
+  end
+
+  def test_execute_strict_without_warnings
+    gemspec_file = File.join(@tempdir, @gem.spec_name)
+
+    File.open gemspec_file, 'w' do |gs|
+      gs.write @gem.to_ruby
+    end
+
+    @cmd.options[:strict] = true
+    @cmd.options[:args] = [gemspec_file]
+
+    util_test_build_gem @gem
+  end
+
+  def test_execute_strict_with_warnings
+    bad_gem = util_spec 'some_bad_gem' do |s|
+      s.files = ['README.md']
+    end
+
+    gemspec_file = File.join(@tempdir, bad_gem.spec_name)
+
+    File.open gemspec_file, 'w' do |gs|
+      gs.write bad_gem.to_ruby
+    end
+
+    @cmd.options[:args] = [gemspec_file]
+    @cmd.options[:strict] = true
+
+    use_ui @ui do
+      Dir.chdir @tempdir do
+        assert_raises Gem::InvalidSpecificationException do
+          @cmd.execute
+        end
+      end
+    end
+
+    error = @ui.error.split "\n"
+    assert_equal "WARNING:  licenses is empty, but is recommended.  Use a license identifier from", error.shift
+    assert_equal "http://spdx.org/licenses or 'Nonstandard' for a nonstandard license.", error.shift
+    assert_equal "WARNING:  See http://guides.rubygems.org/specification-reference/ for help", error.shift
+    assert_equal [], error
+
+    gem_file = File.join @tempdir, File.basename(@gem.cache_file)
+    refute File.exist?(gem_file)
   end
 
   def test_execute_bad_spec
@@ -64,6 +192,43 @@ def test_execute_missing_file
     assert_equal "ERROR:  Gemspec file not found: some_gem\n", @ui.error
   end
 
+  def test_execute_outside_dir
+    gemspec_dir = File.join @tempdir, 'build_command_gem'
+    gemspec_file = File.join gemspec_dir, @gem.spec_name
+    readme_file = File.join gemspec_dir, 'README.md'
+
+    FileUtils.mkdir_p gemspec_dir
+
+    File.open readme_file, 'w' do |f|
+      f.write "My awesome gem"
+    end
+
+    File.open gemspec_file, 'w' do |gs|
+      gs.write @gem.to_ruby
+    end
+
+    @cmd.options[:args] = [gemspec_file]
+
+    use_ui @ui do
+      @cmd.execute
+    end
+
+    output = @ui.output.split "\n"
+    assert_equal "  Successfully built RubyGem", output.shift
+    assert_equal "  Name: some_gem", output.shift
+    assert_equal "  Version: 2", output.shift
+    assert_equal "  File: some_gem-2.gem", output.shift
+    assert_equal [], output
+
+    gem_file = File.join gemspec_dir, File.basename(@gem.cache_file)
+    assert File.exist?(gem_file)
+
+    spec = Gem::Package.new(gem_file).spec
+
+    assert_equal "some_gem", spec.name
+    assert_equal "this is a summary", spec.summary
+  end
+
   def test_can_find_gemspecs_without_dot_gemspec
     gemspec_file = File.join(@tempdir, @gem.spec_name)
 
@@ -71,12 +236,12 @@ def test_can_find_gemspecs_without_dot_gemspec
       gs.write @gem.to_ruby
     end
 
-    util_test_build_gem @gem, gemspec_file
-  end
-
-  def util_test_build_gem(gem, gemspec_file, check_licenses=true)
     @cmd.options[:args] = [gemspec_file]
 
+    util_test_build_gem @gem
+  end
+
+  def util_test_build_gem(gem)
     use_ui @ui do
       Dir.chdir @tempdir do
         @cmd.execute
@@ -90,10 +255,6 @@ def util_test_build_gem(gem, gemspec_file, check_licenses=true)
     assert_equal "  File: some_gem-2.gem", output.shift
     assert_equal [], output
 
-    if check_licenses
-      assert_match "WARNING:  licenses is empty", @ui.error
-    end
-
     gem_file = File.join @tempdir, File.basename(gem.cache_file)
     assert File.exist?(gem_file)
 
@@ -115,13 +276,12 @@ def test_execute_force
     @cmd.options[:args] = [gemspec_file]
     @cmd.options[:force] = true
 
-    util_test_build_gem @gem, gemspec_file, false
+    util_test_build_gem @gem
   end
 
-  CERT_FILE = cert_path 'public3072'
-  SIGNING_KEY = key_path 'private3072'
-
   def test_build_signed_gem
+    skip 'openssl is missing' unless defined?(OpenSSL::SSL)
+
     trust_dir = Gem::Security.trust_dir
 
     spec = util_spec 'some_gem' do |s|
@@ -135,7 +295,9 @@ def test_build_signed_gem
       gs.write spec.to_ruby
     end
 
-    util_test_build_gem spec, gemspec_file
+    @cmd.options[:args] = [gemspec_file]
+
+    util_test_build_gem spec
 
     trust_dir.trust_cert OpenSSL::X509::Certificate.new(File.read(CERT_FILE))
 
@@ -144,4 +306,48 @@ def test_build_signed_gem
     assert gem.verify
   end
 
+  def test_build_signed_gem_with_cert_expiration_length_days
+    skip 'openssl is missing' unless defined?(OpenSSL::SSL)
+
+    gem_path = File.join Gem.user_home, ".gem"
+    Dir.mkdir gem_path
+
+    Gem::Security.trust_dir
+
+    tmp_expired_cert_file = File.join gem_path, "gem-public_cert.pem"
+    File.write(tmp_expired_cert_file, File.read(EXPIRED_CERT_FILE))
+
+    tmp_private_key_file = File.join gem_path, "gem-private_key.pem"
+    File.write(tmp_private_key_file, File.read(PRIVATE_KEY_FILE))
+
+    spec = util_spec 'some_gem' do |s|
+      s.signing_key = tmp_private_key_file
+      s.cert_chain  = [tmp_expired_cert_file]
+    end
+
+    gemspec_file = File.join(@tempdir, spec.spec_name)
+
+    File.open gemspec_file, 'w' do |gs|
+      gs.write spec.to_ruby
+    end
+
+    @cmd.options[:args] = [gemspec_file]
+
+    Gem.configuration.cert_expiration_length_days = 28
+
+    use_ui @ui do
+      Dir.chdir @tempdir do
+        @cmd.execute
+      end
+    end
+
+    re_signed_cert = OpenSSL::X509::Certificate.new(File.read(tmp_expired_cert_file))
+    cert_days_to_expire = (re_signed_cert.not_after - re_signed_cert.not_before).to_i / (24 * 60 * 60)
+
+    gem_file = File.join @tempdir, File.basename(spec.cache_file)
+
+    assert File.exist?(gem_file)
+    assert_equal(28, cert_days_to_expire)
+  end
+
 end
diff --git a/test/mri/rubygems/test_gem_commands_cert_command.rb b/test/mri/rubygems/test_gem_commands_cert_command.rb
index 2d38a57bc4b..d7381f14d0f 100644
--- a/test/mri/rubygems/test_gem_commands_cert_command.rb
+++ b/test/mri/rubygems/test_gem_commands_cert_command.rb
@@ -1,23 +1,24 @@
 # frozen_string_literal: true
 require 'rubygems/test_case'
 require 'rubygems/commands/cert_command'
-require 'rubygems/fix_openssl_warnings' if RUBY_VERSION < "1.9"
 
-unless defined?(OpenSSL::SSL) then
+unless defined?(OpenSSL::SSL)
   warn 'Skipping `gem cert` tests.  openssl not found.'
 end
 
 class TestGemCommandsCertCommand < Gem::TestCase
 
   ALTERNATE_CERT = load_cert 'alternate'
+  EXPIRED_PUBLIC_CERT = load_cert 'expired'
 
   ALTERNATE_KEY_FILE = key_path 'alternate'
   PRIVATE_KEY_FILE   = key_path 'private'
   PUBLIC_KEY_FILE    = key_path 'public'
 
-  ALTERNATE_CERT_FILE = cert_path 'alternate'
-  CHILD_CERT_FILE     = cert_path 'child'
-  PUBLIC_CERT_FILE    = cert_path 'public'
+  ALTERNATE_CERT_FILE      = cert_path 'alternate'
+  CHILD_CERT_FILE          = cert_path 'child'
+  PUBLIC_CERT_FILE         = cert_path 'public'
+  EXPIRED_PUBLIC_CERT_FILE = cert_path 'expired'
 
   def setup
     super
@@ -158,7 +159,7 @@ def test_execute_build_expiration_days
     @cmd.handle_options %W[
       --build nobody@example.com
       --days 26
-      ]
+    ]
 
     @build_ui = Gem::MockGemUi.new "#{passphrase}\n#{passphrase}"
 
@@ -191,7 +192,6 @@ def test_execute_build_expiration_days
 
     test = (cert.not_after - cert.not_before).to_i / (24 * 60 * 60)
     assert_equal(test, 26)
-
   end
 
   def test_execute_build_bad_passphrase_confirmation
@@ -583,6 +583,68 @@ def test_execute_sign_no_key
     assert_equal expected, @ui.error
   end
 
+  def test_execute_re_sign
+    gem_path = File.join Gem.user_home, ".gem"
+    Dir.mkdir gem_path
+
+    path = File.join @tempdir, 'cert.pem'
+    Gem::Security.write EXPIRED_PUBLIC_CERT, path, 0600
+
+    assert_equal '/CN=nobody/DC=example', EXPIRED_PUBLIC_CERT.issuer.to_s
+
+    tmp_expired_cert_file = File.join(Dir.tmpdir, File.basename(EXPIRED_PUBLIC_CERT_FILE))
+    File.write(tmp_expired_cert_file, File.read(EXPIRED_PUBLIC_CERT_FILE))
+
+    @cmd.handle_options %W[
+      --private-key #{PRIVATE_KEY_FILE}
+      --certificate #{tmp_expired_cert_file}
+      --re-sign
+    ]
+
+    use_ui @ui do
+      @cmd.execute
+    end
+
+    expected_path = File.join(gem_path, "#{File.basename(tmp_expired_cert_file)}.expired")
+
+    assert_match(
+      /INFO:  Your certificate #{tmp_expired_cert_file} has been re-signed\nINFO:  Your expired certificate will be located at: #{expected_path}\.[0-9]+/,
+      @ui.output
+    )
+    assert_equal '', @ui.error
+  end
+
+  def test_execute_re_sign_with_cert_expiration_length_days
+    gem_path = File.join Gem.user_home, ".gem"
+    Dir.mkdir gem_path
+
+    path = File.join @tempdir, 'cert.pem'
+    Gem::Security.write EXPIRED_PUBLIC_CERT, path, 0600
+
+    assert_equal '/CN=nobody/DC=example', EXPIRED_PUBLIC_CERT.issuer.to_s
+
+    tmp_expired_cert_file = File.join(Dir.tmpdir, File.basename(EXPIRED_PUBLIC_CERT_FILE))
+    File.write(tmp_expired_cert_file, File.read(EXPIRED_PUBLIC_CERT_FILE))
+
+    @cmd.handle_options %W[
+      --private-key #{PRIVATE_KEY_FILE}
+      --certificate #{tmp_expired_cert_file}
+      --re-sign
+    ]
+
+    Gem.configuration.cert_expiration_length_days = 28
+
+    use_ui @ui do
+      @cmd.execute
+    end
+
+    re_signed_cert = OpenSSL::X509::Certificate.new(File.read(tmp_expired_cert_file))
+    cert_days_to_expire = (re_signed_cert.not_after - re_signed_cert.not_before).to_i / (24 * 60 * 60)
+
+    assert_equal(28, cert_days_to_expire)
+    assert_equal '', @ui.error
+  end
+
   def test_handle_options
     @cmd.handle_options %W[
       --add #{PUBLIC_CERT_FILE}
@@ -732,4 +794,3 @@ def test_handle_options_sign_nonexistent
   end
 
 end if defined?(OpenSSL::SSL)
-
diff --git a/test/mri/rubygems/test_gem_commands_check_command.rb b/test/mri/rubygems/test_gem_commands_check_command.rb
index b220b4d36c4..6a6033d35d2 100644
--- a/test/mri/rubygems/test_gem_commands_check_command.rb
+++ b/test/mri/rubygems/test_gem_commands_check_command.rb
@@ -10,7 +10,7 @@ def setup
     @cmd = Gem::Commands::CheckCommand.new
   end
 
-  def gem name
+  def gem(name)
     spec = quick_gem name do |gem|
       gem.files = %W[lib/#{name}.rb Rakefile]
     end
diff --git a/test/mri/rubygems/test_gem_commands_cleanup_command.rb b/test/mri/rubygems/test_gem_commands_cleanup_command.rb
index 60d208fcc0b..fdcd71ed8ab 100644
--- a/test/mri/rubygems/test_gem_commands_cleanup_command.rb
+++ b/test/mri/rubygems/test_gem_commands_cleanup_command.rb
@@ -236,5 +236,31 @@ def test_execute_remove_gem_home_only
     refute_path_exists d_1.gem_dir
     refute_path_exists e_1.gem_dir
   end
-end
 
+  def test_execute_user_install
+    c_1, = util_gem 'c', '1.0'
+    c_2, = util_gem 'c', '1.1'
+
+    d_1, = util_gem 'd', '1.0'
+    d_2, = util_gem 'd', '1.1'
+
+    c_1 = install_gem c_1, :user_install => true # pick up user install path
+    c_2 = install_gem c_2, :user_install => true # pick up user install path
+
+    d_1 = install_gem d_1
+    d_2 = install_gem d_2
+
+    Gem::Specification.dirs = [Gem.dir, Gem.user_dir]
+
+    @cmd.handle_options %w[--user-install]
+    @cmd.options[:args] = []
+
+    @cmd.execute
+
+    refute_path_exists c_1.gem_dir
+    assert_path_exists c_2.gem_dir
+
+    assert_path_exists d_1.gem_dir
+    assert_path_exists d_2.gem_dir
+  end
+end
diff --git a/test/mri/rubygems/test_gem_commands_contents_command.rb b/test/mri/rubygems/test_gem_commands_contents_command.rb
index 65644f476b9..a8d6efe7940 100644
--- a/test/mri/rubygems/test_gem_commands_contents_command.rb
+++ b/test/mri/rubygems/test_gem_commands_contents_command.rb
@@ -10,7 +10,7 @@ def setup
     @cmd = Gem::Commands::ContentsCommand.new
   end
 
-  def gem name, version = 2
+  def gem(name, version = 2)
     spec = quick_gem name, version do |gem|
       gem.files = %W[lib/#{name}.rb Rakefile]
     end
@@ -237,4 +237,3 @@ def test_handle_options
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_dependency_command.rb b/test/mri/rubygems/test_gem_commands_dependency_command.rb
index d0389ccf552..25b759dd85a 100644
--- a/test/mri/rubygems/test_gem_commands_dependency_command.rb
+++ b/test/mri/rubygems/test_gem_commands_dependency_command.rb
@@ -6,7 +6,7 @@ class TestGemCommandsDependencyCommand < Gem::TestCase
 
   def setup
     super
-
+    @stub_ui = Gem::MockGemUi.new
     @cmd = Gem::Commands::DependencyCommand.new
     @cmd.options[:domain] = :local
   end
@@ -19,17 +19,17 @@ def test_execute
 
     @cmd.options[:args] = %w[foo]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
     assert_equal "Gem foo-2\n  bar (> 1)\n  baz (> 1)\n\n",
-                 @ui.output
-    assert_equal '', @ui.error
+                 @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_no_args
-    install_specs new_spec 'x', '2'
+    install_specs util_spec 'x', '2'
 
     spec_fetcher do |fetcher|
       fetcher.spec 'a', 1
@@ -40,7 +40,7 @@ def test_execute_no_args
 
     @cmd.options[:args] = []
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -58,21 +58,21 @@ def test_execute_no_args
 
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_no_match
     @cmd.options[:args] = %w[foo]
 
     assert_raises Gem::MockGemUi::TermError do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
 
-    assert_equal "No gems found matching foo (>= 0)\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "No gems found matching foo (>= 0)\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_pipe_format
@@ -85,12 +85,12 @@ def test_execute_pipe_format
     @cmd.options[:args] = %w[foo]
     @cmd.options[:pipe_format] = true
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
-    assert_equal "bar --version '> 1'\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "bar --version '> 1'\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_regexp
@@ -103,7 +103,7 @@ def test_execute_regexp
 
     @cmd.options[:args] = %w[/[ab]/]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -118,8 +118,8 @@ def test_execute_regexp
 
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_reverse
@@ -135,7 +135,7 @@ def test_execute_reverse
     @cmd.options[:args] = %w[foo]
     @cmd.options[:reverse_dependencies] = true
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -147,8 +147,8 @@ def test_execute_reverse
 
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_reverse_remote
@@ -157,7 +157,7 @@ def test_execute_reverse_remote
     @cmd.options[:domain] = :remote
 
     assert_raises Gem::MockGemUi::TermError do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
@@ -166,12 +166,12 @@ def test_execute_reverse_remote
 ERROR:  Only reverse dependencies for local gems are supported.
     EOF
 
-    assert_equal '', @ui.output
-    assert_equal expected, @ui.error
+    assert_equal '', @stub_ui.output
+    assert_equal expected, @stub_ui.error
   end
 
   def test_execute_remote
-    install_specs new_spec 'bar', '2'
+    install_specs util_spec 'bar', '2'
 
     spec_fetcher do |fetcher|
       fetcher.spec 'foo', 2, 'bar' => '> 1'
@@ -180,12 +180,12 @@ def test_execute_remote
     @cmd.options[:args] = %w[foo]
     @cmd.options[:domain] = :remote
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
-    assert_equal "Gem foo-2\n  bar (> 1)\n\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "Gem foo-2\n  bar (> 1)\n\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_remote_version
@@ -201,12 +201,12 @@ def test_execute_remote_version
     @cmd.options[:domain] = :remote
     @cmd.options[:version] = req '= 1'
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
-    assert_equal "Gem a-1\n\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "Gem a-1\n\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_prerelease
@@ -218,13 +218,12 @@ def test_execute_prerelease
     @cmd.options[:domain] = :remote
     @cmd.options[:prerelease] = true
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
-    assert_equal "Gem a-2.a\n\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "Gem a-2.a\n\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_environment_command.rb b/test/mri/rubygems/test_gem_commands_environment_command.rb
index 040e5c4c39e..1451f039828 100644
--- a/test/mri/rubygems/test_gem_commands_environment_command.rb
+++ b/test/mri/rubygems/test_gem_commands_environment_command.rb
@@ -29,6 +29,7 @@ def test_execute
     assert_match %r|RUBYGEMS PREFIX: |, @ui.output
     assert_match %r|RUBY EXECUTABLE:.*#{RbConfig::CONFIG['ruby_install_name']}|,
                  @ui.output
+    assert_match %r|GIT EXECUTABLE: #{@cmd.send(:git_path)}|, @ui.output
     assert_match %r|SYSTEM CONFIGURATION DIRECTORY:|, @ui.output
     assert_match %r|EXECUTABLE DIRECTORY:|, @ui.output
     assert_match %r|RUBYGEMS PLATFORMS:|, @ui.output
diff --git a/test/mri/rubygems/test_gem_commands_fetch_command.rb b/test/mri/rubygems/test_gem_commands_fetch_command.rb
index 6858327ed3c..9989f57bd7c 100644
--- a/test/mri/rubygems/test_gem_commands_fetch_command.rb
+++ b/test/mri/rubygems/test_gem_commands_fetch_command.rb
@@ -124,4 +124,3 @@ def test_execute_version
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_generate_index_command.rb b/test/mri/rubygems/test_gem_commands_generate_index_command.rb
index 7e30a6dccfb..b4276702f47 100644
--- a/test/mri/rubygems/test_gem_commands_generate_index_command.rb
+++ b/test/mri/rubygems/test_gem_commands_generate_index_command.rb
@@ -48,4 +48,3 @@ def test_handle_options_update
   end
 
 end if ''.respond_to? :to_xs
-
diff --git a/test/mri/rubygems/test_gem_commands_help_command.rb b/test/mri/rubygems/test_gem_commands_help_command.rb
index 986df1a9a5b..55bc797b289 100644
--- a/test/mri/rubygems/test_gem_commands_help_command.rb
+++ b/test/mri/rubygems/test_gem_commands_help_command.rb
@@ -7,13 +7,16 @@
 require File.expand_path('../rubygems_plugin', __FILE__)
 
 class TestGemCommandsHelpCommand < Gem::TestCase
+  # previously this was calc'd in setup, but 1.8.7 had
+  # intermittent failures, but no issues with above require
+  PLUGIN = File.expand_path('../rubygems_plugin.rb', __FILE__)
+
   def setup
     super
 
     @cmd = Gem::Commands::HelpCommand.new
 
-    load File.expand_path('../rubygems_plugin.rb', __FILE__) unless
-      Gem::Commands.const_defined? :InterruptCommand
+    load PLUGIN unless Gem::Commands.const_defined? :InterruptCommand
   end
 
   def test_gem_help_bad
@@ -45,7 +48,7 @@ def test_gem_help_commands
         assert_match(/\s+#{cmd}\s+\S+/, out)
       end
 
-      if defined?(OpenSSL::SSL) then
+      if defined?(OpenSSL::SSL)
         assert_empty err
 
         refute_match 'No command found for ', out
@@ -61,7 +64,7 @@ def test_gem_no_args_shows_help
     end
   end
 
-  def util_gem *args
+  def util_gem(*args)
     @cmd.options[:args] = args
 
     use_ui @ui do
diff --git a/test/mri/rubygems/test_gem_commands_info_command.rb b/test/mri/rubygems/test_gem_commands_info_command.rb
new file mode 100644
index 00000000000..83b18c50365
--- /dev/null
+++ b/test/mri/rubygems/test_gem_commands_info_command.rb
@@ -0,0 +1,44 @@
+# frozen_string_literal: true
+require 'rubygems/test_case'
+require 'rubygems/commands/info_command'
+
+class TestGemCommandsInfoCommand < Gem::TestCase
+
+  def setup
+    super
+
+    @cmd = Gem::Commands::InfoCommand.new
+  end
+
+  def gem(name, version = "1.0")
+    spec = quick_gem name do |gem|
+      gem.summary = "test gem"
+      gem.homepage = "https://github.com/rubygems/rubygems"
+      gem.files = %W[lib/#{name}.rb Rakefile]
+      gem.authors = ["Colby", "Jack"]
+      gem.license = "MIT"
+      gem.version = version
+    end
+    write_file File.join(*%W[gems #{spec.full_name} lib #{name}.rb])
+    write_file File.join(*%W[gems #{spec.full_name} Rakefile])
+    spec
+  end
+
+  def test_execute
+    @gem = gem "foo", "1.0.0"
+
+    @cmd.handle_options %w[foo]
+
+    use_ui @ui do
+      @cmd.execute
+    end
+
+    assert_match %r%#{@gem.name} \(#{@gem.version}\)\n%, @ui.output
+    assert_match %r%Authors: #{@gem.authors.join(', ')}\n%, @ui.output
+    assert_match %r%Homepage: #{@gem.homepage}\n%, @ui.output
+    assert_match %r%License: #{@gem.license}\n%, @ui.output
+    assert_match %r%Installed at: #{@gem.base_dir}\n%, @ui.output
+    assert_match %r%#{@gem.summary}\n%, @ui.output
+    assert_match "", @ui.error
+  end
+end
diff --git a/test/mri/rubygems/test_gem_commands_install_command.rb b/test/mri/rubygems/test_gem_commands_install_command.rb
index 822d40e3f33..0976a31b502 100644
--- a/test/mri/rubygems/test_gem_commands_install_command.rb
+++ b/test/mri/rubygems/test_gem_commands_install_command.rb
@@ -55,7 +55,7 @@ def test_execute_explicit_version_includes_prerelease
     a2_pre = specs['a-2.a']
 
     @cmd.handle_options [a2_pre.name, '--version', a2_pre.version.to_s,
-                         "--no-ri", "--no-rdoc"]
+                         "--no-document"]
     assert @cmd.options[:prerelease]
     assert @cmd.options[:version].satisfied_by?(a2_pre.version)
 
@@ -201,6 +201,38 @@ def test_execute_nonexistent
     assert_match(/ould not find a valid gem 'nonexistent'/, @ui.error)
   end
 
+  def test_execute_dependency_nonexistent
+    spec_fetcher do |fetcher|
+      fetcher.spec 'foo', 2, 'bar' => '0.5'
+    end
+
+    @cmd.options[:args] = ['foo']
+
+    use_ui @ui do
+      e = assert_raises Gem::MockGemUi::TermError do
+        @cmd.execute
+      end
+
+      assert_equal 2, e.exit_code
+    end
+
+    expected = <<-EXPECTED
+ERROR:  Could not find a valid gem 'bar' (= 0.5) (required by 'foo' (>= 0)) in any repository
+    EXPECTED
+
+    assert_equal expected, @ui.error
+  end
+
+  def test_execute_http_proxy
+    use_ui @ui do
+      e = assert_raises ArgumentError, @ui.error do
+        @cmd.handle_options %w[-p=foo.bar.com]
+      end
+
+      assert_match "Invalid uri scheme for =foo.bar.com\nPreface URLs with one of [\"http://\", \"https://\", \"file://\", \"s3://\"]", e.message
+    end
+  end
+
   def test_execute_bad_source
     spec_fetcher
 
@@ -361,6 +393,23 @@ def test_execute_prerelease_wins_over_previous_ver
     assert_equal %w[a-2.a], @cmd.installed_specs.map { |spec| spec.full_name }
   end
 
+  def test_execute_with_version_specified_by_colon
+    spec_fetcher do |fetcher|
+      fetcher.download 'a', 1
+      fetcher.download 'a', 2
+    end
+
+    @cmd.options[:args] = %w[a:1]
+
+    use_ui @ui do
+      assert_raises Gem::MockGemUi::SystemExitException, @ui.error do
+        @cmd.execute
+      end
+    end
+
+    assert_equal %w[a-1], @cmd.installed_specs.map { |spec| spec.full_name }
+  end
+
   def test_execute_prerelease_skipped_when_non_pre_available
     spec_fetcher do |fetcher|
       fetcher.gem 'a', '2.pre'
@@ -380,7 +429,6 @@ def test_execute_prerelease_skipped_when_non_pre_available
   end
 
   def test_execute_rdoc
-    skip if RUBY_VERSION <= "1.8.7"
     specs = spec_fetcher do |fetcher|
       fetcher.gem 'a', 2
     end
@@ -416,6 +464,42 @@ def test_execute_rdoc
     assert_path_exists File.join(a2.doc_dir, 'rdoc')
   end
 
+  def test_execute_rdoc_with_path
+    specs = spec_fetcher do |fetcher|
+      fetcher.gem 'a', 2
+    end
+
+    Gem.done_installing(&Gem::RDoc.method(:generation_hook))
+
+    @cmd.options[:document] = %w[rdoc ri]
+    @cmd.options[:domain] = :local
+    @cmd.options[:install_dir] = 'whatever'
+
+    a2 = specs['a-2']
+    FileUtils.mv a2.cache_file, @tempdir
+
+    @cmd.options[:args] = %w[a]
+
+    use_ui @ui do
+      # Don't use Dir.chdir with a block, it warnings a lot because
+      # of a downstream Dir.chdir with a block
+      old = Dir.getwd
+
+      begin
+        Dir.chdir @tempdir
+        assert_raises Gem::MockGemUi::SystemExitException, @ui.error do
+          @cmd.execute
+        end
+      ensure
+        Dir.chdir old
+      end
+    end
+
+    wait_for_child_process_to_exit
+
+    assert_path_exists 'whatever/doc/a-2', 'documentation not installed'
+  end
+
   def test_execute_saves_build_args
     specs = spec_fetcher do |fetcher|
       fetcher.gem 'a', 2
@@ -581,12 +665,32 @@ def test_execute_two_version
 
     assert_empty @cmd.installed_specs
 
-    msg = "ERROR:  Can't use --version w/ multiple gems. Use name:ver instead."
+    msg = "ERROR:  Can't use --version with multiple gems. You can specify multiple gems with" \
+      " version requirements using `gem install 'my_gem:1.0.0' 'my_other_gem:~>2.0.0'`"
 
     assert_empty @ui.output
     assert_equal msg, @ui.error.chomp
   end
 
+  def test_execute_two_version_specified_by_colon
+    spec_fetcher do |fetcher|
+      fetcher.gem 'a', 1
+      fetcher.gem 'a', 2
+      fetcher.gem 'b', 1
+      fetcher.gem 'b', 2
+    end
+
+    @cmd.options[:args] = %w[a:1 b:1]
+
+    use_ui @ui do
+      assert_raises Gem::MockGemUi::SystemExitException, @ui.error do
+        @cmd.execute
+      end
+    end
+
+    assert_equal %w[a-1 b-1], @cmd.installed_specs.map { |spec| spec.full_name }
+  end
+
   def test_execute_conservative
     spec_fetcher do |fetcher|
       fetcher.download 'b', 2
diff --git a/test/mri/rubygems/test_gem_commands_lock_command.rb b/test/mri/rubygems/test_gem_commands_lock_command.rb
index af1fce999c7..a35ed081cbd 100644
--- a/test/mri/rubygems/test_gem_commands_lock_command.rb
+++ b/test/mri/rubygems/test_gem_commands_lock_command.rb
@@ -66,4 +66,3 @@ def test_execute_strict
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_open_command.rb b/test/mri/rubygems/test_gem_commands_open_command.rb
index a96fa6ea23f..e73a1382048 100644
--- a/test/mri/rubygems/test_gem_commands_open_command.rb
+++ b/test/mri/rubygems/test_gem_commands_open_command.rb
@@ -68,4 +68,33 @@ def test_execute_bad_gem
     assert_equal "", @ui.error
   end
 
+  def test_default_gem
+    @cmd.options[:version] = "1.0"
+    @cmd.options[:args] = %w[foo]
+
+    version = @cmd.options[:version]
+    @cmd.define_singleton_method(:spec_for) do |name|
+      spec = Gem::Specification.find_all_by_name(name, version).first
+
+      spec.define_singleton_method(:default_gem?) do
+        true
+      end
+
+      return spec if spec
+
+      say "Unable to find gem '#{name}'"
+    end
+
+    gem("foo", "1.0")
+
+    assert_raises Gem::MockGemUi::TermError do
+      use_ui @ui do
+        @cmd.execute
+      end
+    end
+
+    assert_match %r|'foo' is a default gem and can't be opened\.| , @ui.output
+    assert_equal "", @ui.error
+  end
+
 end
diff --git a/test/mri/rubygems/test_gem_commands_outdated_command.rb b/test/mri/rubygems/test_gem_commands_outdated_command.rb
index 626b29057de..3b0220e84b5 100644
--- a/test/mri/rubygems/test_gem_commands_outdated_command.rb
+++ b/test/mri/rubygems/test_gem_commands_outdated_command.rb
@@ -30,4 +30,3 @@ def test_execute
     assert_equal "", @ui.error
   end
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_owner_command.rb b/test/mri/rubygems/test_gem_commands_owner_command.rb
index 53cac4ce87e..071079c0dd7 100644
--- a/test/mri/rubygems/test_gem_commands_owner_command.rb
+++ b/test/mri/rubygems/test_gem_commands_owner_command.rb
@@ -8,8 +8,10 @@ def setup
     super
 
     ENV["RUBYGEMS_HOST"] = nil
-    @fetcher = Gem::FakeFetcher.new
-    Gem::RemoteFetcher.fetcher = @fetcher
+    @stub_ui = Gem::MockGemUi.new
+    @stub_fetcher = Gem::FakeFetcher.new
+    Gem::RemoteFetcher.fetcher = @stub_fetcher
+    Gem.configuration = nil
     Gem.configuration.rubygems_api_key = "ed244fbf2b1a52e012da8616c512fa47f9aa5250"
 
     @cmd = Gem::Commands::OwnerCommand.new
@@ -27,20 +29,20 @@ def test_show_owners
 - id: 4
 EOF
 
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.show_owners("freewill")
     end
 
-    assert_equal Net::HTTP::Get, @fetcher.last_request.class
-    assert_equal Gem.configuration.rubygems_api_key, @fetcher.last_request["Authorization"]
+    assert_equal Net::HTTP::Get, @stub_fetcher.last_request.class
+    assert_equal Gem.configuration.rubygems_api_key, @stub_fetcher.last_request["Authorization"]
 
-    assert_match %r{Owners for gem: freewill}, @ui.output
-    assert_match %r{- user1@example.com}, @ui.output
-    assert_match %r{- user2@example.com}, @ui.output
-    assert_match %r{- user3}, @ui.output
-    assert_match %r{- 4}, @ui.output
+    assert_match %r{Owners for gem: freewill}, @stub_ui.output
+    assert_match %r{- user1@example.com}, @stub_ui.output
+    assert_match %r{- user2@example.com}, @stub_ui.output
+    assert_match %r{- user3}, @stub_ui.output
+    assert_match %r{- 4}, @stub_ui.output
   end
 
   def test_show_owners_dont_load_objects
@@ -57,14 +59,13 @@ def test_show_owners_dont_load_objects
 - id: 4
 EOF
 
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
 
     assert_raises Psych::DisallowedClass do
       use_ui @ui do
         @cmd.show_owners("freewill")
       end
     end
-
   end
 
 
@@ -73,14 +74,14 @@ def test_show_owners_setting_up_host_through_env_var
     host = "http://rubygems.example"
     ENV["RUBYGEMS_HOST"] = host
 
-    @fetcher.data["#{host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.show_owners("freewill")
     end
 
-    assert_match %r{Owners for gem: freewill}, @ui.output
-    assert_match %r{- user1@example.com}, @ui.output
+    assert_match %r{Owners for gem: freewill}, @stub_ui.output
+    assert_match %r{- user1@example.com}, @stub_ui.output
   end
 
   def test_show_owners_setting_up_host
@@ -88,32 +89,32 @@ def test_show_owners_setting_up_host
     host = "http://rubygems.example"
     @cmd.host = host
 
-    @fetcher.data["#{host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.show_owners("freewill")
     end
 
-    assert_match %r{Owners for gem: freewill}, @ui.output
-    assert_match %r{- user1@example.com}, @ui.output
+    assert_match %r{Owners for gem: freewill}, @stub_ui.output
+    assert_match %r{- user1@example.com}, @stub_ui.output
   end
 
   def test_show_owners_denied
     response = "You don't have permission to push to this gem"
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners.yaml"] = [response, 403, 'Forbidden']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners.yaml"] = [response, 403, 'Forbidden']
 
     assert_raises Gem::MockGemUi::TermError do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.show_owners("freewill")
       end
     end
 
-    assert_match response, @ui.output
+    assert_match response, @stub_ui.output
   end
 
   def test_show_owners_key
     response = "- email: user1@example.com\n"
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners.yaml"] = [response, 200, 'OK']
     File.open Gem.configuration.credentials_path, 'a' do |f|
       f.write ':other: 701229f217cdf23b1344c7b4b54ca97'
     end
@@ -122,56 +123,56 @@ def test_show_owners_key
     @cmd.handle_options %w(-k other)
     @cmd.show_owners('freewill')
 
-    assert_equal '701229f217cdf23b1344c7b4b54ca97', @fetcher.last_request['Authorization']
+    assert_equal '701229f217cdf23b1344c7b4b54ca97', @stub_fetcher.last_request['Authorization']
   end
 
   def test_add_owners
     response = "Owner added successfully."
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 200, 'OK']
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.add_owners("freewill", ["user-new1@example.com"])
     end
 
-    assert_equal Net::HTTP::Post, @fetcher.last_request.class
-    assert_equal Gem.configuration.rubygems_api_key, @fetcher.last_request["Authorization"]
-    assert_equal "email=user-new1%40example.com", @fetcher.last_request.body
+    assert_equal Net::HTTP::Post, @stub_fetcher.last_request.class
+    assert_equal Gem.configuration.rubygems_api_key, @stub_fetcher.last_request["Authorization"]
+    assert_equal "email=user-new1%40example.com", @stub_fetcher.last_request.body
 
-    assert_match response, @ui.output
+    assert_match response, @stub_ui.output
   end
 
   def test_add_owners_denied
     response = "You don't have permission to push to this gem"
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 403, 'Forbidden']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 403, 'Forbidden']
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.add_owners("freewill", ["user-new1@example.com"])
     end
 
-    assert_match response, @ui.output
+    assert_match response, @stub_ui.output
   end
 
   def test_add_owner_with_host_option_through_execute
     host = "http://rubygems.example"
     add_owner_response = "Owner added successfully."
     show_owners_response = "- email: user1@example.com\n"
-    @fetcher.data["#{host}/api/v1/gems/freewill/owners"] = [add_owner_response, 200, 'OK']
-    @fetcher.data["#{host}/api/v1/gems/freewill/owners.yaml"] = [show_owners_response, 200, 'OK']
+    @stub_fetcher.data["#{host}/api/v1/gems/freewill/owners"] = [add_owner_response, 200, 'OK']
+    @stub_fetcher.data["#{host}/api/v1/gems/freewill/owners.yaml"] = [show_owners_response, 200, 'OK']
 
     @cmd.handle_options %W[--host #{host} --add user-new1@example.com freewill]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
-    assert_match add_owner_response, @ui.output
-    assert_match %r{Owners for gem: freewill}, @ui.output
-    assert_match %r{- user1@example.com}, @ui.output
+    assert_match add_owner_response, @stub_ui.output
+    assert_match %r{Owners for gem: freewill}, @stub_ui.output
+    assert_match %r{- user1@example.com}, @stub_ui.output
   end
 
   def test_add_owners_key
     response = "Owner added successfully."
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 200, 'OK']
     File.open Gem.configuration.credentials_path, 'a' do |f|
       f.write ':other: 701229f217cdf23b1344c7b4b54ca97'
     end
@@ -180,38 +181,38 @@ def test_add_owners_key
     @cmd.handle_options %w(-k other)
     @cmd.add_owners('freewill', ['user-new1@example.com'])
 
-    assert_equal '701229f217cdf23b1344c7b4b54ca97', @fetcher.last_request['Authorization']
+    assert_equal '701229f217cdf23b1344c7b4b54ca97', @stub_fetcher.last_request['Authorization']
   end
 
   def test_remove_owners
     response = "Owner removed successfully."
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 200, 'OK']
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.remove_owners("freewill", ["user-remove1@example.com"])
     end
 
-    assert_equal Net::HTTP::Delete, @fetcher.last_request.class
-    assert_equal Gem.configuration.rubygems_api_key, @fetcher.last_request["Authorization"]
-    assert_equal "email=user-remove1%40example.com", @fetcher.last_request.body
+    assert_equal Net::HTTP::Delete, @stub_fetcher.last_request.class
+    assert_equal Gem.configuration.rubygems_api_key, @stub_fetcher.last_request["Authorization"]
+    assert_equal "email=user-remove1%40example.com", @stub_fetcher.last_request.body
 
-    assert_match response, @ui.output
+    assert_match response, @stub_ui.output
   end
 
   def test_remove_owners_denied
     response = "You don't have permission to push to this gem"
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 403, 'Forbidden']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 403, 'Forbidden']
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.remove_owners("freewill", ["user-remove1@example.com"])
     end
 
-    assert_match response, @ui.output
+    assert_match response, @stub_ui.output
   end
 
   def test_remove_owners_key
     response = "Owner removed successfully."
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 200, 'OK']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 200, 'OK']
     File.open Gem.configuration.credentials_path, 'a' do |f|
       f.write ':other: 701229f217cdf23b1344c7b4b54ca97'
     end
@@ -220,18 +221,53 @@ def test_remove_owners_key
     @cmd.handle_options %w(-k other)
     @cmd.remove_owners('freewill', ['user-remove1@example.com'])
 
-    assert_equal '701229f217cdf23b1344c7b4b54ca97', @fetcher.last_request['Authorization']
+    assert_equal '701229f217cdf23b1344c7b4b54ca97', @stub_fetcher.last_request['Authorization']
   end
 
   def test_remove_owners_missing
     response = 'Owner could not be found.'
-    @fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 404, 'Not Found']
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 404, 'Not Found']
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.remove_owners("freewill", ["missing@example"])
     end
 
-    assert_equal "Removing missing@example: #{response}\n", @ui.output
+    assert_equal "Removing missing@example: #{response}\n", @stub_ui.output
+  end
+
+  def test_otp_verified_success
+    response_fail = "You have enabled multifactor authentication but your request doesn't have the correct OTP code. Please check it and retry."
+    response_success = "Owner added successfully."
+
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = proc do
+      @call_count ||= 0
+      (@call_count += 1).odd? ? [response_fail, 401, 'Unauthorized'] : [response_success, 200, 'OK']
+    end
+
+    @otp_ui = Gem::MockGemUi.new "111111\n"
+    use_ui @otp_ui do
+      @cmd.add_owners("freewill", ["user-new1@example.com"])
+    end
+
+    assert_match 'You have enabled multi-factor authentication. Please enter OTP code.', @otp_ui.output
+    assert_match 'Code: ', @otp_ui.output
+    assert_match response_success, @otp_ui.output
+    assert_equal '111111', @stub_fetcher.last_request['OTP']
+  end
+
+  def test_otp_verified_failure
+    response = "You have enabled multifactor authentication but your request doesn't have the correct OTP code. Please check it and retry."
+    @stub_fetcher.data["#{Gem.host}/api/v1/gems/freewill/owners"] = [response, 401, 'Unauthorized']
+
+    @otp_ui = Gem::MockGemUi.new "111111\n"
+    use_ui @otp_ui do
+      @cmd.add_owners("freewill", ["user-new1@example.com"])
+    end
+
+    assert_match response, @otp_ui.output
+    assert_match 'You have enabled multi-factor authentication. Please enter OTP code.', @otp_ui.output
+    assert_match 'Code: ', @otp_ui.output
+    assert_equal '111111', @stub_fetcher.last_request['OTP']
   end
 
 end
diff --git a/test/mri/rubygems/test_gem_commands_pristine_command.rb b/test/mri/rubygems/test_gem_commands_pristine_command.rb
index d2f8b10bb85..e4aa8d86560 100644
--- a/test/mri/rubygems/test_gem_commands_pristine_command.rb
+++ b/test/mri/rubygems/test_gem_commands_pristine_command.rb
@@ -253,6 +253,31 @@ def test_skip
     assert_empty out, out.inspect
   end
 
+  def test_skip_many_gems
+    a = util_spec 'a'
+    b = util_spec 'b'
+    c = util_spec 'c'
+
+    install_gem a
+    install_gem b
+    install_gem c
+
+    @cmd.options[:args] = %w[a b c]
+    @cmd.options[:skip] = ['a', 'c']
+
+    use_ui @ui do
+      @cmd.execute
+    end
+
+    out = @ui.output.split "\n"
+
+    assert_equal "Restoring gems to pristine condition...", out.shift
+    assert_equal "Skipped #{a.full_name}, it was given through options", out.shift
+    assert_equal "Restored #{b.full_name}", out.shift
+    assert_equal "Skipped #{c.full_name}, it was given through options", out.shift
+    assert_empty out, out.inspect
+  end
+
   def test_execute_many_multi_repo
     a = util_spec 'a'
     install_gem a
@@ -408,6 +433,39 @@ def test_execute_only_executables
     refute File.exist? gem_lib
   end
 
+  def test_execute_bindir
+    a = util_spec 'a' do |s|
+      s.name = "test_gem"
+      s.executables = %w[foo]
+      s.files = %w[bin/foo]
+    end
+
+    write_file File.join(@tempdir, 'bin', 'foo') do |fp|
+      fp.puts "#!/usr/bin/ruby"
+    end
+
+    write_file File.join(@tempdir, 'test_bin', 'foo') do |fp|
+      fp.puts "#!/usr/bin/ruby"
+    end
+
+    install_gem a
+
+    gem_exec = File.join @gemhome, 'bin', 'foo'
+    gem_bindir = File.join @tempdir, 'test_bin', 'foo'
+
+    FileUtils.rm gem_exec
+    FileUtils.rm gem_bindir
+
+    @cmd.handle_options ["--all", "--only-executables", "--bindir", "#{gem_bindir}"]
+
+    use_ui @ui do
+      @cmd.execute
+    end
+
+    refute File.exist? gem_exec
+    assert File.exist? gem_bindir
+  end
+
   def test_execute_unknown_gem_at_remote_source
     install_specs util_spec 'a'
 
@@ -437,38 +495,16 @@ def test_execute_default_gem
       @cmd.execute
     end
 
-    assert_equal([
-                   "Restoring gems to pristine condition...",
-                   "Skipped default-2.0.0.0, it is a default gem",
-                 ],
-                 @ui.output.split("\n"))
+    assert_equal(
+      [
+        "Restoring gems to pristine condition...",
+        "Skipped default-2.0.0.0, it is a default gem",
+      ],
+      @ui.output.split("\n")
+    )
     assert_empty(@ui.error)
   end
 
-  def test_execute_bundled_gem_on_old_rubies
-    util_set_RUBY_VERSION '1.9.3', 551
-
-    spec = util_spec 'bigdecimal', '1.1.0' do |s|
-      s.summary = "This bigdecimal is bundled with Ruby"
-    end
-    install_specs spec
-
-    @cmd.options[:args] = %w[bigdecimal]
-
-    use_ui @ui do
-      @cmd.execute
-    end
-
-    assert_equal([
-      "Restoring gems to pristine condition...",
-      "Skipped bigdecimal-1.1.0, it is bundled with old Ruby"
-    ], @ui.output.split("\n"))
-
-    assert_empty @ui.error
-  ensure
-    util_restore_RUBY_VERSION
-  end
-
   def test_handle_options
     @cmd.handle_options %w[]
 
@@ -488,4 +524,3 @@ def test_handle_options_extensions
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_push_command.rb b/test/mri/rubygems/test_gem_commands_push_command.rb
index 1c5dbfe23e4..9d2185dcd9f 100644
--- a/test/mri/rubygems/test_gem_commands_push_command.rb
+++ b/test/mri/rubygems/test_gem_commands_push_command.rb
@@ -95,6 +95,26 @@ def test_execute_host
                  @fetcher.last_request["Content-Type"]
   end
 
+  def test_execute_allowed_push_host
+    @spec, @path = util_gem "freebird", "1.0.1" do |spec|
+      spec.metadata['allowed_push_host'] = "https://privategemserver.example"
+    end
+
+    @response = "Successfully registered gem: freewill (1.0.0)"
+    @fetcher.data["#{@spec.metadata['allowed_push_host']}/api/v1/gems"] = [@response, 200, 'OK']
+    @fetcher.data["#{Gem.host}/api/v1/gems"] =
+      ['fail', 500, 'Internal Server Error']
+
+    @cmd.options[:args] = [@path]
+
+    @cmd.execute
+
+    assert_equal Net::HTTP::Post, @fetcher.last_request.class
+    assert_equal Gem.read_binary(@path), @fetcher.last_request.body
+    assert_equal "application/octet-stream",
+                 @fetcher.last_request["Content-Type"]
+  end
+
   def test_sending_when_default_host_disabled
     Gem.configuration.disable_default_gem_server = true
     response = "You must specify a gem server"
@@ -141,6 +161,7 @@ def test_sending_gem_to_metadata_host
 
     @response = "Successfully registered gem: freebird (1.0.1)"
     @fetcher.data["#{@host}/api/v1/gems"]  = [@response, 200, 'OK']
+
     send_battery
   end
 
@@ -210,6 +231,7 @@ def test_sending_gem_to_disallowed_default_host
       spec.metadata['allowed_push_host'] = "https://privategemserver.example"
     end
 
+
     response = %{ERROR:  "#{@host}" is not allowed by the gemspec, which only allows "https://privategemserver.example"}
 
     assert_raises Gem::MockGemUi::TermError do
@@ -327,4 +349,41 @@ def test_sending_gem_key
                  @fetcher.last_request["Authorization"]
   end
 
+  def test_otp_verified_success
+    response_fail = "You have enabled multifactor authentication but your request doesn't have the correct OTP code. Please check it and retry."
+    response_success = 'Successfully registered gem: freewill (1.0.0)'
+
+    @fetcher.data["#{Gem.host}/api/v1/gems"] = proc do
+      @call_count ||= 0
+      (@call_count += 1).odd? ? [response_fail, 401, 'Unauthorized'] : [response_success, 200, 'OK']
+    end
+
+    @otp_ui = Gem::MockGemUi.new "111111\n"
+    use_ui @otp_ui do
+      @cmd.send_gem(@path)
+    end
+
+    assert_match 'You have enabled multi-factor authentication. Please enter OTP code.', @otp_ui.output
+    assert_match 'Code: ', @otp_ui.output
+    assert_match response_success, @otp_ui.output
+    assert_equal '111111', @fetcher.last_request['OTP']
+  end
+
+  def test_otp_verified_failure
+    response = "You have enabled multifactor authentication but your request doesn't have the correct OTP code. Please check it and retry."
+    @fetcher.data["#{Gem.host}/api/v1/gems"] = [response, 401, 'Unauthorized']
+
+    @otp_ui = Gem::MockGemUi.new "111111\n"
+    assert_raises Gem::MockGemUi::TermError do
+      use_ui @otp_ui do
+        @cmd.send_gem(@path)
+      end
+    end
+
+    assert_match response, @otp_ui.output
+    assert_match 'You have enabled multi-factor authentication. Please enter OTP code.', @otp_ui.output
+    assert_match 'Code: ', @otp_ui.output
+    assert_equal '111111', @fetcher.last_request['OTP']
+  end
+
 end
diff --git a/test/mri/rubygems/test_gem_commands_query_command.rb b/test/mri/rubygems/test_gem_commands_query_command.rb
index 5471ecadcca..7957689db47 100644
--- a/test/mri/rubygems/test_gem_commands_query_command.rb
+++ b/test/mri/rubygems/test_gem_commands_query_command.rb
@@ -9,8 +9,10 @@ def setup
     @cmd = Gem::Commands::QueryCommand.new
 
     @specs = add_gems_to_fetcher
+    @stub_ui = Gem::MockGemUi.new
+    @stub_fetcher = Gem::FakeFetcher.new
 
-    @fetcher.data["#{@gem_repo}Marshal.#{Gem.marshal_version}"] = proc do
+    @stub_fetcher.data["#{@gem_repo}Marshal.#{Gem.marshal_version}"] = proc do
       raise Gem::RemoteFetcher::FetchError
     end
   end
@@ -26,7 +28,7 @@ def test_execute
 
     @cmd.handle_options %w[-r]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -38,8 +40,8 @@ def test_execute
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_all
@@ -49,7 +51,7 @@ def test_execute_all
 
     @cmd.handle_options %w[-r --all]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -61,8 +63,8 @@ def test_execute_all
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_all_prerelease
@@ -72,7 +74,7 @@ def test_execute_all_prerelease
 
     @cmd.handle_options %w[-r --all --prerelease]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -84,8 +86,8 @@ def test_execute_all_prerelease
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_details
@@ -101,7 +103,7 @@ def test_execute_details
 
     @cmd.handle_options %w[-r -d]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -124,8 +126,8 @@ def test_execute_details
     this is a summary
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_details_cleans_text
@@ -141,7 +143,7 @@ def test_execute_details_cleans_text
 
     @cmd.handle_options %w[-r -d]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -164,8 +166,8 @@ def test_execute_details_cleans_text
     this is a summary
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_details_truncates_summary
@@ -181,7 +183,7 @@ def test_execute_details_truncates_summary
 
     @cmd.handle_options %w[-r -d]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -204,34 +206,34 @@ def test_execute_details_truncates_summary
     this is a summary
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_installed
     @cmd.handle_options %w[-n a --installed]
 
     assert_raises Gem::MockGemUi::SystemExitException do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
 
-    assert_equal "true\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "true\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_installed_inverse
     @cmd.handle_options %w[-n a --no-installed]
 
     e = assert_raises Gem::MockGemUi::TermError do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
 
-    assert_equal "false\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "false\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
 
     assert_equal 1, e.exit_code
   end
@@ -240,26 +242,26 @@ def test_execute_installed_inverse_not_installed
     @cmd.handle_options %w[-n not_installed --no-installed]
 
     assert_raises Gem::MockGemUi::SystemExitException do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
 
-    assert_equal "true\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "true\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_installed_no_name
     @cmd.handle_options %w[--installed]
 
     e = assert_raises Gem::MockGemUi::TermError do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
 
-    assert_equal '', @ui.output
-    assert_equal "ERROR:  You must specify a gem name\n", @ui.error
+    assert_equal '', @stub_ui.output
+    assert_equal "ERROR:  You must specify a gem name\n", @stub_ui.error
 
     assert_equal 4, e.exit_code
   end
@@ -268,13 +270,13 @@ def test_execute_installed_not_installed
     @cmd.handle_options %w[-n not_installed --installed]
 
     e = assert_raises Gem::MockGemUi::TermError do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
 
-    assert_equal "false\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "false\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
 
     assert_equal 1, e.exit_code
   end
@@ -283,26 +285,26 @@ def test_execute_installed_version
     @cmd.handle_options %w[-n a --installed --version 2]
 
     assert_raises Gem::MockGemUi::SystemExitException do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
 
-    assert_equal "true\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "true\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_installed_version_not_installed
     @cmd.handle_options %w[-n c --installed --version 2]
 
     e = assert_raises Gem::MockGemUi::TermError do
-      use_ui @ui do
+      use_ui @stub_ui do
         @cmd.execute
       end
     end
 
-    assert_equal "false\n", @ui.output
-    assert_equal '', @ui.error
+    assert_equal "false\n", @stub_ui.output
+    assert_equal '', @stub_ui.error
 
     assert_equal 1, e.exit_code
   end
@@ -314,7 +316,7 @@ def test_execute_local
 
     @cmd.options[:domain] = :local
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -326,8 +328,8 @@ def test_execute_local
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_local_notty
@@ -337,9 +339,9 @@ def test_execute_local_notty
 
     @cmd.handle_options %w[]
 
-    @ui.outs.tty = false
+    @stub_ui.outs.tty = false
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -348,8 +350,8 @@ def test_execute_local_notty
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_local_quiet
@@ -360,7 +362,7 @@ def test_execute_local_quiet
     @cmd.options[:domain] = :local
     Gem.configuration.verbose = false
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -369,8 +371,8 @@ def test_execute_local_quiet
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_no_versions
@@ -380,7 +382,7 @@ def test_execute_no_versions
 
     @cmd.handle_options %w[-r --no-versions]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -392,8 +394,8 @@ def test_execute_no_versions
 pl
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_notty
@@ -403,9 +405,9 @@ def test_execute_notty
 
     @cmd.handle_options %w[-r]
 
-    @ui.outs.tty = false
+    @stub_ui.outs.tty = false
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -414,14 +416,14 @@ def test_execute_notty
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_prerelease
     @cmd.handle_options %w[-r --prerelease]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -432,8 +434,8 @@ def test_execute_prerelease
 a (3.a)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_prerelease_local
@@ -443,7 +445,7 @@ def test_execute_prerelease_local
 
     @cmd.handle_options %w[-l --prerelease]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -455,8 +457,8 @@ def test_execute_prerelease_local
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal "WARNING:  prereleases are always shown locally\n", @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal "WARNING:  prereleases are always shown locally\n", @stub_ui.error
   end
 
   def test_execute_remote
@@ -466,7 +468,7 @@ def test_execute_remote
 
     @cmd.options[:domain] = :remote
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -478,8 +480,8 @@ def test_execute_remote
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_remote_notty
@@ -489,9 +491,9 @@ def test_execute_remote_notty
 
     @cmd.handle_options %w[]
 
-    @ui.outs.tty = false
+    @stub_ui.outs.tty = false
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -500,8 +502,8 @@ def test_execute_remote_notty
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_remote_quiet
@@ -512,7 +514,7 @@ def test_execute_remote_quiet
     @cmd.options[:domain] = :remote
     Gem.configuration.verbose = false
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -521,14 +523,14 @@ def test_execute_remote_quiet
 pl (1 i386-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_make_entry
     a_2_name = @specs['a-2'].original_name
 
-    @fetcher.data.delete \
+    @stub_fetcher.data.delete \
       "#{@gem_repo}quick/Marshal.#{Gem.marshal_version}/#{a_2_name}.gemspec.rz"
 
     a2 = @specs['a-2']
@@ -552,26 +554,26 @@ def test_execute_multiple_args
 
     @cmd.handle_options %w[a pl]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
-    assert_match %r%^a %, @ui.output
-    assert_match %r%^pl %, @ui.output
-    assert_equal '', @ui.error
+    assert_match %r%^a %, @stub_ui.output
+    assert_match %r%^pl %, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_show_gems
     @cmd.options[:name] = //
     @cmd.options[:domain] = :remote
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.send :show_gems, /a/i, false
     end
 
-    assert_match %r%^a %,  @ui.output
-    refute_match %r%^pl %, @ui.output
-    assert_empty @ui.error
+    assert_match %r%^a %,  @stub_ui.output
+    refute_match %r%^pl %, @stub_ui.output
+    assert_empty @stub_ui.error
   end
 
   private
@@ -602,7 +604,7 @@ def test_execute_platform
 
     @cmd.handle_options %w[-r -a]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -613,8 +615,8 @@ def test_execute_platform
 a (2 universal-darwin, 1 ruby x86-linux)
     EOF
 
-    assert_equal expected, @ui.output
-    assert_equal '', @ui.error
+    assert_equal expected, @stub_ui.output
+    assert_equal '', @stub_ui.error
   end
 
   def test_execute_show_default_gems
@@ -623,7 +625,7 @@ def test_execute_show_default_gems
     a1 = new_default_spec 'a', 1
     install_default_specs a1
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -634,7 +636,7 @@ def test_execute_show_default_gems
 a (2, default: 1)
 EOF
 
-    assert_equal expected, @ui.output
+    assert_equal expected, @stub_ui.output
   end
 
   def test_execute_show_default_gems_with_platform
@@ -642,7 +644,7 @@ def test_execute_show_default_gems_with_platform
     a1.platform = 'java'
     install_default_specs a1
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -653,7 +655,7 @@ def test_execute_show_default_gems_with_platform
 a (default: 1 java)
 EOF
 
-    assert_equal expected, @ui.output
+    assert_equal expected, @stub_ui.output
   end
 
   def test_execute_default_details
@@ -666,7 +668,7 @@ def test_execute_default_details
 
     @cmd.handle_options %w[-l -d]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -683,7 +685,7 @@ def test_execute_default_details
     this is a summary
     EOF
 
-    assert_equal expected, @ui.output
+    assert_equal expected, @stub_ui.output
   end
 
   def test_execute_local_details
@@ -704,11 +706,11 @@ def test_execute_local_details
 
     @cmd.handle_options %w[-l -d]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
-    str = @ui.output
+    str = @stub_ui.output
 
     str.gsub!(/\(\d\): [^\n]*/, "-")
     str.gsub!(/at: [^\n]*/, "at: -")
@@ -738,7 +740,7 @@ def test_execute_local_details
     this is a summary
     EOF
 
-    assert_equal expected, @ui.output
+    assert_equal expected, @stub_ui.output
   end
 
   def test_execute_exact_remote
@@ -750,7 +752,7 @@ def test_execute_exact_remote
 
     @cmd.handle_options %w[--remote --exact coolgem]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -761,7 +763,7 @@ def test_execute_exact_remote
 coolgem (4.2.1)
     EOF
 
-    assert_equal expected, @ui.output
+    assert_equal expected, @stub_ui.output
   end
 
   def test_execute_exact_local
@@ -773,7 +775,7 @@ def test_execute_exact_local
 
     @cmd.handle_options %w[--exact coolgem]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -784,7 +786,7 @@ def test_execute_exact_local
 coolgem (4.2.1)
     EOF
 
-    assert_equal expected, @ui.output
+    assert_equal expected, @stub_ui.output
   end
 
   def test_execute_exact_multiple
@@ -800,7 +802,7 @@ def test_execute_exact_multiple
 
     @cmd.handle_options %w[--exact coolgem othergem]
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
@@ -815,7 +817,7 @@ def test_execute_exact_multiple
 othergem (1.2.3)
     EOF
 
-    assert_equal expected, @ui.output
+    assert_equal expected, @stub_ui.output
   end
 
   private
diff --git a/test/mri/rubygems/test_gem_commands_search_command.rb b/test/mri/rubygems/test_gem_commands_search_command.rb
index 61caff1fc9b..9187050c309 100644
--- a/test/mri/rubygems/test_gem_commands_search_command.rb
+++ b/test/mri/rubygems/test_gem_commands_search_command.rb
@@ -15,4 +15,3 @@ def test_initialize
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_server_command.rb b/test/mri/rubygems/test_gem_commands_server_command.rb
index b61fc30e9ba..d511ce0b7b8 100644
--- a/test/mri/rubygems/test_gem_commands_server_command.rb
+++ b/test/mri/rubygems/test_gem_commands_server_command.rb
@@ -57,4 +57,3 @@ def test_handle_options_port
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_setup_command.rb b/test/mri/rubygems/test_gem_commands_setup_command.rb
index f2541a24c72..f1598f3fc29 100644
--- a/test/mri/rubygems/test_gem_commands_setup_command.rb
+++ b/test/mri/rubygems/test_gem_commands_setup_command.rb
@@ -10,7 +10,7 @@ class TestGemCommandsSetupCommand < Gem::TestCase
   if File.exist?(bundler_gemspec)
     BUNDLER_VERS = File.read(bundler_gemspec).match(/VERSION = "(#{Gem::Version::VERSION_PATTERN})"/)[1]
   else
-    BUNDLER_VERS = "1.16.1"
+    BUNDLER_VERS = "1.16.2".freeze
   end
 
   def setup
@@ -66,7 +66,7 @@ def setup
     FileUtils.mkdir_p 'default/gems/bundler-audit-1.0.0'
   end
 
-  def gem_install name
+  def gem_install(name)
     gem = util_spec name do |s|
       s.executables = [name]
       s.files = %W[bin/#{name}]
@@ -103,6 +103,40 @@ def test_execute_no_regenerate_binstubs
     assert_equal "I changed it!\n", File.read(gem_bin_path)
   end
 
+  def test_env_shebang_flag
+    gem_bin_path = gem_install 'a'
+    write_file gem_bin_path do |io|
+      io.puts 'I changed it!'
+    end
+
+    @cmd.options[:document] = []
+    @cmd.options[:env_shebang] = true
+    @cmd.execute
+
+    gem_exec = sprintf Gem.default_exec_format, 'gem'
+    default_gem_bin_path = File.join @install_dir, 'bin', gem_exec
+    if Gem::USE_BUNDLER_FOR_GEMDEPS
+      bundle_exec = sprintf Gem.default_exec_format, 'bundle'
+      default_bundle_bin_path = File.join @install_dir, 'bin', bundle_exec
+    end
+
+    ruby_exec = sprintf Gem.default_exec_format, 'ruby'
+
+    if Gem.win_platform?
+      assert_match %r%\A#!\s*#{ruby_exec}%, File.read(default_gem_bin_path)
+      if Gem::USE_BUNDLER_FOR_GEMDEPS
+        assert_match %r%\A#!\s*#{ruby_exec}%, File.read(default_bundle_bin_path)
+      end
+      assert_match %r%\A#!\s*#{ruby_exec}%, File.read(gem_bin_path)
+    else
+      assert_match %r%\A#!/usr/bin/env #{ruby_exec}%, File.read(default_gem_bin_path)
+      if Gem::USE_BUNDLER_FOR_GEMDEPS
+        assert_match %r%\A#!/usr/bin/env #{ruby_exec}%, File.read(default_bundle_bin_path)
+      end
+      assert_match %r%\A#!/usr/bin/env #{ruby_exec}%, File.read(gem_bin_path)
+    end
+  end
+
   def test_pem_files_in
     assert_equal %w[rubygems/ssl_certs/rubygems.org/foo.pem],
                  @cmd.pem_files_in('lib').sort
@@ -207,11 +241,8 @@ def test_remove_old_lib_files
   end
 
   def test_show_release_notes
-    @default_external = nil
-    if Object.const_defined? :Encoding
-      @default_external = @ui.outs.external_encoding
-      @ui.outs.set_encoding Encoding::US_ASCII
-    end
+    @default_external = @ui.outs.external_encoding
+    @ui.outs.set_encoding Encoding::US_ASCII
 
     @cmd.options[:previous_version] = Gem::Version.new '2.0.2'
 
@@ -256,7 +287,7 @@ def test_show_release_notes
     EXPECTED
 
     output = @ui.output
-    output.force_encoding Encoding::UTF_8 if Object.const_defined? :Encoding
+    output.force_encoding Encoding::UTF_8
 
     assert_equal expected, output
   ensure
diff --git a/test/mri/rubygems/test_gem_commands_signin_command.rb b/test/mri/rubygems/test_gem_commands_signin_command.rb
index 56eecfc1f8d..afcb8d6d99c 100644
--- a/test/mri/rubygems/test_gem_commands_signin_command.rb
+++ b/test/mri/rubygems/test_gem_commands_signin_command.rb
@@ -48,7 +48,7 @@ def test_execute_when_already_signed_in_with_different_host
 
     assert_equal credentials[:rubygems_api_key], api_key
 
-    assert_equal credentials[host], nil
+    assert_nil credentials[host]
   end
 
   def test_execute_with_host_supplied
@@ -74,7 +74,7 @@ def test_execute_with_valid_creds_set_for_default_host
 
   # Utility method to capture IO/UI within the block passed
 
-  def util_capture ui_stub = nil, host = nil, api_key = nil
+  def util_capture(ui_stub = nil, host = nil, api_key = nil)
     api_key ||= 'a5fdbb6ba150cbb83aad2bb2fede64cf040453903'
     response  = [api_key, 200, 'OK']
     email     = 'you@example.com'
diff --git a/test/mri/rubygems/test_gem_commands_sources_command.rb b/test/mri/rubygems/test_gem_commands_sources_command.rb
index 54c02461503..ad92c26073b 100644
--- a/test/mri/rubygems/test_gem_commands_sources_command.rb
+++ b/test/mri/rubygems/test_gem_commands_sources_command.rb
@@ -298,4 +298,3 @@ def test_execute_update
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_specification_command.rb b/test/mri/rubygems/test_gem_commands_specification_command.rb
index c3650649aed..f56aa9777a9 100644
--- a/test/mri/rubygems/test_gem_commands_specification_command.rb
+++ b/test/mri/rubygems/test_gem_commands_specification_command.rb
@@ -105,7 +105,7 @@ def test_execute_exact_match
   end
 
   def test_execute_field
-    foo = new_spec 'foo', '2'
+    foo = util_spec 'foo', '2'
 
     install_specs foo
 
@@ -137,7 +137,7 @@ def test_execute_file
   end
 
   def test_execute_marshal
-    foo = new_spec 'foo', '2'
+    foo = util_spec 'foo', '2'
 
     install_specs foo
 
@@ -248,4 +248,3 @@ def test_execute_ruby
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_stale_command.rb b/test/mri/rubygems/test_gem_commands_stale_command.rb
index 4d2f5349f06..a8909c6d138 100644
--- a/test/mri/rubygems/test_gem_commands_stale_command.rb
+++ b/test/mri/rubygems/test_gem_commands_stale_command.rb
@@ -6,6 +6,7 @@ class TestGemCommandsStaleCommand < Gem::TestCase
 
   def setup
     super
+    @stub_ui = Gem::MockGemUi.new
     @cmd = Gem::Commands::StaleCommand.new
   end
 
@@ -31,11 +32,11 @@ def test_execute_sorts
       FileUtils.touch(filename, :mtime => Time.now - 86400)
     end
 
-    use_ui @ui do
+    use_ui @stub_ui do
       @cmd.execute
     end
 
-    lines = @ui.output.split("\n")
+    lines = @stub_ui.output.split("\n")
     assert_equal("#{foo_bar.name}-#{foo_bar.version}", lines[0].split.first)
     assert_equal("#{bar_baz.name}-#{bar_baz.version}", lines[1].split.first)
   end
diff --git a/test/mri/rubygems/test_gem_commands_uninstall_command.rb b/test/mri/rubygems/test_gem_commands_uninstall_command.rb
index 2fdff706e70..407d2451a67 100644
--- a/test/mri/rubygems/test_gem_commands_uninstall_command.rb
+++ b/test/mri/rubygems/test_gem_commands_uninstall_command.rb
@@ -83,7 +83,7 @@ def test_execute_removes_executable
       end
     end
 
-    if win_platform? then
+    if win_platform?
       assert File.exist?(@executable)
     else
       assert File.symlink?(@executable)
@@ -151,12 +151,14 @@ def test_execute_prerelease
     assert_match(/Successfully uninstalled/, output)
   end
 
-  def test_execute_with_force_leaves_executable
+  def test_execute_with_version_leaves_non_matching_versions
     ui = Gem::MockGemUi.new
 
     util_make_gems
     util_setup_gem ui
 
+    assert_equal 3, Gem::Specification.find_all_by_name('a').length
+
     @cmd.options[:version] = '1'
     @cmd.options[:force] = true
     @cmd.options[:args] = ['a']
@@ -165,17 +167,43 @@ def test_execute_with_force_leaves_executable
       @cmd.execute
     end
 
-    assert !Gem::Specification.all_names.include?('a')
+    assert_equal 2, Gem::Specification.find_all_by_name('a').length
+
     assert File.exist? File.join(@gemhome, 'bin', 'executable')
   end
 
-  def test_execute_with_force_uninstalls_all_versions
+  def test_execute_with_version_specified_as_colon
     ui = Gem::MockGemUi.new "y\n"
 
     util_make_gems
     util_setup_gem ui
 
-    assert Gem::Specification.find_all_by_name('a').length > 1
+    assert_equal 3, Gem::Specification.find_all_by_name('a').length
+
+    @cmd.options[:force] = true
+    @cmd.options[:args] = ['a:1']
+
+    use_ui ui do
+      @cmd.execute
+    end
+
+    assert_equal 2, Gem::Specification.find_all_by_name('a').length
+
+    assert File.exist? File.join(@gemhome, 'bin', 'executable')
+  end
+
+  def test_execute_with_force_and_without_version_uninstalls_everything
+    ui = Gem::MockGemUi.new "y\n"
+
+    a_1, = util_gem 'a', 1
+    install_gem a_1
+
+    a_3a, = util_gem 'a', '3.a'
+    install_gem a_3a
+
+    util_setup_gem ui
+
+    assert_equal 3, Gem::Specification.find_all_by_name('a').length
 
     @cmd.options[:force] = true
     @cmd.options[:args] = ['a']
@@ -184,7 +212,9 @@ def test_execute_with_force_uninstalls_all_versions
       @cmd.execute
     end
 
-    refute_includes Gem::Specification.all_names, 'a'
+    assert_empty Gem::Specification.find_all_by_name('a')
+    assert_match "Removing executable", ui.output
+    refute File.exist? @executable
   end
 
   def test_execute_with_force_ignores_dependencies
@@ -238,7 +268,7 @@ def test_handle_options
     @cmd.handle_options %w[]
 
     assert_equal false,                    @cmd.options[:check_dev]
-    assert_equal nil,                      @cmd.options[:install_dir]
+    assert_nil                             @cmd.options[:install_dir]
     assert_equal true,                     @cmd.options[:user_install]
     assert_equal Gem::Requirement.default, @cmd.options[:version]
     assert_equal false,                    @cmd.options[:vendor]
@@ -261,6 +291,25 @@ def test_handle_options_vendor
     assert_match expected, @ui.error
   end
 
+  def test_execute_two_version
+    @cmd.options[:args] = %w[a b]
+    @cmd.options[:version] = Gem::Requirement.new("> 1")
+
+    use_ui @ui do
+      e = assert_raises Gem::MockGemUi::TermError do
+        @cmd.execute
+      end
+
+      assert_equal 1, e.exit_code
+    end
+
+    msg = "ERROR:  Can't use --version with multiple gems. You can specify multiple gems with" \
+      " version requirements using `gem uninstall 'my_gem:1.0.0' 'my_other_gem:~>2.0.0'`"
+
+    assert_empty @ui.output
+    assert_equal msg, @ui.error.lines.last.chomp
+  end
+
   def test_handle_options_vendor_missing
     orig_vendordir = RbConfig::CONFIG['vendordir']
     RbConfig::CONFIG.delete 'vendordir'
@@ -291,5 +340,30 @@ def test_execute_with_gem_not_installed
     assert_equal output.first, "Gem 'd' is not installed"
   end
 
-end
+  def test_execute_with_gem_uninstall_error
+    util_make_gems
+
+    @cmd.options[:args] = %w[a]
 
+    uninstall_exception = lambda do |_a|
+      ex = Gem::UninstallError.new
+      ex.spec = @spec
+
+      raise ex
+    end
+
+    e = nil
+    @cmd.stub :uninstall, uninstall_exception do
+      use_ui @ui do
+        e = assert_raises Gem::MockGemUi::TermError do
+          @cmd.execute
+        end
+      end
+
+      assert_equal 1, e.exit_code
+    end
+
+    assert_empty @ui.output
+    assert_match %r!Error: unable to successfully uninstall '#{@spec.name}'!, @ui.error
+  end
+end
diff --git a/test/mri/rubygems/test_gem_commands_unpack_command.rb b/test/mri/rubygems/test_gem_commands_unpack_command.rb
index 61f671da7d9..7d96caaf573 100644
--- a/test/mri/rubygems/test_gem_commands_unpack_command.rb
+++ b/test/mri/rubygems/test_gem_commands_unpack_command.rb
@@ -134,6 +134,23 @@ def test_execute_spec
     assert File.exist?(File.join(@tempdir, 'b-2.gemspec'))
   end
 
+  def test_execute_spec_target
+    util_make_gems
+
+    @cmd.options[:args] = %w[a b]
+    @cmd.options[:target] = 'specs'
+    @cmd.options[:spec] = true
+
+    use_ui @ui do
+      Dir.chdir @tempdir do
+        @cmd.execute
+      end
+    end
+
+    assert File.exist?(File.join(@tempdir, 'specs/a-3.a.gemspec'))
+    assert File.exist?(File.join(@tempdir, 'specs/b-2.gemspec'))
+  end
+
   def test_execute_sudo
     skip 'Cannot perform this test on windows (chmod)' if win_platform?
 
@@ -206,4 +223,3 @@ def test_handle_options_metadata
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_update_command.rb b/test/mri/rubygems/test_gem_commands_update_command.rb
index fa444fa32f0..549e34c218c 100644
--- a/test/mri/rubygems/test_gem_commands_update_command.rb
+++ b/test/mri/rubygems/test_gem_commands_update_command.rb
@@ -217,7 +217,6 @@ def test_execute_dependencies
   end
 
   def test_execute_rdoc
-    skip if RUBY_VERSION <= "1.8.7"
     spec_fetcher do |fetcher|
       fetcher.download 'a', 2
       fetcher.spec 'a', 1
@@ -504,5 +503,23 @@ def test_update_rubygems_arguments_1_8_x
     assert_empty arguments
   end
 
-end
+  def test_explain
+    spec_fetcher do |fetcher|
+      fetcher.download 'a', 2
+      fetcher.spec 'a', 1
+    end
+
+    @cmd.options[:explain] = true
+    @cmd.options[:args] = %w[a]
+
+    use_ui @ui do
+      @cmd.execute
+    end
+
+    out = @ui.output.split "\n"
 
+    assert_equal "Gems to update:", out.shift
+    assert_equal "  a-2", out.shift
+    assert_empty out
+  end
+end
diff --git a/test/mri/rubygems/test_gem_commands_which_command.rb b/test/mri/rubygems/test_gem_commands_which_command.rb
index 0c2b177273c..0d63bb9b374 100644
--- a/test/mri/rubygems/test_gem_commands_which_command.rb
+++ b/test/mri/rubygems/test_gem_commands_which_command.rb
@@ -84,4 +84,3 @@ def util_foo_bar
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_commands_yank_command.rb b/test/mri/rubygems/test_gem_commands_yank_command.rb
index 70aa2263a65..d30c386aa6e 100644
--- a/test/mri/rubygems/test_gem_commands_yank_command.rb
+++ b/test/mri/rubygems/test_gem_commands_yank_command.rb
@@ -97,4 +97,3 @@ def test_execute_host
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_config_file.rb b/test/mri/rubygems/test_gem_config_file.rb
index e09a76ef989..192699aaba9 100644
--- a/test/mri/rubygems/test_gem_config_file.rb
+++ b/test/mri/rubygems/test_gem_config_file.rb
@@ -44,6 +44,7 @@ def test_initialize
     assert_equal Gem::ConfigFile::DEFAULT_BULK_THRESHOLD, @cfg.bulk_threshold
     assert_equal true, @cfg.verbose
     assert_equal [@gem_repo], Gem.sources
+    assert_equal 365, @cfg.cert_expiration_length_days
 
     File.open @temp_conf, 'w' do |fp|
       fp.puts ":backtrace: true"
@@ -58,6 +59,7 @@ def test_initialize
       fp.puts "- /var/ruby/1.8/gem_home"
       fp.puts ":ssl_verify_mode: 0"
       fp.puts ":ssl_ca_cert: /etc/ssl/certs"
+      fp.puts ":cert_expiration_length_days: 28"
     end
 
     util_config_file
@@ -71,6 +73,7 @@ def test_initialize
                  @cfg.path)
     assert_equal 0, @cfg.ssl_verify_mode
     assert_equal '/etc/ssl/certs', @cfg.ssl_ca_cert
+    assert_equal 28, @cfg.cert_expiration_length_days
   end
 
   def test_initialize_handle_arguments_config_file
@@ -341,7 +344,7 @@ def test_rubygems_api_key_equals
 
     assert_equal expected, YAML.load_file(@cfg.credentials_path)
 
-    unless win_platform? then
+    unless win_platform?
       stat = File.stat @cfg.credentials_path
 
       assert_equal 0600, stat.mode & 0600
@@ -487,4 +490,3 @@ def test_disable_default_gem_server
     assert_equal(true, @cfg.disable_default_gem_server)
   end
 end
-
diff --git a/test/mri/rubygems/test_gem_dependency.rb b/test/mri/rubygems/test_gem_dependency.rb
index 3c11868671a..daeb8f625cc 100644
--- a/test/mri/rubygems/test_gem_dependency.rb
+++ b/test/mri/rubygems/test_gem_dependency.rb
@@ -387,4 +387,3 @@ def test_to_specs_indicates_total_gem_set_size
 
 
 end
-
diff --git a/test/mri/rubygems/test_gem_dependency_installer.rb b/test/mri/rubygems/test_gem_dependency_installer.rb
index 3d762916685..74b7a6a83e8 100644
--- a/test/mri/rubygems/test_gem_dependency_installer.rb
+++ b/test/mri/rubygems/test_gem_dependency_installer.rb
@@ -431,7 +431,7 @@ def test_install_dependency_existing_extension
       EXTCONF_RB
     end
 
-    e1 = new_spec 'e', '1', nil, 'extconf.rb' do |s|
+    e1 = util_spec 'e', '1', nil, 'extconf.rb' do |s|
       s.extensions << 'extconf.rb'
     end
     e1_gem = File.join @tempdir, 'gems', "#{e1.full_name}.gem"
@@ -445,9 +445,13 @@ def test_install_dependency_existing_extension
     FileUtils.mv f1_gem, @tempdir
     inst = nil
 
-    Dir.chdir @tempdir do
+    pwd = Dir.getwd
+    Dir.chdir @tempdir
+    begin
       inst = Gem::DependencyInstaller.new
       inst.install 'f'
+    ensure
+      Dir.chdir pwd
     end
 
     assert_equal %w[f-1], inst.installed_gems.map { |s| s.full_name }
@@ -893,7 +897,7 @@ def test_install_platform_is_ignored_when_a_file_is_specified
     assert_equal %w[a-1-cpu-other_platform-1], inst.installed_gems.map { |s| s.full_name }
   end
 
-  if defined? OpenSSL then
+  if defined? OpenSSL
     def test_install_security_policy
       util_setup_gems
 
@@ -918,7 +922,7 @@ def test_install_security_policy
   end
 
   # Wrappers don't work on mswin
-  unless win_platform? then
+  unless win_platform?
     def test_install_no_wrappers
       util_setup_gems
 
@@ -1069,7 +1073,6 @@ def test_find_gems_with_sources_local
 
     assert_equal 'a-1', remote.spec.full_name, 'remote spec'
     assert_equal Gem::Source.new(@gem_repo), remote.source, 'remote path'
-
   end
 
   def test_find_gems_with_sources_prerelease
diff --git a/test/mri/rubygems/test_gem_dependency_list.rb b/test/mri/rubygems/test_gem_dependency_list.rb
index d03a8fdfea9..9bd6ceb6f3c 100644
--- a/test/mri/rubygems/test_gem_dependency_list.rb
+++ b/test/mri/rubygems/test_gem_dependency_list.rb
@@ -11,7 +11,7 @@ def setup
 
     @deplist = Gem::DependencyList.new
 
-    # TODO: switch to new_spec
+    # TODO: switch to util_spec
     @a1 = util_spec 'a', '1'
     @a2 = util_spec 'a', '2'
     @a3 = util_spec 'a', '3'
@@ -136,21 +136,21 @@ def test_why_not_ok_eh
 
     exp = {
       "b" => [
-              Gem::Dependency.new("a", ">= 1")
-             ]
+        Gem::Dependency.new("a", ">= 1")
+      ]
     }
 
     assert_equal exp, @deplist.why_not_ok?
   end
 
   def test_why_not_ok_eh_old_dependency
-    a  = new_spec 'a', '1',
+    a  = util_spec 'a', '1',
                   'b' => '~> 1.0'
 
-    b0 = new_spec 'b', '1.0',
+    b0 = util_spec 'b', '1.0',
                   'd' => '>= 0'
 
-    b1 = new_spec 'b', '1.1'
+    b1 = util_spec 'b', '1.1'
 
     util_clear_gems
 
@@ -257,4 +257,3 @@ def util_diamond
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_dependency_resolution_error.rb b/test/mri/rubygems/test_gem_dependency_resolution_error.rb
index b9625a3c02c..cf4663650e0 100644
--- a/test/mri/rubygems/test_gem_dependency_resolution_error.rb
+++ b/test/mri/rubygems/test_gem_dependency_resolution_error.rb
@@ -26,4 +26,3 @@ def test_message
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_doctor.rb b/test/mri/rubygems/test_gem_doctor.rb
index 8db65d70cef..a0e3a18d7f9 100644
--- a/test/mri/rubygems/test_gem_doctor.rb
+++ b/test/mri/rubygems/test_gem_doctor.rb
@@ -4,7 +4,7 @@
 
 class TestGemDoctor < Gem::TestCase
 
-  def gem name
+  def gem(name)
     spec = quick_gem name do |gem|
       gem.files = %W[lib/#{name}.rb Rakefile]
     end
@@ -166,4 +166,3 @@ def test_gem_repository_eh
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_ext_builder.rb b/test/mri/rubygems/test_gem_ext_builder.rb
index 3dabd3e350f..ce04762e840 100644
--- a/test/mri/rubygems/test_gem_ext_builder.rb
+++ b/test/mri/rubygems/test_gem_ext_builder.rb
@@ -50,15 +50,9 @@ def test_class_make
 
     results = results.join "\n"
 
-    if RUBY_VERSION > '2.0' then
-      assert_match %r%"DESTDIR=#{ENV['DESTDIR']}" clean$%,   results
-      assert_match %r%"DESTDIR=#{ENV['DESTDIR']}"$%,         results
-      assert_match %r%"DESTDIR=#{ENV['DESTDIR']}" install$%, results
-    else
-      refute_match %r%"DESTDIR=#{ENV['DESTDIR']}" clean$%,   results
-      refute_match %r%"DESTDIR=#{ENV['DESTDIR']}"$%,         results
-      refute_match %r%"DESTDIR=#{ENV['DESTDIR']}" install$%, results
-    end
+    assert_match %r%"DESTDIR=#{ENV['DESTDIR']}" clean$%,   results
+    assert_match %r%"DESTDIR=#{ENV['DESTDIR']}"$%,         results
+    assert_match %r%"DESTDIR=#{ENV['DESTDIR']}" install$%, results
 
     if /nmake/ !~ results
       assert_match %r%^clean: destination$%,   results
@@ -87,15 +81,9 @@ def test_class_make_no_clean
 
     results = results.join "\n"
 
-    if RUBY_VERSION > '2.0' then
-      assert_match %r%"DESTDIR=#{ENV['DESTDIR']}" clean$%,   results
-      assert_match %r%"DESTDIR=#{ENV['DESTDIR']}"$%,         results
-      assert_match %r%"DESTDIR=#{ENV['DESTDIR']}" install$%, results
-    else
-      refute_match %r%"DESTDIR=#{ENV['DESTDIR']}" clean$%,   results
-      refute_match %r%"DESTDIR=#{ENV['DESTDIR']}"$%,         results
-      refute_match %r%"DESTDIR=#{ENV['DESTDIR']}" install$%, results
-    end
+    assert_match %r%"DESTDIR=#{ENV['DESTDIR']}" clean$%,   results
+    assert_match %r%"DESTDIR=#{ENV['DESTDIR']}"$%,         results
+    assert_match %r%"DESTDIR=#{ENV['DESTDIR']}" install$%, results
   end
 
   def test_build_extensions
@@ -134,11 +122,6 @@ def test_build_extensions
   end
 
   def test_build_extensions_with_gemhome_with_space
-    # Details: https://github.com/rubygems/rubygems/issues/977#issuecomment-171544940
-    if win_platform? && RUBY_VERSION <= '2.0'
-      skip 'gemhome with spaces does not work with Ruby 1.9.x on Windows'
-    end
-
     new_gemhome = File.join @tempdir, 'gem home'
     File.rename(@gemhome, new_gemhome)
     @gemhome = new_gemhome
@@ -227,6 +210,8 @@ def test_build_extensions_rebuild_failure
   end
 
   def test_build_extensions_extconf_bad
+    cwd = Dir.pwd
+
     @spec.extensions << 'extconf.rb'
 
     FileUtils.mkdir_p @spec.gem_dir
@@ -257,6 +242,8 @@ def test_build_extensions_extconf_bad
 
     assert_match %r%#{Regexp.escape Gem.ruby}: No such file%,
                  File.read(gem_make_out)
+
+    assert_equal cwd, Dir.pwd
   end
 
   def test_build_extensions_unsupported
diff --git a/test/mri/rubygems/test_gem_ext_cmake_builder.rb b/test/mri/rubygems/test_gem_ext_cmake_builder.rb
index 2093c7da557..6e629080906 100644
--- a/test/mri/rubygems/test_gem_ext_cmake_builder.rb
+++ b/test/mri/rubygems/test_gem_ext_cmake_builder.rb
@@ -10,7 +10,7 @@ def setup
     # Details: https://github.com/rubygems/rubygems/issues/1270#issuecomment-177368340
     skip "CmakeBuilder doesn't work on Windows." if Gem.win_platform?
 
-    `cmake #{Gem::Ext::Builder.redirector}`
+    system('cmake', out: IO::NULL, err: [:child, :out])
 
     skip 'cmake not present' unless $?.success?
 
@@ -25,6 +25,7 @@ def test_self_build
     File.open File.join(@ext, 'CMakeLists.txt'), 'w' do |cmakelists|
       cmakelists.write <<-eo_cmake
 cmake_minimum_required(VERSION 2.6)
+project(self_build LANGUAGES NONE)
 install (FILES test.txt DESTINATION bin)
       eo_cmake
     end
@@ -34,7 +35,7 @@ def test_self_build
     output = []
 
     Dir.chdir @ext do
-      Gem::Ext::CmakeBuilder.build nil, nil, @dest_path, output
+      Gem::Ext::CmakeBuilder.build nil, @dest_path, output
     end
 
     output = output.join "\n"
@@ -52,7 +53,7 @@ def test_self_build_fail
 
     error = assert_raises Gem::InstallError do
       Dir.chdir @ext do
-        Gem::Ext::CmakeBuilder.build nil, nil, @dest_path, output
+        Gem::Ext::CmakeBuilder.build nil, @dest_path, output
       end
     end
 
@@ -75,7 +76,7 @@ def test_self_build_has_makefile
     output = []
 
     Dir.chdir @ext do
-      Gem::Ext::CmakeBuilder.build nil, nil, @dest_path, output
+      Gem::Ext::CmakeBuilder.build nil, @dest_path, output
     end
 
     output = output.join "\n"
diff --git a/test/mri/rubygems/test_gem_ext_configure_builder.rb b/test/mri/rubygems/test_gem_ext_configure_builder.rb
index cf7559d56c1..967458170b3 100644
--- a/test/mri/rubygems/test_gem_ext_configure_builder.rb
+++ b/test/mri/rubygems/test_gem_ext_configure_builder.rb
@@ -27,7 +27,7 @@ def test_self_build
     output = []
 
     Dir.chdir @ext do
-      Gem::Ext::ConfigureBuilder.build nil, nil, @dest_path, output
+      Gem::Ext::ConfigureBuilder.build nil, @dest_path, output
     end
 
     assert_match(/^current directory:/, output.shift)
@@ -50,7 +50,7 @@ def test_self_build_fail
 
     error = assert_raises Gem::InstallError do
       Dir.chdir @ext do
-        Gem::Ext::ConfigureBuilder.build nil, nil, @dest_path, output
+        Gem::Ext::ConfigureBuilder.build nil, @dest_path, output
       end
     end
 
@@ -76,7 +76,7 @@ def test_self_build_has_makefile
 
     output = []
     Dir.chdir @ext do
-      Gem::Ext::ConfigureBuilder.build nil, nil, @dest_path, output
+      Gem::Ext::ConfigureBuilder.build nil, @dest_path, output
     end
 
     assert_contains_make_command 'clean', output[1]
diff --git a/test/mri/rubygems/test_gem_ext_ext_conf_builder.rb b/test/mri/rubygems/test_gem_ext_ext_conf_builder.rb
index b43ebf00d92..6decb29a995 100644
--- a/test/mri/rubygems/test_gem_ext_ext_conf_builder.rb
+++ b/test/mri/rubygems/test_gem_ext_ext_conf_builder.rb
@@ -29,7 +29,7 @@ def test_class_build
 
     Dir.chdir @ext do
       result =
-        Gem::Ext::ExtConfBuilder.build 'extconf.rb', nil, @dest_path, output
+        Gem::Ext::ExtConfBuilder.build 'extconf.rb', @dest_path, output
 
       assert_same result, output
     end
@@ -54,7 +54,7 @@ def test_class_build_rbconfig_make_prog
       output = []
 
       Dir.chdir @ext do
-        Gem::Ext::ExtConfBuilder.build 'extconf.rb', nil, @dest_path, output
+        Gem::Ext::ExtConfBuilder.build 'extconf.rb', @dest_path, output
       end
 
       assert_equal "creating Makefile\n", output[2]
@@ -77,7 +77,7 @@ def test_class_build_env_make
 
       assert_raises Gem::InstallError do
         Dir.chdir @ext do
-          Gem::Ext::ExtConfBuilder.build 'extconf.rb', nil, @dest_path, output
+          Gem::Ext::ExtConfBuilder.build 'extconf.rb', @dest_path, output
         end
       end
 
@@ -103,7 +103,7 @@ def test_class_build_extconf_fail
 
     error = assert_raises Gem::InstallError do
       Dir.chdir @ext do
-        Gem::Ext::ExtConfBuilder.build 'extconf.rb', nil, @dest_path, output
+        Gem::Ext::ExtConfBuilder.build 'extconf.rb', @dest_path, output
       end
     end
 
@@ -130,7 +130,7 @@ def test_class_build_extconf_success_without_warning
     output = []
 
     Dir.chdir @ext do
-      Gem::Ext::ExtConfBuilder.build 'extconf.rb', nil, @dest_path, output
+      Gem::Ext::ExtConfBuilder.build 'extconf.rb', @dest_path, output
     end
 
     refute_includes(output, "To see why this extension failed to compile, please check the mkmf.log which can be found here:\n")
@@ -172,7 +172,7 @@ def test_class_build_unconventional
     output = []
 
     Dir.chdir @ext do
-      Gem::Ext::ExtConfBuilder.build 'extconf.rb', nil, @dest_path, output
+      Gem::Ext::ExtConfBuilder.build 'extconf.rb', @dest_path, output
     end
 
     assert_contains_make_command 'clean', output[4]
@@ -216,14 +216,14 @@ def test_class_make_no_Makefile
     assert_equal 'Makefile not found', error.message
   end
 
-  def configure_args args = nil
+  def configure_args(args = nil)
     configure_args = RbConfig::CONFIG['configure_args']
     RbConfig::CONFIG['configure_args'] = args if args
 
     yield
 
   ensure
-    if configure_args then
+    if configure_args
       RbConfig::CONFIG['configure_args'] = configure_args
     else
       RbConfig::CONFIG.delete 'configure_args'
@@ -231,4 +231,3 @@ def configure_args args = nil
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_ext_rake_builder.rb b/test/mri/rubygems/test_gem_ext_rake_builder.rb
index 32299827781..6b647293a85 100644
--- a/test/mri/rubygems/test_gem_ext_rake_builder.rb
+++ b/test/mri/rubygems/test_gem_ext_rake_builder.rb
@@ -16,19 +16,17 @@ def setup
   def test_class_build
     create_temp_mkrf_file('task :default')
     output = []
-    realdir = nil # HACK /tmp vs. /private/tmp
 
     build_rake_in do |rake|
       Dir.chdir @ext do
-        realdir = Dir.pwd
-        Gem::Ext::RakeBuilder.build 'mkrf_conf.rb', nil, @dest_path, output
+        Gem::Ext::RakeBuilder.build 'mkrf_conf.rb', @dest_path, output
       end
 
       output = output.join "\n"
 
       refute_match %r%^rake failed:%, output
       assert_match %r%^#{Regexp.escape @@ruby} mkrf_conf\.rb%, output
-      assert_match %r%^#{Regexp.escape rake} RUBYARCHDIR=#{Regexp.escape @dest_path} RUBYLIBDIR=#{Regexp.escape @dest_path}%, output
+      assert_match %r%^#{Regexp.escape rake} RUBYARCHDIR\\=#{Regexp.escape @dest_path} RUBYLIBDIR\\=#{Regexp.escape @dest_path}%, output
     end
   end
 
@@ -38,20 +36,33 @@ def test_class_build
   def test_class_build_with_args
     create_temp_mkrf_file('task :default')
     output = []
-    realdir = nil # HACK /tmp vs. /private/tmp
 
     build_rake_in do |rake|
       Dir.chdir @ext do
-        realdir = Dir.pwd
         non_empty_args_list = ['']
-        Gem::Ext::RakeBuilder.build 'mkrf_conf.rb', nil, @dest_path, output, non_empty_args_list
+        Gem::Ext::RakeBuilder.build 'mkrf_conf.rb', @dest_path, output, non_empty_args_list
       end
 
       output = output.join "\n"
 
       refute_match %r%^rake failed:%, output
       assert_match %r%^#{Regexp.escape @@ruby} mkrf_conf\.rb%, output
-      assert_match %r%^#{Regexp.escape rake} RUBYARCHDIR=#{Regexp.escape @dest_path} RUBYLIBDIR=#{Regexp.escape @dest_path}%, output
+      assert_match %r%^#{Regexp.escape rake} RUBYARCHDIR\\=#{Regexp.escape @dest_path} RUBYLIBDIR\\=#{Regexp.escape @dest_path}%, output
+    end
+  end
+
+  def test_class_build_no_mkrf_passes_args
+    output = []
+
+    build_rake_in do |rake|
+      Dir.chdir @ext do
+        Gem::Ext::RakeBuilder.build "ext/Rakefile", @dest_path, output, ["test1", "test2"]
+      end
+
+      output = output.join "\n"
+
+      refute_match %r%^rake failed:%, output
+      assert_match %r%^#{Regexp.escape rake} RUBYARCHDIR\\=#{Regexp.escape @dest_path} RUBYLIBDIR\\=#{Regexp.escape @dest_path} test1 test2%, output
     end
   end
 
@@ -62,7 +73,7 @@ def test_class_build_fail
     build_rake_in(false) do |rake|
       error = assert_raises Gem::InstallError do
         Dir.chdir @ext do
-          Gem::Ext::RakeBuilder.build "mkrf_conf.rb", nil, @dest_path, output
+          Gem::Ext::RakeBuilder.build "mkrf_conf.rb", @dest_path, output
         end
       end
 
diff --git a/test/mri/rubygems/test_gem_gem_runner.rb b/test/mri/rubygems/test_gem_gem_runner.rb
index 0a1faa404a8..7c771de9e59 100644
--- a/test/mri/rubygems/test_gem_gem_runner.rb
+++ b/test/mri/rubygems/test_gem_gem_runner.rb
@@ -1,38 +1,6 @@
 # frozen_string_literal: true
 require 'rubygems/test_case'
-begin
-  gem_home_files = lambda{
-    if Dir.exist?(ENV["GEM_HOME"])
-      require "find"
-      ary = Find.find(ENV["GEM_HOME"]).to_a
-    else
-      []
-    end
-  }
-  prev_gem_home = ENV["GEM_HOME"]
-  prev_gem_home_files = gem_home_files.call
-  prev_threads = Thread.list.map{|e| e.inspect}
-
-  require 'rubygems/gem_runner'
-ensure
-  if $!
-    msg = <<eom
-***************
-PREV
-  GEM_HOME: #{prev_gem_home}
-  Files in GEM_HOME: #{prev_gem_home_files.inspect}
-  Threads: #{prev_threads.inspect}
-Current:
-  GEM_HOME: #{ENV["GEM_HOME"]}
-  Files in GEM_HOME: #{gem_home_files.call}
-  Threads: #{Thread.list.map{|e| e.inspect}.inspect}
-Exception: #{$!.message}
-eom
-    p $!.class
-    p $!.message.frozen?
-    raise $!.class, msg, $!.backtrace
-  end
-end
+require 'rubygems/gem_runner'
 
 class TestGemGemRunner < Gem::TestCase
 
@@ -98,4 +66,3 @@ def test_extract_build_args
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_gemcutter_utilities.rb b/test/mri/rubygems/test_gem_gemcutter_utilities.rb
index 286d59a7870..4315090a3de 100644
--- a/test/mri/rubygems/test_gem_gemcutter_utilities.rb
+++ b/test/mri/rubygems/test_gem_gemcutter_utilities.rb
@@ -8,6 +8,8 @@ class TestGemGemcutterUtilities < Gem::TestCase
 
   def setup
     super
+    # below needed for random testing, class property
+    Gem.configuration.disable_default_gem_server = nil
 
     ENV['RUBYGEMS_HOST'] = nil
     Gem.configuration.rubygems_api_key = nil
@@ -177,8 +179,6 @@ def test_sign_in_with_other_credentials_doesnt_overwrite_other_keys
   end
 
   def test_sign_in_with_bad_credentials
-    skip 'Always uses $stdin on windows' if Gem.win_platform?
-
     assert_raises Gem::MockGemUi::TermError do
       util_sign_in ['Access Denied.', 403, 'Forbidden']
     end
@@ -187,9 +187,35 @@ def test_sign_in_with_bad_credentials
     assert_match %r{Access Denied.}, @sign_in_ui.output
   end
 
-  def util_sign_in response, host = nil, args = []
-    skip 'Always uses $stdin on windows' if Gem.win_platform?
+  def test_sign_in_with_correct_otp_code
+    api_key       = 'a5fdbb6ba150cbb83aad2bb2fede64cf040453903'
+    response_fail = "You have enabled multifactor authentication but your request doesn't have the correct OTP code. Please check it and retry."
+
+    util_sign_in(proc do
+      @call_count ||= 0
+      (@call_count += 1).odd? ? [response_fail, 401, 'Unauthorized'] : [api_key, 200, 'OK']
+    end, nil, [], "111111\n")
+
+    assert_match 'You have enabled multi-factor authentication. Please enter OTP code.', @sign_in_ui.output
+    assert_match 'Code: ', @sign_in_ui.output
+    assert_match 'Signed in.', @sign_in_ui.output
+    assert_equal '111111', @fetcher.last_request['OTP']
+  end
+
+  def test_sign_in_with_incorrect_otp_code
+    response = "You have enabled multifactor authentication but your request doesn't have the correct OTP code. Please check it and retry."
+
+    assert_raises Gem::MockGemUi::TermError do
+      util_sign_in [response, 401, 'Unauthorized'], nil, [], "111111\n"
+    end
+
+    assert_match 'You have enabled multi-factor authentication. Please enter OTP code.', @sign_in_ui.output
+    assert_match 'Code: ', @sign_in_ui.output
+    assert_match response, @sign_in_ui.output
+    assert_equal '111111', @fetcher.last_request['OTP']
+  end
 
+  def util_sign_in(response, host = nil, args = [], extra_input = '')
     email    = 'you@example.com'
     password = 'secret'
 
@@ -203,10 +229,10 @@ def util_sign_in response, host = nil, args = []
     @fetcher.data["#{host}/api/v1/api_key"] = response
     Gem::RemoteFetcher.fetcher = @fetcher
 
-    @sign_in_ui = Gem::MockGemUi.new "#{email}\n#{password}\n"
+    @sign_in_ui = Gem::MockGemUi.new("#{email}\n#{password}\n" + extra_input)
 
     use_ui @sign_in_ui do
-      if args.length > 0 then
+      if args.length > 0
         @cmd.sign_in(*args)
       else
         @cmd.sign_in
diff --git a/test/mri/rubygems/test_gem_impossible_dependencies_error.rb b/test/mri/rubygems/test_gem_impossible_dependencies_error.rb
index 027c99a9e58..8a0f8d61963 100644
--- a/test/mri/rubygems/test_gem_impossible_dependencies_error.rb
+++ b/test/mri/rubygems/test_gem_impossible_dependencies_error.rb
@@ -59,4 +59,3 @@ def test_message_conflict
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_indexer.rb b/test/mri/rubygems/test_gem_indexer.rb
index 5a9075e676a..9f27744d48d 100644
--- a/test/mri/rubygems/test_gem_indexer.rb
+++ b/test/mri/rubygems/test_gem_indexer.rb
@@ -2,7 +2,7 @@
 require 'rubygems/test_case'
 require 'rubygems/indexer'
 
-unless defined?(Builder::XChar) then
+unless defined?(Builder::XChar)
   warn "Gem::Indexer tests are being skipped.  Install builder gem." if $VERBOSE
 end
 
@@ -363,4 +363,3 @@ def refute_indexed(dir, name)
   end
 
 end if defined?(Builder::XChar)
-
diff --git a/test/mri/rubygems/test_gem_install_update_options.rb b/test/mri/rubygems/test_gem_install_update_options.rb
index 371e408d274..65eaf7275ff 100644
--- a/test/mri/rubygems/test_gem_install_update_options.rb
+++ b/test/mri/rubygems/test_gem_install_update_options.rb
@@ -21,8 +21,7 @@ def test_add_install_update_options
       --build-root build_root
       --format-exec
       --ignore-dependencies
-      --rdoc
-      --ri
+      --document
       -E
       -f
       -i /install_to
@@ -92,24 +91,6 @@ def test_document_rdoc
     assert_equal %w[ri], @cmd.options[:document]
   end
 
-  def test_rdoc
-    @cmd.handle_options %w[--rdoc]
-
-    assert_equal %w[rdoc ri], @cmd.options[:document].sort
-  end
-
-  def test_rdoc_no
-    @cmd.handle_options %w[--no-rdoc]
-
-    assert_equal %w[ri], @cmd.options[:document]
-  end
-
-  def test_ri
-    @cmd.handle_options %w[--no-ri]
-
-    assert_equal %w[], @cmd.options[:document]
-  end
-
   def test_security_policy
     skip 'openssl is missing' unless defined?(OpenSSL::SSL)
 
@@ -119,6 +100,8 @@ def test_security_policy
   end
 
   def test_security_policy_unknown
+    skip 'openssl is missing' unless defined?(OpenSSL::SSL)
+
     @cmd.add_install_update_options
 
     e = assert_raises OptionParser::InvalidArgument do
diff --git a/test/mri/rubygems/test_gem_installer.rb b/test/mri/rubygems/test_gem_installer.rb
index a47a307049f..e32cccaf6d4 100644
--- a/test/mri/rubygems/test_gem_installer.rb
+++ b/test/mri/rubygems/test_gem_installer.rb
@@ -21,7 +21,7 @@ def setup
     super
     common_installer_setup
 
-    if __name__ =~ /^test_install(_|$)/ then
+    if (self.class.method_defined?(:__name__) ? __name__ : name) =~ /\Atest_install(_|\Z)/
       FileUtils.rm_r @spec.gem_dir
       FileUtils.rm_r @user_spec.gem_dir
     end
@@ -34,7 +34,7 @@ def teardown
 
     super
 
-    Gem.configuration = @config
+    Gem.configuration = instance_variable_defined?(:@config) ? @config : nil
   end
 
   def test_app_script_text
@@ -53,11 +53,11 @@ def test_app_script_text
 
 version = \">= 0.a\"
 
-if ARGV.first
-  str = ARGV.first
-  str = str.dup.force_encoding("BINARY") if str.respond_to? :force_encoding
-  if str =~ /\\A_(.*)_\\z/ and Gem::Version.correct?($1) then
-    version = $1
+str = ARGV.first
+if str
+  str = str.b[/\\A_(.*)_\\z/, 1]
+  if str and Gem::Version.correct?(str)
+    version = str
     ARGV.shift
   end
 end
@@ -121,7 +121,7 @@ def test_check_executable_overwrite_default_bin_dir
   ensure
     Object.const_set :RUBY_FRAMEWORK_VERSION, orig_RUBY_FRAMEWORK_VERSION if
       orig_RUBY_FRAMEWORK_VERSION
-    if orig_bindir then
+    if orig_bindir
       RbConfig::CONFIG['bindir'] = orig_bindir
     else
       RbConfig::CONFIG.delete 'bindir'
@@ -141,7 +141,7 @@ def test_check_executable_overwrite_format_executable
     end
 
     File.open File.join(util_inst_bindir, 'executable'), 'w' do |io|
-     io.write <<-EXEC
+      io.write <<-EXEC
 #!/usr/local/bin/ruby
 #
 # This file was generated by RubyGems
@@ -250,7 +250,7 @@ def test_check_that_user_bin_dir_is_in_path_not_in_path
 
     expected = @installer.bin_dir
 
-    if Gem.win_platform? then
+    if Gem.win_platform?
       expected = expected.downcase.gsub(File::SEPARATOR, File::ALT_SEPARATOR)
     end
 
@@ -336,6 +336,9 @@ def test_generate_bin_bindir_with_user_install_warning
     bin_dir = Gem.win_platform? ? File.expand_path(ENV["WINDIR"]).upcase :
                                   "/usr/bin"
 
+    old_path = ENV["PATH"]
+    ENV["PATH"] = [ENV["PATH"], bin_dir].compact.join(File::PATH_SEPARATOR)
+
     options = {
       :bin_dir => bin_dir,
       :install_dir => "/non/existent"
@@ -350,6 +353,9 @@ def test_generate_bin_bindir_with_user_install_warning
     end
 
     assert_equal "", @ui.error
+
+  ensure
+    ENV["PATH"] = old_path
   end
 
   def test_generate_bin_script
@@ -482,7 +488,7 @@ def test_generate_bin_script_wrappers
     real_exec = File.join @spec.gem_dir, 'bin', 'executable'
 
     # fake --no-wrappers for previous install
-    unless Gem.win_platform? then
+    unless Gem.win_platform?
       FileUtils.mkdir_p File.dirname(installed_exec)
       FileUtils.ln_s real_exec, installed_exec
     end
@@ -663,7 +669,7 @@ def test_generate_bin_symlink_win32
     assert_path_exists installed_exec
 
     if symlink_supported?
-      assert_send([File, :symlink?, installed_exec])
+      assert File.symlink?(installed_exec)
       return
     end
 
@@ -890,8 +896,6 @@ def test_install_creates_binstub_that_understand_version
   end
 
   def test_install_creates_binstub_that_dont_trust_encoding
-    skip unless "".respond_to?(:force_encoding)
-
     Dir.mkdir util_inst_bindir
     util_setup_gem
     util_clear_gems
@@ -961,7 +965,7 @@ def test_install_with_no_prior_files
 
   def test_install_force
     use_ui @ui do
-      installer = Gem::Installer.at old_ruby_required, :force => true
+      installer = Gem::Installer.at old_ruby_required('= 1.4.6'), :force => true
       installer.install
     end
 
@@ -1179,88 +1183,47 @@ def test_install_user_extension_dir
     refute_path_exists File.join expected_extension_dir, 'gem_make.out'
   end
 
-  # ruby core repository needs to `depend` file for extension build.
-  # but 1.9.2 and earlier mkmf.rb does not create TOUCH file like depend.
-  if RUBY_VERSION < '1.9.3'
-    def test_find_lib_file_after_install
-
-      @spec.extensions << "extconf.rb"
-      write_file File.join(@tempdir, "extconf.rb") do |io|
-        io.write <<-RUBY
-          require "mkmf"
-          create_makefile("#{@spec.name}")
-        RUBY
-      end
-
-      write_file File.join(@tempdir, "a.c") do |io|
-        io.write <<-C
-          #include <ruby.h>
-          void Init_a() { }
-        C
-      end
-
-      Dir.mkdir File.join(@tempdir, "lib")
-      write_file File.join(@tempdir, 'lib', "b.rb") do |io|
-        io.write "# b.rb"
-      end
-
-      @spec.files += %w[extconf.rb lib/b.rb a.c]
-
-      use_ui @ui do
-        path = Gem::Package.build @spec
+  def test_find_lib_file_after_install
+    @spec.extensions << "extconf.rb"
+    write_file File.join(@tempdir, "extconf.rb") do |io|
+      io.write <<-RUBY
+        require "mkmf"
 
-        installer = Gem::Installer.at path
-        installer.install
-      end
+        CONFIG['CC'] = '$(TOUCH) $@ ||'
+        CONFIG['LDSHARED'] = '$(TOUCH) $@ ||'
+        $ruby = '#{Gem.ruby}'
 
-      expected = File.join @spec.full_require_paths.find { |path|
-        File.exist? File.join path, 'b.rb'
-      }, 'b.rb'
-      assert_equal expected, @spec.matches_for_glob('b.rb').first
+        create_makefile("#{@spec.name}")
+      RUBY
     end
-  else
-    def test_find_lib_file_after_install
-      @spec.extensions << "extconf.rb"
-      write_file File.join(@tempdir, "extconf.rb") do |io|
-        io.write <<-RUBY
-          require "mkmf"
 
-          CONFIG['CC'] = '$(TOUCH) $@ ||'
-          CONFIG['LDSHARED'] = '$(TOUCH) $@ ||'
-          $ruby = '#{Gem.ruby}'
+    write_file File.join(@tempdir, "depend")
 
-          create_makefile("#{@spec.name}")
-        RUBY
-      end
-
-      write_file File.join(@tempdir, "depend")
-
-      write_file File.join(@tempdir, "a.c") do |io|
-        io.write <<-C
-          #include <ruby.h>
-          void Init_a() { }
-        C
-      end
-
-      Dir.mkdir File.join(@tempdir, "lib")
-      write_file File.join(@tempdir, 'lib', "b.rb") do |io|
-        io.write "# b.rb"
-      end
+    write_file File.join(@tempdir, "a.c") do |io|
+      io.write <<-C
+        #include <ruby.h>
+        void Init_a() { }
+      C
+    end
 
-      @spec.files += %w[extconf.rb lib/b.rb depend a.c]
+    Dir.mkdir File.join(@tempdir, "lib")
+    write_file File.join(@tempdir, 'lib', "b.rb") do |io|
+      io.write "# b.rb"
+    end
 
-      use_ui @ui do
-        path = Gem::Package.build @spec
+    @spec.files += %w[extconf.rb lib/b.rb depend a.c]
 
-        installer = Gem::Installer.at path
-        installer.install
-      end
+    use_ui @ui do
+      path = Gem::Package.build @spec
 
-      expected = File.join @spec.full_require_paths.find { |path|
-        File.exist? File.join path, 'b.rb'
-      }, 'b.rb'
-      assert_equal expected, @spec.matches_for_glob('b.rb').first
+      installer = Gem::Installer.at path
+      installer.install
     end
+
+    expected = File.join @spec.full_require_paths.find { |path|
+      File.exist? File.join path, 'b.rb'
+    }, 'b.rb'
+    assert_equal expected, @spec.matches_for_glob('b.rb').first
   end
 
   def test_install_extension_and_script
@@ -1302,13 +1265,6 @@ def test_install_extension_and_script
   end
 
   def test_install_extension_flat
-    skip '1.9.2 and earlier mkmf.rb does not create TOUCH' if
-      RUBY_VERSION < '1.9.3'
-
-    if RUBY_VERSION == "1.9.3" and RUBY_PATCHLEVEL <= 194
-      skip "TOUCH was introduced into 1.9.3 after p194"
-    end
-
     @spec.require_paths = ["."]
 
     @spec.extensions << "extconf.rb"
@@ -1424,16 +1380,32 @@ def test_pre_install_checks_dependencies_install_dir
 
   def test_pre_install_checks_ruby_version
     use_ui @ui do
-      installer = Gem::Installer.at old_ruby_required
+      installer = Gem::Installer.at old_ruby_required('= 1.4.6')
       e = assert_raises Gem::RuntimeRequirementNotMetError do
         installer.pre_install_checks
       end
-      rv = Gem.ruby_api_version
+      rv = Gem.ruby_version
       assert_equal "old_ruby_required requires Ruby version = 1.4.6. The current ruby version is #{rv}.",
                    e.message
     end
   end
 
+  def test_pre_install_checks_ruby_version_with_prereleases
+    util_set_RUBY_VERSION '2.6.0', -1, '63539', 'ruby 2.6.0preview2 (2018-05-31 trunk 63539) [x86_64-linux]'
+
+    installer = Gem::Installer.at old_ruby_required('>= 2.6.0.preview2')
+    assert installer.pre_install_checks
+
+    installer = Gem::Installer.at old_ruby_required('> 2.6.0.preview2')
+    e = assert_raises Gem::RuntimeRequirementNotMetError do
+      assert installer.pre_install_checks
+    end
+    assert_equal "old_ruby_required requires Ruby version > 2.6.0.preview2. The current ruby version is 2.6.0.preview2.",
+                 e.message
+  ensure
+    util_restore_RUBY_VERSION
+  end
+
   def test_pre_install_checks_wrong_rubygems_version
     spec = util_spec 'old_rubygems_required', '1' do |s|
       s.required_rubygems_version = '< 0'
@@ -1459,7 +1431,7 @@ def test_pre_install_checks_malicious_name
     def spec.full_name # so the spec is buildable
       "malicious-1"
     end
-    def spec.validate; end
+    def spec.validate(packaging, strict); end
 
     util_build_gem spec
 
@@ -1872,9 +1844,9 @@ def test_default_gem
     assert_equal ['bin/executable'], default_spec.files
   end
 
-  def old_ruby_required
+  def old_ruby_required(requirement)
     spec = util_spec 'old_ruby_required', '1' do |s|
-      s.required_ruby_version = '= 1.4.6'
+      s.required_ruby_version = requirement
     end
 
     util_build_gem spec
@@ -1889,7 +1861,7 @@ def util_execless
     @installer = util_installer @spec, @gemhome
   end
 
-  def util_conflict_executable wrappers
+  def util_conflict_executable(wrappers)
     conflict = quick_gem 'conflict' do |spec|
       util_make_exec spec
     end
diff --git a/test/mri/rubygems/test_gem_local_remote_options.rb b/test/mri/rubygems/test_gem_local_remote_options.rb
index 272623be74d..6c21300c2ad 100644
--- a/test/mri/rubygems/test_gem_local_remote_options.rb
+++ b/test/mri/rubygems/test_gem_local_remote_options.rb
@@ -44,8 +44,9 @@ def test_clear_sources_option_idiot_proof
     spec_fetcher
 
     @cmd.add_local_remote_options
+    Gem.configuration.sources = nil
     @cmd.handle_options %W[--clear-sources]
-    assert_equal Gem.default_sources, Gem.sources
+    assert_equal Gem.default_sources, Gem.sources.to_a
   end
 
   def test_local_eh
@@ -123,7 +124,7 @@ def test_source_option_bad
 
     s1 = 'htp://more-gems.example.com'
 
-    assert_raises OptionParser::InvalidArgument do
+    assert_raises ArgumentError do
       @cmd.handle_options %W[--source #{s1}]
     end
 
@@ -131,4 +132,3 @@ def test_source_option_bad
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_name_tuple.rb b/test/mri/rubygems/test_gem_name_tuple.rb
index 9bc2924cf61..5331e1cdbb4 100644
--- a/test/mri/rubygems/test_gem_name_tuple.rb
+++ b/test/mri/rubygems/test_gem_name_tuple.rb
@@ -42,4 +42,3 @@ def test_spaceship
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_package.rb b/test/mri/rubygems/test_gem_package.rb
index 0b03ee2e0c8..05c325e6912 100644
--- a/test/mri/rubygems/test_gem_package.rb
+++ b/test/mri/rubygems/test_gem_package.rb
@@ -94,7 +94,7 @@ def test_add_checksums
       }
     }
 
-    if defined?(OpenSSL::Digest) then
+    if defined?(OpenSSL::Digest)
       expected['SHA256'] = {
         'metadata.gz' => metadata_sha256,
         'data.tar.gz' => Digest::SHA256.hexdigest(tar),
@@ -104,6 +104,25 @@ def test_add_checksums
     assert_equal expected, YAML.load(checksums)
   end
 
+  def test_build_time_source_date_epoch
+    epoch = ENV["SOURCE_DATE_EPOCH"]
+    ENV["SOURCE_DATE_EPOCH"] = "123456789"
+
+    spec = Gem::Specification.new 'build', '1'
+    spec.summary = 'build'
+    spec.authors = 'build'
+    spec.files = ['lib/code.rb']
+    spec.date = Time.at 0
+    spec.rubygems_version = Gem::Version.new '0'
+
+
+    package = Gem::Package.new spec.file_name
+
+    assert_equal Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc, package.build_time
+  ensure
+    ENV["SOURCE_DATE_EPOCH"] = epoch
+  end
+
   def test_add_files
     spec = Gem::Specification.new
     spec.files = %w[lib/code.rb lib/empty]
@@ -134,16 +153,23 @@ def test_add_files
   end
 
   def test_add_files_symlink
-    skip 'symlink not supported' if Gem.win_platform?
-
     spec = Gem::Specification.new
-    spec.files = %w[lib/code.rb lib/code_sym.rb]
+    spec.files = %w[lib/code.rb lib/code_sym.rb lib/code_sym2.rb]
 
     FileUtils.mkdir_p 'lib'
     File.open 'lib/code.rb',  'w' do |io| io.write '# lib/code.rb'  end
 
     # NOTE: 'code.rb' is correct, because it's relative to lib/code_sym.rb
-    File.symlink('code.rb', 'lib/code_sym.rb')
+    begin
+      File.symlink('code.rb', 'lib/code_sym.rb')
+      File.symlink('../lib/code.rb', 'lib/code_sym2.rb')
+    rescue Errno::EACCES => e
+      if win_platform?
+        skip "symlink - must be admin with no UAC on Windows"
+      else
+        raise e
+      end
+    end
 
     package = Gem::Package.new 'bogus.gem'
     package.spec = spec
@@ -167,7 +193,7 @@ def test_add_files_symlink
     end
 
     assert_equal %w[lib/code.rb], files
-    assert_equal [{'lib/code_sym.rb' => 'lib/code.rb'}], symlinks
+    assert_equal [{'lib/code_sym.rb' => 'lib/code.rb'}, {'lib/code_sym2.rb' => '../lib/code.rb'}], symlinks
   end
 
   def test_build
@@ -299,6 +325,19 @@ def test_build_invalid
     assert_equal 'missing value for attribute summary', e.message
   end
 
+  def test_build_invalid_arguments
+    spec = Gem::Specification.new 'build', '1'
+
+    package = Gem::Package.new spec.file_name
+    package.spec = spec
+
+    e = assert_raises ArgumentError do
+      package.build true, true
+    end
+
+    assert_equal "skip_validation = true and strict_validation = true are incompatible", e.message
+  end
+
   def test_build_signed
     skip 'openssl is missing' unless defined?(OpenSSL::SSL)
 
@@ -435,8 +474,6 @@ def test_extract_tar_gz_absolute
   end
 
   def test_extract_tar_gz_symlink_relative_path
-    skip 'symlink not supported' if Gem.win_platform?
-
     package = Gem::Package.new @gem
 
     tgz_io = util_tar_gz do |tar|
@@ -445,7 +482,15 @@ def test_extract_tar_gz_symlink_relative_path
       tar.add_symlink 'lib/foo.rb', '../relative.rb', 0644
     end
 
-    package.extract_tar_gz tgz_io, @destination
+    begin
+      package.extract_tar_gz tgz_io, @destination
+    rescue Errno::EACCES => e
+      if win_platform?
+        skip "symlink - must be admin with no UAC on Windows"
+      else
+        raise e
+      end
+    end
 
     extracted = File.join @destination, 'lib/foo.rb'
     assert_path_exists extracted
@@ -456,28 +501,66 @@ def test_extract_tar_gz_symlink_relative_path
   end
 
   def test_extract_symlink_parent
-   skip 'symlink not supported' if Gem.win_platform?
+    package = Gem::Package.new @gem
+
+    tgz_io = util_tar_gz do |tar|
+      tar.mkdir       'lib',               0755
+      tar.add_symlink 'lib/link', '../..', 0644
+      tar.add_file    'lib/link/outside.txt', 0644 do |io| io.write 'hi' end
+    end
+
+    # Extract into a subdirectory of @destination; if this test fails it writes
+    # a file outside destination_subdir, but we want the file to remain inside
+    # @destination so it will be cleaned up.
+    destination_subdir = File.join @destination, 'subdir'
+    FileUtils.mkdir_p destination_subdir
+
+    e = assert_raises(Gem::Package::PathError, Errno::EACCES) do
+      package.extract_tar_gz tgz_io, destination_subdir
+    end
+
+    if Gem::Package::PathError === e
+      assert_equal("installing into parent path lib/link/outside.txt of " +
+                  "#{destination_subdir} is not allowed", e.message)
+    elsif win_platform?
+      skip "symlink - must be admin with no UAC on Windows"
+    else
+      raise e
+    end
+  end
 
-   package = Gem::Package.new @gem
+  def test_extract_symlink_parent_doesnt_delete_user_dir
+    package = Gem::Package.new @gem
 
-   tgz_io = util_tar_gz do |tar|
-     tar.mkdir       'lib',               0755
-     tar.add_symlink 'lib/link', '../..', 0644
-     tar.add_file    'lib/link/outside.txt', 0644 do |io| io.write 'hi' end
-   end
+    # Extract into a subdirectory of @destination; if this test fails it writes
+    # a file outside destination_subdir, but we want the file to remain inside
+    # @destination so it will be cleaned up.
+    destination_subdir = File.join @destination, 'subdir'
+    FileUtils.mkdir_p destination_subdir
 
-   # Extract into a subdirectory of @destination; if this test fails it writes
-   # a file outside destination_subdir, but we want the file to remain inside
-   # @destination so it will be cleaned up.
-   destination_subdir = File.join @destination, 'subdir'
-   FileUtils.mkdir_p destination_subdir
+    destination_user_dir = File.join @destination, 'user'
+    destination_user_subdir = File.join destination_user_dir, 'dir'
+    FileUtils.mkdir_p destination_user_subdir
 
-   e = assert_raises Gem::Package::PathError do
-     package.extract_tar_gz tgz_io, destination_subdir
-   end
+    tgz_io = util_tar_gz do |tar|
+      tar.add_symlink 'link', destination_user_dir, 16877
+      tar.add_symlink 'link/dir', '.', 16877
+    end
+
+    e = assert_raises(Gem::Package::PathError, Errno::EACCES) do
+      package.extract_tar_gz tgz_io, destination_subdir
+    end
+
+    assert_path_exists destination_user_subdir
 
-   assert_equal("installing into parent path lib/link/outside.txt of " +
-                 "#{destination_subdir} is not allowed", e.message)
+    if Gem::Package::PathError === e
+      assert_equal("installing into parent path #{destination_user_subdir} of " +
+                  "#{destination_subdir} is not allowed", e.message)
+    elsif win_platform?
+      skip "symlink - must be admin with no UAC on Windows"
+    else
+      raise e
+    end
   end
 
   def test_extract_symlink_parent_doesnt_delete_user_dir
@@ -560,6 +643,21 @@ def test_extract_tar_gz_dot_file
     assert_path_exists extracted
   end
 
+  if Gem.win_platform?
+    def test_extract_tar_gz_case_insensitive
+      package = Gem::Package.new @gem
+
+      tgz_io = util_tar_gz do |tar|
+        tar.add_file 'foo/file.rb', 0644 do |io| io.write 'hi' end
+      end
+
+      package.extract_tar_gz tgz_io, @destination.upcase
+
+      extracted = File.join @destination, 'foo/file.rb'
+      assert_path_exists extracted
+    end
+  end
+
   def test_install_location
     package = Gem::Package.new @gem
 
@@ -600,7 +698,6 @@ def test_install_location_dots
   end
 
   def test_install_location_extra_slash
-    skip 'no File.realpath on 1.8' if RUBY_VERSION < '1.9'
     package = Gem::Package.new @gem
 
     file = 'foo//file.rb'.dup
@@ -643,7 +740,7 @@ def test_install_location_suffix
   end
 
   def test_load_spec
-    entry = StringIO.new Gem.gzip @spec.to_yaml
+    entry = StringIO.new Gem::Util.gzip @spec.to_yaml
     def entry.full_name() 'metadata.gz' end
 
     package = Gem::Package.new 'nonexistent.gem'
@@ -673,7 +770,7 @@ def test_verify_checksum_bad
     data_tgz = data_tgz.string
 
     gem = util_tar do |tar|
-      metadata_gz = Gem.gzip @spec.to_yaml
+      metadata_gz = Gem::Util.gzip @spec.to_yaml
 
       tar.add_file 'metadata.gz', 0444 do |io|
         io.write metadata_gz
@@ -720,7 +817,7 @@ def test_verify_checksum_missing
     data_tgz = data_tgz.string
 
     gem = util_tar do |tar|
-      metadata_gz = Gem.gzip @spec.to_yaml
+      metadata_gz = Gem::Util.gzip @spec.to_yaml
 
       tar.add_file 'metadata.gz', 0444 do |io|
         io.write metadata_gz
@@ -757,7 +854,7 @@ def test_verify_checksum_missing
 
   def test_verify_corrupt
     tf = Tempfile.open 'corrupt' do |io|
-      data = Gem.gzip 'a' * 10
+      data = Gem::Util.gzip 'a' * 10
       io.write \
         tar_file_header('metadata.gz', "\000x", 0644, data.length, Time.now)
       io.write data
@@ -773,7 +870,7 @@ def test_verify_corrupt
                    e.message
       io
     end
-    tf.close! if tf.respond_to? :close!
+    tf.close!
   end
 
   def test_verify_empty
@@ -881,7 +978,7 @@ def test_verify_security_policy_checksum_missing
         build.add_contents gem
 
         # write bogus data.tar.gz to foil signature
-        bogus_data = Gem.gzip 'hello'
+        bogus_data = Gem::Util.gzip 'hello'
         fake_signer = Class.new do
           def digest_name; 'SHA512'; end
           def digest_algorithm; Digest(:SHA512); end
@@ -939,6 +1036,40 @@ def entry.full_name() raise ArgumentError, 'whatever' end
     end
 
     assert_equal "package is corrupt, exception while verifying: whatever (ArgumentError) in #{@gem}", e.message
+
+    valid_metadata = ["metadata", "metadata.gz"]
+    valid_metadata.each do |vm|
+      $spec_loaded = false
+      $good_name = vm
+
+      entry = Object.new
+      def entry.full_name() $good_name end
+
+      package = Gem::Package.new(@gem)
+      package.instance_variable_set(:@files, [])
+      def package.load_spec(entry) $spec_loaded = true end
+
+      package.verify_entry(entry)
+
+      assert $spec_loaded
+    end
+
+    invalid_metadata = ["metadataxgz", "foobar\nmetadata", "metadata\nfoobar"]
+    invalid_metadata.each do |vm|
+      $spec_loaded = false
+      $bad_name = vm
+
+      entry = Object.new
+      def entry.full_name() $bad_name  end
+
+      package = Gem::Package.new(@gem)
+      package.instance_variable_set(:@files, [])
+      def package.load_spec(entry) $spec_loaded = true end
+
+      package.verify_entry(entry)
+
+      refute $spec_loaded
+    end
   end
 
   def test_spec
diff --git a/test/mri/rubygems/test_gem_package_old.rb b/test/mri/rubygems/test_gem_package_old.rb
index 604981b3c1f..ab7934dde5d 100644
--- a/test/mri/rubygems/test_gem_package_old.rb
+++ b/test/mri/rubygems/test_gem_package_old.rb
@@ -87,4 +87,3 @@ def test_verify
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_package_tar_header.rb b/test/mri/rubygems/test_gem_package_tar_header.rb
index a0719a75316..5e804bb4188 100644
--- a/test/mri/rubygems/test_gem_package_tar_header.rb
+++ b/test/mri/rubygems/test_gem_package_tar_header.rb
@@ -158,10 +158,10 @@ def test_from_bad_octal
       header_s[124, 12] = val
       io = TempIO.new header_s
       assert_raises ArgumentError do
-        new_header = Gem::Package::TarHeader.from io
+        Gem::Package::TarHeader.from io
       end
+      io.close!
     end
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_package_tar_reader.rb b/test/mri/rubygems/test_gem_package_tar_reader.rb
index e8a902c3112..489685d09d8 100644
--- a/test/mri/rubygems/test_gem_package_tar_reader.rb
+++ b/test/mri/rubygems/test_gem_package_tar_reader.rb
@@ -87,4 +87,3 @@ def test_seek_missing
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_package_tar_reader_entry.rb b/test/mri/rubygems/test_gem_package_tar_reader_entry.rb
index dba1987d4d4..ef088e32be0 100644
--- a/test/mri/rubygems/test_gem_package_tar_reader_entry.rb
+++ b/test/mri/rubygems/test_gem_package_tar_reader_entry.rb
@@ -34,6 +34,10 @@ def test_bytes_read
     assert_equal 1, @entry.bytes_read
   end
 
+  def test_size
+    assert_equal @contents.size, @entry.size
+  end
+
   def test_close
     @entry.close
 
@@ -129,6 +133,13 @@ def test_read_small
     assert_equal @contents[0...100], @entry.read(100)
   end
 
+  def test_readpartial
+    assert_raises(EOFError) do
+      @entry.read(@contents.size)
+      @entry.readpartial(1)
+    end
+  end
+
   def test_rewind
     char = @entry.getc
 
diff --git a/test/mri/rubygems/test_gem_package_tar_writer.rb b/test/mri/rubygems/test_gem_package_tar_writer.rb
index bed1e3b221b..517320c0114 100644
--- a/test/mri/rubygems/test_gem_package_tar_writer.rb
+++ b/test/mri/rubygems/test_gem_package_tar_writer.rb
@@ -11,9 +11,12 @@ def setup
     @data = 'abcde12345'
     @io = TempIO.new
     @tar_writer = Gem::Package::TarWriter.new @io
+    @epoch = ENV["SOURCE_DATE_EPOCH"]
+    ENV["SOURCE_DATE_EPOCH"] = nil
   end
 
   def teardown
+    ENV["SOURCE_DATE_EPOCH"] = @epoch
     @tar_writer.close unless @tar_writer.closed?
     @io.close!
 
@@ -31,6 +34,16 @@ def test_add_file
     assert_equal 1024, @io.pos
   end
 
+  def test_add_file_source_date_epoch
+    ENV["SOURCE_DATE_EPOCH"] = "123456789"
+    Time.stub :now, Time.at(1458518157) do
+      @tar_writer.mkdir 'foo', 0644
+
+      assert_headers_equal tar_dir_header('foo', '', 0644, Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc),
+                           @io.string[0, 512]
+    end
+  end
+
   def test_add_symlink
     Time.stub :now, Time.at(1458518157) do
       @tar_writer.add_symlink 'x', 'y', 0644
@@ -41,6 +54,16 @@ def test_add_symlink
     assert_equal 512, @io.pos
   end
 
+  def test_add_symlink_source_date_epoch
+    ENV["SOURCE_DATE_EPOCH"] = "123456789"
+    Time.stub :now, Time.at(1458518157) do
+      @tar_writer.add_symlink 'x', 'y', 0644
+
+      assert_headers_equal(tar_symlink_header('x', '', 0644, Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc, 'y'),
+                         @io.string[0, 512])
+    end
+  end
+
   def test_add_file_digest
     digest_algorithms = Digest::SHA1, Digest::SHA512
 
@@ -116,7 +139,6 @@ def test_add_file_signer
 
       assert_equal 2048, @io.pos
     end
-
   end
 
   def test_add_file_signer_empty
@@ -148,6 +170,16 @@ def test_add_file_simple
     assert_equal 1024, @io.pos
   end
 
+  def test_add_file_simple_source_date_epoch
+    ENV["SOURCE_DATE_EPOCH"] = "123456789"
+    Time.stub :now, Time.at(1458518157) do
+      @tar_writer.add_file_simple 'x', 0644, 10 do |io| io.write "a" * 10 end
+
+      assert_headers_equal(tar_file_header('x', '', 0644, 10, Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc),
+                         @io.string[0, 512])
+    end
+  end
+
   def test_add_file_simple_padding
     Time.stub :now, Time.at(1458518157) do
       @tar_writer.add_file_simple 'x', 0, 100
@@ -175,12 +207,6 @@ def test_add_file_simple_size
     end
   end
 
-  def test_add_file_unseekable
-    assert_raises Gem::Package::NonSeekableIO do
-      Gem::Package::TarWriter.new(Object.new).add_file 'x', 0
-    end
-  end
-
   def test_close
     @tar_writer.close
 
@@ -223,6 +249,16 @@ def test_mkdir
     end
   end
 
+  def test_mkdir_source_date_epoch
+    ENV["SOURCE_DATE_EPOCH"] = "123456789"
+    Time.stub :now, Time.at(1458518157) do
+      @tar_writer.mkdir 'foo', 0644
+
+      assert_headers_equal tar_dir_header('foo', '', 0644, Time.at(ENV["SOURCE_DATE_EPOCH"].to_i).utc),
+                           @io.string[0, 512]
+    end
+  end
+
   def test_split_name
     assert_equal ['b' * 100, 'a' * 155],
                  @tar_writer.split_name("#{'a' * 155}/#{'b' * 100}")
diff --git a/test/mri/rubygems/test_gem_package_task.rb b/test/mri/rubygems/test_gem_package_task.rb
index f69ee36bd34..e01f4a40435 100644
--- a/test/mri/rubygems/test_gem_package_task.rb
+++ b/test/mri/rubygems/test_gem_package_task.rb
@@ -1,9 +1,10 @@
 # frozen_string_literal: true
 require 'rubygems/test_case'
 require 'rubygems'
+require 'bundler/errors'
 begin
   require 'rubygems/package_task'
-rescue LoadError
+rescue LoadError, Bundler::GemfileNotFound
 end
 
 class TestGemPackageTask < Gem::TestCase
@@ -81,4 +82,3 @@ def test_package_dir_path
   end
 
 end if defined?(Rake::PackageTask)
-
diff --git a/test/mri/rubygems/test_gem_path_support.rb b/test/mri/rubygems/test_gem_path_support.rb
index 754c43e8934..551ec28781a 100644
--- a/test/mri/rubygems/test_gem_path_support.rb
+++ b/test/mri/rubygems/test_gem_path_support.rb
@@ -29,7 +29,7 @@ def test_initialize_home
     assert_equal expected, ps.path
   end
 
-  if defined?(File::ALT_SEPARATOR) and File::ALT_SEPARATOR
+  if File::ALT_SEPARATOR
     def test_initialize_home_normalize
       alternate = @tempdir.gsub(File::SEPARATOR, File::ALT_SEPARATOR)
       ps = Gem::PathSupport.new "GEM_HOME" => alternate
@@ -44,10 +44,10 @@ def test_initialize_path
     assert_equal ENV["GEM_HOME"], ps.home
 
     expected = [
-                File.join(@tempdir, 'foo'),
-                File.join(@tempdir, 'bar'),
-                ENV["GEM_HOME"],
-               ]
+      File.join(@tempdir, 'foo'),
+      File.join(@tempdir, 'bar'),
+      ENV["GEM_HOME"],
+    ]
 
     assert_equal expected, ps.path
   end
@@ -63,9 +63,9 @@ def test_initialize_regexp_path_separator
       assert_equal ENV["GEM_HOME"], ps.home
 
       expected = [
-                  File.join(@tempdir, 'foo'),
-                  File.join(@tempdir, 'bar'),
-                  ] + Gem.default_path << ENV["GEM_HOME"]
+        File.join(@tempdir, 'foo'),
+        File.join(@tempdir, 'bar'),
+      ] + Gem.default_path << ENV["GEM_HOME"]
 
       assert_equal expected, ps.path
     end
@@ -81,9 +81,9 @@ def test_initialize_path_with_defaults
     assert_equal ENV["GEM_HOME"], ps.home
 
     expected = [
-                File.join(@tempdir, 'foo'),
-                File.join(@tempdir, 'bar'),
-                ] + Gem.default_path << ENV["GEM_HOME"]
+      File.join(@tempdir, 'foo'),
+      File.join(@tempdir, 'bar'),
+    ] + Gem.default_path << ENV["GEM_HOME"]
 
     assert_equal expected, ps.path
   end
@@ -118,4 +118,21 @@ def test_initialize_spec
     ps = Gem::PathSupport.new "GEM_SPEC_CACHE" => "foo"
     assert_equal "foo", ps.spec_cache_dir
   end
+
+  def test_gem_paths_do_not_contain_symlinks
+    dir = "#{@tempdir}/realgemdir"
+    symlink = "#{@tempdir}/symdir"
+    Dir.mkdir dir
+    begin
+      File.symlink(dir, symlink)
+    rescue NotImplementedError, SystemCallError
+      skip 'symlinks not supported'
+    end
+    not_existing = "#{@tempdir}/does_not_exist"
+    path = "#{symlink}#{File::PATH_SEPARATOR}#{not_existing}"
+
+    ps = Gem::PathSupport.new "GEM_PATH" => path, "GEM_HOME" => symlink
+    assert_equal dir, ps.home
+    assert_equal [dir, not_existing], ps.path
+  end
 end
diff --git a/test/mri/rubygems/test_gem_platform.rb b/test/mri/rubygems/test_gem_platform.rb
index c9abd08868b..fc8b7030fb8 100644
--- a/test/mri/rubygems/test_gem_platform.rb
+++ b/test/mri/rubygems/test_gem_platform.rb
@@ -117,7 +117,7 @@ def test_initialize_mswin32_vc6
 
     assert_equal expected, platform.to_a, 'i386-mswin32 VC6'
   ensure
-    if orig_RUBY_SO_NAME then
+    if orig_RUBY_SO_NAME
       RbConfig::CONFIG['RUBY_SO_NAME'] = orig_RUBY_SO_NAME
     else
       RbConfig::CONFIG.delete 'RUBY_SO_NAME'
@@ -145,7 +145,7 @@ def test_initialize_test
   end
 
   def test_to_s
-    if win_platform? then
+    if win_platform?
       assert_equal 'x86-mswin32-60', Gem::Platform.local.to_s
     else
       assert_equal 'x86-darwin-8', Gem::Platform.local.to_s
@@ -297,12 +297,11 @@ def test_equals_tilde
     assert_local_match 'sparc-solaris2.8-mq5.3'
   end
 
-  def assert_local_match name
+  def assert_local_match(name)
     assert_match Gem::Platform.local, name
   end
 
-  def refute_local_match name
+  def refute_local_match(name)
     refute_match Gem::Platform.local, name
   end
 end
-
diff --git a/test/mri/rubygems/test_gem_rdoc.rb b/test/mri/rubygems/test_gem_rdoc.rb
index 0355883cb3c..073578527d5 100644
--- a/test/mri/rubygems/test_gem_rdoc.rb
+++ b/test/mri/rubygems/test_gem_rdoc.rb
@@ -49,7 +49,7 @@ def rdoc_3_8_or_better?
   end
 
   def test_initialize
-    if rdoc_4? then
+    if rdoc_4?
       refute @hook.generate_rdoc
     else
       assert @hook.generate_rdoc
@@ -269,4 +269,3 @@ def test_setup_unwritable
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_remote_fetcher.rb b/test/mri/rubygems/test_gem_remote_fetcher.rb
index 20e34e84e11..a725fe205c2 100644
--- a/test/mri/rubygems/test_gem_remote_fetcher.rb
+++ b/test/mri/rubygems/test_gem_remote_fetcher.rb
@@ -9,6 +9,10 @@
                e.message =~ / -- openssl$/
 end
 
+unless defined?(OpenSSL::SSL)
+  warn 'Skipping Gem::Request tests.  openssl not found.'
+end
+
 require 'rubygems/remote_fetcher'
 require 'rubygems/package'
 require 'minitest/mock'
@@ -31,7 +35,7 @@ class TestGemRemoteFetcher < Gem::TestCase
 
   include Gem::DefaultUserInteraction
 
-  SERVER_DATA = <<-EOY
+  SERVER_DATA = <<-EOY.freeze
 --- !ruby/object:Gem::Cache
 gems:
   rake-0.4.11: !ruby/object:Gem::Specification
@@ -47,7 +51,6 @@ class TestGemRemoteFetcher < Gem::TestCase
     author: Jim Weirich
     email: jim@weirichhouse.org
     homepage: http://rake.rubyforge.org
-    rubyforge_project: rake
     description: Rake is a Make-like program implemented in Ruby. Tasks and dependencies are specified in standard Ruby syntax.
     autorequire:
     default_executable: rake
@@ -118,7 +121,7 @@ def setup
     @a1.loaded_from = File.join(@gemhome, 'specifications', @a1.full_name)
 
     Gem::RemoteFetcher.fetcher = nil
-
+    @stub_ui = Gem::MockGemUi.new
     @fetcher = Gem::RemoteFetcher.fetcher
   end
 
@@ -175,112 +178,12 @@ def fetcher.request(uri, request_class, last_modified = nil)
   end
 
   def test_no_proxy
-    use_ui @ui do
+    use_ui @stub_ui do
       assert_data_from_server @fetcher.fetch_path(@server_uri)
       assert_equal SERVER_DATA.size, @fetcher.fetch_size(@server_uri)
     end
   end
 
-  def test_api_endpoint
-    uri = URI.parse "http://example.com/foo"
-    target = MiniTest::Mock.new
-    target.expect :target, "gems.example.com"
-
-    dns = MiniTest::Mock.new
-    dns.expect :getresource, target, [String, Object]
-
-    fetch = Gem::RemoteFetcher.new nil, dns
-    assert_equal URI.parse("http://gems.example.com/foo"), fetch.api_endpoint(uri)
-
-    target.verify
-    dns.verify
-  end
-
-  def test_api_endpoint_ignores_trans_domain_values
-    uri = URI.parse "http://gems.example.com/foo"
-    target = MiniTest::Mock.new
-    target.expect :target, "blah.com"
-
-    dns = MiniTest::Mock.new
-    dns.expect :getresource, target, [String, Object]
-
-    fetch = Gem::RemoteFetcher.new nil, dns
-    assert_equal URI.parse("http://gems.example.com/foo"), fetch.api_endpoint(uri)
-
-    target.verify
-    dns.verify
-  end
-
-  def test_api_endpoint_ignores_trans_domain_values_that_starts_with_original
-    uri = URI.parse "http://example.com/foo"
-    target = MiniTest::Mock.new
-    target.expect :target, "example.combadguy.com"
-
-    dns = MiniTest::Mock.new
-    dns.expect :getresource, target, [String, Object]
-
-    fetch = Gem::RemoteFetcher.new nil, dns
-    assert_equal URI.parse("http://example.com/foo"), fetch.api_endpoint(uri)
-
-    target.verify
-    dns.verify
-  end
-
-  def test_api_endpoint_ignores_trans_domain_values_that_end_with_original
-    uri = URI.parse "http://example.com/foo"
-    target = MiniTest::Mock.new
-    target.expect :target, "badexample.com"
-
-    dns = MiniTest::Mock.new
-    dns.expect :getresource, target, [String, Object]
-
-    fetch = Gem::RemoteFetcher.new nil, dns
-    assert_equal URI.parse("http://example.com/foo"), fetch.api_endpoint(uri)
-
-    target.verify
-    dns.verify
-  end
-
-  def test_api_endpoint_ignores_trans_domain_values_that_end_with_original_in_path
-    uri = URI.parse "http://example.com/foo"
-    target = MiniTest::Mock.new
-    target.expect :target, "evil.com/a.example.com"
-
-    dns = MiniTest::Mock.new
-    dns.expect :getresource, target, [String, Object]
-
-    fetch = Gem::RemoteFetcher.new nil, dns
-    assert_equal URI.parse("http://example.com/foo"), fetch.api_endpoint(uri)
-
-    target.verify
-    dns.verify
-  end
-
-  def test_api_endpoint_timeout_warning
-    uri = URI.parse "http://gems.example.com/foo"
-
-    dns = MiniTest::Mock.new
-    def dns.getresource arg, *rest
-      raise Resolv::ResolvError.new('timeout!')
-    end
-
-    fetch = Gem::RemoteFetcher.new nil, dns
-    begin
-      old_verbose, Gem.configuration.verbose = Gem.configuration.verbose, 1
-      endpoint = use_ui @ui do
-        fetch.api_endpoint(uri)
-      end
-    ensure
-      Gem.configuration.verbose = old_verbose
-    end
-
-    assert_equal uri, endpoint
-
-    assert_equal "Getting SRV record failed: timeout!\n", @ui.output
-
-    dns.verify
-  end
-
   def test_cache_update_path
     uri = URI 'http://example/file'
     path = File.join @tempdir, 'file'
@@ -307,20 +210,20 @@ def test_cache_update_path_no_update
     refute_path_exists path
   end
 
-  def util_fuck_with_fetcher data, blow = false
+  def util_fuck_with_fetcher(data, blow = false)
     fetcher = Gem::RemoteFetcher.fetcher
     fetcher.instance_variable_set :@test_data, data
 
-    unless blow then
-      def fetcher.fetch_path arg, *rest
+    unless blow
+      def fetcher.fetch_path(arg, *rest)
         @test_arg = arg
         @test_data
       end
     else
-      def fetcher.fetch_path arg, *rest
+      def fetcher.fetch_path(arg, *rest)
         # OMG I'm such an ass
         class << self; remove_method :fetch_path; end
-        def self.fetch_path arg, *rest
+        def self.fetch_path(arg, *rest)
           @test_arg = arg
           @test_data
         end
@@ -520,7 +423,7 @@ def test_download_to_cache
     util_setup_spec_fetcher @a1, @a2
     @fetcher.instance_variable_set :@a1, @a1
     @fetcher.instance_variable_set :@a2, @a2
-    def @fetcher.fetch_path uri, mtime = nil, head = false
+    def @fetcher.fetch_path(uri, mtime = nil, head = false)
       case uri.request_uri
       when /#{@a1.spec_name}/ then
         Gem.deflate Marshal.dump @a1
@@ -541,7 +444,7 @@ def test_fetch_path_gzip
     @fetcher = fetcher
 
     def fetcher.fetch_http(uri, mtime, head = nil)
-      Gem.gzip 'foo'
+      Gem::Util.gzip 'foo'
     end
 
     assert_equal 'foo', fetcher.fetch_path(@uri + 'foo.gz')
@@ -613,6 +516,24 @@ def fetcher.fetch_http(uri, mtime = nil, head = nil)
     assert_equal url, e.uri
   end
 
+  def test_fetch_path_openssl_ssl_sslerror
+    fetcher = Gem::RemoteFetcher.new nil
+    @fetcher = fetcher
+
+    def fetcher.fetch_http(uri, mtime = nil, head = nil)
+      raise OpenSSL::SSL::SSLError
+    end
+
+    url = 'http://example.com/uri'
+
+    e = assert_raises Gem::RemoteFetcher::FetchError do
+      fetcher.fetch_path url
+    end
+
+    assert_equal "OpenSSL::SSL::SSLError: OpenSSL::SSL::SSLError (#{url})", e.message
+    assert_equal url, e.uri
+  end
+
   def test_fetch_path_unmodified
     fetcher = Gem::RemoteFetcher.new nil
     @fetcher = fetcher
@@ -625,7 +546,7 @@ def fetcher.fetch_http(uri, mtime, head = nil)
   end
 
   def test_implicit_no_proxy
-    use_ui @ui do
+    use_ui @stub_ui do
       ENV['http_proxy'] = 'http://fakeurl:12345'
       fetcher = Gem::RemoteFetcher.new :no_proxy
       @fetcher = fetcher
@@ -634,7 +555,7 @@ def test_implicit_no_proxy
   end
 
   def test_implicit_proxy
-    use_ui @ui do
+    use_ui @stub_ui do
       ENV['http_proxy'] = @proxy_uri
       fetcher = Gem::RemoteFetcher.new nil
       @fetcher = fetcher
@@ -643,7 +564,7 @@ def test_implicit_proxy
   end
 
   def test_implicit_upper_case_proxy
-    use_ui @ui do
+    use_ui @stub_ui do
       ENV['HTTP_PROXY'] = @proxy_uri
       fetcher = Gem::RemoteFetcher.new nil
       @fetcher = fetcher
@@ -652,7 +573,7 @@ def test_implicit_upper_case_proxy
   end
 
   def test_implicit_proxy_no_env
-    use_ui @ui do
+    use_ui @stub_ui do
       fetcher = Gem::RemoteFetcher.new nil
       @fetcher = fetcher
       assert_data_from_server fetcher.fetch_path(@server_uri)
@@ -666,7 +587,7 @@ def test_fetch_http
 
     def fetcher.request(uri, request_class, last_modified = nil)
       url = 'http://gems.example.com/redirect'
-      unless defined? @requested then
+      unless defined? @requested
         @requested = true
         res = Net::HTTPMovedPermanently.new nil, 301, nil
         res.add_field 'Location', url
@@ -727,10 +648,9 @@ def test_fetch_http_with_additional_headers
     assert_equal "murphy", fetcher.fetch_path(@server_uri)
   end
 
-  def test_fetch_s3
+  def assert_fetch_s3(url)
     fetcher = Gem::RemoteFetcher.new nil
     @fetcher = fetcher
-    url = 's3://testuser:testpass@my-bucket/gems/specs.4.8.gz'
     $fetched_uri = nil
 
     def fetcher.request(uri, request_class, last_modified = nil)
@@ -752,19 +672,68 @@ def fetcher.s3_expiration
     $fetched_uri = nil
   end
 
-  def test_fetch_s3_no_creds
+  def test_fetch_s3_config_creds
+    Gem.configuration[:s3_source] = {
+      'my-bucket' => {:id => 'testuser', :secret => 'testpass'}
+    }
+    url = 's3://my-bucket/gems/specs.4.8.gz'
+    assert_fetch_s3 url
+  ensure
+    Gem.configuration[:s3_source] = nil
+  end
+
+  def test_fetch_s3_url_creds
+    url = 's3://testuser:testpass@my-bucket/gems/specs.4.8.gz'
+    assert_fetch_s3 url
+  end
+
+  def refute_fetch_s3(url, expected_message)
     fetcher = Gem::RemoteFetcher.new nil
     @fetcher = fetcher
-    url = 's3://my-bucket/gems/specs.4.8.gz'
+
     e = assert_raises Gem::RemoteFetcher::FetchError do
       fetcher.fetch_s3 URI.parse(url)
     end
 
-    assert_match "credentials needed", e.message
+    assert_match expected_message, e.message
+  end
+
+  def test_fetch_s3_no_source_key
+    url = 's3://my-bucket/gems/specs.4.8.gz'
+    refute_fetch_s3 url, 'no s3_source key exists in .gemrc'
+  end
+
+  def test_fetch_s3_no_host
+    Gem.configuration[:s3_source] = {
+      'my-bucket' => {:id => 'testuser', :secret => 'testpass'}
+    }
+
+    url = 's3://other-bucket/gems/specs.4.8.gz'
+    refute_fetch_s3 url, 'no key for host other-bucket in s3_source in .gemrc'
+  ensure
+    Gem.configuration[:s3_source] = nil
+  end
+
+  def test_fetch_s3_no_id
+    Gem.configuration[:s3_source] = { 'my-bucket' => {:secret => 'testpass'} }
+
+    url = 's3://my-bucket/gems/specs.4.8.gz'
+    refute_fetch_s3 url, 's3_source for my-bucket missing id or secret'
+  ensure
+    Gem.configuration[:s3_source] = nil
+  end
+
+  def test_fetch_s3_no_secret
+    Gem.configuration[:s3_source] = { 'my-bucket' => {:id => 'testuser'} }
+
+    url = 's3://my-bucket/gems/specs.4.8.gz'
+    refute_fetch_s3 url, 's3_source for my-bucket missing id or secret'
+  ensure
+    Gem.configuration[:s3_source] = nil
   end
 
   def test_observe_no_proxy_env_single_host
-    use_ui @ui do
+    use_ui @stub_ui do
       ENV["http_proxy"] = @proxy_uri
       ENV["no_proxy"] = URI::parse(@server_uri).host
       fetcher = Gem::RemoteFetcher.new nil
@@ -774,7 +743,7 @@ def test_observe_no_proxy_env_single_host
   end
 
   def test_observe_no_proxy_env_list
-    use_ui @ui do
+    use_ui @stub_ui do
       ENV["http_proxy"] = @proxy_uri
       ENV["no_proxy"] = "fakeurl.com, #{URI::parse(@server_uri).host}"
       fetcher = Gem::RemoteFetcher.new nil
@@ -796,7 +765,7 @@ def test_request_block
   end
 
   def test_yaml_error_on_size
-    use_ui @ui do
+    use_ui @stub_ui do
       self.class.enable_yaml = false
       fetcher = Gem::RemoteFetcher.new nil
       @fetcher = fetcher
@@ -842,9 +811,9 @@ def test_do_not_allow_invalid_client_cert_auth_connection
     with_configured_fetcher(
       ":ssl_ca_cert: #{temp_ca_cert}\n" +
       ":ssl_client_cert: #{temp_client_cert}\n") do |fetcher|
-        assert_raises Gem::RemoteFetcher::FetchError do
-          fetcher.fetch_path("https://localhost:#{ssl_server.config[:Port]}/yaml")
-        end
+      assert_raises Gem::RemoteFetcher::FetchError do
+        fetcher.fetch_path("https://localhost:#{ssl_server.config[:Port]}/yaml")
+      end
     end
   end
 
@@ -866,10 +835,26 @@ def test_ssl_connection_allow_verify_none
 
   def test_do_not_follow_insecure_redirect
     ssl_server = self.class.start_ssl_server
-    temp_ca_cert = File.join(DIR, 'ca_cert.pem'),
+    temp_ca_cert = File.join(DIR, 'ca_cert.pem')
+    expected_error_message =
+      "redirecting to non-https resource: #{@server_uri} (https://localhost:#{ssl_server.config[:Port]}/insecure_redirect?to=#{@server_uri})"
+
+    with_configured_fetcher(":ssl_ca_cert: #{temp_ca_cert}") do |fetcher|
+      err = assert_raises Gem::RemoteFetcher::FetchError do
+        fetcher.fetch_path("https://localhost:#{ssl_server.config[:Port]}/insecure_redirect?to=#{@server_uri}")
+      end
+
+      assert_equal(err.message, expected_error_message)
+    end
+  end
+
+  def test_nil_ca_cert
+    ssl_server = self.class.start_ssl_server
+    temp_ca_cert = nil
+
     with_configured_fetcher(":ssl_ca_cert: #{temp_ca_cert}") do |fetcher|
       assert_raises Gem::RemoteFetcher::FetchError do
-        fetcher.fetch_path("https://localhost:#{ssl_server.config[:Port]}/insecure_redirect?to=#{@server_uri}")
+        fetcher.fetch_path("https://localhost:#{ssl_server.config[:Port]}")
       end
     end
   end
@@ -1012,7 +997,7 @@ def start_server(data)
         :DocumentRoot    => nil,
         :Logger          => null_logger,
         :AccessLog       => null_logger
-        )
+      )
       s.mount_proc("/kill") { |req, res| s.shutdown }
       s.mount_proc("/yaml") { |req, res|
         if req["X-Captain"]
@@ -1067,4 +1052,4 @@ def test_correct_for_windows_path
     assert_equal "/home/skillet", @fetcher.correct_for_windows_path(path)
   end
 
-end
+end if defined?(OpenSSL::SSL)
diff --git a/test/mri/rubygems/test_gem_request.rb b/test/mri/rubygems/test_gem_request.rb
index 46a49a69439..8b475fae42a 100644
--- a/test/mri/rubygems/test_gem_request.rb
+++ b/test/mri/rubygems/test_gem_request.rb
@@ -4,6 +4,10 @@
 require 'ostruct'
 require 'base64'
 
+unless defined?(OpenSSL::SSL)
+  warn 'Skipping Gem::Request tests.  openssl not found.'
+end
+
 class TestGemRequest < Gem::TestCase
 
   CA_CERT_FILE     = cert_path 'ca'
@@ -13,7 +17,7 @@ class TestGemRequest < Gem::TestCase
   PUBLIC_CERT_FILE = cert_path 'public'
   SSL_CERT         = load_cert 'ssl'
 
-  def make_request uri, request_class, last_modified, proxy
+  def make_request(uri, request_class, last_modified, proxy)
     Gem::Request.create_with_proxy uri, request_class, last_modified, proxy
   end
 
@@ -438,7 +442,7 @@ def test_verify_certificate_message_UNABLE_TO_VERIFY_LEAF_SIGNATURE
     message =
       Gem::Request.verify_certificate_message error_number, EXPIRED_CERT
 
-    assert_equal "You must add #{EXPIRED_CERT.issuer} to your local trusted store",
+    assert_equal "Cannot verify certificate issued by #{EXPIRED_CERT.issuer}",
                  message
   end
 
@@ -461,7 +465,7 @@ def util_save_version
     @orig_RUBY_REVISION   = RUBY_REVISION if defined? RUBY_REVISION
   end
 
-  def util_stub_net_http hash
+  def util_stub_net_http(hash)
     old_client = Gem::Request::ConnectionPools.client
     conn = Conn.new OpenStruct.new(hash)
     Gem::Request::ConnectionPools.client = conn
@@ -473,7 +477,7 @@ def util_stub_net_http hash
   class Conn
     attr_accessor :payload
 
-    def new *args; self; end
+    def new(*args); self; end
     def use_ssl=(bool); end
     def verify_callback=(setting); end
     def verify_mode=(setting); end
@@ -491,5 +495,4 @@ def request(req)
     end
   end
 
-end
-
+end if defined?(OpenSSL::SSL)
diff --git a/test/mri/rubygems/test_gem_request_connection_pools.rb b/test/mri/rubygems/test_gem_request_connection_pools.rb
index a087095a53c..eb48ba45d21 100644
--- a/test/mri/rubygems/test_gem_request_connection_pools.rb
+++ b/test/mri/rubygems/test_gem_request_connection_pools.rb
@@ -5,7 +5,7 @@
 
 class TestGemRequestConnectionPool < Gem::TestCase
   class FakeHttp
-    def initialize *args
+    def initialize(*args)
     end
 
     def start
@@ -25,6 +25,28 @@ def teardown
     super
   end
 
+  def test_to_proxy_substring
+    pools = Gem::Request::ConnectionPools.new nil, []
+
+    env_no_proxy = %w[
+      ems.example
+    ]
+
+    no_proxy = pools.send :no_proxy?, 'rubygems.example', env_no_proxy
+
+    refute no_proxy, 'mismatch'
+  end
+
+  def test_to_proxy_empty_string
+    pools = Gem::Request::ConnectionPools.new nil, []
+
+    env_no_proxy = [""]
+
+    no_proxy = pools.send :no_proxy?, 'ems.example', env_no_proxy
+
+    refute no_proxy, 'mismatch'
+  end
+
   def test_checkout_same_connection
     uri = URI.parse('http://example/some_endpoint')
 
@@ -86,8 +108,7 @@ def test_net_http_args_ipv6
 
     net_http_args = pools.send :net_http_args, URI('http://[::1]'), nil
 
-    expected_host = RUBY_VERSION >= "1.9.3" ? "::1" : "[::1]"
-    assert_equal [expected_host, 80], net_http_args
+    assert_equal ["::1", 80], net_http_args
   end
 
   def test_net_http_args_proxy
diff --git a/test/mri/rubygems/test_gem_request_set.rb b/test/mri/rubygems/test_gem_request_set.rb
index 5dc6c1518de..86986f22872 100644
--- a/test/mri/rubygems/test_gem_request_set.rb
+++ b/test/mri/rubygems/test_gem_request_set.rb
@@ -218,7 +218,7 @@ def test_load_gemdeps
       assert_kind_of Gem::RequestSet::GemDependencyAPI, gem_deps
       io
     end
-    tf.close! if tf.respond_to? :close!
+    tf.close!
 
     assert_equal [dep('a')], rs.dependencies
 
@@ -239,7 +239,7 @@ def test_load_gemdeps_installing
       assert_kind_of Gem::RequestSet::GemDependencyAPI, gem_deps
       io
     end
-    tf.close! if tf.respond_to? :close!
+    tf.close!
 
     assert_equal [dep('a')], rs.dependencies
   end
@@ -254,7 +254,7 @@ def test_load_gemdeps_without_groups
       rs.load_gemdeps io.path, [:test]
       io
     end
-    tf.close! if tf.respond_to? :close!
+    tf.close!
 
     assert_empty rs.dependencies
   end
@@ -346,7 +346,7 @@ def test_resolve_git
       rs.load_gemdeps io.path
       io
     end
-    tf.close! if tf.respond_to? :close!
+    tf.close!
 
     res = rs.resolve
     assert_equal 1, res.size
@@ -410,7 +410,7 @@ def test_resolve_vendor
       rs.load_gemdeps io.path
       io
     end
-    tf.close! if tf.respond_to? :close!
+    tf.close!
 
     res = rs.resolve
     assert_equal 2, res.size
diff --git a/test/mri/rubygems/test_gem_request_set_gem_dependency_api.rb b/test/mri/rubygems/test_gem_request_set_gem_dependency_api.rb
index e8bb1d4a6da..320fdcb6043 100644
--- a/test/mri/rubygems/test_gem_request_set_gem_dependency_api.rb
+++ b/test/mri/rubygems/test_gem_request_set_gem_dependency_api.rb
@@ -19,7 +19,7 @@ def setup
     @gda.instance_variable_set :@vendor_set, @vendor_set
   end
 
-  def with_engine_version name, version
+  def with_engine_version(name, version)
     engine               = RUBY_ENGINE if Object.const_defined? :RUBY_ENGINE
     engine_version_const = "#{Gem.ruby_engine.upcase}_VERSION"
     engine_version       = Object.const_get engine_version_const
@@ -627,11 +627,7 @@ def test_load
       assert_equal [dep('a'), dep('b')], @set.dependencies
       io
     end
-    tf.close! if tf.respond_to? :close!
-  end
-
-  def test_name_typo
-    assert_same @GDA, Gem::RequestSet::GemDepedencyAPI
+    tf.close!
   end
 
   def test_pin_gem_source
@@ -828,4 +824,3 @@ def test_with_engine_version
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_request_set_lockfile.rb b/test/mri/rubygems/test_gem_request_set_lockfile.rb
index 7460b7efad2..9ac691ebdd1 100644
--- a/test/mri/rubygems/test_gem_request_set_lockfile.rb
+++ b/test/mri/rubygems/test_gem_request_set_lockfile.rb
@@ -21,14 +21,13 @@ def setup
     @set.instance_variable_set :@vendor_set, @vendor_set
 
     @gem_deps_file = 'gem.deps.rb'
-
   end
 
   def lockfile
     Gem::RequestSet::Lockfile.build @set, @gem_deps_file
   end
 
-  def write_lockfile lockfile
+  def write_lockfile(lockfile)
     @lock_file = File.expand_path "#{@gem_deps_file}.lock"
 
     File.open @lock_file, 'w' do |io|
diff --git a/test/mri/rubygems/test_gem_request_set_lockfile_parser.rb b/test/mri/rubygems/test_gem_request_set_lockfile_parser.rb
index f3517da43a7..27ee519ea77 100644
--- a/test/mri/rubygems/test_gem_request_set_lockfile_parser.rb
+++ b/test/mri/rubygems/test_gem_request_set_lockfile_parser.rb
@@ -248,13 +248,8 @@ def test_parse_GEM_remote_multiple
 
     assert_equal %w[a-2], lockfile_set.specs.map { |s| s.full_name }
 
-    if [].respond_to? :flat_map
-      assert_equal %w[https://gems.example/ https://other.example/],
-                   lockfile_set.specs.flat_map { |s| s.sources.map{ |src| src.uri.to_s } }
-    else # FIXME: remove when 1.8 is dropped
-      assert_equal %w[https://gems.example/ https://other.example/],
-                   lockfile_set.specs.map { |s| s.sources.map{ |src| src.uri.to_s } }.flatten(1)
-    end
+    assert_equal %w[https://gems.example/ https://other.example/],
+                 lockfile_set.specs.flat_map { |s| s.sources.map{ |src| src.uri.to_s } }
   end
 
   def test_parse_GIT
@@ -535,13 +530,13 @@ def test_parse_missing
     refute lockfile_set
   end
 
-  def write_lockfile lockfile
+  def write_lockfile(lockfile)
     File.open @lock_file, 'w' do |io|
       io.write lockfile
     end
   end
 
-  def parse_lockfile set, platforms
+  def parse_lockfile(set, platforms)
     tokenizer = Gem::RequestSet::Lockfile::Tokenizer.from_file @lock_file
     parser = tokenizer.make_parser set, platforms
     parser.parse
diff --git a/test/mri/rubygems/test_gem_request_set_lockfile_tokenizer.rb b/test/mri/rubygems/test_gem_request_set_lockfile_tokenizer.rb
index f4aba6d94ac..48e66cf56a6 100644
--- a/test/mri/rubygems/test_gem_request_set_lockfile_tokenizer.rb
+++ b/test/mri/rubygems/test_gem_request_set_lockfile_tokenizer.rb
@@ -294,7 +294,7 @@ def test_unget
     assert_equal :token, parser.get
   end
 
-  def write_lockfile lockfile
+  def write_lockfile(lockfile)
     File.open @lock_file, 'w' do |io|
       io.write lockfile
     end
diff --git a/test/mri/rubygems/test_gem_requirement.rb b/test/mri/rubygems/test_gem_requirement.rb
index ea354f7b1dc..7a59243b6ad 100644
--- a/test/mri/rubygems/test_gem_requirement.rb
+++ b/test/mri/rubygems/test_gem_requirement.rb
@@ -20,6 +20,12 @@ def test_equals2
     refute_requirement_equal "= 1.2", "= 1.3"
     refute_requirement_equal "= 1.3", "= 1.2"
 
+    refute_requirement_equal "~> 1.3", "~> 1.3.0"
+    refute_requirement_equal "~> 1.3.0", "~> 1.3"
+
+    assert_requirement_equal ["> 2", "~> 1.3"], ["> 2.0", "~> 1.3"]
+    assert_requirement_equal ["> 2.0", "~> 1.3"], ["> 2", "~> 1.3"]
+
     refute_equal Object.new, req("= 1.2")
     refute_equal req("= 1.2"), Object.new
   end
@@ -28,6 +34,8 @@ def test_initialize
     assert_requirement_equal "= 2", "2"
     assert_requirement_equal "= 2", ["2"]
     assert_requirement_equal "= 2", v(2)
+    assert_requirement_equal "2.0", "2"
+    assert_requirement_equal ["= 2", ">= 2"], [">= 2", "= 2"]
   end
 
   def test_create
@@ -69,6 +77,7 @@ def test_parse
     assert_equal ['=', Gem::Version.new(1)], Gem::Requirement.parse('= 1')
     assert_equal ['>', Gem::Version.new(1)], Gem::Requirement.parse('> 1')
     assert_equal ['=', Gem::Version.new(1)], Gem::Requirement.parse("=\n1")
+    assert_equal ['=', Gem::Version.new(1)], Gem::Requirement.parse('1.0')
 
     assert_equal ['=', Gem::Version.new(2)],
       Gem::Requirement.parse(Gem::Version.new('2'))
@@ -226,6 +235,8 @@ def test_satisfied_by_eh_good
     assert_satisfied_by "0.2.33",      "= 0.2.33"
     assert_satisfied_by "0.2.34",      "> 0.2.33"
     assert_satisfied_by "1.0",         "= 1.0"
+    assert_satisfied_by "1.0.0",       "= 1.0"
+    assert_satisfied_by "1.0",         "= 1.0.0"
     assert_satisfied_by "1.0",         "1.0"
     assert_satisfied_by "1.8.2",       "> 1.8.0"
     assert_satisfied_by "1.112",       "> 1.111"
@@ -313,6 +324,7 @@ def test_satisfied_by_eh_multiple
   def test_satisfied_by_boxed
     refute_satisfied_by "1.3",   "~> 1.4"
     assert_satisfied_by "1.4",   "~> 1.4"
+    assert_satisfied_by "1.4.0", "~> 1.4"
     assert_satisfied_by "1.5",   "~> 1.4"
     refute_satisfied_by "2.0",   "~> 1.4"
 
@@ -324,6 +336,20 @@ def test_satisfied_by_boxed
     refute_satisfied_by "2.0",   "~> 1.4.4"
   end
 
+  def test_satisfied_by_explicitly_bounded
+    req = [">= 1.4.4", "< 1.5"]
+
+    assert_satisfied_by "1.4.5",     req
+    assert_satisfied_by "1.5.0.rc1", req
+    refute_satisfied_by "1.5.0",     req
+
+    req = [">= 1.4.4", "< 1.5.a"]
+
+    assert_satisfied_by "1.4.5",     req
+    refute_satisfied_by "1.5.0.rc1", req
+    refute_satisfied_by "1.5.0",     req
+  end
+
   def test_specific
     refute req('> 1') .specific?
     refute req('>= 1').specific?
@@ -367,26 +393,26 @@ def test_hash_with_multiple_versions
   # Assert that two requirements are equal. Handles Gem::Requirements,
   # strings, arrays, numbers, and versions.
 
-  def assert_requirement_equal expected, actual
+  def assert_requirement_equal(expected, actual)
     assert_equal req(expected), req(actual)
   end
 
   # Assert that +version+ satisfies +requirement+.
 
-  def assert_satisfied_by version, requirement
+  def assert_satisfied_by(version, requirement)
     assert req(requirement).satisfied_by?(v(version)),
       "#{requirement} is satisfied by #{version}"
   end
 
   # Refute the assumption that two requirements are equal.
 
-  def refute_requirement_equal unexpected, actual
+  def refute_requirement_equal(unexpected, actual)
     refute_equal req(unexpected), req(actual)
   end
 
   # Refute the assumption that +version+ satisfies +requirement+.
 
-  def refute_satisfied_by version, requirement
+  def refute_satisfied_by(version, requirement)
     refute req(requirement).satisfied_by?(v(version)),
       "#{requirement} is not satisfied by #{version}"
   end
diff --git a/test/mri/rubygems/test_gem_resolver.rb b/test/mri/rubygems/test_gem_resolver.rb
index 417f0580f79..fa1c595afdf 100644
--- a/test/mri/rubygems/test_gem_resolver.rb
+++ b/test/mri/rubygems/test_gem_resolver.rb
@@ -23,7 +23,7 @@ def set(*specs)
     StaticSet.new(specs)
   end
 
-  def assert_resolves_to expected, resolver
+  def assert_resolves_to(expected, resolver)
     actual = resolver.resolve
 
     exp = expected.sort_by { |s| s.full_name }
@@ -36,10 +36,6 @@ def assert_resolves_to expected, resolver
     flunk e.message
   end
 
-  def test_self_compatibility
-    assert_same Gem::Resolver, Gem::DependencyResolver
-  end
-
   def test_self_compose_sets_best_set
     best_set = @DR::BestSet.new
 
@@ -303,7 +299,7 @@ def test_picks_best_platform
     a2_p1   = a3_p2 = nil
 
     spec_fetcher do |fetcher|
-              fetcher.spec 'a', 2
+      fetcher.spec 'a', 2
       a2_p1 = fetcher.spec 'a', 2 do |s| s.platform = Gem::Platform.local end
       a3_p2 = fetcher.spec 'a', 3 do |s| s.platform = unknown end
     end
@@ -666,12 +662,12 @@ def test_simple_activesupport_problem
   end
 
   def test_second_level_backout
-    b1 = new_spec "b", "1", { "c" => ">= 1" }, "lib/b.rb"
-    b2 = new_spec "b", "2", { "c" => ">= 2" }, "lib/b.rb"
-    c1 = new_spec "c", "1"
-    c2 = new_spec "c", "2"
-    d1 = new_spec "d", "1", { "c" => "< 2" },  "lib/d.rb"
-    d2 = new_spec "d", "2", { "c" => "< 2" },  "lib/d.rb"
+    b1 = util_spec "b", "1", { "c" => ">= 1" }, "lib/b.rb"
+    b2 = util_spec "b", "2", { "c" => ">= 2" }, "lib/b.rb"
+    c1 = util_spec "c", "1"
+    c2 = util_spec "c", "2"
+    d1 = util_spec "d", "1", { "c" => "< 2" },  "lib/d.rb"
+    d2 = util_spec "d", "2", { "c" => "< 2" },  "lib/d.rb"
 
     s = set(b1, b2, c1, c2, d1, d2)
 
@@ -688,11 +684,11 @@ def test_sorts_by_source_then_version
     sourceB = Gem::Source.new 'http://example.com/b'
     sourceC = Gem::Source.new 'http://example.com/c'
 
-    spec_A_1 = new_spec 'some-dep', '0.0.1'
-    spec_A_2 = new_spec 'some-dep', '1.0.0'
-    spec_B_1 = new_spec 'some-dep', '0.0.1'
-    spec_B_2 = new_spec 'some-dep', '0.0.2'
-    spec_C_1 = new_spec 'some-dep', '0.1.0'
+    spec_A_1 = util_spec 'some-dep', '0.0.1'
+    spec_A_2 = util_spec 'some-dep', '1.0.0'
+    spec_B_1 = util_spec 'some-dep', '0.0.1'
+    spec_B_2 = util_spec 'some-dep', '0.0.2'
+    spec_C_1 = util_spec 'some-dep', '0.1.0'
 
     set = StaticSet.new [
       Gem::Resolver::SpecSpecification.new(nil, spec_B_1, sourceB),
diff --git a/test/mri/rubygems/test_gem_resolver_activation_request.rb b/test/mri/rubygems/test_gem_resolver_activation_request.rb
index ee1b38887aa..5d5de1a2d51 100644
--- a/test/mri/rubygems/test_gem_resolver_activation_request.rb
+++ b/test/mri/rubygems/test_gem_resolver_activation_request.rb
@@ -71,4 +71,3 @@ def test_others_possible_eh
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_api_set.rb b/test/mri/rubygems/test_gem_resolver_api_set.rb
index 5746614039d..f6b3e49c74a 100644
--- a/test/mri/rubygems/test_gem_resolver_api_set.rb
+++ b/test/mri/rubygems/test_gem_resolver_api_set.rb
@@ -206,4 +206,3 @@ def test_prefetch_local
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_api_specification.rb b/test/mri/rubygems/test_gem_resolver_api_specification.rb
index 4f198ea395d..87ff9013208 100644
--- a/test/mri/rubygems/test_gem_resolver_api_specification.rb
+++ b/test/mri/rubygems/test_gem_resolver_api_specification.rb
@@ -141,5 +141,28 @@ def test_spec
     assert_equal 'a-1', spec.full_name
   end
 
-end
+  def test_spec_jruby_platform
+    spec_fetcher do |fetcher|
+      fetcher.gem 'j', 1 do |spec|
+        spec.platform = 'jruby'
+      end
+    end
 
+    dep_uri = URI(@gem_repo) + 'api/v1/dependencies'
+    set = Gem::Resolver::APISet.new dep_uri
+    data = {
+      :name         => 'j',
+      :number       => '1',
+      :platform     => 'jruby',
+      :dependencies => [],
+    }
+
+    api_spec = Gem::Resolver::APISpecification.new set, data
+
+    spec = api_spec.spec
+
+    assert_kind_of Gem::Specification, spec
+    assert_equal 'j-1-java', spec.full_name
+  end
+
+end
diff --git a/test/mri/rubygems/test_gem_resolver_best_set.rb b/test/mri/rubygems/test_gem_resolver_best_set.rb
index 556f0e8349f..dc6c9b4c440 100644
--- a/test/mri/rubygems/test_gem_resolver_best_set.rb
+++ b/test/mri/rubygems/test_gem_resolver_best_set.rb
@@ -135,4 +135,3 @@ def test_replace_failed_api_set_no_api_set
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_composed_set.rb b/test/mri/rubygems/test_gem_resolver_composed_set.rb
index f1c2da04547..0e745433a98 100644
--- a/test/mri/rubygems/test_gem_resolver_composed_set.rb
+++ b/test/mri/rubygems/test_gem_resolver_composed_set.rb
@@ -43,4 +43,3 @@ def test_remote_equals
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_conflict.rb b/test/mri/rubygems/test_gem_resolver_conflict.rb
index d4b34555708..a078136510f 100644
--- a/test/mri/rubygems/test_gem_resolver_conflict.rb
+++ b/test/mri/rubygems/test_gem_resolver_conflict.rb
@@ -85,4 +85,3 @@ def test_request_path
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_dependency_request.rb b/test/mri/rubygems/test_gem_resolver_dependency_request.rb
index ac8f48a5261..51f0be9dcd1 100644
--- a/test/mri/rubygems/test_gem_resolver_dependency_request.rb
+++ b/test/mri/rubygems/test_gem_resolver_dependency_request.rb
@@ -82,4 +82,3 @@ def test_requirement
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_git_set.rb b/test/mri/rubygems/test_gem_resolver_git_set.rb
index b87a80d44e7..f38859c8b49 100644
--- a/test/mri/rubygems/test_gem_resolver_git_set.rb
+++ b/test/mri/rubygems/test_gem_resolver_git_set.rb
@@ -187,4 +187,3 @@ def test_prefetch_root_dir
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_git_specification.rb b/test/mri/rubygems/test_gem_resolver_git_specification.rb
index 211757eb204..3a9bb6a802d 100644
--- a/test/mri/rubygems/test_gem_resolver_git_specification.rb
+++ b/test/mri/rubygems/test_gem_resolver_git_specification.rb
@@ -111,4 +111,3 @@ def test_install_installed
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_index_set.rb b/test/mri/rubygems/test_gem_resolver_index_set.rb
index 0f18572904c..d9a30d0f586 100644
--- a/test/mri/rubygems/test_gem_resolver_index_set.rb
+++ b/test/mri/rubygems/test_gem_resolver_index_set.rb
@@ -87,4 +87,3 @@ def test_find_all_prerelease
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_index_specification.rb b/test/mri/rubygems/test_gem_resolver_index_specification.rb
index 65658927508..3768dd9bae9 100644
--- a/test/mri/rubygems/test_gem_resolver_index_specification.rb
+++ b/test/mri/rubygems/test_gem_resolver_index_specification.rb
@@ -87,4 +87,3 @@ def test_spec_local
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_installed_specification.rb b/test/mri/rubygems/test_gem_resolver_installed_specification.rb
index 1dfbb054f33..2b54fbc6290 100644
--- a/test/mri/rubygems/test_gem_resolver_installed_specification.rb
+++ b/test/mri/rubygems/test_gem_resolver_installed_specification.rb
@@ -47,4 +47,3 @@ def test_installable_platform_eh
 
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_installer_set.rb b/test/mri/rubygems/test_gem_resolver_installer_set.rb
index e8d82d93b7f..50350e2d3d0 100644
--- a/test/mri/rubygems/test_gem_resolver_installer_set.rb
+++ b/test/mri/rubygems/test_gem_resolver_installer_set.rb
@@ -25,8 +25,8 @@ def test_add_always_install
   end
 
   def test_add_always_install_errors
-    @fetcher = Gem::FakeFetcher.new
-    Gem::RemoteFetcher.fetcher = @fetcher
+    @stub_fetcher = Gem::FakeFetcher.new
+    Gem::RemoteFetcher.fetcher = @stub_fetcher
 
     set = Gem::Resolver::InstallerSet.new :both
 
@@ -197,7 +197,7 @@ def (set.remote_set).prefetch(_)
     def (set.remote_set).prefetch(_)
       raise "called"
     end
-    assert_equal nil, set.prefetch(nil)
+    assert_nil set.prefetch(nil)
   end
 
   def test_prerelease_equals
@@ -255,4 +255,3 @@ def test_remote_equals_remote
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_local_specification.rb b/test/mri/rubygems/test_gem_resolver_local_specification.rb
index d04d1ec8b36..82598f51886 100644
--- a/test/mri/rubygems/test_gem_resolver_local_specification.rb
+++ b/test/mri/rubygems/test_gem_resolver_local_specification.rb
@@ -43,4 +43,3 @@ def test_installable_platform_eh
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_lock_set.rb b/test/mri/rubygems/test_gem_resolver_lock_set.rb
index 969f13fa8b2..d5258477d7c 100644
--- a/test/mri/rubygems/test_gem_resolver_lock_set.rb
+++ b/test/mri/rubygems/test_gem_resolver_lock_set.rb
@@ -61,4 +61,3 @@ def test_prefetch
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_lock_specification.rb b/test/mri/rubygems/test_gem_resolver_lock_specification.rb
index 3105ad65b33..7b9b0ac8f7f 100644
--- a/test/mri/rubygems/test_gem_resolver_lock_specification.rb
+++ b/test/mri/rubygems/test_gem_resolver_lock_specification.rb
@@ -97,4 +97,3 @@ def test_spec_loaded
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_requirement_list.rb b/test/mri/rubygems/test_gem_resolver_requirement_list.rb
index 6361dc32e6b..4cbb9391998 100644
--- a/test/mri/rubygems/test_gem_resolver_requirement_list.rb
+++ b/test/mri/rubygems/test_gem_resolver_requirement_list.rb
@@ -18,4 +18,3 @@ def test_each
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_specification.rb b/test/mri/rubygems/test_gem_resolver_specification.rb
index 50ac7ec3a18..c184cea3527 100644
--- a/test/mri/rubygems/test_gem_resolver_specification.rb
+++ b/test/mri/rubygems/test_gem_resolver_specification.rb
@@ -7,7 +7,7 @@ class TestSpec < Gem::Resolver::Specification
     attr_writer :source
     attr_reader :spec
 
-    def initialize spec
+    def initialize(spec)
       super()
 
       @spec = spec
@@ -62,4 +62,3 @@ def test_source
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_vendor_set.rb b/test/mri/rubygems/test_gem_resolver_vendor_set.rb
index c5b9ad019f8..3fc79fec16e 100644
--- a/test/mri/rubygems/test_gem_resolver_vendor_set.rb
+++ b/test/mri/rubygems/test_gem_resolver_vendor_set.rb
@@ -81,4 +81,3 @@ def test_load_spec
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_resolver_vendor_specification.rb b/test/mri/rubygems/test_gem_resolver_vendor_specification.rb
index 1f9337c3fa5..315ce05539b 100644
--- a/test/mri/rubygems/test_gem_resolver_vendor_specification.rb
+++ b/test/mri/rubygems/test_gem_resolver_vendor_specification.rb
@@ -81,4 +81,3 @@ def test_version
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_security.rb b/test/mri/rubygems/test_gem_security.rb
index 47010e088c6..b5a887abb80 100644
--- a/test/mri/rubygems/test_gem_security.rb
+++ b/test/mri/rubygems/test_gem_security.rb
@@ -1,9 +1,8 @@
 # frozen_string_literal: true
 require 'rubygems/test_case'
 require 'rubygems/security'
-require 'rubygems/fix_openssl_warnings' if RUBY_VERSION < "1.9"
 
-unless defined?(OpenSSL::SSL) then
+unless defined?(OpenSSL::SSL)
   warn 'Skipping Gem::Security tests.  openssl not found.'
 end
 
@@ -309,4 +308,3 @@ def test_class_write_encrypted_cipher
   end
 
 end if defined?(OpenSSL::SSL)
-
diff --git a/test/mri/rubygems/test_gem_security_policy.rb b/test/mri/rubygems/test_gem_security_policy.rb
index 170e296a109..8a1676cd3c3 100644
--- a/test/mri/rubygems/test_gem_security_policy.rb
+++ b/test/mri/rubygems/test_gem_security_policy.rb
@@ -3,7 +3,7 @@
 
 require 'rubygems/test_case'
 
-unless defined?(OpenSSL::SSL) then
+unless defined?(OpenSSL::SSL)
   warn 'Skipping Gem::Security::Policy tests.  openssl not found.'
 end
 
@@ -450,7 +450,7 @@ def test_verify_signatures
 
     @spec.cert_chain = [PUBLIC_CERT.to_s]
 
-    metadata_gz = Gem.gzip @spec.to_yaml
+    metadata_gz = Gem::Util.gzip @spec.to_yaml
 
     package = Gem::Package.new 'nonexistent.gem'
     package.checksums[Gem::Security::DIGEST_NAME] = {}
@@ -473,7 +473,7 @@ def test_verify_signatures_missing
 
     @spec.cert_chain = [PUBLIC_CERT.to_s]
 
-    metadata_gz = Gem.gzip @spec.to_yaml
+    metadata_gz = Gem::Util.gzip @spec.to_yaml
 
     package = Gem::Package.new 'nonexistent.gem'
     package.checksums[Gem::Security::DIGEST_NAME] = {}
@@ -502,7 +502,7 @@ def test_verify_signatures_none
 
     @spec.cert_chain = [PUBLIC_CERT.to_s]
 
-    metadata_gz = Gem.gzip @spec.to_yaml
+    metadata_gz = Gem::Util.gzip @spec.to_yaml
 
     package = Gem::Package.new 'nonexistent.gem'
     package.checksums[Gem::Security::DIGEST_NAME] = {}
@@ -518,17 +518,17 @@ def s.full_name() 'metadata.gz' end
     end
   end
 
-  def digest data
+  def digest(data)
     digester = @digest.new
     digester << data
     digester
   end
 
-  def sign data, key = PRIVATE_KEY
+  def sign(data, key = PRIVATE_KEY)
     key.sign @digest.new, data.digest
   end
 
-  def dummy_signatures key = PRIVATE_KEY
+  def dummy_signatures(key = PRIVATE_KEY)
     data = digest 'hello'
 
     digests    = { Gem::Security::DIGEST_NAME => { 0 => data } }
@@ -538,4 +538,3 @@ def dummy_signatures key = PRIVATE_KEY
   end
 
 end if defined?(OpenSSL::SSL)
-
diff --git a/test/mri/rubygems/test_gem_security_signer.rb b/test/mri/rubygems/test_gem_security_signer.rb
index 79dfea099d4..631afa87c4d 100644
--- a/test/mri/rubygems/test_gem_security_signer.rb
+++ b/test/mri/rubygems/test_gem_security_signer.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: true
 require 'rubygems/test_case'
 
-unless defined?(OpenSSL::SSL) then
+unless defined?(OpenSSL::SSL)
   warn 'Skipping Gem::Security::Signer tests.  openssl not found.'
 end
 
@@ -135,9 +135,11 @@ def test_sign
   def test_sign_expired
     signer = Gem::Security::Signer.new PRIVATE_KEY, [EXPIRED_CERT]
 
-    assert_raises Gem::Security::Exception do
+    e = assert_raises Gem::Security::Exception do
       signer.sign 'hello'
     end
+
+    assert_match "certificate /CN=nobody/DC=example not valid after 1970-01-01 00:00:00 UTC", e.message
   end
 
   def test_sign_expired_auto_update
@@ -214,4 +216,3 @@ def test_sign_no_certs
   end
 
 end if defined?(OpenSSL::SSL)
-
diff --git a/test/mri/rubygems/test_gem_security_trust_dir.rb b/test/mri/rubygems/test_gem_security_trust_dir.rb
index ab02ceb772e..f2b7b006dd5 100644
--- a/test/mri/rubygems/test_gem_security_trust_dir.rb
+++ b/test/mri/rubygems/test_gem_security_trust_dir.rb
@@ -1,7 +1,7 @@
 # frozen_string_literal: true
 require 'rubygems/test_case'
 
-unless defined?(OpenSSL::SSL) then
+unless defined?(OpenSSL::SSL)
   warn 'Skipping Gem::Security::TrustDir tests.  openssl not found.'
 end
 
@@ -98,4 +98,3 @@ def test_verify_wrong_permissions
   end
 
 end if defined?(OpenSSL::SSL)
-
diff --git a/test/mri/rubygems/test_gem_server.rb b/test/mri/rubygems/test_gem_server.rb
index a583bd7b359..8a3e6410aeb 100644
--- a/test/mri/rubygems/test_gem_server.rb
+++ b/test/mri/rubygems/test_gem_server.rb
@@ -127,7 +127,7 @@ def test_latest_specs_gz
     assert_match %r| \d\d:\d\d:\d\d |, @res['date']
     assert_equal 'application/x-gzip', @res['content-type']
     assert_equal [['a', Gem::Version.new(2), Gem::Platform::RUBY]],
-                 Marshal.load(Gem.gunzip(@res.body))
+                 Marshal.load(Gem::Util.gunzip(@res.body))
   end
 
   def test_listen
@@ -177,7 +177,7 @@ def test_prerelease_specs_gz
     assert_match %r| \d\d:\d\d:\d\d |, @res['date']
     assert_equal 'application/x-gzip', @res['content-type']
     assert_equal [['a', v('3.a'), Gem::Platform::RUBY]],
-                 Marshal.load(Gem.gunzip(@res.body))
+                 Marshal.load(Gem::Util.gunzip(@res.body))
   end
 
   def test_quick_gemdirs
@@ -236,7 +236,7 @@ def test_quick_marshal_a_1_gemspec_rz
     assert @res['date']
     assert_equal 'application/x-deflate', @res['content-type']
 
-    spec = Marshal.load Gem.inflate(@res.body)
+    spec = Marshal.load Gem::Util.inflate(@res.body)
     assert_equal 'a', spec.name
     assert_equal Gem::Version.new(1), spec.version
   end
@@ -253,7 +253,7 @@ def test_quick_marshal_a_1_mswin32_gemspec_rz
     assert @res['date']
     assert_equal 'application/x-deflate', @res['content-type']
 
-    spec = Marshal.load Gem.inflate(@res.body)
+    spec = Marshal.load Gem::Util.inflate(@res.body)
     assert_equal 'a', spec.name
     assert_equal Gem::Version.new(1), spec.version
     assert_equal Gem::Platform.local, spec.platform
@@ -269,7 +269,7 @@ def test_quick_marshal_a_3_a_gemspec_rz
     assert @res['date']
     assert_equal 'application/x-deflate', @res['content-type']
 
-    spec = Marshal.load Gem.inflate(@res.body)
+    spec = Marshal.load Gem::Util.inflate(@res.body)
     assert_equal 'a', spec.name
     assert_equal v('3.a'), spec.version
   end
@@ -286,7 +286,7 @@ def test_quick_marshal_a_b_3_a_gemspec_rz
     assert @res['date']
     assert_equal 'application/x-deflate', @res['content-type']
 
-    spec = Marshal.load Gem.inflate(@res.body)
+    spec = Marshal.load Gem::Util.inflate(@res.body)
     assert_equal 'a-b', spec.name
     assert_equal v('3.a'), spec.version
   end
@@ -303,7 +303,7 @@ def test_quick_marshal_a_b_1_3_a_gemspec_rz
     assert @res['date']
     assert_equal 'application/x-deflate', @res['content-type']
 
-    spec = Marshal.load Gem.inflate(@res.body)
+    spec = Marshal.load Gem::Util.inflate(@res.body)
     assert_equal 'a-b-1', spec.name
     assert_equal v('3.a'), spec.version
   end
@@ -377,9 +377,9 @@ def test_xss_homepage_fix_289313
     assert_equal 200, @res.status
     assert_match 'xsshomepagegem 1', @res.body
 
-    # This verifies that the homepage for this spec is not displayed and is set to ".", because it's not a 
+    # This verifies that the homepage for this spec is not displayed and is set to ".", because it's not a
     # valid HTTP/HTTPS URL and could be unsafe in an HTML context.  We would prefer to throw an exception here,
-    # but spec.homepage is currently free form and not currently required to be a URL, this behavior may be 
+    # but spec.homepage is currently free form and not currently required to be a URL, this behavior may be
     # validated in future versions of Gem::Specification.
     #
     # There are two variant we're checking here, one where rdoc is not present, and one where rdoc is present in the same regex:
@@ -432,9 +432,9 @@ def test_invalid_homepage
     assert_equal 200, @res.status
     assert_match 'invalidhomepagegem 1', @res.body
 
-    # This verifies that the homepage for this spec is not displayed and is set to ".", because it's not a 
+    # This verifies that the homepage for this spec is not displayed and is set to ".", because it's not a
     # valid HTTP/HTTPS URL and could be unsafe in an HTML context.  We would prefer to throw an exception here,
-    # but spec.homepage is currently free form and not currently required to be a URL, this behavior may be 
+    # but spec.homepage is currently free form and not currently required to be a URL, this behavior may be
     # validated in future versions of Gem::Specification.
     #
     # There are two variant we're checking here, one where rdoc is not present, and one where rdoc is present in the same regex:
@@ -571,7 +571,7 @@ def test_specs_gz
     assert_equal [['a', Gem::Version.new(1), Gem::Platform::RUBY],
                   ['a', Gem::Version.new(2), Gem::Platform::RUBY],
                   ['a', v('3.a'), Gem::Platform::RUBY]],
-                 Marshal.load(Gem.gunzip(@res.body))
+                 Marshal.load(Gem::Util.gunzip(@res.body))
   end
 
   def test_uri_encode
diff --git a/test/mri/rubygems/test_gem_source.rb b/test/mri/rubygems/test_gem_source.rb
index 8805a9b4045..f8cd031c727 100644
--- a/test/mri/rubygems/test_gem_source.rb
+++ b/test/mri/rubygems/test_gem_source.rb
@@ -36,18 +36,6 @@ def test_initialize_git
     assert_equal repository, source.uri
   end
 
-  def test_api_uri
-    assert_equal @source.api_uri, @source.uri
-  end
-
-  def test_api_uri_resolved_from_remote_fetcher
-    uri = URI.parse "http://gem.example/foo"
-    @fetcher.api_endpoints[uri] = URI.parse "http://api.blah"
-
-    src = Gem::Source.new uri
-    assert_equal URI.parse("http://api.blah"), src.api_uri
-  end
-
   def test_cache_dir_escapes_windows_paths
     uri = URI.parse("file:///C:/WINDOWS/Temp/gem_repo")
     root = Gem.spec_cache_dir
@@ -248,4 +236,3 @@ def test_update_cache_eh_home_nonexistent
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_source_fetch_problem.rb b/test/mri/rubygems/test_gem_source_fetch_problem.rb
index 4a245f25df7..f3b57e83844 100644
--- a/test/mri/rubygems/test_gem_source_fetch_problem.rb
+++ b/test/mri/rubygems/test_gem_source_fetch_problem.rb
@@ -25,4 +25,3 @@ def test_password_redacted
     refute_match sf.wordy, 'secret'
   end
 end
-
diff --git a/test/mri/rubygems/test_gem_source_git.rb b/test/mri/rubygems/test_gem_source_git.rb
index 8f5d3ee7457..586e71bae6a 100644
--- a/test/mri/rubygems/test_gem_source_git.rb
+++ b/test/mri/rubygems/test_gem_source_git.rb
@@ -306,4 +306,3 @@ def test_uri_hash
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_source_installed.rb b/test/mri/rubygems/test_gem_source_installed.rb
index 6c7974831fd..b469f842fc5 100644
--- a/test/mri/rubygems/test_gem_source_installed.rb
+++ b/test/mri/rubygems/test_gem_source_installed.rb
@@ -34,4 +34,3 @@ def test_spaceship
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_source_lock.rb b/test/mri/rubygems/test_gem_source_lock.rb
index 6bd4002b6c9..6edfb00e1a3 100644
--- a/test/mri/rubygems/test_gem_source_lock.rb
+++ b/test/mri/rubygems/test_gem_source_lock.rb
@@ -112,4 +112,3 @@ def test_uri
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_source_vendor.rb b/test/mri/rubygems/test_gem_source_vendor.rb
index 01b20bdd51f..3082bb7e685 100644
--- a/test/mri/rubygems/test_gem_source_vendor.rb
+++ b/test/mri/rubygems/test_gem_source_vendor.rb
@@ -29,4 +29,3 @@ def test_spaceship
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_spec_fetcher.rb b/test/mri/rubygems/test_gem_spec_fetcher.rb
index 558869fe993..99862ce8719 100644
--- a/test/mri/rubygems/test_gem_spec_fetcher.rb
+++ b/test/mri/rubygems/test_gem_spec_fetcher.rb
@@ -328,4 +328,3 @@ def test_available_specs_with_bad_source
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_specification.rb b/test/mri/rubygems/test_gem_specification.rb
index 9d89ecca690..d2ecbf44349 100644
--- a/test/mri/rubygems/test_gem_specification.rb
+++ b/test/mri/rubygems/test_gem_specification.rb
@@ -9,7 +9,7 @@
 
 class TestGemSpecification < Gem::TestCase
 
-  LEGACY_YAML_SPEC = <<-EOF
+  LEGACY_YAML_SPEC = <<-EOF.freeze
 --- !ruby/object:Gem::Specification
 rubygems_version: "1.0"
 name: keyedlist
@@ -28,7 +28,7 @@ class TestGemSpecification < Gem::TestCase
 has_rdoc: true
   EOF
 
-  LEGACY_RUBY_SPEC = <<-EOF
+  LEGACY_RUBY_SPEC = <<-EOF.freeze
 Gem::Specification.new do |s|
   s.name = %q{keyedlist}
   s.version = %q{0.4.0}
@@ -48,7 +48,6 @@ def make_spec_c1
       s.extensions << 'ext/a/extconf.rb'
       s.test_file = 'test/suite.rb'
       s.requirements << 'A working computer'
-      s.rubyforge_project = 'example'
       s.license = 'MIT'
 
       s.add_dependency 'rake', '> 0.4'
@@ -80,7 +79,6 @@ def setup
       s.executable = 'exec'
       s.test_file = 'test/suite.rb'
       s.requirements << 'A working computer'
-      s.rubyforge_project = 'example'
       s.license = 'MIT'
 
       s.mark_version
@@ -101,14 +99,14 @@ def setup
   end
 
   def test_self_find_active_stub_by_path
-    spec = new_spec('a', '1', nil, 'lib/foo.rb')
+    spec = util_spec('a', '1', nil, 'lib/foo.rb')
     spec.activated = true
 
     # There used to be a bug (introduced in a9c1aaf) when Gem::Specification
     # objects are present in the @stubs collection. This test verifies that
     # this scenario works correctly.
     Gem::Specification.all = [spec]
-    Gem::Specification.find_active_stub_by_path('foo')
+    assert_equal spec, Gem::Specification.find_active_stub_by_path('foo')
   end
 
   def test_self_activate
@@ -119,11 +117,11 @@ def test_self_activate
 
   def test_self_activate_ambiguous_direct
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec("b", "1", { "c" => ">= 1" }, "lib/d.rb")
-      b2 = new_spec("b", "2", { "c" => ">= 2" }, "lib/d.rb")
-      c1 = new_spec "c", "1"
-      c2 = new_spec "c", "2"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec("b", "1", { "c" => ">= 1" }, "lib/d.rb")
+      b2 = util_spec("b", "2", { "c" => ">= 2" }, "lib/d.rb")
+      c1 = util_spec "c", "1"
+      c2 = util_spec "c", "2"
 
       Gem::Specification.reset
       install_specs c1, c2, b1, b2, a1
@@ -148,10 +146,10 @@ def test_find_in_unresolved_tree_is_not_exponentiental
           deps = Hash[((pkgi + 1)..num_of_pkg).map { |deppkgi|
             ["pkg#{deppkgi}", ">= 0"]
           }]
-          new_spec "pkg#{pkgi}", pkg_version.to_s, deps
+          util_spec "pkg#{pkgi}", pkg_version.to_s, deps
         end
       end
-      base = new_spec "pkg_base", "1", {"pkg0" => ">= 0"}
+      base = util_spec "pkg_base", "1", {"pkg0" => ">= 0"}
 
       Gem::Specification.reset
       install_specs(*packages.flatten.reverse)
@@ -167,11 +165,11 @@ def test_find_in_unresolved_tree_is_not_exponentiental
 
   def test_self_activate_ambiguous_indirect
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 1"
-      b2 = new_spec "b", "2", "c" => ">= 2"
-      c1 = new_spec "c", "1", nil, "lib/d.rb"
-      c2 = new_spec "c", "2", nil, "lib/d.rb"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 1"
+      b2 = util_spec "b", "2", "c" => ">= 2"
+      c1 = util_spec "c", "1", nil, "lib/d.rb"
+      c2 = util_spec "c", "2", nil, "lib/d.rb"
 
       install_specs c1, c2, b1, b2, a1
 
@@ -188,12 +186,12 @@ def test_self_activate_ambiguous_indirect
 
   def test_self_activate_ambiguous_indirect_conflict
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      a2 = new_spec "a", "2", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 1"
-      b2 = new_spec "b", "2", "c" => ">= 2"
-      c1 = new_spec "c", "1", nil, "lib/d.rb"
-      c2 = new_spec("c", "2", { "a" => "1" }, "lib/d.rb") # conflicts with a-2
+      a1 = util_spec "a", "1", "b" => "> 0"
+      a2 = util_spec "a", "2", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 1"
+      b2 = util_spec "b", "2", "c" => ">= 2"
+      c1 = util_spec "c", "1", nil, "lib/d.rb"
+      c2 = util_spec("c", "2", { "a" => "1" }, "lib/d.rb") # conflicts with a-2
 
       install_specs c1, b1, a1, a2, c2, b2
 
@@ -210,12 +208,12 @@ def test_self_activate_ambiguous_indirect_conflict
 
   def test_self_activate_ambiguous_unrelated
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 1"
-      b2 = new_spec "b", "2", "c" => ">= 2"
-      c1 = new_spec "c", "1"
-      c2 = new_spec "c", "2"
-      d1 = new_spec "d", "1", nil, "lib/d.rb"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 1"
+      b2 = util_spec "b", "2", "c" => ">= 2"
+      c1 = util_spec "c", "1"
+      c2 = util_spec "c", "2"
+      d1 = util_spec "d", "1", nil, "lib/d.rb"
 
       install_specs d1, c1, c2, b1, b2, a1
 
@@ -232,11 +230,11 @@ def test_self_activate_ambiguous_unrelated
 
   def test_require_should_prefer_latest_gem_level1
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 0" # unresolved
-      b2 = new_spec "b", "2", "c" => ">= 0"
-      c1 = new_spec "c", "1", nil, "lib/c.rb"  # 1st level
-      c2 = new_spec "c", "2", nil, "lib/c.rb"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 0" # unresolved
+      b2 = util_spec "b", "2", "c" => ">= 0"
+      c1 = util_spec "c", "1", nil, "lib/c.rb"  # 1st level
+      c2 = util_spec "c", "2", nil, "lib/c.rb"
 
       install_specs c1, c2, b1, b2, a1
 
@@ -250,13 +248,13 @@ def test_require_should_prefer_latest_gem_level1
 
   def test_require_should_prefer_latest_gem_level2
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 0" # unresolved
-      b2 = new_spec "b", "2", "c" => ">= 0"
-      c1 = new_spec "c", "1", "d" => ">= 0"  # 1st level
-      c2 = new_spec "c", "2", "d" => ">= 0"
-      d1 = new_spec "d", "1", nil, "lib/d.rb" # 2nd level
-      d2 = new_spec "d", "2", nil, "lib/d.rb"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 0" # unresolved
+      b2 = util_spec "b", "2", "c" => ">= 0"
+      c1 = util_spec "c", "1", "d" => ">= 0"  # 1st level
+      c2 = util_spec "c", "2", "d" => ">= 0"
+      d1 = util_spec "d", "1", nil, "lib/d.rb" # 2nd level
+      d2 = util_spec "d", "2", nil, "lib/d.rb"
 
       install_specs d1, d2, c1, c2, b1, b2, a1
 
@@ -270,14 +268,14 @@ def test_require_should_prefer_latest_gem_level2
 
   def test_require_finds_in_2nd_level_indirect
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 0" # unresolved
-      b2 = new_spec "b", "2", "c" => ">= 0"
-      c1 = new_spec "c", "1", "d" => "<= 2" # 1st level
-      c2 = new_spec "c", "2", "d" => "<= 2"
-      d1 = new_spec "d", "1", nil, "lib/d.rb" # 2nd level
-      d2 = new_spec "d", "2", nil, "lib/d.rb"
-      d3 = new_spec "d", "3", nil, "lib/d.rb"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 0" # unresolved
+      b2 = util_spec "b", "2", "c" => ">= 0"
+      c1 = util_spec "c", "1", "d" => "<= 2" # 1st level
+      c2 = util_spec "c", "2", "d" => "<= 2"
+      d1 = util_spec "d", "1", nil, "lib/d.rb" # 2nd level
+      d2 = util_spec "d", "2", nil, "lib/d.rb"
+      d3 = util_spec "d", "3", nil, "lib/d.rb"
 
       install_specs d1, d2, d3, c1, c2, b1, b2, a1
 
@@ -291,15 +289,15 @@ def test_require_finds_in_2nd_level_indirect
 
   def test_require_should_prefer_reachable_gems
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 0" # unresolved
-      b2 = new_spec "b", "2", "c" => ">= 0"
-      c1 = new_spec "c", "1", "d" => "<= 2" # 1st level
-      c2 = new_spec "c", "2", "d" => "<= 2"
-      d1 = new_spec "d", "1", nil, "lib/d.rb" # 2nd level
-      d2 = new_spec "d", "2", nil, "lib/d.rb"
-      d3 = new_spec "d", "3", nil, "lib/d.rb"
-      e  = new_spec "anti_d", "1", nil, "lib/d.rb"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 0" # unresolved
+      b2 = util_spec "b", "2", "c" => ">= 0"
+      c1 = util_spec "c", "1", "d" => "<= 2" # 1st level
+      c2 = util_spec "c", "2", "d" => "<= 2"
+      d1 = util_spec "d", "1", nil, "lib/d.rb" # 2nd level
+      d2 = util_spec "d", "2", nil, "lib/d.rb"
+      d3 = util_spec "d", "3", nil, "lib/d.rb"
+      e  = util_spec "anti_d", "1", nil, "lib/d.rb"
 
       install_specs d1, d2, d3, e, c1, c2, b1, b2, a1
 
@@ -313,14 +311,14 @@ def test_require_should_prefer_reachable_gems
 
   def test_require_should_not_conflict
     save_loaded_features do
-      base = new_spec "0", "1", "A" => ">= 1"
-      a1 = new_spec "A", "1", {"c" => ">= 2", "b" => "> 0"}, "lib/a.rb"
-      a2 = new_spec "A", "2", {"c" => ">= 2", "b" => "> 0"}, "lib/a.rb"
-      b1 = new_spec "b", "1", {"c" => "= 1"}, "lib/d.rb"
-      b2 = new_spec "b", "2", {"c" => "= 2"}, "lib/d.rb"
-      c1 = new_spec "c", "1", {}, "lib/c.rb"
-      c2 = new_spec "c", "2", {}, "lib/c.rb"
-      c3 = new_spec "c", "3", {}, "lib/c.rb"
+      base = util_spec "0", "1", "A" => ">= 1"
+      a1 = util_spec "A", "1", {"c" => ">= 2", "b" => "> 0"}, "lib/a.rb"
+      a2 = util_spec "A", "2", {"c" => ">= 2", "b" => "> 0"}, "lib/a.rb"
+      b1 = util_spec "b", "1", {"c" => "= 1"}, "lib/d.rb"
+      b2 = util_spec "b", "2", {"c" => "= 2"}, "lib/d.rb"
+      c1 = util_spec "c", "1", {}, "lib/c.rb"
+      c2 = util_spec "c", "2", {}, "lib/c.rb"
+      c3 = util_spec "c", "3", {}, "lib/c.rb"
 
       install_specs c1, c2, c3, b1, b2, a1, a2, base
 
@@ -337,15 +335,15 @@ def test_require_should_not_conflict
 
   def test_inner_clonflict_in_indirect_gems
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 1" # unresolved
-      b2 = new_spec "b", "2", "c" => ">= 1", "d" => "< 3"
-      c1 = new_spec "c", "1", "d" => "<= 2" # 1st level
-      c2 = new_spec "c", "2", "d" => "<= 2"
-      c3 = new_spec "c", "3", "d" => "<= 3"
-      d1 = new_spec "d", "1", nil, "lib/d.rb" # 2nd level
-      d2 = new_spec "d", "2", nil, "lib/d.rb"
-      d3 = new_spec "d", "3", nil, "lib/d.rb"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 1" # unresolved
+      b2 = util_spec "b", "2", "c" => ">= 1", "d" => "< 3"
+      c1 = util_spec "c", "1", "d" => "<= 2" # 1st level
+      c2 = util_spec "c", "2", "d" => "<= 2"
+      c3 = util_spec "c", "3", "d" => "<= 3"
+      d1 = util_spec "d", "1", nil, "lib/d.rb" # 2nd level
+      d2 = util_spec "d", "2", nil, "lib/d.rb"
+      d3 = util_spec "d", "3", nil, "lib/d.rb"
 
       install_specs d1, d2, d3, c1, c2, c3, b1, b2, a1
 
@@ -359,15 +357,15 @@ def test_inner_clonflict_in_indirect_gems
 
   def test_inner_clonflict_in_indirect_gems_reversed
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      b1 = new_spec "b", "1", "xc" => ">= 1" # unresolved
-      b2 = new_spec "b", "2", "xc" => ">= 1", "d" => "< 3"
-      c1 = new_spec "xc", "1", "d" => "<= 3" # 1st level
-      c2 = new_spec "xc", "2", "d" => "<= 2"
-      c3 = new_spec "xc", "3", "d" => "<= 3"
-      d1 = new_spec "d", "1", nil, "lib/d.rb" # 2nd level
-      d2 = new_spec "d", "2", nil, "lib/d.rb"
-      d3 = new_spec "d", "3", nil, "lib/d.rb"
+      a1 = util_spec "a", "1", "b" => "> 0"
+      b1 = util_spec "b", "1", "xc" => ">= 1" # unresolved
+      b2 = util_spec "b", "2", "xc" => ">= 1", "d" => "< 3"
+      c1 = util_spec "xc", "1", "d" => "<= 3" # 1st level
+      c2 = util_spec "xc", "2", "d" => "<= 2"
+      c3 = util_spec "xc", "3", "d" => "<= 3"
+      d1 = util_spec "d", "1", nil, "lib/d.rb" # 2nd level
+      d2 = util_spec "d", "2", nil, "lib/d.rb"
+      d3 = util_spec "d", "3", nil, "lib/d.rb"
 
       install_specs d1, d2, d3, c1, c2, c3, b1, b2, a1
 
@@ -387,8 +385,8 @@ def test_inner_clonflict_in_indirect_gems_reversed
 
   def test_self_activate_checks_dependencies
     a  = util_spec 'a', '1.0'
-            a.add_dependency 'c', '= 1.0'
-            a.add_dependency 'b', '~> 1.0'
+    a.add_dependency 'c', '= 1.0'
+    a.add_dependency 'b', '~> 1.0'
 
     b1 = util_spec 'b', '1.0'
     b2 = util_spec 'b', '2.0'
@@ -493,9 +491,9 @@ def test_self_activate_prerelease
   end
 
   def test_self_activate_via_require
-    a1 = new_spec "a", "1", "b" => "= 1"
-    b1 = new_spec "b", "1", nil, "lib/b/c.rb"
-    b2 = new_spec "b", "2", nil, "lib/b/c.rb"
+    a1 = util_spec "a", "1", "b" => "= 1"
+    b1 = util_spec "b", "1", nil, "lib/b/c.rb"
+    b2 = util_spec "b", "2", nil, "lib/b/c.rb"
 
     install_specs b1, b2, a1
 
@@ -509,13 +507,13 @@ def test_self_activate_via_require
 
   def test_self_activate_via_require_wtf
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0", "d" => "> 0"    # this
-      b1 = new_spec "b", "1", { "c" => ">= 1" }, "lib/b.rb"
-      b2 = new_spec "b", "2", { "c" => ">= 2" }, "lib/b.rb" # this
-      c1 = new_spec "c", "1"
-      c2 = new_spec "c", "2"                                # this
-      d1 = new_spec "d", "1", { "c" => "< 2" },  "lib/d.rb"
-      d2 = new_spec "d", "2", { "c" => "< 2" },  "lib/d.rb" # this
+      a1 = util_spec "a", "1", "b" => "> 0", "d" => "> 0"    # this
+      b1 = util_spec "b", "1", { "c" => ">= 1" }, "lib/b.rb"
+      b2 = util_spec "b", "2", { "c" => ">= 2" }, "lib/b.rb" # this
+      c1 = util_spec "c", "1"
+      c2 = util_spec "c", "2"                                # this
+      d1 = util_spec "d", "1", { "c" => "< 2" },  "lib/d.rb"
+      d2 = util_spec "d", "2", { "c" => "< 2" },  "lib/d.rb" # this
 
       install_specs c1, c2, b1, b2, d1, d2, a1
 
@@ -538,11 +536,11 @@ def test_self_activate_via_require_wtf
   end
 
   def test_self_activate_deep_unambiguous
-    a1 = new_spec "a", "1", "b" => "= 1"
-    b1 = new_spec "b", "1", "c" => "= 1"
-    b2 = new_spec "b", "2", "c" => "= 2"
-    c1 = new_spec "c", "1"
-    c2 = new_spec "c", "2"
+    a1 = util_spec "a", "1", "b" => "= 1"
+    b1 = util_spec "b", "1", "c" => "= 1"
+    b2 = util_spec "b", "2", "c" => "= 2"
+    c1 = util_spec "c", "1"
+    c2 = util_spec "c", "2"
 
     install_specs c1, c2, b1, b2, a1
 
@@ -668,7 +666,7 @@ def test_self_activate_conflict
   end
 
   def test_self_all_equals
-    a = new_spec "foo", "1", nil, "lib/foo.rb"
+    a = util_spec "foo", "1", nil, "lib/foo.rb"
 
     install_specs a
     Gem::Specification.all = [a]
@@ -701,7 +699,6 @@ def test_self_attribute_names
       required_ruby_version
       required_rubygems_version
       requirements
-      rubyforge_project
       rubygems_version
       signing_key
       specification_version
@@ -721,11 +718,11 @@ def test_self__load_future
     spec.version = '1'
     spec.specification_version = @current_version + 1
 
-    new_spec = Marshal.load Marshal.dump(spec)
+    load_spec = Marshal.load Marshal.dump(spec)
 
-    assert_equal 'a', new_spec.name
-    assert_equal Gem::Version.new(1), new_spec.version
-    assert_equal @current_version, new_spec.specification_version
+    assert_equal 'a', load_spec.name
+    assert_equal Gem::Version.new(1), load_spec.version
+    assert_equal @current_version, load_spec.specification_version
   end
 
   def test_self_from_yaml
@@ -743,12 +740,12 @@ def test_self_from_yaml_syck_date_bug
     yaml = @a1.to_yaml
     yaml.sub!(/^date:.*/, "date: 2011-04-26 00:00:00.000000000Z")
 
-    new_spec = with_syck do
+    spec = with_syck do
       Gem::Specification.from_yaml yaml
     end
 
     assert_kind_of Time, @a1.date
-    assert_kind_of Time, new_spec.date
+    assert_kind_of Time, spec.date
   end
 
   def test_self_from_yaml_syck_default_key_bug
@@ -778,14 +775,14 @@ def test_self_from_yaml_syck_default_key_bug
 bindir:
     YAML
 
-    new_spec = with_syck do
+    spec = with_syck do
       Gem::Specification.from_yaml yaml
     end
 
-    op = new_spec.dependencies.first.requirement.requirements.first.first
+    op = spec.dependencies.first.requirement.requirements.first.first
     refute_kind_of YAML::Syck::DefaultKey, op
 
-    refute_match %r%DefaultKey%, new_spec.to_ruby
+    refute_match %r%DefaultKey%, spec.to_ruby
   end
 
   def test_self_from_yaml_cleans_up_defaultkey
@@ -814,12 +811,12 @@ def test_self_from_yaml_cleans_up_defaultkey
 bindir:
     YAML
 
-    new_spec = Gem::Specification.from_yaml yaml
+    spec = Gem::Specification.from_yaml yaml
 
-    op = new_spec.dependencies.first.requirement.requirements.first.first
+    op = spec.dependencies.first.requirement.requirements.first.first
     refute_kind_of YAML::Syck::DefaultKey, op
 
-    refute_match %r%DefaultKey%, new_spec.to_ruby
+    refute_match %r%DefaultKey%, spec.to_ruby
   end
 
   def test_self_from_yaml_cleans_up_defaultkey_from_newer_192
@@ -848,12 +845,12 @@ def test_self_from_yaml_cleans_up_defaultkey_from_newer_192
 bindir:
     YAML
 
-    new_spec = Gem::Specification.from_yaml yaml
+    spec = Gem::Specification.from_yaml yaml
 
-    op = new_spec.dependencies.first.requirement.requirements.first.first
+    op = spec.dependencies.first.requirement.requirements.first.first
     refute_kind_of YAML::Syck::DefaultKey, op
 
-    refute_match %r%DefaultKey%, new_spec.to_ruby
+    refute_match %r%DefaultKey%, spec.to_ruby
   end
 
   def test_self_from_yaml_cleans_up_Date_objects
@@ -871,7 +868,6 @@ def test_self_from_yaml_cleans_up_Date_objects
 author: Austin Ziegler
 email: diff-lcs@halostatue.ca
 homepage: http://rubyforge.org/projects/ruwiki/
-rubyforge_project: ruwiki
 description: "Test"
 bindir: bin
 has_rdoc: true
@@ -903,9 +899,9 @@ def test_self_from_yaml_cleans_up_Date_objects
 dependencies: []
     YAML
 
-    new_spec = Gem::Specification.from_yaml yaml
+    spec = Gem::Specification.from_yaml yaml
 
-    assert_kind_of Time, new_spec.date
+    assert_kind_of Time, spec.date
   end
 
   def test_self_load
@@ -948,6 +944,9 @@ def test_self_load_tainted
     @a2.files.clear
 
     assert_equal @a2, spec
+
+  ensure
+    $SAFE = 0
   end
 
   def test_self_load_escape_curly
@@ -1007,7 +1006,6 @@ def test_self_load_escape_quote
     assert_equal @a2, spec
   end
 
-  if defined?(Encoding)
   def test_self_load_utf8_with_ascii_encoding
     int_enc = Encoding.default_internal
     silence_warnings { Encoding.default_internal = 'US-ASCII' }
@@ -1028,7 +1026,6 @@ def test_self_load_utf8_with_ascii_encoding
   ensure
     silence_warnings { Encoding.default_internal = int_enc }
   end
-  end
 
   def test_self_load_legacy_ruby
     spec = Gem::Deprecate.skip_during do
@@ -1125,24 +1122,97 @@ def test_self_remove_spec_removed
     refute_includes Gem::Specification.stubs.map { |s| s.full_name }, 'a-1'
   end
 
-  DATA_PATH = File.expand_path "../data", __FILE__
+  def test_self_stubs
+    Gem.loaded_specs.clear
+    Gem::Specification.class_variable_set(:@@stubs, nil)
 
-  def test_handles_private_null_type
-    path = File.join DATA_PATH, "null-type.gemspec.rz"
+    dir_standard_specs = File.join Gem.dir, 'specifications'
+    dir_default_specs = Gem::BasicSpecification.default_specifications_dir
+
+    # Create gemspecs in three locations used in stubs
+    loaded_spec = Gem::Specification.new 'a', '3'
+    Gem.loaded_specs['a'] = loaded_spec
+    save_gemspec 'a', '2', dir_default_specs
+    save_gemspec 'a', '1', dir_standard_specs
+
+    full_names = ['a-3', 'a-2', 'a-1']
+    assert_equal full_names, Gem::Specification.stubs.map { |s| s.full_name }
+
+    Gem.loaded_specs.delete 'a'
+    Gem::Specification.class_variable_set(:@@stubs, nil)
+  end
+
+  def test_self_stubs_for
+    Gem.loaded_specs.clear
+    Gem::Specification.class_variable_set(:@@stubs, nil)
+
+    dir_standard_specs = File.join Gem.dir, 'specifications'
+    dir_default_specs = Gem::BasicSpecification.default_specifications_dir
+
+    # Create gemspecs in three locations used in stubs
+    loaded_spec = Gem::Specification.new 'a', '3'
+    Gem.loaded_specs['a'] = loaded_spec
+    save_gemspec 'a', '2', dir_default_specs
+    save_gemspec 'a', '1', dir_standard_specs
+
+    full_names = ['a-3', 'a-2', 'a-1']
+
+    full_names = Gem::Specification.stubs_for('a').map { |s| s.full_name }
+    assert_equal full_names, Gem::Specification.stubs_for('a').map { |s| s.full_name }
+    assert_equal 1, Gem::Specification.class_variable_get(:@@stubs_by_name).length
+
+    Gem.loaded_specs.delete 'a'
+    Gem::Specification.class_variable_set(:@@stubs, nil)
+  end
+
+  def test_self_stubs_for_mult_platforms
+    # gems for two different platforms are installed with --user-install
+    # the correct one should be returned in the array
+
+    orig_platform = Gem.platforms.dup
+
+    # create user spec
+    user_spec_dir = File.join Gem.user_dir, 'specifications'
+    FileUtils.mkdir_p(user_spec_dir)  unless Dir.exist? user_spec_dir
+    # dirs doesn't include user ?
+    Gem::Specification.dirs << user_spec_dir
+
+    gem = 'mingw'
+    v   = '1.1.1'
+    platforms = ['x86-mingw32', 'x64-mingw32']
 
-    data = Marshal.load Gem.inflate(Gem.read_binary(path))
+    #create specs
+    platforms.each do |plat|
+      spec = Gem::Specification.new(gem, v) { |s| s.platform = plat }
+      File.open File.join(user_spec_dir, "#{gem}-#{v}-#{plat}.gemspec"), 'w' do |io|
+        io.write spec.to_ruby
+      end
+    end
+
+    platforms.each do |plat|
+      cur_plat = Gem::Platform.new plat
+      Gem.platforms = ['ruby', cur_plat]
+
+      Gem::Specification.class_variable_set :@@stubs, nil
+      Gem::Specification.stubs if plat == platforms.last # test loading via stubs
+      t = Gem::Specification.stubs_for 'mingw'
+
+      assert_equal 1, t.length
+      assert_equal cur_plat, t.first.platform
+    end
 
-    assert_equal nil, data.rubyforge_project
+    Gem.platforms = orig_platform
   end
 
-  def test_emits_zulu_timestamps_properly
-    t = Time.utc(2012, 3, 12)
-    @a2.date = t
+  DATA_PATH = File.expand_path "../data", __FILE__
+
+  def test_handles_private_null_type
+    path = File.join DATA_PATH, "null-type.gemspec.rz"
 
-    yaml = with_psych { @a2.to_yaml }
+    data = Marshal.load Gem::Util.inflate(Gem.read_binary(path))
 
-    assert_match %r!date: 2012-03-12 00:00:00\.000000000 Z!, yaml
-  end if RUBY_VERSION =~ /1\.9\.2/
+    assert_nil data.signing_key
+  end
 
   def test_initialize
     spec = Gem::Specification.new do |s|
@@ -1153,7 +1223,7 @@ def test_initialize
     assert_equal "blah", spec.name
     assert_equal "1.3.5", spec.version.to_s
     assert_equal Gem::Platform::RUBY, spec.platform
-    assert_equal nil, spec.summary
+    assert_nil       spec.summary
     assert_equal [], spec.files
 
     assert_equal [], spec.test_files
@@ -1201,57 +1271,57 @@ def test_initialize_copy
       s.add_dependency 'some_gem'
     end
 
-    new_spec = spec.dup
+    dup_spec = spec.dup
 
     assert_equal "blah", spec.name
-    assert_same  spec.name, new_spec.name
+    assert_same  spec.name, dup_spec.name
 
     assert_equal "1.3.5", spec.version.to_s
-    assert_same spec.version, new_spec.version
+    assert_same spec.version, dup_spec.version
 
     assert_equal Gem::Platform::RUBY, spec.platform
-    assert_same spec.platform, new_spec.platform
+    assert_same spec.platform, dup_spec.platform
 
     assert_equal 'summary', spec.summary
-    assert_same spec.summary, new_spec.summary
+    assert_same spec.summary, dup_spec.summary
 
     assert_equal %w[README.txt bin/exec ext/extconf.rb lib/file.rb
                     test/file.rb].sort,
                  spec.files
-    refute_same spec.files, new_spec.files, 'files'
+    refute_same spec.files, dup_spec.files, 'files'
 
     assert_equal %w[test/file.rb], spec.test_files
-    refute_same spec.test_files, new_spec.test_files, 'test_files'
+    refute_same spec.test_files, dup_spec.test_files, 'test_files'
 
     assert_equal %w[--foo], spec.rdoc_options
-    refute_same spec.rdoc_options, new_spec.rdoc_options, 'rdoc_options'
+    refute_same spec.rdoc_options, dup_spec.rdoc_options, 'rdoc_options'
 
     assert_equal %w[README.txt], spec.extra_rdoc_files
-    refute_same spec.extra_rdoc_files, new_spec.extra_rdoc_files,
+    refute_same spec.extra_rdoc_files, dup_spec.extra_rdoc_files,
                 'extra_rdoc_files'
 
     assert_equal %w[exec], spec.executables
-    refute_same spec.executables, new_spec.executables, 'executables'
+    refute_same spec.executables, dup_spec.executables, 'executables'
 
     assert_equal %w[ext/extconf.rb], spec.extensions
-    refute_same spec.extensions, new_spec.extensions, 'extensions'
+    refute_same spec.extensions, dup_spec.extensions, 'extensions'
 
     assert_equal %w[requirement], spec.requirements
-    refute_same spec.requirements, new_spec.requirements, 'requirements'
+    refute_same spec.requirements, dup_spec.requirements, 'requirements'
 
     assert_equal [Gem::Dependency.new('some_gem', Gem::Requirement.default)],
                  spec.dependencies
-    refute_same spec.dependencies, new_spec.dependencies, 'dependencies'
+    refute_same spec.dependencies, dup_spec.dependencies, 'dependencies'
 
     assert_equal 'bin', spec.bindir
-    assert_same spec.bindir, new_spec.bindir
+    assert_same spec.bindir, dup_spec.bindir
 
     assert_equal '>= 0', spec.required_ruby_version.to_s
-    assert_same spec.required_ruby_version, new_spec.required_ruby_version
+    assert_same spec.required_ruby_version, dup_spec.required_ruby_version
 
     assert_equal '>= 0', spec.required_rubygems_version.to_s
     assert_same spec.required_rubygems_version,
-                new_spec.required_rubygems_version
+                dup_spec.required_rubygems_version
   end
 
   def test_initialize_copy_broken
@@ -1271,6 +1341,16 @@ def test_initialize_copy_broken
     assert_equal '/path/to/file', e.file_path
   end
 
+  def test_initialize_prerelease_version_before_name
+    spec = Gem::Specification.new do |s|
+      s.version = '1.0.0.dev'
+      s.name = 'a'
+    end
+
+    assert_equal "a", spec.name
+    assert_equal "1.0.0.dev", spec.version.to_s
+  end
+
   def test__dump
     @a2.platform = Gem::Platform.local
     @a2.instance_variable_set :@original_platform, 'old_platform'
@@ -1330,31 +1410,31 @@ def test_bindir_equals_nil
     @a2.bindir = nil
     @a2.executable = 'app'
 
-    assert_equal nil, @a2.bindir
+    assert_nil                             @a2.bindir
     assert_equal %w[app lib/code.rb].sort, @a2.files
   end
 
   def test_extensions_equals_nil
     @a2.instance_variable_set(:@extensions, nil)
-    assert_equal nil, @a2.instance_variable_get(:@extensions)
+    assert_nil                    @a2.instance_variable_get(:@extensions)
     assert_equal %w[lib/code.rb], @a2.files
   end
 
   def test_test_files_equals_nil
     @a2.instance_variable_set(:@test_files, nil)
-    assert_equal nil, @a2.instance_variable_get(:@test_files)
+    assert_nil                    @a2.instance_variable_get(:@test_files)
     assert_equal %w[lib/code.rb], @a2.files
   end
 
   def test_executables_equals_nil
     @a2.instance_variable_set(:@executables, nil)
-    assert_equal nil, @a2.instance_variable_get(:@executables)
+    assert_nil                    @a2.instance_variable_get(:@executables)
     assert_equal %w[lib/code.rb], @a2.files
   end
 
   def test_extra_rdoc_files_equals_nil
     @a2.instance_variable_set(:@extra_rdoc_files, nil)
-    assert_equal nil, @a2.instance_variable_get(:@extra_rdoc_files)
+    assert_nil                    @a2.instance_variable_get(:@extra_rdoc_files)
     assert_equal %w[lib/code.rb], @a2.files
   end
 
@@ -1487,7 +1567,7 @@ def test_build_extensions_extensions_dir_unwritable
     @ext.build_extensions
     refute_path_exists @ext.extension_dir
   ensure
-    unless ($DEBUG or win_platform? or Process.uid.zero?) then
+    unless ($DEBUG or win_platform? or Process.uid.zero?)
       FileUtils.chmod 0755, File.join(@ext.base_dir, 'extensions')
       FileUtils.chmod 0755, @ext.base_dir
     end
@@ -1638,6 +1718,14 @@ def test_date_tolerates_hour_sec_and_timezone
     assert_equal Time.utc(2012,01,12,0,0,0), @a1.date
   end
 
+  def test_date_use_env_source_date_epoch
+    epoch = ENV["SOURCE_DATE_EPOCH"]
+    ENV["SOURCE_DATE_EPOCH"] = "123456789"
+    assert_equal Time.utc(1973,11,29,0,0,0), @a1.date
+  ensure
+    ENV["SOURCE_DATE_EPOCH"] = epoch
+  end
+
   def test_dependencies
     util_setup_deps
     assert_equal [@bonobo, @monkey], @gem.dependencies
@@ -1682,8 +1770,8 @@ def test_description
   end
 
   def test_eql_eh
-    g1 = new_spec 'gem', 1
-    g2 = new_spec 'gem', 1
+    g1 = util_spec 'gem', 1
+    g2 = util_spec 'gem', 1
 
     assert_equal g1, g2
     assert_equal g1.hash, g2.hash
@@ -2052,7 +2140,7 @@ class << Gem
       remove_method :default_ext_dir_for
     end
 
-    def Gem.default_ext_dir_for base_dir
+    def Gem.default_ext_dir_for(base_dir)
       '/foo'
     end
 
@@ -2164,7 +2252,7 @@ def test_fullpath_return_rb_extension_file_when_exist_the_same_name_file
 
   def test_require_already_activated
     save_loaded_features do
-      a1 = new_spec "a", "1", nil, "lib/d.rb"
+      a1 = util_spec "a", "1", nil, "lib/d.rb"
 
       install_specs a1 # , a2, b1, b2, c1, c2
 
@@ -2181,12 +2269,12 @@ def test_require_already_activated
 
   def test_require_already_activated_indirect_conflict
     save_loaded_features do
-      a1 = new_spec "a", "1", "b" => "> 0"
-      a2 = new_spec "a", "2", "b" => "> 0"
-      b1 = new_spec "b", "1", "c" => ">= 1"
-      b2 = new_spec "b", "2", "c" => ">= 2"
-      c1 = new_spec "c", "1", nil, "lib/d.rb"
-      c2 = new_spec("c", "2", { "a" => "1" }, "lib/d.rb") # conflicts with a-2
+      a1 = util_spec "a", "1", "b" => "> 0"
+      a2 = util_spec "a", "2", "b" => "> 0"
+      b1 = util_spec "b", "1", "c" => ">= 1"
+      b2 = util_spec "b", "2", "c" => ">= 2"
+      c1 = util_spec "c", "1", nil, "lib/d.rb"
+      c2 = util_spec("c", "2", { "a" => "1" }, "lib/d.rb") # conflicts with a-2
 
       install_specs c1, b1, a1, a2, c2, b2
 
@@ -2207,7 +2295,7 @@ def test_requirements
   end
 
   def test_allowed_push_host
-    assert_equal nil, @a1.metadata['allowed_push_host']
+    assert_nil                                   @a1.metadata['allowed_push_host']
     assert_equal 'https://privategemserver.com', @a3.metadata['allowed_push_host']
   end
 
@@ -2224,8 +2312,8 @@ def test_runtime_dependencies_legacy
   end
 
   def test_spaceship_name
-    s1 = new_spec 'a', '1'
-    s2 = new_spec 'b', '1'
+    s1 = util_spec 'a', '1'
+    s2 = util_spec 'b', '1'
 
     assert_equal(-1, (s1 <=> s2))
     assert_equal( 0, (s1 <=> s1))
@@ -2233,8 +2321,8 @@ def test_spaceship_name
   end
 
   def test_spaceship_platform
-    s1 = new_spec 'a', '1'
-    s2 = new_spec 'a', '1' do |s|
+    s1 = util_spec 'a', '1'
+    s2 = util_spec 'a', '1' do |s|
       s.platform = Gem::Platform.new 'x86-my_platform1'
     end
 
@@ -2244,8 +2332,8 @@ def test_spaceship_platform
   end
 
   def test_spaceship_version
-    s1 = new_spec 'a', '1'
-    s2 = new_spec 'a', '2'
+    s1 = util_spec 'a', '1'
+    s2 = util_spec 'a', '2'
 
     assert_equal( -1, (s1 <=> s2))
     assert_equal(  0, (s1 <=> s1))
@@ -2417,7 +2505,6 @@ def test_to_ruby_fancy
   s.homepage = "http://example.com".freeze
   s.licenses = ["MIT".freeze]
   s.requirements = ["A working computer".freeze]
-  s.rubyforge_project = "example".freeze
   s.rubygems_version = "#{Gem::VERSION}".freeze
   s.summary = "this is a summary".freeze
   s.test_files = ["test/suite.rb".freeze]
@@ -2428,16 +2515,16 @@ def test_to_ruby_fancy
     if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
       s.add_runtime_dependency(%q<rake>.freeze, [\"> 0.4\"])
       s.add_runtime_dependency(%q<jabber4r>.freeze, [\"> 0.0.0\"])
-      s.add_runtime_dependency(%q<pqa>.freeze, [\"<= 0.6\", \"> 0.4\"])
+      s.add_runtime_dependency(%q<pqa>.freeze, [\"> 0.4\", \"<= 0.6\"])
     else
       s.add_dependency(%q<rake>.freeze, [\"> 0.4\"])
       s.add_dependency(%q<jabber4r>.freeze, [\"> 0.0.0\"])
-      s.add_dependency(%q<pqa>.freeze, [\"<= 0.6\", \"> 0.4\"])
+      s.add_dependency(%q<pqa>.freeze, [\"> 0.4\", \"<= 0.6\"])
     end
   else
     s.add_dependency(%q<rake>.freeze, [\"> 0.4\"])
     s.add_dependency(%q<jabber4r>.freeze, [\"> 0.0.0\"])
-    s.add_dependency(%q<pqa>.freeze, [\"<= 0.6\", \"> 0.4\"])
+    s.add_dependency(%q<pqa>.freeze, [\"> 0.4\", \"<= 0.6\"])
   end
 end
     SPEC
@@ -2534,7 +2621,7 @@ def test_validate
     end
   end
 
-  def x s; s.gsub(/xxx/, ''); end
+  def x(s); s.gsub(/xxx/, ''); end
   def w; x "WARxxxNING"; end
   def t; x "TOxxxDO"; end
   def f; x "FxxxIXME"; end
@@ -2610,6 +2697,7 @@ def test_validate_dependencies
       @a1.add_runtime_dependency     'l', '> 1.2.3'
       @a1.add_runtime_dependency     'm', '~> 2.1.0'
       @a1.add_runtime_dependency     'n', '~> 0.1.0'
+      @a1.add_runtime_dependency     'o'
 
       use_ui @ui do
         @a1.validate
@@ -2618,12 +2706,6 @@ def test_validate_dependencies
       expected = <<-EXPECTED
 #{w}:  prerelease dependency on b (>= 1.0.rc1) is not recommended
 #{w}:  prerelease dependency on c (>= 2.0.rc2, development) is not recommended
-#{w}:  pessimistic dependency on d (~> 1.2.3) may be overly strict
-  if d is semantically versioned, use:
-    add_runtime_dependency 'd', '~> 1.2', '>= 1.2.3'
-#{w}:  pessimistic dependency on e (~> 1.2.3.4) may be overly strict
-  if e is semantically versioned, use:
-    add_runtime_dependency 'e', '~> 1.2', '>= 1.2.3.4'
 #{w}:  open-ended dependency on i (>= 1.2) is not recommended
   if i is semantically versioned, use:
     add_runtime_dependency 'i', '~> 1.2'
@@ -2636,9 +2718,8 @@ def test_validate_dependencies
 #{w}:  open-ended dependency on l (> 1.2.3) is not recommended
   if l is semantically versioned, use:
     add_runtime_dependency 'l', '~> 1.2', '> 1.2.3'
-#{w}:  pessimistic dependency on m (~> 2.1.0) may be overly strict
-  if m is semantically versioned, use:
-    add_runtime_dependency 'm', '~> 2.1', '>= 2.1.0'
+#{w}:  open-ended dependency on o (>= 0) is not recommended
+  use a bounded requirement, such as '~> x.y'
 #{w}:  See http://guides.rubygems.org/specification-reference/ for help
       EXPECTED
 
@@ -2805,7 +2886,7 @@ def test_validate_executables
   end
 
   def test_validate_empty_require_paths
-    if win_platform? then
+    if win_platform?
       skip 'test_validate_empty_require_paths skipped on MS Windows (symlink)'
     else
       util_setup_validate
@@ -2841,6 +2922,68 @@ def test_validate_files
                  @a1.files
   end
 
+  def test_unresolved_specs
+    specification = Gem::Specification.clone
+
+    set_orig specification
+
+    specification.define_singleton_method(:unresolved_deps) do
+      { b: Gem::Dependency.new("x","1") }
+    end
+
+    specification.define_singleton_method(:find_all_by_name) do |dep_name|
+      []
+    end
+
+    expected = <<-EXPECTED
+WARN: Unresolved or ambigious specs during Gem::Specification.reset:
+      x (= 1)
+WARN: Clearing out unresolved specs. Try 'gem cleanup <gem>'
+Please report a bug if this causes problems.
+    EXPECTED
+
+    assert_output nil, expected do
+      specification.reset
+    end
+  end
+
+  def test_unresolved_specs_with_versions
+    specification = Gem::Specification.clone
+
+    set_orig specification
+
+    specification.define_singleton_method(:unresolved_deps) do
+      { b: Gem::Dependency.new("x","1") }
+    end
+
+    specification.define_singleton_method(:find_all_by_name) do |dep_name|
+      [
+        specification.new { |s| s.name = "z", s.version = Gem::Version.new("1") },
+        specification.new { |s| s.name = "z", s.version = Gem::Version.new("2") }
+      ]
+    end
+
+    expected = <<-EXPECTED
+WARN: Unresolved or ambigious specs during Gem::Specification.reset:
+      x (= 1)
+      Available/installed versions of this gem:
+      - 1
+      - 2
+WARN: Clearing out unresolved specs. Try 'gem cleanup <gem>'
+Please report a bug if this causes problems.
+    EXPECTED
+
+    assert_output nil, expected do
+      specification.reset
+    end
+  end
+
+  def set_orig(cls)
+    s_cls = cls.singleton_class
+    s_cls.send :alias_method, :orig_unresolved_deps , :unresolved_deps
+    s_cls.send :alias_method, :orig_find_all_by_name, :find_all_by_name
+  end
+
   def test_validate_files_recursive
     util_setup_validate
     FileUtils.touch @a1.file_name
@@ -2941,6 +3084,17 @@ def test_validate_license_values_plus
     assert_empty @ui.error
   end
 
+  def test_validate_license_values_or_later
+    util_setup_validate
+
+    use_ui @ui do
+      @a1.licenses = ['GPL-2.0-or-later']
+      @a1.validate
+    end
+
+    assert_empty @ui.error
+  end
+
   def test_validate_license_values_with
     util_setup_validate
 
@@ -2970,6 +3124,20 @@ def test_validate_license_with_nonsense_suffix
     warning
   end
 
+  def test_validate_license_with_invalid_exception
+    util_setup_validate
+
+    use_ui @ui do
+      @a1.licenses = ['GPL-2.0+ WITH Autocofn-exception-2.0']
+      @a1.validate
+    end
+
+    assert_match <<-warning, @ui.error
+WARNING:  license value 'GPL-2.0+ WITH Autocofn-exception-2.0' is invalid.  Use a license identifier from
+http://spdx.org/licenses or 'Nonstandard' for a nonstandard license.
+    warning
+  end
+
   def test_validate_license_gives_suggestions
     util_setup_validate
 
@@ -3222,7 +3390,7 @@ def test_version_change_reset_cache_file
   end
 
   def test__load_fixes_Date_objects
-    spec = new_spec "a", 1
+    spec = util_spec "a", 1
     spec.instance_variable_set :@date, Date.today
 
     spec = Marshal.load Marshal.dump(spec)
@@ -3281,10 +3449,10 @@ def test_latest_specs
     end
 
     expected = %W[
-                  a-2
-                  a-2-x86-my_platform-1
-                  a-3-x86-other_platform-1
-                 ]
+      a-2
+      a-2-x86-my_platform-1
+      a-3-x86-other_platform-1
+    ]
 
     latest_specs = Gem::Specification.latest_specs.map(&:full_name).sort
 
@@ -3534,7 +3702,7 @@ def test_find_by_name_prerelease
   end
 
   def test_find_by_path
-    a = new_spec "foo", "1", nil, "lib/foo.rb"
+    a = util_spec "foo", "1", nil, "lib/foo.rb"
 
     install_specs a
 
@@ -3544,13 +3712,13 @@ def test_find_by_path
   end
 
   def test_find_inactive_by_path
-    a = new_spec "foo", "1", nil, "lib/foo.rb"
+    a = util_spec "foo", "1", nil, "lib/foo.rb"
 
     install_specs a
 
     assert_equal a, Gem::Specification.find_inactive_by_path('foo')
     a.activate
-    assert_equal nil, Gem::Specification.find_inactive_by_path('foo')
+    assert_nil Gem::Specification.find_inactive_by_path('foo')
   end
 
   def test_load_default_gem
@@ -3567,18 +3735,6 @@ def test_load_default_gem
     assert_equal ["default-2.0.0.0"], Gem::Specification.map(&:full_name)
   end
 
-  def test_detect_bundled_gem_in_old_ruby
-    util_set_RUBY_VERSION '1.9.3', 551
-
-    spec = new_spec 'bigdecimal', '1.1.0' do |s|
-      s.summary = "This bigdecimal is bundled with Ruby"
-    end
-
-    assert spec.bundled_gem_in_old_ruby?
-  ensure
-    util_restore_RUBY_VERSION
-  end
-
   def util_setup_deps
     @gem = util_spec "awesome", "1.0" do |awesome|
       awesome.add_runtime_dependency "bonobo", []
diff --git a/test/mri/rubygems/test_gem_stream_ui.rb b/test/mri/rubygems/test_gem_stream_ui.rb
index 51fd51c474f..342b7071a6a 100644
--- a/test/mri/rubygems/test_gem_stream_ui.rb
+++ b/test/mri/rubygems/test_gem_stream_ui.rb
@@ -4,6 +4,7 @@
 require 'timeout'
 
 class TestGemStreamUI < Gem::TestCase
+  SHORT_TIMEOUT = (defined?(RubyVM::MJIT) && RubyVM::MJIT.enabled?) ? 1.0 : 0.1 # increase timeout with MJIT for --jit-wait testing
 
   module IsTty
     attr_accessor :tty
@@ -36,9 +37,6 @@ def setup
   end
 
   def test_ask
-    skip 'TTY detection broken on windows' if
-      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
-
     Timeout.timeout(1) do
       expected_answer = "Arthur, King of the Britons"
       @in.string = "#{expected_answer}\n"
@@ -48,21 +46,15 @@ def test_ask
   end
 
   def test_ask_no_tty
-    skip 'TTY detection broken on windows' if
-      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
-
     @in.tty = false
 
-    Timeout.timeout(0.1) do
+    Timeout.timeout(SHORT_TIMEOUT) do
       answer = @sui.ask("what is your favorite color?")
-      assert_equal nil, answer
+      assert_nil answer
     end
   end
 
   def test_ask_for_password
-    skip 'Always uses $stdin on windows' if
-      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
-
     Timeout.timeout(1) do
       expected_answer = "Arthur, King of the Britons"
       @in.string = "#{expected_answer}\n"
@@ -72,24 +64,18 @@ def test_ask_for_password
   end
 
   def test_ask_for_password_no_tty
-    skip 'TTY handling is broken on windows' if
-      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
-
     @in.tty = false
 
-    Timeout.timeout(0.1) do
+    Timeout.timeout(SHORT_TIMEOUT) do
       answer = @sui.ask_for_password("what is the airspeed velocity of an unladen swallow?")
-      assert_equal nil, answer
+      assert_nil answer
     end
   end
 
   def test_ask_yes_no_no_tty_with_default
-    skip 'TTY handling is broken on windows' if
-      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
-
     @in.tty = false
 
-    Timeout.timeout(0.1) do
+    Timeout.timeout(SHORT_TIMEOUT) do
       answer = @sui.ask_yes_no("do coconuts migrate?", false)
       assert_equal false, answer
 
@@ -99,12 +85,9 @@ def test_ask_yes_no_no_tty_with_default
   end
 
   def test_ask_yes_no_no_tty_without_default
-    skip 'TTY handling is broken on windows' if
-      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
-
     @in.tty = false
 
-    Timeout.timeout(0.1) do
+    Timeout.timeout(SHORT_TIMEOUT) do
       assert_raises(Gem::OperationNotSupportedError) do
         @sui.ask_yes_no("do coconuts migrate?")
       end
@@ -174,14 +157,14 @@ def test_download_reporter_silent_false
   def test_download_reporter_anything
     @cfg.verbose = 0
     reporter = @sui.download_reporter
-    assert_kind_of Gem::StreamUI::VerboseDownloadReporter, reporter
+    assert_kind_of Gem::StreamUI::ThreadedDownloadReporter, reporter
   end
 
-  def test_verbose_download_reporter
+  def test_threaded_download_reporter
     @cfg.verbose = true
     reporter = @sui.download_reporter
     reporter.fetch 'a.gem', 1024
-    assert_equal "Fetching: a.gem", @out.string
+    assert_equal "Fetching a.gem\n", @out.string
   end
 
   def test_verbose_download_reporter_progress
@@ -189,7 +172,7 @@ def test_verbose_download_reporter_progress
     reporter = @sui.download_reporter
     reporter.fetch 'a.gem', 1024
     reporter.update 512
-    assert_equal "Fetching: a.gem\rFetching: a.gem ( 50%)", @out.string
+    assert_equal "Fetching a.gem\n", @out.string
   end
 
   def test_verbose_download_reporter_progress_once
@@ -198,7 +181,7 @@ def test_verbose_download_reporter_progress_once
     reporter.fetch 'a.gem', 1024
     reporter.update 510
     reporter.update 512
-    assert_equal "Fetching: a.gem\rFetching: a.gem ( 50%)", @out.string
+    assert_equal "Fetching a.gem\n", @out.string
   end
 
   def test_verbose_download_reporter_progress_complete
@@ -207,7 +190,7 @@ def test_verbose_download_reporter_progress_complete
     reporter.fetch 'a.gem', 1024
     reporter.update 510
     reporter.done
-    assert_equal "Fetching: a.gem\rFetching: a.gem ( 50%)\rFetching: a.gem (100%)\n", @out.string
+    assert_equal "Fetching a.gem\n", @out.string
   end
 
   def test_verbose_download_reporter_progress_nil_length
@@ -216,7 +199,7 @@ def test_verbose_download_reporter_progress_nil_length
     reporter.fetch 'a.gem', nil
     reporter.update 1024
     reporter.done
-    assert_equal "Fetching: a.gem\rFetching: a.gem (1024B)\rFetching: a.gem (1024B)\n", @out.string
+    assert_equal "Fetching a.gem\n", @out.string
   end
 
   def test_verbose_download_reporter_progress_zero_length
@@ -225,7 +208,7 @@ def test_verbose_download_reporter_progress_zero_length
     reporter.fetch 'a.gem', 0
     reporter.update 1024
     reporter.done
-    assert_equal "Fetching: a.gem\rFetching: a.gem (1024B)\rFetching: a.gem (1024B)\n", @out.string
+    assert_equal "Fetching a.gem\n", @out.string
   end
 
   def test_verbose_download_reporter_no_tty
diff --git a/test/mri/rubygems/test_gem_stub_specification.rb b/test/mri/rubygems/test_gem_stub_specification.rb
index f9a3a236c08..39882069445 100644
--- a/test/mri/rubygems/test_gem_stub_specification.rb
+++ b/test/mri/rubygems/test_gem_stub_specification.rb
@@ -240,7 +240,6 @@ def stub_without_version
 
       return stub
     end
-
   end
 
   def stub_with_extension
@@ -293,4 +292,3 @@ def stub_without_extension
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_text.rb b/test/mri/rubygems/test_gem_text.rb
index 8ce6df94bbc..c50d0bdb7a1 100644
--- a/test/mri/rubygems/test_gem_text.rb
+++ b/test/mri/rubygems/test_gem_text.rb
@@ -21,6 +21,10 @@ def test_format_text_none_indent
     assert_equal "  text to wrap",    format_text("text to wrap", 40, 2)
   end
 
+  def test_format_text_no_space
+    assert_equal "texttowr\nap",     format_text("texttowrap", 8)
+  end
+
   def test_format_text_trailing # for two spaces after .
     text = <<-TEXT
 This line is really, really long.  So long, in fact, that it is more than eighty characters long!  The purpose of this line is for testing wrapping behavior because sometimes people don't wrap their text to eighty characters.  Without the wrapping, the text might not look good in the RSS feed.
diff --git a/test/mri/rubygems/test_gem_uninstaller.rb b/test/mri/rubygems/test_gem_uninstaller.rb
index d0051308953..a53526c0bcc 100644
--- a/test/mri/rubygems/test_gem_uninstaller.rb
+++ b/test/mri/rubygems/test_gem_uninstaller.rb
@@ -177,10 +177,12 @@ def test_uninstall
     gem_dir = File.join @gemhome, 'gems', @spec.full_name
 
     Gem.pre_uninstall do
+      sleep(0.1) if win_platform?
       assert File.exist?(gem_dir), 'gem_dir should exist'
     end
 
     Gem.post_uninstall do
+      sleep(0.1) if win_platform?
       refute File.exist?(gem_dir), 'gem_dir should not exist'
     end
 
@@ -212,7 +214,7 @@ def test_uninstall_default_gem_with_same_version
     default_spec = new_default_spec 'default', '2'
     install_default_gems default_spec
 
-    spec = new_spec 'default', '2'
+    spec = util_spec 'default', '2'
     install_gem spec
 
     Gem::Specification.reset
@@ -482,4 +484,22 @@ def test_uninstall_prompt_includes_dep_type
     assert_match %r!r-1 depends on q \(= 1, development\)!, lines.shift
     assert_match %r!Successfully uninstalled q-1!, lines.last
   end
+
+  def test_uninstall_no_permission
+    uninstaller = Gem::Uninstaller.new @spec.name, :executables => true
+
+    stub_rm_r = lambda do |*args|
+      _path = args.shift
+      options = args.shift || Hash.new
+      # Uninstaller calls a method in RDoc which also calls FileUtils.rm_rf which
+      # is an alias for FileUtils#rm_r, so skip if we're using the force option
+      raise Errno::EPERM unless options[:force]
+    end
+
+    FileUtils.stub :rm_r, stub_rm_r do
+      assert_raises Gem::UninstallError do
+        uninstaller.uninstall
+      end
+    end
+  end
 end
diff --git a/test/mri/rubygems/test_gem_unsatisfiable_dependency_error.rb b/test/mri/rubygems/test_gem_unsatisfiable_dependency_error.rb
index 8b9c5604c92..e68185ce255 100644
--- a/test/mri/rubygems/test_gem_unsatisfiable_dependency_error.rb
+++ b/test/mri/rubygems/test_gem_unsatisfiable_dependency_error.rb
@@ -30,4 +30,3 @@ def test_version
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_uri_formatter.rb b/test/mri/rubygems/test_gem_uri_formatter.rb
index c16ce98d236..b19bae9939f 100644
--- a/test/mri/rubygems/test_gem_uri_formatter.rb
+++ b/test/mri/rubygems/test_gem_uri_formatter.rb
@@ -26,4 +26,3 @@ def test_unescape
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_util.rb b/test/mri/rubygems/test_gem_util.rb
index 3b7887d9319..88afc62976b 100644
--- a/test/mri/rubygems/test_gem_util.rb
+++ b/test/mri/rubygems/test_gem_util.rb
@@ -5,8 +5,7 @@
 class TestGemUtil < Gem::TestCase
 
   def test_class_popen
-    skip "MJIT executes process and it's caught by Process.wait(-1)" if defined?(RubyVM::MJIT) && RubyVM::MJIT.enabled?
-    assert_equal "0\n", Gem::Util.popen(Gem.ruby, '-e', 'p 0')
+    assert_equal "0\n", Gem::Util.popen(Gem.ruby, '-I', File.expand_path('../../../lib', __FILE__), '-e', 'p 0')
 
     assert_raises Errno::ECHILD do
       Process.wait(-1)
@@ -15,7 +14,7 @@ def test_class_popen
 
   def test_silent_system
     assert_silent do
-      Gem::Util.silent_system Gem.ruby, '-e', 'puts "hello"; warn "hello"'
+      Gem::Util.silent_system Gem.ruby, '-I', File.expand_path('../../../lib', __FILE__), '-e', 'puts "hello"; warn "hello"'
     end
   end
 
@@ -38,17 +37,14 @@ def test_traverse_parents_does_not_crash_on_permissions_error
     # impossible to cd into it and its children
     FileUtils.chmod(0666, 'd/e')
 
+    skip 'skipped in root privilege' if Process.uid.zero?
+
     paths = Gem::Util.traverse_parents('d/e/f').to_a
 
     assert_equal File.join(@tempdir, 'd'), paths[0]
     assert_equal @tempdir, paths[1]
-    if File.respond_to?(:realpath)
-      assert_equal File.realpath(Dir.tmpdir), paths[2]
-      assert_equal File.realpath("..", Dir.tmpdir), paths[3]
-    elsif RUBY_PLATFORM !~ /darwin/
-      assert_equal Dir.tmpdir, paths[2]
-      assert_equal '/', paths[3]
-    end
+    assert_equal File.realpath(Dir.tmpdir), paths[2]
+    assert_equal File.realpath("..", Dir.tmpdir), paths[3]
   ensure
     # restore default permissions, allow the directory to be removed
     FileUtils.chmod(0775, 'd/e') unless win_platform?
@@ -62,5 +58,21 @@ def test_linked_list_find
     assert_equal 4, list.find { |x| x == 4 }
   end
 
-end
+  def test_glob_files_in_dir
+    FileUtils.mkdir_p 'g'
+    FileUtils.touch File.join('g', 'h.rb')
+    FileUtils.touch File.join('g', 'i.rb')
+
+    expected_paths = [
+      File.join(@tempdir, 'g/h.rb'),
+      File.join(@tempdir, 'g/i.rb'),
+    ]
 
+    files_with_absolute_base = Gem::Util.glob_files_in_dir('*.rb', File.join(@tempdir, 'g'))
+    assert_equal expected_paths.to_set, files_with_absolute_base.to_set
+
+    files_with_relative_base = Gem::Util.glob_files_in_dir('*.rb', 'g')
+    assert_equal expected_paths.to_set, files_with_relative_base.to_set
+  end
+
+end
diff --git a/test/mri/rubygems/test_gem_validator.rb b/test/mri/rubygems/test_gem_validator.rb
index 5365a1dabb4..b9f597b7d3b 100644
--- a/test/mri/rubygems/test_gem_validator.rb
+++ b/test/mri/rubygems/test_gem_validator.rb
@@ -43,4 +43,3 @@ def test_alien_default
   end
 
 end
-
diff --git a/test/mri/rubygems/test_gem_version.rb b/test/mri/rubygems/test_gem_version.rb
index 792ad5f0841..939360c7a2e 100644
--- a/test/mri/rubygems/test_gem_version.rb
+++ b/test/mri/rubygems/test_gem_version.rb
@@ -46,6 +46,11 @@ def test_class_create
   def test_class_correct
     assert_equal true,  Gem::Version.correct?("5.1")
     assert_equal false, Gem::Version.correct?("an incorrect version")
+
+    expected = "nil versions are discouraged and will be deprecated in Rubygems 4\n"
+    assert_output nil, expected do
+      Gem::Version.correct?(nil)
+    end
   end
 
   def test_class_new_subclass
@@ -157,11 +162,25 @@ def test_spaceship
 
   def test_approximate_recommendation
     assert_approximate_equal "~> 1.0", "1"
+    assert_approximate_satisfies_itself "1"
+
     assert_approximate_equal "~> 1.0", "1.0"
+    assert_approximate_satisfies_itself "1.0"
+
     assert_approximate_equal "~> 1.2", "1.2"
+    assert_approximate_satisfies_itself "1.2"
+
     assert_approximate_equal "~> 1.2", "1.2.0"
+    assert_approximate_satisfies_itself "1.2.0"
+
     assert_approximate_equal "~> 1.2", "1.2.3"
-    assert_approximate_equal "~> 1.2", "1.2.3.a.4"
+    assert_approximate_satisfies_itself "1.2.3"
+
+    assert_approximate_equal "~> 1.2.a", "1.2.3.a.4"
+    assert_approximate_satisfies_itself "1.2.3.a.4"
+
+    assert_approximate_equal "~> 1.9.a", "1.9.0.dev"
+    assert_approximate_satisfies_itself "1.9.0.dev"
   end
 
   def test_to_s
@@ -193,45 +212,53 @@ def test_canonical_segments
 
   # Asserts that +version+ is a prerelease.
 
-  def assert_prerelease version
+  def assert_prerelease(version)
     assert v(version).prerelease?, "#{version} is a prerelease"
   end
 
-  # Assert that +expected+ is the "approximate" recommendation for +version".
+  # Assert that +expected+ is the "approximate" recommendation for +version+.
 
-  def assert_approximate_equal expected, version
+  def assert_approximate_equal(expected, version)
     assert_equal expected, v(version).approximate_recommendation
   end
 
+  # Assert that the "approximate" recommendation for +version+ satifies +version+.
+
+  def assert_approximate_satisfies_itself(version)
+    gem_version = v(version)
+
+    assert Gem::Requirement.new(gem_version.approximate_recommendation).satisfied_by?(gem_version)
+  end
+
   # Assert that bumping the +unbumped+ version yields the +expected+.
 
-  def assert_bumped_version_equal expected, unbumped
+  def assert_bumped_version_equal(expected, unbumped)
     assert_version_equal expected, v(unbumped).bump
   end
 
   # Assert that +release+ is the correct non-prerelease +version+.
 
-  def assert_release_equal release, version
+  def assert_release_equal(release, version)
     assert_version_equal release, v(version).release
   end
 
   # Assert that two versions are equal. Handles strings or
   # Gem::Version instances.
 
-  def assert_version_equal expected, actual
+  def assert_version_equal(expected, actual)
     assert_equal v(expected), v(actual)
     assert_equal v(expected).hash, v(actual).hash, "since #{actual} == #{expected}, they must have the same hash"
   end
 
   # Assert that two versions are eql?. Checks both directions.
 
-  def assert_version_eql first, second
+  def assert_version_eql(first, second)
     first, second = v(first), v(second)
     assert first.eql?(second), "#{first} is eql? #{second}"
     assert second.eql?(first), "#{second} is eql? #{first}"
   end
 
-  def assert_less_than left, right
+  def assert_less_than(left, right)
     l = v(left)
     r = v(right)
     assert l < r, "#{left} not less than #{right}"
@@ -239,14 +266,14 @@ def assert_less_than left, right
 
   # Refute the assumption that +version+ is a prerelease.
 
-  def refute_prerelease version
+  def refute_prerelease(version)
     refute v(version).prerelease?, "#{version} is NOT a prerelease"
   end
 
   # Refute the assumption that two versions are eql?. Checks both
   # directions.
 
-  def refute_version_eql first, second
+  def refute_version_eql(first, second)
     first, second = v(first), v(second)
     refute first.eql?(second), "#{first} is NOT eql? #{second}"
     refute second.eql?(first), "#{second} is NOT eql? #{first}"
@@ -254,7 +281,7 @@ def refute_version_eql first, second
 
   # Refute the assumption that the two versions are equal?.
 
-  def refute_version_equal unexpected, actual
+  def refute_version_equal(unexpected, actual)
     refute_equal v(unexpected), v(actual)
   end
 end
diff --git a/test/mri/rubygems/test_gem_version_option.rb b/test/mri/rubygems/test_gem_version_option.rb
index c06c716616f..a680c5154e6 100644
--- a/test/mri/rubygems/test_gem_version_option.rb
+++ b/test/mri/rubygems/test_gem_version_option.rb
@@ -164,4 +164,3 @@ def test_version_option_twice
   end
 
 end
-
diff --git a/test/mri/rubygems/test_remote_fetch_error.rb b/test/mri/rubygems/test_remote_fetch_error.rb
index 6b0f5477d61..432c48b878d 100644
--- a/test/mri/rubygems/test_remote_fetch_error.rb
+++ b/test/mri/rubygems/test_remote_fetch_error.rb
@@ -18,4 +18,3 @@ def test_to_s
     assert_equal error.to_s, 'There was an error fetching (https://gemsource.org)'
   end
 end
-
diff --git a/test/mri/rubygems/test_require.rb b/test/mri/rubygems/test_require.rb
index e292ce226d1..e3bdc218f7f 100644
--- a/test/mri/rubygems/test_require.rb
+++ b/test/mri/rubygems/test_require.rb
@@ -4,7 +4,7 @@
 
 class TestGemRequire < Gem::TestCase
   class Latch
-    def initialize count = 1
+    def initialize(count = 1)
       @count = count
       @lock  = Monitor.new
       @cv    = @lock.new_cond
@@ -40,10 +40,10 @@ def assert_require(path)
 
   # Providing -I on the commandline should always beat gems
   def test_dash_i_beats_gems
-    a1 = new_spec "a", "1", {"b" => "= 1"}, "lib/test_gem_require_a.rb"
-    b1 = new_spec "b", "1", {"c" => "> 0"}, "lib/b/c.rb"
-    c1 = new_spec "c", "1", nil, "lib/c/c.rb"
-    c2 = new_spec "c", "2", nil, "lib/c/c.rb"
+    a1 = util_spec "a", "1", {"b" => "= 1"}, "lib/test_gem_require_a.rb"
+    b1 = util_spec "b", "1", {"c" => "> 0"}, "lib/b/c.rb"
+    c1 = util_spec "c", "1", nil, "lib/c/c.rb"
+    c2 = util_spec "c", "2", nil, "lib/c/c.rb"
 
     install_specs c1, c2, b1, a1
 
@@ -80,13 +80,11 @@ def create_sync_thread
   end
 
   def test_concurrent_require
-    skip 'deadlock' if /^1\.8\./ =~ RUBY_VERSION
-
     Object.const_set :FILE_ENTERED_LATCH, Latch.new(2)
     Object.const_set :FILE_EXIT_LATCH, Latch.new(1)
 
-    a1 = new_spec "a", "1", nil, "lib/a.rb"
-    b1 = new_spec "b", "1", nil, "lib/b.rb"
+    a1 = util_spec "a", "1", nil, "lib/a.rb"
+    b1 = util_spec "b", "1", nil, "lib/b.rb"
 
     install_specs a1, b1
 
@@ -107,9 +105,9 @@ def test_concurrent_require
   end
 
   def test_require_is_not_lazy_with_exact_req
-    a1 = new_spec "a", "1", {"b" => "= 1"}, "lib/test_gem_require_a.rb"
-    b1 = new_spec "b", "1", nil, "lib/b/c.rb"
-    b2 = new_spec "b", "2", nil, "lib/b/c.rb"
+    a1 = util_spec "a", "1", {"b" => "= 1"}, "lib/test_gem_require_a.rb"
+    b1 = util_spec "b", "1", nil, "lib/b/c.rb"
+    b2 = util_spec "b", "2", nil, "lib/b/c.rb"
 
     install_specs b1, b2, a1
 
@@ -122,9 +120,9 @@ def test_require_is_not_lazy_with_exact_req
   end
 
   def test_require_is_lazy_with_inexact_req
-    a1 = new_spec "a", "1", {"b" => ">= 1"}, "lib/test_gem_require_a.rb"
-    b1 = new_spec "b", "1", nil, "lib/b/c.rb"
-    b2 = new_spec "b", "2", nil, "lib/b/c.rb"
+    a1 = util_spec "a", "1", {"b" => ">= 1"}, "lib/test_gem_require_a.rb"
+    b1 = util_spec "b", "1", nil, "lib/b/c.rb"
+    b2 = util_spec "b", "2", nil, "lib/b/c.rb"
 
     install_specs b1, b2, a1
 
@@ -137,8 +135,8 @@ def test_require_is_lazy_with_inexact_req
   end
 
   def test_require_is_not_lazy_with_one_possible
-    a1 = new_spec "a", "1", {"b" => ">= 1"}, "lib/test_gem_require_a.rb"
-    b1 = new_spec "b", "1", nil, "lib/b/c.rb"
+    a1 = util_spec "a", "1", {"b" => ">= 1"}, "lib/test_gem_require_a.rb"
+    b1 = util_spec "b", "1", nil, "lib/b/c.rb"
 
     install_specs b1, a1
 
@@ -151,7 +149,7 @@ def test_require_is_not_lazy_with_one_possible
   end
 
   def test_require_can_use_a_pathname_object
-    a1 = new_spec "a", "1", nil, "lib/test_gem_require_a.rb"
+    a1 = util_spec "a", "1", nil, "lib/test_gem_require_a.rb"
 
     install_specs a1
 
@@ -161,9 +159,9 @@ def test_require_can_use_a_pathname_object
   end
 
   def test_activate_via_require_respects_loaded_files
-    a1 = new_spec "a", "1", {"b" => ">= 1"}, "lib/test_gem_require_a.rb"
-    b1 = new_spec "b", "1", nil, "lib/benchmark.rb"
-    b2 = new_spec "b", "2", nil, "lib/benchmark.rb"
+    a1 = util_spec "a", "1", {"b" => ">= 1"}, "lib/test_gem_require_a.rb"
+    b1 = util_spec "b", "1", nil, "lib/benchmark.rb"
+    b2 = util_spec "b", "2", nil, "lib/benchmark.rb"
 
     install_specs b1, b2, a1
 
@@ -181,11 +179,11 @@ def test_activate_via_require_respects_loaded_files
   end
 
   def test_already_activated_direct_conflict
-    a1 = new_spec "a", "1", { "b" => "> 0" }
-    b1 = new_spec "b", "1", { "c" => ">= 1" }, "lib/ib.rb"
-    b2 = new_spec "b", "2", { "c" => ">= 2" }, "lib/ib.rb"
-    c1 = new_spec "c", "1", nil, "lib/d.rb"
-    c2 = new_spec("c", "2", nil, "lib/d.rb")
+    a1 = util_spec "a", "1", { "b" => "> 0" }
+    b1 = util_spec "b", "1", { "c" => ">= 1" }, "lib/ib.rb"
+    b2 = util_spec "b", "2", { "c" => ">= 2" }, "lib/ib.rb"
+    c1 = util_spec "c", "1", nil, "lib/d.rb"
+    c2 = util_spec("c", "2", nil, "lib/d.rb")
 
     install_specs c1, c2, b1, b2, a1
 
@@ -201,13 +199,13 @@ def test_already_activated_direct_conflict
   end
 
   def test_multiple_gems_with_the_same_path
-    a1 = new_spec "a", "1", { "b" => "> 0", "x" => "> 0" }
-    b1 = new_spec "b", "1", { "c" => ">= 1" }, "lib/ib.rb"
-    b2 = new_spec "b", "2", { "c" => ">= 2" }, "lib/ib.rb"
-    x1 = new_spec "x", "1", nil, "lib/ib.rb"
-    x2 = new_spec "x", "2", nil, "lib/ib.rb"
-    c1 = new_spec "c", "1", nil, "lib/d.rb"
-    c2 = new_spec("c", "2", nil, "lib/d.rb")
+    a1 = util_spec "a", "1", { "b" => "> 0", "x" => "> 0" }
+    b1 = util_spec "b", "1", { "c" => ">= 1" }, "lib/ib.rb"
+    b2 = util_spec "b", "2", { "c" => ">= 2" }, "lib/ib.rb"
+    x1 = util_spec "x", "1", nil, "lib/ib.rb"
+    x2 = util_spec "x", "2", nil, "lib/ib.rb"
+    c1 = util_spec "c", "1", nil, "lib/d.rb"
+    c2 = util_spec("c", "2", nil, "lib/d.rb")
 
     install_specs c1, c2, x1, x2, b1, b2, a1
 
@@ -224,13 +222,13 @@ def test_multiple_gems_with_the_same_path
   end
 
   def test_unable_to_find_good_unresolved_version
-    a1 = new_spec "a", "1", { "b" => "> 0" }
-    b1 = new_spec "b", "1", { "c" => ">= 2" }, "lib/ib.rb"
-    b2 = new_spec "b", "2", { "c" => ">= 3" }, "lib/ib.rb"
+    a1 = util_spec "a", "1", { "b" => "> 0" }
+    b1 = util_spec "b", "1", { "c" => ">= 2" }, "lib/ib.rb"
+    b2 = util_spec "b", "2", { "c" => ">= 3" }, "lib/ib.rb"
 
-    c1 = new_spec "c", "1", nil, "lib/d.rb"
-    c2 = new_spec "c", "2", nil, "lib/d.rb"
-    c3 = new_spec "c", "3", nil, "lib/d.rb"
+    c1 = util_spec "c", "1", nil, "lib/d.rb"
+    c2 = util_spec "c", "2", nil, "lib/d.rb"
+    c3 = util_spec "c", "3", nil, "lib/d.rb"
 
     install_specs c1, c2, c3, b1, b2, a1
 
@@ -273,10 +271,10 @@ def test_require_works_after_cleanup
   end
 
   def test_require_doesnt_traverse_development_dependencies
-    a = new_spec("a", "1", nil, "lib/a.rb")
-    z = new_spec("z", "1", "w" => "> 0")
-    w1 = new_spec("w", "1") { |s| s.add_development_dependency "non-existent" }
-    w2 = new_spec("w", "2") { |s| s.add_development_dependency "non-existent" }
+    a = util_spec("a", "1", nil, "lib/a.rb")
+    z = util_spec("z", "1", "w" => "> 0")
+    w1 = util_spec("w", "1") { |s| s.add_development_dependency "non-existent" }
+    w2 = util_spec("w", "2") { |s| s.add_development_dependency "non-existent" }
 
     install_specs a, w1, w2, z
 
@@ -296,7 +294,6 @@ def test_default_gem_only
   end
 
   def test_realworld_default_gem
-    skip "no default gems on ruby < 2.0" unless RUBY_VERSION >= "2"
     begin
       gem 'json'
     rescue Gem::MissingSpecError
@@ -316,7 +313,7 @@ def test_default_gem_and_normal_gem
     default_gem_spec = new_default_spec("default", "2.0.0.0",
                                         nil, "default/gem.rb")
     install_default_specs(default_gem_spec)
-    normal_gem_spec = new_spec("default", "3.0", nil,
+    normal_gem_spec = util_spec("default", "3.0", nil,
                                "lib/default/gem.rb")
     install_specs(normal_gem_spec)
     assert_require "default/gem"
@@ -366,7 +363,7 @@ def self.gem(*args)
   end
 
   def test_require_default_when_gem_defined
-    a = new_spec("a", "1", nil, "lib/a.rb")
+    a = util_spec("a", "1", nil, "lib/a.rb")
     install_specs a
     c = Class.new do
       def self.gem(*args)
@@ -379,8 +376,8 @@ def self.gem(*args)
 
 
   def test_require_bundler
-    b1 = new_spec('bundler', '1', nil, "lib/bundler/setup.rb")
-    b2a = new_spec('bundler', '2.a', nil, "lib/bundler/setup.rb")
+    b1 = util_spec('bundler', '1', nil, "lib/bundler/setup.rb")
+    b2a = util_spec('bundler', '2.a', nil, "lib/bundler/setup.rb")
     install_specs b1, b2a
 
     require "rubygems/bundler_version_finder"
@@ -392,8 +389,8 @@ def test_require_bundler
 
   def test_require_bundler_missing_bundler_version
     Gem::BundlerVersionFinder.stub(:bundler_version_with_reason, ["55", "reason"]) do
-      b1 = new_spec('bundler', '1.999999999', nil, "lib/bundler/setup.rb")
-      b2a = new_spec('bundler', '2.a', nil, "lib/bundler/setup.rb")
+      b1 = util_spec('bundler', '1.999999999', nil, "lib/bundler/setup.rb")
+      b2a = util_spec('bundler', '2.a', nil, "lib/bundler/setup.rb")
       install_specs b1, b2a
 
       e = assert_raises Gem::MissingSpecVersionError do
@@ -405,8 +402,8 @@ def test_require_bundler_missing_bundler_version
 
   def test_require_bundler_with_bundler_version
     Gem::BundlerVersionFinder.stub(:bundler_version_with_reason, ["1", "reason"]) do
-      b1 = new_spec('bundler', '1.999999999', nil, "lib/bundler/setup.rb")
-      b2 = new_spec('bundler', '2', nil, "lib/bundler/setup.rb")
+      b1 = util_spec('bundler', '1.999999999', nil, "lib/bundler/setup.rb")
+      b2 = util_spec('bundler', '2', nil, "lib/bundler/setup.rb")
       install_specs b1, b2
 
       $:.clear
@@ -415,6 +412,24 @@ def test_require_bundler_with_bundler_version
     end
   end
 
+  if RUBY_VERSION >= "2.5"
+    def test_no_kernel_require_in_warn_with_uplevel
+      lib = File.realpath("../../../lib", __FILE__)
+      Dir.mktmpdir("warn_test") do |dir|
+        File.write(dir + "/sub.rb", "warn 'uplevel', 'test', uplevel: 1\n")
+        File.write(dir + "/main.rb", "require 'sub'\n")
+        _, err = capture_subprocess_io do
+          system(@@ruby, "-w", "-rpp", "--disable=gems", "-I", lib, "-C", dir, "-I.", "main.rb")
+        end
+        assert_equal "main.rb:1: warning: uplevel\ntest\n", err
+        _, err = capture_subprocess_io do
+          system(@@ruby, "-w", "-rpp", "--enable=gems", "-I", lib, "-C", dir, "-I.", "main.rb")
+        end
+        assert_equal "main.rb:1: warning: uplevel\ntest\n", err
+      end
+    end
+  end
+
   def silence_warnings
     old_verbose, $VERBOSE = $VERBOSE, false
     yield
diff --git a/test/mri/runner.rb b/test/mri/runner.rb
index 404504aa389..d8b44644f74 100755
--- a/test/mri/runner.rb
+++ b/test/mri/runner.rb
@@ -20,13 +20,10 @@ class Gem::TestCase < MiniTest::Unit::TestCase
 
 ENV["GEM_SKIP"] = ENV["GEM_HOME"] = ENV["GEM_PATH"] = "".freeze
 
-# Use MRI backtraces for tests that verify error output
-ENV["JRUBY_OPTS"] = ENV["JRUBY_OPTS"].to_s + " -Xbacktrace.style=mri"
-
 require_relative 'lib/profile_test_all' if ENV.has_key?('RUBY_TEST_ALL_PROFILE')
-#require_relative 'lib/tracepointchecker'
+require_relative 'lib/tracepointchecker'
 require_relative 'lib/zombie_hunter'
-#require_relative 'lib/iseq_loader_checker'
+require_relative 'lib/iseq_loader_checker'
 
 if ENV['COVERAGE']
   require_relative "../tool/test-coverage.rb"
diff --git a/test/mri/shell/test_command_processor.rb b/test/mri/shell/test_command_processor.rb
index 51e14b5a695..7e1aa5bce7e 100644
--- a/test/mri/shell/test_command_processor.rb
+++ b/test/mri/shell/test_command_processor.rb
@@ -1,4 +1,5 @@
 # frozen_string_literal: false
+require 'test/unit'
 require 'shell'
 require 'tmpdir'
 
diff --git a/test/mri/socket/test_addrinfo.rb b/test/mri/socket/test_addrinfo.rb
index 132d1723806..a06f3eb451b 100644
--- a/test/mri/socket/test_addrinfo.rb
+++ b/test/mri/socket/test_addrinfo.rb
@@ -102,6 +102,14 @@ def test_addrinfo_predicates
     assert(!ipv4_ai.unix?)
   end
 
+  def test_error_message
+    e = assert_raise_with_message(SocketError, /getaddrinfo:/) do
+      Addrinfo.ip("...")
+    end
+    m = e.message
+    assert_not_equal([false, Encoding::ASCII_8BIT], [m.ascii_only?, m.encoding], proc {m.inspect})
+  end
+
   def test_ipv4_address_predicates
     list = [
       [:ipv4_private?, "10.0.0.0", "10.255.255.255",
diff --git a/test/mri/socket/test_basicsocket.rb b/test/mri/socket/test_basicsocket.rb
index d388b4f0dd6..c8e9b23f839 100644
--- a/test/mri/socket/test_basicsocket.rb
+++ b/test/mri/socket/test_basicsocket.rb
@@ -161,6 +161,7 @@ def test_read_write_nonblock
       if ssock.respond_to?(:nonblock?)
         assert_not_predicate(ssock, :nonblock?)
         assert_not_predicate(csock, :nonblock?)
+        csock.nonblock = ssock.nonblock = false
 
         # Linux may use MSG_DONTWAIT to avoid setting O_NONBLOCK
         if RUBY_PLATFORM.match?(/linux/) && Socket.const_defined?(:MSG_DONTWAIT)
diff --git a/test/mri/socket/test_socket.rb b/test/mri/socket/test_socket.rb
index 126f7894926..e07c1d633ff 100644
--- a/test/mri/socket/test_socket.rb
+++ b/test/mri/socket/test_socket.rb
@@ -456,6 +456,34 @@ def test_linger
     }
   end
 
+  def timestamp_retry_rw(s1, s2, t1, type)
+    IO.pipe do |r,w|
+      # UDP may not be reliable, keep sending until recvmsg returns:
+      th = Thread.new do
+        n = 0
+        begin
+          s2.send("a", 0, s1.local_address)
+          n += 1
+        end while IO.select([r], nil, nil, 0.1).nil?
+        n
+      end
+      assert_equal([[s1],[],[]], IO.select([s1], nil, nil, 30))
+      msg, _, _, stamp = s1.recvmsg
+      assert_equal("a", msg)
+      assert(stamp.cmsg_is?(:SOCKET, type))
+      w.close # stop th
+      n = th.value
+      n > 1 and
+        warn "UDP packet loss for #{type} over loopback, #{n} tries needed"
+      t2 = Time.now.strftime("%Y-%m-%d")
+      pat = Regexp.union([t1, t2].uniq)
+      assert_match(pat, stamp.inspect)
+      t = stamp.timestamp
+      assert_match(pat, t.strftime("%Y-%m-%d"))
+      stamp
+    end
+  end
+
   def test_timestamp
     return if /linux|freebsd|netbsd|openbsd|solaris|darwin/ !~ RUBY_PLATFORM
     return if !defined?(Socket::AncillaryData) || !defined?(Socket::SO_TIMESTAMP)
@@ -464,17 +492,10 @@ def test_timestamp
     Addrinfo.udp("127.0.0.1", 0).bind {|s1|
       Addrinfo.udp("127.0.0.1", 0).bind {|s2|
         s1.setsockopt(:SOCKET, :TIMESTAMP, true)
-        s2.send "a", 0, s1.local_address
-        msg, _, _, stamp = s1.recvmsg
-        assert_equal("a", msg)
-        assert(stamp.cmsg_is?(:SOCKET, :TIMESTAMP))
+        stamp = timestamp_retry_rw(s1, s2, t1, :TIMESTAMP)
       }
     }
-    t2 = Time.now.strftime("%Y-%m-%d")
-    pat = Regexp.union([t1, t2].uniq)
-    assert_match(pat, stamp.inspect)
     t = stamp.timestamp
-    assert_match(pat, t.strftime("%Y-%m-%d"))
     pat = /\.#{"%06d" % t.usec}/
     assert_match(pat, stamp.inspect)
   end
@@ -491,17 +512,10 @@ def test_timestampns
           # SO_TIMESTAMPNS is available since Linux 2.6.22
           return
         end
-        s2.send "a", 0, s1.local_address
-        msg, _, _, stamp = s1.recvmsg
-        assert_equal("a", msg)
-        assert(stamp.cmsg_is?(:SOCKET, :TIMESTAMPNS))
+        stamp = timestamp_retry_rw(s1, s2, t1, :TIMESTAMPNS)
       }
     }
-    t2 = Time.now.strftime("%Y-%m-%d")
-    pat = Regexp.union([t1, t2].uniq)
-    assert_match(pat, stamp.inspect)
     t = stamp.timestamp
-    assert_match(pat, t.strftime("%Y-%m-%d"))
     pat = /\.#{"%09d" % t.nsec}/
     assert_match(pat, stamp.inspect)
   end
diff --git a/test/mri/socket/test_udp.rb b/test/mri/socket/test_udp.rb
index bec21819189..f060b65f2c9 100644
--- a/test/mri/socket/test_udp.rb
+++ b/test/mri/socket/test_udp.rb
@@ -20,9 +20,13 @@ def test_inspect
       assert_match(/AF_INET\b/, sock.inspect)
     }
     if Socket.const_defined?(:AF_INET6)
-      UDPSocket.open(Socket::AF_INET6) {|sock|
-        assert_match(/AF_INET6\b/, sock.inspect)
-      }
+      begin
+        UDPSocket.open(Socket::AF_INET6) {|sock|
+          assert_match(/AF_INET6\b/, sock.inspect)
+        }
+      rescue Errno::EAFNOSUPPORT
+        skip 'AF_INET6 not supported by kernel'
+      end
     end
   end
 
diff --git a/test/mri/stringio/test_stringio.rb b/test/mri/stringio/test_stringio.rb
index f5169f641a9..6d1a6ea8d53 100644
--- a/test/mri/stringio/test_stringio.rb
+++ b/test/mri/stringio/test_stringio.rb
@@ -452,6 +452,10 @@ def test_ungetbyte
     t.ungetbyte("\u{30eb 30d3 30fc}")
     assert_equal(0, t.pos)
     assert_equal("\u{30eb 30d3 30fc}\u7d05\u7389bar\n", s)
+
+    assert_nothing_raised {t.ungetbyte(-1)}
+    assert_nothing_raised {t.ungetbyte(256)}
+    assert_nothing_raised {t.ungetbyte(1<<64)}
   end
 
   def test_ungetc
@@ -722,9 +726,10 @@ def test_frozen
     s = StringIO.new
     s.freeze
     bug = '[ruby-core:33648]'
-    assert_raise(FrozenError, bug) {s.puts("foo")}
-    assert_raise(FrozenError, bug) {s.string = "foo"}
-    assert_raise(FrozenError, bug) {s.reopen("")}
+    exception_class = defined?(FrozenError) ? FrozenError : RuntimeError
+    assert_raise(exception_class, bug) {s.puts("foo")}
+    assert_raise(exception_class, bug) {s.string = "foo"}
+    assert_raise(exception_class, bug) {s.reopen("")}
   end
 
   def test_frozen_string
diff --git a/test/mri/test_cmath.rb b/test/mri/test_cmath.rb
index f0d87183150..b3692bc7cfe 100644
--- a/test/mri/test_cmath.rb
+++ b/test/mri/test_cmath.rb
@@ -3,7 +3,18 @@
 require 'cmath'
 
 class TestCMath < Test::Unit::TestCase
+  def test_deprecated_method
+    orig = $VERBOSE
+    $VERBOSE = true
+    assert_warning(/CMath#sqrt! is deprecated; use CMath#sqrt or Math#sqrt/) do
+      CMath.sqrt!(1)
+    end
+    assert_equal CMath.sqrt(1), CMath.sqrt!(1)
+    $VERBOSE = orig
+  end
+
   def test_sqrt
+    assert_equal 1, CMath.sqrt(1)
     assert_equal CMath.sqrt(1i), CMath.sqrt(1.0i), '[ruby-core:31672]'
     assert_equal Complex(0,2), CMath.sqrt(-4.0)
     assert_equal Complex(0,2), CMath.sqrt(-4)
@@ -13,6 +24,7 @@ def test_sqrt
     assert_equal Complex(0,3), CMath.sqrt(Rational(-9))
     assert_in_delta (1.272019649514069+0.7861513777574233i), CMath.sqrt(1+2i)
     assert_in_delta 3.0i, CMath.sqrt(-9)
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.sqrt("1") }
   end
 
   def test_log
@@ -24,6 +36,13 @@ def test_log
   end
 
   def test_trigonometric_functions
+    assert_equal 0, CMath.asin(0)
+    assert_equal 0, CMath.acos(1)
+    assert_equal 0, CMath.atan(0)
+    assert_equal 0, CMath.asinh(0)
+    assert_equal 0, CMath.acosh(1)
+    assert_equal 0, CMath.atanh(0)
+
     assert_in_delta CMath.sinh(2).i, CMath.sin(2i)
     assert_in_delta CMath.cosh(2),   CMath.cos(2i)
     assert_in_delta CMath.tanh(2).i, CMath.tan(2i)
@@ -52,14 +71,37 @@ def test_trigonometric_functions
     assert_in_delta (1.4693517443681852+1.0634400235777521i),   CMath.asinh(1+2i)
     assert_in_delta (1.528570919480998+1.1437177404024204i),    CMath.acosh(1+2i)
     assert_in_delta (0.17328679513998635+1.1780972450961724i),  CMath.atanh(1+2i)
+
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.sin("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.cos("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.tan("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.sinh("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.cosh("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.tanh("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.asin("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.atan("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.asinh("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.acosh("0") }
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.atanh("0") }
   end
 
   def test_functions
+    assert_equal (1),                                          CMath.exp(0)
     assert_in_delta (-1.1312043837568135+2.4717266720048188i), CMath.exp(1+2i)
     assert_in_delta (-1),                                      CMath.exp(Math::PI.i)
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.exp("0") }
+
+    assert_equal (0),                                          CMath.log2(1)
     assert_in_delta (1.1609640474436813+1.5972779646881088i),  CMath.log2(1+2i)
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.log2("1") }
+
+    assert_equal (0),                                          CMath.log10(1)
     assert_in_delta (0.3494850021680094+0.480828578784234i),   CMath.log10(1+2i)
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.log10("1") }
+
+    assert_equal (0),                                          CMath.atan2(0,1)
     assert_in_delta (1.3389725222944935+0.4023594781085251i),  CMath.atan2(1+2i,1)
+    assert_raise_with_message(TypeError, "Numeric Number required") { CMath.atan2("0", 1) }
   end
 
   def test_error_handling
diff --git a/test/mri/test_find.rb b/test/mri/test_find.rb
index 01b1fcc1212..0e691214c5d 100644
--- a/test/mri/test_find.rb
+++ b/test/mri/test_find.rb
@@ -104,7 +104,7 @@ def test_countdown3
 
   def test_unreadable_dir
     skip "no meaning test on Windows" if /mswin|mingw/ =~ RUBY_PLATFORM
-    skip if Process.uid == 0 # because root can read anything
+    skip "because root can read anything" if Process.uid == 0
 
     Dir.mktmpdir {|d|
       Dir.mkdir(dir = "#{d}/dir")
diff --git a/test/mri/test_forwardable.rb b/test/mri/test_forwardable.rb
index e48dbfe18f3..b3f8467c5cb 100644
--- a/test/mri/test_forwardable.rb
+++ b/test/mri/test_forwardable.rb
@@ -296,6 +296,14 @@ def test_on_private_method
     end
   end
 
+  def test_non_module
+    str = String.new
+    str.extend Forwardable
+    str.instance_variable_set("@h", 42)
+    str.def_delegator("@h", :to_s, :forty_two)
+    assert_equal("42", str.forty_two)
+  end
+
   private
 
   def forwardable_class(
diff --git a/test/mri/test_ipaddr.rb b/test/mri/test_ipaddr.rb
index eb2c602334f..1aa24ebc543 100644
--- a/test/mri/test_ipaddr.rb
+++ b/test/mri/test_ipaddr.rb
@@ -1,4 +1,4 @@
-# frozen_string_literal: false
+# frozen_string_literal: true
 require 'test/unit'
 require 'ipaddr'
 
diff --git a/test/mri/test_open3.rb b/test/mri/test_open3.rb
index 6011ddd7336..6842ac8d8c4 100644
--- a/test/mri/test_open3.rb
+++ b/test/mri/test_open3.rb
@@ -2,6 +2,7 @@
 
 require 'test/unit'
 require 'open3'
+require_relative 'lib/jit_support'
 
 class TestOpen3 < Test::Unit::TestCase
   RUBY = EnvUtil.rubybin
@@ -54,9 +55,9 @@ def test_noblock
     i.close
     assert_equal("baz", o.read)
   ensure
-    i.close if !i.closed?
-    o.close if !o.closed?
-    e.close if !e.closed?
+    i.close
+    o.close
+    e.close
     t.join
   end
 
@@ -103,8 +104,8 @@ def with_pipe
     r, w = IO.pipe
     yield r, w
   ensure
-    r.close if !r.closed?
-    w.close if !w.closed?
+    r.close
+    w.close
   end
 
   def with_reopen(io, arg)
@@ -113,7 +114,7 @@ def with_reopen(io, arg)
     yield old
   ensure
     io.reopen(old)
-    old.close if old && !old.closed?
+    old.close
   end
 
   def test_popen2
@@ -126,7 +127,7 @@ def test_popen2
           i.close
           STDERR.reopen(old)
           assert_equal("zo", o.read)
-          assert_equal("ze", r.read)
+          assert_equal("ze", JITSupport.remove_mjit_logs(r.read))
         }
       }
     }
@@ -315,4 +316,9 @@ def test_pipeline
     }
   end
 
+  def test_integer_and_symbol_key
+    command = [RUBY, '-e', 'puts "test_integer_and_symbol_key"']
+    out, status = Open3.capture2(*command, :chdir => '.', 2 => IO::NULL)
+    assert_equal("test_integer_and_symbol_key\n", out)
+  end
 end
diff --git a/test/mri/test_pp.rb b/test/mri/test_pp.rb
index 5f8216dcced..d0104651ea9 100644
--- a/test/mri/test_pp.rb
+++ b/test/mri/test_pp.rb
@@ -194,4 +194,13 @@ def test_nothing_raised
   end
 end
 
+class PPAbstractSyntaxTree < Test::Unit::TestCase
+  AST = RubyVM::AbstractSyntaxTree
+  def test_literal
+    ast = AST.parse("1")
+    expected = "(SCOPE@1:0-1:1 tbl: [] args: nil body: (LIT@1:0-1:1 1))"
+    assert_equal(expected, PP.singleline_pp(ast, ''.dup), ast)
+  end
+end
+
 end
diff --git a/test/mri/test_prime.rb b/test/mri/test_prime.rb
index 7ff07eeb6a5..9c793daca05 100644
--- a/test/mri/test_prime.rb
+++ b/test/mri/test_prime.rb
@@ -27,6 +27,15 @@ def test_each
     assert_equal PRIMES, primes
   end
 
+  def test_integer_each_prime
+    primes = []
+    Integer.each_prime(1000) do |p|
+      break if p > 541
+      primes << p
+    end
+    assert_equal PRIMES, primes
+  end
+
   def test_each_by_prime_number_theorem
     3.upto(15) do |i|
       max = 2**i
@@ -124,6 +133,78 @@ def test_prime_each_basic_argument_checking
     assert_raise(ArgumentError) { Prime.prime?(1.2) }
   end
 
+  def test_prime?
+    assert_equal Prime.prime?(1), false
+    assert_equal Prime.prime?(2), true
+    assert_equal Prime.prime?(4), false
+  end
+
+  class TestPseudoPrimeGenerator < Test::Unit::TestCase
+    def test_upper_bound
+      pseudo_prime_generator = Prime::PseudoPrimeGenerator.new(42)
+      assert_equal pseudo_prime_generator.upper_bound, 42
+    end
+
+    def test_succ
+      pseudo_prime_generator = Prime::PseudoPrimeGenerator.new(42)
+      assert_raise(NotImplementedError) { pseudo_prime_generator.succ }
+    end
+
+    def test_next
+      pseudo_prime_generator = Prime::PseudoPrimeGenerator.new(42)
+      assert_raise(NotImplementedError) { pseudo_prime_generator.next }
+    end
+
+    def test_rewind
+      pseudo_prime_generator = Prime::PseudoPrimeGenerator.new(42)
+      assert_raise(NotImplementedError) { pseudo_prime_generator.rewind }
+    end
+  end
+
+  class TestTrialDivisionGenerator < Test::Unit::TestCase
+    # The first 100 prime numbers
+    PRIMES = [
+      2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,
+      41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
+      89, 97, 101, 103, 107, 109, 113, 127, 131,
+      137, 139, 149, 151, 157, 163, 167, 173, 179,
+      181, 191, 193, 197, 199, 211, 223, 227, 229,
+      233, 239, 241, 251, 257, 263, 269, 271, 277,
+      281, 283, 293, 307, 311, 313, 317, 331, 337,
+      347, 349, 353, 359, 367, 373, 379, 383, 389,
+      397, 401, 409, 419, 421, 431, 433, 439, 443,
+      449, 457, 461, 463, 467, 479, 487, 491, 499,
+      503, 509, 521, 523, 541,
+    ]
+
+    def test_each
+      primes = []
+      Prime.each(nil, Prime::TrialDivisionGenerator.new) do |p|
+        break if p > 541
+        primes << p
+      end
+      assert_equal PRIMES, primes
+    end
+
+    def test_rewind
+      generator = Prime::TrialDivisionGenerator.new
+      assert_equal generator.next, 2
+      assert_equal generator.next, 3
+      generator.rewind
+      assert_equal generator.next, 2
+    end
+  end
+
+  class TestGenerator23 < Test::Unit::TestCase
+    def test_rewind
+      generator = Prime::Generator23.new
+      assert_equal generator.next, 2
+      assert_equal generator.next, 3
+      generator.rewind
+      assert_equal generator.next, 2
+    end
+  end
+
   class TestInteger < Test::Unit::TestCase
     def test_prime_division
       pd = PRIMES.inject(&:*).prime_division
diff --git a/test/mri/test_pstore.rb b/test/mri/test_pstore.rb
index 9d9e8565ece..52b74f3775c 100644
--- a/test/mri/test_pstore.rb
+++ b/test/mri/test_pstore.rb
@@ -133,7 +133,7 @@ def test_nested_transaction_raises_error
   def test_pstore_files_are_accessed_as_binary_files
     bug5311 = '[ruby-core:39503]'
     n = 128
-    assert_in_out_err(["-Eutf-8:utf-8", "-rpstore", "-", @pstore_file], <<-SRC, [bug5311], [], bug5311, timeout: 15)
+    assert_in_out_err(["-Eutf-8:utf-8", "-rpstore", "-", @pstore_file], <<-SRC, [bug5311], [], bug5311, timeout: 30)
       @pstore = PStore.new(ARGV[0])
       (1..#{n}).each do |i|
         @pstore.transaction {@pstore["Key\#{i}"] = "value \#{i}"}
diff --git a/test/mri/test_pty.rb b/test/mri/test_pty.rb
index cedf00f9189..9e40a3d2fb0 100644
--- a/test/mri/test_pty.rb
+++ b/test/mri/test_pty.rb
@@ -18,8 +18,8 @@ def test_spawn_without_block
   else
     assert_equal("a\r\n", r.gets)
   ensure
-    r.close if r
-    w.close if w
+    r&.close
+    w&.close
     Process.wait pid if pid
   end
 
@@ -196,7 +196,6 @@ def test_pty_check_default
   rescue RuntimeError
     skip $!
   else
-    assert_equal(pid, st1.pid) if st1
     assert_nil(st1)
     assert_equal(pid, st2.pid)
   end
@@ -215,7 +214,6 @@ def test_pty_check_raise
   rescue RuntimeError
     skip $!
   else
-    assert_equal(pid, st1.pid) if st1
     assert_nil(st1)
     assert_equal(pid, st2.pid)
   end
@@ -239,4 +237,3 @@ def test_cloexec
     skip $!
   end
 end if defined? PTY
-
diff --git a/test/mri/test_set.rb b/test/mri/test_set.rb
index 4c6730d141e..b20920e63ec 100644
--- a/test/mri/test_set.rb
+++ b/test/mri/test_set.rb
@@ -545,6 +545,24 @@ def test_select!
     assert_equal(Set.new(1..10), set)
   end
 
+  def test_filter!
+    set = Set.new(1..10)
+    ret = set.filter! { |i| i <= 10 }
+    assert_equal(nil, ret)
+    assert_equal(Set.new(1..10), set)
+
+    set = Set.new(1..10)
+    ret = set.filter! { |i| i % 3 != 0 }
+    assert_same(set, ret)
+    assert_equal(Set[1,2,4,5,7,8,10], set)
+
+    set = Set.new(1..10)
+    enum = set.filter!
+    assert_equal(set.size, enum.size)
+    assert_equal(nil, enum.each { |i| i <= 10 })
+    assert_equal(Set.new(1..10), set)
+  end
+
   def test_merge
     set = Set[1,2,3]
 
diff --git a/test/mri/test_sync.rb b/test/mri/test_sync.rb
new file mode 100644
index 00000000000..e3294ff8248
--- /dev/null
+++ b/test/mri/test_sync.rb
@@ -0,0 +1,69 @@
+# frozen_string_literal: false
+require 'test/unit'
+require 'sync'
+require 'timeout'
+
+class SyncTest < Test::Unit::TestCase
+  class Tester
+    include Sync_m
+  end
+
+  def test_sync_lock_and_wakeup
+    tester = Tester.new
+
+    tester.sync_lock(:EX)
+
+    t = Thread.new { tester.sync_lock(:EX) }
+
+    sleep 0.1 until t.stop?
+    t.wakeup
+    sleep 0.1 until t.stop?
+
+    assert_equal(tester.sync_waiting.uniq, tester.sync_waiting)
+  ensure
+    t.kill
+    t.join
+  end
+
+  def test_sync_upgrade_and_wakeup
+    tester = Tester.new
+    tester.sync_lock(:SH)
+
+    t = Thread.new do
+      tester.sync_lock(:SH)
+      tester.sync_lock(:EX)
+    end
+
+    sleep 0.1 until t.stop?
+    t.wakeup
+    sleep 0.1 until t.stop?
+
+    tester.sync_upgrade_waiting.each { |ary|
+      assert(!tester.sync_waiting.include?(ary[0]))
+    }
+    assert_equal(tester.sync_waiting.uniq, tester.sync_waiting)
+    assert_equal(tester.sync_waiting, [])
+  ensure
+    t.kill
+    t.join
+  end
+
+  def test_sync_lock_and_raise
+    tester= Tester.new
+    tester.sync_lock(:EX)
+
+    t = Thread.new {
+      assert_raise(RuntimeError) {
+        tester.sync_lock(:EX)
+      }
+    }
+
+    sleep 0.1 until t.stop?
+    sleep 1 if RubyVM::MJIT.enabled? # t.stop? behaves unexpectedly with --jit-wait
+    t.raise
+    t.join
+
+    assert_equal(tester.sync_waiting.uniq, tester.sync_waiting)
+    assert_equal(tester.sync_waiting, [])
+  end
+end
diff --git a/test/mri/test_tempfile.rb b/test/mri/test_tempfile.rb
index fb1027ba788..f87b3100101 100644
--- a/test/mri/test_tempfile.rb
+++ b/test/mri/test_tempfile.rb
@@ -38,6 +38,8 @@ def test_saves_in_dir_tmpdir_by_default
     assert_nothing_raised(SecurityError, bug3733) {
       proc {$SAFE = 1; File.expand_path(Dir.tmpdir)}.call
     }
+  ensure
+    $SAFE = 0
   end
 
   def test_saves_in_given_directory
@@ -359,7 +361,7 @@ def test_create_without_block
     f.close
     assert_file.exist?(path)
   ensure
-    f.close if f && !f.closed?
+    f&.close
     File.unlink path if path
   end
 
@@ -406,7 +408,7 @@ def test_new_traversal_dir
 
   def test_create_traversal_dir
     expect = Dir.glob(TRAVERSAL_PATH + '*').count
-    Tempfile.create(TRAVERSAL_PATH + 'foo')
+    t = Tempfile.create(TRAVERSAL_PATH + 'foo')
     actual = Dir.glob(TRAVERSAL_PATH + '*').count
     assert_equal expect, actual
   rescue Errno::EINVAL
@@ -415,5 +417,13 @@ def test_create_traversal_dir
     else
       raise $!
     end
+<<<<<<< HEAD
+  ensure
+    if t
+      t.close
+      File.unlink(t.path)
+    end
+=======
+>>>>>>> master
   end
 end
diff --git a/test/mri/test_time.rb b/test/mri/test_time.rb
index 26a7daaf2ab..fb30bea7230 100644
--- a/test/mri/test_time.rb
+++ b/test/mri/test_time.rb
@@ -495,6 +495,20 @@ def test_strptime_Ymd_z
     assert_equal(true, t.utc?)
   end
 
+  def test_strptime_j
+    t = Time.strptime("2018-365", "%Y-%j")
+    assert_equal(2018, t.year)
+    assert_equal(12, t.mon)
+    assert_equal(31, t.day)
+    assert_equal(0, t.hour)
+    assert_equal(0, t.min)
+    assert_equal(0, t.sec)
+    t = Time.strptime("2018-091", "%Y-%j")
+    assert_equal(2018, t.year)
+    assert_equal(4, t.mon)
+    assert_equal(1, t.day)
+  end
+
   def test_nsec
     assert_equal(123456789, Time.parse("2000-01-01T00:00:00.123456789+00:00").tv_nsec)
   end
@@ -513,4 +527,23 @@ def test_huge_precision
     define_method(test) {__send__(sub, :xmlschema)}
     define_method(test.sub(/xmlschema/, 'iso8601')) {__send__(sub, :iso8601)}
   end
+
+  def test_parse_with_various_object
+    d  = Date.new(2010, 10, 28)
+    dt = DateTime.new(2010, 10, 28)
+    md = MyDate.new(10, 28, 2010)
+
+    t = Time.local(2010, 10, 28, 21, 26, 00)
+    assert_equal(t, Time.parse("21:26",  d))
+    assert_equal(t, Time.parse("21:26", dt))
+    assert_equal(t, Time.parse("21:26", md))
+  end
+
+  class MyDate
+    attr_reader :mon, :day, :year
+
+    def initialize(mon, day, year)
+      @mon, @day, @year = mon, day, year
+    end
+  end
 end
diff --git a/test/mri/test_tmpdir.rb b/test/mri/test_tmpdir.rb
index fffec94788d..1e633d233bd 100644
--- a/test/mri/test_tmpdir.rb
+++ b/test/mri/test_tmpdir.rb
@@ -20,6 +20,8 @@ def test_tmpdir_modifiable_safe
       tmpdir << "foo"
       assert_equal(tmpdir_org, Dir.tmpdir)
     }.join
+  ensure
+    $SAFE = 0
   end
 
   def test_world_writable
@@ -68,15 +70,17 @@ def test_mktmpdir_nil
 
   def test_mktmpdir_traversal
     expect = Dir.glob(TRAVERSAL_PATH + '*').count
-    Dir.mktmpdir(TRAVERSAL_PATH + 'foo')
-    actual = Dir.glob(TRAVERSAL_PATH + '*').count
-    assert_equal expect, actual
+    Dir.mktmpdir(TRAVERSAL_PATH + 'foo') do
+      actual = Dir.glob(TRAVERSAL_PATH + '*').count
+      assert_equal expect, actual
+    end
   end
 
   def test_mktmpdir_traversal_array
     expect = Dir.glob(TRAVERSAL_PATH + '*').count
-    Dir.mktmpdir([TRAVERSAL_PATH, 'foo'])
-    actual = Dir.glob(TRAVERSAL_PATH + '*').count
-    assert_equal expect, actual
+    Dir.mktmpdir([TRAVERSAL_PATH, 'foo']) do
+      actual = Dir.glob(TRAVERSAL_PATH + '*').count
+      assert_equal expect, actual
+    end
   end
 end
diff --git a/test/mri/test_unicode_normalize.rb b/test/mri/test_unicode_normalize.rb
index 347741dcb26..0346b4c6293 100644
--- a/test/mri/test_unicode_normalize.rb
+++ b/test/mri/test_unicode_normalize.rb
@@ -9,10 +9,11 @@
 class TestUnicodeNormalize < Test::Unit::TestCase
 
   UNICODE_VERSION = RbConfig::CONFIG['UNICODE_VERSION']
-  UNICODE_DATA_PATH = "../enc/unicode/data/#{UNICODE_VERSION}"
+  path = File.expand_path("../enc/unicode/data/#{UNICODE_VERSION}", __dir__)
+  UNICODE_DATA_PATH = File.directory?("#{path}/ucd") ? "#{path}/ucd" : path
 
   def self.expand_filename(basename)
-    File.expand_path("#{UNICODE_DATA_PATH}/#{basename}.txt", __dir__)
+    File.expand_path("#{basename}.txt", UNICODE_DATA_PATH)
   end
 end
 
@@ -145,7 +146,9 @@ def self.generate_test_check_false(source, compare, normalization)
   generate_test_check_false :NFC, :NFKC, :nfkc
   generate_test_check_false :NFD, :NFKC, :nfkc
   generate_test_check_false :NFKD, :NFKC, :nfkc
+end
 
+class TestUnicodeNormalize
   def test_non_UTF_8
     assert_equal "\u1E0A".encode('UTF-16BE'), "D\u0307".encode('UTF-16BE').unicode_normalize(:nfc)
     assert_equal true, "\u1E0A".encode('UTF-16BE').unicode_normalized?(:nfc)
@@ -164,6 +167,13 @@ def test_partial_jamo_decompose
     assert_equal "\u1100\u1161\u11A8", "\uAC00\u11A8".unicode_normalize(:nfd)
   end
 
+  # preventive tests for (non-)bug #14934
+  def test_no_trailing_jamo
+    assert_equal "\u1100\u1176\u11a8", "\u1100\u1176\u11a8".unicode_normalize(:nfc)
+    assert_equal "\uae30\u11a7",       "\u1100\u1175\u11a7".unicode_normalize(:nfc)
+    assert_equal "\uae30\u11c3",       "\u1100\u1175\u11c3".unicode_normalize(:nfc)
+  end
+
   def test_hangul_plus_accents
     assert_equal "\uAC00\u0323\u0300", "\uAC00\u0300\u0323".unicode_normalize(:nfc)
     assert_equal "\uAC00\u0323\u0300", "\u1100\u1161\u0300\u0323".unicode_normalize(:nfc)
@@ -177,6 +187,10 @@ def test_raise_exception_for_non_unicode_encoding
     assert_raise(Encoding::CompatibilityError) { "abc".force_encoding('ISO-8859-1').unicode_normalized? }
   end
 
+  def test_reiwa
+    assert_equal "\u4EE4\u548C", "\u32FF".unicode_normalize(:nfkc)
+  end
+
   def test_us_ascii
     ascii_string = 'abc'.encode('US-ASCII')
 
diff --git a/test/mri/test_win32api.rb b/test/mri/test_win32api.rb
index 6e39ca3360b..f135964a27b 100644
--- a/test/mri/test_win32api.rb
+++ b/test/mri/test_win32api.rb
@@ -1,8 +1,11 @@
 # frozen_string_literal: false
 require "test/unit"
 begin
+  $VERBOSE, verbose = nil, $VERBOSE
   require "Win32API"
 rescue LoadError
+ensure
+  $VERBOSE = verbose
 end
 
 class TestWin32API < Test::Unit::TestCase
diff --git a/test/mri/testunit/test_parallel.rb b/test/mri/testunit/test_parallel.rb
index fea46787b57..2e5ad86733d 100644
--- a/test/mri/testunit/test_parallel.rb
+++ b/test/mri/testunit/test_parallel.rb
@@ -5,6 +5,8 @@
 module TestParallel
   PARALLEL_RB = "#{File.dirname(__FILE__)}/../lib/test/unit/parallel.rb"
   TESTS = "#{File.dirname(__FILE__)}/tests_for_parallel"
+  # use large timeout for --jit-wait
+  TIMEOUT = EnvUtil.apply_timeout_scale(RubyVM::MJIT.enabled? ? 100 : 10)
 
   class TestParallelWorker < Test::Unit::TestCase
     def setup
@@ -43,7 +45,7 @@ def teardown
     end
 
     def test_run
-      Timeout.timeout(10) do
+      Timeout.timeout(TIMEOUT) do
         assert_match(/^ready/,@worker_out.gets)
         @worker_in.puts "run #{TESTS}/ptest_first.rb test"
         assert_match(/^okay/,@worker_out.gets)
@@ -55,7 +57,7 @@ def test_run
     end
 
     def test_run_multiple_testcase_in_one_file
-      Timeout.timeout(10) do
+      Timeout.timeout(TIMEOUT) do
         assert_match(/^ready/,@worker_out.gets)
         @worker_in.puts "run #{TESTS}/ptest_second.rb test"
         assert_match(/^okay/,@worker_out.gets)
@@ -70,7 +72,7 @@ def test_run_multiple_testcase_in_one_file
     end
 
     def test_accept_run_command_multiple_times
-      Timeout.timeout(10) do
+      Timeout.timeout(TIMEOUT) do
         assert_match(/^ready/,@worker_out.gets)
         @worker_in.puts "run #{TESTS}/ptest_first.rb test"
         assert_match(/^okay/,@worker_out.gets)
@@ -91,7 +93,7 @@ def test_accept_run_command_multiple_times
     end
 
     def test_p
-      Timeout.timeout(10) do
+      Timeout.timeout(TIMEOUT) do
         @worker_in.puts "run #{TESTS}/ptest_first.rb test"
         while buf = @worker_out.gets
           break if /^p (.+?)$/ =~ buf
@@ -101,7 +103,7 @@ def test_p
     end
 
     def test_done
-      Timeout.timeout(10) do
+      Timeout.timeout(TIMEOUT) do
         @worker_in.puts "run #{TESTS}/ptest_forth.rb test"
         while buf = @worker_out.gets
           break if /^done (.+?)$/ =~ buf
@@ -124,7 +126,7 @@ def test_done
     end
 
     def test_quit
-      Timeout.timeout(10) do
+      Timeout.timeout(TIMEOUT) do
         @worker_in.puts "quit"
         assert_match(/^bye$/m,@worker_out.read)
       end
@@ -150,7 +152,7 @@ def teardown
       rescue Timeout::Error
         Process.kill(:KILL, @test_pid) if @test_pid
       ensure
-        @test_out.close if @test_out
+        @test_out&.close
       end
     end
 
@@ -160,41 +162,42 @@ def test_ignore_jzero
                         "--ruby", @options[:ruby].join(" "),
                         "-j","0", out: File::NULL, err: o)
       o.close
-      Timeout.timeout(10) {
+      Timeout.timeout(TIMEOUT) {
         assert_match(/Error: parameter of -j option should be greater than 0/,@test_out.read)
       }
     end
 
     def test_should_run_all_without_any_leaks
       spawn_runner
-      buf = Timeout.timeout(10) {@test_out.read}
+      buf = Timeout.timeout(TIMEOUT) {@test_out.read}
       assert_match(/^9 tests/,buf)
     end
 
     def test_should_retry_failed_on_workers
       spawn_runner
-      buf = Timeout.timeout(10) {@test_out.read}
+      buf = Timeout.timeout(TIMEOUT) {@test_out.read}
       assert_match(/^Retrying\.+$/,buf)
     end
 
     def test_no_retry_option
       spawn_runner "--no-retry"
-      buf = Timeout.timeout(10) {@test_out.read}
+      buf = Timeout.timeout(TIMEOUT) {@test_out.read}
       refute_match(/^Retrying\.+$/,buf)
       assert_match(/^ +\d+\) Failure:\nTestD#test_fail_at_worker/,buf)
     end
 
     def test_jobs_status
       spawn_runner "--jobs-status"
-      buf = Timeout.timeout(10) {@test_out.read}
+      buf = Timeout.timeout(TIMEOUT) {@test_out.read}
       assert_match(/\d+=ptest_(first|second|third|forth) */,buf)
     end
 
     def test_separate
       # this test depends to --jobs-status
       spawn_runner "--jobs-status", "--separate"
-      buf = Timeout.timeout(10) {@test_out.read}
-      assert(buf.scan(/(\d+?)[:=]/).flatten.uniq.size > 1)
+      buf = Timeout.timeout(TIMEOUT) {@test_out.read}
+      assert(buf.scan(/^\[\s*\d+\/\d+\]\s*(\d+?)=/).flatten.uniq.size > 1,
+             message("retried tests should run in different processes") {buf})
     end
   end
 end
diff --git a/test/mri/uri/test_file.rb b/test/mri/uri/test_file.rb
new file mode 100644
index 00000000000..7e542b652da
--- /dev/null
+++ b/test/mri/uri/test_file.rb
@@ -0,0 +1,67 @@
+# frozen_string_literal: false
+require 'test/unit'
+require 'uri/file'
+
+class URI::TestFile < Test::Unit::TestCase
+  def test_parse
+    u = URI("file://example.com/file")
+    assert_equal "/file", u.path
+
+    u = URI("file://localhost/file")
+    assert_equal "/file", u.path
+    assert_equal "file:///file", u.to_s
+
+    u = URI("file://localhost:30/file")
+    assert_equal "", u.host
+    assert_equal nil, u.port
+    assert_equal "/file", u.path
+    assert_equal "file:///file", u.to_s
+
+    u = URI("file:///file")
+    assert_equal "/file", u.path
+    assert_equal "file:///file", u.to_s
+
+    u = URI("file:/file")
+    assert_equal "/file", u.path
+    assert_equal "file:///file", u.to_s
+
+    u = URI("file://foo:pass@example.com/file")
+    assert_equal "/file", u.path
+    assert_equal nil, u.user
+    assert_equal nil, u.password
+
+    u = URI("file:///c:/path/to/file")
+    assert_equal "/c:/path/to/file", u.path
+
+    # this form is not supported
+    u = URI("file:c:/path/to/file")
+    assert_equal "c:/path/to/file", u.opaque
+
+  end
+
+  def test_build
+    u = URI::File.build(scheme: "file", host: "example.com", path:"/file")
+    assert_equal "/file", u.path
+    assert_equal "file://example.com/file", u.to_s
+    assert_raise(URI::InvalidURIError){ u.user = "foo" }
+    assert_raise(URI::InvalidURIError){ u.password = "foo" }
+    assert_raise(URI::InvalidURIError){ u.userinfo = "foo" }
+    assert_raise(URI::InvalidURIError){ URI::File.build(scheme: "file", userinfo: "foo", host: "example.com", path:"/file") }
+
+    u = URI::File.build(scheme: "file", path:"/file")
+    assert_equal "", u.host
+    assert_equal "/file", u.path
+    assert_equal "file:///file", u.to_s
+
+    u = URI::File.build(scheme: "file", host: "localhost", path:"/file")
+    assert_equal "", u.host
+    assert_equal "/file", u.path
+    assert_equal "file:///file", u.to_s
+
+    u = URI::File.build(scheme: "file", path:"/file", port: 30)
+    assert_equal "", u.host
+    assert_equal nil, u.port
+    assert_equal "/file", u.path
+    assert_equal "file:///file", u.to_s
+  end
+end
diff --git a/test/mri/uri/test_generic.rb b/test/mri/uri/test_generic.rb
index 7e428aa849b..c850eb02d10 100644
--- a/test/mri/uri/test_generic.rb
+++ b/test/mri/uri/test_generic.rb
@@ -774,6 +774,24 @@ def test_set_scheme
     assert_equal 'http://example', uri.to_s
   end
 
+  def test_hierarchical
+    hierarchical = URI.parse('http://a.b.c/example')
+    opaque = URI.parse('mailto:mduerst@ifi.unizh.ch')
+
+    assert hierarchical.hierarchical?
+    refute opaque.hierarchical?
+  end
+
+  def test_absolute
+    abs_uri = URI.parse('http://a.b.c/')
+    not_abs = URI.parse('a.b.c')
+
+    refute not_abs.absolute?
+
+    assert abs_uri.absolute
+    assert abs_uri.absolute?
+  end
+
   def test_ipv6
     assert_equal("[::1]", URI("http://[::1]/bar/baz").host)
     assert_equal("::1", URI("http://[::1]/bar/baz").hostname)
@@ -880,7 +898,7 @@ def getaddress(host)
       assert_nil(URI("http://www.example.org/").find_proxy(env))
     }
     with_proxy_env('http_proxy'=>'http://127.0.0.1:8080', 'no_proxy'=>'.example.org') {|env|
-      assert_nil(URI("http://example.org/").find_proxy(env))
+      assert_equal(URI('http://127.0.0.1:8080'), URI("http://example.org/").find_proxy(env))
       assert_nil(URI("http://www.example.org/").find_proxy(env))
     }
   end
@@ -922,7 +940,13 @@ def test_use_proxy_p
       ['example.com', nil, 80, 'example.com:80', false],
       ['example.com', nil, 80, 'example.org,example.com:80,example.net', false],
       ['foo.example.com', nil, 80, 'example.com', false],
+      ['foo.example.com', nil, 80, '.example.com', false],
+      ['example.com', nil, 80, '.example.com', true],
+      ['xample.com', nil, 80, '.example.com', true],
+      ['fooexample.com', nil, 80, '.example.com', true],
       ['foo.example.com', nil, 80, 'example.com:80', false],
+      ['foo.eXample.com', nil, 80, 'example.com:80', false],
+      ['foo.example.com', nil, 80, 'eXample.com:80', false],
       ['foo.example.com', nil, 80, 'example.com:443', true],
       ['127.0.0.1', '127.0.0.1', 80, '10.224.0.0/22', true],
       ['10.224.1.1', '10.224.1.1', 80, '10.224.1.1', false],
diff --git a/test/mri/uri/test_parser.rb b/test/mri/uri/test_parser.rb
index 757ac86c746..088628a3fb1 100644
--- a/test/mri/uri/test_parser.rb
+++ b/test/mri/uri/test_parser.rb
@@ -45,4 +45,12 @@ def test_raise_bad_uri_for_integer
       URI.parse(1)
     end
   end
+
+  def test_unescape
+    p1 = URI::Parser.new
+    assert_equal("\xe3\x83\x90", p1.unescape("\xe3\x83\x90"))
+    assert_equal("\xe3\x83\x90", p1.unescape('%e3%83%90'))
+    assert_equal("\u3042", p1.unescape('%e3%81%82'.force_encoding(Encoding::US_ASCII)))
+    assert_equal("\xe3\x83\x90\xe3\x83\x90", p1.unescape("\xe3\x83\x90%e3%83%90"))
+  end
 end
diff --git a/test/mri/webrick/test_filehandler.rb b/test/mri/webrick/test_filehandler.rb
index 99bc1420b8e..70950381893 100644
--- a/test/mri/webrick/test_filehandler.rb
+++ b/test/mri/webrick/test_filehandler.rb
@@ -98,7 +98,7 @@ def test_filehandler
     config = { :DocumentRoot => File.dirname(__FILE__), }
     this_file = File.basename(__FILE__)
     filesize = File.size(__FILE__)
-    this_data = File.open(__FILE__, "rb") {|f| f.read}
+    this_data = File.binread(__FILE__)
     range = nil
     bug2593 = '[ruby-dev:40030]'
 
@@ -114,7 +114,7 @@ def test_filehandler
       http.request(req){|res|
         assert_equal("200", res.code, log.call)
         assert_equal("text/plain", res.content_type, log.call)
-        assert_equal(File.read(__FILE__), res.body, log.call)
+        assert_equal(this_data, res.body, log.call)
       }
 
       req = Net::HTTP::Get.new("/#{this_file}", "range"=>"bytes=#{filesize-100}-")
diff --git a/test/mri/webrick/test_htgroup.rb b/test/mri/webrick/test_htgroup.rb
new file mode 100644
index 00000000000..8749711df5f
--- /dev/null
+++ b/test/mri/webrick/test_htgroup.rb
@@ -0,0 +1,19 @@
+require "tempfile"
+require "test/unit"
+require "webrick/httpauth/htgroup"
+
+class TestHtgroup < Test::Unit::TestCase
+  def test_htgroup
+    Tempfile.create('test_htgroup') do |tmpfile|
+      tmpfile.close
+      tmp_group = WEBrick::HTTPAuth::Htgroup.new(tmpfile.path)
+      tmp_group.add 'superheroes', %w[spiderman batman]
+      tmp_group.add 'supervillains', %w[joker]
+      tmp_group.flush
+
+      htgroup = WEBrick::HTTPAuth::Htgroup.new(tmpfile.path)
+      assert_equal(htgroup.members('superheroes'), %w[spiderman batman])
+      assert_equal(htgroup.members('supervillains'), %w[joker])
+    end
+  end
+end
diff --git a/test/mri/webrick/test_httpauth.rb b/test/mri/webrick/test_httpauth.rb
index e407dd494f7..3bdba625c1f 100644
--- a/test/mri/webrick/test_httpauth.rb
+++ b/test/mri/webrick/test_httpauth.rb
@@ -37,56 +37,7 @@ def test_basic_auth
     }
   end
 
-  def test_basic_auth2
-    log_tester = lambda {|log, access_log|
-      log.reject! {|line| /\A\s*\z/ =~ line }
-      pats = [
-        /ERROR Basic WEBrick's realm: webrick: password unmatch\./,
-        /ERROR WEBrick::HTTPStatus::Unauthorized/
-      ]
-      pats.each {|pat|
-        assert(!log.grep(pat).empty?, "webrick log doesn't have expected error: #{pat.inspect}")
-        log.reject! {|line| pat =~ line }
-      }
-      assert_equal([], log)
-    }
-    TestWEBrick.start_httpserver({}, log_tester) {|server, addr, port, log|
-      realm = "WEBrick's realm"
-      path = "/basic_auth2"
-
-      Tempfile.create("test_webrick_auth") {|tmpfile|
-        tmpfile.close
-        tmp_pass = WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path)
-        tmp_pass.set_passwd(realm, "webrick", "supersecretpassword")
-        tmp_pass.set_passwd(realm, "foo", "supersecretpassword")
-        tmp_pass.flush
-
-        htpasswd = WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path)
-        users = []
-        htpasswd.each{|user, pass| users << user }
-        assert_equal(2, users.size, log.call)
-        assert(users.member?("webrick"), log.call)
-        assert(users.member?("foo"), log.call)
-
-        server.mount_proc(path){|req, res|
-          auth = WEBrick::HTTPAuth::BasicAuth.new(
-            :Realm => realm, :UserDB => htpasswd,
-            :Logger => server.logger
-          )
-          auth.authenticate(req, res)
-          res.body = "hoge"
-        }
-        http = Net::HTTP.new(addr, port)
-        g = Net::HTTP::Get.new(path)
-        g.basic_auth("webrick", "supersecretpassword")
-        http.request(g){|res| assert_equal("hoge", res.body, log.call)}
-        g.basic_auth("webrick", "not super")
-        http.request(g){|res| assert_not_equal("hoge", res.body, log.call)}
-      }
-    }
-  end
-
-  def test_basic_auth3
+  def test_basic_auth_sha
     Tempfile.create("test_webrick_auth") {|tmpfile|
       tmpfile.puts("webrick:{SHA}GJYFRpBbdchp595jlh3Bhfmgp8k=")
       tmpfile.flush
@@ -94,7 +45,9 @@ def test_basic_auth3
         WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path)
       }
     }
+  end
 
+  def test_basic_auth_md5
     Tempfile.create("test_webrick_auth") {|tmpfile|
       tmpfile.puts("webrick:$apr1$IOVMD/..$rmnOSPXr0.wwrLPZHBQZy0")
       tmpfile.flush
@@ -104,40 +57,102 @@ def test_basic_auth3
     }
   end
 
-  def test_bad_username_with_control_characters
-    log_tester = lambda {|log, access_log|
-      assert_equal(2, log.length)
-      assert_match(/ERROR Basic WEBrick's realm: foo\\ebar: the user is not allowed./, log[0])
-      assert_match(/ERROR WEBrick::HTTPStatus::Unauthorized/, log[1])
-    }
-    TestWEBrick.start_httpserver({}, log_tester) {|server, addr, port, log|
-      realm = "WEBrick's realm"
-      path = "/basic_auth"
+  [nil, :crypt, :bcrypt].each do |hash_algo|
+    begin
+      case hash_algo
+      when :crypt
+        # require 'string/crypt'
+      when :bcrypt
+        require 'bcrypt'
+      end
+    rescue LoadError
+      next
+    end
 
-      Tempfile.create("test_webrick_auth") {|tmpfile|
-        tmpfile.close
-        tmp_pass = WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path)
-        tmp_pass.set_passwd(realm, "webrick", "supersecretpassword")
-        tmp_pass.set_passwd(realm, "foo", "supersecretpassword")
-        tmp_pass.flush
+    define_method(:"test_basic_auth_htpasswd_#{hash_algo}") do
+      log_tester = lambda {|log, access_log|
+        log.reject! {|line| /\A\s*\z/ =~ line }
+        pats = [
+          /ERROR Basic WEBrick's realm: webrick: password unmatch\./,
+          /ERROR WEBrick::HTTPStatus::Unauthorized/
+        ]
+        pats.each {|pat|
+          assert(!log.grep(pat).empty?, "webrick log doesn't have expected error: #{pat.inspect}")
+          log.reject! {|line| pat =~ line }
+        }
+        assert_equal([], log)
+      }
+      TestWEBrick.start_httpserver({}, log_tester) {|server, addr, port, log|
+        realm = "WEBrick's realm"
+        path = "/basic_auth2"
+
+        Tempfile.create("test_webrick_auth") {|tmpfile|
+          tmpfile.close
+          tmp_pass = WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path, password_hash: hash_algo)
+          tmp_pass.set_passwd(realm, "webrick", "supersecretpassword")
+          tmp_pass.set_passwd(realm, "foo", "supersecretpassword")
+          tmp_pass.flush
+
+          htpasswd = WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path, password_hash: hash_algo)
+          users = []
+          htpasswd.each{|user, pass| users << user }
+          assert_equal(2, users.size, log.call)
+          assert(users.member?("webrick"), log.call)
+          assert(users.member?("foo"), log.call)
+
+          server.mount_proc(path){|req, res|
+            auth = WEBrick::HTTPAuth::BasicAuth.new(
+              :Realm => realm, :UserDB => htpasswd,
+              :Logger => server.logger
+            )
+            auth.authenticate(req, res)
+            res.body = "hoge"
+          }
+          http = Net::HTTP.new(addr, port)
+          g = Net::HTTP::Get.new(path)
+          g.basic_auth("webrick", "supersecretpassword")
+          http.request(g){|res| assert_equal("hoge", res.body, log.call)}
+          g.basic_auth("webrick", "not super")
+          http.request(g){|res| assert_not_equal("hoge", res.body, log.call)}
+        }
+      }
+    end
 
-        htpasswd = WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path)
-        users = []
-        htpasswd.each{|user, pass| users << user }
-        server.mount_proc(path){|req, res|
-          auth = WEBrick::HTTPAuth::BasicAuth.new(
-            :Realm => realm, :UserDB => htpasswd,
-            :Logger => server.logger
-          )
-          auth.authenticate(req, res)
-          res.body = "hoge"
+    define_method(:"test_basic_auth_bad_username_htpasswd_#{hash_algo}") do
+      log_tester = lambda {|log, access_log|
+        assert_equal(2, log.length)
+        assert_match(/ERROR Basic WEBrick's realm: foo\\ebar: the user is not allowed\./, log[0])
+        assert_match(/ERROR WEBrick::HTTPStatus::Unauthorized/, log[1])
+      }
+      TestWEBrick.start_httpserver({}, log_tester) {|server, addr, port, log|
+        realm = "WEBrick's realm"
+        path = "/basic_auth"
+
+        Tempfile.create("test_webrick_auth") {|tmpfile|
+          tmpfile.close
+          tmp_pass = WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path, password_hash: hash_algo)
+          tmp_pass.set_passwd(realm, "webrick", "supersecretpassword")
+          tmp_pass.set_passwd(realm, "foo", "supersecretpassword")
+          tmp_pass.flush
+
+          htpasswd = WEBrick::HTTPAuth::Htpasswd.new(tmpfile.path, password_hash: hash_algo)
+          users = []
+          htpasswd.each{|user, pass| users << user }
+          server.mount_proc(path){|req, res|
+            auth = WEBrick::HTTPAuth::BasicAuth.new(
+              :Realm => realm, :UserDB => htpasswd,
+              :Logger => server.logger
+            )
+            auth.authenticate(req, res)
+            res.body = "hoge"
+          }
+          http = Net::HTTP.new(addr, port)
+          g = Net::HTTP::Get.new(path)
+          g.basic_auth("foo\ebar", "passwd")
+          http.request(g){|res| assert_not_equal("hoge", res.body, log.call) }
         }
-        http = Net::HTTP.new(addr, port)
-        g = Net::HTTP::Get.new(path)
-        g.basic_auth("foo\ebar", "passwd")
-        http.request(g){|res| assert_not_equal("hoge", res.body, log.call) }
       }
-    }
+    end
   end
 
   DIGESTRES_ = /
@@ -230,7 +245,7 @@ def test_digest_auth_int
         log.reject! {|line| pat =~ line }
       }
       assert_equal([], log)
-   }
+    }
     TestWEBrick.start_httpserver({}, log_tester) {|server, addr, port, log|
       realm = "wb auth-int realm"
       path = "/digest_auth_int"
diff --git a/test/mri/webrick/test_httpproxy.rb b/test/mri/webrick/test_httpproxy.rb
index 452e7b94b7a..a9f6f7d6104 100644
--- a/test/mri/webrick/test_httpproxy.rb
+++ b/test/mri/webrick/test_httpproxy.rb
@@ -64,6 +64,7 @@ def test_proxy
 
       req = Net::HTTP::Post.new("/")
       req.body = "post-data"
+      req.content_type = "application/x-www-form-urlencoded"
       http.request(req){|res|
         assert_equal("1.1 localhost.localdomain:#{port}", res["via"], log.call)
         assert_equal("POST / post-data", res.body, log.call)
@@ -108,6 +109,7 @@ def test_no_proxy
       assert_equal(2, request_handler_called, log.call)
 
       req = Net::HTTP::Post.new("/")
+      req.content_type = "application/x-www-form-urlencoded"
       req.body = "post-data"
       http.request(req){|res|
         assert_nil(res["via"], log.call)
@@ -118,6 +120,101 @@ def test_no_proxy
     }
   end
 
+  def test_big_bodies
+    require 'digest/md5'
+    rand_str = File.read(__FILE__)
+    rand_str.freeze
+    nr = 1024 ** 2 / rand_str.size # bigger works, too
+    exp = Digest::MD5.new
+    nr.times { exp.update(rand_str) }
+    exp = exp.hexdigest
+    TestWEBrick.start_httpserver do |o_server, o_addr, o_port, o_log|
+      o_server.mount_proc('/') do |req, res|
+        case req.request_method
+        when 'GET'
+          res['content-type'] = 'application/octet-stream'
+          if req.path == '/length'
+            res['content-length'] = (nr * rand_str.size).to_s
+          else
+            res.chunked = true
+          end
+          res.body = ->(socket) { nr.times { socket.write(rand_str) } }
+        when 'POST'
+          dig = Digest::MD5.new
+          req.body { |buf| dig.update(buf); buf.clear }
+          res['content-type'] = 'text/plain'
+          res['content-length'] = '32'
+          res.body = dig.hexdigest
+        end
+      end
+
+      http = Net::HTTP.new(o_addr, o_port)
+      IO.pipe do |rd, wr|
+        headers = {
+          'Content-Type' => 'application/octet-stream',
+          'Transfer-Encoding' => 'chunked',
+        }
+        post = Net::HTTP::Post.new('/', headers)
+        th = Thread.new { nr.times { wr.write(rand_str) }; wr.close }
+        post.body_stream = rd
+        http.request(post) do |res|
+          assert_equal 'text/plain', res['content-type']
+          assert_equal 32, res.content_length
+          assert_equal exp, res.body
+        end
+        assert_nil th.value
+      end
+
+      TestWEBrick.start_httpproxy do |p_server, p_addr, p_port, p_log|
+        http = Net::HTTP.new(o_addr, o_port, p_addr, p_port)
+        http.request_get('/length') do |res|
+          assert_equal(nr * rand_str.size, res.content_length)
+          dig = Digest::MD5.new
+          res.read_body { |buf| dig.update(buf); buf.clear }
+          assert_equal exp, dig.hexdigest
+        end
+        http.request_get('/') do |res|
+          assert_predicate res, :chunked?
+          dig = Digest::MD5.new
+          res.read_body { |buf| dig.update(buf); buf.clear }
+          assert_equal exp, dig.hexdigest
+        end
+
+        IO.pipe do |rd, wr|
+          headers = {
+            'Content-Type' => 'application/octet-stream',
+            'Content-Length' => (nr * rand_str.size).to_s,
+          }
+          post = Net::HTTP::Post.new('/', headers)
+          th = Thread.new { nr.times { wr.write(rand_str) }; wr.close }
+          post.body_stream = rd
+          http.request(post) do |res|
+            assert_equal 'text/plain', res['content-type']
+            assert_equal 32, res.content_length
+            assert_equal exp, res.body
+          end
+          assert_nil th.value
+        end
+
+        IO.pipe do |rd, wr|
+          headers = {
+            'Content-Type' => 'application/octet-stream',
+            'Transfer-Encoding' => 'chunked',
+          }
+          post = Net::HTTP::Post.new('/', headers)
+          th = Thread.new { nr.times { wr.write(rand_str) }; wr.close }
+          post.body_stream = rd
+          http.request(post) do |res|
+            assert_equal 'text/plain', res['content-type']
+            assert_equal 32, res.content_length
+            assert_equal exp, res.body
+          end
+          assert_nil th.value
+        end
+      end
+    end
+  end
+
   def make_certificate(key, cn)
     subject = OpenSSL::X509::Name.parse("/DC=org/DC=ruby-lang/CN=#{cn}")
     exts = [
@@ -133,7 +230,7 @@ def make_certificate(key, cn)
     cert.not_after = Time.now + 3600
     ef = OpenSSL::X509::ExtensionFactory.new(cert, cert)
     exts.each {|args| cert.add_extension(ef.create_extension(*args)) }
-    cert.sign(key, "sha1")
+    cert.sign(key, "sha256")
     return cert
   end if defined?(OpenSSL::SSL)
 
@@ -241,6 +338,7 @@ def test_upstream_proxy
 
         req = Net::HTTP::Post.new("/")
         req.body = "post-data"
+        req.content_type = "application/x-www-form-urlencoded"
         http.request(req){|res|
           via = res["via"].split(/,\s+/)
           assert(via.include?("1.1 localhost.localdomain:#{up_port}"), up_log.call + log.call)
@@ -285,6 +383,7 @@ def test_upstream_proxy
 
             req2 = Net::HTTP::Post.new("/")
             req2.body = "post-data"
+            req2.content_type = "application/x-www-form-urlencoded"
             http.request(req2){|res|
               assert_equal("SSL POST / post-data", res.body, up_log.call + log.call + s_log.call)
             }
diff --git a/test/mri/webrick/test_httprequest.rb b/test/mri/webrick/test_httprequest.rb
index 855ff9d4a73..592f857f656 100644
--- a/test/mri/webrick/test_httprequest.rb
+++ b/test/mri/webrick/test_httprequest.rb
@@ -237,6 +237,7 @@ def test_parse_post_params
 
   def test_chunked
     crlf = "\x0d\x0a"
+    expect = File.binread(__FILE__).freeze
     msg = <<-_end_of_message_
       POST /path HTTP/1.1
       Host: test.ruby-lang.org:8080
@@ -253,7 +254,14 @@ def test_chunked
     msg << "0" << crlf
     req = WEBrick::HTTPRequest.new(WEBrick::Config::HTTP)
     req.parse(StringIO.new(msg))
-    assert_equal(File.read(__FILE__), req.body)
+    assert_equal(expect, req.body)
+
+    # chunked req.body_reader
+    req = WEBrick::HTTPRequest.new(WEBrick::Config::HTTP)
+    req.parse(StringIO.new(msg))
+    dst = StringIO.new
+    IO.copy_stream(req.body_reader, dst)
+    assert_equal(expect, dst.string)
   end
 
   def test_forwarded
@@ -414,4 +422,11 @@ def test_bad_messages
       req.body
     }
   end
+
+  def test_eof_raised_when_line_is_nil
+    assert_raise(WEBrick::HTTPStatus::EOFError) {
+      req = WEBrick::HTTPRequest.new(WEBrick::Config::HTTP)
+      req.parse(StringIO.new(""))
+    }
+  end
 end
diff --git a/test/mri/webrick/test_httpresponse.rb b/test/mri/webrick/test_httpresponse.rb
index 24a6968582e..dc04e8a23dc 100644
--- a/test/mri/webrick/test_httpresponse.rb
+++ b/test/mri/webrick/test_httpresponse.rb
@@ -92,6 +92,30 @@ def test_prevent_response_splitting_cookie_headers_lf
       refute_match 'hack', io.string
     end
 
+<<<<<<< HEAD
+    def test_set_redirect_response_splitting
+      url = "malicious\r\nCookie: hack"
+      assert_raises(URI::InvalidURIError) do
+        res.set_redirect(WEBrick::HTTPStatus::MultipleChoices, url)
+      end
+    end
+
+    def test_set_redirect_html_injection
+      url = 'http://example.com////?a</a><head></head><body><img src=1></body>'
+      assert_raises(WEBrick::HTTPStatus::MultipleChoices) do
+        res.set_redirect(WEBrick::HTTPStatus::MultipleChoices, url)
+      end
+      res.status = 300
+      io = StringIO.new
+      res.send_response(io)
+      io.rewind
+      res = Net::HTTPResponse.read_new(Net::BufferedIO.new(io))
+      assert_equal '300', res.code
+      refute_match /<img/, io.string
+    end
+
+=======
+>>>>>>> master
     def test_304_does_not_log_warning
       res.status      = 304
       res.setup_header
diff --git a/test/mri/webrick/test_httpserver.rb b/test/mri/webrick/test_httpserver.rb
index 024c0c510fb..a6e70da7e8e 100644
--- a/test/mri/webrick/test_httpserver.rb
+++ b/test/mri/webrick/test_httpserver.rb
@@ -253,6 +253,7 @@ def test_callbacks
       server.virtual_host(WEBrick::HTTPServer.new(vhost_config))
 
       Thread.pass while server.status != :Running
+      sleep 1 if RubyVM::MJIT.enabled? # server.status behaves unexpectedly with --jit-wait
       assert_equal(1, started, log.call)
       assert_equal(0, stopped, log.call)
       assert_equal(0, accepted, log.call)
@@ -275,6 +276,38 @@ def test_callbacks
     assert_equal(stopped, 1)
   end
 
+  class CustomRequest < ::WEBrick::HTTPRequest; end
+  class CustomResponse < ::WEBrick::HTTPResponse; end
+  class CustomServer < ::WEBrick::HTTPServer
+    def create_request(config)
+      CustomRequest.new(config)
+    end
+
+    def create_response(config)
+      CustomResponse.new(config)
+    end
+  end
+
+  def test_custom_server_request_and_response
+    config = { :ServerName => "localhost" }
+    TestWEBrick.start_server(CustomServer, config){|server, addr, port, log|
+      server.mount_proc("/", lambda {|req, res|
+        assert_kind_of(CustomRequest, req)
+        assert_kind_of(CustomResponse, res)
+        res.body = "via custom response"
+      })
+      Thread.pass while server.status != :Running
+
+      Net::HTTP.start(addr, port) do |http|
+        req = Net::HTTP::Get.new("/")
+        http.request(req){|res|
+          assert_equal("via custom response", res.body)
+        }
+        server.shutdown
+      end
+    }
+  end
+
   # This class is needed by test_response_io_with_chunked_set method
   class EventManagerForChunkedResponseTest
     def initialize
@@ -435,7 +468,7 @@ def test_cntrl_in_path
     http.request(req) { |res| assert_equal('404', res.code) }
     exp = %Q(ERROR `/notexist\\n/foo' not found.\n)
     assert_equal 1, log_ary.size
-    assert log_ary[0].include?(exp)
+    assert_include log_ary[0], exp
   ensure
     s&.shutdown
     th&.join
@@ -444,7 +477,7 @@ def test_cntrl_in_path
   def test_gigantic_request_header
     log_tester = lambda {|log, access_log|
       assert_equal 1, log.size
-      assert log[0].include?('ERROR headers too large')
+      assert_include log[0], 'ERROR headers too large'
     }
     TestWEBrick.start_httpserver({}, log_tester){|server, addr, port, log|
       server.mount('/', WEBrick::HTTPServlet::FileHandler, __FILE__)
@@ -461,7 +494,7 @@ def test_gigantic_request_header
   def test_eof_in_chunk
     log_tester = lambda do |log, access_log|
       assert_equal 1, log.size
-      assert log[0].include?('ERROR bad chunk data size')
+      assert_include log[0], 'ERROR bad chunk data size'
     end
     TestWEBrick.start_httpserver({}, log_tester){|server, addr, port, log|
       server.mount_proc('/', ->(req, res) { res.body = req.body })
diff --git a/test/mri/webrick/test_server.rb b/test/mri/webrick/test_server.rb
index 4d539d0368f..5f7f3a0b580 100644
--- a/test/mri/webrick/test_server.rb
+++ b/test/mri/webrick/test_server.rb
@@ -65,6 +65,7 @@ def test_callbacks
     }
     TestWEBrick.start_server(Echo, config){|server, addr, port, log|
       true while server.status != :Running
+      sleep 1 if RubyVM::MJIT.enabled? # server.status behaves unexpectedly with --jit-wait
       assert_equal(1, started, log.call)
       assert_equal(0, stopped, log.call)
       assert_equal(0, accepted, log.call)
diff --git a/test/mri/webrick/test_utils.rb b/test/mri/webrick/test_utils.rb
index 8907789b6e7..c2b7a36e8aa 100644
--- a/test/mri/webrick/test_utils.rb
+++ b/test/mri/webrick/test_utils.rb
@@ -32,11 +32,11 @@ def test_nested_timeout_outer
     m = WEBrick::Utils
     i = 0
     assert_raise(Timeout::Error){
-      m.timeout(0.2){
-        assert_raise(Timeout::Error){ m.timeout(0.1){ i += 1; sleep } }
+      m.timeout(1){
+        assert_raise(Timeout::Error){ m.timeout(0.1){ i += 1; sleep(1) } }
         assert_not_expired(m)
         i += 1
-        sleep
+        sleep(2)
       }
     }
     assert_equal(2, i)
diff --git a/test/mri/win32ole/available_ole.rb b/test/mri/win32ole/available_ole.rb
new file mode 100644
index 00000000000..ebc9baae66f
--- /dev/null
+++ b/test/mri/win32ole/available_ole.rb
@@ -0,0 +1,41 @@
+begin
+  require 'win32ole'
+rescue LoadError
+end
+
+if defined?(WIN32OLE)
+  module AvailableOLE
+    module_function
+
+    def sysmon_available?
+      WIN32OLE_TYPE.new('System Monitor Control', 'SystemMonitor')
+      true
+    rescue
+      false
+    end
+
+    def ado_available?
+      WIN32OLE.new('ADODB.Connection')
+      true
+    rescue
+      false
+    end
+
+    def msxml_available?
+      !WIN32OLE_TYPELIB.typelibs.find { |t| t.name.start_with?('Microsoft XML') }.nil?
+    end
+
+    def event_param
+      method = if msxml_available?
+                 typelib = WIN32OLE_TYPELIB.typelibs.find { |t| t.name.start_with?('Microsoft XML') }
+                 ole_type = WIN32OLE_TYPE.new(typelib.name, 'IVBSAXContentHandler')
+                 WIN32OLE_METHOD.new(ole_type, 'startElement')
+               elsif ado_available?
+                 typelib = WIN32OLE.new('ADODB.Connection').ole_typelib
+                 ole_type = WIN32OLE_TYPE.new(typelib.name, 'Connection')
+                 WIN32OLE_METHOD.new(ole_type, 'WillConnect')
+               end
+      method && method.params[0]
+    end
+  end
+end
diff --git a/test/mri/win32ole/test_thread.rb b/test/mri/win32ole/test_thread.rb
index f1cdfe32b0f..cb34693064b 100644
--- a/test/mri/win32ole/test_thread.rb
+++ b/test/mri/win32ole/test_thread.rb
@@ -6,7 +6,7 @@
 require 'test/unit'
 
 if defined?(WIN32OLE)
-  class TestThread < Test::Unit::TestCase
+  class TestWIN32OLE_THREAD < Test::Unit::TestCase
     #
     # test for Bug #2618(ruby-core:27634)
     #
diff --git a/test/mri/win32ole/test_win32ole.rb b/test/mri/win32ole/test_win32ole.rb
index 92e97a7c6db..7dda36ce965 100644
--- a/test/mri/win32ole/test_win32ole.rb
+++ b/test/mri/win32ole/test_win32ole.rb
@@ -74,7 +74,7 @@ def test_ole_methods
 
     def test_methods
       methods = @dict1.methods
-      assert_include(methods, 'Add')
+      assert_include(methods, :Add)
     end
 
     def test_ole_func_methods
@@ -188,6 +188,8 @@ def test_s_new_exc_svr_tainted
         th.join
       }
       assert_match(/insecure object creation - `Scripting.Dictionary'/, exc.message)
+    ensure
+      $SAFE = 0
     end
 
     def test_s_new_exc_host_tainted
@@ -203,6 +205,8 @@ def test_s_new_exc_host_tainted
         th.join
       }
       assert_match(/insecure object creation - `localhost'/, exc.message)
+    ensure
+      $SAFE = 0
     end
 
     def test_s_new_DCOM
@@ -242,6 +246,8 @@ def test_s_coonect_exc_tainted
         th.join
       }
       assert_match(/insecure connection - `winmgmts:'/, exc.message)
+    ensure
+      $SAFE = 0
     end
 
     def test_invoke_accept_symbol_hash_key
diff --git a/test/mri/win32ole/test_win32ole_event.rb b/test/mri/win32ole/test_win32ole_event.rb
index 02bbeee3210..79fe9ddc721 100644
--- a/test/mri/win32ole/test_win32ole_event.rb
+++ b/test/mri/win32ole/test_win32ole_event.rb
@@ -63,11 +63,27 @@ def setup
         @sql = "SELECT * FROM __InstanceModificationEvent WITHIN 1 WHERE TargetInstance ISA 'Win32_LocalTime'"
       end
 
-      def message_loop
+      def message_loop(watch_ivar = nil)
+        if watch_ivar
+          orig_ivar = instance_variable_get(watch_ivar)
+        end
+
         2.times do
           WIN32OLE_EVENT.message_loop
           sleep 1
         end
+
+        if watch_ivar
+          # wait until event is proceeded
+          tries = 0
+          while tries < 5 && instance_variable_get(watch_ivar) == orig_ivar
+            seconds = 2 ** tries # sleep at most 31s in total
+            $stderr.puts "test_win32ole_event.rb: retrying and sleeping #{seconds}s until #{watch_ivar} is changed from #{orig_ivar.inspect}..."
+            WIN32OLE_EVENT.message_loop
+            sleep(seconds)
+            tries += 1
+          end
+        end
       end
 
       def default_handler(event, *args)
@@ -101,14 +117,17 @@ def test_s_new_loop
           message_loop
           GC.start
         end
-        assert_match(/OnObjectReady/, @event)
+
+        # @event randomly becomes "OnCompleted" here. Try to wait until it matches.
+        # https://ci.appveyor.com/project/ruby/ruby/builds/19963142/job/8gaxepksa0i3b998
+        assert_match_with_retries(/OnObjectReady/, :@event)
       end
 
       def test_on_event
         exec_notification_query_async
         ev = WIN32OLE_EVENT.new(@sws, 'ISWbemSinkEvents')
         ev.on_event {|*args| default_handler(*args)}
-        message_loop
+        message_loop(:@event)
         assert_match(/OnObjectReady/, @event)
       end
 
@@ -118,7 +137,7 @@ def test_on_event_symbol
         ev.on_event(:OnObjectReady) {|*args|
           handler1
         }
-        message_loop
+        message_loop(:@event1)
         assert_equal("handler1", @event1)
       end
 
@@ -131,6 +150,20 @@ def exec_notification_query_async
         end
         raise
       end
+
+      def assert_match_with_retries(regexp, ivarname)
+        ivar = instance_variable_get(ivarname)
+
+        tries = 0
+        while tries < 5 && !ivar.match(regexp)
+          $stderr.puts "test_win32ole_event.rb: retrying until #{ivarname} matches #{regexp} (tries: #{tries})..."
+          sleep(2 ** tries) # sleep at most 31s in total
+          ivar = instance_variable_get(ivarname)
+          tries += 1
+        end
+
+        assert_match(regexp, ivar)
+      end
     end
   end
 
@@ -395,6 +428,8 @@ def test_s_new_exc_tainted
           th.join
         }
         assert_match(/insecure event creation - `ConnectionEvents'/, exc.message)
+      ensure
+        $SAFE = 0
       end
     end
   end
diff --git a/test/mri/win32ole/test_win32ole_method.rb b/test/mri/win32ole/test_win32ole_method.rb
index 7fb43fd5426..a0e113e7f04 100644
--- a/test/mri/win32ole/test_win32ole_method.rb
+++ b/test/mri/win32ole/test_win32ole_method.rb
@@ -18,9 +18,6 @@ def setup
 
       ole_type = WIN32OLE_TYPE.new("Microsoft Scripting Runtime", "File")
       @m_file_name = WIN32OLE_METHOD.new(ole_type, "name")
-
-      ole_type = WIN32OLE_TYPE.new("Microsoft Internet Controls", "WebBrowser")
-      @m_navigate_complete = WIN32OLE_METHOD.new(ole_type, "NavigateComplete")
     end
 
     def test_initialize
@@ -81,16 +78,6 @@ def test_visible?
       assert(!@m_invoke.visible?)
     end
 
-    def test_event?
-      assert(@m_navigate_complete.event?)
-      assert(!@m_namespace.event?)
-    end
-
-    def test_event_interface
-      assert_equal("DWebBrowserEvents", @m_navigate_complete.event_interface)
-      assert_equal(nil, @m_namespace.event_interface)
-    end
-
     def test_helpstring
       assert_equal("Get special folder from ShellSpecialFolderConstants", @m_namespace.helpstring)
     end
diff --git a/test/mri/win32ole/test_win32ole_method_event.rb b/test/mri/win32ole/test_win32ole_method_event.rb
new file mode 100644
index 00000000000..6dad6ff2b47
--- /dev/null
+++ b/test/mri/win32ole/test_win32ole_method_event.rb
@@ -0,0 +1,36 @@
+begin
+  require 'win32ole'
+rescue LoadError
+end
+
+require 'test/unit'
+
+if defined?(WIN32OLE_METHOD)
+  require_relative 'available_ole'
+  class TestWIN32OLE_METHOD_EVENT < Test::Unit::TestCase
+    unless AvailableOLE.sysmon_available?
+      def test_dummy_for_skip_message
+        skip 'System Monitor Control is not available'
+      end
+    else
+      def setup
+        ole_type = WIN32OLE_TYPE.new('System Monitor Control', 'SystemMonitor')
+        @on_dbl_click = WIN32OLE_METHOD.new(ole_type, 'OnDblClick')
+        ole_type = WIN32OLE_TYPE.new('Microsoft Shell Controls And Automation', 'Shell')
+        @namespace = WIN32OLE_METHOD.new(ole_type, 'namespace')
+      end
+
+      def test_event?
+        assert(@on_dbl_click.event?)
+      end
+
+      def test_event_interface
+        assert('DISystemMonitorEvents', @on_dbl_click.event_interface)
+      end
+
+      def test_event_interface_is_nil
+        assert_equal(nil, @namespace.event_interface)
+      end
+    end
+  end
+end
diff --git a/test/mri/win32ole/test_win32ole_param.rb b/test/mri/win32ole/test_win32ole_param.rb
index 4f8104b1d10..09452d19270 100644
--- a/test/mri/win32ole/test_win32ole_param.rb
+++ b/test/mri/win32ole/test_win32ole_param.rb
@@ -9,14 +9,6 @@
   class TestWIN32OLE_PARAM < Test::Unit::TestCase
 
     def setup
-      ole_type = WIN32OLE_TYPE.new("Microsoft Internet Controls", "WebBrowser")
-      m_navigate = WIN32OLE_METHOD.new(ole_type, "Navigate")
-      m_before_navigate = WIN32OLE_METHOD.new(ole_type, "BeforeNavigate")
-      params = m_navigate.params
-      @param_url = params[0]
-      @param_flags = params[1]
-      @param_cancel = m_before_navigate.params[5]
-
       ole_type = WIN32OLE_TYPE.new("Microsoft Shell Controls And Automation", "ShellLinkObject")
       m_geticonlocation = WIN32OLE_METHOD.new(ole_type, "GetIconLocation")
       @param_pbs = m_geticonlocation.params[0]
@@ -27,7 +19,12 @@ def setup
 
       ole_type = WIN32OLE_TYPE.new("Microsoft Scripting Runtime", "FileSystemObject")
       m_copyfile = WIN32OLE_METHOD.new(ole_type, "CopyFile")
+      @param_source = m_copyfile.params[0]
       @param_overwritefiles = m_copyfile.params[2]
+
+      ole_type = WIN32OLE_TYPE.new("Microsoft Scripting Runtime", "Dictionary")
+      m_add = WIN32OLE_METHOD.new(ole_type, "Add")
+      @param_key = m_add.params[0]
     end
 
     def test_s_new
@@ -42,9 +39,6 @@ def test_s_new
       assert_raise(IndexError) {
         WIN32OLE_PARAM.new(m_copyfile, 0);
       }
-      assert_raise(IndexError) {
-        WIN32OLE_PARAM.new(m_copyfile, 0);
-      }
       param = WIN32OLE_PARAM.new(m_copyfile, 3)
       assert_equal("OverWriteFiles", param.name)
       assert_equal(WIN32OLE_PARAM, param.class)
@@ -53,54 +47,51 @@ def test_s_new
     end
 
     def test_name
-      assert_equal('URL', @param_url.name)
-      assert_equal('Flags', @param_flags.name)
-      assert_equal('Cancel', @param_cancel.name)
+      assert_equal('Source', @param_source.name)
+      assert_equal('Key', @param_key.name)
     end
 
     def test_ole_type
-      assert_equal('BSTR', @param_url.ole_type)
-      assert_equal('VARIANT', @param_flags.ole_type)
+      assert_equal('BSTR', @param_source.ole_type)
+      assert_equal('VARIANT', @param_key.ole_type)
     end
 
     def test_ole_type_detail
-      assert_equal(['BSTR'], @param_url.ole_type_detail)
-      assert_equal(['PTR', 'VARIANT'], @param_flags.ole_type_detail)
+      assert_equal(['BSTR'], @param_source.ole_type_detail)
+      assert_equal(['PTR', 'VARIANT'], @param_key.ole_type_detail)
     end
 
     def test_input?
-      assert(@param_url.input?)
-      assert(@param_cancel.input?)
-      assert(!@param_pbs.input?)
+      assert_equal(true, @param_source.input?)
+      assert_equal(false, @param_pbs.input?)
     end
 
     def test_output?
-      assert(!@param_url.output?)
-      assert(@param_cancel.output?)
-      assert(@param_pbs.output?)
+      assert_equal(false, @param_source.output?)
+      assert_equal(true, @param_pbs.output?)
     end
 
     def test_optional?
-      assert(!@param_url.optional?)
-      assert(@param_flags.optional?)
+      assert_equal(false, @param_source.optional?)
+      assert_equal(true, @param_overwritefiles.optional?)
     end
 
     def test_retval?
-      assert(!@param_url.retval?)
-      assert(@param_p.retval?)
+      assert_equal(false, @param_source.retval?)
+      assert_equal(true, @param_p.retval?)
     end
 
     def test_default
-      assert_equal(nil, @param_url.default)
+      assert_equal(nil, @param_source.default)
       assert_equal(true, @param_overwritefiles.default)
     end
 
     def test_to_s
-      assert_equal(@param_url.name, @param_url.to_s)
+      assert_equal(@param_source.name, @param_source.to_s)
     end
 
     def test_inspect
-      assert_equal("#<WIN32OLE_PARAM:URL>", @param_url.inspect)
+      assert_equal("#<WIN32OLE_PARAM:Source>", @param_source.inspect)
       assert_equal("#<WIN32OLE_PARAM:OverWriteFiles=true>", @param_overwritefiles.inspect)
     end
   end
diff --git a/test/mri/win32ole/test_win32ole_param_event.rb b/test/mri/win32ole/test_win32ole_param_event.rb
new file mode 100644
index 00000000000..64812e567db
--- /dev/null
+++ b/test/mri/win32ole/test_win32ole_param_event.rb
@@ -0,0 +1,30 @@
+begin
+  require 'win32ole'
+rescue LoadError
+end
+
+require 'test/unit'
+
+if defined?(WIN32OLE_PARAM)
+  require_relative 'available_ole'
+
+  class TestWIN32OLE_PARAM_EVENT < Test::Unit::TestCase
+    if AvailableOLE.msxml_available? || AvailableOLE.ado_available?
+      def setup
+        @param = AvailableOLE.event_param
+      end
+
+      def test_input?
+        assert_equal(true, @param.input?)
+      end
+
+      def test_output?
+        assert_equal(true, @param.output?)
+      end
+    else
+      def test_dummy_for_skip_message
+        skip 'ActiveX Data Object Library and MS XML not found'
+      end
+    end
+  end
+end
diff --git a/test/mri/win32ole/test_win32ole_record.rb b/test/mri/win32ole/test_win32ole_record.rb
index 654c747711c..7d6c3fb4af8 100644
--- a/test/mri/win32ole/test_win32ole_record.rb
+++ b/test/mri/win32ole/test_win32ole_record.rb
@@ -67,14 +67,10 @@
 
 if defined?(WIN32OLE_RECORD)
   def rbcomtest_exist?
-    exist = false
-    begin
-      obj = WIN32OLE.new(PROGID_RBCOMTEST)
-      exist = true
-    rescue WIN32OLERuntimeError
-      exist = false
-    end
-    exist
+    WIN32OLE.new(PROGID_RBCOMTEST)
+    true
+  rescue WIN32OLERuntimeError
+    false
   end
 
   class TestWIN32OLE_RECORD_BY_RBCOMTEST < Test::Unit::TestCase
@@ -102,13 +98,13 @@ def test_s_new_from_win32ole_typelib
 
       def test_s_new_raise
         assert_raise(WIN32OLERuntimeError) {
-          rec = WIN32OLE_RECORD.new('NonExistRecordName', @obj)
+          WIN32OLE_RECORD.new('NonExistRecordName', @obj)
         }
         assert_raise(ArgumentError) {
-          rec = WIN32OLE_RECORD.new
+          WIN32OLE_RECORD.new
         }
         assert_raise(ArgumentError) {
-          rec = WIN32OLE_RECORD.new('NonExistRecordName')
+          WIN32OLE_RECORD.new('NonExistRecordName')
         }
       end
 
diff --git a/test/mri/win32ole/test_win32ole_type.rb b/test/mri/win32ole/test_win32ole_type.rb
index ce11e0235ff..485b390d5cc 100644
--- a/test/mri/win32ole/test_win32ole_type.rb
+++ b/test/mri/win32ole/test_win32ole_type.rb
@@ -175,62 +175,12 @@ def test_implemented_ole_types
       assert_instance_of(Array, ole_types)
       assert_equal(1, ole_types.size)
       assert_match(/^IShellDispatch\d{0,1}$/, ole_types[0].name)
-
-      ie_otype = WIN32OLE_TYPE.new("Microsoft Internet Controls", "InternetExplorer")
-      ole_types = ie_otype.implemented_ole_types
-      assert_equal(4, ole_types.size)
-      otype = ole_types.select{|t| t.name == "IWebBrowser2"}
-      assert_equal(1, otype.size)
-      otype = ole_types.select{|t| t.name == "IWebBrowserApp"}
-      assert_equal(1, otype.size)
-      otype = ole_types.select{|t| t.name == "DWebBrowserEvents2"}
-      assert_equal(1, otype.size)
-      otype = ole_types.select{|t| t.name == "DWebBrowserEvents"}
-      assert_equal(1, otype.size)
-    end
-
-    def test_default_ole_types
-      ie_otype = WIN32OLE_TYPE.new("Microsoft Internet Controls", "InternetExplorer")
-      ole_types = ie_otype.default_ole_types
-      otype = ole_types.select{|t| t.name == "IWebBrowser2"}
-      assert_equal(1, otype.size)
-      otype = ole_types.select{|t| t.name == "IWebBrowserApp"}
-      assert_equal(0, otype.size)
-      otype = ole_types.select{|t| t.name == "DWebBrowserEvents2"}
-      assert_equal(1, otype.size)
-      otype = ole_types.select{|t| t.name == "DWebBrowserEvents"}
-      assert_equal(0, otype.size)
-    end
-
-    def test_source_ole_types
-      ie_otype = WIN32OLE_TYPE.new("Microsoft Internet Controls", "InternetExplorer")
-      ole_types = ie_otype.source_ole_types
-      otype = ole_types.select{|t| t.name == "IWebBrowser2"}
-      assert_equal(0, otype.size)
-      otype = ole_types.select{|t| t.name == "IWebBrowserApp"}
-      assert_equal(0, otype.size)
-      otype = ole_types.select{|t| t.name == "DWebBrowserEvents2"}
-      assert_equal(1, otype.size)
-      otype = ole_types.select{|t| t.name == "DWebBrowserEvents"}
-      assert_equal(1, otype.size)
-    end
-
-    def test_default_event_sources
-      ie_otype = WIN32OLE_TYPE.new("Microsoft Internet Controls", "InternetExplorer")
-      ole_types = ie_otype.default_event_sources
-      otype = ole_types.select{|t| t.name == "IWebBrowser2"}
-      assert_equal(0, otype.size)
-      otype = ole_types.select{|t| t.name == "IWebBrowserApp"}
-      assert_equal(0, otype.size)
-      otype = ole_types.select{|t| t.name == "DWebBrowserEvents2"}
-      assert_equal(1, otype.size)
-      otype = ole_types.select{|t| t.name == "DWebBrowserEvents"}
-      assert_equal(0, otype.size)
     end
 
     def test_inspect
       assert_equal("#<WIN32OLE_TYPE:Shell>", @ole_type.inspect)
     end
+
     # WIN32OLE_TYPE.typelibs will be obsoleted.
     def test_s_typelibs
       tlibs = WIN32OLE_TYPE.typelibs.sort
diff --git a/test/mri/win32ole/test_win32ole_type_event.rb b/test/mri/win32ole/test_win32ole_type_event.rb
new file mode 100644
index 00000000000..ad2de54e59f
--- /dev/null
+++ b/test/mri/win32ole/test_win32ole_type_event.rb
@@ -0,0 +1,44 @@
+# frozen_string_literal: false
+begin
+  require 'win32ole'
+rescue LoadError
+end
+
+require 'test/unit'
+
+if defined?(WIN32OLE_TYPE)
+  require_relative 'available_ole'
+
+  class TestWIN32OLE_TYPE_EVENT < Test::Unit::TestCase
+    unless AvailableOLE.sysmon_available?
+      def test_dummy_for_skip_message
+        skip 'System Monitor Control is not available'
+      end
+    else
+
+      def setup
+        @ole_type = WIN32OLE_TYPE.new('System Monitor Control', 'SystemMonitor')
+      end
+
+      def test_implemented_ole_types
+        ole_types = @ole_type.implemented_ole_types.map(&:name).sort
+        assert_equal(['DISystemMonitor', 'DISystemMonitorEvents', 'ISystemMonitor'], ole_types)
+      end
+
+      def test_default_ole_types
+        ole_types = @ole_type.default_ole_types.map(&:name).sort
+        assert_equal(['DISystemMonitor', 'DISystemMonitorEvents'], ole_types)
+      end
+
+      def test_source_ole_types
+        ole_types = @ole_type.source_ole_types.map(&:name)
+        assert_equal(['DISystemMonitorEvents'], ole_types)
+      end
+
+      def test_default_event_sources
+        event_sources = @ole_type.default_event_sources.map(&:name)
+        assert_equal(['DISystemMonitorEvents'], event_sources)
+      end
+    end
+  end
+end
diff --git a/test/mri/zlib/test_zlib.rb b/test/mri/zlib/test_zlib.rb
index c464bb214ff..90eaa87088c 100644
--- a/test/mri/zlib/test_zlib.rb
+++ b/test/mri/zlib/test_zlib.rb
@@ -621,9 +621,9 @@ def test_path
         gz.close
 
         sio = StringIO.new(s)
-        Zlib::GzipReader.new(sio) do |f|
-          assert_raise(NoMethodError) { f.path }
-        end
+        gz = Zlib::GzipReader.new(sio)
+        assert_raise(NoMethodError) { gz.path }
+        gz.close
       }
     end
   end
@@ -1081,6 +1081,23 @@ def test_double_close
         assert_nothing_raised { w.close }
       }
     end
+
+    def test_zlib_writer_buffered_write
+      bug15356 = '[ruby-core:90346] [Bug #15356]'.freeze
+      fixes = 'r61631 (commit a55abcc0ca6f628fc05304f81e5a044d65ab4a68)'.freeze
+      ary = []
+      def ary.write(*args)
+        self.concat(args)
+      end
+      gz = Zlib::GzipWriter.new(ary)
+      gz.write(bug15356)
+      gz.write("\n")
+      gz.write(fixes)
+      gz.close
+      assert_not_predicate ary, :empty?
+      exp = [ bug15356, fixes ]
+      assert_equal exp, Zlib.gunzip(ary.join('')).split("\n")
+    end
   end
 
   class TestZlib < Test::Unit::TestCase
@@ -1188,7 +1205,9 @@ def test_gzip
     def test_gunzip
       src = %w[1f8b08000000000000034bcbcf07002165738c03000000].pack("H*")
       assert_equal 'foo', Zlib.gunzip(src.freeze)
+    end
 
+    def test_gunzip_errors
       src = %w[1f8b08000000000000034bcbcf07002165738c03000001].pack("H*")
       assert_raise(Zlib::GzipFile::LengthError){ Zlib.gunzip(src) }
 
